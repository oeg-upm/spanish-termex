{
    "id": "H-25",
    "original_text": "Term Feedback for Information Retrieval with Language Models Bin Tan† , Atulya Velivelli‡ , Hui Fang† , ChengXiang Zhai† Dept. of Computer Science† , Dept. of Electrical and Computer Engineering‡ University of Illinois at Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.edu ABSTRACT In this paper we study term-based feedback for information retrieval in the language modeling approach. With term feedback a user directly judges the relevance of individual terms without interaction with feedback documents, taking full control of the query expansion process. We propose a cluster-based method for selecting terms to present to the user for judgment, as well as effective algorithms for constructing refined query language models from user term feedback. Our algorithms are shown to bring significant improvement in retrieval accuracy over a non-feedback baseline, and achieve comparable performance to relevance feedback. They are helpful even when there are no relevant documents in the top. Categories and Subject Descriptors H.3.3 [Information Search and Retrieval]: Retrieval models General Terms Algorithms 1. INTRODUCTION In the language modeling approach to information retrieval, feedback is often modeled as estimating an improved query model or relevance model based on a set of feedback documents [25, 13]. This is in line with the traditional way of doing relevance feedback - presenting a user with documents/passages for relevance judgment and then extracting terms from the judged documents or passages to expand the initial query. It is an indirect way of seeking users assistance for query model construction, in the sense that the refined query model (based on terms) is learned through feedback documents/passages, which are high-level structures of terms. It has the disadvantage that irrelevant terms, which occur along with relevant ones in the judged content, may be erroneously used for query expansion, causing undesired effects. For example, for the TREC query Hubble telescope achievements, when a relevant document talks more about the telescopes repair than its discoveries, irrelevant terms such as spacewalk can be added into the modified query. We can consider a more direct way to involve a user in query model improvement, without an intermediary step of document feedback that can introduce noise. The idea is to present a (reasonable) number of individual terms to the user and ask him/her to judge the relevance of each term or directly specify their probabilities in the query model. This strategy has been discussed in [15], but to our knowledge, it has not been seriously studied in existing language modeling literature. Compared to traditional relevance feedback, this term-based approach to interactive query model refinement has several advantages. First, the user has better control of the final query model through direct manipulation of terms: he/she can dictate which terms are relevant, irrelevant, and possibly, to what degree. This avoids the risk of bringing unwanted terms into the query model, although sometimes the user introduces low-quality terms. Second, because a term takes less time to judge than a documents full text or summary, and as few as around 20 presented terms can bring significant improvement in retrieval performance (as we will show later), term feedback makes it faster to gather user feedback. This is especially helpful for interactive adhoc search. Third, sometimes there are no relevant documents in the top N of the initially retrieved results if the topic is hard. This is often true when N is constrained to be small, which arises from the fact that the user is unwilling to judge too many documents. In this case, relevance feedback is useless, as no relevant document can be leveraged on, but term feedback is still often helpful, by allowing relevant terms to be picked from irrelevant documents. During our participation in the TREC 2005 HARD Track and continued study afterward, we explored how to exploit term feedback from the user to construct improved query models for information retrieval in the language modeling approach. We identified two key subtasks of term-based feedback, i.e., pre-feedback presentation term selection and post-feedback query model construction, with effective algorithms developed for both. We imposed a secondary cluster structure on terms and found that a cluster view sheds additional insight into the users information need, and provides a good way of utilizing term feedback. Through experiments we found that term feedback improves significantly over the nonfeedback baseline, even though the user often makes mistakes in relevance judgment. Among our algorithms, the one with best retrieval performance is TCFB, the combination of TFB, the direct term feedback algorithm, and CFB, the cluster-based feedback algorithm. We also varied the number of feedback terms and observed reasonable improvement even at low numbers. Finally, by comparing term feedback with document-level feedback, we found it to be a viable alternative to the latter with competitive retrieval performance. The rest of the paper is organized as follows. Section 2 discusses some related work. Section 4 outlines our general approach to term feedback. We present our method for presentation term selection in Section 3 and algorithms for query model construction in Section 5. The experiment results are given in Section 6. Section 7 concludes this paper. 2. RELATED WORK Relevance feedback[17, 19] has long been recognized as an effective method for improving retrieval performance. Normally, the top N documents retrieved using the original query are presented to the user for judgment, after which terms are extracted from the judged relevant documents, weighted by their potential of attracting more relevant documents, and added into the query model. The expanded query usually represents the users information need better than the original one, which is often just a short keyword query. A second iteration of retrieval using this modified query usually produces significant increase in retrieval accuracy. In cases where true relevance judgment is unavailable and all top N documents are assumed to be relevant, it is called blind or pseudo feedback[5, 16] and usually still brings performance improvement. Because document is a large text unit, when it is used for relevance feedback many irrelevant terms can be introduced into the feedback process. To overcome this, passage feedback is proposed and shown to improve feedback performance[1, 23]. A more direct solution is to ask the user for their relevance judgment of feedback terms. For example, in some relevance feedback systems such as [12], there is an interaction step that allows the user to add or remove expansion terms after they are automatically extracted from relevant documents. This is categorized as interactive query expansion, where the original query is augmented with user-provided terms, which can come from direct user input (free-form text or keywords)[22, 7, 10] or user selection of system-suggested terms (using thesauri[6, 22] or extracted from feedback documents[6, 22, 12, 4, 7]). In many cases term relevance feedback has been found to effectively improve retrieval performance[6, 22, 12, 4, 10]. For example, the study in [12] shows that the user prefers to have explicit knowledge and direct control of which terms are used for query expansion, and the penetrable interface that provides this freedom is shown to perform better than other interfaces. However, in some other cases there is no significant benefit[3, 14], even if the user likes interacting with expansion terms. In a simulated study carried out in [18], the author compares the retrieval performance of interactive query expansion and automatic query expansion with a simulated study, and suggests that the potential benefits of the former can be hard to achieve. The user is found to be not good at identifying useful terms for query expansion, when a simple term presentation interface is unable to provide sufficient semantic context of the feedback terms. Our work differs from the previous ones in two important aspects. First, when we choose terms to present to the user for relevance judgment, we not only consider single-term value (e.g., the relative frequency of a term in the top documents, which can be measured by metrics such as Robertson Selection Value and Simplified Kullback-Leibler Distance as listed in [24]), but also examine the cluster structure of the terms, so as to produce a balanced coverage of the different topic aspects. Second, with the language modelling framework, we allow an elaborate construction of the updated query model, by setting different probabilities for different terms based on whether it is a query term, its significance in the top documents, and its cluster membership. Although techniques for adjusting query term weights exist for vector space models[17] and probablistic relevance models[9], most of the aforementioned works do not use them, choosing to just append feedback terms to the original query (thus using equal weights for them), which can lead to poorer retrieval performance. The combination of the two aspects allows our method to perform much better than the baseline. The usual way for feedback term presentation is just to display the terms in a list. There have been some works on alternative user interfaces. [8] arranges terms in a hierarchy, and [11] compares three different interfaces, including terms + checkboxes, terms + context (sentences) + checkboxes, sentences + input text box. In both studies, however, there is no significant performance difference. In our work we adopt the simplest approach of terms + checkboxes. We focus on term presentation and query model construction from feedback terms, and believe using contexts to improve feedback term quality should be orthogonal to our method. 3. GENERAL APPROACH We follow the language modeling approach, and base our method on the KL-divergence retrieval model proposed in [25]. With this model, the retrieval task involves estimating a query language model θq from a given query, a document language model θd from each document, and calculating their KL-divergence D(θq||θd), which is then used to score the documents. [25] treats relevance feedback as a query model re-estimation problem, i.e., computing an updated query model θq given the original query text and the extra evidence carried by the judged relevant documents. We adopt this view, and cast our task as updating the query model from user term feedback. There are two key subtasks here: First, how to choose the best terms to present to the user for judgment, in order to gather maximal evidence about the users information need. Second, how to compute an updated query model based on this term feedback evidence, so that it captures the users information need and translates into good retrieval performance. 4. PRESENTATION TERM SELECTION Proper selection of terms to be presented to the user for judgment is crucial to the success of term feedback. If the terms are poorly chosen and there are few relevant ones, the user will have a hard time looking for useful terms to help clarify his/her information need. If the relevant terms are plentiful, but all concentrate on a single aspect of the query topic, then we will only be able to get feedback on that aspect and missing others, resulting in a breadth loss in retrieved results. Therefore, it is important to carefully select presentation terms to maximize expected gain from user feedback, i.e., those that can potentially reveal most evidence of the users information need. This is similar to active feedback[21], which suggests that a retrieval system should actively probe the users information need, and in the case of relevance feedback, the feedback documents should be chosen to maximize learning benefits (e.g. diversely so as to increase coverage). In our approach, the top N documents from an initial retrieval using the original query form the source of feedback terms: all terms that appear in them are considered candidates to present to the user. These documents serve as pseudo-feedback, since they provide a much richer context than the original query (usually very short), while the user is not asked to judge their relevance. Due to the latter reason, it is possible to make N quite large (e.g., in our experiments we set N = 60) to increase its coverage of different aspects in the topic. The simplest way of selecting feedback terms is to choose the most frequent M terms from the N documents. This method, however, has two drawbacks. First, a lot of common noisy terms will be selected due to their high frequencies in the document collection, unless a stop-word list is used for filtering. Second, the presentation list will tend to be filled by terms from major aspects of the topic; those from a minor aspect are likely to be missed due to their relatively low frequencies. We solve the above problems by two corresponding measures. First, we introduce a background model θB that is estimated from collection statistics and explains the common terms, so that they are much less likely to appear in the presentation list. Second, the terms are selected from multiple clusters in the pseudo-feedback documents, to ensure sufficient representation of different aspects of the topic. We rely on the mixture multinomial model, which is used for theme discovery in [26]. Specifically, we assume the N documents contain K clusters {Ci| i = 1, 2, · · · K}, each characterized by a multinomial word distribution (also known as unigram language model) θi and corresponding to an aspect of the topic. The documents are regarded as sampled from a mixture of K + 1 components, including the K clusters and the background model: p(w|d) = λBp(w|θB) + (1 − λB) K i=1 πd,ip(w|θi) where w is a word, λB is the mixture weight for the background model θB, and πd,i is the document-specific mixture weight for the i-th cluster model θi. We then estimate the cluster models by maximizing the probability of the pseudo-feedback documents being generated from the multinomial mixture model: log p(D|Λ) = d∈D w∈V c(w; d) log p(w|d) where D = {di| i = 1, 2, · · · N} is the set of the N documents, V is the vocabulary, c(w; d) is ws frequency in d and Λ = {θi| i = 1, 2, · · · K} ∪ {πdij | i = 1, 2, · · · N, j = 1, 2, · · · K} is the set of model parameters to estimate. The cluster models can be efficiently estimated using the Expectation-Maximization (EM) algorithm. For its details, we refer the reader to [26]. Table 1 shows the cluster models for TREC query Transportation tunnel disasters (K = 3). Note that only the middle cluster is relevant. Table 1: Cluster models for topic 363 Transportation tunnel disasters Cluster 1 Cluster 2 Cluster 3 tunnel 0.0768 tunnel 0.0935 tunnel 0.0454 transport 0.0364 fire 0.0295 transport 0.0406 traffic 0.0206 truck 0.0236 toll 0.0166 railwai 0.0186 french 0.0220 amtrak 0.0153 harbor 0.0146 smoke 0.0157 train 0.0129 rail 0.0140 car 0.0154 airport 0.0122 bridg 0.0139 italian 0.0152 turnpik 0.0105 kilomet 0.0136 firefight 0.0144 lui 0.0095 truck 0.0133 blaze 0.0127 jersei 0.0093 construct 0.0131 blanc 0.0121 pass 0.0087 · · · · · · · · · From each of the K estimated clusters, we choose the L = M/K terms with highest probabilities to form a total of M presentation terms. If a term happens to be in top L in multiple clusters, we assign it to the cluster where it has highest probability and let the other clusters take one more term as compensation. We also filter out terms in the original query text because they tend to always be relevant when the query is short. The selected terms are then presented to the user for judgment. A sample (completed) feedback form is shown in Figure 1. In this study we only deal with binary judgment: a presented term is by default unchecked, and a user may check it to indicate relevance. We also do not explicitly exploit negative feedback (i.e., penalizing irrelevant terms), because with binary feedback an unchecked term is not necessarily irrelevant (maybe the user is unsure about its relevance). We could ask the user for finer judgment (e.g., choosing from highly relevant, somewhat relevant, do not know, somewhat irrelevant and highly irrelevant), but binary feedback is more compact, taking less space to display and less user effort to make judgment. 5. ESTIMATING QUERY MODELS FROM TERM FEEDBACK In this section, we present several algorithms for exploiting term feedback. The algorithms take as input the original query q, the clusters {θi} as generated by the theme discovery algorithm, the set of feedback terms T and their relevance judgment R, and outputs an updated query language model θq that makes best use of the feedback evidence to capture the users information need. First we describe our notations: • θq: The original query model, derived from query terms only: p(w|θq) = c(w; q) |q| where c(w; q) is the count of w in q, and |q| = w∈q c(w; q) is the query length. • θq : The updated query model which we need to estimate from term feedback. • θi (i = 1, 2, . . . K): The unigram language model of cluster Ci, as estimated using the theme discovery algorithm. • T = {ti,j} (i = 1 . . . K, j = 1 . . . L): The set of terms presented to the user for judgment. ti,j is the j-th term chosen from cluster Ci. • R = {δw|w ∈ T}: δw is an indicator variable that is 1 if w is judged relevant or 0 otherwise. 5.1 TFB (Direct Term Feedback) This is a straight-forward form of term feedback that does not involve any secondary structure. We give a weight of 1 to terms judged relevant by the user, a weight of μ to query terms, zero weight to other terms, and then apply normalization: p(w|θq ) = δw + μ c(w; q) w ∈T δw + μ|q| where w ∈T δw is the total number of terms that are judged relevant. We call this method TFB (direct Term FeedBack). If we let μ = 1, this approach is equivalent to appending the relevant terms after the original query, which is what standard query expansion (without term reweighting) does. If we set μ > 1, we are putting more emphasis on the query terms than the checked ones. Note that the result model will be more biased toward θq if the original query is long or the user feedback is weak, which makes sense, as we can trust more on the original query in either case. Figure 1: Filled clarification form for Topic 363 363 transportation tunnel disasters Please select all terms that are relevant to the topic. traffic railway harbor rail bridge kilometer construct swiss cross link kong hong river project meter shanghai fire truck french smoke car italian firefights blaze blanc mont victim franc rescue driver chamonix emerge toll amtrak train airport turnpike lui jersey pass rome z center electron road boston speed bu submit 5.2 CFB (Cluster Feedback) Here we exploit the cluster structure that played an important role when we selected the presentation terms. The clusters represent different aspects of the query topic, each of which may or may not be relevant. If we are able to identify the relevant clusters, we can combine them to generate a query model that is good at discovering documents belonging to these clusters (instead of the irrelevant ones). We could ask the user to directly judge the relevance of a cluster after viewing representative terms in that cluster, but this would sometimes be a difficult task for the user, who has to guess the semantics of a cluster via its set of terms, which may not be well connected to one another due to a lack of context. Therefore, we propose to learn cluster feedback indirectly, inferring the relevance of a cluster through the relevance of its feedback terms. Because each cluster has an equal number of terms presented to the user, the simplest measure of a clusters relevance is the number of terms that are judged relevant in it. Intuitively, the more terms are marked relevant in a cluster, the closer the cluster is to the query topic, and the more the cluster should participate in query modification. If we combine the cluster models using weights determined this way and then interpolate with the original query model, we get the following formula for query updating, which we call CFB (Cluster FeedBack): p(w|θq ) = λp(w|θq) + (1 − λ) K i=1 L j=1 δti,j K k=1 L j=1 δtk,j p(w|θi) where L j=1 δti,j is the number of relevant terms in cluster Ci, and K k=1 L j=1 δtk,j is the total number of relevant terms. We note that when there is only one cluster (K = 1), the above formula degenerates to p(w|θq ) = λp(w|θq) + (1 − λ)p(w|θ1) which is merely pseudo-feedback of the form proposed in [25]. 5.3 TCFB (Term-cluster Feedback) TFB and CFB both have their drawbacks. TFB assigns non-zero probabilities to the presented terms that are marked relevant, but completely ignores (a lot more) others, which may be left unchecked due to the users ignorance, or simply not included in the presentation list, but we should be able to infer their relevance from the checked ones. For example, in Figure 1, since as many as 5 terms in the middle cluster (the third and fourth columns) are checked, we should have high confidence in the relevance of other terms in that cluster. CFB remedies TFBs problem by treating the terms in a cluster collectively, so that unchecked/unpresented terms receive weights when presented terms in their clusters are judged as relevant, but it does not distinguish which terms in a cluster are presented or judged. Intuitively, the judged relevant terms should receive larger weights because they are explicitly indicated as relevant by the user. Therefore, we try to combine the two methods, hoping to get the best out of both. We do this by interpolating the TFB model with the CFB model, and call it TCFB: p(w|θq ) = αp(w|θqT F B ) + (1 − α)p(w|θqCF B ) 6. EXPERIMENTS In this section, we describe our experiment results. We first describe our experiment setup and present an overview of various methods performance. Then we discuss the effects of varying the parameter setting in the algorithms, as well as the number of presentation terms. Next we analyze user term feedback behavior and its relation to retrieval performance. Finally we compare term feedback to relevance feedback and show that it has its particular advantage. 6.1 Experiment Setup and Basic Results We took the opportunity of TREC 2005 HARD Track[2] for the evaluation of our algorithms. The tracks used the AQUAINT collection, a 3GB corpus of English newswire text. The topics included 50 ones previously known to be hard, i.e. with low retrieval performance. It is for these hard topics that user feedback is most helpful, as it can provide information to disambiguate the queries; with easy topics the user may be unwilling to spend efforts for feedback if the automatic retrieval results are good enough. Participants of the track were able to submit custom-designed clarification forms (CF) to solicit feedback from human assessors provided by Table 2: Retrieval performance for different methods and CF types. The last row is the percentage of MAP improvement over the baseline. The parameter settings μ = 4, λ = 0.1, α = 0.3 are near optimal. Baseline TFB1C TFB3C TFB6C CFB1C CFB3C CFB6C TCFB1C TCFB3C TCFB6C MAP 0.219 0.288 0.288 0.278 0.254 0.305 0.301 0.274 0.309 0.304 Pr@30 0.393 0.467 0.475 0.457 0.399 0.480 0.473 0.431 0.491 0.473 RR 4339 4753 4762 4740 4600 4907 4872 4767 4947 4906 % 0% 31.5% 31.5% 26.9% 16.0% 39.3% 37.4% 25.1% 41.1% 38.8% Table 3: MAP variation with the number of presented terms. # terms TFB1C TFB3C TFB6C CFB3C CFB6C TCFB3C TCFB6C 6 0.245 0.240 0.227 0.279 0.279 0.281 0.274 12 0.261 0.261 0.242 0.299 0.286 0.297 0.281 18 0.275 0.274 0.256 0.301 0.282 0.300 0.286 24 0.276 0.281 0.265 0.303 0.292 0.305 0.292 30 0.280 0.285 0.270 0.304 0.296 0.307 0.296 36 0.282 0.288 0.272 0.307 0.297 0.309 0.297 42 0.283 0.288 0.275 0.306 0.298 0.309 0.300 48 0.288 0.288 0.278 0.305 0.301 0.309 0.303 NIST. We designed three sets of clarification forms for term feedback, differing in the choice of K, the number of clusters, and L, the number of presented terms from each cluster. They are: 1× 48, a big cluster with 48 terms, 3 × 16, 3 clusters with 16 terms each, and 6 × 8, 6 clusters with 8 terms each. The total number of presented terms (M) is fixed at 48, so by comparing the performance of different types of clarification forms we can know the effects of different degree of clustering. For each topic, an assessor would complete the forms ordered by 6 × 8, 1 × 48 and 3 × 16, spending up to three minutes on each form. The sample clarification form shown in Figure 1 is of type 3 × 16. It is a simple and compact interface in which the user can check relevant terms. The form is self-explanatory; there is no need for extra user training on how to use it. Our initinal queries are constructed only using the topic title descriptions, which are on average 2.7 words in length. As our baseline we use the KL divergence retrieval method implemented in the Lemur Toolkit1 with 5 pseudo-feedback documents. We stem the terms, choose Dirichlet smoothing with a prior of 2000, and truncate query language models to 50 terms (these settings are used throughout the experiments). For all other parameters we use Lemurs default settings. The baseline turns out to perform above average among the track participants. After an initial run using this baseline retrieval method, we take the top 60 documents for each topic and apply the theme discovery algorithm to output the clusters (1, 3, or 6 of them), based on which we generate clarification forms. After user feedback is received, we run the term feedback algorithms (TFB, CFB or TCFB) to estimate updated query models, which are then used for a second iteration of retrieval. We evaluate the different retrieval methods performance on their rankings of the top 1000 documents. The evaluation metrics we adopt include mean average (non-interpolated) precision (MAP), precision at top 30 (Pr@30) and total relevant retrieved (RR). Table 2 shows the performance of various methods and configurations of K × L. The suffixes (1C, 3C, 6C) after TFB,CFB,TCFB stand for the number of clusters (K). For example, TCFB3C means the TCFB method on the 3 × 16 clarification forms. From Table 2 we can make the following observations: 1 http://www.lemurproject.com 1. All methods perform considerably better than the pseudofeedback baseline, with TCFB3C achieving a highest 41.1% improvement in MAP, indicating significant contribution of term feedback for clarification of the users information need. In other words, term feedback is truly helpful for improving retrieval accuracy. 2. For TFB, the performance is almost equal on the 1 × 48 and 3 × 16 clarification forms in terms of MAP (although the latter is slightly better in Pr@30 and RR), and a little worse on the 6 × 8 ones. 3. Both CFB3C and CFB6C perform better than their TFB counterparts in all three metrics, suggesting that feedback on a secondary cluster structure is indeed beneficial. CFB1C is actually worse because it cannot adjust the weight of its (single) cluster from term feedback and it is merely pseudofeedback. 4. Although TCFB is just a simple mixture of TFB and CFB by interpolation, it is able to outperform both. This supports our speculation that TCFB overcomes the drawbacks of TFB (paying attention only to checked terms) and CFB (not distinguishing checked and unchecked terms in a cluster). Except for TCFB6C v.s. CFB6C, the performance advantage of TCFB over TFB/CFB is significant at p < 0.05 using the Wilcoxon signed rank test. This is not true in the case of TFB v.s. CFB, each of which is better than the other in nearly half of the topics. 6.2 Reduction of Presentation Terms In some situations we may have to reduce the number of presentation terms due to limits in display space or user feedback efforts. It is interesting to know whether our algorithms performance deteriorates when the user is presented with fewer terms. Because the presentation terms within each cluster are generated in decreasing order of their frequencies, the presentation list forms a subset of the original one if its size is reduced2 . Therefore, we can easily simulate what happens when the number of presentation terms decreases 2 There are complexities arising from terms appearing in top L of multiple clusters, but these are exceptions from M to M : we will keep all judgments of the top L = M /K terms in each cluster and discard those of others. Table 3 shows the performance of various algorithms as the number of presentation terms ranges from 6 to 48. We find that the performance of TFB is more susceptible to presentation term reduction than that of CFB or TCFB. For example, at 12 terms the MAP of TFB3C is 90.6% of that at 48 terms, while the numbers for CFB3C and TCFB3C are 98.0% and 96.1% respectively. We conjecture the reason to be that while TFBs performance heavily depends on how many good terms are chosen for query expansion, CFB only needs a rough estimate of cluster weights to work. Also, the 3 × 16 clarification forms seem to be more robust than the 6 × 8 ones: at 12 terms the MAP of TFB6C is 87.1% of that at 48 terms, lower than 90.6% for TFB3C. Similarly, for CFB it is 95.0% against 98.0%. This is natual, as for a large cluster number of 6, it is easier to get into the situation where each cluster gets too few presentation terms to make topic diversification useful. Overall, we are surprised to see that the algorithms are still able to perform reasonably well when the number of presentation terms is small. For example, at only 12 terms CFB3C (the clarification form is of size 3 × 4) can still improve 36.5% over the baseline, dropping slightly from 39.3% at 48 terms. 6.3 User Feedback Analysis In this part we study several aspects of users term feedback behavior, and whether they are connected to retrieval performance. Figure 2: Clarification form completion time distributions 0−30 30−60 60−90 90−120 120−150 150−180 0 5 10 15 20 25 30 35 completion time (seconds) #topics 1×48 3×16 6×8 Figure 2 shows the distribution of time needed to complete a clarification form3 . We see that the user is usually able to finish term feedback within a reasonably short amount of time: for more than half of the topics the clarification form is completed in just 1 minute, and only a small fraction of topics (less than 10% for 1 × 48 and 3 × 16) take more than 2 minutes. This suggests that term feedback is suitable for interactive ad-hoc retrieval, where a user usually does not want to spend too much time on providing feedback. We find that a user often makes mistakes when judging term relevance. Sometimes a relevant term may be left out because its connection to the query topic is not obvious to the user. Other times a dubious term may be included but turns out to be irrelevant. Take the topic in Figure 1 for example. There was a fire disaster in Mont 3 The maximal time is 180 seconds, as the NIST assessor would be forced to submit the form at that moment. Table 4: Term selection statistics (topic average) CF Type 1 × 48 3 × 16 6 × 8 # checked terms 14.8 13.3 11.2 # rel. terms 15.0 12.6 11.2 # rel. checked terms 7.9 6.9 5.9 precision 0.534 0.519 0.527 recall 0.526 0.548 0.527 Blanc Tunnel between France and Italy in 1999, but the user failed to select such keywords as mont, blanc, french and italian due to his/her ignorance of the event. Indeed, without proper context it would be hard to make perfect judgment. What is then, the extent to which the user is good at term feedback? Does it have serious impact on retrieval performance? To answer these questions, we need a measure of individual terms true relevance. We adopt the Simplified KL Divergence metric used in [24] to decide query expansion terms as our term relevance measure: σKLD(w) = p(w|R) log p(w|R) p(w|¬R) where p(w|R) is the probability that a relevant document contains term w, and p(w|¬R) is the probability that an irrelevant document contains w, both of which can be easily computed via maximum likelihood estimate given document-level relevance judgment. If σKLD(w) > 0, w is more likely to appear in relevant documents than irrelevant ones. We consider a term relevant if its Simplified KL Divergence value is greater than a certain threshold σ0. We can then define precision and recall of user term judgment accordingly: precision is the fraction of terms checked by the user that are relevant; recall is the fraction of presented relevant terms that are checked by the user. Table 4 shows the number of checked terms, relevant terms and relevant checked terms when σ0 is set to 1.0, as well as the precision/recall of user term judgment. Note that when the clarification forms contain more clusters, fewer terms are checked: 14.8 for 1 × 48, 13.3 for 3 × 16 and 11.2 for 6×8. Similar pattern holds for relevant terms and relevant checked terms. There seems to be a trade-off between increasing topic diversity by clustering and losing extra relevant terms: when there are more clusters, each of them gets fewer terms to present, which can hurt a major relevant cluster that contains many relevant terms. Therefore, it is not always helpful to have more clusters, e.g., TFB6C is actually worse than TFB1C. The major finding we can make from Table 4 is that the user is not particularly good at identifying relevant terms, which echoes the discovery in [18]. In the case of 3 × 16 clarification forms, the average number of terms checked as relevant by the user is 13.3 per topic, and the average number of relevant terms whose σKLD value exceed 1.0 is 12.6. The user is able to recognize only 6.9 of these terms on average. Indeed, the precision and recall of user feedback terms (as defined previously) are far from perfect. On the other hand, If the user had correctly checked all such relevant terms, the performance of our algorithms would have increased a lot, as shown in Table 5. We see that TFB gets big improvement when there is an oracle who checks all relevant terms, while CFB meets a bottleneck around MAP of 0.325, since all it does is adjust cluster weights, and when the learned weights are close to being accurate, it cannot benefit more from term feedback. Also note that TCFB fails to outperform TFB, probably because TFB is sufficiently accurate. Table 5: Change of MAP when using all (and only) relevant terms (σKLD > 1.0) for feedback. original term feedback relevant term feedback TF1 0.288 0.354 TF3 0.288 0.354 TF6 0.278 0.346 CF3 0.305 0.325 CF6 0.301 0.326 TCF3 0.309 0.345 TCF6 0.304 0.341 6.4 Comparison with Relevance Feedback Now we compare term feedback with document-level relevance feedback, in which the user is presented with the top N documents from an initial retrieval and asked to judge their relevance. The feedback process is simulated using document relevance judgment from NIST. We use the mixture model based feedback method proposed in [25], with mixture noise set to 0.95 and feedback coefficient set to 0.9. Comparative evaluation of relevance feedback against other methods is complicated by the fact that some documents have already been viewed during feedback, so it makes no sense to include them in the retrieval results of the second run. However, this does not hold for term feedback. Thus, to make it fair w.r.t. users information gain, if the feedback documents are relevant, they should be kept in the top of the ranking; if they are irrelevant, they should be left out. Therefore, we use relevance feedback to produce a ranking of top 1000 retrieved documents but with every feedback document excluded, and then prepend the relevant feedback documents at the front. Table 6 shows the performance of relevance feedback for different values of N and compares it with TCFB3C. Table 6: Performance of relevance feedback for different number of feedback documents (N). N MAP Pr@30 RR 5 0.302 0.586 4779 10 0.345 0.670 4916 20 0.389 0.772 5004 TCFB3C 0.309 0.491 4947 We see that the performance of TCFB3C is comparable to that of relevance feedback using 5 documents. Although it is poorer than when there are 10 feedback documents in terms of MAP and Pr@30, it does retrieve more documents (4947) when going down the ranked list. We try to compare the quality of automatically inserted terms in relevance feedback with that of manually selected terms in term feedback. This is done by truncating the relevance feedback modified query model to a size equal to the number of checked terms for the same topic. We can then compare the terms in the truncated model with the checked terms. Figure 3 shows the distribution of the terms σKLD scores. We find that term feedback tends to produce expansion terms of higher quality(those with σKLD > 1) compared to relevance feedback (with 10 feedback documents). This does not contradict the fact that the latter yields higher retrieval performance. Actually, when we use the truncated query model instead of the intact one refined from relevance feedback, the MAP is only 0.304. The truth Figure 3: Comparison of expansion term quality between relevance feedback (with 10 feedback documents) and term feedback (with 3 × 16 CFs) −1−0 0−1 1−2 2−3 3−4 4−5 5−6 0 50 100 150 200 250 300 350 σKLD #terms relevance feedback term feedback is, although there are many unwanted terms in the expanded query model from feedback documents, there are also more relevant terms than what the user can possibly select from the list of presentation terms generated with pseudo-feedback documents, and the positive effects often outweights the negative ones. We are interested to know under what circumstances term feedback has advantage over relevance feedback. One such situation is when none of the top N feedback documents is relevant, rendering relevance feedback useless. This is not infrequent, as one might have thought: out of the 50 topics, there are 13 such cases when N = 5, 10 when N = 10, and still 3 when N = 20. When this happens, one can only back off to the original retrieval method; the power of relevance feedback is lost. Surprisingly, in 11 out of 13 such cases where relevance feedback seems impossible, the user is able to check at least 2 relevant terms from the 3 × 16 clarification form (we consider term t to be relevant if σKLD(t) > 1.0). Furthermore, in 10 out of them TCFB3C outperforms the pseudo-feedback baseline, increasing MAP from 0.076 to 0.146 on average (these are particularly hard topics). We think that there are two possible explanations for this phenomenon of term feedback being active even when relevance feedback does not work: First, even if none of the top N (suppose it is a small number) documents are relevant, we may still find relevant documents in top 60, which is more inclusive but usually unreachable when people are doing relevance feedback in interactive ad-hoc search, from which we can draw feedback terms. This is true for topic 367 piracy, where the top 10 feedback documents are all about software piracy, yet there are documents between 10-60 that are about piracy on the seas (which is about the real information need), contributing terms such as pirate, ship for selection in the clarification form. Second, for some topics, a document needs to meet some special condition in order to be relevant. The top N documents may be related to the topic, but nonetheless irrelevant. In this case, we may still extract useful terms from these documents, even if they do not qualify as relevant ones. For example, in topic 639 consumer online shopping, a document needs to mention what contributes to shopping growth to really match the specified information need, hence none of the top 10 feedback documents are regarded as relevant. But nevertheless, the feedback terms such as retail, commerce are good for query expansion. 7. CONCLUSIONS In this paper we studied the use of term feedback for interactive information retrieval in the language modeling approach. We proposed a cluster-based method for selecting presentation terms as well as algorithms to estimate refined query models from user term feedback. We saw significant improvement in retrieval accuracy brought by term feedback, in spite of the fact that a user often makes mistakes in relevance judgment that hurts its performance. We found the best-performing algorithm to be TCFB, which benefits from the combination of directly observed term evidence with TFB and indirectly learned cluster relevance with CFB. When we reduced the number of presentation terms, term feedback is still able to keep much of its performance gain over the baseline. Finally, we compared term feedback to document-level relevance feedback, and found that TCFB3Cs performance is on a par with the latter with 5 feedback documents. We regarded term feedback as a viable alternative to traditional relevance feedback, especially when there are no relevant documents in the top. We propose to extend our work in several ways. First, we want to study whether the use of various contexts can help the user to better identify term relevance, while not sacrificing the simplicity and compactness of term feedback. Second, currently all terms are presented to the user in a single batch. We could instead consider iterative term feedback, by presenting a small number of terms first, and show more terms after receiving user feedback or stop when the refined query is good enough. The presented terms should be selected dynamically to maximize learning benefits at any moment. Third, we have plans to incorporate term feedback into our UCAIR toolbar[20], an Internet Explorer plugin, to make it work for web search. We are also interested in studying how to combine term feedback with relevance feedback or implicit feedback. We could, for example, allow the user to dynamically modify terms in a language model learned from feedback documents. 8. ACKNOWLEDGMENT This work is supported in part by the National Science Foundation grants IIS-0347933 and IIS-0428472. 9. REFERENCES [1] J. Allan. Relevance feedback with too much data. In Proceedings of the 18th annual international ACM SIGIR conference on research and development in information retrieval, pages 337-343, 1995. [2] J. Allan. HARD track overview in TREC 2005 - High Accuracy Retrieval from Documents. In The Fourteenth Text REtrieval Conference, 2005. [3] P. Anick. Using terminological feedback for web search refinement: a log-based study. In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 88-95, 2003. [4] P. G. Anick and S. Tipirneni. The paraphrase search assistant: terminological feedback for iterative information seeking. In Proceedings of the 22nd annual international ACM SIGIR conference on research and development in information retrieval, pages 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan, and A. Singhal. Automatic query expansion using SMART. In Proceedings of the Third Text REtrieval Conference, 1994. [6] D. Harman. Towards interactive query expansion. In Proceedings of the 11th annual international ACM SIGIR conference on research and development in information retrieval, pages 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wade, and J. Allan. UMass at TREC 2003: HARD and QA. In TREC, pages 715-725, 2003. [8] H. Joho, C. Coverson, M. Sanderson, and M. Beaulieu. Hierarchical presentation of expansion terms. In Proceedings of the 2002 ACM symposium on applied computing, pages 645-649, 2002. [9] K. S. Jones, S. Walker, and S. E. Robertson. A probabilistic model of information retrieval: development and status. Technical Report 446, Computer Laboratory, University of Cambridge, 1998. [10] D. Kelly, V. D. Dollu, and X. Fu. The loquacious user: a document-independent source of terms for query expansion. In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 457-464, 2005. [11] D. Kelly and X. Fu. Elicitation of term relevance feedback: an investigation of term source and context. In Proceedings of the 29th annual international ACM SIGIR conference on research and development in information retrieval, 2006. [12] J. Koenemann and N. Belkin. A case for interaction: A study of interactive information retrieval behavior and effectiveness. In Proceedings of the SIGCHI conference on human factors in computing systems, pages 205-212, 1996. [13] V. Lavrenko and W. B. Croft. Relevance-based language models. In Research and Development in Information Retrieval, pages 120-127, 2001. [14] Y. Nemeth, B. Shapira, and M. Taeib-Maimon. Evaluation of the real and perceived value of automatic and interactive query expansion. In Proceedings of the 27th annual international ACM SIGIR conference on research and development in information retrieval, pages 526-527, 2004. [15] J. Ponte. A Language Modeling Approach to Information Retrieval. PhD thesis, University of Massachusetts at Amherst, 1998. [16] S. E. Robertson, S. Walker, S. Jones, M. Beaulieu, and M. Gatford. Okapi at TREC-3. In Proceedings of the Third Text REtrieval Conference, 1994. [17] J. Rocchio. Relevance feedback in information retrieval. In The SMART retrieval system, pages 313-323. 1971. [18] I. Ruthven. Re-examining the potential effectiveness of interactive query expansion. In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 213-220, 2003. [19] G. Salton and C. Buckley. Improving retrieval performance by relevance feedback. Journal of the American Society for Information Science, 41:288-297, 1990. [20] X. Shen, B. Tan, and C. Zhai. Implicit user modeling for personalized search. In Proceedings of the 14th ACM international conference on information and knowledge management, pages 824-831, 2005. [21] X. Shen and C. Zhai. Active feedback in ad-hoc information retrieval. In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 59-66, 2005. [22] A. Spink. Term relevance feedback and query expansion: relation to design. In Proceedings of the 17th annual international ACM SIGIR conference on research and development in information retrieval, pages 81-90, 1994. [23] J. Xu and W. B. Croft. Query expansion using local and global document analysis. In Proceedings of the 19th annual international ACM SIGIR conference on research and development in information retrieval, pages 4-11, 1996. [24] H. Zaragoza, N. Craswell, M. Taylor, S. Saria, and S. Robertson. Microsoft cambridge at TREC-13: Web and HARD tracks. In Proceedings of the 13th Text REtrieval Conference, 2004. [25] C. Zhai and J. Lafferty. Model-based feedback in the language modeling approach to information retrieval. In Proceedings of the tenth international conference on information and knowledge management, pages 403-410, 2001. [26] C. Zhai, A. Velivelli, and B. Yu. A cross-collection mixture model for comparative text mining. In Proceedings of the tenth ACM SIGKDD international conference on knowledge discovery and data mining, pages 743-748, 2004.",
    "original_translation": "Comentarios de término para la recuperación de información con modelos de idiomas bin Tan †, Atulya Velivelli ‡, Hui Fang †, Chengxiang Zhai † Departamento. de informática †, Departamento de Ingeniería Eléctrica e Informática ‡ Universidad de Illinois en Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.Resumen EDU En este documento estudiamos comentarios basados en términos para la recuperación de información en el enfoque de modelado de idiomas. Con la retroalimentación de término, un usuario juzga directamente la relevancia de los términos individuales sin interacción con los documentos de retroalimentación, tomando el control total del proceso de expansión de la consulta. Proponemos un método basado en clúster para seleccionar los términos que se presentarán al usuario para el juicio, así como los algoritmos efectivos para construir modelos de lenguaje de consulta refinada a partir de la retroalimentación del término del usuario. Se muestra que nuestros algoritmos aportan una mejora significativa en la precisión de la recuperación sobre una línea de base que no es de retroalimentación y logran un rendimiento comparable a la retroalimentación de relevancia. Son útiles incluso cuando no hay documentos relevantes en la parte superior. Categorías y descriptores de sujetos H.3.3 [Búsqueda y recuperación de información]: Modelos de recuperación Términos generales Algoritmos 1. Introducción En el enfoque de modelado de idiomas para la recuperación de la información, la retroalimentación a menudo se modela como estimación de un modelo de consulta mejorado o modelo de relevancia basado en un conjunto de documentos de retroalimentación [25, 13]. Esto está en línea con la forma tradicional de hacer comentarios de relevancia: presentar a un usuario documentos/pasajes para el juicio de relevancia y luego extraer términos de los documentos o pasajes juzgados para expandir la consulta inicial. Es una forma indirecta de buscar asistencia de usuarios para la construcción del modelo de consulta, en el sentido de que el modelo de consulta refinada (basado en términos) se aprende a través de documentos/pasajes de retroalimentación, que son estructuras de términos de alto nivel. Tiene la desventaja de que los términos irrelevantes, que ocurren junto con los relevantes en el contenido juzgado, pueden usarse erróneamente para la expansión de la consulta, causando efectos no deseados. Por ejemplo, para los logros del telescopio Hubble de la consulta TREC, cuando un documento relevante habla más sobre la reparación de los telescopios que sus descubrimientos, se pueden agregar términos irrelevantes como la caminata espacial a la consulta modificada. Podemos considerar una forma más directa de involucrar a un usuario en la mejora del modelo de consulta, sin un paso intermediario de comentarios de documentos que pueda introducir ruido. La idea es presentar un número (razonable) de términos individuales al usuario y pedirle que juzgue la relevancia de cada término o especifique directamente sus probabilidades en el modelo de consulta. Esta estrategia ha sido discutida en [15], pero que sepamos, no se ha estudiado seriamente en la literatura de modelado de idiomas existente. En comparación con la retroalimentación de relevancia tradicional, este enfoque basado en términos para el refinamiento del modelo de consulta interactiva tiene varias ventajas. Primero, el usuario tiene un mejor control del modelo de consulta final a través de la manipulación directa de los términos: él/ella puede dictar qué términos son relevantes, irrelevantes y posiblemente en qué medida. Esto evita el riesgo de traer términos no deseados al modelo de consulta, aunque a veces el usuario introduce términos de baja calidad. Segundo, porque un término tarda menos tiempo en juzgar que un texto completo o resumen de un documento, y tan pocos, ya que alrededor de 20 términos presentados pueden generar una mejora significativa en el rendimiento de la recuperación (como mostraremos más adelante), los comentarios del término hacen que sea más rápido recopilar comentarios de los usuarios. Esto es especialmente útil para la búsqueda interactiva de ADHOC. En tercer lugar, a veces no hay documentos relevantes en la N superior de los resultados inicialmente recuperados si el tema es difícil. Esto a menudo es cierto cuando N está limitado a ser pequeño, lo que surge del hecho de que el usuario no está dispuesto a juzgar demasiados documentos. En este caso, la retroalimentación de relevancia es inútil, ya que no se puede aprovechar ningún documento relevante, pero la retroalimentación a menudo es a menudo útil, al permitir que los términos relevantes se elijan de documentos irrelevantes. Durante nuestra participación en la pista dura TREC 2005 y el estudio continuo después, exploramos cómo explotar los comentarios de términos del usuario para construir modelos de consulta mejorados para la recuperación de información en el enfoque de modelado de idiomas. Identificamos dos subtareas clave de la retroalimentación basada en términos, es decir, la selección de términos de presentación previa a la retroalimentación y la construcción del modelo de consulta posterior a la retroalimentación, con algoritmos efectivos desarrollados para ambos. Impusimos una estructura de clúster secundario en los términos y descubrimos que una vista de clúster arroja información adicional sobre la necesidad de información de los usuarios, y proporciona una buena forma de utilizar la retroalimentación de términos. A través de experimentos, encontramos que la retroalimentación del término mejora significativamente sobre la línea de base que no es de retroalimentación, a pesar de que el usuario a menudo comete errores en el juicio de relevancia. Entre nuestros algoritmos, el que tiene el mejor rendimiento de recuperación es TCFB, la combinación de TFB, el algoritmo de retroalimentación de término directo y CFB, el algoritmo de retroalimentación basado en clúster. También variamos el número de términos de retroalimentación y observamos una mejora razonable incluso a números bajos. Finalmente, al comparar la retroalimentación a término con la retroalimentación a nivel de documento, encontramos que es una alternativa viable a esta última con un rendimiento de recuperación competitivo. El resto del documento está organizado de la siguiente manera. La Sección 2 discute algún trabajo relacionado. La Sección 4 describe nuestro enfoque general para la retroalimentación del término. Presentamos nuestro método para la selección del término de presentación en la Sección 3 y los algoritmos para la construcción del modelo de consulta en la Sección 5. Los resultados del experimento se dan en la Sección 6. La Sección 7 concluye este documento.2. La retroalimentación de relevancia laboral relacionada [17, 19] se ha reconocido durante mucho tiempo como un método efectivo para mejorar el rendimiento de la recuperación. Normalmente, los principales documentos N recuperados utilizando la consulta original se presentan al usuario para el juicio, después de lo cual se extraen los términos de los documentos relevantes juzgados, ponderados por su potencial de atraer documentos más relevantes y agregados al modelo de consulta. La consulta ampliada generalmente representa la información de los usuarios que necesita mejor que la original, que a menudo es solo una consulta de palabras clave corta. Una segunda iteración de recuperación utilizando esta consulta modificada generalmente produce un aumento significativo en la precisión de la recuperación. En los casos en que el verdadero juicio de relevancia no está disponible y se supone que todos los documentos principales de N son relevantes, se llama retroalimentación ciega o pseudo [5, 16] y generalmente aún trae una mejora del rendimiento. Debido a que el documento es una unidad de texto grande, cuando se usa para retroalimentación de relevancia, se pueden introducir muchos términos irrelevantes en el proceso de retroalimentación. Para superar esto, se propone la retroalimentación del pasaje y se muestra para mejorar el rendimiento de la retroalimentación [1, 23]. Una solución más directa es pedirle al usuario su juicio de relevancia de los términos de retroalimentación. Por ejemplo, en algunos sistemas de retroalimentación de relevancia, como [12], hay un paso de interacción que permite al usuario agregar o eliminar los términos de expansión después de extraer automáticamente de los documentos relevantes. Esto se clasifica como expansión de la consulta interactiva, donde la consulta original se aumenta con términos proporcionados por el usuario, que pueden provenir de la entrada directa del usuario (texto de forma libre o palabras clave) [22, 7, 10] o la selección del usuario de los términos sugeridos al sistema(Usando tesauros [6, 22] o extraído de documentos de retroalimentación [6, 22, 12, 4, 7]). En muchos casos, se ha encontrado la retroalimentación de relevancia a término para mejorar efectivamente el rendimiento de la recuperación [6, 22, 12, 4, 10]. Por ejemplo, el estudio en [12] muestra que el usuario prefiere tener un conocimiento explícito y un control directo de qué términos se utilizan para la expansión de la consulta, y la interfaz penetrable que proporciona esta libertad se muestra que funciona mejor que otras interfaces. Sin embargo, en algunos otros casos no hay un beneficio significativo [3, 14], incluso si al usuario le gusta interactuar con términos de expansión. En un estudio simulado realizado en [18], el autor compara el rendimiento de recuperación de la expansión de consultas interactivas y la expansión automática de consultas con un estudio simulado, y sugiere que los beneficios potenciales de los primeros pueden ser difíciles de lograr. Se encuentra que el usuario no es bueno para identificar términos útiles para la expansión de la consulta, cuando una interfaz de presentación de término simple no puede proporcionar suficiente contexto semántico de los términos de retroalimentación. Nuestro trabajo difiere de los anteriores en dos aspectos importantes. Primero, cuando elegimos los términos para presentar al usuario para el juicio de relevancia, no solo consideramos el valor de un solo término (por ejemplo, la frecuencia relativa de un término en los documentos superiores, que se pueden medir mediante métricas como el valor de selección de Robertson y simplificadaDistancia de Kullback-Leíler como se enumera en [24]), pero también examina la estructura del clúster de los términos, a fin de producir una cobertura equilibrada de los diferentes aspectos del tema. En segundo lugar, con el marco de modelado de idiomas, permitimos una construcción elaborada del modelo de consulta actualizado, estableciendo diferentes probabilidades para diferentes términos en función de si se trata de un término de consulta, su importancia en los documentos principales y su membresía en el clúster. Aunque existen técnicas para ajustar los pesos de los términos de consulta para los modelos de espacio vectorial [17] y los modelos de relevancia probable [9], la mayoría de los trabajos mencionados no los usan, eligiendo solo agregar términos de retroalimentación a la consulta original (utilizando así pesos iguales para ellos), que puede conducir a un rendimiento de recuperación más pobre. La combinación de los dos aspectos permite que nuestro método funcione mucho mejor que la línea de base. La forma habitual de presentación del término de retroalimentación es solo para mostrar los términos en una lista. Ha habido algunos trabajos en interfaces de usuario alternativas.[8] organiza términos en una jerarquía, y [11] compara tres interfaces diferentes, incluidos los términos + casillas de verificación, términos + contexto (oraciones) + casillas de verificación, oraciones + cuadro de texto de entrada. En ambos estudios, sin embargo, no hay una diferencia de rendimiento significativa. En nuestro trabajo adoptamos el enfoque más simple de los términos + casillas de verificación. Nos centramos en la presentación de términos y la construcción del modelo de consulta a partir de términos de retroalimentación, y creemos que usar contextos para mejorar la calidad de los términos de retroalimentación debería ser ortogonal a nuestro método.3. Enfoque general seguimos el enfoque de modelado de idiomas y basamos nuestro método en el modelo de recuperación de divergencia KL propuesto en [25]. Con este modelo, la tarea de recuperación implica estimar un modelo de lenguaje de consulta θq de una consulta dada, un modelo de lenguaje de documento θd de cada documento, y calcular su divergencia KL d (θq || θd), que luego se usa para calificar los documentos.[25] trata la retroalimentación de relevancia como un problema de reestimación del modelo de consulta, es decir, calcular un modelo de consulta actualizado θq dado el texto de consulta original y la evidencia adicional llevada por los documentos relevantes juzgados. Adoptamos esta opinión y presentamos nuestra tarea como actualización del modelo de consulta desde los comentarios de los términos del usuario. Aquí hay dos subtareas clave: primero, cómo elegir los mejores términos para presentar al usuario para juzgar, para recopilar evidencia máxima sobre la necesidad de la información del usuario. En segundo lugar, cómo calcular un modelo de consulta actualizado basado en este término evidencia de retroalimentación, de modo que captura la necesidad de información de los usuarios y se traduce en un buen rendimiento de recuperación.4. Selección de término de presentación La selección adecuada de los términos que se presentará al usuario para el juicio es crucial para el éxito de la retroalimentación del término. Si los términos están mal elegidos y hay pocos relevantes, el usuario tendrá dificultades para buscar términos útiles para ayudar a aclarar su necesidad de información. Si los términos relevantes son abundantes, pero todos se concentran en un solo aspecto del tema de la consulta, entonces solo podremos obtener comentarios sobre ese aspecto y faltar a otros, lo que resulta en una pérdida de amplitud en los resultados recuperados. Por lo tanto, es importante seleccionar cuidadosamente los términos de presentación para maximizar la ganancia esperada de los comentarios de los usuarios, es decir, aquellos que potencialmente pueden revelar la mayoría de las pruebas de la información de los usuarios. Esto es similar a la retroalimentación activa [21], lo que sugiere que un sistema de recuperación debe investigar activamente la necesidad de la información del usuario, y en el caso de la retroalimentación de relevancia, los documentos de retroalimentación deben elegirse para maximizar los beneficios de aprendizaje (por ejemplo, diversamente para aumentar la cobertura). En nuestro enfoque, los principales documentos de N de una recuperación inicial utilizando la consulta original forman la fuente de los términos de retroalimentación: todos los términos que aparecen en ellos se consideran candidatos para presentar al usuario. Estos documentos sirven como pseudo-retroalimentación, ya que proporcionan un contexto mucho más rico que la consulta original (generalmente muy corta), mientras que no se le pide al usuario que juzgue su relevancia. Debido a la última razón, es posible hacer que N sea bastante grande (por ejemplo, en nuestros experimentos establecemos N = 60) para aumentar su cobertura de diferentes aspectos en el tema. La forma más simple de seleccionar los términos de retroalimentación es elegir los términos M más frecuentes de los documentos n. Este método, sin embargo, tiene dos inconvenientes. Primero, se seleccionarán muchos términos ruidosos comunes debido a sus altas frecuencias en la recopilación de documentos, a menos que se use una lista de palabras de parada para el filtrado. En segundo lugar, la lista de presentación tenderá a ser llenada por términos desde aspectos principales del tema;Es probable que los de un aspecto menor se pierdan debido a sus frecuencias relativamente bajas. Resolvemos los problemas anteriores en dos medidas correspondientes. Primero, presentamos un modelo de fondo θB que se estima a partir de estadísticas de recolección y explica los términos comunes, por lo que es mucho menos probable que aparezcan en la lista de presentación. En segundo lugar, los términos se seleccionan de múltiples grupos en los documentos de pseudo-retretería, para garantizar una representación suficiente de diferentes aspectos del tema. Confiamos en el modelo multinomial de mezcla, que se utiliza para el descubrimiento de temas en [26]. Específicamente, suponemos que los documentos n contienen k clústeres {ci |i = 1, 2, · · · k}, cada una caracterizada por una distribución de palabras multinomial (también conocida como modelo de lenguaje unigram) θi y correspondiente a un aspecto del tema. Los documentos se consideran muestreados a partir de una mezcla de componentes K + 1, incluidos los clústeres K y el modelo de fondo: p (w | d) = λbp (w | θb) + (1 - λb) k i = 1 πd, ip, ip(w | θi) donde w es una palabra, λb es el peso de la mezcla para el modelo de fondo θb, y πd, i es el peso de la mezcla específica del documento para el modelo de clúster I-Th. Luego estimamos los modelos de clúster maximizando la probabilidad de que los documentos de pseudo-retroalimentación se generen a partir del modelo de mezcla multinomial: log p (d | λ) = d∈D w∈V c (w; d) log p (w | d) donde d = {di |i = 1, 2, · · · n} es el conjunto de n documentos, v es el vocabulario, c (w; d) es la frecuencia de ws en d y λ = {θi |i = 1, 2, · · · k} ∪ {πdij |i = 1, 2, · · · n, j = 1, 2, · · · k} es el conjunto de parámetros del modelo a estimar. Los modelos de clúster pueden estimarse de manera eficiente utilizando el algoritmo de maximización de expectativas (EM). Para sus detalles, remitimos al lector a [26]. La Tabla 1 muestra los modelos de clúster para los desastres del túnel de transporte de consultas TREC (k = 3). Tenga en cuenta que solo el clúster medio es relevante. Tabla 1: Modelos de clúster para el tema 363 Desastres de túnel de transporte Clúster 1 Clúster 2 Clúster 3 Túnel 0.0768 Túnel 0.0935 Túnel 0.0454 Transporte 0.0364 Fuego 0.0295 Transporte 0.0406 Tráfico 0.0206 Camión 0.0236 Toll 0.0166 Railwai 0.0186 French 0.0220 Amtrak 0.0153 Harbor 0146 Toll. 0140 coche0.0154 aeropuerto 0.0122 Bridg 0.0139 italiano 0.0152 Turnpik 0.0105 kilómetos 0.0136 FireFight 0.0144 Lui 0.0095 Camión 0.0133 Blaze 0.0127 Jersei 0.0093 Construcción 0.0131 BLANC. Elegimos el l = m/K Términos con probabilidades más altas para formar un total de M Términos de presentación. Si un término está en la parte superior L en múltiples grupos, lo asignamos al clúster donde tiene la mayor probabilidad y dejamos que los otros grupos tomen un término más como compensación. También filtramos términos en el texto de la consulta original porque tienden a ser siempre relevantes cuando la consulta es corta. Los Términos seleccionados se presentan al usuario para su juicio. En la Figura 1 se muestra un formulario de retroalimentación de muestra (completado). En este estudio solo tratamos con el juicio binario: un término presentado no está marcado, y un usuario puede verificarlo para indicar relevancia. Tampoco explicamos explícitamente la retroalimentación negativa (es decir, penalizando los términos irrelevantes), porque con la retroalimentación binaria, un término sin control no es necesariamente irrelevante (tal vez el usuario no está seguro de su relevancia). Podríamos pedirle al usuario un juicio más fino (por ejemplo, elegir entre altamente relevantes, algo relevantes, no saben, algo irrelevantes y altamente irrelevantes), pero la retroalimentación binaria es más compacta, tomando menos espacio para mostrar y menos esfuerzo del usuario para hacer un juicio.5. Estimando modelos de consulta a partir de la retroalimentación a término En esta sección, presentamos varios algoritmos para explotar la retroalimentación del término. Los algoritmos toman como entrada la consulta original q, los clústeres {θi} generado por el algoritmo de descubrimiento de temas, el conjunto de términos de retroalimentación t y su juicio de relevancia r, y emite un modelo de lenguaje de consulta actualizado θq haceEvidencia para capturar la necesidad de información de los usuarios. Primero describimos nuestras anotaciones: • θq: el modelo de consulta original, derivado de los términos de consulta solamente: p (w | θq) = c (w; q) | q |donde c (w; q) es el recuento de w en q, y | q |= w∈Q c (w; q) es la longitud de la consulta.• θq: el modelo de consulta actualizado que necesitamos estimar a partir de la retroalimentación del término.• θi (i = 1, 2, ... K): El modelo de lenguaje unigram de clúster CI, según lo estimado utilizando el algoritmo de descubrimiento de temas.• t = {ti, j} (i = 1 ... K, J = 1... L): El conjunto de términos presentados al usuario para el juicio.Ti, J es el término J-these elegido de Cluster CI.• R = {ΔW | W ∈ T}: ΔW es una variable indicadora que es 1 si W se juzga relevante o 0 de lo contrario.5.1 TFB (retroalimentación directa) Esta es una forma directa de retroalimentación de términos que no involucra ninguna estructura secundaria. Damos un peso de 1 a los términos juzgados relevantes por el usuario, un peso de μ a los términos de consulta, peso cero a otros términos, y luego aplicamos la normalización: p (w | θq) = ΔW + μ c (w; q) w∈T ΔW + μ | Q |donde w ∈T ΔW es el número total de términos que se juzgan relevantes. Llamamos a este método TFB (retroalimentación directa del término). Si dejamos μ = 1, este enfoque es equivalente a agregar los términos relevantes después de la consulta original, que es lo que hace la expansión de la consulta estándar (sin reescribir a término). Si establecemos μ> 1, estamos poniendo más énfasis en los términos de la consulta que los verificados. Tenga en cuenta que el modelo de resultados estará más sesgado hacia θq si la consulta original es larga o la retroalimentación del usuario es débil, lo que tiene sentido, ya que podemos confiar más en la consulta original en cualquier caso. Figura 1: Formulario de aclaración lleno para el tema 363 363 Desastres de túnel de transporte Seleccione todos los términos que sean relevantes para el tema.Traffic Railway Harbor Rail Bridge Kilómetro Construcción Cross Swiss Cross Link Kong Hong River Project Meder Shanghai Camión de bomberos Francés Fumo Fiencias italianas Blaze Blaze Blanc Mont Victim Franc Franc El conductor de rescate Chamonix Emerge Toll Amtrak Train Airport Turnpike Lui Jersey Pass Rome Z Center Electron Road Boston Velocidad BU SENTO 5.2CFB (retroalimentación del clúster) Aquí explotamos la estructura del clúster que jugó un papel importante cuando seleccionamos los términos de presentación. Los grupos representan diferentes aspectos del tema de la consulta, cada uno de los cuales puede o no ser relevante. Si podemos identificar los grupos relevantes, podemos combinarlos para generar un modelo de consulta que sea bueno para descubrir documentos pertenecientes a estos grupos (en lugar de los irrelevantes). Podríamos pedirle al usuario que juzgue directamente la relevancia de un clúster después de ver los términos representativos en ese clúster, pero esta a veces sería una tarea difícil para el usuario, que tiene que adivinar la semántica de un clúster a través de su conjunto de términos, que puedenno estar bien conectados entre sí debido a la falta de contexto. Por lo tanto, proponemos aprender la retroalimentación del clúster indirectamente, inferiendo la relevancia de un clúster a través de la relevancia de sus términos de retroalimentación. Debido a que cada clúster tiene un número igual de términos presentados al usuario, la medida más simple de una relevancia de los grupos es el número de términos que se juzgan relevantes en él. Intuitivamente, cuanto más se marcan los términos relevantes en un clúster, más cerca estará el clúster para el tema de la consulta y cuanto más debe participar el clúster en la modificación de la consulta. Si combinamos los modelos de clúster usando pesos determinados de esta manera e interpolamos con el modelo de consulta original, obtenemos la siguiente fórmula para la actualización de la consulta, que llamamos CFB (retroalimentación del clúster): P (W | θq) = λp (W | θq) + (1 - λ) k i = 1 l j = 1 Δti, j k k = 1 l j = 1 Δtk, j p (w | θi) donde l j = 1 Δti, j es el número de términos relevantes en el clústerCI, y K K = 1 L J = 1 ΔTK, J es el número total de términos relevantes. Observamos que cuando solo hay un grupo (k = 1), la fórmula anterior degenera a p (w | θq) = λp (w | θq) + (1- λ) p (w | θ1) que es simplemente pseudo-Comentarios de la forma propuesta en [25].5.3 TCFB (retroalimentación de clúster de términos) TFB y CFB tienen sus inconvenientes. TFB asigna probabilidades no cero a los términos presentados que están marcados relevantes, pero ignora por completo (mucho más) otras, que pueden dejarse sin control debido a la ignorancia de los usuarios, o simplemente no incluidos en la lista de presentación, pero deberíamos poder poderpara inferir su relevancia de los controlados. Por ejemplo, en la Figura 1, dado que se verifican hasta 5 términos en el grupo medio (la tercera y cuarta columna), debemos tener una gran confianza en la relevancia de otros términos en ese clúster. El problema de los TFB de los remedios de CFB tratando los términos en un grupo colectivamente, de modo que los términos no controlados/no presentados reciben pesos cuando los términos presentados en sus grupos se juzgan como relevantes, pero no distingue qué términos en un grupo se presentan o juzgan. Intuitivamente, los términos relevantes juzgados deberían recibir pesos más grandes porque el usuario indica explícitamente como relevante. Por lo tanto, tratamos de combinar los dos métodos, con la esperanza de obtener lo mejor de ambos. Hacemos esto interpolando el modelo TFB con el modelo CFB, y lo llamamos TCFB: P (W | θq) = αP (W | θqt F B) + (1 - α) P (W | θqcf B) 6. Experimentos En esta sección, describimos los resultados de nuestros experimentos. Primero describimos la configuración de nuestro experimento y presentamos una descripción general del rendimiento de varios métodos. Luego discutimos los efectos de variar la configuración de parámetros en los algoritmos, así como el número de términos de presentación. A continuación, analizamos el comportamiento de retroalimentación del término del usuario y su relación con el rendimiento de la recuperación. Finalmente, comparamos la retroalimentación del término con la retroalimentación de relevancia y mostramos que tiene su ventaja particular.6.1 Configuración del experimento y resultados básicos Aprovechamos la oportunidad de Trec 2005 Hard Track [2] para la evaluación de nuestros algoritmos. Las pistas utilizaron la colección Aquaint, un cuerpo de 3GB de texto en inglés de Newswire. Los temas incluyeron 50 que anteriormente se sabían que eran difíciles, es decir, con bajo rendimiento de recuperación. Es para estos temas difíciles que los comentarios de los usuarios son más útiles, ya que puede proporcionar información para desambiguar las consultas;Con temas fáciles, el usuario puede no estar dispuesto a gastar esfuerzos para recibir comentarios si los resultados de recuperación automática son lo suficientemente buenos. Los participantes de la pista pudieron enviar formularios de aclaración diseñados a medida (CF) para solicitar comentarios de los evaluadores humanos proporcionados por la Tabla 2: rendimiento de recuperación para diferentes métodos y tipos de FQ. La última fila es el porcentaje de mejora del mapa sobre la línea de base. La configuración de parámetros μ = 4, λ = 0.1, α = 0.3 son casi óptimas. Línea de base TFB1C TFB3C TFB6C CFB1C CFB3C CFB6C TCFB1C TCFB3C TCFB6C MAP 0.219 0.288 0.288 0.278 0.254 0.305 0.301 0.274 0.309 0.304 PR@30 0.393 0.467 0.475 0.457 1 0.473 RR 4339 4753 4762 4740 4600 4907 4872 4767 4947 4906% 0% 31.5%31.5% 26.9% 16.0% 39.3% 37.4% 25.1% 41.1% 38.8% Tabla 3: Variación del mapa con el número de términos presentados.# Términos TFB1C TFB3C TFB6C CFB3C CFB6C TCFB3C TCFB6C 6 0.245 0.240 0.227 0.279 0.279 0.281 0.274 12 0.261 0.261 0.242 0.299 0.286 0.297 0.281 0.275 0.274 0.276 0.281 0.265 0.303 0.292 0.305 0.292 30 0.280 0.285 0.270 0.304 0.296 0.307 0.296 360.282 0.288 0.272 0.307 0.297 0.309 0.297 42 0.283 0.288 0.275 0.306 0.298 0.309 0.300 48 0.288 0.288 0.278 0.305 0.301 0.309 0.303 nist. Diseñamos tres conjuntos de formularios de aclaración para la retroalimentación de términos, que difieren en la elección de K, el número de grupos y L, el número de términos presentados de cada grupo. Son: 1 × 48, un gran grupo con 48 términos, 3 × 16, 3 grupos con 16 términos cada uno y 6 × 8, 6 grupos con 8 términos cada uno. El número total de términos presentados (M) se fija en 48, por lo que al comparar el rendimiento de los diferentes tipos de formularios de aclaración podemos conocer los efectos del diferente grado de agrupación. Para cada tema, un asesor completaría los formularios ordenados por 6 × 8, 1 × 48 y 3 × 16, pasando hasta tres minutos en cada formulario. El formulario de aclaración de la muestra que se muestra en la Figura 1 es del tipo 3 × 16. Es una interfaz simple y compacta en la que el usuario puede verificar los términos relevantes. La forma se explica por sí misma;No hay necesidad de capacitación adicional en el usuario sobre cómo usarla. Nuestras consultas initinales se construyen solo utilizando las descripciones del título del tema, que tienen un promedio de 2.7 palabras de longitud. Como nuestra línea de base, utilizamos el método de recuperación de divergencia KL implementado en el Lemur Toolkit1 con 5 documentos de retroalimentación de pseudo. Detenemos los términos, elegimos el suavizado de Dirichlet con un anterior de 2000, y los modelos de lenguaje de consulta truncados a 50 términos (estas configuraciones se utilizan a lo largo de los experimentos). Para todos los demás parámetros utilizamos la configuración predeterminada de los lémures. La línea de base resulta funcionar por encima del promedio entre los participantes de la pista. Después de una ejecución inicial utilizando este método de recuperación de línea de base, tomamos los 60 documentos principales para cada tema y aplicamos el algoritmo de descubrimiento del tema para generar los clústeres (1, 3 o 6 de ellos), en función de los cuales generamos formularios de aclaración. Después de recibir comentarios de los usuarios, ejecutamos los algoritmos de retroalimentación del término (TFB, CFB o TCFB) para estimar los modelos de consulta actualizados, que luego se utilizan para una segunda iteración de recuperación. Evaluamos el rendimiento de los diferentes métodos de recuperación en sus clasificaciones de los 1000 principales documentos. Las métricas de evaluación que adoptamos incluyen precisión media promedio (no interpolada) (MAP), precisión en el top 30 (PR@30) y el total de recuperación relevante (RR). La Tabla 2 muestra el rendimiento de varios métodos y configuraciones de K × L. Los sufijos (1C, 3C, 6C) después de TFB, CFB, TCFB representan el número de clústeres (k). Por ejemplo, TCFB3C significa el método TCFB en los formularios de aclaración 3 × 16. De la Tabla 2 podemos hacer las siguientes observaciones: 1 http://www.lemurproject.com 1. Todos los métodos funcionan considerablemente mejor que la línea de base de Pseudofeedback, con TCFB3C logrando una mejora más alta del 41.1% en MAP, lo que indica una contribución significativa de la retroalimentación a término para la aclaración de la necesidad de la información de los usuarios. En otras palabras, la retroalimentación del término es realmente útil para mejorar la precisión de la recuperación.2. Para TFB, el rendimiento es casi igual en los formularios de aclaración 1 × 48 y 3 × 16 en términos de mapa (aunque este último es ligeramente mejor en Pr@30 y RR), y un poco peor en los 6 × 8.3. Tanto CFB3C como CFB6C funcionan mejor que sus contrapartes TFB en las tres métricas, lo que sugiere que la retroalimentación sobre una estructura de clúster secundaria es realmente beneficiosa. CFB1C es realmente peor porque no puede ajustar el peso de su clúster (único) a partir de la retroalimentación del término y es simplemente pseudofreedback.4. Aunque TCFB es solo una mezcla simple de TFB y CFB por interpolación, es capaz de superar a ambos. Esto respalda nuestra especulación de que TCFB supera los inconvenientes de TFB (prestando atención solo a los términos verificados) y CFB (no distinguiendo los términos verificados y desanimados en un clúster). Excepto por TCFB6C V.S. CFB6C, la ventaja de rendimiento de TCFB sobre TFB/CFB es significativa en P <0.05 utilizando la prueba de rango firmada de Wilcoxon. Esto no es cierto en el caso de TFB V.S. CFB, cada uno de los cuales es mejor que el otro en casi la mitad de los temas.6.2 Reducción de los términos de presentación En algunas situaciones, es posible que tengan que reducir el número de términos de presentación debido a los límites en el espacio de visualización o los esfuerzos de retroalimentación de los usuarios. Es interesante saber si nuestro rendimiento de los algoritmos se deteriora cuando el usuario se presenta con menos términos. Debido a que los términos de presentación dentro de cada clúster se generan en orden decreciente de sus frecuencias, la lista de presentación forma un subconjunto del original si su tamaño se reduce2. Por lo tanto, podemos simular fácilmente lo que sucede cuando el número de términos de presentación disminuye 2 Hay complejidades que surgen de los términos que aparecen en los mejores grupos, pero estas son excepciones de M a M: mantendremos todos los juicios de la mejor l = M/K términos en cada clúster y descartar los de otros. La Tabla 3 muestra el rendimiento de varios algoritmos ya que el número de términos de presentación varía de 6 a 48. Encontramos que el rendimiento de TFB es más susceptible a la reducción del término de presentación que el de CFB o TCFB. Por ejemplo, en 12 términos, el mapa de TFB3C es del 90.6% de eso en 48 términos, mientras que los números para CFB3C y TCFB3C son 98.0% y 96.1% respectivamente. Conjeturamos la razón para ser que, si bien el rendimiento de TFBS depende en gran medida de cuántos buenos términos se eligen para la expansión de la consulta, CFB solo necesita una estimación aproximada de los pesos del clúster para funcionar. Además, los formularios de aclaración 3 × 16 parecen ser más robustos que los 6 × 8: a los 12 términos, el mapa de TFB6C es del 87.1% de eso en 48 términos, inferiores a 90.6% para TFB3C. Del mismo modo, para CFB es 95.0% contra 98.0%. Esto es natual, ya que para un gran número de clúster de 6, es más fácil ingresar a la situación en la que cada clúster obtiene muy pocos términos de presentación para que la diversificación de temas sea útil. En general, nos sorprende ver que los algoritmos aún pueden funcionar razonablemente bien cuando el número de términos de presentación es pequeño. Por ejemplo, a solo 12 términos CFB3C (el formulario de aclaración es de tamaño 3 × 4) aún puede mejorar el 36.5% sobre la línea de base, cayendo ligeramente de 39.3% a 48 términos.6.3 Análisis de comentarios de los usuarios En esta parte, estudiamos varios aspectos del comportamiento de retroalimentación de los usuarios y si están conectados al rendimiento de la recuperación. Figura 2: Distribuciones de tiempo de finalización del formulario de aclaración 0-30 30-60 60−90 90-120 120-150 150−180 0 5 10 15 20 25 30 35 Tiempo de finalización (segundos) #Tópicos 1 × 48 3 × 16 6 × 8La Figura 2 muestra la distribución del tiempo necesario para completar un formulario de aclaración3. Vemos que el usuario generalmente puede finalizar la retroalimentación de términos dentro de un período de tiempo razonablemente corto: para más de la mitad de los temas, el formulario de aclaración se completa en solo 1 minuto, y solo una pequeña fracción de temas (menos del 10% para1 × 48 y 3 × 16) Tome más de 2 minutos. Esto sugiere que la retroalimentación del término es adecuada para la recuperación ad-hoc interactiva, donde un usuario generalmente no quiere pasar demasiado tiempo en proporcionar comentarios. Encontramos que un usuario a menudo comete errores al juzgar la relevancia del término. A veces, se puede dejar un término relevante porque su conexión con el tema de la consulta no es obvia para el usuario. Otras veces se puede incluir un término dudoso, pero resulta ser irrelevante. Tome el tema en la Figura 1 por ejemplo. Hubo un desastre de incendio en Mont 3, el tiempo máximo es de 180 segundos, ya que el asesor NIST se vería obligado a presentar el formulario en ese momento. Tabla 4: Estadísticas de selección de términos (promedio de tema) CF Tipo 1 × 48 3 × 16 6 × 8 # Términos verificados 14.8 13.3 11.2 # Rel.Términos 15.0 12.6 11.2 # Rel.Términos verificados 7.9 6.9 5.9 Precisión 0.534 0.519 0.527 Recuerde 0.526 0.548 0.527 Blanc Tunnel entre Francia e Italia en 1999, pero el usuario no pudo seleccionar palabras clave como Mont, Blanc, francés e italiano debido a su ignorancia del evento. De hecho, sin el contexto adecuado, sería difícil hacer un juicio perfecto. ¿Cuál es entonces, la medida en que el usuario es bueno en la retroalimentación de términos? ¿Tiene un gran impacto en el rendimiento de la recuperación? Para responder a estas preguntas, necesitamos una medida de los términos individuales de la verdadera relevancia. Adoptamos la métrica de divergencia KL simplificada utilizada en [24] para decidir los términos de expansión de la consulta como nuestra medida de relevancia de término: σkld (w) = p (w | r) log p (w | r) p (w | ¬r) donde p(w | r) es la probabilidad de que un documento relevante contenga el término w, y p (w | ¬r) es la probabilidad de que un documento irrelevante contenga W, los cuales se pueden calcular fácilmente mediante una estimación de máxima probabilidad dada la relevancia a nivel de documentojuicio. Si σkld (w)> 0, W es más probable que aparezca en documentos relevantes que los irrelevantes. Consideramos un término relevante si su valor de divergencia KL simplificado es mayor que un cierto umbral σ0. Luego podemos definir la precisión y el recuerdo del juicio a término del usuario en consecuencia: la precisión es la fracción de los términos verificados por el usuario que son relevantes;El recuerdo es la fracción de los términos relevantes presentados que el usuario verifica. La Tabla 4 muestra el número de términos verificados, términos relevantes y términos verificados relevantes cuando σ0 se establece en 1.0, así como la precisión/retirada del juicio a término del usuario. Tenga en cuenta que cuando los formularios de aclaración contienen más grupos, se verifican menos términos: 14.8 para 1 × 48, 13.3 para 3 × 16 y 11.2 para 6 × 8. El patrón similar se mantiene en términos relevantes y términos verificados relevantes. Parece haber una compensación entre la creciente diversidad de temas al agrupar y perder términos extra relevantes: cuando hay más grupos, cada uno de ellos obtiene menos términos presentes, lo que puede dañar un grupo relevante importante que contiene muchos términos relevantes. Por lo tanto, no siempre es útil tener más grupos, por ejemplo, TFB6C es realmente peor que TFB1C. El hallazgo principal que podemos hacer con la Tabla 4 es que el usuario no es particularmente bueno para identificar términos relevantes, lo que se hace eco del descubrimiento en [18]. En el caso de los formularios de aclaración 3 × 16, el número promedio de términos verificados como relevantes por el usuario es 13.3 por tema, y el número promedio de términos relevantes cuyo valor σkld excede 1.0 es 12.6. El usuario puede reconocer solo 6.9 de estos términos en promedio. De hecho, la precisión y el retiro de los términos de retroalimentación del usuario (como se definió anteriormente) están lejos de ser perfectas. Por otro lado, si el usuario ha verificado correctamente todos esos términos relevantes, el rendimiento de nuestros algoritmos habría aumentado mucho, como se muestra en la Tabla 5. Vemos que TFB obtiene una gran mejora cuando hay un oráculo que verifica todos los términos relevantes, mientras que CFB cumple con un cuello de botella alrededor del mapa de 0.325, ya que todo lo que hace es ajustar los pesos del clúster, y cuando los pesos aprendidos están cerca de ser precisos, no puedebeneficiarse más de la retroalimentación a término. También tenga en cuenta que TCFB no supera a TFB, probablemente porque TFB es lo suficientemente preciso. Tabla 5: Cambio de mapa cuando use todos (y solo) términos relevantes (σkld> 1.0) para retroalimentación.Término original Term retroalimentación Término relevante TF1 0.288 0.354 TF3 0.288 0.354 TF6 0.278 0.346 CF3 0.305 0.325 CF6 0.301 0.326 TCF3 0.309 0.345 TCF6 0.304 0.341 6.4 Comparación con la retroalimentación de relevancia Ahora contamos con la retroalimentación de la relevancia del documento con el documento.con los principales documentos N de una recuperación inicial y pidió juzgar su relevancia. El proceso de retroalimentación se simula utilizando el juicio de relevancia del documento de NIST. Utilizamos el método de retroalimentación basado en el modelo de mezcla propuesto en [25], con el ruido de la mezcla establecido en 0.95 y el coeficiente de retroalimentación establecido en 0.9. La evaluación comparativa de la retroalimentación de relevancia contra otros métodos se complica por el hecho de que algunos documentos ya se han visto durante la retroalimentación, por lo que no tiene sentido incluirlos en los resultados de recuperación de la segunda ejecución. Sin embargo, esto no es válido para la retroalimentación a término. Por lo tanto, para hacerlo justo W.R.T.ganancia de información de los usuarios, si los documentos de comentarios son relevantes, deben mantenerse en la parte superior de la clasificación;Si son irrelevantes, deben quedarse fuera. Por lo tanto, utilizamos comentarios de relevancia para producir una clasificación de los 1000 principales documentos recuperados, pero con cada documento de retroalimentación excluidos, y luego preparamos los documentos de retroalimentación relevantes en el frente. La Tabla 6 muestra el rendimiento de la retroalimentación de relevancia para diferentes valores de N y lo compara con TCFB3C. Tabla 6: Realización de retroalimentación de relevancia para el diferente número de documentos de retroalimentación (n). N Map PR@30 RR 5 0.302 0.586 4779 10 0.345 0.670 4916 20 0.389 0.772 5004 TCFB3C 0.309 0.491 4947 Vemos que el rendimiento de TCFB3C es comparable al de la retroalimentación de relevancia utilizando 5 documentos. Aunque es más pobre que cuando hay 10 documentos de retroalimentación en términos de MAP y PR@30, recupera más documentos (4947) cuando baja la lista de clasificación. Tratamos de comparar la calidad de los términos insertados automáticamente en retroalimentación relevante con la de los términos seleccionados manualmente en la retroalimentación del término. Esto se hace truncando el modelo de consulta modificado de retroalimentación de relevancia a un tamaño igual al número de términos verificados para el mismo tema. Luego podemos comparar los términos en el modelo truncado con los términos verificados. La Figura 3 muestra la distribución de los términos puntajes σkld. Encontramos que la retroalimentación del término tiende a producir términos de expansión de mayor calidad (aquellos con σkld> 1) en comparación con la retroalimentación de relevancia (con 10 documentos de retroalimentación). Esto no contradice el hecho de que este último produce un mayor rendimiento de recuperación. En realidad, cuando usamos el modelo de consulta truncada en lugar del intacto refinado de la retroalimentación de relevancia, el mapa es solo 0.304. La Verdad Figura 3: Comparación de la calidad del término de expansión entre la retroalimentación de relevancia (con 10 documentos de retroalimentación) y la retroalimentación de término (con 3 × 16 CFS) −1-0 0-1 1−2 2-3 3−4 4−5 5−6 0 50 100 100 150 200 250 300 350 σkld #terms Relevancia La retroalimentación El tiempo de retroalimentación es, aunque hay muchos términos no deseados en el modelo de consulta ampliada de los documentos de retroalimentación, también hay términos más relevantes que los que el usuario puede seleccionar de la lista de la lista deLos términos de presentación generados con documentos de pseudo-retroalimentación, y los efectos positivos a menudo superan a los negativos. Estamos interesados en saber en qué circunstancias el término comentarios tiene ventaja sobre la retroalimentación relevante. Una de esas situaciones es cuando ninguno de los principales documentos de retroalimentación es relevante, lo que hace que la retroalimentación de relevancia sea inútil. Esto no es poco frecuente, como uno podría haber pensado: de los 50 temas, hay 13 casos de este tipo cuando n = 5, 10 cuando n = 10 y aún 3 cuando n = 20. Cuando esto sucede, uno solo puede retroceder al método de recuperación original;Se pierde el poder de la retroalimentación relevante. Sorprendentemente, en 11 de los 13 casos en los que la retroalimentación de relevancia parece imposible, el usuario puede verificar al menos 2 términos relevantes del formulario de aclaración 3 × 16 (consideramos que el término t es relevante si σkld (t)> 1.0). Además, en 10 de ellos tcfb3c supera a la línea de base de pseudo-retroalimentación, aumentando el mapa de 0.076 a 0.146 en promedio (estos son temas particularmente difíciles). Creemos que hay dos posibles explicaciones para este fenómeno de la retroalimentación de términos activos, incluso cuando la retroalimentación de relevancia no funciona: primero, incluso si ninguno de los documentos de N (supongamos que es un número pequeño) son relevantes, aún podemos encontrar relevantes relevantesDocumentos en el top 60, que es más inclusivo pero generalmente inalcanzable cuando las personas están haciendo comentarios de relevancia en la búsqueda interactiva ad-hoc, de la cual podemos extraer términos de retroalimentación. Esto es cierto para la piratería del Tema 367, donde los 10 documentos de comentarios principales se tratan de piratería de software, sin embargo, hay documentos entre 10-60 que se trata de piratería en los mares (que se trata de la necesidad real de la información), contribuyendo términos como pirata, envío para la selección en el formulario de aclaración. En segundo lugar, para algunos temas, un documento debe cumplir con una condición especial para ser relevante. Los principales documentos N pueden estar relacionados con el tema, pero no obstante irrelevante. En este caso, aún podemos extraer términos útiles de estos documentos, incluso si no califican como relevantes. Por ejemplo, en las compras en línea del consumidor del Tema 639, un documento debe mencionar lo que contribuye al crecimiento de las compras para igualar la necesidad de información especificada, por lo tanto, ninguno de los 10 principales documentos de comentarios se considera relevantes. Sin embargo, los términos de retroalimentación como el comercio minorista, el comercio son buenos para la expansión de la consulta.7. Conclusiones En este documento estudiamos el uso de comentarios de términos para la recuperación de información interactiva en el enfoque de modelado de idiomas. Propusimos un método basado en clúster para seleccionar términos de presentación, así como algoritmos para estimar los modelos de consulta refinadas de los comentarios de los términos del usuario. Vimos una mejora significativa en la precisión de la recuperación traída por la retroalimentación del término, a pesar del hecho de que un usuario a menudo comete errores en un juicio relevante que perjudica su rendimiento. Encontramos que el algoritmo de mejor rendimiento es TCFB, que se beneficia de la combinación de evidencia de término directamente observada con TFB y la relevancia del clúster con CFB indirectamente aprendida con CFB. Cuando reducimos el número de términos de presentación, la retroalimentación del término aún puede mantener gran parte de su ganancia de rendimiento sobre la línea de base. Finalmente, comparamos la retroalimentación de términos con la retroalimentación de relevancia a nivel de documento, y descubrimos que el rendimiento de TCFB3CS está a la par con este último con 5 documentos de retroalimentación. Consideramos la retroalimentación del término como una alternativa viable a la retroalimentación de relevancia tradicional, especialmente cuando no hay documentos relevantes en la parte superior. Proponemos extender nuestro trabajo de varias maneras. Primero, queremos estudiar si el uso de varios contextos puede ayudar al usuario a identificar mejor la relevancia del término, sin sacrificar la simplicidad y la compacidad de la retroalimentación de términos. En segundo lugar, actualmente todos los términos se presentan al usuario en un solo lote. En su lugar, podríamos considerar la retroalimentación iterativa, presentando primero un pequeño número de términos, y mostrar más términos después de recibir comentarios de los usuarios o detenerse cuando la consulta refinada es lo suficientemente buena. Los términos presentados deben seleccionarse dinámicamente para maximizar los beneficios de aprendizaje en cualquier momento. En tercer lugar, tenemos planes de incorporar comentarios de términos en nuestra barra de herramientas UCAIR [20], un complemento de Internet Explorer, para que funcione para la búsqueda web. También estamos interesados en estudiar cómo combinar la retroalimentación de términos con comentarios de relevancia o comentarios implícitos. Podríamos, por ejemplo, permitir al usuario modificar dinámicamente los términos en un modelo de idioma aprendido de los documentos de retroalimentación.8. Reconocimiento Este trabajo es apoyado en parte por la National Science Foundation otorga IIS-0347933 e IIS-0428472.9. Referencias [1] J. Allan. Comentarios de relevancia con demasiados datos. En Actas de la 18ª Conferencia Internacional ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 337-343, 1995. [2] J. Allan. Descripción general de la pista dura en TREC 2005 - Recuperación de alta precisión de documentos. En la Decimocuarta Conferencia de Recuperación de Textos, 2005. [3] P. Anick. Uso de comentarios terminológicos para el refinamiento de búsqueda web: un estudio basado en registros. En Actas de la 26ª Conferencia Anual de ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 88-95, 2003. [4] P. G. Anick y S. Tipirneni. El Asistente de búsqueda de paráfrasis: Comentarios terminológicos para la búsqueda de información iterativa. En Actas de la 22a Conferencia Internacional ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan y A. Singhal. Expansión de consulta automática usando Smart. En Actas de la tercera conferencia de recuperación de texto, 1994. [6] D. Harman. Hacia la expansión de consultas interactivas. En Actas de la 11ª Conferencia Anual de ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wade yJ. Allan. UMass en Trec 2003: Hard y Qa. En Trec, páginas 715-725, 2003. [8] H. Joho, C. Coverson, M. Sanderson y M. Beaulieu. Presentación jerárquica de términos de expansión. En Actas del Simposio ACM de 2002 sobre computación aplicada, páginas 645-649, 2002. [9] K. S. Jones, S. Walker y S. E. Robertson. Un modelo probabilístico de recuperación de información: desarrollo y estado. Informe técnico 446, Laboratorio de Computación, Universidad de Cambridge, 1998. [10] D. Kelly, V. D. Dollu y X. Fu. El usuario locuaz: una fuente de términos independiente del documento para la expansión de la consulta. En Actas de la 28ª Conferencia Anual de ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 457-464, 2005. [11] D. Kelly y X. Fu. Pedición de retroalimentación de relevancia del término: una investigación de la fuente del término y el contexto. En Actas de la 29a Conferencia Internacional ACM Sigir sobre investigación y desarrollo en recuperación de información, 2006. [12] J. Koenemann y N. Belkin. Un caso para la interacción: un estudio del comportamiento y efectividad de recuperación de información interactiva. En Actas de la Conferencia Sigchi sobre Factores Humanos en Sistemas de Computación, páginas 205-212, 1996. [13] V. Lavrenko y W. B. Croft. Modelos de idiomas basados en relevancia. En investigación y desarrollo en recuperación de información, páginas 120-127, 2001. [14] Y. Nemeth, B. Shapira y M. Taeib-Maimon. Evaluación del valor real y percibido de la expansión automática e interactiva de la consulta. En Actas de la 27ª Conferencia Anual de ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 526-527, 2004. [15] J. Ponte. Un enfoque de modelado de idiomas para la recuperación de información. Tesis doctoral, Universidad de Massachusetts en Amherst, 1998. [16] S. E. Robertson, S. Walker, S. Jones, M. Beaulieu y M. Gatford. Okapi en TREC-3. En Actas de la tercera conferencia de recuperación de texto, 1994. [17] J. Rocchio. Comentarios de relevancia en la recuperación de información. En el sistema de recuperación inteligente, las páginas 313-323.1971. [18] I. Ruthven. Reexaminando la efectividad potencial de la expansión de consulta interactiva. En Actas de la 26ª Conferencia Anual de ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 213-220, 2003. [19] G. Salton y C. Buckley. Mejora del rendimiento de la recuperación por retroalimentación relevante. Journal of the American Society for Information Science, 41: 288-297, 1990. [20] X. Shen, B. Tan y C. Zhai. Modelado de usuario implícito para búsqueda personalizada. En Actas de la 14ª Conferencia Internacional de ACM sobre Gestión de Información y Conocimiento, páginas 824-831, 2005. [21] X. Shen y C. Zhai. Comentarios activos en la recuperación de información ad-hoc. En Actas de la 28ª Conferencia Anual de ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 59-66, 2005. [22] A. Spink. Comentarios de relevancia y expansión de consultas: relación con el diseño. En Actas de la 17ª Conferencia Anual de ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 81-90, 1994. [23] J. Xu y W. B. Croft. Expansión de consulta utilizando análisis de documentos locales y globales. En Actas de la 19ª Conferencia Anual de ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 4-11, 1996. [24] H. Zaragoza, N. Craswell, M. Taylor, S. Saria y S. Robertson. Microsoft Cambridge en TREC-13: pistas web y duras. En Actas de la 13ª Conferencia de Recuperación de Textos, 2004. [25] C. Zhai y J. Lafferty. Comentarios basados en modelos en el enfoque de modelado de idiomas para la recuperación de información. En Actas de la Décima Conferencia Internacional sobre Gestión de Información y Conocimiento, páginas 403-410, 2001. [26] C. Zhai, A. Velivelli y B. Yu. Un modelo de mezcla de colección cruzada para minería de texto comparativo. En Actas de la Décima Conferencia Internacional de ACM Sigkdd sobre Discovery y Minería de datos, páginas 743-748, 2004.",
    "original_sentences": [
        "Term Feedback for Information Retrieval with Language Models Bin Tan† , Atulya Velivelli‡ , Hui Fang† , ChengXiang Zhai† Dept.",
        "of Computer Science† , Dept. of Electrical and Computer Engineering‡ University of Illinois at Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.edu ABSTRACT In this paper we study term-based feedback for information retrieval in the language modeling approach.",
        "With term feedback a user directly judges the relevance of individual terms without interaction with feedback documents, taking full control of the query expansion process.",
        "We propose a cluster-based method for selecting terms to present to the user for judgment, as well as effective algorithms for constructing refined query language models from user term feedback.",
        "Our algorithms are shown to bring significant improvement in retrieval accuracy over a non-feedback baseline, and achieve comparable performance to relevance feedback.",
        "They are helpful even when there are no relevant documents in the top.",
        "Categories and Subject Descriptors H.3.3 [Information Search and Retrieval]: Retrieval models General Terms Algorithms 1.",
        "INTRODUCTION In the language modeling approach to information retrieval, feedback is often modeled as estimating an improved query model or relevance model based on a set of feedback documents [25, 13].",
        "This is in line with the traditional way of doing relevance feedback - presenting a user with documents/passages for relevance judgment and then extracting terms from the judged documents or passages to expand the initial query.",
        "It is an indirect way of seeking users assistance for query model construction, in the sense that the refined query model (based on terms) is learned through feedback documents/passages, which are high-level structures of terms.",
        "It has the disadvantage that irrelevant terms, which occur along with relevant ones in the judged content, may be erroneously used for query expansion, causing undesired effects.",
        "For example, for the TREC query Hubble telescope achievements, when a relevant document talks more about the telescopes repair than its discoveries, irrelevant terms such as spacewalk can be added into the modified query.",
        "We can consider a more direct way to involve a user in query model improvement, without an intermediary step of document feedback that can introduce noise.",
        "The idea is to present a (reasonable) number of individual terms to the user and ask him/her to judge the relevance of each term or directly specify their probabilities in the query model.",
        "This strategy has been discussed in [15], but to our knowledge, it has not been seriously studied in existing language modeling literature.",
        "Compared to traditional relevance feedback, this term-based approach to interactive query model refinement has several advantages.",
        "First, the user has better control of the final query model through direct manipulation of terms: he/she can dictate which terms are relevant, irrelevant, and possibly, to what degree.",
        "This avoids the risk of bringing unwanted terms into the query model, although sometimes the user introduces low-quality terms.",
        "Second, because a term takes less time to judge than a documents full text or summary, and as few as around 20 presented terms can bring significant improvement in retrieval performance (as we will show later), term feedback makes it faster to gather user feedback.",
        "This is especially helpful for interactive adhoc search.",
        "Third, sometimes there are no relevant documents in the top N of the initially retrieved results if the topic is hard.",
        "This is often true when N is constrained to be small, which arises from the fact that the user is unwilling to judge too many documents.",
        "In this case, relevance feedback is useless, as no relevant document can be leveraged on, but term feedback is still often helpful, by allowing relevant terms to be picked from irrelevant documents.",
        "During our participation in the TREC 2005 HARD Track and continued study afterward, we explored how to exploit term feedback from the user to construct improved query models for information retrieval in the language modeling approach.",
        "We identified two key subtasks of term-based feedback, i.e., pre-feedback presentation term selection and post-feedback query model construction, with effective algorithms developed for both.",
        "We imposed a secondary cluster structure on terms and found that a cluster view sheds additional insight into the users information need, and provides a good way of utilizing term feedback.",
        "Through experiments we found that term feedback improves significantly over the nonfeedback baseline, even though the user often makes mistakes in relevance judgment.",
        "Among our algorithms, the one with best retrieval performance is TCFB, the combination of TFB, the direct term feedback algorithm, and CFB, the cluster-based feedback algorithm.",
        "We also varied the number of feedback terms and observed reasonable improvement even at low numbers.",
        "Finally, by comparing term feedback with document-level feedback, we found it to be a viable alternative to the latter with competitive retrieval performance.",
        "The rest of the paper is organized as follows.",
        "Section 2 discusses some related work.",
        "Section 4 outlines our general approach to term feedback.",
        "We present our method for presentation term selection in Section 3 and algorithms for query model construction in Section 5.",
        "The experiment results are given in Section 6.",
        "Section 7 concludes this paper. 2.",
        "RELATED WORK Relevance feedback[17, 19] has long been recognized as an effective method for improving retrieval performance.",
        "Normally, the top N documents retrieved using the original query are presented to the user for judgment, after which terms are extracted from the judged relevant documents, weighted by their potential of attracting more relevant documents, and added into the query model.",
        "The expanded query usually represents the users information need better than the original one, which is often just a short keyword query.",
        "A second iteration of retrieval using this modified query usually produces significant increase in retrieval accuracy.",
        "In cases where true relevance judgment is unavailable and all top N documents are assumed to be relevant, it is called blind or pseudo feedback[5, 16] and usually still brings performance improvement.",
        "Because document is a large text unit, when it is used for relevance feedback many irrelevant terms can be introduced into the feedback process.",
        "To overcome this, passage feedback is proposed and shown to improve feedback performance[1, 23].",
        "A more direct solution is to ask the user for their relevance judgment of feedback terms.",
        "For example, in some relevance feedback systems such as [12], there is an interaction step that allows the user to add or remove expansion terms after they are automatically extracted from relevant documents.",
        "This is categorized as interactive query expansion, where the original query is augmented with user-provided terms, which can come from direct user input (free-form text or keywords)[22, 7, 10] or user selection of system-suggested terms (using thesauri[6, 22] or extracted from feedback documents[6, 22, 12, 4, 7]).",
        "In many cases term relevance feedback has been found to effectively improve retrieval performance[6, 22, 12, 4, 10].",
        "For example, the study in [12] shows that the user prefers to have explicit knowledge and direct control of which terms are used for query expansion, and the penetrable interface that provides this freedom is shown to perform better than other interfaces.",
        "However, in some other cases there is no significant benefit[3, 14], even if the user likes interacting with expansion terms.",
        "In a simulated study carried out in [18], the author compares the retrieval performance of interactive query expansion and automatic query expansion with a simulated study, and suggests that the potential benefits of the former can be hard to achieve.",
        "The user is found to be not good at identifying useful terms for query expansion, when a simple term presentation interface is unable to provide sufficient semantic context of the feedback terms.",
        "Our work differs from the previous ones in two important aspects.",
        "First, when we choose terms to present to the user for relevance judgment, we not only consider single-term value (e.g., the relative frequency of a term in the top documents, which can be measured by metrics such as Robertson Selection Value and Simplified Kullback-Leibler Distance as listed in [24]), but also examine the cluster structure of the terms, so as to produce a balanced coverage of the different topic aspects.",
        "Second, with the language modelling framework, we allow an elaborate construction of the updated query model, by setting different probabilities for different terms based on whether it is a query term, its significance in the top documents, and its cluster membership.",
        "Although techniques for adjusting query term weights exist for vector space models[17] and probablistic relevance models[9], most of the aforementioned works do not use them, choosing to just append feedback terms to the original query (thus using equal weights for them), which can lead to poorer retrieval performance.",
        "The combination of the two aspects allows our method to perform much better than the baseline.",
        "The usual way for feedback term presentation is just to display the terms in a list.",
        "There have been some works on alternative user interfaces. [8] arranges terms in a hierarchy, and [11] compares three different interfaces, including terms + checkboxes, terms + context (sentences) + checkboxes, sentences + input text box.",
        "In both studies, however, there is no significant performance difference.",
        "In our work we adopt the simplest approach of terms + checkboxes.",
        "We focus on term presentation and query model construction from feedback terms, and believe using contexts to improve feedback term quality should be orthogonal to our method. 3.",
        "GENERAL APPROACH We follow the language modeling approach, and base our method on the KL-divergence retrieval model proposed in [25].",
        "With this model, the retrieval task involves estimating a query language model θq from a given query, a document language model θd from each document, and calculating their KL-divergence D(θq||θd), which is then used to score the documents. [25] treats relevance feedback as a query model re-estimation problem, i.e., computing an updated query model θq given the original query text and the extra evidence carried by the judged relevant documents.",
        "We adopt this view, and cast our task as updating the query model from user term feedback.",
        "There are two key subtasks here: First, how to choose the best terms to present to the user for judgment, in order to gather maximal evidence about the users information need.",
        "Second, how to compute an updated query model based on this term feedback evidence, so that it captures the users information need and translates into good retrieval performance. 4.",
        "PRESENTATION TERM SELECTION Proper selection of terms to be presented to the user for judgment is crucial to the success of term feedback.",
        "If the terms are poorly chosen and there are few relevant ones, the user will have a hard time looking for useful terms to help clarify his/her information need.",
        "If the relevant terms are plentiful, but all concentrate on a single aspect of the query topic, then we will only be able to get feedback on that aspect and missing others, resulting in a breadth loss in retrieved results.",
        "Therefore, it is important to carefully select presentation terms to maximize expected gain from user feedback, i.e., those that can potentially reveal most evidence of the users information need.",
        "This is similar to active feedback[21], which suggests that a retrieval system should actively probe the users information need, and in the case of relevance feedback, the feedback documents should be chosen to maximize learning benefits (e.g. diversely so as to increase coverage).",
        "In our approach, the top N documents from an initial retrieval using the original query form the source of feedback terms: all terms that appear in them are considered candidates to present to the user.",
        "These documents serve as pseudo-feedback, since they provide a much richer context than the original query (usually very short), while the user is not asked to judge their relevance.",
        "Due to the latter reason, it is possible to make N quite large (e.g., in our experiments we set N = 60) to increase its coverage of different aspects in the topic.",
        "The simplest way of selecting feedback terms is to choose the most frequent M terms from the N documents.",
        "This method, however, has two drawbacks.",
        "First, a lot of common noisy terms will be selected due to their high frequencies in the document collection, unless a stop-word list is used for filtering.",
        "Second, the presentation list will tend to be filled by terms from major aspects of the topic; those from a minor aspect are likely to be missed due to their relatively low frequencies.",
        "We solve the above problems by two corresponding measures.",
        "First, we introduce a background model θB that is estimated from collection statistics and explains the common terms, so that they are much less likely to appear in the presentation list.",
        "Second, the terms are selected from multiple clusters in the pseudo-feedback documents, to ensure sufficient representation of different aspects of the topic.",
        "We rely on the mixture multinomial model, which is used for theme discovery in [26].",
        "Specifically, we assume the N documents contain K clusters {Ci| i = 1, 2, · · · K}, each characterized by a multinomial word distribution (also known as unigram language model) θi and corresponding to an aspect of the topic.",
        "The documents are regarded as sampled from a mixture of K + 1 components, including the K clusters and the background model: p(w|d) = λBp(w|θB) + (1 − λB) K i=1 πd,ip(w|θi) where w is a word, λB is the mixture weight for the background model θB, and πd,i is the document-specific mixture weight for the i-th cluster model θi.",
        "We then estimate the cluster models by maximizing the probability of the pseudo-feedback documents being generated from the multinomial mixture model: log p(D|Λ) = d∈D w∈V c(w; d) log p(w|d) where D = {di| i = 1, 2, · · · N} is the set of the N documents, V is the vocabulary, c(w; d) is ws frequency in d and Λ = {θi| i = 1, 2, · · · K} ∪ {πdij | i = 1, 2, · · · N, j = 1, 2, · · · K} is the set of model parameters to estimate.",
        "The cluster models can be efficiently estimated using the Expectation-Maximization (EM) algorithm.",
        "For its details, we refer the reader to [26].",
        "Table 1 shows the cluster models for TREC query Transportation tunnel disasters (K = 3).",
        "Note that only the middle cluster is relevant.",
        "Table 1: Cluster models for topic 363 Transportation tunnel disasters Cluster 1 Cluster 2 Cluster 3 tunnel 0.0768 tunnel 0.0935 tunnel 0.0454 transport 0.0364 fire 0.0295 transport 0.0406 traffic 0.0206 truck 0.0236 toll 0.0166 railwai 0.0186 french 0.0220 amtrak 0.0153 harbor 0.0146 smoke 0.0157 train 0.0129 rail 0.0140 car 0.0154 airport 0.0122 bridg 0.0139 italian 0.0152 turnpik 0.0105 kilomet 0.0136 firefight 0.0144 lui 0.0095 truck 0.0133 blaze 0.0127 jersei 0.0093 construct 0.0131 blanc 0.0121 pass 0.0087 · · · · · · · · · From each of the K estimated clusters, we choose the L = M/K terms with highest probabilities to form a total of M presentation terms.",
        "If a term happens to be in top L in multiple clusters, we assign it to the cluster where it has highest probability and let the other clusters take one more term as compensation.",
        "We also filter out terms in the original query text because they tend to always be relevant when the query is short.",
        "The selected terms are then presented to the user for judgment.",
        "A sample (completed) feedback form is shown in Figure 1.",
        "In this study we only deal with binary judgment: a presented term is by default unchecked, and a user may check it to indicate relevance.",
        "We also do not explicitly exploit negative feedback (i.e., penalizing irrelevant terms), because with binary feedback an unchecked term is not necessarily irrelevant (maybe the user is unsure about its relevance).",
        "We could ask the user for finer judgment (e.g., choosing from highly relevant, somewhat relevant, do not know, somewhat irrelevant and highly irrelevant), but binary feedback is more compact, taking less space to display and less user effort to make judgment. 5.",
        "ESTIMATING QUERY MODELS FROM TERM FEEDBACK In this section, we present several algorithms for exploiting term feedback.",
        "The algorithms take as input the original query q, the clusters {θi} as generated by the theme discovery algorithm, the set of feedback terms T and their relevance judgment R, and outputs an updated query language model θq that makes best use of the feedback evidence to capture the users information need.",
        "First we describe our notations: • θq: The original query model, derived from query terms only: p(w|θq) = c(w; q) |q| where c(w; q) is the count of w in q, and |q| = w∈q c(w; q) is the query length. • θq : The updated query model which we need to estimate from term feedback. • θi (i = 1, 2, . . .",
        "K): The unigram language model of cluster Ci, as estimated using the theme discovery algorithm. • T = {ti,j} (i = 1 . . .",
        "K, j = 1 . . .",
        "L): The set of terms presented to the user for judgment. ti,j is the j-th term chosen from cluster Ci. • R = {δw|w ∈ T}: δw is an indicator variable that is 1 if w is judged relevant or 0 otherwise. 5.1 TFB (Direct Term Feedback) This is a straight-forward form of term feedback that does not involve any secondary structure.",
        "We give a weight of 1 to terms judged relevant by the user, a weight of μ to query terms, zero weight to other terms, and then apply normalization: p(w|θq ) = δw + μ c(w; q) w ∈T δw + μ|q| where w ∈T δw is the total number of terms that are judged relevant.",
        "We call this method TFB (direct Term FeedBack).",
        "If we let μ = 1, this approach is equivalent to appending the relevant terms after the original query, which is what standard query expansion (without term reweighting) does.",
        "If we set μ > 1, we are putting more emphasis on the query terms than the checked ones.",
        "Note that the result model will be more biased toward θq if the original query is long or the user feedback is weak, which makes sense, as we can trust more on the original query in either case.",
        "Figure 1: Filled clarification form for Topic 363 363 transportation tunnel disasters Please select all terms that are relevant to the topic. traffic railway harbor rail bridge kilometer construct swiss cross link kong hong river project meter shanghai fire truck french smoke car italian firefights blaze blanc mont victim franc rescue driver chamonix emerge toll amtrak train airport turnpike lui jersey pass rome z center electron road boston speed bu submit 5.2 CFB (Cluster Feedback) Here we exploit the cluster structure that played an important role when we selected the presentation terms.",
        "The clusters represent different aspects of the query topic, each of which may or may not be relevant.",
        "If we are able to identify the relevant clusters, we can combine them to generate a query model that is good at discovering documents belonging to these clusters (instead of the irrelevant ones).",
        "We could ask the user to directly judge the relevance of a cluster after viewing representative terms in that cluster, but this would sometimes be a difficult task for the user, who has to guess the semantics of a cluster via its set of terms, which may not be well connected to one another due to a lack of context.",
        "Therefore, we propose to learn cluster feedback indirectly, inferring the relevance of a cluster through the relevance of its feedback terms.",
        "Because each cluster has an equal number of terms presented to the user, the simplest measure of a clusters relevance is the number of terms that are judged relevant in it.",
        "Intuitively, the more terms are marked relevant in a cluster, the closer the cluster is to the query topic, and the more the cluster should participate in query modification.",
        "If we combine the cluster models using weights determined this way and then interpolate with the original query model, we get the following formula for query updating, which we call CFB (Cluster FeedBack): p(w|θq ) = λp(w|θq) + (1 − λ) K i=1 L j=1 δti,j K k=1 L j=1 δtk,j p(w|θi) where L j=1 δti,j is the number of relevant terms in cluster Ci, and K k=1 L j=1 δtk,j is the total number of relevant terms.",
        "We note that when there is only one cluster (K = 1), the above formula degenerates to p(w|θq ) = λp(w|θq) + (1 − λ)p(w|θ1) which is merely pseudo-feedback of the form proposed in [25]. 5.3 TCFB (Term-cluster Feedback) TFB and CFB both have their drawbacks.",
        "TFB assigns non-zero probabilities to the presented terms that are marked relevant, but completely ignores (a lot more) others, which may be left unchecked due to the users ignorance, or simply not included in the presentation list, but we should be able to infer their relevance from the checked ones.",
        "For example, in Figure 1, since as many as 5 terms in the middle cluster (the third and fourth columns) are checked, we should have high confidence in the relevance of other terms in that cluster.",
        "CFB remedies TFBs problem by treating the terms in a cluster collectively, so that unchecked/unpresented terms receive weights when presented terms in their clusters are judged as relevant, but it does not distinguish which terms in a cluster are presented or judged.",
        "Intuitively, the judged relevant terms should receive larger weights because they are explicitly indicated as relevant by the user.",
        "Therefore, we try to combine the two methods, hoping to get the best out of both.",
        "We do this by interpolating the TFB model with the CFB model, and call it TCFB: p(w|θq ) = αp(w|θqT F B ) + (1 − α)p(w|θqCF B ) 6.",
        "EXPERIMENTS In this section, we describe our experiment results.",
        "We first describe our experiment setup and present an overview of various methods performance.",
        "Then we discuss the effects of varying the parameter setting in the algorithms, as well as the number of presentation terms.",
        "Next we analyze user term feedback behavior and its relation to retrieval performance.",
        "Finally we compare term feedback to relevance feedback and show that it has its particular advantage. 6.1 Experiment Setup and Basic Results We took the opportunity of TREC 2005 HARD Track[2] for the evaluation of our algorithms.",
        "The tracks used the AQUAINT collection, a 3GB corpus of English newswire text.",
        "The topics included 50 ones previously known to be hard, i.e. with low retrieval performance.",
        "It is for these hard topics that user feedback is most helpful, as it can provide information to disambiguate the queries; with easy topics the user may be unwilling to spend efforts for feedback if the automatic retrieval results are good enough.",
        "Participants of the track were able to submit custom-designed clarification forms (CF) to solicit feedback from human assessors provided by Table 2: Retrieval performance for different methods and CF types.",
        "The last row is the percentage of MAP improvement over the baseline.",
        "The parameter settings μ = 4, λ = 0.1, α = 0.3 are near optimal.",
        "Baseline TFB1C TFB3C TFB6C CFB1C CFB3C CFB6C TCFB1C TCFB3C TCFB6C MAP 0.219 0.288 0.288 0.278 0.254 0.305 0.301 0.274 0.309 0.304 Pr@30 0.393 0.467 0.475 0.457 0.399 0.480 0.473 0.431 0.491 0.473 RR 4339 4753 4762 4740 4600 4907 4872 4767 4947 4906 % 0% 31.5% 31.5% 26.9% 16.0% 39.3% 37.4% 25.1% 41.1% 38.8% Table 3: MAP variation with the number of presented terms. # terms TFB1C TFB3C TFB6C CFB3C CFB6C TCFB3C TCFB6C 6 0.245 0.240 0.227 0.279 0.279 0.281 0.274 12 0.261 0.261 0.242 0.299 0.286 0.297 0.281 18 0.275 0.274 0.256 0.301 0.282 0.300 0.286 24 0.276 0.281 0.265 0.303 0.292 0.305 0.292 30 0.280 0.285 0.270 0.304 0.296 0.307 0.296 36 0.282 0.288 0.272 0.307 0.297 0.309 0.297 42 0.283 0.288 0.275 0.306 0.298 0.309 0.300 48 0.288 0.288 0.278 0.305 0.301 0.309 0.303 NIST.",
        "We designed three sets of clarification forms for term feedback, differing in the choice of K, the number of clusters, and L, the number of presented terms from each cluster.",
        "They are: 1× 48, a big cluster with 48 terms, 3 × 16, 3 clusters with 16 terms each, and 6 × 8, 6 clusters with 8 terms each.",
        "The total number of presented terms (M) is fixed at 48, so by comparing the performance of different types of clarification forms we can know the effects of different degree of clustering.",
        "For each topic, an assessor would complete the forms ordered by 6 × 8, 1 × 48 and 3 × 16, spending up to three minutes on each form.",
        "The sample clarification form shown in Figure 1 is of type 3 × 16.",
        "It is a simple and compact interface in which the user can check relevant terms.",
        "The form is self-explanatory; there is no need for extra user training on how to use it.",
        "Our initinal queries are constructed only using the topic title descriptions, which are on average 2.7 words in length.",
        "As our baseline we use the KL divergence retrieval method implemented in the Lemur Toolkit1 with 5 pseudo-feedback documents.",
        "We stem the terms, choose Dirichlet smoothing with a prior of 2000, and truncate query language models to 50 terms (these settings are used throughout the experiments).",
        "For all other parameters we use Lemurs default settings.",
        "The baseline turns out to perform above average among the track participants.",
        "After an initial run using this baseline retrieval method, we take the top 60 documents for each topic and apply the theme discovery algorithm to output the clusters (1, 3, or 6 of them), based on which we generate clarification forms.",
        "After user feedback is received, we run the term feedback algorithms (TFB, CFB or TCFB) to estimate updated query models, which are then used for a second iteration of retrieval.",
        "We evaluate the different retrieval methods performance on their rankings of the top 1000 documents.",
        "The evaluation metrics we adopt include mean average (non-interpolated) precision (MAP), precision at top 30 (Pr@30) and total relevant retrieved (RR).",
        "Table 2 shows the performance of various methods and configurations of K × L. The suffixes (1C, 3C, 6C) after TFB,CFB,TCFB stand for the number of clusters (K).",
        "For example, TCFB3C means the TCFB method on the 3 × 16 clarification forms.",
        "From Table 2 we can make the following observations: 1 http://www.lemurproject.com 1.",
        "All methods perform considerably better than the pseudofeedback baseline, with TCFB3C achieving a highest 41.1% improvement in MAP, indicating significant contribution of term feedback for clarification of the users information need.",
        "In other words, term feedback is truly helpful for improving retrieval accuracy. 2.",
        "For TFB, the performance is almost equal on the 1 × 48 and 3 × 16 clarification forms in terms of MAP (although the latter is slightly better in Pr@30 and RR), and a little worse on the 6 × 8 ones. 3.",
        "Both CFB3C and CFB6C perform better than their TFB counterparts in all three metrics, suggesting that feedback on a secondary cluster structure is indeed beneficial.",
        "CFB1C is actually worse because it cannot adjust the weight of its (single) cluster from term feedback and it is merely pseudofeedback. 4.",
        "Although TCFB is just a simple mixture of TFB and CFB by interpolation, it is able to outperform both.",
        "This supports our speculation that TCFB overcomes the drawbacks of TFB (paying attention only to checked terms) and CFB (not distinguishing checked and unchecked terms in a cluster).",
        "Except for TCFB6C v.s.",
        "CFB6C, the performance advantage of TCFB over TFB/CFB is significant at p < 0.05 using the Wilcoxon signed rank test.",
        "This is not true in the case of TFB v.s.",
        "CFB, each of which is better than the other in nearly half of the topics. 6.2 Reduction of Presentation Terms In some situations we may have to reduce the number of presentation terms due to limits in display space or user feedback efforts.",
        "It is interesting to know whether our algorithms performance deteriorates when the user is presented with fewer terms.",
        "Because the presentation terms within each cluster are generated in decreasing order of their frequencies, the presentation list forms a subset of the original one if its size is reduced2 .",
        "Therefore, we can easily simulate what happens when the number of presentation terms decreases 2 There are complexities arising from terms appearing in top L of multiple clusters, but these are exceptions from M to M : we will keep all judgments of the top L = M /K terms in each cluster and discard those of others.",
        "Table 3 shows the performance of various algorithms as the number of presentation terms ranges from 6 to 48.",
        "We find that the performance of TFB is more susceptible to presentation term reduction than that of CFB or TCFB.",
        "For example, at 12 terms the MAP of TFB3C is 90.6% of that at 48 terms, while the numbers for CFB3C and TCFB3C are 98.0% and 96.1% respectively.",
        "We conjecture the reason to be that while TFBs performance heavily depends on how many good terms are chosen for query expansion, CFB only needs a rough estimate of cluster weights to work.",
        "Also, the 3 × 16 clarification forms seem to be more robust than the 6 × 8 ones: at 12 terms the MAP of TFB6C is 87.1% of that at 48 terms, lower than 90.6% for TFB3C.",
        "Similarly, for CFB it is 95.0% against 98.0%.",
        "This is natual, as for a large cluster number of 6, it is easier to get into the situation where each cluster gets too few presentation terms to make topic diversification useful.",
        "Overall, we are surprised to see that the algorithms are still able to perform reasonably well when the number of presentation terms is small.",
        "For example, at only 12 terms CFB3C (the clarification form is of size 3 × 4) can still improve 36.5% over the baseline, dropping slightly from 39.3% at 48 terms. 6.3 User Feedback Analysis In this part we study several aspects of users term feedback behavior, and whether they are connected to retrieval performance.",
        "Figure 2: Clarification form completion time distributions 0−30 30−60 60−90 90−120 120−150 150−180 0 5 10 15 20 25 30 35 completion time (seconds) #topics 1×48 3×16 6×8 Figure 2 shows the distribution of time needed to complete a clarification form3 .",
        "We see that the user is usually able to finish term feedback within a reasonably short amount of time: for more than half of the topics the clarification form is completed in just 1 minute, and only a small fraction of topics (less than 10% for 1 × 48 and 3 × 16) take more than 2 minutes.",
        "This suggests that term feedback is suitable for interactive ad-hoc retrieval, where a user usually does not want to spend too much time on providing feedback.",
        "We find that a user often makes mistakes when judging term relevance.",
        "Sometimes a relevant term may be left out because its connection to the query topic is not obvious to the user.",
        "Other times a dubious term may be included but turns out to be irrelevant.",
        "Take the topic in Figure 1 for example.",
        "There was a fire disaster in Mont 3 The maximal time is 180 seconds, as the NIST assessor would be forced to submit the form at that moment.",
        "Table 4: Term selection statistics (topic average) CF Type 1 × 48 3 × 16 6 × 8 # checked terms 14.8 13.3 11.2 # rel. terms 15.0 12.6 11.2 # rel. checked terms 7.9 6.9 5.9 precision 0.534 0.519 0.527 recall 0.526 0.548 0.527 Blanc Tunnel between France and Italy in 1999, but the user failed to select such keywords as mont, blanc, french and italian due to his/her ignorance of the event.",
        "Indeed, without proper context it would be hard to make perfect judgment.",
        "What is then, the extent to which the user is good at term feedback?",
        "Does it have serious impact on retrieval performance?",
        "To answer these questions, we need a measure of individual terms true relevance.",
        "We adopt the Simplified KL Divergence metric used in [24] to decide query expansion terms as our term relevance measure: σKLD(w) = p(w|R) log p(w|R) p(w|¬R) where p(w|R) is the probability that a relevant document contains term w, and p(w|¬R) is the probability that an irrelevant document contains w, both of which can be easily computed via maximum likelihood estimate given document-level relevance judgment.",
        "If σKLD(w) > 0, w is more likely to appear in relevant documents than irrelevant ones.",
        "We consider a term relevant if its Simplified KL Divergence value is greater than a certain threshold σ0.",
        "We can then define precision and recall of user term judgment accordingly: precision is the fraction of terms checked by the user that are relevant; recall is the fraction of presented relevant terms that are checked by the user.",
        "Table 4 shows the number of checked terms, relevant terms and relevant checked terms when σ0 is set to 1.0, as well as the precision/recall of user term judgment.",
        "Note that when the clarification forms contain more clusters, fewer terms are checked: 14.8 for 1 × 48, 13.3 for 3 × 16 and 11.2 for 6×8.",
        "Similar pattern holds for relevant terms and relevant checked terms.",
        "There seems to be a trade-off between increasing topic diversity by clustering and losing extra relevant terms: when there are more clusters, each of them gets fewer terms to present, which can hurt a major relevant cluster that contains many relevant terms.",
        "Therefore, it is not always helpful to have more clusters, e.g., TFB6C is actually worse than TFB1C.",
        "The major finding we can make from Table 4 is that the user is not particularly good at identifying relevant terms, which echoes the discovery in [18].",
        "In the case of 3 × 16 clarification forms, the average number of terms checked as relevant by the user is 13.3 per topic, and the average number of relevant terms whose σKLD value exceed 1.0 is 12.6.",
        "The user is able to recognize only 6.9 of these terms on average.",
        "Indeed, the precision and recall of user feedback terms (as defined previously) are far from perfect.",
        "On the other hand, If the user had correctly checked all such relevant terms, the performance of our algorithms would have increased a lot, as shown in Table 5.",
        "We see that TFB gets big improvement when there is an oracle who checks all relevant terms, while CFB meets a bottleneck around MAP of 0.325, since all it does is adjust cluster weights, and when the learned weights are close to being accurate, it cannot benefit more from term feedback.",
        "Also note that TCFB fails to outperform TFB, probably because TFB is sufficiently accurate.",
        "Table 5: Change of MAP when using all (and only) relevant terms (σKLD > 1.0) for feedback. original term feedback relevant term feedback TF1 0.288 0.354 TF3 0.288 0.354 TF6 0.278 0.346 CF3 0.305 0.325 CF6 0.301 0.326 TCF3 0.309 0.345 TCF6 0.304 0.341 6.4 Comparison with Relevance Feedback Now we compare term feedback with document-level relevance feedback, in which the user is presented with the top N documents from an initial retrieval and asked to judge their relevance.",
        "The feedback process is simulated using document relevance judgment from NIST.",
        "We use the mixture model based feedback method proposed in [25], with mixture noise set to 0.95 and feedback coefficient set to 0.9.",
        "Comparative evaluation of relevance feedback against other methods is complicated by the fact that some documents have already been viewed during feedback, so it makes no sense to include them in the retrieval results of the second run.",
        "However, this does not hold for term feedback.",
        "Thus, to make it fair w.r.t. users information gain, if the feedback documents are relevant, they should be kept in the top of the ranking; if they are irrelevant, they should be left out.",
        "Therefore, we use relevance feedback to produce a ranking of top 1000 retrieved documents but with every feedback document excluded, and then prepend the relevant feedback documents at the front.",
        "Table 6 shows the performance of relevance feedback for different values of N and compares it with TCFB3C.",
        "Table 6: Performance of relevance feedback for different number of feedback documents (N).",
        "N MAP Pr@30 RR 5 0.302 0.586 4779 10 0.345 0.670 4916 20 0.389 0.772 5004 TCFB3C 0.309 0.491 4947 We see that the performance of TCFB3C is comparable to that of relevance feedback using 5 documents.",
        "Although it is poorer than when there are 10 feedback documents in terms of MAP and Pr@30, it does retrieve more documents (4947) when going down the ranked list.",
        "We try to compare the quality of automatically inserted terms in relevance feedback with that of manually selected terms in term feedback.",
        "This is done by truncating the relevance feedback modified query model to a size equal to the number of checked terms for the same topic.",
        "We can then compare the terms in the truncated model with the checked terms.",
        "Figure 3 shows the distribution of the terms σKLD scores.",
        "We find that term feedback tends to produce expansion terms of higher quality(those with σKLD > 1) compared to relevance feedback (with 10 feedback documents).",
        "This does not contradict the fact that the latter yields higher retrieval performance.",
        "Actually, when we use the truncated query model instead of the intact one refined from relevance feedback, the MAP is only 0.304.",
        "The truth Figure 3: Comparison of expansion term quality between relevance feedback (with 10 feedback documents) and term feedback (with 3 × 16 CFs) −1−0 0−1 1−2 2−3 3−4 4−5 5−6 0 50 100 150 200 250 300 350 σKLD #terms relevance feedback term feedback is, although there are many unwanted terms in the expanded query model from feedback documents, there are also more relevant terms than what the user can possibly select from the list of presentation terms generated with pseudo-feedback documents, and the positive effects often outweights the negative ones.",
        "We are interested to know under what circumstances term feedback has advantage over relevance feedback.",
        "One such situation is when none of the top N feedback documents is relevant, rendering relevance feedback useless.",
        "This is not infrequent, as one might have thought: out of the 50 topics, there are 13 such cases when N = 5, 10 when N = 10, and still 3 when N = 20.",
        "When this happens, one can only back off to the original retrieval method; the power of relevance feedback is lost.",
        "Surprisingly, in 11 out of 13 such cases where relevance feedback seems impossible, the user is able to check at least 2 relevant terms from the 3 × 16 clarification form (we consider term t to be relevant if σKLD(t) > 1.0).",
        "Furthermore, in 10 out of them TCFB3C outperforms the pseudo-feedback baseline, increasing MAP from 0.076 to 0.146 on average (these are particularly hard topics).",
        "We think that there are two possible explanations for this phenomenon of term feedback being active even when relevance feedback does not work: First, even if none of the top N (suppose it is a small number) documents are relevant, we may still find relevant documents in top 60, which is more inclusive but usually unreachable when people are doing relevance feedback in interactive ad-hoc search, from which we can draw feedback terms.",
        "This is true for topic 367 piracy, where the top 10 feedback documents are all about software piracy, yet there are documents between 10-60 that are about piracy on the seas (which is about the real information need), contributing terms such as pirate, ship for selection in the clarification form.",
        "Second, for some topics, a document needs to meet some special condition in order to be relevant.",
        "The top N documents may be related to the topic, but nonetheless irrelevant.",
        "In this case, we may still extract useful terms from these documents, even if they do not qualify as relevant ones.",
        "For example, in topic 639 consumer online shopping, a document needs to mention what contributes to shopping growth to really match the specified information need, hence none of the top 10 feedback documents are regarded as relevant.",
        "But nevertheless, the feedback terms such as retail, commerce are good for query expansion. 7.",
        "CONCLUSIONS In this paper we studied the use of term feedback for interactive information retrieval in the language modeling approach.",
        "We proposed a cluster-based method for selecting presentation terms as well as algorithms to estimate refined query models from user term feedback.",
        "We saw significant improvement in retrieval accuracy brought by term feedback, in spite of the fact that a user often makes mistakes in relevance judgment that hurts its performance.",
        "We found the best-performing algorithm to be TCFB, which benefits from the combination of directly observed term evidence with TFB and indirectly learned cluster relevance with CFB.",
        "When we reduced the number of presentation terms, term feedback is still able to keep much of its performance gain over the baseline.",
        "Finally, we compared term feedback to document-level relevance feedback, and found that TCFB3Cs performance is on a par with the latter with 5 feedback documents.",
        "We regarded term feedback as a viable alternative to traditional relevance feedback, especially when there are no relevant documents in the top.",
        "We propose to extend our work in several ways.",
        "First, we want to study whether the use of various contexts can help the user to better identify term relevance, while not sacrificing the simplicity and compactness of term feedback.",
        "Second, currently all terms are presented to the user in a single batch.",
        "We could instead consider iterative term feedback, by presenting a small number of terms first, and show more terms after receiving user feedback or stop when the refined query is good enough.",
        "The presented terms should be selected dynamically to maximize learning benefits at any moment.",
        "Third, we have plans to incorporate term feedback into our UCAIR toolbar[20], an Internet Explorer plugin, to make it work for web search.",
        "We are also interested in studying how to combine term feedback with relevance feedback or implicit feedback.",
        "We could, for example, allow the user to dynamically modify terms in a language model learned from feedback documents. 8.",
        "ACKNOWLEDGMENT This work is supported in part by the National Science Foundation grants IIS-0347933 and IIS-0428472. 9.",
        "REFERENCES [1] J. Allan.",
        "Relevance feedback with too much data.",
        "In Proceedings of the 18th annual international ACM SIGIR conference on research and development in information retrieval, pages 337-343, 1995. [2] J. Allan.",
        "HARD track overview in TREC 2005 - High Accuracy Retrieval from Documents.",
        "In The Fourteenth Text REtrieval Conference, 2005. [3] P. Anick.",
        "Using terminological feedback for web search refinement: a log-based study.",
        "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 88-95, 2003. [4] P. G. Anick and S. Tipirneni.",
        "The paraphrase search assistant: terminological feedback for iterative information seeking.",
        "In Proceedings of the 22nd annual international ACM SIGIR conference on research and development in information retrieval, pages 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan, and A. Singhal.",
        "Automatic query expansion using SMART.",
        "In Proceedings of the Third Text REtrieval Conference, 1994. [6] D. Harman.",
        "Towards interactive query expansion.",
        "In Proceedings of the 11th annual international ACM SIGIR conference on research and development in information retrieval, pages 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wade, and J. Allan.",
        "UMass at TREC 2003: HARD and QA.",
        "In TREC, pages 715-725, 2003. [8] H. Joho, C. Coverson, M. Sanderson, and M. Beaulieu.",
        "Hierarchical presentation of expansion terms.",
        "In Proceedings of the 2002 ACM symposium on applied computing, pages 645-649, 2002. [9] K. S. Jones, S. Walker, and S. E. Robertson.",
        "A probabilistic model of information retrieval: development and status.",
        "Technical Report 446, Computer Laboratory, University of Cambridge, 1998. [10] D. Kelly, V. D. Dollu, and X. Fu.",
        "The loquacious user: a document-independent source of terms for query expansion.",
        "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 457-464, 2005. [11] D. Kelly and X. Fu.",
        "Elicitation of term relevance feedback: an investigation of term source and context.",
        "In Proceedings of the 29th annual international ACM SIGIR conference on research and development in information retrieval, 2006. [12] J. Koenemann and N. Belkin.",
        "A case for interaction: A study of interactive information retrieval behavior and effectiveness.",
        "In Proceedings of the SIGCHI conference on human factors in computing systems, pages 205-212, 1996. [13] V. Lavrenko and W. B. Croft.",
        "Relevance-based language models.",
        "In Research and Development in Information Retrieval, pages 120-127, 2001. [14] Y. Nemeth, B. Shapira, and M. Taeib-Maimon.",
        "Evaluation of the real and perceived value of automatic and interactive query expansion.",
        "In Proceedings of the 27th annual international ACM SIGIR conference on research and development in information retrieval, pages 526-527, 2004. [15] J. Ponte.",
        "A Language Modeling Approach to Information Retrieval.",
        "PhD thesis, University of Massachusetts at Amherst, 1998. [16] S. E. Robertson, S. Walker, S. Jones, M. Beaulieu, and M. Gatford.",
        "Okapi at TREC-3.",
        "In Proceedings of the Third Text REtrieval Conference, 1994. [17] J. Rocchio.",
        "Relevance feedback in information retrieval.",
        "In The SMART retrieval system, pages 313-323. 1971. [18] I. Ruthven.",
        "Re-examining the potential effectiveness of interactive query expansion.",
        "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 213-220, 2003. [19] G. Salton and C. Buckley.",
        "Improving retrieval performance by relevance feedback.",
        "Journal of the American Society for Information Science, 41:288-297, 1990. [20] X. Shen, B. Tan, and C. Zhai.",
        "Implicit user modeling for personalized search.",
        "In Proceedings of the 14th ACM international conference on information and knowledge management, pages 824-831, 2005. [21] X. Shen and C. Zhai.",
        "Active feedback in ad-hoc information retrieval.",
        "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 59-66, 2005. [22] A. Spink.",
        "Term relevance feedback and query expansion: relation to design.",
        "In Proceedings of the 17th annual international ACM SIGIR conference on research and development in information retrieval, pages 81-90, 1994. [23] J. Xu and W. B. Croft.",
        "Query expansion using local and global document analysis.",
        "In Proceedings of the 19th annual international ACM SIGIR conference on research and development in information retrieval, pages 4-11, 1996. [24] H. Zaragoza, N. Craswell, M. Taylor, S. Saria, and S. Robertson.",
        "Microsoft cambridge at TREC-13: Web and HARD tracks.",
        "In Proceedings of the 13th Text REtrieval Conference, 2004. [25] C. Zhai and J. Lafferty.",
        "Model-based feedback in the language modeling approach to information retrieval.",
        "In Proceedings of the tenth international conference on information and knowledge management, pages 403-410, 2001. [26] C. Zhai, A. Velivelli, and B. Yu.",
        "A cross-collection mixture model for comparative text mining.",
        "In Proceedings of the tenth ACM SIGKDD international conference on knowledge discovery and data mining, pages 743-748, 2004."
    ],
    "error_count": 0,
    "keys": {
        "term-based feedback": {
            "translated_key": "Comentarios basados en términos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Term Feedback for Information Retrieval with Language Models Bin Tan† , Atulya Velivelli‡ , Hui Fang† , ChengXiang Zhai† Dept.",
                "of Computer Science† , Dept. of Electrical and Computer Engineering‡ University of Illinois at Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.edu ABSTRACT In this paper we study <br>term-based feedback</br> for information retrieval in the language modeling approach.",
                "With term feedback a user directly judges the relevance of individual terms without interaction with feedback documents, taking full control of the query expansion process.",
                "We propose a cluster-based method for selecting terms to present to the user for judgment, as well as effective algorithms for constructing refined query language models from user term feedback.",
                "Our algorithms are shown to bring significant improvement in retrieval accuracy over a non-feedback baseline, and achieve comparable performance to relevance feedback.",
                "They are helpful even when there are no relevant documents in the top.",
                "Categories and Subject Descriptors H.3.3 [Information Search and Retrieval]: Retrieval models General Terms Algorithms 1.",
                "INTRODUCTION In the language modeling approach to information retrieval, feedback is often modeled as estimating an improved query model or relevance model based on a set of feedback documents [25, 13].",
                "This is in line with the traditional way of doing relevance feedback - presenting a user with documents/passages for relevance judgment and then extracting terms from the judged documents or passages to expand the initial query.",
                "It is an indirect way of seeking users assistance for query model construction, in the sense that the refined query model (based on terms) is learned through feedback documents/passages, which are high-level structures of terms.",
                "It has the disadvantage that irrelevant terms, which occur along with relevant ones in the judged content, may be erroneously used for query expansion, causing undesired effects.",
                "For example, for the TREC query Hubble telescope achievements, when a relevant document talks more about the telescopes repair than its discoveries, irrelevant terms such as spacewalk can be added into the modified query.",
                "We can consider a more direct way to involve a user in query model improvement, without an intermediary step of document feedback that can introduce noise.",
                "The idea is to present a (reasonable) number of individual terms to the user and ask him/her to judge the relevance of each term or directly specify their probabilities in the query model.",
                "This strategy has been discussed in [15], but to our knowledge, it has not been seriously studied in existing language modeling literature.",
                "Compared to traditional relevance feedback, this term-based approach to interactive query model refinement has several advantages.",
                "First, the user has better control of the final query model through direct manipulation of terms: he/she can dictate which terms are relevant, irrelevant, and possibly, to what degree.",
                "This avoids the risk of bringing unwanted terms into the query model, although sometimes the user introduces low-quality terms.",
                "Second, because a term takes less time to judge than a documents full text or summary, and as few as around 20 presented terms can bring significant improvement in retrieval performance (as we will show later), term feedback makes it faster to gather user feedback.",
                "This is especially helpful for interactive adhoc search.",
                "Third, sometimes there are no relevant documents in the top N of the initially retrieved results if the topic is hard.",
                "This is often true when N is constrained to be small, which arises from the fact that the user is unwilling to judge too many documents.",
                "In this case, relevance feedback is useless, as no relevant document can be leveraged on, but term feedback is still often helpful, by allowing relevant terms to be picked from irrelevant documents.",
                "During our participation in the TREC 2005 HARD Track and continued study afterward, we explored how to exploit term feedback from the user to construct improved query models for information retrieval in the language modeling approach.",
                "We identified two key subtasks of <br>term-based feedback</br>, i.e., pre-feedback presentation term selection and post-feedback query model construction, with effective algorithms developed for both.",
                "We imposed a secondary cluster structure on terms and found that a cluster view sheds additional insight into the users information need, and provides a good way of utilizing term feedback.",
                "Through experiments we found that term feedback improves significantly over the nonfeedback baseline, even though the user often makes mistakes in relevance judgment.",
                "Among our algorithms, the one with best retrieval performance is TCFB, the combination of TFB, the direct term feedback algorithm, and CFB, the cluster-based feedback algorithm.",
                "We also varied the number of feedback terms and observed reasonable improvement even at low numbers.",
                "Finally, by comparing term feedback with document-level feedback, we found it to be a viable alternative to the latter with competitive retrieval performance.",
                "The rest of the paper is organized as follows.",
                "Section 2 discusses some related work.",
                "Section 4 outlines our general approach to term feedback.",
                "We present our method for presentation term selection in Section 3 and algorithms for query model construction in Section 5.",
                "The experiment results are given in Section 6.",
                "Section 7 concludes this paper. 2.",
                "RELATED WORK Relevance feedback[17, 19] has long been recognized as an effective method for improving retrieval performance.",
                "Normally, the top N documents retrieved using the original query are presented to the user for judgment, after which terms are extracted from the judged relevant documents, weighted by their potential of attracting more relevant documents, and added into the query model.",
                "The expanded query usually represents the users information need better than the original one, which is often just a short keyword query.",
                "A second iteration of retrieval using this modified query usually produces significant increase in retrieval accuracy.",
                "In cases where true relevance judgment is unavailable and all top N documents are assumed to be relevant, it is called blind or pseudo feedback[5, 16] and usually still brings performance improvement.",
                "Because document is a large text unit, when it is used for relevance feedback many irrelevant terms can be introduced into the feedback process.",
                "To overcome this, passage feedback is proposed and shown to improve feedback performance[1, 23].",
                "A more direct solution is to ask the user for their relevance judgment of feedback terms.",
                "For example, in some relevance feedback systems such as [12], there is an interaction step that allows the user to add or remove expansion terms after they are automatically extracted from relevant documents.",
                "This is categorized as interactive query expansion, where the original query is augmented with user-provided terms, which can come from direct user input (free-form text or keywords)[22, 7, 10] or user selection of system-suggested terms (using thesauri[6, 22] or extracted from feedback documents[6, 22, 12, 4, 7]).",
                "In many cases term relevance feedback has been found to effectively improve retrieval performance[6, 22, 12, 4, 10].",
                "For example, the study in [12] shows that the user prefers to have explicit knowledge and direct control of which terms are used for query expansion, and the penetrable interface that provides this freedom is shown to perform better than other interfaces.",
                "However, in some other cases there is no significant benefit[3, 14], even if the user likes interacting with expansion terms.",
                "In a simulated study carried out in [18], the author compares the retrieval performance of interactive query expansion and automatic query expansion with a simulated study, and suggests that the potential benefits of the former can be hard to achieve.",
                "The user is found to be not good at identifying useful terms for query expansion, when a simple term presentation interface is unable to provide sufficient semantic context of the feedback terms.",
                "Our work differs from the previous ones in two important aspects.",
                "First, when we choose terms to present to the user for relevance judgment, we not only consider single-term value (e.g., the relative frequency of a term in the top documents, which can be measured by metrics such as Robertson Selection Value and Simplified Kullback-Leibler Distance as listed in [24]), but also examine the cluster structure of the terms, so as to produce a balanced coverage of the different topic aspects.",
                "Second, with the language modelling framework, we allow an elaborate construction of the updated query model, by setting different probabilities for different terms based on whether it is a query term, its significance in the top documents, and its cluster membership.",
                "Although techniques for adjusting query term weights exist for vector space models[17] and probablistic relevance models[9], most of the aforementioned works do not use them, choosing to just append feedback terms to the original query (thus using equal weights for them), which can lead to poorer retrieval performance.",
                "The combination of the two aspects allows our method to perform much better than the baseline.",
                "The usual way for feedback term presentation is just to display the terms in a list.",
                "There have been some works on alternative user interfaces. [8] arranges terms in a hierarchy, and [11] compares three different interfaces, including terms + checkboxes, terms + context (sentences) + checkboxes, sentences + input text box.",
                "In both studies, however, there is no significant performance difference.",
                "In our work we adopt the simplest approach of terms + checkboxes.",
                "We focus on term presentation and query model construction from feedback terms, and believe using contexts to improve feedback term quality should be orthogonal to our method. 3.",
                "GENERAL APPROACH We follow the language modeling approach, and base our method on the KL-divergence retrieval model proposed in [25].",
                "With this model, the retrieval task involves estimating a query language model θq from a given query, a document language model θd from each document, and calculating their KL-divergence D(θq||θd), which is then used to score the documents. [25] treats relevance feedback as a query model re-estimation problem, i.e., computing an updated query model θq given the original query text and the extra evidence carried by the judged relevant documents.",
                "We adopt this view, and cast our task as updating the query model from user term feedback.",
                "There are two key subtasks here: First, how to choose the best terms to present to the user for judgment, in order to gather maximal evidence about the users information need.",
                "Second, how to compute an updated query model based on this term feedback evidence, so that it captures the users information need and translates into good retrieval performance. 4.",
                "PRESENTATION TERM SELECTION Proper selection of terms to be presented to the user for judgment is crucial to the success of term feedback.",
                "If the terms are poorly chosen and there are few relevant ones, the user will have a hard time looking for useful terms to help clarify his/her information need.",
                "If the relevant terms are plentiful, but all concentrate on a single aspect of the query topic, then we will only be able to get feedback on that aspect and missing others, resulting in a breadth loss in retrieved results.",
                "Therefore, it is important to carefully select presentation terms to maximize expected gain from user feedback, i.e., those that can potentially reveal most evidence of the users information need.",
                "This is similar to active feedback[21], which suggests that a retrieval system should actively probe the users information need, and in the case of relevance feedback, the feedback documents should be chosen to maximize learning benefits (e.g. diversely so as to increase coverage).",
                "In our approach, the top N documents from an initial retrieval using the original query form the source of feedback terms: all terms that appear in them are considered candidates to present to the user.",
                "These documents serve as pseudo-feedback, since they provide a much richer context than the original query (usually very short), while the user is not asked to judge their relevance.",
                "Due to the latter reason, it is possible to make N quite large (e.g., in our experiments we set N = 60) to increase its coverage of different aspects in the topic.",
                "The simplest way of selecting feedback terms is to choose the most frequent M terms from the N documents.",
                "This method, however, has two drawbacks.",
                "First, a lot of common noisy terms will be selected due to their high frequencies in the document collection, unless a stop-word list is used for filtering.",
                "Second, the presentation list will tend to be filled by terms from major aspects of the topic; those from a minor aspect are likely to be missed due to their relatively low frequencies.",
                "We solve the above problems by two corresponding measures.",
                "First, we introduce a background model θB that is estimated from collection statistics and explains the common terms, so that they are much less likely to appear in the presentation list.",
                "Second, the terms are selected from multiple clusters in the pseudo-feedback documents, to ensure sufficient representation of different aspects of the topic.",
                "We rely on the mixture multinomial model, which is used for theme discovery in [26].",
                "Specifically, we assume the N documents contain K clusters {Ci| i = 1, 2, · · · K}, each characterized by a multinomial word distribution (also known as unigram language model) θi and corresponding to an aspect of the topic.",
                "The documents are regarded as sampled from a mixture of K + 1 components, including the K clusters and the background model: p(w|d) = λBp(w|θB) + (1 − λB) K i=1 πd,ip(w|θi) where w is a word, λB is the mixture weight for the background model θB, and πd,i is the document-specific mixture weight for the i-th cluster model θi.",
                "We then estimate the cluster models by maximizing the probability of the pseudo-feedback documents being generated from the multinomial mixture model: log p(D|Λ) = d∈D w∈V c(w; d) log p(w|d) where D = {di| i = 1, 2, · · · N} is the set of the N documents, V is the vocabulary, c(w; d) is ws frequency in d and Λ = {θi| i = 1, 2, · · · K} ∪ {πdij | i = 1, 2, · · · N, j = 1, 2, · · · K} is the set of model parameters to estimate.",
                "The cluster models can be efficiently estimated using the Expectation-Maximization (EM) algorithm.",
                "For its details, we refer the reader to [26].",
                "Table 1 shows the cluster models for TREC query Transportation tunnel disasters (K = 3).",
                "Note that only the middle cluster is relevant.",
                "Table 1: Cluster models for topic 363 Transportation tunnel disasters Cluster 1 Cluster 2 Cluster 3 tunnel 0.0768 tunnel 0.0935 tunnel 0.0454 transport 0.0364 fire 0.0295 transport 0.0406 traffic 0.0206 truck 0.0236 toll 0.0166 railwai 0.0186 french 0.0220 amtrak 0.0153 harbor 0.0146 smoke 0.0157 train 0.0129 rail 0.0140 car 0.0154 airport 0.0122 bridg 0.0139 italian 0.0152 turnpik 0.0105 kilomet 0.0136 firefight 0.0144 lui 0.0095 truck 0.0133 blaze 0.0127 jersei 0.0093 construct 0.0131 blanc 0.0121 pass 0.0087 · · · · · · · · · From each of the K estimated clusters, we choose the L = M/K terms with highest probabilities to form a total of M presentation terms.",
                "If a term happens to be in top L in multiple clusters, we assign it to the cluster where it has highest probability and let the other clusters take one more term as compensation.",
                "We also filter out terms in the original query text because they tend to always be relevant when the query is short.",
                "The selected terms are then presented to the user for judgment.",
                "A sample (completed) feedback form is shown in Figure 1.",
                "In this study we only deal with binary judgment: a presented term is by default unchecked, and a user may check it to indicate relevance.",
                "We also do not explicitly exploit negative feedback (i.e., penalizing irrelevant terms), because with binary feedback an unchecked term is not necessarily irrelevant (maybe the user is unsure about its relevance).",
                "We could ask the user for finer judgment (e.g., choosing from highly relevant, somewhat relevant, do not know, somewhat irrelevant and highly irrelevant), but binary feedback is more compact, taking less space to display and less user effort to make judgment. 5.",
                "ESTIMATING QUERY MODELS FROM TERM FEEDBACK In this section, we present several algorithms for exploiting term feedback.",
                "The algorithms take as input the original query q, the clusters {θi} as generated by the theme discovery algorithm, the set of feedback terms T and their relevance judgment R, and outputs an updated query language model θq that makes best use of the feedback evidence to capture the users information need.",
                "First we describe our notations: • θq: The original query model, derived from query terms only: p(w|θq) = c(w; q) |q| where c(w; q) is the count of w in q, and |q| = w∈q c(w; q) is the query length. • θq : The updated query model which we need to estimate from term feedback. • θi (i = 1, 2, . . .",
                "K): The unigram language model of cluster Ci, as estimated using the theme discovery algorithm. • T = {ti,j} (i = 1 . . .",
                "K, j = 1 . . .",
                "L): The set of terms presented to the user for judgment. ti,j is the j-th term chosen from cluster Ci. • R = {δw|w ∈ T}: δw is an indicator variable that is 1 if w is judged relevant or 0 otherwise. 5.1 TFB (Direct Term Feedback) This is a straight-forward form of term feedback that does not involve any secondary structure.",
                "We give a weight of 1 to terms judged relevant by the user, a weight of μ to query terms, zero weight to other terms, and then apply normalization: p(w|θq ) = δw + μ c(w; q) w ∈T δw + μ|q| where w ∈T δw is the total number of terms that are judged relevant.",
                "We call this method TFB (direct Term FeedBack).",
                "If we let μ = 1, this approach is equivalent to appending the relevant terms after the original query, which is what standard query expansion (without term reweighting) does.",
                "If we set μ > 1, we are putting more emphasis on the query terms than the checked ones.",
                "Note that the result model will be more biased toward θq if the original query is long or the user feedback is weak, which makes sense, as we can trust more on the original query in either case.",
                "Figure 1: Filled clarification form for Topic 363 363 transportation tunnel disasters Please select all terms that are relevant to the topic. traffic railway harbor rail bridge kilometer construct swiss cross link kong hong river project meter shanghai fire truck french smoke car italian firefights blaze blanc mont victim franc rescue driver chamonix emerge toll amtrak train airport turnpike lui jersey pass rome z center electron road boston speed bu submit 5.2 CFB (Cluster Feedback) Here we exploit the cluster structure that played an important role when we selected the presentation terms.",
                "The clusters represent different aspects of the query topic, each of which may or may not be relevant.",
                "If we are able to identify the relevant clusters, we can combine them to generate a query model that is good at discovering documents belonging to these clusters (instead of the irrelevant ones).",
                "We could ask the user to directly judge the relevance of a cluster after viewing representative terms in that cluster, but this would sometimes be a difficult task for the user, who has to guess the semantics of a cluster via its set of terms, which may not be well connected to one another due to a lack of context.",
                "Therefore, we propose to learn cluster feedback indirectly, inferring the relevance of a cluster through the relevance of its feedback terms.",
                "Because each cluster has an equal number of terms presented to the user, the simplest measure of a clusters relevance is the number of terms that are judged relevant in it.",
                "Intuitively, the more terms are marked relevant in a cluster, the closer the cluster is to the query topic, and the more the cluster should participate in query modification.",
                "If we combine the cluster models using weights determined this way and then interpolate with the original query model, we get the following formula for query updating, which we call CFB (Cluster FeedBack): p(w|θq ) = λp(w|θq) + (1 − λ) K i=1 L j=1 δti,j K k=1 L j=1 δtk,j p(w|θi) where L j=1 δti,j is the number of relevant terms in cluster Ci, and K k=1 L j=1 δtk,j is the total number of relevant terms.",
                "We note that when there is only one cluster (K = 1), the above formula degenerates to p(w|θq ) = λp(w|θq) + (1 − λ)p(w|θ1) which is merely pseudo-feedback of the form proposed in [25]. 5.3 TCFB (Term-cluster Feedback) TFB and CFB both have their drawbacks.",
                "TFB assigns non-zero probabilities to the presented terms that are marked relevant, but completely ignores (a lot more) others, which may be left unchecked due to the users ignorance, or simply not included in the presentation list, but we should be able to infer their relevance from the checked ones.",
                "For example, in Figure 1, since as many as 5 terms in the middle cluster (the third and fourth columns) are checked, we should have high confidence in the relevance of other terms in that cluster.",
                "CFB remedies TFBs problem by treating the terms in a cluster collectively, so that unchecked/unpresented terms receive weights when presented terms in their clusters are judged as relevant, but it does not distinguish which terms in a cluster are presented or judged.",
                "Intuitively, the judged relevant terms should receive larger weights because they are explicitly indicated as relevant by the user.",
                "Therefore, we try to combine the two methods, hoping to get the best out of both.",
                "We do this by interpolating the TFB model with the CFB model, and call it TCFB: p(w|θq ) = αp(w|θqT F B ) + (1 − α)p(w|θqCF B ) 6.",
                "EXPERIMENTS In this section, we describe our experiment results.",
                "We first describe our experiment setup and present an overview of various methods performance.",
                "Then we discuss the effects of varying the parameter setting in the algorithms, as well as the number of presentation terms.",
                "Next we analyze user term feedback behavior and its relation to retrieval performance.",
                "Finally we compare term feedback to relevance feedback and show that it has its particular advantage. 6.1 Experiment Setup and Basic Results We took the opportunity of TREC 2005 HARD Track[2] for the evaluation of our algorithms.",
                "The tracks used the AQUAINT collection, a 3GB corpus of English newswire text.",
                "The topics included 50 ones previously known to be hard, i.e. with low retrieval performance.",
                "It is for these hard topics that user feedback is most helpful, as it can provide information to disambiguate the queries; with easy topics the user may be unwilling to spend efforts for feedback if the automatic retrieval results are good enough.",
                "Participants of the track were able to submit custom-designed clarification forms (CF) to solicit feedback from human assessors provided by Table 2: Retrieval performance for different methods and CF types.",
                "The last row is the percentage of MAP improvement over the baseline.",
                "The parameter settings μ = 4, λ = 0.1, α = 0.3 are near optimal.",
                "Baseline TFB1C TFB3C TFB6C CFB1C CFB3C CFB6C TCFB1C TCFB3C TCFB6C MAP 0.219 0.288 0.288 0.278 0.254 0.305 0.301 0.274 0.309 0.304 Pr@30 0.393 0.467 0.475 0.457 0.399 0.480 0.473 0.431 0.491 0.473 RR 4339 4753 4762 4740 4600 4907 4872 4767 4947 4906 % 0% 31.5% 31.5% 26.9% 16.0% 39.3% 37.4% 25.1% 41.1% 38.8% Table 3: MAP variation with the number of presented terms. # terms TFB1C TFB3C TFB6C CFB3C CFB6C TCFB3C TCFB6C 6 0.245 0.240 0.227 0.279 0.279 0.281 0.274 12 0.261 0.261 0.242 0.299 0.286 0.297 0.281 18 0.275 0.274 0.256 0.301 0.282 0.300 0.286 24 0.276 0.281 0.265 0.303 0.292 0.305 0.292 30 0.280 0.285 0.270 0.304 0.296 0.307 0.296 36 0.282 0.288 0.272 0.307 0.297 0.309 0.297 42 0.283 0.288 0.275 0.306 0.298 0.309 0.300 48 0.288 0.288 0.278 0.305 0.301 0.309 0.303 NIST.",
                "We designed three sets of clarification forms for term feedback, differing in the choice of K, the number of clusters, and L, the number of presented terms from each cluster.",
                "They are: 1× 48, a big cluster with 48 terms, 3 × 16, 3 clusters with 16 terms each, and 6 × 8, 6 clusters with 8 terms each.",
                "The total number of presented terms (M) is fixed at 48, so by comparing the performance of different types of clarification forms we can know the effects of different degree of clustering.",
                "For each topic, an assessor would complete the forms ordered by 6 × 8, 1 × 48 and 3 × 16, spending up to three minutes on each form.",
                "The sample clarification form shown in Figure 1 is of type 3 × 16.",
                "It is a simple and compact interface in which the user can check relevant terms.",
                "The form is self-explanatory; there is no need for extra user training on how to use it.",
                "Our initinal queries are constructed only using the topic title descriptions, which are on average 2.7 words in length.",
                "As our baseline we use the KL divergence retrieval method implemented in the Lemur Toolkit1 with 5 pseudo-feedback documents.",
                "We stem the terms, choose Dirichlet smoothing with a prior of 2000, and truncate query language models to 50 terms (these settings are used throughout the experiments).",
                "For all other parameters we use Lemurs default settings.",
                "The baseline turns out to perform above average among the track participants.",
                "After an initial run using this baseline retrieval method, we take the top 60 documents for each topic and apply the theme discovery algorithm to output the clusters (1, 3, or 6 of them), based on which we generate clarification forms.",
                "After user feedback is received, we run the term feedback algorithms (TFB, CFB or TCFB) to estimate updated query models, which are then used for a second iteration of retrieval.",
                "We evaluate the different retrieval methods performance on their rankings of the top 1000 documents.",
                "The evaluation metrics we adopt include mean average (non-interpolated) precision (MAP), precision at top 30 (Pr@30) and total relevant retrieved (RR).",
                "Table 2 shows the performance of various methods and configurations of K × L. The suffixes (1C, 3C, 6C) after TFB,CFB,TCFB stand for the number of clusters (K).",
                "For example, TCFB3C means the TCFB method on the 3 × 16 clarification forms.",
                "From Table 2 we can make the following observations: 1 http://www.lemurproject.com 1.",
                "All methods perform considerably better than the pseudofeedback baseline, with TCFB3C achieving a highest 41.1% improvement in MAP, indicating significant contribution of term feedback for clarification of the users information need.",
                "In other words, term feedback is truly helpful for improving retrieval accuracy. 2.",
                "For TFB, the performance is almost equal on the 1 × 48 and 3 × 16 clarification forms in terms of MAP (although the latter is slightly better in Pr@30 and RR), and a little worse on the 6 × 8 ones. 3.",
                "Both CFB3C and CFB6C perform better than their TFB counterparts in all three metrics, suggesting that feedback on a secondary cluster structure is indeed beneficial.",
                "CFB1C is actually worse because it cannot adjust the weight of its (single) cluster from term feedback and it is merely pseudofeedback. 4.",
                "Although TCFB is just a simple mixture of TFB and CFB by interpolation, it is able to outperform both.",
                "This supports our speculation that TCFB overcomes the drawbacks of TFB (paying attention only to checked terms) and CFB (not distinguishing checked and unchecked terms in a cluster).",
                "Except for TCFB6C v.s.",
                "CFB6C, the performance advantage of TCFB over TFB/CFB is significant at p < 0.05 using the Wilcoxon signed rank test.",
                "This is not true in the case of TFB v.s.",
                "CFB, each of which is better than the other in nearly half of the topics. 6.2 Reduction of Presentation Terms In some situations we may have to reduce the number of presentation terms due to limits in display space or user feedback efforts.",
                "It is interesting to know whether our algorithms performance deteriorates when the user is presented with fewer terms.",
                "Because the presentation terms within each cluster are generated in decreasing order of their frequencies, the presentation list forms a subset of the original one if its size is reduced2 .",
                "Therefore, we can easily simulate what happens when the number of presentation terms decreases 2 There are complexities arising from terms appearing in top L of multiple clusters, but these are exceptions from M to M : we will keep all judgments of the top L = M /K terms in each cluster and discard those of others.",
                "Table 3 shows the performance of various algorithms as the number of presentation terms ranges from 6 to 48.",
                "We find that the performance of TFB is more susceptible to presentation term reduction than that of CFB or TCFB.",
                "For example, at 12 terms the MAP of TFB3C is 90.6% of that at 48 terms, while the numbers for CFB3C and TCFB3C are 98.0% and 96.1% respectively.",
                "We conjecture the reason to be that while TFBs performance heavily depends on how many good terms are chosen for query expansion, CFB only needs a rough estimate of cluster weights to work.",
                "Also, the 3 × 16 clarification forms seem to be more robust than the 6 × 8 ones: at 12 terms the MAP of TFB6C is 87.1% of that at 48 terms, lower than 90.6% for TFB3C.",
                "Similarly, for CFB it is 95.0% against 98.0%.",
                "This is natual, as for a large cluster number of 6, it is easier to get into the situation where each cluster gets too few presentation terms to make topic diversification useful.",
                "Overall, we are surprised to see that the algorithms are still able to perform reasonably well when the number of presentation terms is small.",
                "For example, at only 12 terms CFB3C (the clarification form is of size 3 × 4) can still improve 36.5% over the baseline, dropping slightly from 39.3% at 48 terms. 6.3 User Feedback Analysis In this part we study several aspects of users term feedback behavior, and whether they are connected to retrieval performance.",
                "Figure 2: Clarification form completion time distributions 0−30 30−60 60−90 90−120 120−150 150−180 0 5 10 15 20 25 30 35 completion time (seconds) #topics 1×48 3×16 6×8 Figure 2 shows the distribution of time needed to complete a clarification form3 .",
                "We see that the user is usually able to finish term feedback within a reasonably short amount of time: for more than half of the topics the clarification form is completed in just 1 minute, and only a small fraction of topics (less than 10% for 1 × 48 and 3 × 16) take more than 2 minutes.",
                "This suggests that term feedback is suitable for interactive ad-hoc retrieval, where a user usually does not want to spend too much time on providing feedback.",
                "We find that a user often makes mistakes when judging term relevance.",
                "Sometimes a relevant term may be left out because its connection to the query topic is not obvious to the user.",
                "Other times a dubious term may be included but turns out to be irrelevant.",
                "Take the topic in Figure 1 for example.",
                "There was a fire disaster in Mont 3 The maximal time is 180 seconds, as the NIST assessor would be forced to submit the form at that moment.",
                "Table 4: Term selection statistics (topic average) CF Type 1 × 48 3 × 16 6 × 8 # checked terms 14.8 13.3 11.2 # rel. terms 15.0 12.6 11.2 # rel. checked terms 7.9 6.9 5.9 precision 0.534 0.519 0.527 recall 0.526 0.548 0.527 Blanc Tunnel between France and Italy in 1999, but the user failed to select such keywords as mont, blanc, french and italian due to his/her ignorance of the event.",
                "Indeed, without proper context it would be hard to make perfect judgment.",
                "What is then, the extent to which the user is good at term feedback?",
                "Does it have serious impact on retrieval performance?",
                "To answer these questions, we need a measure of individual terms true relevance.",
                "We adopt the Simplified KL Divergence metric used in [24] to decide query expansion terms as our term relevance measure: σKLD(w) = p(w|R) log p(w|R) p(w|¬R) where p(w|R) is the probability that a relevant document contains term w, and p(w|¬R) is the probability that an irrelevant document contains w, both of which can be easily computed via maximum likelihood estimate given document-level relevance judgment.",
                "If σKLD(w) > 0, w is more likely to appear in relevant documents than irrelevant ones.",
                "We consider a term relevant if its Simplified KL Divergence value is greater than a certain threshold σ0.",
                "We can then define precision and recall of user term judgment accordingly: precision is the fraction of terms checked by the user that are relevant; recall is the fraction of presented relevant terms that are checked by the user.",
                "Table 4 shows the number of checked terms, relevant terms and relevant checked terms when σ0 is set to 1.0, as well as the precision/recall of user term judgment.",
                "Note that when the clarification forms contain more clusters, fewer terms are checked: 14.8 for 1 × 48, 13.3 for 3 × 16 and 11.2 for 6×8.",
                "Similar pattern holds for relevant terms and relevant checked terms.",
                "There seems to be a trade-off between increasing topic diversity by clustering and losing extra relevant terms: when there are more clusters, each of them gets fewer terms to present, which can hurt a major relevant cluster that contains many relevant terms.",
                "Therefore, it is not always helpful to have more clusters, e.g., TFB6C is actually worse than TFB1C.",
                "The major finding we can make from Table 4 is that the user is not particularly good at identifying relevant terms, which echoes the discovery in [18].",
                "In the case of 3 × 16 clarification forms, the average number of terms checked as relevant by the user is 13.3 per topic, and the average number of relevant terms whose σKLD value exceed 1.0 is 12.6.",
                "The user is able to recognize only 6.9 of these terms on average.",
                "Indeed, the precision and recall of user feedback terms (as defined previously) are far from perfect.",
                "On the other hand, If the user had correctly checked all such relevant terms, the performance of our algorithms would have increased a lot, as shown in Table 5.",
                "We see that TFB gets big improvement when there is an oracle who checks all relevant terms, while CFB meets a bottleneck around MAP of 0.325, since all it does is adjust cluster weights, and when the learned weights are close to being accurate, it cannot benefit more from term feedback.",
                "Also note that TCFB fails to outperform TFB, probably because TFB is sufficiently accurate.",
                "Table 5: Change of MAP when using all (and only) relevant terms (σKLD > 1.0) for feedback. original term feedback relevant term feedback TF1 0.288 0.354 TF3 0.288 0.354 TF6 0.278 0.346 CF3 0.305 0.325 CF6 0.301 0.326 TCF3 0.309 0.345 TCF6 0.304 0.341 6.4 Comparison with Relevance Feedback Now we compare term feedback with document-level relevance feedback, in which the user is presented with the top N documents from an initial retrieval and asked to judge their relevance.",
                "The feedback process is simulated using document relevance judgment from NIST.",
                "We use the mixture model based feedback method proposed in [25], with mixture noise set to 0.95 and feedback coefficient set to 0.9.",
                "Comparative evaluation of relevance feedback against other methods is complicated by the fact that some documents have already been viewed during feedback, so it makes no sense to include them in the retrieval results of the second run.",
                "However, this does not hold for term feedback.",
                "Thus, to make it fair w.r.t. users information gain, if the feedback documents are relevant, they should be kept in the top of the ranking; if they are irrelevant, they should be left out.",
                "Therefore, we use relevance feedback to produce a ranking of top 1000 retrieved documents but with every feedback document excluded, and then prepend the relevant feedback documents at the front.",
                "Table 6 shows the performance of relevance feedback for different values of N and compares it with TCFB3C.",
                "Table 6: Performance of relevance feedback for different number of feedback documents (N).",
                "N MAP Pr@30 RR 5 0.302 0.586 4779 10 0.345 0.670 4916 20 0.389 0.772 5004 TCFB3C 0.309 0.491 4947 We see that the performance of TCFB3C is comparable to that of relevance feedback using 5 documents.",
                "Although it is poorer than when there are 10 feedback documents in terms of MAP and Pr@30, it does retrieve more documents (4947) when going down the ranked list.",
                "We try to compare the quality of automatically inserted terms in relevance feedback with that of manually selected terms in term feedback.",
                "This is done by truncating the relevance feedback modified query model to a size equal to the number of checked terms for the same topic.",
                "We can then compare the terms in the truncated model with the checked terms.",
                "Figure 3 shows the distribution of the terms σKLD scores.",
                "We find that term feedback tends to produce expansion terms of higher quality(those with σKLD > 1) compared to relevance feedback (with 10 feedback documents).",
                "This does not contradict the fact that the latter yields higher retrieval performance.",
                "Actually, when we use the truncated query model instead of the intact one refined from relevance feedback, the MAP is only 0.304.",
                "The truth Figure 3: Comparison of expansion term quality between relevance feedback (with 10 feedback documents) and term feedback (with 3 × 16 CFs) −1−0 0−1 1−2 2−3 3−4 4−5 5−6 0 50 100 150 200 250 300 350 σKLD #terms relevance feedback term feedback is, although there are many unwanted terms in the expanded query model from feedback documents, there are also more relevant terms than what the user can possibly select from the list of presentation terms generated with pseudo-feedback documents, and the positive effects often outweights the negative ones.",
                "We are interested to know under what circumstances term feedback has advantage over relevance feedback.",
                "One such situation is when none of the top N feedback documents is relevant, rendering relevance feedback useless.",
                "This is not infrequent, as one might have thought: out of the 50 topics, there are 13 such cases when N = 5, 10 when N = 10, and still 3 when N = 20.",
                "When this happens, one can only back off to the original retrieval method; the power of relevance feedback is lost.",
                "Surprisingly, in 11 out of 13 such cases where relevance feedback seems impossible, the user is able to check at least 2 relevant terms from the 3 × 16 clarification form (we consider term t to be relevant if σKLD(t) > 1.0).",
                "Furthermore, in 10 out of them TCFB3C outperforms the pseudo-feedback baseline, increasing MAP from 0.076 to 0.146 on average (these are particularly hard topics).",
                "We think that there are two possible explanations for this phenomenon of term feedback being active even when relevance feedback does not work: First, even if none of the top N (suppose it is a small number) documents are relevant, we may still find relevant documents in top 60, which is more inclusive but usually unreachable when people are doing relevance feedback in interactive ad-hoc search, from which we can draw feedback terms.",
                "This is true for topic 367 piracy, where the top 10 feedback documents are all about software piracy, yet there are documents between 10-60 that are about piracy on the seas (which is about the real information need), contributing terms such as pirate, ship for selection in the clarification form.",
                "Second, for some topics, a document needs to meet some special condition in order to be relevant.",
                "The top N documents may be related to the topic, but nonetheless irrelevant.",
                "In this case, we may still extract useful terms from these documents, even if they do not qualify as relevant ones.",
                "For example, in topic 639 consumer online shopping, a document needs to mention what contributes to shopping growth to really match the specified information need, hence none of the top 10 feedback documents are regarded as relevant.",
                "But nevertheless, the feedback terms such as retail, commerce are good for query expansion. 7.",
                "CONCLUSIONS In this paper we studied the use of term feedback for interactive information retrieval in the language modeling approach.",
                "We proposed a cluster-based method for selecting presentation terms as well as algorithms to estimate refined query models from user term feedback.",
                "We saw significant improvement in retrieval accuracy brought by term feedback, in spite of the fact that a user often makes mistakes in relevance judgment that hurts its performance.",
                "We found the best-performing algorithm to be TCFB, which benefits from the combination of directly observed term evidence with TFB and indirectly learned cluster relevance with CFB.",
                "When we reduced the number of presentation terms, term feedback is still able to keep much of its performance gain over the baseline.",
                "Finally, we compared term feedback to document-level relevance feedback, and found that TCFB3Cs performance is on a par with the latter with 5 feedback documents.",
                "We regarded term feedback as a viable alternative to traditional relevance feedback, especially when there are no relevant documents in the top.",
                "We propose to extend our work in several ways.",
                "First, we want to study whether the use of various contexts can help the user to better identify term relevance, while not sacrificing the simplicity and compactness of term feedback.",
                "Second, currently all terms are presented to the user in a single batch.",
                "We could instead consider iterative term feedback, by presenting a small number of terms first, and show more terms after receiving user feedback or stop when the refined query is good enough.",
                "The presented terms should be selected dynamically to maximize learning benefits at any moment.",
                "Third, we have plans to incorporate term feedback into our UCAIR toolbar[20], an Internet Explorer plugin, to make it work for web search.",
                "We are also interested in studying how to combine term feedback with relevance feedback or implicit feedback.",
                "We could, for example, allow the user to dynamically modify terms in a language model learned from feedback documents. 8.",
                "ACKNOWLEDGMENT This work is supported in part by the National Science Foundation grants IIS-0347933 and IIS-0428472. 9.",
                "REFERENCES [1] J. Allan.",
                "Relevance feedback with too much data.",
                "In Proceedings of the 18th annual international ACM SIGIR conference on research and development in information retrieval, pages 337-343, 1995. [2] J. Allan.",
                "HARD track overview in TREC 2005 - High Accuracy Retrieval from Documents.",
                "In The Fourteenth Text REtrieval Conference, 2005. [3] P. Anick.",
                "Using terminological feedback for web search refinement: a log-based study.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 88-95, 2003. [4] P. G. Anick and S. Tipirneni.",
                "The paraphrase search assistant: terminological feedback for iterative information seeking.",
                "In Proceedings of the 22nd annual international ACM SIGIR conference on research and development in information retrieval, pages 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan, and A. Singhal.",
                "Automatic query expansion using SMART.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [6] D. Harman.",
                "Towards interactive query expansion.",
                "In Proceedings of the 11th annual international ACM SIGIR conference on research and development in information retrieval, pages 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wade, and J. Allan.",
                "UMass at TREC 2003: HARD and QA.",
                "In TREC, pages 715-725, 2003. [8] H. Joho, C. Coverson, M. Sanderson, and M. Beaulieu.",
                "Hierarchical presentation of expansion terms.",
                "In Proceedings of the 2002 ACM symposium on applied computing, pages 645-649, 2002. [9] K. S. Jones, S. Walker, and S. E. Robertson.",
                "A probabilistic model of information retrieval: development and status.",
                "Technical Report 446, Computer Laboratory, University of Cambridge, 1998. [10] D. Kelly, V. D. Dollu, and X. Fu.",
                "The loquacious user: a document-independent source of terms for query expansion.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 457-464, 2005. [11] D. Kelly and X. Fu.",
                "Elicitation of term relevance feedback: an investigation of term source and context.",
                "In Proceedings of the 29th annual international ACM SIGIR conference on research and development in information retrieval, 2006. [12] J. Koenemann and N. Belkin.",
                "A case for interaction: A study of interactive information retrieval behavior and effectiveness.",
                "In Proceedings of the SIGCHI conference on human factors in computing systems, pages 205-212, 1996. [13] V. Lavrenko and W. B. Croft.",
                "Relevance-based language models.",
                "In Research and Development in Information Retrieval, pages 120-127, 2001. [14] Y. Nemeth, B. Shapira, and M. Taeib-Maimon.",
                "Evaluation of the real and perceived value of automatic and interactive query expansion.",
                "In Proceedings of the 27th annual international ACM SIGIR conference on research and development in information retrieval, pages 526-527, 2004. [15] J. Ponte.",
                "A Language Modeling Approach to Information Retrieval.",
                "PhD thesis, University of Massachusetts at Amherst, 1998. [16] S. E. Robertson, S. Walker, S. Jones, M. Beaulieu, and M. Gatford.",
                "Okapi at TREC-3.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [17] J. Rocchio.",
                "Relevance feedback in information retrieval.",
                "In The SMART retrieval system, pages 313-323. 1971. [18] I. Ruthven.",
                "Re-examining the potential effectiveness of interactive query expansion.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 213-220, 2003. [19] G. Salton and C. Buckley.",
                "Improving retrieval performance by relevance feedback.",
                "Journal of the American Society for Information Science, 41:288-297, 1990. [20] X. Shen, B. Tan, and C. Zhai.",
                "Implicit user modeling for personalized search.",
                "In Proceedings of the 14th ACM international conference on information and knowledge management, pages 824-831, 2005. [21] X. Shen and C. Zhai.",
                "Active feedback in ad-hoc information retrieval.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 59-66, 2005. [22] A. Spink.",
                "Term relevance feedback and query expansion: relation to design.",
                "In Proceedings of the 17th annual international ACM SIGIR conference on research and development in information retrieval, pages 81-90, 1994. [23] J. Xu and W. B. Croft.",
                "Query expansion using local and global document analysis.",
                "In Proceedings of the 19th annual international ACM SIGIR conference on research and development in information retrieval, pages 4-11, 1996. [24] H. Zaragoza, N. Craswell, M. Taylor, S. Saria, and S. Robertson.",
                "Microsoft cambridge at TREC-13: Web and HARD tracks.",
                "In Proceedings of the 13th Text REtrieval Conference, 2004. [25] C. Zhai and J. Lafferty.",
                "Model-based feedback in the language modeling approach to information retrieval.",
                "In Proceedings of the tenth international conference on information and knowledge management, pages 403-410, 2001. [26] C. Zhai, A. Velivelli, and B. Yu.",
                "A cross-collection mixture model for comparative text mining.",
                "In Proceedings of the tenth ACM SIGKDD international conference on knowledge discovery and data mining, pages 743-748, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "de informática †, Departamento de Ingeniería Eléctrica e Informática ‡ Universidad de Illinois en Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.Resumen EDU En este documento estudiamos \"comentarios basados en términos\" para la recuperación de la información en el enfoque de modelado de idiomas.",
                "Identificamos dos subtareas clave de \"retroalimentación basada en términos\", es decir, selección de términos de presentación previa a la retroalimentación y construcción del modelo de consulta posterior a la retroalimentación, con algoritmos efectivos desarrollados para ambos."
            ],
            "translated_text": "",
            "candidates": [
                "Comentarios basados en términos",
                "comentarios basados en términos",
                "Comentarios basados en términos",
                "retroalimentación basada en términos"
            ],
            "error": []
        },
        "information retrieval": {
            "translated_key": "recuperación de información",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Term Feedback for <br>information retrieval</br> with Language Models Bin Tan† , Atulya Velivelli‡ , Hui Fang† , ChengXiang Zhai† Dept.",
                "of Computer Science† , Dept. of Electrical and Computer Engineering‡ University of Illinois at Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.edu ABSTRACT In this paper we study term-based feedback for <br>information retrieval</br> in the language modeling approach.",
                "With term feedback a user directly judges the relevance of individual terms without interaction with feedback documents, taking full control of the query expansion process.",
                "We propose a cluster-based method for selecting terms to present to the user for judgment, as well as effective algorithms for constructing refined query language models from user term feedback.",
                "Our algorithms are shown to bring significant improvement in retrieval accuracy over a non-feedback baseline, and achieve comparable performance to relevance feedback.",
                "They are helpful even when there are no relevant documents in the top.",
                "Categories and Subject Descriptors H.3.3 [Information Search and Retrieval]: Retrieval models General Terms Algorithms 1.",
                "INTRODUCTION In the language modeling approach to <br>information retrieval</br>, feedback is often modeled as estimating an improved query model or relevance model based on a set of feedback documents [25, 13].",
                "This is in line with the traditional way of doing relevance feedback - presenting a user with documents/passages for relevance judgment and then extracting terms from the judged documents or passages to expand the initial query.",
                "It is an indirect way of seeking users assistance for query model construction, in the sense that the refined query model (based on terms) is learned through feedback documents/passages, which are high-level structures of terms.",
                "It has the disadvantage that irrelevant terms, which occur along with relevant ones in the judged content, may be erroneously used for query expansion, causing undesired effects.",
                "For example, for the TREC query Hubble telescope achievements, when a relevant document talks more about the telescopes repair than its discoveries, irrelevant terms such as spacewalk can be added into the modified query.",
                "We can consider a more direct way to involve a user in query model improvement, without an intermediary step of document feedback that can introduce noise.",
                "The idea is to present a (reasonable) number of individual terms to the user and ask him/her to judge the relevance of each term or directly specify their probabilities in the query model.",
                "This strategy has been discussed in [15], but to our knowledge, it has not been seriously studied in existing language modeling literature.",
                "Compared to traditional relevance feedback, this term-based approach to interactive query model refinement has several advantages.",
                "First, the user has better control of the final query model through direct manipulation of terms: he/she can dictate which terms are relevant, irrelevant, and possibly, to what degree.",
                "This avoids the risk of bringing unwanted terms into the query model, although sometimes the user introduces low-quality terms.",
                "Second, because a term takes less time to judge than a documents full text or summary, and as few as around 20 presented terms can bring significant improvement in retrieval performance (as we will show later), term feedback makes it faster to gather user feedback.",
                "This is especially helpful for interactive adhoc search.",
                "Third, sometimes there are no relevant documents in the top N of the initially retrieved results if the topic is hard.",
                "This is often true when N is constrained to be small, which arises from the fact that the user is unwilling to judge too many documents.",
                "In this case, relevance feedback is useless, as no relevant document can be leveraged on, but term feedback is still often helpful, by allowing relevant terms to be picked from irrelevant documents.",
                "During our participation in the TREC 2005 HARD Track and continued study afterward, we explored how to exploit term feedback from the user to construct improved query models for <br>information retrieval</br> in the language modeling approach.",
                "We identified two key subtasks of term-based feedback, i.e., pre-feedback presentation term selection and post-feedback query model construction, with effective algorithms developed for both.",
                "We imposed a secondary cluster structure on terms and found that a cluster view sheds additional insight into the users information need, and provides a good way of utilizing term feedback.",
                "Through experiments we found that term feedback improves significantly over the nonfeedback baseline, even though the user often makes mistakes in relevance judgment.",
                "Among our algorithms, the one with best retrieval performance is TCFB, the combination of TFB, the direct term feedback algorithm, and CFB, the cluster-based feedback algorithm.",
                "We also varied the number of feedback terms and observed reasonable improvement even at low numbers.",
                "Finally, by comparing term feedback with document-level feedback, we found it to be a viable alternative to the latter with competitive retrieval performance.",
                "The rest of the paper is organized as follows.",
                "Section 2 discusses some related work.",
                "Section 4 outlines our general approach to term feedback.",
                "We present our method for presentation term selection in Section 3 and algorithms for query model construction in Section 5.",
                "The experiment results are given in Section 6.",
                "Section 7 concludes this paper. 2.",
                "RELATED WORK Relevance feedback[17, 19] has long been recognized as an effective method for improving retrieval performance.",
                "Normally, the top N documents retrieved using the original query are presented to the user for judgment, after which terms are extracted from the judged relevant documents, weighted by their potential of attracting more relevant documents, and added into the query model.",
                "The expanded query usually represents the users information need better than the original one, which is often just a short keyword query.",
                "A second iteration of retrieval using this modified query usually produces significant increase in retrieval accuracy.",
                "In cases where true relevance judgment is unavailable and all top N documents are assumed to be relevant, it is called blind or pseudo feedback[5, 16] and usually still brings performance improvement.",
                "Because document is a large text unit, when it is used for relevance feedback many irrelevant terms can be introduced into the feedback process.",
                "To overcome this, passage feedback is proposed and shown to improve feedback performance[1, 23].",
                "A more direct solution is to ask the user for their relevance judgment of feedback terms.",
                "For example, in some relevance feedback systems such as [12], there is an interaction step that allows the user to add or remove expansion terms after they are automatically extracted from relevant documents.",
                "This is categorized as interactive query expansion, where the original query is augmented with user-provided terms, which can come from direct user input (free-form text or keywords)[22, 7, 10] or user selection of system-suggested terms (using thesauri[6, 22] or extracted from feedback documents[6, 22, 12, 4, 7]).",
                "In many cases term relevance feedback has been found to effectively improve retrieval performance[6, 22, 12, 4, 10].",
                "For example, the study in [12] shows that the user prefers to have explicit knowledge and direct control of which terms are used for query expansion, and the penetrable interface that provides this freedom is shown to perform better than other interfaces.",
                "However, in some other cases there is no significant benefit[3, 14], even if the user likes interacting with expansion terms.",
                "In a simulated study carried out in [18], the author compares the retrieval performance of interactive query expansion and automatic query expansion with a simulated study, and suggests that the potential benefits of the former can be hard to achieve.",
                "The user is found to be not good at identifying useful terms for query expansion, when a simple term presentation interface is unable to provide sufficient semantic context of the feedback terms.",
                "Our work differs from the previous ones in two important aspects.",
                "First, when we choose terms to present to the user for relevance judgment, we not only consider single-term value (e.g., the relative frequency of a term in the top documents, which can be measured by metrics such as Robertson Selection Value and Simplified Kullback-Leibler Distance as listed in [24]), but also examine the cluster structure of the terms, so as to produce a balanced coverage of the different topic aspects.",
                "Second, with the language modelling framework, we allow an elaborate construction of the updated query model, by setting different probabilities for different terms based on whether it is a query term, its significance in the top documents, and its cluster membership.",
                "Although techniques for adjusting query term weights exist for vector space models[17] and probablistic relevance models[9], most of the aforementioned works do not use them, choosing to just append feedback terms to the original query (thus using equal weights for them), which can lead to poorer retrieval performance.",
                "The combination of the two aspects allows our method to perform much better than the baseline.",
                "The usual way for feedback term presentation is just to display the terms in a list.",
                "There have been some works on alternative user interfaces. [8] arranges terms in a hierarchy, and [11] compares three different interfaces, including terms + checkboxes, terms + context (sentences) + checkboxes, sentences + input text box.",
                "In both studies, however, there is no significant performance difference.",
                "In our work we adopt the simplest approach of terms + checkboxes.",
                "We focus on term presentation and query model construction from feedback terms, and believe using contexts to improve feedback term quality should be orthogonal to our method. 3.",
                "GENERAL APPROACH We follow the language modeling approach, and base our method on the KL-divergence retrieval model proposed in [25].",
                "With this model, the retrieval task involves estimating a query language model θq from a given query, a document language model θd from each document, and calculating their KL-divergence D(θq||θd), which is then used to score the documents. [25] treats relevance feedback as a query model re-estimation problem, i.e., computing an updated query model θq given the original query text and the extra evidence carried by the judged relevant documents.",
                "We adopt this view, and cast our task as updating the query model from user term feedback.",
                "There are two key subtasks here: First, how to choose the best terms to present to the user for judgment, in order to gather maximal evidence about the users information need.",
                "Second, how to compute an updated query model based on this term feedback evidence, so that it captures the users information need and translates into good retrieval performance. 4.",
                "PRESENTATION TERM SELECTION Proper selection of terms to be presented to the user for judgment is crucial to the success of term feedback.",
                "If the terms are poorly chosen and there are few relevant ones, the user will have a hard time looking for useful terms to help clarify his/her information need.",
                "If the relevant terms are plentiful, but all concentrate on a single aspect of the query topic, then we will only be able to get feedback on that aspect and missing others, resulting in a breadth loss in retrieved results.",
                "Therefore, it is important to carefully select presentation terms to maximize expected gain from user feedback, i.e., those that can potentially reveal most evidence of the users information need.",
                "This is similar to active feedback[21], which suggests that a retrieval system should actively probe the users information need, and in the case of relevance feedback, the feedback documents should be chosen to maximize learning benefits (e.g. diversely so as to increase coverage).",
                "In our approach, the top N documents from an initial retrieval using the original query form the source of feedback terms: all terms that appear in them are considered candidates to present to the user.",
                "These documents serve as pseudo-feedback, since they provide a much richer context than the original query (usually very short), while the user is not asked to judge their relevance.",
                "Due to the latter reason, it is possible to make N quite large (e.g., in our experiments we set N = 60) to increase its coverage of different aspects in the topic.",
                "The simplest way of selecting feedback terms is to choose the most frequent M terms from the N documents.",
                "This method, however, has two drawbacks.",
                "First, a lot of common noisy terms will be selected due to their high frequencies in the document collection, unless a stop-word list is used for filtering.",
                "Second, the presentation list will tend to be filled by terms from major aspects of the topic; those from a minor aspect are likely to be missed due to their relatively low frequencies.",
                "We solve the above problems by two corresponding measures.",
                "First, we introduce a background model θB that is estimated from collection statistics and explains the common terms, so that they are much less likely to appear in the presentation list.",
                "Second, the terms are selected from multiple clusters in the pseudo-feedback documents, to ensure sufficient representation of different aspects of the topic.",
                "We rely on the mixture multinomial model, which is used for theme discovery in [26].",
                "Specifically, we assume the N documents contain K clusters {Ci| i = 1, 2, · · · K}, each characterized by a multinomial word distribution (also known as unigram language model) θi and corresponding to an aspect of the topic.",
                "The documents are regarded as sampled from a mixture of K + 1 components, including the K clusters and the background model: p(w|d) = λBp(w|θB) + (1 − λB) K i=1 πd,ip(w|θi) where w is a word, λB is the mixture weight for the background model θB, and πd,i is the document-specific mixture weight for the i-th cluster model θi.",
                "We then estimate the cluster models by maximizing the probability of the pseudo-feedback documents being generated from the multinomial mixture model: log p(D|Λ) = d∈D w∈V c(w; d) log p(w|d) where D = {di| i = 1, 2, · · · N} is the set of the N documents, V is the vocabulary, c(w; d) is ws frequency in d and Λ = {θi| i = 1, 2, · · · K} ∪ {πdij | i = 1, 2, · · · N, j = 1, 2, · · · K} is the set of model parameters to estimate.",
                "The cluster models can be efficiently estimated using the Expectation-Maximization (EM) algorithm.",
                "For its details, we refer the reader to [26].",
                "Table 1 shows the cluster models for TREC query Transportation tunnel disasters (K = 3).",
                "Note that only the middle cluster is relevant.",
                "Table 1: Cluster models for topic 363 Transportation tunnel disasters Cluster 1 Cluster 2 Cluster 3 tunnel 0.0768 tunnel 0.0935 tunnel 0.0454 transport 0.0364 fire 0.0295 transport 0.0406 traffic 0.0206 truck 0.0236 toll 0.0166 railwai 0.0186 french 0.0220 amtrak 0.0153 harbor 0.0146 smoke 0.0157 train 0.0129 rail 0.0140 car 0.0154 airport 0.0122 bridg 0.0139 italian 0.0152 turnpik 0.0105 kilomet 0.0136 firefight 0.0144 lui 0.0095 truck 0.0133 blaze 0.0127 jersei 0.0093 construct 0.0131 blanc 0.0121 pass 0.0087 · · · · · · · · · From each of the K estimated clusters, we choose the L = M/K terms with highest probabilities to form a total of M presentation terms.",
                "If a term happens to be in top L in multiple clusters, we assign it to the cluster where it has highest probability and let the other clusters take one more term as compensation.",
                "We also filter out terms in the original query text because they tend to always be relevant when the query is short.",
                "The selected terms are then presented to the user for judgment.",
                "A sample (completed) feedback form is shown in Figure 1.",
                "In this study we only deal with binary judgment: a presented term is by default unchecked, and a user may check it to indicate relevance.",
                "We also do not explicitly exploit negative feedback (i.e., penalizing irrelevant terms), because with binary feedback an unchecked term is not necessarily irrelevant (maybe the user is unsure about its relevance).",
                "We could ask the user for finer judgment (e.g., choosing from highly relevant, somewhat relevant, do not know, somewhat irrelevant and highly irrelevant), but binary feedback is more compact, taking less space to display and less user effort to make judgment. 5.",
                "ESTIMATING QUERY MODELS FROM TERM FEEDBACK In this section, we present several algorithms for exploiting term feedback.",
                "The algorithms take as input the original query q, the clusters {θi} as generated by the theme discovery algorithm, the set of feedback terms T and their relevance judgment R, and outputs an updated query language model θq that makes best use of the feedback evidence to capture the users information need.",
                "First we describe our notations: • θq: The original query model, derived from query terms only: p(w|θq) = c(w; q) |q| where c(w; q) is the count of w in q, and |q| = w∈q c(w; q) is the query length. • θq : The updated query model which we need to estimate from term feedback. • θi (i = 1, 2, . . .",
                "K): The unigram language model of cluster Ci, as estimated using the theme discovery algorithm. • T = {ti,j} (i = 1 . . .",
                "K, j = 1 . . .",
                "L): The set of terms presented to the user for judgment. ti,j is the j-th term chosen from cluster Ci. • R = {δw|w ∈ T}: δw is an indicator variable that is 1 if w is judged relevant or 0 otherwise. 5.1 TFB (Direct Term Feedback) This is a straight-forward form of term feedback that does not involve any secondary structure.",
                "We give a weight of 1 to terms judged relevant by the user, a weight of μ to query terms, zero weight to other terms, and then apply normalization: p(w|θq ) = δw + μ c(w; q) w ∈T δw + μ|q| where w ∈T δw is the total number of terms that are judged relevant.",
                "We call this method TFB (direct Term FeedBack).",
                "If we let μ = 1, this approach is equivalent to appending the relevant terms after the original query, which is what standard query expansion (without term reweighting) does.",
                "If we set μ > 1, we are putting more emphasis on the query terms than the checked ones.",
                "Note that the result model will be more biased toward θq if the original query is long or the user feedback is weak, which makes sense, as we can trust more on the original query in either case.",
                "Figure 1: Filled clarification form for Topic 363 363 transportation tunnel disasters Please select all terms that are relevant to the topic. traffic railway harbor rail bridge kilometer construct swiss cross link kong hong river project meter shanghai fire truck french smoke car italian firefights blaze blanc mont victim franc rescue driver chamonix emerge toll amtrak train airport turnpike lui jersey pass rome z center electron road boston speed bu submit 5.2 CFB (Cluster Feedback) Here we exploit the cluster structure that played an important role when we selected the presentation terms.",
                "The clusters represent different aspects of the query topic, each of which may or may not be relevant.",
                "If we are able to identify the relevant clusters, we can combine them to generate a query model that is good at discovering documents belonging to these clusters (instead of the irrelevant ones).",
                "We could ask the user to directly judge the relevance of a cluster after viewing representative terms in that cluster, but this would sometimes be a difficult task for the user, who has to guess the semantics of a cluster via its set of terms, which may not be well connected to one another due to a lack of context.",
                "Therefore, we propose to learn cluster feedback indirectly, inferring the relevance of a cluster through the relevance of its feedback terms.",
                "Because each cluster has an equal number of terms presented to the user, the simplest measure of a clusters relevance is the number of terms that are judged relevant in it.",
                "Intuitively, the more terms are marked relevant in a cluster, the closer the cluster is to the query topic, and the more the cluster should participate in query modification.",
                "If we combine the cluster models using weights determined this way and then interpolate with the original query model, we get the following formula for query updating, which we call CFB (Cluster FeedBack): p(w|θq ) = λp(w|θq) + (1 − λ) K i=1 L j=1 δti,j K k=1 L j=1 δtk,j p(w|θi) where L j=1 δti,j is the number of relevant terms in cluster Ci, and K k=1 L j=1 δtk,j is the total number of relevant terms.",
                "We note that when there is only one cluster (K = 1), the above formula degenerates to p(w|θq ) = λp(w|θq) + (1 − λ)p(w|θ1) which is merely pseudo-feedback of the form proposed in [25]. 5.3 TCFB (Term-cluster Feedback) TFB and CFB both have their drawbacks.",
                "TFB assigns non-zero probabilities to the presented terms that are marked relevant, but completely ignores (a lot more) others, which may be left unchecked due to the users ignorance, or simply not included in the presentation list, but we should be able to infer their relevance from the checked ones.",
                "For example, in Figure 1, since as many as 5 terms in the middle cluster (the third and fourth columns) are checked, we should have high confidence in the relevance of other terms in that cluster.",
                "CFB remedies TFBs problem by treating the terms in a cluster collectively, so that unchecked/unpresented terms receive weights when presented terms in their clusters are judged as relevant, but it does not distinguish which terms in a cluster are presented or judged.",
                "Intuitively, the judged relevant terms should receive larger weights because they are explicitly indicated as relevant by the user.",
                "Therefore, we try to combine the two methods, hoping to get the best out of both.",
                "We do this by interpolating the TFB model with the CFB model, and call it TCFB: p(w|θq ) = αp(w|θqT F B ) + (1 − α)p(w|θqCF B ) 6.",
                "EXPERIMENTS In this section, we describe our experiment results.",
                "We first describe our experiment setup and present an overview of various methods performance.",
                "Then we discuss the effects of varying the parameter setting in the algorithms, as well as the number of presentation terms.",
                "Next we analyze user term feedback behavior and its relation to retrieval performance.",
                "Finally we compare term feedback to relevance feedback and show that it has its particular advantage. 6.1 Experiment Setup and Basic Results We took the opportunity of TREC 2005 HARD Track[2] for the evaluation of our algorithms.",
                "The tracks used the AQUAINT collection, a 3GB corpus of English newswire text.",
                "The topics included 50 ones previously known to be hard, i.e. with low retrieval performance.",
                "It is for these hard topics that user feedback is most helpful, as it can provide information to disambiguate the queries; with easy topics the user may be unwilling to spend efforts for feedback if the automatic retrieval results are good enough.",
                "Participants of the track were able to submit custom-designed clarification forms (CF) to solicit feedback from human assessors provided by Table 2: Retrieval performance for different methods and CF types.",
                "The last row is the percentage of MAP improvement over the baseline.",
                "The parameter settings μ = 4, λ = 0.1, α = 0.3 are near optimal.",
                "Baseline TFB1C TFB3C TFB6C CFB1C CFB3C CFB6C TCFB1C TCFB3C TCFB6C MAP 0.219 0.288 0.288 0.278 0.254 0.305 0.301 0.274 0.309 0.304 Pr@30 0.393 0.467 0.475 0.457 0.399 0.480 0.473 0.431 0.491 0.473 RR 4339 4753 4762 4740 4600 4907 4872 4767 4947 4906 % 0% 31.5% 31.5% 26.9% 16.0% 39.3% 37.4% 25.1% 41.1% 38.8% Table 3: MAP variation with the number of presented terms. # terms TFB1C TFB3C TFB6C CFB3C CFB6C TCFB3C TCFB6C 6 0.245 0.240 0.227 0.279 0.279 0.281 0.274 12 0.261 0.261 0.242 0.299 0.286 0.297 0.281 18 0.275 0.274 0.256 0.301 0.282 0.300 0.286 24 0.276 0.281 0.265 0.303 0.292 0.305 0.292 30 0.280 0.285 0.270 0.304 0.296 0.307 0.296 36 0.282 0.288 0.272 0.307 0.297 0.309 0.297 42 0.283 0.288 0.275 0.306 0.298 0.309 0.300 48 0.288 0.288 0.278 0.305 0.301 0.309 0.303 NIST.",
                "We designed three sets of clarification forms for term feedback, differing in the choice of K, the number of clusters, and L, the number of presented terms from each cluster.",
                "They are: 1× 48, a big cluster with 48 terms, 3 × 16, 3 clusters with 16 terms each, and 6 × 8, 6 clusters with 8 terms each.",
                "The total number of presented terms (M) is fixed at 48, so by comparing the performance of different types of clarification forms we can know the effects of different degree of clustering.",
                "For each topic, an assessor would complete the forms ordered by 6 × 8, 1 × 48 and 3 × 16, spending up to three minutes on each form.",
                "The sample clarification form shown in Figure 1 is of type 3 × 16.",
                "It is a simple and compact interface in which the user can check relevant terms.",
                "The form is self-explanatory; there is no need for extra user training on how to use it.",
                "Our initinal queries are constructed only using the topic title descriptions, which are on average 2.7 words in length.",
                "As our baseline we use the KL divergence retrieval method implemented in the Lemur Toolkit1 with 5 pseudo-feedback documents.",
                "We stem the terms, choose Dirichlet smoothing with a prior of 2000, and truncate query language models to 50 terms (these settings are used throughout the experiments).",
                "For all other parameters we use Lemurs default settings.",
                "The baseline turns out to perform above average among the track participants.",
                "After an initial run using this baseline retrieval method, we take the top 60 documents for each topic and apply the theme discovery algorithm to output the clusters (1, 3, or 6 of them), based on which we generate clarification forms.",
                "After user feedback is received, we run the term feedback algorithms (TFB, CFB or TCFB) to estimate updated query models, which are then used for a second iteration of retrieval.",
                "We evaluate the different retrieval methods performance on their rankings of the top 1000 documents.",
                "The evaluation metrics we adopt include mean average (non-interpolated) precision (MAP), precision at top 30 (Pr@30) and total relevant retrieved (RR).",
                "Table 2 shows the performance of various methods and configurations of K × L. The suffixes (1C, 3C, 6C) after TFB,CFB,TCFB stand for the number of clusters (K).",
                "For example, TCFB3C means the TCFB method on the 3 × 16 clarification forms.",
                "From Table 2 we can make the following observations: 1 http://www.lemurproject.com 1.",
                "All methods perform considerably better than the pseudofeedback baseline, with TCFB3C achieving a highest 41.1% improvement in MAP, indicating significant contribution of term feedback for clarification of the users information need.",
                "In other words, term feedback is truly helpful for improving retrieval accuracy. 2.",
                "For TFB, the performance is almost equal on the 1 × 48 and 3 × 16 clarification forms in terms of MAP (although the latter is slightly better in Pr@30 and RR), and a little worse on the 6 × 8 ones. 3.",
                "Both CFB3C and CFB6C perform better than their TFB counterparts in all three metrics, suggesting that feedback on a secondary cluster structure is indeed beneficial.",
                "CFB1C is actually worse because it cannot adjust the weight of its (single) cluster from term feedback and it is merely pseudofeedback. 4.",
                "Although TCFB is just a simple mixture of TFB and CFB by interpolation, it is able to outperform both.",
                "This supports our speculation that TCFB overcomes the drawbacks of TFB (paying attention only to checked terms) and CFB (not distinguishing checked and unchecked terms in a cluster).",
                "Except for TCFB6C v.s.",
                "CFB6C, the performance advantage of TCFB over TFB/CFB is significant at p < 0.05 using the Wilcoxon signed rank test.",
                "This is not true in the case of TFB v.s.",
                "CFB, each of which is better than the other in nearly half of the topics. 6.2 Reduction of Presentation Terms In some situations we may have to reduce the number of presentation terms due to limits in display space or user feedback efforts.",
                "It is interesting to know whether our algorithms performance deteriorates when the user is presented with fewer terms.",
                "Because the presentation terms within each cluster are generated in decreasing order of their frequencies, the presentation list forms a subset of the original one if its size is reduced2 .",
                "Therefore, we can easily simulate what happens when the number of presentation terms decreases 2 There are complexities arising from terms appearing in top L of multiple clusters, but these are exceptions from M to M : we will keep all judgments of the top L = M /K terms in each cluster and discard those of others.",
                "Table 3 shows the performance of various algorithms as the number of presentation terms ranges from 6 to 48.",
                "We find that the performance of TFB is more susceptible to presentation term reduction than that of CFB or TCFB.",
                "For example, at 12 terms the MAP of TFB3C is 90.6% of that at 48 terms, while the numbers for CFB3C and TCFB3C are 98.0% and 96.1% respectively.",
                "We conjecture the reason to be that while TFBs performance heavily depends on how many good terms are chosen for query expansion, CFB only needs a rough estimate of cluster weights to work.",
                "Also, the 3 × 16 clarification forms seem to be more robust than the 6 × 8 ones: at 12 terms the MAP of TFB6C is 87.1% of that at 48 terms, lower than 90.6% for TFB3C.",
                "Similarly, for CFB it is 95.0% against 98.0%.",
                "This is natual, as for a large cluster number of 6, it is easier to get into the situation where each cluster gets too few presentation terms to make topic diversification useful.",
                "Overall, we are surprised to see that the algorithms are still able to perform reasonably well when the number of presentation terms is small.",
                "For example, at only 12 terms CFB3C (the clarification form is of size 3 × 4) can still improve 36.5% over the baseline, dropping slightly from 39.3% at 48 terms. 6.3 User Feedback Analysis In this part we study several aspects of users term feedback behavior, and whether they are connected to retrieval performance.",
                "Figure 2: Clarification form completion time distributions 0−30 30−60 60−90 90−120 120−150 150−180 0 5 10 15 20 25 30 35 completion time (seconds) #topics 1×48 3×16 6×8 Figure 2 shows the distribution of time needed to complete a clarification form3 .",
                "We see that the user is usually able to finish term feedback within a reasonably short amount of time: for more than half of the topics the clarification form is completed in just 1 minute, and only a small fraction of topics (less than 10% for 1 × 48 and 3 × 16) take more than 2 minutes.",
                "This suggests that term feedback is suitable for interactive ad-hoc retrieval, where a user usually does not want to spend too much time on providing feedback.",
                "We find that a user often makes mistakes when judging term relevance.",
                "Sometimes a relevant term may be left out because its connection to the query topic is not obvious to the user.",
                "Other times a dubious term may be included but turns out to be irrelevant.",
                "Take the topic in Figure 1 for example.",
                "There was a fire disaster in Mont 3 The maximal time is 180 seconds, as the NIST assessor would be forced to submit the form at that moment.",
                "Table 4: Term selection statistics (topic average) CF Type 1 × 48 3 × 16 6 × 8 # checked terms 14.8 13.3 11.2 # rel. terms 15.0 12.6 11.2 # rel. checked terms 7.9 6.9 5.9 precision 0.534 0.519 0.527 recall 0.526 0.548 0.527 Blanc Tunnel between France and Italy in 1999, but the user failed to select such keywords as mont, blanc, french and italian due to his/her ignorance of the event.",
                "Indeed, without proper context it would be hard to make perfect judgment.",
                "What is then, the extent to which the user is good at term feedback?",
                "Does it have serious impact on retrieval performance?",
                "To answer these questions, we need a measure of individual terms true relevance.",
                "We adopt the Simplified KL Divergence metric used in [24] to decide query expansion terms as our term relevance measure: σKLD(w) = p(w|R) log p(w|R) p(w|¬R) where p(w|R) is the probability that a relevant document contains term w, and p(w|¬R) is the probability that an irrelevant document contains w, both of which can be easily computed via maximum likelihood estimate given document-level relevance judgment.",
                "If σKLD(w) > 0, w is more likely to appear in relevant documents than irrelevant ones.",
                "We consider a term relevant if its Simplified KL Divergence value is greater than a certain threshold σ0.",
                "We can then define precision and recall of user term judgment accordingly: precision is the fraction of terms checked by the user that are relevant; recall is the fraction of presented relevant terms that are checked by the user.",
                "Table 4 shows the number of checked terms, relevant terms and relevant checked terms when σ0 is set to 1.0, as well as the precision/recall of user term judgment.",
                "Note that when the clarification forms contain more clusters, fewer terms are checked: 14.8 for 1 × 48, 13.3 for 3 × 16 and 11.2 for 6×8.",
                "Similar pattern holds for relevant terms and relevant checked terms.",
                "There seems to be a trade-off between increasing topic diversity by clustering and losing extra relevant terms: when there are more clusters, each of them gets fewer terms to present, which can hurt a major relevant cluster that contains many relevant terms.",
                "Therefore, it is not always helpful to have more clusters, e.g., TFB6C is actually worse than TFB1C.",
                "The major finding we can make from Table 4 is that the user is not particularly good at identifying relevant terms, which echoes the discovery in [18].",
                "In the case of 3 × 16 clarification forms, the average number of terms checked as relevant by the user is 13.3 per topic, and the average number of relevant terms whose σKLD value exceed 1.0 is 12.6.",
                "The user is able to recognize only 6.9 of these terms on average.",
                "Indeed, the precision and recall of user feedback terms (as defined previously) are far from perfect.",
                "On the other hand, If the user had correctly checked all such relevant terms, the performance of our algorithms would have increased a lot, as shown in Table 5.",
                "We see that TFB gets big improvement when there is an oracle who checks all relevant terms, while CFB meets a bottleneck around MAP of 0.325, since all it does is adjust cluster weights, and when the learned weights are close to being accurate, it cannot benefit more from term feedback.",
                "Also note that TCFB fails to outperform TFB, probably because TFB is sufficiently accurate.",
                "Table 5: Change of MAP when using all (and only) relevant terms (σKLD > 1.0) for feedback. original term feedback relevant term feedback TF1 0.288 0.354 TF3 0.288 0.354 TF6 0.278 0.346 CF3 0.305 0.325 CF6 0.301 0.326 TCF3 0.309 0.345 TCF6 0.304 0.341 6.4 Comparison with Relevance Feedback Now we compare term feedback with document-level relevance feedback, in which the user is presented with the top N documents from an initial retrieval and asked to judge their relevance.",
                "The feedback process is simulated using document relevance judgment from NIST.",
                "We use the mixture model based feedback method proposed in [25], with mixture noise set to 0.95 and feedback coefficient set to 0.9.",
                "Comparative evaluation of relevance feedback against other methods is complicated by the fact that some documents have already been viewed during feedback, so it makes no sense to include them in the retrieval results of the second run.",
                "However, this does not hold for term feedback.",
                "Thus, to make it fair w.r.t. users information gain, if the feedback documents are relevant, they should be kept in the top of the ranking; if they are irrelevant, they should be left out.",
                "Therefore, we use relevance feedback to produce a ranking of top 1000 retrieved documents but with every feedback document excluded, and then prepend the relevant feedback documents at the front.",
                "Table 6 shows the performance of relevance feedback for different values of N and compares it with TCFB3C.",
                "Table 6: Performance of relevance feedback for different number of feedback documents (N).",
                "N MAP Pr@30 RR 5 0.302 0.586 4779 10 0.345 0.670 4916 20 0.389 0.772 5004 TCFB3C 0.309 0.491 4947 We see that the performance of TCFB3C is comparable to that of relevance feedback using 5 documents.",
                "Although it is poorer than when there are 10 feedback documents in terms of MAP and Pr@30, it does retrieve more documents (4947) when going down the ranked list.",
                "We try to compare the quality of automatically inserted terms in relevance feedback with that of manually selected terms in term feedback.",
                "This is done by truncating the relevance feedback modified query model to a size equal to the number of checked terms for the same topic.",
                "We can then compare the terms in the truncated model with the checked terms.",
                "Figure 3 shows the distribution of the terms σKLD scores.",
                "We find that term feedback tends to produce expansion terms of higher quality(those with σKLD > 1) compared to relevance feedback (with 10 feedback documents).",
                "This does not contradict the fact that the latter yields higher retrieval performance.",
                "Actually, when we use the truncated query model instead of the intact one refined from relevance feedback, the MAP is only 0.304.",
                "The truth Figure 3: Comparison of expansion term quality between relevance feedback (with 10 feedback documents) and term feedback (with 3 × 16 CFs) −1−0 0−1 1−2 2−3 3−4 4−5 5−6 0 50 100 150 200 250 300 350 σKLD #terms relevance feedback term feedback is, although there are many unwanted terms in the expanded query model from feedback documents, there are also more relevant terms than what the user can possibly select from the list of presentation terms generated with pseudo-feedback documents, and the positive effects often outweights the negative ones.",
                "We are interested to know under what circumstances term feedback has advantage over relevance feedback.",
                "One such situation is when none of the top N feedback documents is relevant, rendering relevance feedback useless.",
                "This is not infrequent, as one might have thought: out of the 50 topics, there are 13 such cases when N = 5, 10 when N = 10, and still 3 when N = 20.",
                "When this happens, one can only back off to the original retrieval method; the power of relevance feedback is lost.",
                "Surprisingly, in 11 out of 13 such cases where relevance feedback seems impossible, the user is able to check at least 2 relevant terms from the 3 × 16 clarification form (we consider term t to be relevant if σKLD(t) > 1.0).",
                "Furthermore, in 10 out of them TCFB3C outperforms the pseudo-feedback baseline, increasing MAP from 0.076 to 0.146 on average (these are particularly hard topics).",
                "We think that there are two possible explanations for this phenomenon of term feedback being active even when relevance feedback does not work: First, even if none of the top N (suppose it is a small number) documents are relevant, we may still find relevant documents in top 60, which is more inclusive but usually unreachable when people are doing relevance feedback in interactive ad-hoc search, from which we can draw feedback terms.",
                "This is true for topic 367 piracy, where the top 10 feedback documents are all about software piracy, yet there are documents between 10-60 that are about piracy on the seas (which is about the real information need), contributing terms such as pirate, ship for selection in the clarification form.",
                "Second, for some topics, a document needs to meet some special condition in order to be relevant.",
                "The top N documents may be related to the topic, but nonetheless irrelevant.",
                "In this case, we may still extract useful terms from these documents, even if they do not qualify as relevant ones.",
                "For example, in topic 639 consumer online shopping, a document needs to mention what contributes to shopping growth to really match the specified information need, hence none of the top 10 feedback documents are regarded as relevant.",
                "But nevertheless, the feedback terms such as retail, commerce are good for query expansion. 7.",
                "CONCLUSIONS In this paper we studied the use of term feedback for interactive <br>information retrieval</br> in the language modeling approach.",
                "We proposed a cluster-based method for selecting presentation terms as well as algorithms to estimate refined query models from user term feedback.",
                "We saw significant improvement in retrieval accuracy brought by term feedback, in spite of the fact that a user often makes mistakes in relevance judgment that hurts its performance.",
                "We found the best-performing algorithm to be TCFB, which benefits from the combination of directly observed term evidence with TFB and indirectly learned cluster relevance with CFB.",
                "When we reduced the number of presentation terms, term feedback is still able to keep much of its performance gain over the baseline.",
                "Finally, we compared term feedback to document-level relevance feedback, and found that TCFB3Cs performance is on a par with the latter with 5 feedback documents.",
                "We regarded term feedback as a viable alternative to traditional relevance feedback, especially when there are no relevant documents in the top.",
                "We propose to extend our work in several ways.",
                "First, we want to study whether the use of various contexts can help the user to better identify term relevance, while not sacrificing the simplicity and compactness of term feedback.",
                "Second, currently all terms are presented to the user in a single batch.",
                "We could instead consider iterative term feedback, by presenting a small number of terms first, and show more terms after receiving user feedback or stop when the refined query is good enough.",
                "The presented terms should be selected dynamically to maximize learning benefits at any moment.",
                "Third, we have plans to incorporate term feedback into our UCAIR toolbar[20], an Internet Explorer plugin, to make it work for web search.",
                "We are also interested in studying how to combine term feedback with relevance feedback or implicit feedback.",
                "We could, for example, allow the user to dynamically modify terms in a language model learned from feedback documents. 8.",
                "ACKNOWLEDGMENT This work is supported in part by the National Science Foundation grants IIS-0347933 and IIS-0428472. 9.",
                "REFERENCES [1] J. Allan.",
                "Relevance feedback with too much data.",
                "In Proceedings of the 18th annual international ACM SIGIR conference on research and development in <br>information retrieval</br>, pages 337-343, 1995. [2] J. Allan.",
                "HARD track overview in TREC 2005 - High Accuracy Retrieval from Documents.",
                "In The Fourteenth Text REtrieval Conference, 2005. [3] P. Anick.",
                "Using terminological feedback for web search refinement: a log-based study.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 88-95, 2003. [4] P. G. Anick and S. Tipirneni.",
                "The paraphrase search assistant: terminological feedback for iterative information seeking.",
                "In Proceedings of the 22nd annual international ACM SIGIR conference on research and development in <br>information retrieval</br>, pages 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan, and A. Singhal.",
                "Automatic query expansion using SMART.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [6] D. Harman.",
                "Towards interactive query expansion.",
                "In Proceedings of the 11th annual international ACM SIGIR conference on research and development in <br>information retrieval</br>, pages 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wade, and J. Allan.",
                "UMass at TREC 2003: HARD and QA.",
                "In TREC, pages 715-725, 2003. [8] H. Joho, C. Coverson, M. Sanderson, and M. Beaulieu.",
                "Hierarchical presentation of expansion terms.",
                "In Proceedings of the 2002 ACM symposium on applied computing, pages 645-649, 2002. [9] K. S. Jones, S. Walker, and S. E. Robertson.",
                "A probabilistic model of <br>information retrieval</br>: development and status.",
                "Technical Report 446, Computer Laboratory, University of Cambridge, 1998. [10] D. Kelly, V. D. Dollu, and X. Fu.",
                "The loquacious user: a document-independent source of terms for query expansion.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in <br>information retrieval</br>, pages 457-464, 2005. [11] D. Kelly and X. Fu.",
                "Elicitation of term relevance feedback: an investigation of term source and context.",
                "In Proceedings of the 29th annual international ACM SIGIR conference on research and development in <br>information retrieval</br>, 2006. [12] J. Koenemann and N. Belkin.",
                "A case for interaction: A study of interactive <br>information retrieval</br> behavior and effectiveness.",
                "In Proceedings of the SIGCHI conference on human factors in computing systems, pages 205-212, 1996. [13] V. Lavrenko and W. B. Croft.",
                "Relevance-based language models.",
                "In Research and Development in <br>information retrieval</br>, pages 120-127, 2001. [14] Y. Nemeth, B. Shapira, and M. Taeib-Maimon.",
                "Evaluation of the real and perceived value of automatic and interactive query expansion.",
                "In Proceedings of the 27th annual international ACM SIGIR conference on research and development in <br>information retrieval</br>, pages 526-527, 2004. [15] J. Ponte.",
                "A Language Modeling Approach to <br>information retrieval</br>.",
                "PhD thesis, University of Massachusetts at Amherst, 1998. [16] S. E. Robertson, S. Walker, S. Jones, M. Beaulieu, and M. Gatford.",
                "Okapi at TREC-3.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [17] J. Rocchio.",
                "Relevance feedback in <br>information retrieval</br>.",
                "In The SMART retrieval system, pages 313-323. 1971. [18] I. Ruthven.",
                "Re-examining the potential effectiveness of interactive query expansion.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 213-220, 2003. [19] G. Salton and C. Buckley.",
                "Improving retrieval performance by relevance feedback.",
                "Journal of the American Society for Information Science, 41:288-297, 1990. [20] X. Shen, B. Tan, and C. Zhai.",
                "Implicit user modeling for personalized search.",
                "In Proceedings of the 14th ACM international conference on information and knowledge management, pages 824-831, 2005. [21] X. Shen and C. Zhai.",
                "Active feedback in ad-hoc <br>information retrieval</br>.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in <br>information retrieval</br>, pages 59-66, 2005. [22] A. Spink.",
                "Term relevance feedback and query expansion: relation to design.",
                "In Proceedings of the 17th annual international ACM SIGIR conference on research and development in <br>information retrieval</br>, pages 81-90, 1994. [23] J. Xu and W. B. Croft.",
                "Query expansion using local and global document analysis.",
                "In Proceedings of the 19th annual international ACM SIGIR conference on research and development in <br>information retrieval</br>, pages 4-11, 1996. [24] H. Zaragoza, N. Craswell, M. Taylor, S. Saria, and S. Robertson.",
                "Microsoft cambridge at TREC-13: Web and HARD tracks.",
                "In Proceedings of the 13th Text REtrieval Conference, 2004. [25] C. Zhai and J. Lafferty.",
                "Model-based feedback in the language modeling approach to <br>information retrieval</br>.",
                "In Proceedings of the tenth international conference on information and knowledge management, pages 403-410, 2001. [26] C. Zhai, A. Velivelli, and B. Yu.",
                "A cross-collection mixture model for comparative text mining.",
                "In Proceedings of the tenth ACM SIGKDD international conference on knowledge discovery and data mining, pages 743-748, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Comentarios de término para \"recuperación de información\" con modelos de idiomas bin Tan †, Atulya Velivelli ‡, Hui Fang †,",
                "de informática †, Departamento de Ingeniería Eléctrica e Informática ‡ Universidad de Illinois en Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.Resumen EDU En este documento estudiamos comentarios basados en términos para la \"recuperación de información\" en el enfoque de modelado de idiomas.",
                "Introducción En el enfoque de modelado de idiomas para la \"recuperación de la información\", la retroalimentación a menudo se modela como estimando un modelo de consulta mejorado o modelo de relevancia basado en un conjunto de documentos de retroalimentación [25, 13].",
                "Durante nuestra participación en la pista dura TREC 2005 y el estudio continuo después, exploramos cómo explotar los comentarios de términos del usuario para construir modelos de consulta mejorados para la \"recuperación de información\" en el enfoque de modelado de idiomas.",
                "Conclusiones En este documento estudiamos el uso de comentarios de términos para la \"recuperación de información\" interactiva en el enfoque de modelado de idiomas.",
                "En Actas de la 18ª Conferencia Anual de ACM Sigir sobre investigación y desarrollo en \"Recuperación de información\", páginas 337-343, 1995. [2] J. Allan.",
                "En Actas de la 22a Conferencia Internacional ACM Sigir sobre investigación y desarrollo en \"Recuperación de información\", páginas 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan y A. Singhal.",
                "En Actas de la 11ª Conferencia Anual de ACM Sigir sobre investigación y desarrollo en \"Recuperación de información\", páginas 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wadey J. Allan.",
                "Un modelo probabilístico de \"recuperación de información\": desarrollo y estado.",
                "En Actas de la 28ª Conferencia Anual de ACM Sigir sobre investigación y desarrollo en \"Recuperación de información\", páginas 457-464, 2005. [11] D. Kelly y X. Fu."
            ],
            "translated_text": "",
            "candidates": [
                "Chengxiang zhai † Departamento de recuperación de información",
                "recuperación de información",
                "recuperación de información",
                "recuperación de información",
                "recuperación de información",
                "recuperación de la información",
                "recuperación de información",
                "recuperación de información",
                "recuperación de información",
                "recuperación de información",
                "recuperación de información",
                "Recuperación de información",
                "recuperación de información",
                "Recuperación de información",
                "recuperación de información",
                "Recuperación de información",
                "recuperación de información",
                "recuperación de información",
                "recuperación de información",
                "Recuperación de información"
            ],
            "error": []
        },
        "language modeling": {
            "translated_key": "modelado de idiomas",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Term Feedback for Information Retrieval with Language Models Bin Tan† , Atulya Velivelli‡ , Hui Fang† , ChengXiang Zhai† Dept.",
                "of Computer Science† , Dept. of Electrical and Computer Engineering‡ University of Illinois at Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.edu ABSTRACT In this paper we study term-based feedback for information retrieval in the <br>language modeling</br> approach.",
                "With term feedback a user directly judges the relevance of individual terms without interaction with feedback documents, taking full control of the query expansion process.",
                "We propose a cluster-based method for selecting terms to present to the user for judgment, as well as effective algorithms for constructing refined query language models from user term feedback.",
                "Our algorithms are shown to bring significant improvement in retrieval accuracy over a non-feedback baseline, and achieve comparable performance to relevance feedback.",
                "They are helpful even when there are no relevant documents in the top.",
                "Categories and Subject Descriptors H.3.3 [Information Search and Retrieval]: Retrieval models General Terms Algorithms 1.",
                "INTRODUCTION In the <br>language modeling</br> approach to information retrieval, feedback is often modeled as estimating an improved query model or relevance model based on a set of feedback documents [25, 13].",
                "This is in line with the traditional way of doing relevance feedback - presenting a user with documents/passages for relevance judgment and then extracting terms from the judged documents or passages to expand the initial query.",
                "It is an indirect way of seeking users assistance for query model construction, in the sense that the refined query model (based on terms) is learned through feedback documents/passages, which are high-level structures of terms.",
                "It has the disadvantage that irrelevant terms, which occur along with relevant ones in the judged content, may be erroneously used for query expansion, causing undesired effects.",
                "For example, for the TREC query Hubble telescope achievements, when a relevant document talks more about the telescopes repair than its discoveries, irrelevant terms such as spacewalk can be added into the modified query.",
                "We can consider a more direct way to involve a user in query model improvement, without an intermediary step of document feedback that can introduce noise.",
                "The idea is to present a (reasonable) number of individual terms to the user and ask him/her to judge the relevance of each term or directly specify their probabilities in the query model.",
                "This strategy has been discussed in [15], but to our knowledge, it has not been seriously studied in existing <br>language modeling</br> literature.",
                "Compared to traditional relevance feedback, this term-based approach to interactive query model refinement has several advantages.",
                "First, the user has better control of the final query model through direct manipulation of terms: he/she can dictate which terms are relevant, irrelevant, and possibly, to what degree.",
                "This avoids the risk of bringing unwanted terms into the query model, although sometimes the user introduces low-quality terms.",
                "Second, because a term takes less time to judge than a documents full text or summary, and as few as around 20 presented terms can bring significant improvement in retrieval performance (as we will show later), term feedback makes it faster to gather user feedback.",
                "This is especially helpful for interactive adhoc search.",
                "Third, sometimes there are no relevant documents in the top N of the initially retrieved results if the topic is hard.",
                "This is often true when N is constrained to be small, which arises from the fact that the user is unwilling to judge too many documents.",
                "In this case, relevance feedback is useless, as no relevant document can be leveraged on, but term feedback is still often helpful, by allowing relevant terms to be picked from irrelevant documents.",
                "During our participation in the TREC 2005 HARD Track and continued study afterward, we explored how to exploit term feedback from the user to construct improved query models for information retrieval in the <br>language modeling</br> approach.",
                "We identified two key subtasks of term-based feedback, i.e., pre-feedback presentation term selection and post-feedback query model construction, with effective algorithms developed for both.",
                "We imposed a secondary cluster structure on terms and found that a cluster view sheds additional insight into the users information need, and provides a good way of utilizing term feedback.",
                "Through experiments we found that term feedback improves significantly over the nonfeedback baseline, even though the user often makes mistakes in relevance judgment.",
                "Among our algorithms, the one with best retrieval performance is TCFB, the combination of TFB, the direct term feedback algorithm, and CFB, the cluster-based feedback algorithm.",
                "We also varied the number of feedback terms and observed reasonable improvement even at low numbers.",
                "Finally, by comparing term feedback with document-level feedback, we found it to be a viable alternative to the latter with competitive retrieval performance.",
                "The rest of the paper is organized as follows.",
                "Section 2 discusses some related work.",
                "Section 4 outlines our general approach to term feedback.",
                "We present our method for presentation term selection in Section 3 and algorithms for query model construction in Section 5.",
                "The experiment results are given in Section 6.",
                "Section 7 concludes this paper. 2.",
                "RELATED WORK Relevance feedback[17, 19] has long been recognized as an effective method for improving retrieval performance.",
                "Normally, the top N documents retrieved using the original query are presented to the user for judgment, after which terms are extracted from the judged relevant documents, weighted by their potential of attracting more relevant documents, and added into the query model.",
                "The expanded query usually represents the users information need better than the original one, which is often just a short keyword query.",
                "A second iteration of retrieval using this modified query usually produces significant increase in retrieval accuracy.",
                "In cases where true relevance judgment is unavailable and all top N documents are assumed to be relevant, it is called blind or pseudo feedback[5, 16] and usually still brings performance improvement.",
                "Because document is a large text unit, when it is used for relevance feedback many irrelevant terms can be introduced into the feedback process.",
                "To overcome this, passage feedback is proposed and shown to improve feedback performance[1, 23].",
                "A more direct solution is to ask the user for their relevance judgment of feedback terms.",
                "For example, in some relevance feedback systems such as [12], there is an interaction step that allows the user to add or remove expansion terms after they are automatically extracted from relevant documents.",
                "This is categorized as interactive query expansion, where the original query is augmented with user-provided terms, which can come from direct user input (free-form text or keywords)[22, 7, 10] or user selection of system-suggested terms (using thesauri[6, 22] or extracted from feedback documents[6, 22, 12, 4, 7]).",
                "In many cases term relevance feedback has been found to effectively improve retrieval performance[6, 22, 12, 4, 10].",
                "For example, the study in [12] shows that the user prefers to have explicit knowledge and direct control of which terms are used for query expansion, and the penetrable interface that provides this freedom is shown to perform better than other interfaces.",
                "However, in some other cases there is no significant benefit[3, 14], even if the user likes interacting with expansion terms.",
                "In a simulated study carried out in [18], the author compares the retrieval performance of interactive query expansion and automatic query expansion with a simulated study, and suggests that the potential benefits of the former can be hard to achieve.",
                "The user is found to be not good at identifying useful terms for query expansion, when a simple term presentation interface is unable to provide sufficient semantic context of the feedback terms.",
                "Our work differs from the previous ones in two important aspects.",
                "First, when we choose terms to present to the user for relevance judgment, we not only consider single-term value (e.g., the relative frequency of a term in the top documents, which can be measured by metrics such as Robertson Selection Value and Simplified Kullback-Leibler Distance as listed in [24]), but also examine the cluster structure of the terms, so as to produce a balanced coverage of the different topic aspects.",
                "Second, with the language modelling framework, we allow an elaborate construction of the updated query model, by setting different probabilities for different terms based on whether it is a query term, its significance in the top documents, and its cluster membership.",
                "Although techniques for adjusting query term weights exist for vector space models[17] and probablistic relevance models[9], most of the aforementioned works do not use them, choosing to just append feedback terms to the original query (thus using equal weights for them), which can lead to poorer retrieval performance.",
                "The combination of the two aspects allows our method to perform much better than the baseline.",
                "The usual way for feedback term presentation is just to display the terms in a list.",
                "There have been some works on alternative user interfaces. [8] arranges terms in a hierarchy, and [11] compares three different interfaces, including terms + checkboxes, terms + context (sentences) + checkboxes, sentences + input text box.",
                "In both studies, however, there is no significant performance difference.",
                "In our work we adopt the simplest approach of terms + checkboxes.",
                "We focus on term presentation and query model construction from feedback terms, and believe using contexts to improve feedback term quality should be orthogonal to our method. 3.",
                "GENERAL APPROACH We follow the <br>language modeling</br> approach, and base our method on the KL-divergence retrieval model proposed in [25].",
                "With this model, the retrieval task involves estimating a query language model θq from a given query, a document language model θd from each document, and calculating their KL-divergence D(θq||θd), which is then used to score the documents. [25] treats relevance feedback as a query model re-estimation problem, i.e., computing an updated query model θq given the original query text and the extra evidence carried by the judged relevant documents.",
                "We adopt this view, and cast our task as updating the query model from user term feedback.",
                "There are two key subtasks here: First, how to choose the best terms to present to the user for judgment, in order to gather maximal evidence about the users information need.",
                "Second, how to compute an updated query model based on this term feedback evidence, so that it captures the users information need and translates into good retrieval performance. 4.",
                "PRESENTATION TERM SELECTION Proper selection of terms to be presented to the user for judgment is crucial to the success of term feedback.",
                "If the terms are poorly chosen and there are few relevant ones, the user will have a hard time looking for useful terms to help clarify his/her information need.",
                "If the relevant terms are plentiful, but all concentrate on a single aspect of the query topic, then we will only be able to get feedback on that aspect and missing others, resulting in a breadth loss in retrieved results.",
                "Therefore, it is important to carefully select presentation terms to maximize expected gain from user feedback, i.e., those that can potentially reveal most evidence of the users information need.",
                "This is similar to active feedback[21], which suggests that a retrieval system should actively probe the users information need, and in the case of relevance feedback, the feedback documents should be chosen to maximize learning benefits (e.g. diversely so as to increase coverage).",
                "In our approach, the top N documents from an initial retrieval using the original query form the source of feedback terms: all terms that appear in them are considered candidates to present to the user.",
                "These documents serve as pseudo-feedback, since they provide a much richer context than the original query (usually very short), while the user is not asked to judge their relevance.",
                "Due to the latter reason, it is possible to make N quite large (e.g., in our experiments we set N = 60) to increase its coverage of different aspects in the topic.",
                "The simplest way of selecting feedback terms is to choose the most frequent M terms from the N documents.",
                "This method, however, has two drawbacks.",
                "First, a lot of common noisy terms will be selected due to their high frequencies in the document collection, unless a stop-word list is used for filtering.",
                "Second, the presentation list will tend to be filled by terms from major aspects of the topic; those from a minor aspect are likely to be missed due to their relatively low frequencies.",
                "We solve the above problems by two corresponding measures.",
                "First, we introduce a background model θB that is estimated from collection statistics and explains the common terms, so that they are much less likely to appear in the presentation list.",
                "Second, the terms are selected from multiple clusters in the pseudo-feedback documents, to ensure sufficient representation of different aspects of the topic.",
                "We rely on the mixture multinomial model, which is used for theme discovery in [26].",
                "Specifically, we assume the N documents contain K clusters {Ci| i = 1, 2, · · · K}, each characterized by a multinomial word distribution (also known as unigram language model) θi and corresponding to an aspect of the topic.",
                "The documents are regarded as sampled from a mixture of K + 1 components, including the K clusters and the background model: p(w|d) = λBp(w|θB) + (1 − λB) K i=1 πd,ip(w|θi) where w is a word, λB is the mixture weight for the background model θB, and πd,i is the document-specific mixture weight for the i-th cluster model θi.",
                "We then estimate the cluster models by maximizing the probability of the pseudo-feedback documents being generated from the multinomial mixture model: log p(D|Λ) = d∈D w∈V c(w; d) log p(w|d) where D = {di| i = 1, 2, · · · N} is the set of the N documents, V is the vocabulary, c(w; d) is ws frequency in d and Λ = {θi| i = 1, 2, · · · K} ∪ {πdij | i = 1, 2, · · · N, j = 1, 2, · · · K} is the set of model parameters to estimate.",
                "The cluster models can be efficiently estimated using the Expectation-Maximization (EM) algorithm.",
                "For its details, we refer the reader to [26].",
                "Table 1 shows the cluster models for TREC query Transportation tunnel disasters (K = 3).",
                "Note that only the middle cluster is relevant.",
                "Table 1: Cluster models for topic 363 Transportation tunnel disasters Cluster 1 Cluster 2 Cluster 3 tunnel 0.0768 tunnel 0.0935 tunnel 0.0454 transport 0.0364 fire 0.0295 transport 0.0406 traffic 0.0206 truck 0.0236 toll 0.0166 railwai 0.0186 french 0.0220 amtrak 0.0153 harbor 0.0146 smoke 0.0157 train 0.0129 rail 0.0140 car 0.0154 airport 0.0122 bridg 0.0139 italian 0.0152 turnpik 0.0105 kilomet 0.0136 firefight 0.0144 lui 0.0095 truck 0.0133 blaze 0.0127 jersei 0.0093 construct 0.0131 blanc 0.0121 pass 0.0087 · · · · · · · · · From each of the K estimated clusters, we choose the L = M/K terms with highest probabilities to form a total of M presentation terms.",
                "If a term happens to be in top L in multiple clusters, we assign it to the cluster where it has highest probability and let the other clusters take one more term as compensation.",
                "We also filter out terms in the original query text because they tend to always be relevant when the query is short.",
                "The selected terms are then presented to the user for judgment.",
                "A sample (completed) feedback form is shown in Figure 1.",
                "In this study we only deal with binary judgment: a presented term is by default unchecked, and a user may check it to indicate relevance.",
                "We also do not explicitly exploit negative feedback (i.e., penalizing irrelevant terms), because with binary feedback an unchecked term is not necessarily irrelevant (maybe the user is unsure about its relevance).",
                "We could ask the user for finer judgment (e.g., choosing from highly relevant, somewhat relevant, do not know, somewhat irrelevant and highly irrelevant), but binary feedback is more compact, taking less space to display and less user effort to make judgment. 5.",
                "ESTIMATING QUERY MODELS FROM TERM FEEDBACK In this section, we present several algorithms for exploiting term feedback.",
                "The algorithms take as input the original query q, the clusters {θi} as generated by the theme discovery algorithm, the set of feedback terms T and their relevance judgment R, and outputs an updated query language model θq that makes best use of the feedback evidence to capture the users information need.",
                "First we describe our notations: • θq: The original query model, derived from query terms only: p(w|θq) = c(w; q) |q| where c(w; q) is the count of w in q, and |q| = w∈q c(w; q) is the query length. • θq : The updated query model which we need to estimate from term feedback. • θi (i = 1, 2, . . .",
                "K): The unigram language model of cluster Ci, as estimated using the theme discovery algorithm. • T = {ti,j} (i = 1 . . .",
                "K, j = 1 . . .",
                "L): The set of terms presented to the user for judgment. ti,j is the j-th term chosen from cluster Ci. • R = {δw|w ∈ T}: δw is an indicator variable that is 1 if w is judged relevant or 0 otherwise. 5.1 TFB (Direct Term Feedback) This is a straight-forward form of term feedback that does not involve any secondary structure.",
                "We give a weight of 1 to terms judged relevant by the user, a weight of μ to query terms, zero weight to other terms, and then apply normalization: p(w|θq ) = δw + μ c(w; q) w ∈T δw + μ|q| where w ∈T δw is the total number of terms that are judged relevant.",
                "We call this method TFB (direct Term FeedBack).",
                "If we let μ = 1, this approach is equivalent to appending the relevant terms after the original query, which is what standard query expansion (without term reweighting) does.",
                "If we set μ > 1, we are putting more emphasis on the query terms than the checked ones.",
                "Note that the result model will be more biased toward θq if the original query is long or the user feedback is weak, which makes sense, as we can trust more on the original query in either case.",
                "Figure 1: Filled clarification form for Topic 363 363 transportation tunnel disasters Please select all terms that are relevant to the topic. traffic railway harbor rail bridge kilometer construct swiss cross link kong hong river project meter shanghai fire truck french smoke car italian firefights blaze blanc mont victim franc rescue driver chamonix emerge toll amtrak train airport turnpike lui jersey pass rome z center electron road boston speed bu submit 5.2 CFB (Cluster Feedback) Here we exploit the cluster structure that played an important role when we selected the presentation terms.",
                "The clusters represent different aspects of the query topic, each of which may or may not be relevant.",
                "If we are able to identify the relevant clusters, we can combine them to generate a query model that is good at discovering documents belonging to these clusters (instead of the irrelevant ones).",
                "We could ask the user to directly judge the relevance of a cluster after viewing representative terms in that cluster, but this would sometimes be a difficult task for the user, who has to guess the semantics of a cluster via its set of terms, which may not be well connected to one another due to a lack of context.",
                "Therefore, we propose to learn cluster feedback indirectly, inferring the relevance of a cluster through the relevance of its feedback terms.",
                "Because each cluster has an equal number of terms presented to the user, the simplest measure of a clusters relevance is the number of terms that are judged relevant in it.",
                "Intuitively, the more terms are marked relevant in a cluster, the closer the cluster is to the query topic, and the more the cluster should participate in query modification.",
                "If we combine the cluster models using weights determined this way and then interpolate with the original query model, we get the following formula for query updating, which we call CFB (Cluster FeedBack): p(w|θq ) = λp(w|θq) + (1 − λ) K i=1 L j=1 δti,j K k=1 L j=1 δtk,j p(w|θi) where L j=1 δti,j is the number of relevant terms in cluster Ci, and K k=1 L j=1 δtk,j is the total number of relevant terms.",
                "We note that when there is only one cluster (K = 1), the above formula degenerates to p(w|θq ) = λp(w|θq) + (1 − λ)p(w|θ1) which is merely pseudo-feedback of the form proposed in [25]. 5.3 TCFB (Term-cluster Feedback) TFB and CFB both have their drawbacks.",
                "TFB assigns non-zero probabilities to the presented terms that are marked relevant, but completely ignores (a lot more) others, which may be left unchecked due to the users ignorance, or simply not included in the presentation list, but we should be able to infer their relevance from the checked ones.",
                "For example, in Figure 1, since as many as 5 terms in the middle cluster (the third and fourth columns) are checked, we should have high confidence in the relevance of other terms in that cluster.",
                "CFB remedies TFBs problem by treating the terms in a cluster collectively, so that unchecked/unpresented terms receive weights when presented terms in their clusters are judged as relevant, but it does not distinguish which terms in a cluster are presented or judged.",
                "Intuitively, the judged relevant terms should receive larger weights because they are explicitly indicated as relevant by the user.",
                "Therefore, we try to combine the two methods, hoping to get the best out of both.",
                "We do this by interpolating the TFB model with the CFB model, and call it TCFB: p(w|θq ) = αp(w|θqT F B ) + (1 − α)p(w|θqCF B ) 6.",
                "EXPERIMENTS In this section, we describe our experiment results.",
                "We first describe our experiment setup and present an overview of various methods performance.",
                "Then we discuss the effects of varying the parameter setting in the algorithms, as well as the number of presentation terms.",
                "Next we analyze user term feedback behavior and its relation to retrieval performance.",
                "Finally we compare term feedback to relevance feedback and show that it has its particular advantage. 6.1 Experiment Setup and Basic Results We took the opportunity of TREC 2005 HARD Track[2] for the evaluation of our algorithms.",
                "The tracks used the AQUAINT collection, a 3GB corpus of English newswire text.",
                "The topics included 50 ones previously known to be hard, i.e. with low retrieval performance.",
                "It is for these hard topics that user feedback is most helpful, as it can provide information to disambiguate the queries; with easy topics the user may be unwilling to spend efforts for feedback if the automatic retrieval results are good enough.",
                "Participants of the track were able to submit custom-designed clarification forms (CF) to solicit feedback from human assessors provided by Table 2: Retrieval performance for different methods and CF types.",
                "The last row is the percentage of MAP improvement over the baseline.",
                "The parameter settings μ = 4, λ = 0.1, α = 0.3 are near optimal.",
                "Baseline TFB1C TFB3C TFB6C CFB1C CFB3C CFB6C TCFB1C TCFB3C TCFB6C MAP 0.219 0.288 0.288 0.278 0.254 0.305 0.301 0.274 0.309 0.304 Pr@30 0.393 0.467 0.475 0.457 0.399 0.480 0.473 0.431 0.491 0.473 RR 4339 4753 4762 4740 4600 4907 4872 4767 4947 4906 % 0% 31.5% 31.5% 26.9% 16.0% 39.3% 37.4% 25.1% 41.1% 38.8% Table 3: MAP variation with the number of presented terms. # terms TFB1C TFB3C TFB6C CFB3C CFB6C TCFB3C TCFB6C 6 0.245 0.240 0.227 0.279 0.279 0.281 0.274 12 0.261 0.261 0.242 0.299 0.286 0.297 0.281 18 0.275 0.274 0.256 0.301 0.282 0.300 0.286 24 0.276 0.281 0.265 0.303 0.292 0.305 0.292 30 0.280 0.285 0.270 0.304 0.296 0.307 0.296 36 0.282 0.288 0.272 0.307 0.297 0.309 0.297 42 0.283 0.288 0.275 0.306 0.298 0.309 0.300 48 0.288 0.288 0.278 0.305 0.301 0.309 0.303 NIST.",
                "We designed three sets of clarification forms for term feedback, differing in the choice of K, the number of clusters, and L, the number of presented terms from each cluster.",
                "They are: 1× 48, a big cluster with 48 terms, 3 × 16, 3 clusters with 16 terms each, and 6 × 8, 6 clusters with 8 terms each.",
                "The total number of presented terms (M) is fixed at 48, so by comparing the performance of different types of clarification forms we can know the effects of different degree of clustering.",
                "For each topic, an assessor would complete the forms ordered by 6 × 8, 1 × 48 and 3 × 16, spending up to three minutes on each form.",
                "The sample clarification form shown in Figure 1 is of type 3 × 16.",
                "It is a simple and compact interface in which the user can check relevant terms.",
                "The form is self-explanatory; there is no need for extra user training on how to use it.",
                "Our initinal queries are constructed only using the topic title descriptions, which are on average 2.7 words in length.",
                "As our baseline we use the KL divergence retrieval method implemented in the Lemur Toolkit1 with 5 pseudo-feedback documents.",
                "We stem the terms, choose Dirichlet smoothing with a prior of 2000, and truncate query language models to 50 terms (these settings are used throughout the experiments).",
                "For all other parameters we use Lemurs default settings.",
                "The baseline turns out to perform above average among the track participants.",
                "After an initial run using this baseline retrieval method, we take the top 60 documents for each topic and apply the theme discovery algorithm to output the clusters (1, 3, or 6 of them), based on which we generate clarification forms.",
                "After user feedback is received, we run the term feedback algorithms (TFB, CFB or TCFB) to estimate updated query models, which are then used for a second iteration of retrieval.",
                "We evaluate the different retrieval methods performance on their rankings of the top 1000 documents.",
                "The evaluation metrics we adopt include mean average (non-interpolated) precision (MAP), precision at top 30 (Pr@30) and total relevant retrieved (RR).",
                "Table 2 shows the performance of various methods and configurations of K × L. The suffixes (1C, 3C, 6C) after TFB,CFB,TCFB stand for the number of clusters (K).",
                "For example, TCFB3C means the TCFB method on the 3 × 16 clarification forms.",
                "From Table 2 we can make the following observations: 1 http://www.lemurproject.com 1.",
                "All methods perform considerably better than the pseudofeedback baseline, with TCFB3C achieving a highest 41.1% improvement in MAP, indicating significant contribution of term feedback for clarification of the users information need.",
                "In other words, term feedback is truly helpful for improving retrieval accuracy. 2.",
                "For TFB, the performance is almost equal on the 1 × 48 and 3 × 16 clarification forms in terms of MAP (although the latter is slightly better in Pr@30 and RR), and a little worse on the 6 × 8 ones. 3.",
                "Both CFB3C and CFB6C perform better than their TFB counterparts in all three metrics, suggesting that feedback on a secondary cluster structure is indeed beneficial.",
                "CFB1C is actually worse because it cannot adjust the weight of its (single) cluster from term feedback and it is merely pseudofeedback. 4.",
                "Although TCFB is just a simple mixture of TFB and CFB by interpolation, it is able to outperform both.",
                "This supports our speculation that TCFB overcomes the drawbacks of TFB (paying attention only to checked terms) and CFB (not distinguishing checked and unchecked terms in a cluster).",
                "Except for TCFB6C v.s.",
                "CFB6C, the performance advantage of TCFB over TFB/CFB is significant at p < 0.05 using the Wilcoxon signed rank test.",
                "This is not true in the case of TFB v.s.",
                "CFB, each of which is better than the other in nearly half of the topics. 6.2 Reduction of Presentation Terms In some situations we may have to reduce the number of presentation terms due to limits in display space or user feedback efforts.",
                "It is interesting to know whether our algorithms performance deteriorates when the user is presented with fewer terms.",
                "Because the presentation terms within each cluster are generated in decreasing order of their frequencies, the presentation list forms a subset of the original one if its size is reduced2 .",
                "Therefore, we can easily simulate what happens when the number of presentation terms decreases 2 There are complexities arising from terms appearing in top L of multiple clusters, but these are exceptions from M to M : we will keep all judgments of the top L = M /K terms in each cluster and discard those of others.",
                "Table 3 shows the performance of various algorithms as the number of presentation terms ranges from 6 to 48.",
                "We find that the performance of TFB is more susceptible to presentation term reduction than that of CFB or TCFB.",
                "For example, at 12 terms the MAP of TFB3C is 90.6% of that at 48 terms, while the numbers for CFB3C and TCFB3C are 98.0% and 96.1% respectively.",
                "We conjecture the reason to be that while TFBs performance heavily depends on how many good terms are chosen for query expansion, CFB only needs a rough estimate of cluster weights to work.",
                "Also, the 3 × 16 clarification forms seem to be more robust than the 6 × 8 ones: at 12 terms the MAP of TFB6C is 87.1% of that at 48 terms, lower than 90.6% for TFB3C.",
                "Similarly, for CFB it is 95.0% against 98.0%.",
                "This is natual, as for a large cluster number of 6, it is easier to get into the situation where each cluster gets too few presentation terms to make topic diversification useful.",
                "Overall, we are surprised to see that the algorithms are still able to perform reasonably well when the number of presentation terms is small.",
                "For example, at only 12 terms CFB3C (the clarification form is of size 3 × 4) can still improve 36.5% over the baseline, dropping slightly from 39.3% at 48 terms. 6.3 User Feedback Analysis In this part we study several aspects of users term feedback behavior, and whether they are connected to retrieval performance.",
                "Figure 2: Clarification form completion time distributions 0−30 30−60 60−90 90−120 120−150 150−180 0 5 10 15 20 25 30 35 completion time (seconds) #topics 1×48 3×16 6×8 Figure 2 shows the distribution of time needed to complete a clarification form3 .",
                "We see that the user is usually able to finish term feedback within a reasonably short amount of time: for more than half of the topics the clarification form is completed in just 1 minute, and only a small fraction of topics (less than 10% for 1 × 48 and 3 × 16) take more than 2 minutes.",
                "This suggests that term feedback is suitable for interactive ad-hoc retrieval, where a user usually does not want to spend too much time on providing feedback.",
                "We find that a user often makes mistakes when judging term relevance.",
                "Sometimes a relevant term may be left out because its connection to the query topic is not obvious to the user.",
                "Other times a dubious term may be included but turns out to be irrelevant.",
                "Take the topic in Figure 1 for example.",
                "There was a fire disaster in Mont 3 The maximal time is 180 seconds, as the NIST assessor would be forced to submit the form at that moment.",
                "Table 4: Term selection statistics (topic average) CF Type 1 × 48 3 × 16 6 × 8 # checked terms 14.8 13.3 11.2 # rel. terms 15.0 12.6 11.2 # rel. checked terms 7.9 6.9 5.9 precision 0.534 0.519 0.527 recall 0.526 0.548 0.527 Blanc Tunnel between France and Italy in 1999, but the user failed to select such keywords as mont, blanc, french and italian due to his/her ignorance of the event.",
                "Indeed, without proper context it would be hard to make perfect judgment.",
                "What is then, the extent to which the user is good at term feedback?",
                "Does it have serious impact on retrieval performance?",
                "To answer these questions, we need a measure of individual terms true relevance.",
                "We adopt the Simplified KL Divergence metric used in [24] to decide query expansion terms as our term relevance measure: σKLD(w) = p(w|R) log p(w|R) p(w|¬R) where p(w|R) is the probability that a relevant document contains term w, and p(w|¬R) is the probability that an irrelevant document contains w, both of which can be easily computed via maximum likelihood estimate given document-level relevance judgment.",
                "If σKLD(w) > 0, w is more likely to appear in relevant documents than irrelevant ones.",
                "We consider a term relevant if its Simplified KL Divergence value is greater than a certain threshold σ0.",
                "We can then define precision and recall of user term judgment accordingly: precision is the fraction of terms checked by the user that are relevant; recall is the fraction of presented relevant terms that are checked by the user.",
                "Table 4 shows the number of checked terms, relevant terms and relevant checked terms when σ0 is set to 1.0, as well as the precision/recall of user term judgment.",
                "Note that when the clarification forms contain more clusters, fewer terms are checked: 14.8 for 1 × 48, 13.3 for 3 × 16 and 11.2 for 6×8.",
                "Similar pattern holds for relevant terms and relevant checked terms.",
                "There seems to be a trade-off between increasing topic diversity by clustering and losing extra relevant terms: when there are more clusters, each of them gets fewer terms to present, which can hurt a major relevant cluster that contains many relevant terms.",
                "Therefore, it is not always helpful to have more clusters, e.g., TFB6C is actually worse than TFB1C.",
                "The major finding we can make from Table 4 is that the user is not particularly good at identifying relevant terms, which echoes the discovery in [18].",
                "In the case of 3 × 16 clarification forms, the average number of terms checked as relevant by the user is 13.3 per topic, and the average number of relevant terms whose σKLD value exceed 1.0 is 12.6.",
                "The user is able to recognize only 6.9 of these terms on average.",
                "Indeed, the precision and recall of user feedback terms (as defined previously) are far from perfect.",
                "On the other hand, If the user had correctly checked all such relevant terms, the performance of our algorithms would have increased a lot, as shown in Table 5.",
                "We see that TFB gets big improvement when there is an oracle who checks all relevant terms, while CFB meets a bottleneck around MAP of 0.325, since all it does is adjust cluster weights, and when the learned weights are close to being accurate, it cannot benefit more from term feedback.",
                "Also note that TCFB fails to outperform TFB, probably because TFB is sufficiently accurate.",
                "Table 5: Change of MAP when using all (and only) relevant terms (σKLD > 1.0) for feedback. original term feedback relevant term feedback TF1 0.288 0.354 TF3 0.288 0.354 TF6 0.278 0.346 CF3 0.305 0.325 CF6 0.301 0.326 TCF3 0.309 0.345 TCF6 0.304 0.341 6.4 Comparison with Relevance Feedback Now we compare term feedback with document-level relevance feedback, in which the user is presented with the top N documents from an initial retrieval and asked to judge their relevance.",
                "The feedback process is simulated using document relevance judgment from NIST.",
                "We use the mixture model based feedback method proposed in [25], with mixture noise set to 0.95 and feedback coefficient set to 0.9.",
                "Comparative evaluation of relevance feedback against other methods is complicated by the fact that some documents have already been viewed during feedback, so it makes no sense to include them in the retrieval results of the second run.",
                "However, this does not hold for term feedback.",
                "Thus, to make it fair w.r.t. users information gain, if the feedback documents are relevant, they should be kept in the top of the ranking; if they are irrelevant, they should be left out.",
                "Therefore, we use relevance feedback to produce a ranking of top 1000 retrieved documents but with every feedback document excluded, and then prepend the relevant feedback documents at the front.",
                "Table 6 shows the performance of relevance feedback for different values of N and compares it with TCFB3C.",
                "Table 6: Performance of relevance feedback for different number of feedback documents (N).",
                "N MAP Pr@30 RR 5 0.302 0.586 4779 10 0.345 0.670 4916 20 0.389 0.772 5004 TCFB3C 0.309 0.491 4947 We see that the performance of TCFB3C is comparable to that of relevance feedback using 5 documents.",
                "Although it is poorer than when there are 10 feedback documents in terms of MAP and Pr@30, it does retrieve more documents (4947) when going down the ranked list.",
                "We try to compare the quality of automatically inserted terms in relevance feedback with that of manually selected terms in term feedback.",
                "This is done by truncating the relevance feedback modified query model to a size equal to the number of checked terms for the same topic.",
                "We can then compare the terms in the truncated model with the checked terms.",
                "Figure 3 shows the distribution of the terms σKLD scores.",
                "We find that term feedback tends to produce expansion terms of higher quality(those with σKLD > 1) compared to relevance feedback (with 10 feedback documents).",
                "This does not contradict the fact that the latter yields higher retrieval performance.",
                "Actually, when we use the truncated query model instead of the intact one refined from relevance feedback, the MAP is only 0.304.",
                "The truth Figure 3: Comparison of expansion term quality between relevance feedback (with 10 feedback documents) and term feedback (with 3 × 16 CFs) −1−0 0−1 1−2 2−3 3−4 4−5 5−6 0 50 100 150 200 250 300 350 σKLD #terms relevance feedback term feedback is, although there are many unwanted terms in the expanded query model from feedback documents, there are also more relevant terms than what the user can possibly select from the list of presentation terms generated with pseudo-feedback documents, and the positive effects often outweights the negative ones.",
                "We are interested to know under what circumstances term feedback has advantage over relevance feedback.",
                "One such situation is when none of the top N feedback documents is relevant, rendering relevance feedback useless.",
                "This is not infrequent, as one might have thought: out of the 50 topics, there are 13 such cases when N = 5, 10 when N = 10, and still 3 when N = 20.",
                "When this happens, one can only back off to the original retrieval method; the power of relevance feedback is lost.",
                "Surprisingly, in 11 out of 13 such cases where relevance feedback seems impossible, the user is able to check at least 2 relevant terms from the 3 × 16 clarification form (we consider term t to be relevant if σKLD(t) > 1.0).",
                "Furthermore, in 10 out of them TCFB3C outperforms the pseudo-feedback baseline, increasing MAP from 0.076 to 0.146 on average (these are particularly hard topics).",
                "We think that there are two possible explanations for this phenomenon of term feedback being active even when relevance feedback does not work: First, even if none of the top N (suppose it is a small number) documents are relevant, we may still find relevant documents in top 60, which is more inclusive but usually unreachable when people are doing relevance feedback in interactive ad-hoc search, from which we can draw feedback terms.",
                "This is true for topic 367 piracy, where the top 10 feedback documents are all about software piracy, yet there are documents between 10-60 that are about piracy on the seas (which is about the real information need), contributing terms such as pirate, ship for selection in the clarification form.",
                "Second, for some topics, a document needs to meet some special condition in order to be relevant.",
                "The top N documents may be related to the topic, but nonetheless irrelevant.",
                "In this case, we may still extract useful terms from these documents, even if they do not qualify as relevant ones.",
                "For example, in topic 639 consumer online shopping, a document needs to mention what contributes to shopping growth to really match the specified information need, hence none of the top 10 feedback documents are regarded as relevant.",
                "But nevertheless, the feedback terms such as retail, commerce are good for query expansion. 7.",
                "CONCLUSIONS In this paper we studied the use of term feedback for interactive information retrieval in the <br>language modeling</br> approach.",
                "We proposed a cluster-based method for selecting presentation terms as well as algorithms to estimate refined query models from user term feedback.",
                "We saw significant improvement in retrieval accuracy brought by term feedback, in spite of the fact that a user often makes mistakes in relevance judgment that hurts its performance.",
                "We found the best-performing algorithm to be TCFB, which benefits from the combination of directly observed term evidence with TFB and indirectly learned cluster relevance with CFB.",
                "When we reduced the number of presentation terms, term feedback is still able to keep much of its performance gain over the baseline.",
                "Finally, we compared term feedback to document-level relevance feedback, and found that TCFB3Cs performance is on a par with the latter with 5 feedback documents.",
                "We regarded term feedback as a viable alternative to traditional relevance feedback, especially when there are no relevant documents in the top.",
                "We propose to extend our work in several ways.",
                "First, we want to study whether the use of various contexts can help the user to better identify term relevance, while not sacrificing the simplicity and compactness of term feedback.",
                "Second, currently all terms are presented to the user in a single batch.",
                "We could instead consider iterative term feedback, by presenting a small number of terms first, and show more terms after receiving user feedback or stop when the refined query is good enough.",
                "The presented terms should be selected dynamically to maximize learning benefits at any moment.",
                "Third, we have plans to incorporate term feedback into our UCAIR toolbar[20], an Internet Explorer plugin, to make it work for web search.",
                "We are also interested in studying how to combine term feedback with relevance feedback or implicit feedback.",
                "We could, for example, allow the user to dynamically modify terms in a language model learned from feedback documents. 8.",
                "ACKNOWLEDGMENT This work is supported in part by the National Science Foundation grants IIS-0347933 and IIS-0428472. 9.",
                "REFERENCES [1] J. Allan.",
                "Relevance feedback with too much data.",
                "In Proceedings of the 18th annual international ACM SIGIR conference on research and development in information retrieval, pages 337-343, 1995. [2] J. Allan.",
                "HARD track overview in TREC 2005 - High Accuracy Retrieval from Documents.",
                "In The Fourteenth Text REtrieval Conference, 2005. [3] P. Anick.",
                "Using terminological feedback for web search refinement: a log-based study.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 88-95, 2003. [4] P. G. Anick and S. Tipirneni.",
                "The paraphrase search assistant: terminological feedback for iterative information seeking.",
                "In Proceedings of the 22nd annual international ACM SIGIR conference on research and development in information retrieval, pages 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan, and A. Singhal.",
                "Automatic query expansion using SMART.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [6] D. Harman.",
                "Towards interactive query expansion.",
                "In Proceedings of the 11th annual international ACM SIGIR conference on research and development in information retrieval, pages 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wade, and J. Allan.",
                "UMass at TREC 2003: HARD and QA.",
                "In TREC, pages 715-725, 2003. [8] H. Joho, C. Coverson, M. Sanderson, and M. Beaulieu.",
                "Hierarchical presentation of expansion terms.",
                "In Proceedings of the 2002 ACM symposium on applied computing, pages 645-649, 2002. [9] K. S. Jones, S. Walker, and S. E. Robertson.",
                "A probabilistic model of information retrieval: development and status.",
                "Technical Report 446, Computer Laboratory, University of Cambridge, 1998. [10] D. Kelly, V. D. Dollu, and X. Fu.",
                "The loquacious user: a document-independent source of terms for query expansion.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 457-464, 2005. [11] D. Kelly and X. Fu.",
                "Elicitation of term relevance feedback: an investigation of term source and context.",
                "In Proceedings of the 29th annual international ACM SIGIR conference on research and development in information retrieval, 2006. [12] J. Koenemann and N. Belkin.",
                "A case for interaction: A study of interactive information retrieval behavior and effectiveness.",
                "In Proceedings of the SIGCHI conference on human factors in computing systems, pages 205-212, 1996. [13] V. Lavrenko and W. B. Croft.",
                "Relevance-based language models.",
                "In Research and Development in Information Retrieval, pages 120-127, 2001. [14] Y. Nemeth, B. Shapira, and M. Taeib-Maimon.",
                "Evaluation of the real and perceived value of automatic and interactive query expansion.",
                "In Proceedings of the 27th annual international ACM SIGIR conference on research and development in information retrieval, pages 526-527, 2004. [15] J. Ponte.",
                "A <br>language modeling</br> Approach to Information Retrieval.",
                "PhD thesis, University of Massachusetts at Amherst, 1998. [16] S. E. Robertson, S. Walker, S. Jones, M. Beaulieu, and M. Gatford.",
                "Okapi at TREC-3.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [17] J. Rocchio.",
                "Relevance feedback in information retrieval.",
                "In The SMART retrieval system, pages 313-323. 1971. [18] I. Ruthven.",
                "Re-examining the potential effectiveness of interactive query expansion.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 213-220, 2003. [19] G. Salton and C. Buckley.",
                "Improving retrieval performance by relevance feedback.",
                "Journal of the American Society for Information Science, 41:288-297, 1990. [20] X. Shen, B. Tan, and C. Zhai.",
                "Implicit user modeling for personalized search.",
                "In Proceedings of the 14th ACM international conference on information and knowledge management, pages 824-831, 2005. [21] X. Shen and C. Zhai.",
                "Active feedback in ad-hoc information retrieval.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 59-66, 2005. [22] A. Spink.",
                "Term relevance feedback and query expansion: relation to design.",
                "In Proceedings of the 17th annual international ACM SIGIR conference on research and development in information retrieval, pages 81-90, 1994. [23] J. Xu and W. B. Croft.",
                "Query expansion using local and global document analysis.",
                "In Proceedings of the 19th annual international ACM SIGIR conference on research and development in information retrieval, pages 4-11, 1996. [24] H. Zaragoza, N. Craswell, M. Taylor, S. Saria, and S. Robertson.",
                "Microsoft cambridge at TREC-13: Web and HARD tracks.",
                "In Proceedings of the 13th Text REtrieval Conference, 2004. [25] C. Zhai and J. Lafferty.",
                "Model-based feedback in the <br>language modeling</br> approach to information retrieval.",
                "In Proceedings of the tenth international conference on information and knowledge management, pages 403-410, 2001. [26] C. Zhai, A. Velivelli, and B. Yu.",
                "A cross-collection mixture model for comparative text mining.",
                "In Proceedings of the tenth ACM SIGKDD international conference on knowledge discovery and data mining, pages 743-748, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "de informática †, Departamento de Ingeniería Eléctrica e Informática ‡ Universidad de Illinois en Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.Resumen EDU En este documento estudiamos comentarios basados en términos para la recuperación de información en el enfoque de \"modelado de idiomas\".",
                "Introducción En el enfoque de \"modelado de idiomas\" para la recuperación de la información, la retroalimentación a menudo se modela como estimando un modelo de consulta mejorado o modelo de relevancia basado en un conjunto de documentos de retroalimentación [25, 13].",
                "Esta estrategia ha sido discutida en [15], pero que sepamos, no se ha estudiado seriamente en la literatura existente de \"modelado de idiomas\".",
                "Durante nuestra participación en la pista dura TREC 2005 y el estudio continuo después, exploramos cómo explotar los comentarios de términos del usuario para construir modelos de consulta mejorados para la recuperación de información en el enfoque de \"modelado de idiomas\".",
                "Enfoque general seguimos el enfoque de \"modelado de idiomas\" y basamos nuestro método en el modelo de recuperación de divergencia KL propuesto en [25].",
                "Conclusiones En este documento estudiamos el uso de comentarios de términos para la recuperación de información interactiva en el enfoque de \"modelado de idiomas\".",
                "Un enfoque de \"modelado de idiomas\" para la recuperación de información.",
                "Comentarios basados en modelos en el enfoque de \"modelado de idiomas\" para la recuperación de información."
            ],
            "translated_text": "",
            "candidates": [
                "modelado de idiomas",
                "modelado de idiomas",
                "modelado de idiomas",
                "modelado de idiomas",
                "modelado de idiomas",
                "modelado de idiomas",
                "modelado de idiomas",
                "modelado de idiomas",
                "modelado de idiomas",
                "modelado de idiomas",
                "modelado de idiomas",
                "modelado de idiomas",
                "modelado de idiomas",
                "modelado de idiomas",
                "modelado de idiomas",
                "modelado de idiomas"
            ],
            "error": []
        },
        "query expansion process": {
            "translated_key": "proceso de expansión de consultas",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Term Feedback for Information Retrieval with Language Models Bin Tan† , Atulya Velivelli‡ , Hui Fang† , ChengXiang Zhai† Dept.",
                "of Computer Science† , Dept. of Electrical and Computer Engineering‡ University of Illinois at Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.edu ABSTRACT In this paper we study term-based feedback for information retrieval in the language modeling approach.",
                "With term feedback a user directly judges the relevance of individual terms without interaction with feedback documents, taking full control of the <br>query expansion process</br>.",
                "We propose a cluster-based method for selecting terms to present to the user for judgment, as well as effective algorithms for constructing refined query language models from user term feedback.",
                "Our algorithms are shown to bring significant improvement in retrieval accuracy over a non-feedback baseline, and achieve comparable performance to relevance feedback.",
                "They are helpful even when there are no relevant documents in the top.",
                "Categories and Subject Descriptors H.3.3 [Information Search and Retrieval]: Retrieval models General Terms Algorithms 1.",
                "INTRODUCTION In the language modeling approach to information retrieval, feedback is often modeled as estimating an improved query model or relevance model based on a set of feedback documents [25, 13].",
                "This is in line with the traditional way of doing relevance feedback - presenting a user with documents/passages for relevance judgment and then extracting terms from the judged documents or passages to expand the initial query.",
                "It is an indirect way of seeking users assistance for query model construction, in the sense that the refined query model (based on terms) is learned through feedback documents/passages, which are high-level structures of terms.",
                "It has the disadvantage that irrelevant terms, which occur along with relevant ones in the judged content, may be erroneously used for query expansion, causing undesired effects.",
                "For example, for the TREC query Hubble telescope achievements, when a relevant document talks more about the telescopes repair than its discoveries, irrelevant terms such as spacewalk can be added into the modified query.",
                "We can consider a more direct way to involve a user in query model improvement, without an intermediary step of document feedback that can introduce noise.",
                "The idea is to present a (reasonable) number of individual terms to the user and ask him/her to judge the relevance of each term or directly specify their probabilities in the query model.",
                "This strategy has been discussed in [15], but to our knowledge, it has not been seriously studied in existing language modeling literature.",
                "Compared to traditional relevance feedback, this term-based approach to interactive query model refinement has several advantages.",
                "First, the user has better control of the final query model through direct manipulation of terms: he/she can dictate which terms are relevant, irrelevant, and possibly, to what degree.",
                "This avoids the risk of bringing unwanted terms into the query model, although sometimes the user introduces low-quality terms.",
                "Second, because a term takes less time to judge than a documents full text or summary, and as few as around 20 presented terms can bring significant improvement in retrieval performance (as we will show later), term feedback makes it faster to gather user feedback.",
                "This is especially helpful for interactive adhoc search.",
                "Third, sometimes there are no relevant documents in the top N of the initially retrieved results if the topic is hard.",
                "This is often true when N is constrained to be small, which arises from the fact that the user is unwilling to judge too many documents.",
                "In this case, relevance feedback is useless, as no relevant document can be leveraged on, but term feedback is still often helpful, by allowing relevant terms to be picked from irrelevant documents.",
                "During our participation in the TREC 2005 HARD Track and continued study afterward, we explored how to exploit term feedback from the user to construct improved query models for information retrieval in the language modeling approach.",
                "We identified two key subtasks of term-based feedback, i.e., pre-feedback presentation term selection and post-feedback query model construction, with effective algorithms developed for both.",
                "We imposed a secondary cluster structure on terms and found that a cluster view sheds additional insight into the users information need, and provides a good way of utilizing term feedback.",
                "Through experiments we found that term feedback improves significantly over the nonfeedback baseline, even though the user often makes mistakes in relevance judgment.",
                "Among our algorithms, the one with best retrieval performance is TCFB, the combination of TFB, the direct term feedback algorithm, and CFB, the cluster-based feedback algorithm.",
                "We also varied the number of feedback terms and observed reasonable improvement even at low numbers.",
                "Finally, by comparing term feedback with document-level feedback, we found it to be a viable alternative to the latter with competitive retrieval performance.",
                "The rest of the paper is organized as follows.",
                "Section 2 discusses some related work.",
                "Section 4 outlines our general approach to term feedback.",
                "We present our method for presentation term selection in Section 3 and algorithms for query model construction in Section 5.",
                "The experiment results are given in Section 6.",
                "Section 7 concludes this paper. 2.",
                "RELATED WORK Relevance feedback[17, 19] has long been recognized as an effective method for improving retrieval performance.",
                "Normally, the top N documents retrieved using the original query are presented to the user for judgment, after which terms are extracted from the judged relevant documents, weighted by their potential of attracting more relevant documents, and added into the query model.",
                "The expanded query usually represents the users information need better than the original one, which is often just a short keyword query.",
                "A second iteration of retrieval using this modified query usually produces significant increase in retrieval accuracy.",
                "In cases where true relevance judgment is unavailable and all top N documents are assumed to be relevant, it is called blind or pseudo feedback[5, 16] and usually still brings performance improvement.",
                "Because document is a large text unit, when it is used for relevance feedback many irrelevant terms can be introduced into the feedback process.",
                "To overcome this, passage feedback is proposed and shown to improve feedback performance[1, 23].",
                "A more direct solution is to ask the user for their relevance judgment of feedback terms.",
                "For example, in some relevance feedback systems such as [12], there is an interaction step that allows the user to add or remove expansion terms after they are automatically extracted from relevant documents.",
                "This is categorized as interactive query expansion, where the original query is augmented with user-provided terms, which can come from direct user input (free-form text or keywords)[22, 7, 10] or user selection of system-suggested terms (using thesauri[6, 22] or extracted from feedback documents[6, 22, 12, 4, 7]).",
                "In many cases term relevance feedback has been found to effectively improve retrieval performance[6, 22, 12, 4, 10].",
                "For example, the study in [12] shows that the user prefers to have explicit knowledge and direct control of which terms are used for query expansion, and the penetrable interface that provides this freedom is shown to perform better than other interfaces.",
                "However, in some other cases there is no significant benefit[3, 14], even if the user likes interacting with expansion terms.",
                "In a simulated study carried out in [18], the author compares the retrieval performance of interactive query expansion and automatic query expansion with a simulated study, and suggests that the potential benefits of the former can be hard to achieve.",
                "The user is found to be not good at identifying useful terms for query expansion, when a simple term presentation interface is unable to provide sufficient semantic context of the feedback terms.",
                "Our work differs from the previous ones in two important aspects.",
                "First, when we choose terms to present to the user for relevance judgment, we not only consider single-term value (e.g., the relative frequency of a term in the top documents, which can be measured by metrics such as Robertson Selection Value and Simplified Kullback-Leibler Distance as listed in [24]), but also examine the cluster structure of the terms, so as to produce a balanced coverage of the different topic aspects.",
                "Second, with the language modelling framework, we allow an elaborate construction of the updated query model, by setting different probabilities for different terms based on whether it is a query term, its significance in the top documents, and its cluster membership.",
                "Although techniques for adjusting query term weights exist for vector space models[17] and probablistic relevance models[9], most of the aforementioned works do not use them, choosing to just append feedback terms to the original query (thus using equal weights for them), which can lead to poorer retrieval performance.",
                "The combination of the two aspects allows our method to perform much better than the baseline.",
                "The usual way for feedback term presentation is just to display the terms in a list.",
                "There have been some works on alternative user interfaces. [8] arranges terms in a hierarchy, and [11] compares three different interfaces, including terms + checkboxes, terms + context (sentences) + checkboxes, sentences + input text box.",
                "In both studies, however, there is no significant performance difference.",
                "In our work we adopt the simplest approach of terms + checkboxes.",
                "We focus on term presentation and query model construction from feedback terms, and believe using contexts to improve feedback term quality should be orthogonal to our method. 3.",
                "GENERAL APPROACH We follow the language modeling approach, and base our method on the KL-divergence retrieval model proposed in [25].",
                "With this model, the retrieval task involves estimating a query language model θq from a given query, a document language model θd from each document, and calculating their KL-divergence D(θq||θd), which is then used to score the documents. [25] treats relevance feedback as a query model re-estimation problem, i.e., computing an updated query model θq given the original query text and the extra evidence carried by the judged relevant documents.",
                "We adopt this view, and cast our task as updating the query model from user term feedback.",
                "There are two key subtasks here: First, how to choose the best terms to present to the user for judgment, in order to gather maximal evidence about the users information need.",
                "Second, how to compute an updated query model based on this term feedback evidence, so that it captures the users information need and translates into good retrieval performance. 4.",
                "PRESENTATION TERM SELECTION Proper selection of terms to be presented to the user for judgment is crucial to the success of term feedback.",
                "If the terms are poorly chosen and there are few relevant ones, the user will have a hard time looking for useful terms to help clarify his/her information need.",
                "If the relevant terms are plentiful, but all concentrate on a single aspect of the query topic, then we will only be able to get feedback on that aspect and missing others, resulting in a breadth loss in retrieved results.",
                "Therefore, it is important to carefully select presentation terms to maximize expected gain from user feedback, i.e., those that can potentially reveal most evidence of the users information need.",
                "This is similar to active feedback[21], which suggests that a retrieval system should actively probe the users information need, and in the case of relevance feedback, the feedback documents should be chosen to maximize learning benefits (e.g. diversely so as to increase coverage).",
                "In our approach, the top N documents from an initial retrieval using the original query form the source of feedback terms: all terms that appear in them are considered candidates to present to the user.",
                "These documents serve as pseudo-feedback, since they provide a much richer context than the original query (usually very short), while the user is not asked to judge their relevance.",
                "Due to the latter reason, it is possible to make N quite large (e.g., in our experiments we set N = 60) to increase its coverage of different aspects in the topic.",
                "The simplest way of selecting feedback terms is to choose the most frequent M terms from the N documents.",
                "This method, however, has two drawbacks.",
                "First, a lot of common noisy terms will be selected due to their high frequencies in the document collection, unless a stop-word list is used for filtering.",
                "Second, the presentation list will tend to be filled by terms from major aspects of the topic; those from a minor aspect are likely to be missed due to their relatively low frequencies.",
                "We solve the above problems by two corresponding measures.",
                "First, we introduce a background model θB that is estimated from collection statistics and explains the common terms, so that they are much less likely to appear in the presentation list.",
                "Second, the terms are selected from multiple clusters in the pseudo-feedback documents, to ensure sufficient representation of different aspects of the topic.",
                "We rely on the mixture multinomial model, which is used for theme discovery in [26].",
                "Specifically, we assume the N documents contain K clusters {Ci| i = 1, 2, · · · K}, each characterized by a multinomial word distribution (also known as unigram language model) θi and corresponding to an aspect of the topic.",
                "The documents are regarded as sampled from a mixture of K + 1 components, including the K clusters and the background model: p(w|d) = λBp(w|θB) + (1 − λB) K i=1 πd,ip(w|θi) where w is a word, λB is the mixture weight for the background model θB, and πd,i is the document-specific mixture weight for the i-th cluster model θi.",
                "We then estimate the cluster models by maximizing the probability of the pseudo-feedback documents being generated from the multinomial mixture model: log p(D|Λ) = d∈D w∈V c(w; d) log p(w|d) where D = {di| i = 1, 2, · · · N} is the set of the N documents, V is the vocabulary, c(w; d) is ws frequency in d and Λ = {θi| i = 1, 2, · · · K} ∪ {πdij | i = 1, 2, · · · N, j = 1, 2, · · · K} is the set of model parameters to estimate.",
                "The cluster models can be efficiently estimated using the Expectation-Maximization (EM) algorithm.",
                "For its details, we refer the reader to [26].",
                "Table 1 shows the cluster models for TREC query Transportation tunnel disasters (K = 3).",
                "Note that only the middle cluster is relevant.",
                "Table 1: Cluster models for topic 363 Transportation tunnel disasters Cluster 1 Cluster 2 Cluster 3 tunnel 0.0768 tunnel 0.0935 tunnel 0.0454 transport 0.0364 fire 0.0295 transport 0.0406 traffic 0.0206 truck 0.0236 toll 0.0166 railwai 0.0186 french 0.0220 amtrak 0.0153 harbor 0.0146 smoke 0.0157 train 0.0129 rail 0.0140 car 0.0154 airport 0.0122 bridg 0.0139 italian 0.0152 turnpik 0.0105 kilomet 0.0136 firefight 0.0144 lui 0.0095 truck 0.0133 blaze 0.0127 jersei 0.0093 construct 0.0131 blanc 0.0121 pass 0.0087 · · · · · · · · · From each of the K estimated clusters, we choose the L = M/K terms with highest probabilities to form a total of M presentation terms.",
                "If a term happens to be in top L in multiple clusters, we assign it to the cluster where it has highest probability and let the other clusters take one more term as compensation.",
                "We also filter out terms in the original query text because they tend to always be relevant when the query is short.",
                "The selected terms are then presented to the user for judgment.",
                "A sample (completed) feedback form is shown in Figure 1.",
                "In this study we only deal with binary judgment: a presented term is by default unchecked, and a user may check it to indicate relevance.",
                "We also do not explicitly exploit negative feedback (i.e., penalizing irrelevant terms), because with binary feedback an unchecked term is not necessarily irrelevant (maybe the user is unsure about its relevance).",
                "We could ask the user for finer judgment (e.g., choosing from highly relevant, somewhat relevant, do not know, somewhat irrelevant and highly irrelevant), but binary feedback is more compact, taking less space to display and less user effort to make judgment. 5.",
                "ESTIMATING QUERY MODELS FROM TERM FEEDBACK In this section, we present several algorithms for exploiting term feedback.",
                "The algorithms take as input the original query q, the clusters {θi} as generated by the theme discovery algorithm, the set of feedback terms T and their relevance judgment R, and outputs an updated query language model θq that makes best use of the feedback evidence to capture the users information need.",
                "First we describe our notations: • θq: The original query model, derived from query terms only: p(w|θq) = c(w; q) |q| where c(w; q) is the count of w in q, and |q| = w∈q c(w; q) is the query length. • θq : The updated query model which we need to estimate from term feedback. • θi (i = 1, 2, . . .",
                "K): The unigram language model of cluster Ci, as estimated using the theme discovery algorithm. • T = {ti,j} (i = 1 . . .",
                "K, j = 1 . . .",
                "L): The set of terms presented to the user for judgment. ti,j is the j-th term chosen from cluster Ci. • R = {δw|w ∈ T}: δw is an indicator variable that is 1 if w is judged relevant or 0 otherwise. 5.1 TFB (Direct Term Feedback) This is a straight-forward form of term feedback that does not involve any secondary structure.",
                "We give a weight of 1 to terms judged relevant by the user, a weight of μ to query terms, zero weight to other terms, and then apply normalization: p(w|θq ) = δw + μ c(w; q) w ∈T δw + μ|q| where w ∈T δw is the total number of terms that are judged relevant.",
                "We call this method TFB (direct Term FeedBack).",
                "If we let μ = 1, this approach is equivalent to appending the relevant terms after the original query, which is what standard query expansion (without term reweighting) does.",
                "If we set μ > 1, we are putting more emphasis on the query terms than the checked ones.",
                "Note that the result model will be more biased toward θq if the original query is long or the user feedback is weak, which makes sense, as we can trust more on the original query in either case.",
                "Figure 1: Filled clarification form for Topic 363 363 transportation tunnel disasters Please select all terms that are relevant to the topic. traffic railway harbor rail bridge kilometer construct swiss cross link kong hong river project meter shanghai fire truck french smoke car italian firefights blaze blanc mont victim franc rescue driver chamonix emerge toll amtrak train airport turnpike lui jersey pass rome z center electron road boston speed bu submit 5.2 CFB (Cluster Feedback) Here we exploit the cluster structure that played an important role when we selected the presentation terms.",
                "The clusters represent different aspects of the query topic, each of which may or may not be relevant.",
                "If we are able to identify the relevant clusters, we can combine them to generate a query model that is good at discovering documents belonging to these clusters (instead of the irrelevant ones).",
                "We could ask the user to directly judge the relevance of a cluster after viewing representative terms in that cluster, but this would sometimes be a difficult task for the user, who has to guess the semantics of a cluster via its set of terms, which may not be well connected to one another due to a lack of context.",
                "Therefore, we propose to learn cluster feedback indirectly, inferring the relevance of a cluster through the relevance of its feedback terms.",
                "Because each cluster has an equal number of terms presented to the user, the simplest measure of a clusters relevance is the number of terms that are judged relevant in it.",
                "Intuitively, the more terms are marked relevant in a cluster, the closer the cluster is to the query topic, and the more the cluster should participate in query modification.",
                "If we combine the cluster models using weights determined this way and then interpolate with the original query model, we get the following formula for query updating, which we call CFB (Cluster FeedBack): p(w|θq ) = λp(w|θq) + (1 − λ) K i=1 L j=1 δti,j K k=1 L j=1 δtk,j p(w|θi) where L j=1 δti,j is the number of relevant terms in cluster Ci, and K k=1 L j=1 δtk,j is the total number of relevant terms.",
                "We note that when there is only one cluster (K = 1), the above formula degenerates to p(w|θq ) = λp(w|θq) + (1 − λ)p(w|θ1) which is merely pseudo-feedback of the form proposed in [25]. 5.3 TCFB (Term-cluster Feedback) TFB and CFB both have their drawbacks.",
                "TFB assigns non-zero probabilities to the presented terms that are marked relevant, but completely ignores (a lot more) others, which may be left unchecked due to the users ignorance, or simply not included in the presentation list, but we should be able to infer their relevance from the checked ones.",
                "For example, in Figure 1, since as many as 5 terms in the middle cluster (the third and fourth columns) are checked, we should have high confidence in the relevance of other terms in that cluster.",
                "CFB remedies TFBs problem by treating the terms in a cluster collectively, so that unchecked/unpresented terms receive weights when presented terms in their clusters are judged as relevant, but it does not distinguish which terms in a cluster are presented or judged.",
                "Intuitively, the judged relevant terms should receive larger weights because they are explicitly indicated as relevant by the user.",
                "Therefore, we try to combine the two methods, hoping to get the best out of both.",
                "We do this by interpolating the TFB model with the CFB model, and call it TCFB: p(w|θq ) = αp(w|θqT F B ) + (1 − α)p(w|θqCF B ) 6.",
                "EXPERIMENTS In this section, we describe our experiment results.",
                "We first describe our experiment setup and present an overview of various methods performance.",
                "Then we discuss the effects of varying the parameter setting in the algorithms, as well as the number of presentation terms.",
                "Next we analyze user term feedback behavior and its relation to retrieval performance.",
                "Finally we compare term feedback to relevance feedback and show that it has its particular advantage. 6.1 Experiment Setup and Basic Results We took the opportunity of TREC 2005 HARD Track[2] for the evaluation of our algorithms.",
                "The tracks used the AQUAINT collection, a 3GB corpus of English newswire text.",
                "The topics included 50 ones previously known to be hard, i.e. with low retrieval performance.",
                "It is for these hard topics that user feedback is most helpful, as it can provide information to disambiguate the queries; with easy topics the user may be unwilling to spend efforts for feedback if the automatic retrieval results are good enough.",
                "Participants of the track were able to submit custom-designed clarification forms (CF) to solicit feedback from human assessors provided by Table 2: Retrieval performance for different methods and CF types.",
                "The last row is the percentage of MAP improvement over the baseline.",
                "The parameter settings μ = 4, λ = 0.1, α = 0.3 are near optimal.",
                "Baseline TFB1C TFB3C TFB6C CFB1C CFB3C CFB6C TCFB1C TCFB3C TCFB6C MAP 0.219 0.288 0.288 0.278 0.254 0.305 0.301 0.274 0.309 0.304 Pr@30 0.393 0.467 0.475 0.457 0.399 0.480 0.473 0.431 0.491 0.473 RR 4339 4753 4762 4740 4600 4907 4872 4767 4947 4906 % 0% 31.5% 31.5% 26.9% 16.0% 39.3% 37.4% 25.1% 41.1% 38.8% Table 3: MAP variation with the number of presented terms. # terms TFB1C TFB3C TFB6C CFB3C CFB6C TCFB3C TCFB6C 6 0.245 0.240 0.227 0.279 0.279 0.281 0.274 12 0.261 0.261 0.242 0.299 0.286 0.297 0.281 18 0.275 0.274 0.256 0.301 0.282 0.300 0.286 24 0.276 0.281 0.265 0.303 0.292 0.305 0.292 30 0.280 0.285 0.270 0.304 0.296 0.307 0.296 36 0.282 0.288 0.272 0.307 0.297 0.309 0.297 42 0.283 0.288 0.275 0.306 0.298 0.309 0.300 48 0.288 0.288 0.278 0.305 0.301 0.309 0.303 NIST.",
                "We designed three sets of clarification forms for term feedback, differing in the choice of K, the number of clusters, and L, the number of presented terms from each cluster.",
                "They are: 1× 48, a big cluster with 48 terms, 3 × 16, 3 clusters with 16 terms each, and 6 × 8, 6 clusters with 8 terms each.",
                "The total number of presented terms (M) is fixed at 48, so by comparing the performance of different types of clarification forms we can know the effects of different degree of clustering.",
                "For each topic, an assessor would complete the forms ordered by 6 × 8, 1 × 48 and 3 × 16, spending up to three minutes on each form.",
                "The sample clarification form shown in Figure 1 is of type 3 × 16.",
                "It is a simple and compact interface in which the user can check relevant terms.",
                "The form is self-explanatory; there is no need for extra user training on how to use it.",
                "Our initinal queries are constructed only using the topic title descriptions, which are on average 2.7 words in length.",
                "As our baseline we use the KL divergence retrieval method implemented in the Lemur Toolkit1 with 5 pseudo-feedback documents.",
                "We stem the terms, choose Dirichlet smoothing with a prior of 2000, and truncate query language models to 50 terms (these settings are used throughout the experiments).",
                "For all other parameters we use Lemurs default settings.",
                "The baseline turns out to perform above average among the track participants.",
                "After an initial run using this baseline retrieval method, we take the top 60 documents for each topic and apply the theme discovery algorithm to output the clusters (1, 3, or 6 of them), based on which we generate clarification forms.",
                "After user feedback is received, we run the term feedback algorithms (TFB, CFB or TCFB) to estimate updated query models, which are then used for a second iteration of retrieval.",
                "We evaluate the different retrieval methods performance on their rankings of the top 1000 documents.",
                "The evaluation metrics we adopt include mean average (non-interpolated) precision (MAP), precision at top 30 (Pr@30) and total relevant retrieved (RR).",
                "Table 2 shows the performance of various methods and configurations of K × L. The suffixes (1C, 3C, 6C) after TFB,CFB,TCFB stand for the number of clusters (K).",
                "For example, TCFB3C means the TCFB method on the 3 × 16 clarification forms.",
                "From Table 2 we can make the following observations: 1 http://www.lemurproject.com 1.",
                "All methods perform considerably better than the pseudofeedback baseline, with TCFB3C achieving a highest 41.1% improvement in MAP, indicating significant contribution of term feedback for clarification of the users information need.",
                "In other words, term feedback is truly helpful for improving retrieval accuracy. 2.",
                "For TFB, the performance is almost equal on the 1 × 48 and 3 × 16 clarification forms in terms of MAP (although the latter is slightly better in Pr@30 and RR), and a little worse on the 6 × 8 ones. 3.",
                "Both CFB3C and CFB6C perform better than their TFB counterparts in all three metrics, suggesting that feedback on a secondary cluster structure is indeed beneficial.",
                "CFB1C is actually worse because it cannot adjust the weight of its (single) cluster from term feedback and it is merely pseudofeedback. 4.",
                "Although TCFB is just a simple mixture of TFB and CFB by interpolation, it is able to outperform both.",
                "This supports our speculation that TCFB overcomes the drawbacks of TFB (paying attention only to checked terms) and CFB (not distinguishing checked and unchecked terms in a cluster).",
                "Except for TCFB6C v.s.",
                "CFB6C, the performance advantage of TCFB over TFB/CFB is significant at p < 0.05 using the Wilcoxon signed rank test.",
                "This is not true in the case of TFB v.s.",
                "CFB, each of which is better than the other in nearly half of the topics. 6.2 Reduction of Presentation Terms In some situations we may have to reduce the number of presentation terms due to limits in display space or user feedback efforts.",
                "It is interesting to know whether our algorithms performance deteriorates when the user is presented with fewer terms.",
                "Because the presentation terms within each cluster are generated in decreasing order of their frequencies, the presentation list forms a subset of the original one if its size is reduced2 .",
                "Therefore, we can easily simulate what happens when the number of presentation terms decreases 2 There are complexities arising from terms appearing in top L of multiple clusters, but these are exceptions from M to M : we will keep all judgments of the top L = M /K terms in each cluster and discard those of others.",
                "Table 3 shows the performance of various algorithms as the number of presentation terms ranges from 6 to 48.",
                "We find that the performance of TFB is more susceptible to presentation term reduction than that of CFB or TCFB.",
                "For example, at 12 terms the MAP of TFB3C is 90.6% of that at 48 terms, while the numbers for CFB3C and TCFB3C are 98.0% and 96.1% respectively.",
                "We conjecture the reason to be that while TFBs performance heavily depends on how many good terms are chosen for query expansion, CFB only needs a rough estimate of cluster weights to work.",
                "Also, the 3 × 16 clarification forms seem to be more robust than the 6 × 8 ones: at 12 terms the MAP of TFB6C is 87.1% of that at 48 terms, lower than 90.6% for TFB3C.",
                "Similarly, for CFB it is 95.0% against 98.0%.",
                "This is natual, as for a large cluster number of 6, it is easier to get into the situation where each cluster gets too few presentation terms to make topic diversification useful.",
                "Overall, we are surprised to see that the algorithms are still able to perform reasonably well when the number of presentation terms is small.",
                "For example, at only 12 terms CFB3C (the clarification form is of size 3 × 4) can still improve 36.5% over the baseline, dropping slightly from 39.3% at 48 terms. 6.3 User Feedback Analysis In this part we study several aspects of users term feedback behavior, and whether they are connected to retrieval performance.",
                "Figure 2: Clarification form completion time distributions 0−30 30−60 60−90 90−120 120−150 150−180 0 5 10 15 20 25 30 35 completion time (seconds) #topics 1×48 3×16 6×8 Figure 2 shows the distribution of time needed to complete a clarification form3 .",
                "We see that the user is usually able to finish term feedback within a reasonably short amount of time: for more than half of the topics the clarification form is completed in just 1 minute, and only a small fraction of topics (less than 10% for 1 × 48 and 3 × 16) take more than 2 minutes.",
                "This suggests that term feedback is suitable for interactive ad-hoc retrieval, where a user usually does not want to spend too much time on providing feedback.",
                "We find that a user often makes mistakes when judging term relevance.",
                "Sometimes a relevant term may be left out because its connection to the query topic is not obvious to the user.",
                "Other times a dubious term may be included but turns out to be irrelevant.",
                "Take the topic in Figure 1 for example.",
                "There was a fire disaster in Mont 3 The maximal time is 180 seconds, as the NIST assessor would be forced to submit the form at that moment.",
                "Table 4: Term selection statistics (topic average) CF Type 1 × 48 3 × 16 6 × 8 # checked terms 14.8 13.3 11.2 # rel. terms 15.0 12.6 11.2 # rel. checked terms 7.9 6.9 5.9 precision 0.534 0.519 0.527 recall 0.526 0.548 0.527 Blanc Tunnel between France and Italy in 1999, but the user failed to select such keywords as mont, blanc, french and italian due to his/her ignorance of the event.",
                "Indeed, without proper context it would be hard to make perfect judgment.",
                "What is then, the extent to which the user is good at term feedback?",
                "Does it have serious impact on retrieval performance?",
                "To answer these questions, we need a measure of individual terms true relevance.",
                "We adopt the Simplified KL Divergence metric used in [24] to decide query expansion terms as our term relevance measure: σKLD(w) = p(w|R) log p(w|R) p(w|¬R) where p(w|R) is the probability that a relevant document contains term w, and p(w|¬R) is the probability that an irrelevant document contains w, both of which can be easily computed via maximum likelihood estimate given document-level relevance judgment.",
                "If σKLD(w) > 0, w is more likely to appear in relevant documents than irrelevant ones.",
                "We consider a term relevant if its Simplified KL Divergence value is greater than a certain threshold σ0.",
                "We can then define precision and recall of user term judgment accordingly: precision is the fraction of terms checked by the user that are relevant; recall is the fraction of presented relevant terms that are checked by the user.",
                "Table 4 shows the number of checked terms, relevant terms and relevant checked terms when σ0 is set to 1.0, as well as the precision/recall of user term judgment.",
                "Note that when the clarification forms contain more clusters, fewer terms are checked: 14.8 for 1 × 48, 13.3 for 3 × 16 and 11.2 for 6×8.",
                "Similar pattern holds for relevant terms and relevant checked terms.",
                "There seems to be a trade-off between increasing topic diversity by clustering and losing extra relevant terms: when there are more clusters, each of them gets fewer terms to present, which can hurt a major relevant cluster that contains many relevant terms.",
                "Therefore, it is not always helpful to have more clusters, e.g., TFB6C is actually worse than TFB1C.",
                "The major finding we can make from Table 4 is that the user is not particularly good at identifying relevant terms, which echoes the discovery in [18].",
                "In the case of 3 × 16 clarification forms, the average number of terms checked as relevant by the user is 13.3 per topic, and the average number of relevant terms whose σKLD value exceed 1.0 is 12.6.",
                "The user is able to recognize only 6.9 of these terms on average.",
                "Indeed, the precision and recall of user feedback terms (as defined previously) are far from perfect.",
                "On the other hand, If the user had correctly checked all such relevant terms, the performance of our algorithms would have increased a lot, as shown in Table 5.",
                "We see that TFB gets big improvement when there is an oracle who checks all relevant terms, while CFB meets a bottleneck around MAP of 0.325, since all it does is adjust cluster weights, and when the learned weights are close to being accurate, it cannot benefit more from term feedback.",
                "Also note that TCFB fails to outperform TFB, probably because TFB is sufficiently accurate.",
                "Table 5: Change of MAP when using all (and only) relevant terms (σKLD > 1.0) for feedback. original term feedback relevant term feedback TF1 0.288 0.354 TF3 0.288 0.354 TF6 0.278 0.346 CF3 0.305 0.325 CF6 0.301 0.326 TCF3 0.309 0.345 TCF6 0.304 0.341 6.4 Comparison with Relevance Feedback Now we compare term feedback with document-level relevance feedback, in which the user is presented with the top N documents from an initial retrieval and asked to judge their relevance.",
                "The feedback process is simulated using document relevance judgment from NIST.",
                "We use the mixture model based feedback method proposed in [25], with mixture noise set to 0.95 and feedback coefficient set to 0.9.",
                "Comparative evaluation of relevance feedback against other methods is complicated by the fact that some documents have already been viewed during feedback, so it makes no sense to include them in the retrieval results of the second run.",
                "However, this does not hold for term feedback.",
                "Thus, to make it fair w.r.t. users information gain, if the feedback documents are relevant, they should be kept in the top of the ranking; if they are irrelevant, they should be left out.",
                "Therefore, we use relevance feedback to produce a ranking of top 1000 retrieved documents but with every feedback document excluded, and then prepend the relevant feedback documents at the front.",
                "Table 6 shows the performance of relevance feedback for different values of N and compares it with TCFB3C.",
                "Table 6: Performance of relevance feedback for different number of feedback documents (N).",
                "N MAP Pr@30 RR 5 0.302 0.586 4779 10 0.345 0.670 4916 20 0.389 0.772 5004 TCFB3C 0.309 0.491 4947 We see that the performance of TCFB3C is comparable to that of relevance feedback using 5 documents.",
                "Although it is poorer than when there are 10 feedback documents in terms of MAP and Pr@30, it does retrieve more documents (4947) when going down the ranked list.",
                "We try to compare the quality of automatically inserted terms in relevance feedback with that of manually selected terms in term feedback.",
                "This is done by truncating the relevance feedback modified query model to a size equal to the number of checked terms for the same topic.",
                "We can then compare the terms in the truncated model with the checked terms.",
                "Figure 3 shows the distribution of the terms σKLD scores.",
                "We find that term feedback tends to produce expansion terms of higher quality(those with σKLD > 1) compared to relevance feedback (with 10 feedback documents).",
                "This does not contradict the fact that the latter yields higher retrieval performance.",
                "Actually, when we use the truncated query model instead of the intact one refined from relevance feedback, the MAP is only 0.304.",
                "The truth Figure 3: Comparison of expansion term quality between relevance feedback (with 10 feedback documents) and term feedback (with 3 × 16 CFs) −1−0 0−1 1−2 2−3 3−4 4−5 5−6 0 50 100 150 200 250 300 350 σKLD #terms relevance feedback term feedback is, although there are many unwanted terms in the expanded query model from feedback documents, there are also more relevant terms than what the user can possibly select from the list of presentation terms generated with pseudo-feedback documents, and the positive effects often outweights the negative ones.",
                "We are interested to know under what circumstances term feedback has advantage over relevance feedback.",
                "One such situation is when none of the top N feedback documents is relevant, rendering relevance feedback useless.",
                "This is not infrequent, as one might have thought: out of the 50 topics, there are 13 such cases when N = 5, 10 when N = 10, and still 3 when N = 20.",
                "When this happens, one can only back off to the original retrieval method; the power of relevance feedback is lost.",
                "Surprisingly, in 11 out of 13 such cases where relevance feedback seems impossible, the user is able to check at least 2 relevant terms from the 3 × 16 clarification form (we consider term t to be relevant if σKLD(t) > 1.0).",
                "Furthermore, in 10 out of them TCFB3C outperforms the pseudo-feedback baseline, increasing MAP from 0.076 to 0.146 on average (these are particularly hard topics).",
                "We think that there are two possible explanations for this phenomenon of term feedback being active even when relevance feedback does not work: First, even if none of the top N (suppose it is a small number) documents are relevant, we may still find relevant documents in top 60, which is more inclusive but usually unreachable when people are doing relevance feedback in interactive ad-hoc search, from which we can draw feedback terms.",
                "This is true for topic 367 piracy, where the top 10 feedback documents are all about software piracy, yet there are documents between 10-60 that are about piracy on the seas (which is about the real information need), contributing terms such as pirate, ship for selection in the clarification form.",
                "Second, for some topics, a document needs to meet some special condition in order to be relevant.",
                "The top N documents may be related to the topic, but nonetheless irrelevant.",
                "In this case, we may still extract useful terms from these documents, even if they do not qualify as relevant ones.",
                "For example, in topic 639 consumer online shopping, a document needs to mention what contributes to shopping growth to really match the specified information need, hence none of the top 10 feedback documents are regarded as relevant.",
                "But nevertheless, the feedback terms such as retail, commerce are good for query expansion. 7.",
                "CONCLUSIONS In this paper we studied the use of term feedback for interactive information retrieval in the language modeling approach.",
                "We proposed a cluster-based method for selecting presentation terms as well as algorithms to estimate refined query models from user term feedback.",
                "We saw significant improvement in retrieval accuracy brought by term feedback, in spite of the fact that a user often makes mistakes in relevance judgment that hurts its performance.",
                "We found the best-performing algorithm to be TCFB, which benefits from the combination of directly observed term evidence with TFB and indirectly learned cluster relevance with CFB.",
                "When we reduced the number of presentation terms, term feedback is still able to keep much of its performance gain over the baseline.",
                "Finally, we compared term feedback to document-level relevance feedback, and found that TCFB3Cs performance is on a par with the latter with 5 feedback documents.",
                "We regarded term feedback as a viable alternative to traditional relevance feedback, especially when there are no relevant documents in the top.",
                "We propose to extend our work in several ways.",
                "First, we want to study whether the use of various contexts can help the user to better identify term relevance, while not sacrificing the simplicity and compactness of term feedback.",
                "Second, currently all terms are presented to the user in a single batch.",
                "We could instead consider iterative term feedback, by presenting a small number of terms first, and show more terms after receiving user feedback or stop when the refined query is good enough.",
                "The presented terms should be selected dynamically to maximize learning benefits at any moment.",
                "Third, we have plans to incorporate term feedback into our UCAIR toolbar[20], an Internet Explorer plugin, to make it work for web search.",
                "We are also interested in studying how to combine term feedback with relevance feedback or implicit feedback.",
                "We could, for example, allow the user to dynamically modify terms in a language model learned from feedback documents. 8.",
                "ACKNOWLEDGMENT This work is supported in part by the National Science Foundation grants IIS-0347933 and IIS-0428472. 9.",
                "REFERENCES [1] J. Allan.",
                "Relevance feedback with too much data.",
                "In Proceedings of the 18th annual international ACM SIGIR conference on research and development in information retrieval, pages 337-343, 1995. [2] J. Allan.",
                "HARD track overview in TREC 2005 - High Accuracy Retrieval from Documents.",
                "In The Fourteenth Text REtrieval Conference, 2005. [3] P. Anick.",
                "Using terminological feedback for web search refinement: a log-based study.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 88-95, 2003. [4] P. G. Anick and S. Tipirneni.",
                "The paraphrase search assistant: terminological feedback for iterative information seeking.",
                "In Proceedings of the 22nd annual international ACM SIGIR conference on research and development in information retrieval, pages 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan, and A. Singhal.",
                "Automatic query expansion using SMART.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [6] D. Harman.",
                "Towards interactive query expansion.",
                "In Proceedings of the 11th annual international ACM SIGIR conference on research and development in information retrieval, pages 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wade, and J. Allan.",
                "UMass at TREC 2003: HARD and QA.",
                "In TREC, pages 715-725, 2003. [8] H. Joho, C. Coverson, M. Sanderson, and M. Beaulieu.",
                "Hierarchical presentation of expansion terms.",
                "In Proceedings of the 2002 ACM symposium on applied computing, pages 645-649, 2002. [9] K. S. Jones, S. Walker, and S. E. Robertson.",
                "A probabilistic model of information retrieval: development and status.",
                "Technical Report 446, Computer Laboratory, University of Cambridge, 1998. [10] D. Kelly, V. D. Dollu, and X. Fu.",
                "The loquacious user: a document-independent source of terms for query expansion.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 457-464, 2005. [11] D. Kelly and X. Fu.",
                "Elicitation of term relevance feedback: an investigation of term source and context.",
                "In Proceedings of the 29th annual international ACM SIGIR conference on research and development in information retrieval, 2006. [12] J. Koenemann and N. Belkin.",
                "A case for interaction: A study of interactive information retrieval behavior and effectiveness.",
                "In Proceedings of the SIGCHI conference on human factors in computing systems, pages 205-212, 1996. [13] V. Lavrenko and W. B. Croft.",
                "Relevance-based language models.",
                "In Research and Development in Information Retrieval, pages 120-127, 2001. [14] Y. Nemeth, B. Shapira, and M. Taeib-Maimon.",
                "Evaluation of the real and perceived value of automatic and interactive query expansion.",
                "In Proceedings of the 27th annual international ACM SIGIR conference on research and development in information retrieval, pages 526-527, 2004. [15] J. Ponte.",
                "A Language Modeling Approach to Information Retrieval.",
                "PhD thesis, University of Massachusetts at Amherst, 1998. [16] S. E. Robertson, S. Walker, S. Jones, M. Beaulieu, and M. Gatford.",
                "Okapi at TREC-3.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [17] J. Rocchio.",
                "Relevance feedback in information retrieval.",
                "In The SMART retrieval system, pages 313-323. 1971. [18] I. Ruthven.",
                "Re-examining the potential effectiveness of interactive query expansion.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 213-220, 2003. [19] G. Salton and C. Buckley.",
                "Improving retrieval performance by relevance feedback.",
                "Journal of the American Society for Information Science, 41:288-297, 1990. [20] X. Shen, B. Tan, and C. Zhai.",
                "Implicit user modeling for personalized search.",
                "In Proceedings of the 14th ACM international conference on information and knowledge management, pages 824-831, 2005. [21] X. Shen and C. Zhai.",
                "Active feedback in ad-hoc information retrieval.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 59-66, 2005. [22] A. Spink.",
                "Term relevance feedback and query expansion: relation to design.",
                "In Proceedings of the 17th annual international ACM SIGIR conference on research and development in information retrieval, pages 81-90, 1994. [23] J. Xu and W. B. Croft.",
                "Query expansion using local and global document analysis.",
                "In Proceedings of the 19th annual international ACM SIGIR conference on research and development in information retrieval, pages 4-11, 1996. [24] H. Zaragoza, N. Craswell, M. Taylor, S. Saria, and S. Robertson.",
                "Microsoft cambridge at TREC-13: Web and HARD tracks.",
                "In Proceedings of the 13th Text REtrieval Conference, 2004. [25] C. Zhai and J. Lafferty.",
                "Model-based feedback in the language modeling approach to information retrieval.",
                "In Proceedings of the tenth international conference on information and knowledge management, pages 403-410, 2001. [26] C. Zhai, A. Velivelli, and B. Yu.",
                "A cross-collection mixture model for comparative text mining.",
                "In Proceedings of the tenth ACM SIGKDD international conference on knowledge discovery and data mining, pages 743-748, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Con la retroalimentación de término, un usuario juzga directamente la relevancia de los términos individuales sin interacción con los documentos de retroalimentación, tomando el control total del \"proceso de expansión de consultas\"."
            ],
            "translated_text": "",
            "candidates": [
                "proceso de expansión de consulta",
                "proceso de expansión de consultas"
            ],
            "error": []
        },
        "query model": {
            "translated_key": "modelo de consulta",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Term Feedback for Information Retrieval with Language Models Bin Tan† , Atulya Velivelli‡ , Hui Fang† , ChengXiang Zhai† Dept.",
                "of Computer Science† , Dept. of Electrical and Computer Engineering‡ University of Illinois at Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.edu ABSTRACT In this paper we study term-based feedback for information retrieval in the language modeling approach.",
                "With term feedback a user directly judges the relevance of individual terms without interaction with feedback documents, taking full control of the query expansion process.",
                "We propose a cluster-based method for selecting terms to present to the user for judgment, as well as effective algorithms for constructing refined query language models from user term feedback.",
                "Our algorithms are shown to bring significant improvement in retrieval accuracy over a non-feedback baseline, and achieve comparable performance to relevance feedback.",
                "They are helpful even when there are no relevant documents in the top.",
                "Categories and Subject Descriptors H.3.3 [Information Search and Retrieval]: Retrieval models General Terms Algorithms 1.",
                "INTRODUCTION In the language modeling approach to information retrieval, feedback is often modeled as estimating an improved <br>query model</br> or relevance model based on a set of feedback documents [25, 13].",
                "This is in line with the traditional way of doing relevance feedback - presenting a user with documents/passages for relevance judgment and then extracting terms from the judged documents or passages to expand the initial query.",
                "It is an indirect way of seeking users assistance for <br>query model</br> construction, in the sense that the refined <br>query model</br> (based on terms) is learned through feedback documents/passages, which are high-level structures of terms.",
                "It has the disadvantage that irrelevant terms, which occur along with relevant ones in the judged content, may be erroneously used for query expansion, causing undesired effects.",
                "For example, for the TREC query Hubble telescope achievements, when a relevant document talks more about the telescopes repair than its discoveries, irrelevant terms such as spacewalk can be added into the modified query.",
                "We can consider a more direct way to involve a user in <br>query model</br> improvement, without an intermediary step of document feedback that can introduce noise.",
                "The idea is to present a (reasonable) number of individual terms to the user and ask him/her to judge the relevance of each term or directly specify their probabilities in the <br>query model</br>.",
                "This strategy has been discussed in [15], but to our knowledge, it has not been seriously studied in existing language modeling literature.",
                "Compared to traditional relevance feedback, this term-based approach to interactive <br>query model</br> refinement has several advantages.",
                "First, the user has better control of the final <br>query model</br> through direct manipulation of terms: he/she can dictate which terms are relevant, irrelevant, and possibly, to what degree.",
                "This avoids the risk of bringing unwanted terms into the <br>query model</br>, although sometimes the user introduces low-quality terms.",
                "Second, because a term takes less time to judge than a documents full text or summary, and as few as around 20 presented terms can bring significant improvement in retrieval performance (as we will show later), term feedback makes it faster to gather user feedback.",
                "This is especially helpful for interactive adhoc search.",
                "Third, sometimes there are no relevant documents in the top N of the initially retrieved results if the topic is hard.",
                "This is often true when N is constrained to be small, which arises from the fact that the user is unwilling to judge too many documents.",
                "In this case, relevance feedback is useless, as no relevant document can be leveraged on, but term feedback is still often helpful, by allowing relevant terms to be picked from irrelevant documents.",
                "During our participation in the TREC 2005 HARD Track and continued study afterward, we explored how to exploit term feedback from the user to construct improved query models for information retrieval in the language modeling approach.",
                "We identified two key subtasks of term-based feedback, i.e., pre-feedback presentation term selection and post-feedback <br>query model</br> construction, with effective algorithms developed for both.",
                "We imposed a secondary cluster structure on terms and found that a cluster view sheds additional insight into the users information need, and provides a good way of utilizing term feedback.",
                "Through experiments we found that term feedback improves significantly over the nonfeedback baseline, even though the user often makes mistakes in relevance judgment.",
                "Among our algorithms, the one with best retrieval performance is TCFB, the combination of TFB, the direct term feedback algorithm, and CFB, the cluster-based feedback algorithm.",
                "We also varied the number of feedback terms and observed reasonable improvement even at low numbers.",
                "Finally, by comparing term feedback with document-level feedback, we found it to be a viable alternative to the latter with competitive retrieval performance.",
                "The rest of the paper is organized as follows.",
                "Section 2 discusses some related work.",
                "Section 4 outlines our general approach to term feedback.",
                "We present our method for presentation term selection in Section 3 and algorithms for <br>query model</br> construction in Section 5.",
                "The experiment results are given in Section 6.",
                "Section 7 concludes this paper. 2.",
                "RELATED WORK Relevance feedback[17, 19] has long been recognized as an effective method for improving retrieval performance.",
                "Normally, the top N documents retrieved using the original query are presented to the user for judgment, after which terms are extracted from the judged relevant documents, weighted by their potential of attracting more relevant documents, and added into the <br>query model</br>.",
                "The expanded query usually represents the users information need better than the original one, which is often just a short keyword query.",
                "A second iteration of retrieval using this modified query usually produces significant increase in retrieval accuracy.",
                "In cases where true relevance judgment is unavailable and all top N documents are assumed to be relevant, it is called blind or pseudo feedback[5, 16] and usually still brings performance improvement.",
                "Because document is a large text unit, when it is used for relevance feedback many irrelevant terms can be introduced into the feedback process.",
                "To overcome this, passage feedback is proposed and shown to improve feedback performance[1, 23].",
                "A more direct solution is to ask the user for their relevance judgment of feedback terms.",
                "For example, in some relevance feedback systems such as [12], there is an interaction step that allows the user to add or remove expansion terms after they are automatically extracted from relevant documents.",
                "This is categorized as interactive query expansion, where the original query is augmented with user-provided terms, which can come from direct user input (free-form text or keywords)[22, 7, 10] or user selection of system-suggested terms (using thesauri[6, 22] or extracted from feedback documents[6, 22, 12, 4, 7]).",
                "In many cases term relevance feedback has been found to effectively improve retrieval performance[6, 22, 12, 4, 10].",
                "For example, the study in [12] shows that the user prefers to have explicit knowledge and direct control of which terms are used for query expansion, and the penetrable interface that provides this freedom is shown to perform better than other interfaces.",
                "However, in some other cases there is no significant benefit[3, 14], even if the user likes interacting with expansion terms.",
                "In a simulated study carried out in [18], the author compares the retrieval performance of interactive query expansion and automatic query expansion with a simulated study, and suggests that the potential benefits of the former can be hard to achieve.",
                "The user is found to be not good at identifying useful terms for query expansion, when a simple term presentation interface is unable to provide sufficient semantic context of the feedback terms.",
                "Our work differs from the previous ones in two important aspects.",
                "First, when we choose terms to present to the user for relevance judgment, we not only consider single-term value (e.g., the relative frequency of a term in the top documents, which can be measured by metrics such as Robertson Selection Value and Simplified Kullback-Leibler Distance as listed in [24]), but also examine the cluster structure of the terms, so as to produce a balanced coverage of the different topic aspects.",
                "Second, with the language modelling framework, we allow an elaborate construction of the updated <br>query model</br>, by setting different probabilities for different terms based on whether it is a query term, its significance in the top documents, and its cluster membership.",
                "Although techniques for adjusting query term weights exist for vector space models[17] and probablistic relevance models[9], most of the aforementioned works do not use them, choosing to just append feedback terms to the original query (thus using equal weights for them), which can lead to poorer retrieval performance.",
                "The combination of the two aspects allows our method to perform much better than the baseline.",
                "The usual way for feedback term presentation is just to display the terms in a list.",
                "There have been some works on alternative user interfaces. [8] arranges terms in a hierarchy, and [11] compares three different interfaces, including terms + checkboxes, terms + context (sentences) + checkboxes, sentences + input text box.",
                "In both studies, however, there is no significant performance difference.",
                "In our work we adopt the simplest approach of terms + checkboxes.",
                "We focus on term presentation and <br>query model</br> construction from feedback terms, and believe using contexts to improve feedback term quality should be orthogonal to our method. 3.",
                "GENERAL APPROACH We follow the language modeling approach, and base our method on the KL-divergence retrieval model proposed in [25].",
                "With this model, the retrieval task involves estimating a query language model θq from a given query, a document language model θd from each document, and calculating their KL-divergence D(θq||θd), which is then used to score the documents. [25] treats relevance feedback as a <br>query model</br> re-estimation problem, i.e., computing an updated <br>query model</br> θq given the original query text and the extra evidence carried by the judged relevant documents.",
                "We adopt this view, and cast our task as updating the <br>query model</br> from user term feedback.",
                "There are two key subtasks here: First, how to choose the best terms to present to the user for judgment, in order to gather maximal evidence about the users information need.",
                "Second, how to compute an updated <br>query model</br> based on this term feedback evidence, so that it captures the users information need and translates into good retrieval performance. 4.",
                "PRESENTATION TERM SELECTION Proper selection of terms to be presented to the user for judgment is crucial to the success of term feedback.",
                "If the terms are poorly chosen and there are few relevant ones, the user will have a hard time looking for useful terms to help clarify his/her information need.",
                "If the relevant terms are plentiful, but all concentrate on a single aspect of the query topic, then we will only be able to get feedback on that aspect and missing others, resulting in a breadth loss in retrieved results.",
                "Therefore, it is important to carefully select presentation terms to maximize expected gain from user feedback, i.e., those that can potentially reveal most evidence of the users information need.",
                "This is similar to active feedback[21], which suggests that a retrieval system should actively probe the users information need, and in the case of relevance feedback, the feedback documents should be chosen to maximize learning benefits (e.g. diversely so as to increase coverage).",
                "In our approach, the top N documents from an initial retrieval using the original query form the source of feedback terms: all terms that appear in them are considered candidates to present to the user.",
                "These documents serve as pseudo-feedback, since they provide a much richer context than the original query (usually very short), while the user is not asked to judge their relevance.",
                "Due to the latter reason, it is possible to make N quite large (e.g., in our experiments we set N = 60) to increase its coverage of different aspects in the topic.",
                "The simplest way of selecting feedback terms is to choose the most frequent M terms from the N documents.",
                "This method, however, has two drawbacks.",
                "First, a lot of common noisy terms will be selected due to their high frequencies in the document collection, unless a stop-word list is used for filtering.",
                "Second, the presentation list will tend to be filled by terms from major aspects of the topic; those from a minor aspect are likely to be missed due to their relatively low frequencies.",
                "We solve the above problems by two corresponding measures.",
                "First, we introduce a background model θB that is estimated from collection statistics and explains the common terms, so that they are much less likely to appear in the presentation list.",
                "Second, the terms are selected from multiple clusters in the pseudo-feedback documents, to ensure sufficient representation of different aspects of the topic.",
                "We rely on the mixture multinomial model, which is used for theme discovery in [26].",
                "Specifically, we assume the N documents contain K clusters {Ci| i = 1, 2, · · · K}, each characterized by a multinomial word distribution (also known as unigram language model) θi and corresponding to an aspect of the topic.",
                "The documents are regarded as sampled from a mixture of K + 1 components, including the K clusters and the background model: p(w|d) = λBp(w|θB) + (1 − λB) K i=1 πd,ip(w|θi) where w is a word, λB is the mixture weight for the background model θB, and πd,i is the document-specific mixture weight for the i-th cluster model θi.",
                "We then estimate the cluster models by maximizing the probability of the pseudo-feedback documents being generated from the multinomial mixture model: log p(D|Λ) = d∈D w∈V c(w; d) log p(w|d) where D = {di| i = 1, 2, · · · N} is the set of the N documents, V is the vocabulary, c(w; d) is ws frequency in d and Λ = {θi| i = 1, 2, · · · K} ∪ {πdij | i = 1, 2, · · · N, j = 1, 2, · · · K} is the set of model parameters to estimate.",
                "The cluster models can be efficiently estimated using the Expectation-Maximization (EM) algorithm.",
                "For its details, we refer the reader to [26].",
                "Table 1 shows the cluster models for TREC query Transportation tunnel disasters (K = 3).",
                "Note that only the middle cluster is relevant.",
                "Table 1: Cluster models for topic 363 Transportation tunnel disasters Cluster 1 Cluster 2 Cluster 3 tunnel 0.0768 tunnel 0.0935 tunnel 0.0454 transport 0.0364 fire 0.0295 transport 0.0406 traffic 0.0206 truck 0.0236 toll 0.0166 railwai 0.0186 french 0.0220 amtrak 0.0153 harbor 0.0146 smoke 0.0157 train 0.0129 rail 0.0140 car 0.0154 airport 0.0122 bridg 0.0139 italian 0.0152 turnpik 0.0105 kilomet 0.0136 firefight 0.0144 lui 0.0095 truck 0.0133 blaze 0.0127 jersei 0.0093 construct 0.0131 blanc 0.0121 pass 0.0087 · · · · · · · · · From each of the K estimated clusters, we choose the L = M/K terms with highest probabilities to form a total of M presentation terms.",
                "If a term happens to be in top L in multiple clusters, we assign it to the cluster where it has highest probability and let the other clusters take one more term as compensation.",
                "We also filter out terms in the original query text because they tend to always be relevant when the query is short.",
                "The selected terms are then presented to the user for judgment.",
                "A sample (completed) feedback form is shown in Figure 1.",
                "In this study we only deal with binary judgment: a presented term is by default unchecked, and a user may check it to indicate relevance.",
                "We also do not explicitly exploit negative feedback (i.e., penalizing irrelevant terms), because with binary feedback an unchecked term is not necessarily irrelevant (maybe the user is unsure about its relevance).",
                "We could ask the user for finer judgment (e.g., choosing from highly relevant, somewhat relevant, do not know, somewhat irrelevant and highly irrelevant), but binary feedback is more compact, taking less space to display and less user effort to make judgment. 5.",
                "ESTIMATING QUERY MODELS FROM TERM FEEDBACK In this section, we present several algorithms for exploiting term feedback.",
                "The algorithms take as input the original query q, the clusters {θi} as generated by the theme discovery algorithm, the set of feedback terms T and their relevance judgment R, and outputs an updated query language model θq that makes best use of the feedback evidence to capture the users information need.",
                "First we describe our notations: • θq: The original <br>query model</br>, derived from query terms only: p(w|θq) = c(w; q) |q| where c(w; q) is the count of w in q, and |q| = w∈q c(w; q) is the query length. • θq : The updated <br>query model</br> which we need to estimate from term feedback. • θi (i = 1, 2, . . .",
                "K): The unigram language model of cluster Ci, as estimated using the theme discovery algorithm. • T = {ti,j} (i = 1 . . .",
                "K, j = 1 . . .",
                "L): The set of terms presented to the user for judgment. ti,j is the j-th term chosen from cluster Ci. • R = {δw|w ∈ T}: δw is an indicator variable that is 1 if w is judged relevant or 0 otherwise. 5.1 TFB (Direct Term Feedback) This is a straight-forward form of term feedback that does not involve any secondary structure.",
                "We give a weight of 1 to terms judged relevant by the user, a weight of μ to query terms, zero weight to other terms, and then apply normalization: p(w|θq ) = δw + μ c(w; q) w ∈T δw + μ|q| where w ∈T δw is the total number of terms that are judged relevant.",
                "We call this method TFB (direct Term FeedBack).",
                "If we let μ = 1, this approach is equivalent to appending the relevant terms after the original query, which is what standard query expansion (without term reweighting) does.",
                "If we set μ > 1, we are putting more emphasis on the query terms than the checked ones.",
                "Note that the result model will be more biased toward θq if the original query is long or the user feedback is weak, which makes sense, as we can trust more on the original query in either case.",
                "Figure 1: Filled clarification form for Topic 363 363 transportation tunnel disasters Please select all terms that are relevant to the topic. traffic railway harbor rail bridge kilometer construct swiss cross link kong hong river project meter shanghai fire truck french smoke car italian firefights blaze blanc mont victim franc rescue driver chamonix emerge toll amtrak train airport turnpike lui jersey pass rome z center electron road boston speed bu submit 5.2 CFB (Cluster Feedback) Here we exploit the cluster structure that played an important role when we selected the presentation terms.",
                "The clusters represent different aspects of the query topic, each of which may or may not be relevant.",
                "If we are able to identify the relevant clusters, we can combine them to generate a <br>query model</br> that is good at discovering documents belonging to these clusters (instead of the irrelevant ones).",
                "We could ask the user to directly judge the relevance of a cluster after viewing representative terms in that cluster, but this would sometimes be a difficult task for the user, who has to guess the semantics of a cluster via its set of terms, which may not be well connected to one another due to a lack of context.",
                "Therefore, we propose to learn cluster feedback indirectly, inferring the relevance of a cluster through the relevance of its feedback terms.",
                "Because each cluster has an equal number of terms presented to the user, the simplest measure of a clusters relevance is the number of terms that are judged relevant in it.",
                "Intuitively, the more terms are marked relevant in a cluster, the closer the cluster is to the query topic, and the more the cluster should participate in query modification.",
                "If we combine the cluster models using weights determined this way and then interpolate with the original <br>query model</br>, we get the following formula for query updating, which we call CFB (Cluster FeedBack): p(w|θq ) = λp(w|θq) + (1 − λ) K i=1 L j=1 δti,j K k=1 L j=1 δtk,j p(w|θi) where L j=1 δti,j is the number of relevant terms in cluster Ci, and K k=1 L j=1 δtk,j is the total number of relevant terms.",
                "We note that when there is only one cluster (K = 1), the above formula degenerates to p(w|θq ) = λp(w|θq) + (1 − λ)p(w|θ1) which is merely pseudo-feedback of the form proposed in [25]. 5.3 TCFB (Term-cluster Feedback) TFB and CFB both have their drawbacks.",
                "TFB assigns non-zero probabilities to the presented terms that are marked relevant, but completely ignores (a lot more) others, which may be left unchecked due to the users ignorance, or simply not included in the presentation list, but we should be able to infer their relevance from the checked ones.",
                "For example, in Figure 1, since as many as 5 terms in the middle cluster (the third and fourth columns) are checked, we should have high confidence in the relevance of other terms in that cluster.",
                "CFB remedies TFBs problem by treating the terms in a cluster collectively, so that unchecked/unpresented terms receive weights when presented terms in their clusters are judged as relevant, but it does not distinguish which terms in a cluster are presented or judged.",
                "Intuitively, the judged relevant terms should receive larger weights because they are explicitly indicated as relevant by the user.",
                "Therefore, we try to combine the two methods, hoping to get the best out of both.",
                "We do this by interpolating the TFB model with the CFB model, and call it TCFB: p(w|θq ) = αp(w|θqT F B ) + (1 − α)p(w|θqCF B ) 6.",
                "EXPERIMENTS In this section, we describe our experiment results.",
                "We first describe our experiment setup and present an overview of various methods performance.",
                "Then we discuss the effects of varying the parameter setting in the algorithms, as well as the number of presentation terms.",
                "Next we analyze user term feedback behavior and its relation to retrieval performance.",
                "Finally we compare term feedback to relevance feedback and show that it has its particular advantage. 6.1 Experiment Setup and Basic Results We took the opportunity of TREC 2005 HARD Track[2] for the evaluation of our algorithms.",
                "The tracks used the AQUAINT collection, a 3GB corpus of English newswire text.",
                "The topics included 50 ones previously known to be hard, i.e. with low retrieval performance.",
                "It is for these hard topics that user feedback is most helpful, as it can provide information to disambiguate the queries; with easy topics the user may be unwilling to spend efforts for feedback if the automatic retrieval results are good enough.",
                "Participants of the track were able to submit custom-designed clarification forms (CF) to solicit feedback from human assessors provided by Table 2: Retrieval performance for different methods and CF types.",
                "The last row is the percentage of MAP improvement over the baseline.",
                "The parameter settings μ = 4, λ = 0.1, α = 0.3 are near optimal.",
                "Baseline TFB1C TFB3C TFB6C CFB1C CFB3C CFB6C TCFB1C TCFB3C TCFB6C MAP 0.219 0.288 0.288 0.278 0.254 0.305 0.301 0.274 0.309 0.304 Pr@30 0.393 0.467 0.475 0.457 0.399 0.480 0.473 0.431 0.491 0.473 RR 4339 4753 4762 4740 4600 4907 4872 4767 4947 4906 % 0% 31.5% 31.5% 26.9% 16.0% 39.3% 37.4% 25.1% 41.1% 38.8% Table 3: MAP variation with the number of presented terms. # terms TFB1C TFB3C TFB6C CFB3C CFB6C TCFB3C TCFB6C 6 0.245 0.240 0.227 0.279 0.279 0.281 0.274 12 0.261 0.261 0.242 0.299 0.286 0.297 0.281 18 0.275 0.274 0.256 0.301 0.282 0.300 0.286 24 0.276 0.281 0.265 0.303 0.292 0.305 0.292 30 0.280 0.285 0.270 0.304 0.296 0.307 0.296 36 0.282 0.288 0.272 0.307 0.297 0.309 0.297 42 0.283 0.288 0.275 0.306 0.298 0.309 0.300 48 0.288 0.288 0.278 0.305 0.301 0.309 0.303 NIST.",
                "We designed three sets of clarification forms for term feedback, differing in the choice of K, the number of clusters, and L, the number of presented terms from each cluster.",
                "They are: 1× 48, a big cluster with 48 terms, 3 × 16, 3 clusters with 16 terms each, and 6 × 8, 6 clusters with 8 terms each.",
                "The total number of presented terms (M) is fixed at 48, so by comparing the performance of different types of clarification forms we can know the effects of different degree of clustering.",
                "For each topic, an assessor would complete the forms ordered by 6 × 8, 1 × 48 and 3 × 16, spending up to three minutes on each form.",
                "The sample clarification form shown in Figure 1 is of type 3 × 16.",
                "It is a simple and compact interface in which the user can check relevant terms.",
                "The form is self-explanatory; there is no need for extra user training on how to use it.",
                "Our initinal queries are constructed only using the topic title descriptions, which are on average 2.7 words in length.",
                "As our baseline we use the KL divergence retrieval method implemented in the Lemur Toolkit1 with 5 pseudo-feedback documents.",
                "We stem the terms, choose Dirichlet smoothing with a prior of 2000, and truncate query language models to 50 terms (these settings are used throughout the experiments).",
                "For all other parameters we use Lemurs default settings.",
                "The baseline turns out to perform above average among the track participants.",
                "After an initial run using this baseline retrieval method, we take the top 60 documents for each topic and apply the theme discovery algorithm to output the clusters (1, 3, or 6 of them), based on which we generate clarification forms.",
                "After user feedback is received, we run the term feedback algorithms (TFB, CFB or TCFB) to estimate updated query models, which are then used for a second iteration of retrieval.",
                "We evaluate the different retrieval methods performance on their rankings of the top 1000 documents.",
                "The evaluation metrics we adopt include mean average (non-interpolated) precision (MAP), precision at top 30 (Pr@30) and total relevant retrieved (RR).",
                "Table 2 shows the performance of various methods and configurations of K × L. The suffixes (1C, 3C, 6C) after TFB,CFB,TCFB stand for the number of clusters (K).",
                "For example, TCFB3C means the TCFB method on the 3 × 16 clarification forms.",
                "From Table 2 we can make the following observations: 1 http://www.lemurproject.com 1.",
                "All methods perform considerably better than the pseudofeedback baseline, with TCFB3C achieving a highest 41.1% improvement in MAP, indicating significant contribution of term feedback for clarification of the users information need.",
                "In other words, term feedback is truly helpful for improving retrieval accuracy. 2.",
                "For TFB, the performance is almost equal on the 1 × 48 and 3 × 16 clarification forms in terms of MAP (although the latter is slightly better in Pr@30 and RR), and a little worse on the 6 × 8 ones. 3.",
                "Both CFB3C and CFB6C perform better than their TFB counterparts in all three metrics, suggesting that feedback on a secondary cluster structure is indeed beneficial.",
                "CFB1C is actually worse because it cannot adjust the weight of its (single) cluster from term feedback and it is merely pseudofeedback. 4.",
                "Although TCFB is just a simple mixture of TFB and CFB by interpolation, it is able to outperform both.",
                "This supports our speculation that TCFB overcomes the drawbacks of TFB (paying attention only to checked terms) and CFB (not distinguishing checked and unchecked terms in a cluster).",
                "Except for TCFB6C v.s.",
                "CFB6C, the performance advantage of TCFB over TFB/CFB is significant at p < 0.05 using the Wilcoxon signed rank test.",
                "This is not true in the case of TFB v.s.",
                "CFB, each of which is better than the other in nearly half of the topics. 6.2 Reduction of Presentation Terms In some situations we may have to reduce the number of presentation terms due to limits in display space or user feedback efforts.",
                "It is interesting to know whether our algorithms performance deteriorates when the user is presented with fewer terms.",
                "Because the presentation terms within each cluster are generated in decreasing order of their frequencies, the presentation list forms a subset of the original one if its size is reduced2 .",
                "Therefore, we can easily simulate what happens when the number of presentation terms decreases 2 There are complexities arising from terms appearing in top L of multiple clusters, but these are exceptions from M to M : we will keep all judgments of the top L = M /K terms in each cluster and discard those of others.",
                "Table 3 shows the performance of various algorithms as the number of presentation terms ranges from 6 to 48.",
                "We find that the performance of TFB is more susceptible to presentation term reduction than that of CFB or TCFB.",
                "For example, at 12 terms the MAP of TFB3C is 90.6% of that at 48 terms, while the numbers for CFB3C and TCFB3C are 98.0% and 96.1% respectively.",
                "We conjecture the reason to be that while TFBs performance heavily depends on how many good terms are chosen for query expansion, CFB only needs a rough estimate of cluster weights to work.",
                "Also, the 3 × 16 clarification forms seem to be more robust than the 6 × 8 ones: at 12 terms the MAP of TFB6C is 87.1% of that at 48 terms, lower than 90.6% for TFB3C.",
                "Similarly, for CFB it is 95.0% against 98.0%.",
                "This is natual, as for a large cluster number of 6, it is easier to get into the situation where each cluster gets too few presentation terms to make topic diversification useful.",
                "Overall, we are surprised to see that the algorithms are still able to perform reasonably well when the number of presentation terms is small.",
                "For example, at only 12 terms CFB3C (the clarification form is of size 3 × 4) can still improve 36.5% over the baseline, dropping slightly from 39.3% at 48 terms. 6.3 User Feedback Analysis In this part we study several aspects of users term feedback behavior, and whether they are connected to retrieval performance.",
                "Figure 2: Clarification form completion time distributions 0−30 30−60 60−90 90−120 120−150 150−180 0 5 10 15 20 25 30 35 completion time (seconds) #topics 1×48 3×16 6×8 Figure 2 shows the distribution of time needed to complete a clarification form3 .",
                "We see that the user is usually able to finish term feedback within a reasonably short amount of time: for more than half of the topics the clarification form is completed in just 1 minute, and only a small fraction of topics (less than 10% for 1 × 48 and 3 × 16) take more than 2 minutes.",
                "This suggests that term feedback is suitable for interactive ad-hoc retrieval, where a user usually does not want to spend too much time on providing feedback.",
                "We find that a user often makes mistakes when judging term relevance.",
                "Sometimes a relevant term may be left out because its connection to the query topic is not obvious to the user.",
                "Other times a dubious term may be included but turns out to be irrelevant.",
                "Take the topic in Figure 1 for example.",
                "There was a fire disaster in Mont 3 The maximal time is 180 seconds, as the NIST assessor would be forced to submit the form at that moment.",
                "Table 4: Term selection statistics (topic average) CF Type 1 × 48 3 × 16 6 × 8 # checked terms 14.8 13.3 11.2 # rel. terms 15.0 12.6 11.2 # rel. checked terms 7.9 6.9 5.9 precision 0.534 0.519 0.527 recall 0.526 0.548 0.527 Blanc Tunnel between France and Italy in 1999, but the user failed to select such keywords as mont, blanc, french and italian due to his/her ignorance of the event.",
                "Indeed, without proper context it would be hard to make perfect judgment.",
                "What is then, the extent to which the user is good at term feedback?",
                "Does it have serious impact on retrieval performance?",
                "To answer these questions, we need a measure of individual terms true relevance.",
                "We adopt the Simplified KL Divergence metric used in [24] to decide query expansion terms as our term relevance measure: σKLD(w) = p(w|R) log p(w|R) p(w|¬R) where p(w|R) is the probability that a relevant document contains term w, and p(w|¬R) is the probability that an irrelevant document contains w, both of which can be easily computed via maximum likelihood estimate given document-level relevance judgment.",
                "If σKLD(w) > 0, w is more likely to appear in relevant documents than irrelevant ones.",
                "We consider a term relevant if its Simplified KL Divergence value is greater than a certain threshold σ0.",
                "We can then define precision and recall of user term judgment accordingly: precision is the fraction of terms checked by the user that are relevant; recall is the fraction of presented relevant terms that are checked by the user.",
                "Table 4 shows the number of checked terms, relevant terms and relevant checked terms when σ0 is set to 1.0, as well as the precision/recall of user term judgment.",
                "Note that when the clarification forms contain more clusters, fewer terms are checked: 14.8 for 1 × 48, 13.3 for 3 × 16 and 11.2 for 6×8.",
                "Similar pattern holds for relevant terms and relevant checked terms.",
                "There seems to be a trade-off between increasing topic diversity by clustering and losing extra relevant terms: when there are more clusters, each of them gets fewer terms to present, which can hurt a major relevant cluster that contains many relevant terms.",
                "Therefore, it is not always helpful to have more clusters, e.g., TFB6C is actually worse than TFB1C.",
                "The major finding we can make from Table 4 is that the user is not particularly good at identifying relevant terms, which echoes the discovery in [18].",
                "In the case of 3 × 16 clarification forms, the average number of terms checked as relevant by the user is 13.3 per topic, and the average number of relevant terms whose σKLD value exceed 1.0 is 12.6.",
                "The user is able to recognize only 6.9 of these terms on average.",
                "Indeed, the precision and recall of user feedback terms (as defined previously) are far from perfect.",
                "On the other hand, If the user had correctly checked all such relevant terms, the performance of our algorithms would have increased a lot, as shown in Table 5.",
                "We see that TFB gets big improvement when there is an oracle who checks all relevant terms, while CFB meets a bottleneck around MAP of 0.325, since all it does is adjust cluster weights, and when the learned weights are close to being accurate, it cannot benefit more from term feedback.",
                "Also note that TCFB fails to outperform TFB, probably because TFB is sufficiently accurate.",
                "Table 5: Change of MAP when using all (and only) relevant terms (σKLD > 1.0) for feedback. original term feedback relevant term feedback TF1 0.288 0.354 TF3 0.288 0.354 TF6 0.278 0.346 CF3 0.305 0.325 CF6 0.301 0.326 TCF3 0.309 0.345 TCF6 0.304 0.341 6.4 Comparison with Relevance Feedback Now we compare term feedback with document-level relevance feedback, in which the user is presented with the top N documents from an initial retrieval and asked to judge their relevance.",
                "The feedback process is simulated using document relevance judgment from NIST.",
                "We use the mixture model based feedback method proposed in [25], with mixture noise set to 0.95 and feedback coefficient set to 0.9.",
                "Comparative evaluation of relevance feedback against other methods is complicated by the fact that some documents have already been viewed during feedback, so it makes no sense to include them in the retrieval results of the second run.",
                "However, this does not hold for term feedback.",
                "Thus, to make it fair w.r.t. users information gain, if the feedback documents are relevant, they should be kept in the top of the ranking; if they are irrelevant, they should be left out.",
                "Therefore, we use relevance feedback to produce a ranking of top 1000 retrieved documents but with every feedback document excluded, and then prepend the relevant feedback documents at the front.",
                "Table 6 shows the performance of relevance feedback for different values of N and compares it with TCFB3C.",
                "Table 6: Performance of relevance feedback for different number of feedback documents (N).",
                "N MAP Pr@30 RR 5 0.302 0.586 4779 10 0.345 0.670 4916 20 0.389 0.772 5004 TCFB3C 0.309 0.491 4947 We see that the performance of TCFB3C is comparable to that of relevance feedback using 5 documents.",
                "Although it is poorer than when there are 10 feedback documents in terms of MAP and Pr@30, it does retrieve more documents (4947) when going down the ranked list.",
                "We try to compare the quality of automatically inserted terms in relevance feedback with that of manually selected terms in term feedback.",
                "This is done by truncating the relevance feedback modified <br>query model</br> to a size equal to the number of checked terms for the same topic.",
                "We can then compare the terms in the truncated model with the checked terms.",
                "Figure 3 shows the distribution of the terms σKLD scores.",
                "We find that term feedback tends to produce expansion terms of higher quality(those with σKLD > 1) compared to relevance feedback (with 10 feedback documents).",
                "This does not contradict the fact that the latter yields higher retrieval performance.",
                "Actually, when we use the truncated <br>query model</br> instead of the intact one refined from relevance feedback, the MAP is only 0.304.",
                "The truth Figure 3: Comparison of expansion term quality between relevance feedback (with 10 feedback documents) and term feedback (with 3 × 16 CFs) −1−0 0−1 1−2 2−3 3−4 4−5 5−6 0 50 100 150 200 250 300 350 σKLD #terms relevance feedback term feedback is, although there are many unwanted terms in the expanded <br>query model</br> from feedback documents, there are also more relevant terms than what the user can possibly select from the list of presentation terms generated with pseudo-feedback documents, and the positive effects often outweights the negative ones.",
                "We are interested to know under what circumstances term feedback has advantage over relevance feedback.",
                "One such situation is when none of the top N feedback documents is relevant, rendering relevance feedback useless.",
                "This is not infrequent, as one might have thought: out of the 50 topics, there are 13 such cases when N = 5, 10 when N = 10, and still 3 when N = 20.",
                "When this happens, one can only back off to the original retrieval method; the power of relevance feedback is lost.",
                "Surprisingly, in 11 out of 13 such cases where relevance feedback seems impossible, the user is able to check at least 2 relevant terms from the 3 × 16 clarification form (we consider term t to be relevant if σKLD(t) > 1.0).",
                "Furthermore, in 10 out of them TCFB3C outperforms the pseudo-feedback baseline, increasing MAP from 0.076 to 0.146 on average (these are particularly hard topics).",
                "We think that there are two possible explanations for this phenomenon of term feedback being active even when relevance feedback does not work: First, even if none of the top N (suppose it is a small number) documents are relevant, we may still find relevant documents in top 60, which is more inclusive but usually unreachable when people are doing relevance feedback in interactive ad-hoc search, from which we can draw feedback terms.",
                "This is true for topic 367 piracy, where the top 10 feedback documents are all about software piracy, yet there are documents between 10-60 that are about piracy on the seas (which is about the real information need), contributing terms such as pirate, ship for selection in the clarification form.",
                "Second, for some topics, a document needs to meet some special condition in order to be relevant.",
                "The top N documents may be related to the topic, but nonetheless irrelevant.",
                "In this case, we may still extract useful terms from these documents, even if they do not qualify as relevant ones.",
                "For example, in topic 639 consumer online shopping, a document needs to mention what contributes to shopping growth to really match the specified information need, hence none of the top 10 feedback documents are regarded as relevant.",
                "But nevertheless, the feedback terms such as retail, commerce are good for query expansion. 7.",
                "CONCLUSIONS In this paper we studied the use of term feedback for interactive information retrieval in the language modeling approach.",
                "We proposed a cluster-based method for selecting presentation terms as well as algorithms to estimate refined query models from user term feedback.",
                "We saw significant improvement in retrieval accuracy brought by term feedback, in spite of the fact that a user often makes mistakes in relevance judgment that hurts its performance.",
                "We found the best-performing algorithm to be TCFB, which benefits from the combination of directly observed term evidence with TFB and indirectly learned cluster relevance with CFB.",
                "When we reduced the number of presentation terms, term feedback is still able to keep much of its performance gain over the baseline.",
                "Finally, we compared term feedback to document-level relevance feedback, and found that TCFB3Cs performance is on a par with the latter with 5 feedback documents.",
                "We regarded term feedback as a viable alternative to traditional relevance feedback, especially when there are no relevant documents in the top.",
                "We propose to extend our work in several ways.",
                "First, we want to study whether the use of various contexts can help the user to better identify term relevance, while not sacrificing the simplicity and compactness of term feedback.",
                "Second, currently all terms are presented to the user in a single batch.",
                "We could instead consider iterative term feedback, by presenting a small number of terms first, and show more terms after receiving user feedback or stop when the refined query is good enough.",
                "The presented terms should be selected dynamically to maximize learning benefits at any moment.",
                "Third, we have plans to incorporate term feedback into our UCAIR toolbar[20], an Internet Explorer plugin, to make it work for web search.",
                "We are also interested in studying how to combine term feedback with relevance feedback or implicit feedback.",
                "We could, for example, allow the user to dynamically modify terms in a language model learned from feedback documents. 8.",
                "ACKNOWLEDGMENT This work is supported in part by the National Science Foundation grants IIS-0347933 and IIS-0428472. 9.",
                "REFERENCES [1] J. Allan.",
                "Relevance feedback with too much data.",
                "In Proceedings of the 18th annual international ACM SIGIR conference on research and development in information retrieval, pages 337-343, 1995. [2] J. Allan.",
                "HARD track overview in TREC 2005 - High Accuracy Retrieval from Documents.",
                "In The Fourteenth Text REtrieval Conference, 2005. [3] P. Anick.",
                "Using terminological feedback for web search refinement: a log-based study.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 88-95, 2003. [4] P. G. Anick and S. Tipirneni.",
                "The paraphrase search assistant: terminological feedback for iterative information seeking.",
                "In Proceedings of the 22nd annual international ACM SIGIR conference on research and development in information retrieval, pages 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan, and A. Singhal.",
                "Automatic query expansion using SMART.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [6] D. Harman.",
                "Towards interactive query expansion.",
                "In Proceedings of the 11th annual international ACM SIGIR conference on research and development in information retrieval, pages 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wade, and J. Allan.",
                "UMass at TREC 2003: HARD and QA.",
                "In TREC, pages 715-725, 2003. [8] H. Joho, C. Coverson, M. Sanderson, and M. Beaulieu.",
                "Hierarchical presentation of expansion terms.",
                "In Proceedings of the 2002 ACM symposium on applied computing, pages 645-649, 2002. [9] K. S. Jones, S. Walker, and S. E. Robertson.",
                "A probabilistic model of information retrieval: development and status.",
                "Technical Report 446, Computer Laboratory, University of Cambridge, 1998. [10] D. Kelly, V. D. Dollu, and X. Fu.",
                "The loquacious user: a document-independent source of terms for query expansion.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 457-464, 2005. [11] D. Kelly and X. Fu.",
                "Elicitation of term relevance feedback: an investigation of term source and context.",
                "In Proceedings of the 29th annual international ACM SIGIR conference on research and development in information retrieval, 2006. [12] J. Koenemann and N. Belkin.",
                "A case for interaction: A study of interactive information retrieval behavior and effectiveness.",
                "In Proceedings of the SIGCHI conference on human factors in computing systems, pages 205-212, 1996. [13] V. Lavrenko and W. B. Croft.",
                "Relevance-based language models.",
                "In Research and Development in Information Retrieval, pages 120-127, 2001. [14] Y. Nemeth, B. Shapira, and M. Taeib-Maimon.",
                "Evaluation of the real and perceived value of automatic and interactive query expansion.",
                "In Proceedings of the 27th annual international ACM SIGIR conference on research and development in information retrieval, pages 526-527, 2004. [15] J. Ponte.",
                "A Language Modeling Approach to Information Retrieval.",
                "PhD thesis, University of Massachusetts at Amherst, 1998. [16] S. E. Robertson, S. Walker, S. Jones, M. Beaulieu, and M. Gatford.",
                "Okapi at TREC-3.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [17] J. Rocchio.",
                "Relevance feedback in information retrieval.",
                "In The SMART retrieval system, pages 313-323. 1971. [18] I. Ruthven.",
                "Re-examining the potential effectiveness of interactive query expansion.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 213-220, 2003. [19] G. Salton and C. Buckley.",
                "Improving retrieval performance by relevance feedback.",
                "Journal of the American Society for Information Science, 41:288-297, 1990. [20] X. Shen, B. Tan, and C. Zhai.",
                "Implicit user modeling for personalized search.",
                "In Proceedings of the 14th ACM international conference on information and knowledge management, pages 824-831, 2005. [21] X. Shen and C. Zhai.",
                "Active feedback in ad-hoc information retrieval.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 59-66, 2005. [22] A. Spink.",
                "Term relevance feedback and query expansion: relation to design.",
                "In Proceedings of the 17th annual international ACM SIGIR conference on research and development in information retrieval, pages 81-90, 1994. [23] J. Xu and W. B. Croft.",
                "Query expansion using local and global document analysis.",
                "In Proceedings of the 19th annual international ACM SIGIR conference on research and development in information retrieval, pages 4-11, 1996. [24] H. Zaragoza, N. Craswell, M. Taylor, S. Saria, and S. Robertson.",
                "Microsoft cambridge at TREC-13: Web and HARD tracks.",
                "In Proceedings of the 13th Text REtrieval Conference, 2004. [25] C. Zhai and J. Lafferty.",
                "Model-based feedback in the language modeling approach to information retrieval.",
                "In Proceedings of the tenth international conference on information and knowledge management, pages 403-410, 2001. [26] C. Zhai, A. Velivelli, and B. Yu.",
                "A cross-collection mixture model for comparative text mining.",
                "In Proceedings of the tenth ACM SIGKDD international conference on knowledge discovery and data mining, pages 743-748, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Introducción En el enfoque de modelado de idiomas para la recuperación de la información, la retroalimentación a menudo se modela como estimando un \"modelo de consulta\" mejorado o modelo de relevancia basado en un conjunto de documentos de retroalimentación [25, 13].",
                "Es una forma indirecta de buscar asistencia de los usuarios para la construcción del \"modelo de consulta\", en el sentido de que el \"modelo de consulta\" refinado (basado en términos) se aprende a través de documentos/pasajes de retroalimentación, que son estructuras de términos de alto nivel.",
                "Podemos considerar una forma más directa de involucrar a un usuario en la mejora del \"modelo de consulta\", sin un paso intermediario de comentarios de documentos que pueda introducir el ruido.",
                "La idea es presentar un número (razonable) de términos individuales al usuario y pedirle que juzgue la relevancia de cada término o especifique directamente sus probabilidades en el \"modelo de consulta\".",
                "En comparación con la retroalimentación de relevancia tradicional, este enfoque basado en términos para el refinamiento interactivo del \"modelo de consulta\" tiene varias ventajas.",
                "Primero, el usuario tiene un mejor control del \"modelo de consulta\" final a través de la manipulación directa de los términos: él/ella puede dictar qué términos son relevantes, irrelevantes y posiblemente, hasta qué punto.",
                "Esto evita el riesgo de incorporar términos no deseados al \"modelo de consulta\", aunque a veces el usuario introduce términos de baja calidad.",
                "Identificamos dos subtareas clave de la retroalimentación basada en términos, es decir, la selección de términos de presentación previa a la retroalimentación y la construcción de \"modelo de consulta\" posterior a la retroalimentación, con algoritmos efectivos desarrollados para ambos.",
                "Presentamos nuestro método para la selección de términos de presentación en la Sección 3 y los algoritmos para la construcción del \"Modelo de consulta\" en la Sección 5.",
                "Normalmente, los principales documentos N recuperados utilizando la consulta original se presentan al usuario para el juicio, después de lo cual se extraen los términos de los documentos relevantes juzgados, ponderados por su potencial de atraer documentos más relevantes y agregados al \"modelo de consulta\"."
            ],
            "translated_text": "",
            "candidates": [
                "modelo de consulta",
                "modelo de consulta",
                "modelo de consulta",
                "modelo de consulta",
                "modelo de consulta",
                "modelo de consulta",
                "modelo de consulta",
                "modelo de consulta",
                "modelo de consulta",
                "modelo de consulta",
                "modelo de consulta",
                "modelo de consulta",
                "modelo de consulta",
                "modelo de consulta",
                "modelo de consulta",
                "modelo de consulta",
                "modelo de consulta",
                "Modelo de consulta",
                "Modelo de consulta",
                "modelo de consulta",
                "modelo de consulta"
            ],
            "error": []
        },
        "interactive adhoc search": {
            "translated_key": "búsqueda interactiva adhoc",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Term Feedback for Information Retrieval with Language Models Bin Tan† , Atulya Velivelli‡ , Hui Fang† , ChengXiang Zhai† Dept.",
                "of Computer Science† , Dept. of Electrical and Computer Engineering‡ University of Illinois at Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.edu ABSTRACT In this paper we study term-based feedback for information retrieval in the language modeling approach.",
                "With term feedback a user directly judges the relevance of individual terms without interaction with feedback documents, taking full control of the query expansion process.",
                "We propose a cluster-based method for selecting terms to present to the user for judgment, as well as effective algorithms for constructing refined query language models from user term feedback.",
                "Our algorithms are shown to bring significant improvement in retrieval accuracy over a non-feedback baseline, and achieve comparable performance to relevance feedback.",
                "They are helpful even when there are no relevant documents in the top.",
                "Categories and Subject Descriptors H.3.3 [Information Search and Retrieval]: Retrieval models General Terms Algorithms 1.",
                "INTRODUCTION In the language modeling approach to information retrieval, feedback is often modeled as estimating an improved query model or relevance model based on a set of feedback documents [25, 13].",
                "This is in line with the traditional way of doing relevance feedback - presenting a user with documents/passages for relevance judgment and then extracting terms from the judged documents or passages to expand the initial query.",
                "It is an indirect way of seeking users assistance for query model construction, in the sense that the refined query model (based on terms) is learned through feedback documents/passages, which are high-level structures of terms.",
                "It has the disadvantage that irrelevant terms, which occur along with relevant ones in the judged content, may be erroneously used for query expansion, causing undesired effects.",
                "For example, for the TREC query Hubble telescope achievements, when a relevant document talks more about the telescopes repair than its discoveries, irrelevant terms such as spacewalk can be added into the modified query.",
                "We can consider a more direct way to involve a user in query model improvement, without an intermediary step of document feedback that can introduce noise.",
                "The idea is to present a (reasonable) number of individual terms to the user and ask him/her to judge the relevance of each term or directly specify their probabilities in the query model.",
                "This strategy has been discussed in [15], but to our knowledge, it has not been seriously studied in existing language modeling literature.",
                "Compared to traditional relevance feedback, this term-based approach to interactive query model refinement has several advantages.",
                "First, the user has better control of the final query model through direct manipulation of terms: he/she can dictate which terms are relevant, irrelevant, and possibly, to what degree.",
                "This avoids the risk of bringing unwanted terms into the query model, although sometimes the user introduces low-quality terms.",
                "Second, because a term takes less time to judge than a documents full text or summary, and as few as around 20 presented terms can bring significant improvement in retrieval performance (as we will show later), term feedback makes it faster to gather user feedback.",
                "This is especially helpful for <br>interactive adhoc search</br>.",
                "Third, sometimes there are no relevant documents in the top N of the initially retrieved results if the topic is hard.",
                "This is often true when N is constrained to be small, which arises from the fact that the user is unwilling to judge too many documents.",
                "In this case, relevance feedback is useless, as no relevant document can be leveraged on, but term feedback is still often helpful, by allowing relevant terms to be picked from irrelevant documents.",
                "During our participation in the TREC 2005 HARD Track and continued study afterward, we explored how to exploit term feedback from the user to construct improved query models for information retrieval in the language modeling approach.",
                "We identified two key subtasks of term-based feedback, i.e., pre-feedback presentation term selection and post-feedback query model construction, with effective algorithms developed for both.",
                "We imposed a secondary cluster structure on terms and found that a cluster view sheds additional insight into the users information need, and provides a good way of utilizing term feedback.",
                "Through experiments we found that term feedback improves significantly over the nonfeedback baseline, even though the user often makes mistakes in relevance judgment.",
                "Among our algorithms, the one with best retrieval performance is TCFB, the combination of TFB, the direct term feedback algorithm, and CFB, the cluster-based feedback algorithm.",
                "We also varied the number of feedback terms and observed reasonable improvement even at low numbers.",
                "Finally, by comparing term feedback with document-level feedback, we found it to be a viable alternative to the latter with competitive retrieval performance.",
                "The rest of the paper is organized as follows.",
                "Section 2 discusses some related work.",
                "Section 4 outlines our general approach to term feedback.",
                "We present our method for presentation term selection in Section 3 and algorithms for query model construction in Section 5.",
                "The experiment results are given in Section 6.",
                "Section 7 concludes this paper. 2.",
                "RELATED WORK Relevance feedback[17, 19] has long been recognized as an effective method for improving retrieval performance.",
                "Normally, the top N documents retrieved using the original query are presented to the user for judgment, after which terms are extracted from the judged relevant documents, weighted by their potential of attracting more relevant documents, and added into the query model.",
                "The expanded query usually represents the users information need better than the original one, which is often just a short keyword query.",
                "A second iteration of retrieval using this modified query usually produces significant increase in retrieval accuracy.",
                "In cases where true relevance judgment is unavailable and all top N documents are assumed to be relevant, it is called blind or pseudo feedback[5, 16] and usually still brings performance improvement.",
                "Because document is a large text unit, when it is used for relevance feedback many irrelevant terms can be introduced into the feedback process.",
                "To overcome this, passage feedback is proposed and shown to improve feedback performance[1, 23].",
                "A more direct solution is to ask the user for their relevance judgment of feedback terms.",
                "For example, in some relevance feedback systems such as [12], there is an interaction step that allows the user to add or remove expansion terms after they are automatically extracted from relevant documents.",
                "This is categorized as interactive query expansion, where the original query is augmented with user-provided terms, which can come from direct user input (free-form text or keywords)[22, 7, 10] or user selection of system-suggested terms (using thesauri[6, 22] or extracted from feedback documents[6, 22, 12, 4, 7]).",
                "In many cases term relevance feedback has been found to effectively improve retrieval performance[6, 22, 12, 4, 10].",
                "For example, the study in [12] shows that the user prefers to have explicit knowledge and direct control of which terms are used for query expansion, and the penetrable interface that provides this freedom is shown to perform better than other interfaces.",
                "However, in some other cases there is no significant benefit[3, 14], even if the user likes interacting with expansion terms.",
                "In a simulated study carried out in [18], the author compares the retrieval performance of interactive query expansion and automatic query expansion with a simulated study, and suggests that the potential benefits of the former can be hard to achieve.",
                "The user is found to be not good at identifying useful terms for query expansion, when a simple term presentation interface is unable to provide sufficient semantic context of the feedback terms.",
                "Our work differs from the previous ones in two important aspects.",
                "First, when we choose terms to present to the user for relevance judgment, we not only consider single-term value (e.g., the relative frequency of a term in the top documents, which can be measured by metrics such as Robertson Selection Value and Simplified Kullback-Leibler Distance as listed in [24]), but also examine the cluster structure of the terms, so as to produce a balanced coverage of the different topic aspects.",
                "Second, with the language modelling framework, we allow an elaborate construction of the updated query model, by setting different probabilities for different terms based on whether it is a query term, its significance in the top documents, and its cluster membership.",
                "Although techniques for adjusting query term weights exist for vector space models[17] and probablistic relevance models[9], most of the aforementioned works do not use them, choosing to just append feedback terms to the original query (thus using equal weights for them), which can lead to poorer retrieval performance.",
                "The combination of the two aspects allows our method to perform much better than the baseline.",
                "The usual way for feedback term presentation is just to display the terms in a list.",
                "There have been some works on alternative user interfaces. [8] arranges terms in a hierarchy, and [11] compares three different interfaces, including terms + checkboxes, terms + context (sentences) + checkboxes, sentences + input text box.",
                "In both studies, however, there is no significant performance difference.",
                "In our work we adopt the simplest approach of terms + checkboxes.",
                "We focus on term presentation and query model construction from feedback terms, and believe using contexts to improve feedback term quality should be orthogonal to our method. 3.",
                "GENERAL APPROACH We follow the language modeling approach, and base our method on the KL-divergence retrieval model proposed in [25].",
                "With this model, the retrieval task involves estimating a query language model θq from a given query, a document language model θd from each document, and calculating their KL-divergence D(θq||θd), which is then used to score the documents. [25] treats relevance feedback as a query model re-estimation problem, i.e., computing an updated query model θq given the original query text and the extra evidence carried by the judged relevant documents.",
                "We adopt this view, and cast our task as updating the query model from user term feedback.",
                "There are two key subtasks here: First, how to choose the best terms to present to the user for judgment, in order to gather maximal evidence about the users information need.",
                "Second, how to compute an updated query model based on this term feedback evidence, so that it captures the users information need and translates into good retrieval performance. 4.",
                "PRESENTATION TERM SELECTION Proper selection of terms to be presented to the user for judgment is crucial to the success of term feedback.",
                "If the terms are poorly chosen and there are few relevant ones, the user will have a hard time looking for useful terms to help clarify his/her information need.",
                "If the relevant terms are plentiful, but all concentrate on a single aspect of the query topic, then we will only be able to get feedback on that aspect and missing others, resulting in a breadth loss in retrieved results.",
                "Therefore, it is important to carefully select presentation terms to maximize expected gain from user feedback, i.e., those that can potentially reveal most evidence of the users information need.",
                "This is similar to active feedback[21], which suggests that a retrieval system should actively probe the users information need, and in the case of relevance feedback, the feedback documents should be chosen to maximize learning benefits (e.g. diversely so as to increase coverage).",
                "In our approach, the top N documents from an initial retrieval using the original query form the source of feedback terms: all terms that appear in them are considered candidates to present to the user.",
                "These documents serve as pseudo-feedback, since they provide a much richer context than the original query (usually very short), while the user is not asked to judge their relevance.",
                "Due to the latter reason, it is possible to make N quite large (e.g., in our experiments we set N = 60) to increase its coverage of different aspects in the topic.",
                "The simplest way of selecting feedback terms is to choose the most frequent M terms from the N documents.",
                "This method, however, has two drawbacks.",
                "First, a lot of common noisy terms will be selected due to their high frequencies in the document collection, unless a stop-word list is used for filtering.",
                "Second, the presentation list will tend to be filled by terms from major aspects of the topic; those from a minor aspect are likely to be missed due to their relatively low frequencies.",
                "We solve the above problems by two corresponding measures.",
                "First, we introduce a background model θB that is estimated from collection statistics and explains the common terms, so that they are much less likely to appear in the presentation list.",
                "Second, the terms are selected from multiple clusters in the pseudo-feedback documents, to ensure sufficient representation of different aspects of the topic.",
                "We rely on the mixture multinomial model, which is used for theme discovery in [26].",
                "Specifically, we assume the N documents contain K clusters {Ci| i = 1, 2, · · · K}, each characterized by a multinomial word distribution (also known as unigram language model) θi and corresponding to an aspect of the topic.",
                "The documents are regarded as sampled from a mixture of K + 1 components, including the K clusters and the background model: p(w|d) = λBp(w|θB) + (1 − λB) K i=1 πd,ip(w|θi) where w is a word, λB is the mixture weight for the background model θB, and πd,i is the document-specific mixture weight for the i-th cluster model θi.",
                "We then estimate the cluster models by maximizing the probability of the pseudo-feedback documents being generated from the multinomial mixture model: log p(D|Λ) = d∈D w∈V c(w; d) log p(w|d) where D = {di| i = 1, 2, · · · N} is the set of the N documents, V is the vocabulary, c(w; d) is ws frequency in d and Λ = {θi| i = 1, 2, · · · K} ∪ {πdij | i = 1, 2, · · · N, j = 1, 2, · · · K} is the set of model parameters to estimate.",
                "The cluster models can be efficiently estimated using the Expectation-Maximization (EM) algorithm.",
                "For its details, we refer the reader to [26].",
                "Table 1 shows the cluster models for TREC query Transportation tunnel disasters (K = 3).",
                "Note that only the middle cluster is relevant.",
                "Table 1: Cluster models for topic 363 Transportation tunnel disasters Cluster 1 Cluster 2 Cluster 3 tunnel 0.0768 tunnel 0.0935 tunnel 0.0454 transport 0.0364 fire 0.0295 transport 0.0406 traffic 0.0206 truck 0.0236 toll 0.0166 railwai 0.0186 french 0.0220 amtrak 0.0153 harbor 0.0146 smoke 0.0157 train 0.0129 rail 0.0140 car 0.0154 airport 0.0122 bridg 0.0139 italian 0.0152 turnpik 0.0105 kilomet 0.0136 firefight 0.0144 lui 0.0095 truck 0.0133 blaze 0.0127 jersei 0.0093 construct 0.0131 blanc 0.0121 pass 0.0087 · · · · · · · · · From each of the K estimated clusters, we choose the L = M/K terms with highest probabilities to form a total of M presentation terms.",
                "If a term happens to be in top L in multiple clusters, we assign it to the cluster where it has highest probability and let the other clusters take one more term as compensation.",
                "We also filter out terms in the original query text because they tend to always be relevant when the query is short.",
                "The selected terms are then presented to the user for judgment.",
                "A sample (completed) feedback form is shown in Figure 1.",
                "In this study we only deal with binary judgment: a presented term is by default unchecked, and a user may check it to indicate relevance.",
                "We also do not explicitly exploit negative feedback (i.e., penalizing irrelevant terms), because with binary feedback an unchecked term is not necessarily irrelevant (maybe the user is unsure about its relevance).",
                "We could ask the user for finer judgment (e.g., choosing from highly relevant, somewhat relevant, do not know, somewhat irrelevant and highly irrelevant), but binary feedback is more compact, taking less space to display and less user effort to make judgment. 5.",
                "ESTIMATING QUERY MODELS FROM TERM FEEDBACK In this section, we present several algorithms for exploiting term feedback.",
                "The algorithms take as input the original query q, the clusters {θi} as generated by the theme discovery algorithm, the set of feedback terms T and their relevance judgment R, and outputs an updated query language model θq that makes best use of the feedback evidence to capture the users information need.",
                "First we describe our notations: • θq: The original query model, derived from query terms only: p(w|θq) = c(w; q) |q| where c(w; q) is the count of w in q, and |q| = w∈q c(w; q) is the query length. • θq : The updated query model which we need to estimate from term feedback. • θi (i = 1, 2, . . .",
                "K): The unigram language model of cluster Ci, as estimated using the theme discovery algorithm. • T = {ti,j} (i = 1 . . .",
                "K, j = 1 . . .",
                "L): The set of terms presented to the user for judgment. ti,j is the j-th term chosen from cluster Ci. • R = {δw|w ∈ T}: δw is an indicator variable that is 1 if w is judged relevant or 0 otherwise. 5.1 TFB (Direct Term Feedback) This is a straight-forward form of term feedback that does not involve any secondary structure.",
                "We give a weight of 1 to terms judged relevant by the user, a weight of μ to query terms, zero weight to other terms, and then apply normalization: p(w|θq ) = δw + μ c(w; q) w ∈T δw + μ|q| where w ∈T δw is the total number of terms that are judged relevant.",
                "We call this method TFB (direct Term FeedBack).",
                "If we let μ = 1, this approach is equivalent to appending the relevant terms after the original query, which is what standard query expansion (without term reweighting) does.",
                "If we set μ > 1, we are putting more emphasis on the query terms than the checked ones.",
                "Note that the result model will be more biased toward θq if the original query is long or the user feedback is weak, which makes sense, as we can trust more on the original query in either case.",
                "Figure 1: Filled clarification form for Topic 363 363 transportation tunnel disasters Please select all terms that are relevant to the topic. traffic railway harbor rail bridge kilometer construct swiss cross link kong hong river project meter shanghai fire truck french smoke car italian firefights blaze blanc mont victim franc rescue driver chamonix emerge toll amtrak train airport turnpike lui jersey pass rome z center electron road boston speed bu submit 5.2 CFB (Cluster Feedback) Here we exploit the cluster structure that played an important role when we selected the presentation terms.",
                "The clusters represent different aspects of the query topic, each of which may or may not be relevant.",
                "If we are able to identify the relevant clusters, we can combine them to generate a query model that is good at discovering documents belonging to these clusters (instead of the irrelevant ones).",
                "We could ask the user to directly judge the relevance of a cluster after viewing representative terms in that cluster, but this would sometimes be a difficult task for the user, who has to guess the semantics of a cluster via its set of terms, which may not be well connected to one another due to a lack of context.",
                "Therefore, we propose to learn cluster feedback indirectly, inferring the relevance of a cluster through the relevance of its feedback terms.",
                "Because each cluster has an equal number of terms presented to the user, the simplest measure of a clusters relevance is the number of terms that are judged relevant in it.",
                "Intuitively, the more terms are marked relevant in a cluster, the closer the cluster is to the query topic, and the more the cluster should participate in query modification.",
                "If we combine the cluster models using weights determined this way and then interpolate with the original query model, we get the following formula for query updating, which we call CFB (Cluster FeedBack): p(w|θq ) = λp(w|θq) + (1 − λ) K i=1 L j=1 δti,j K k=1 L j=1 δtk,j p(w|θi) where L j=1 δti,j is the number of relevant terms in cluster Ci, and K k=1 L j=1 δtk,j is the total number of relevant terms.",
                "We note that when there is only one cluster (K = 1), the above formula degenerates to p(w|θq ) = λp(w|θq) + (1 − λ)p(w|θ1) which is merely pseudo-feedback of the form proposed in [25]. 5.3 TCFB (Term-cluster Feedback) TFB and CFB both have their drawbacks.",
                "TFB assigns non-zero probabilities to the presented terms that are marked relevant, but completely ignores (a lot more) others, which may be left unchecked due to the users ignorance, or simply not included in the presentation list, but we should be able to infer their relevance from the checked ones.",
                "For example, in Figure 1, since as many as 5 terms in the middle cluster (the third and fourth columns) are checked, we should have high confidence in the relevance of other terms in that cluster.",
                "CFB remedies TFBs problem by treating the terms in a cluster collectively, so that unchecked/unpresented terms receive weights when presented terms in their clusters are judged as relevant, but it does not distinguish which terms in a cluster are presented or judged.",
                "Intuitively, the judged relevant terms should receive larger weights because they are explicitly indicated as relevant by the user.",
                "Therefore, we try to combine the two methods, hoping to get the best out of both.",
                "We do this by interpolating the TFB model with the CFB model, and call it TCFB: p(w|θq ) = αp(w|θqT F B ) + (1 − α)p(w|θqCF B ) 6.",
                "EXPERIMENTS In this section, we describe our experiment results.",
                "We first describe our experiment setup and present an overview of various methods performance.",
                "Then we discuss the effects of varying the parameter setting in the algorithms, as well as the number of presentation terms.",
                "Next we analyze user term feedback behavior and its relation to retrieval performance.",
                "Finally we compare term feedback to relevance feedback and show that it has its particular advantage. 6.1 Experiment Setup and Basic Results We took the opportunity of TREC 2005 HARD Track[2] for the evaluation of our algorithms.",
                "The tracks used the AQUAINT collection, a 3GB corpus of English newswire text.",
                "The topics included 50 ones previously known to be hard, i.e. with low retrieval performance.",
                "It is for these hard topics that user feedback is most helpful, as it can provide information to disambiguate the queries; with easy topics the user may be unwilling to spend efforts for feedback if the automatic retrieval results are good enough.",
                "Participants of the track were able to submit custom-designed clarification forms (CF) to solicit feedback from human assessors provided by Table 2: Retrieval performance for different methods and CF types.",
                "The last row is the percentage of MAP improvement over the baseline.",
                "The parameter settings μ = 4, λ = 0.1, α = 0.3 are near optimal.",
                "Baseline TFB1C TFB3C TFB6C CFB1C CFB3C CFB6C TCFB1C TCFB3C TCFB6C MAP 0.219 0.288 0.288 0.278 0.254 0.305 0.301 0.274 0.309 0.304 Pr@30 0.393 0.467 0.475 0.457 0.399 0.480 0.473 0.431 0.491 0.473 RR 4339 4753 4762 4740 4600 4907 4872 4767 4947 4906 % 0% 31.5% 31.5% 26.9% 16.0% 39.3% 37.4% 25.1% 41.1% 38.8% Table 3: MAP variation with the number of presented terms. # terms TFB1C TFB3C TFB6C CFB3C CFB6C TCFB3C TCFB6C 6 0.245 0.240 0.227 0.279 0.279 0.281 0.274 12 0.261 0.261 0.242 0.299 0.286 0.297 0.281 18 0.275 0.274 0.256 0.301 0.282 0.300 0.286 24 0.276 0.281 0.265 0.303 0.292 0.305 0.292 30 0.280 0.285 0.270 0.304 0.296 0.307 0.296 36 0.282 0.288 0.272 0.307 0.297 0.309 0.297 42 0.283 0.288 0.275 0.306 0.298 0.309 0.300 48 0.288 0.288 0.278 0.305 0.301 0.309 0.303 NIST.",
                "We designed three sets of clarification forms for term feedback, differing in the choice of K, the number of clusters, and L, the number of presented terms from each cluster.",
                "They are: 1× 48, a big cluster with 48 terms, 3 × 16, 3 clusters with 16 terms each, and 6 × 8, 6 clusters with 8 terms each.",
                "The total number of presented terms (M) is fixed at 48, so by comparing the performance of different types of clarification forms we can know the effects of different degree of clustering.",
                "For each topic, an assessor would complete the forms ordered by 6 × 8, 1 × 48 and 3 × 16, spending up to three minutes on each form.",
                "The sample clarification form shown in Figure 1 is of type 3 × 16.",
                "It is a simple and compact interface in which the user can check relevant terms.",
                "The form is self-explanatory; there is no need for extra user training on how to use it.",
                "Our initinal queries are constructed only using the topic title descriptions, which are on average 2.7 words in length.",
                "As our baseline we use the KL divergence retrieval method implemented in the Lemur Toolkit1 with 5 pseudo-feedback documents.",
                "We stem the terms, choose Dirichlet smoothing with a prior of 2000, and truncate query language models to 50 terms (these settings are used throughout the experiments).",
                "For all other parameters we use Lemurs default settings.",
                "The baseline turns out to perform above average among the track participants.",
                "After an initial run using this baseline retrieval method, we take the top 60 documents for each topic and apply the theme discovery algorithm to output the clusters (1, 3, or 6 of them), based on which we generate clarification forms.",
                "After user feedback is received, we run the term feedback algorithms (TFB, CFB or TCFB) to estimate updated query models, which are then used for a second iteration of retrieval.",
                "We evaluate the different retrieval methods performance on their rankings of the top 1000 documents.",
                "The evaluation metrics we adopt include mean average (non-interpolated) precision (MAP), precision at top 30 (Pr@30) and total relevant retrieved (RR).",
                "Table 2 shows the performance of various methods and configurations of K × L. The suffixes (1C, 3C, 6C) after TFB,CFB,TCFB stand for the number of clusters (K).",
                "For example, TCFB3C means the TCFB method on the 3 × 16 clarification forms.",
                "From Table 2 we can make the following observations: 1 http://www.lemurproject.com 1.",
                "All methods perform considerably better than the pseudofeedback baseline, with TCFB3C achieving a highest 41.1% improvement in MAP, indicating significant contribution of term feedback for clarification of the users information need.",
                "In other words, term feedback is truly helpful for improving retrieval accuracy. 2.",
                "For TFB, the performance is almost equal on the 1 × 48 and 3 × 16 clarification forms in terms of MAP (although the latter is slightly better in Pr@30 and RR), and a little worse on the 6 × 8 ones. 3.",
                "Both CFB3C and CFB6C perform better than their TFB counterparts in all three metrics, suggesting that feedback on a secondary cluster structure is indeed beneficial.",
                "CFB1C is actually worse because it cannot adjust the weight of its (single) cluster from term feedback and it is merely pseudofeedback. 4.",
                "Although TCFB is just a simple mixture of TFB and CFB by interpolation, it is able to outperform both.",
                "This supports our speculation that TCFB overcomes the drawbacks of TFB (paying attention only to checked terms) and CFB (not distinguishing checked and unchecked terms in a cluster).",
                "Except for TCFB6C v.s.",
                "CFB6C, the performance advantage of TCFB over TFB/CFB is significant at p < 0.05 using the Wilcoxon signed rank test.",
                "This is not true in the case of TFB v.s.",
                "CFB, each of which is better than the other in nearly half of the topics. 6.2 Reduction of Presentation Terms In some situations we may have to reduce the number of presentation terms due to limits in display space or user feedback efforts.",
                "It is interesting to know whether our algorithms performance deteriorates when the user is presented with fewer terms.",
                "Because the presentation terms within each cluster are generated in decreasing order of their frequencies, the presentation list forms a subset of the original one if its size is reduced2 .",
                "Therefore, we can easily simulate what happens when the number of presentation terms decreases 2 There are complexities arising from terms appearing in top L of multiple clusters, but these are exceptions from M to M : we will keep all judgments of the top L = M /K terms in each cluster and discard those of others.",
                "Table 3 shows the performance of various algorithms as the number of presentation terms ranges from 6 to 48.",
                "We find that the performance of TFB is more susceptible to presentation term reduction than that of CFB or TCFB.",
                "For example, at 12 terms the MAP of TFB3C is 90.6% of that at 48 terms, while the numbers for CFB3C and TCFB3C are 98.0% and 96.1% respectively.",
                "We conjecture the reason to be that while TFBs performance heavily depends on how many good terms are chosen for query expansion, CFB only needs a rough estimate of cluster weights to work.",
                "Also, the 3 × 16 clarification forms seem to be more robust than the 6 × 8 ones: at 12 terms the MAP of TFB6C is 87.1% of that at 48 terms, lower than 90.6% for TFB3C.",
                "Similarly, for CFB it is 95.0% against 98.0%.",
                "This is natual, as for a large cluster number of 6, it is easier to get into the situation where each cluster gets too few presentation terms to make topic diversification useful.",
                "Overall, we are surprised to see that the algorithms are still able to perform reasonably well when the number of presentation terms is small.",
                "For example, at only 12 terms CFB3C (the clarification form is of size 3 × 4) can still improve 36.5% over the baseline, dropping slightly from 39.3% at 48 terms. 6.3 User Feedback Analysis In this part we study several aspects of users term feedback behavior, and whether they are connected to retrieval performance.",
                "Figure 2: Clarification form completion time distributions 0−30 30−60 60−90 90−120 120−150 150−180 0 5 10 15 20 25 30 35 completion time (seconds) #topics 1×48 3×16 6×8 Figure 2 shows the distribution of time needed to complete a clarification form3 .",
                "We see that the user is usually able to finish term feedback within a reasonably short amount of time: for more than half of the topics the clarification form is completed in just 1 minute, and only a small fraction of topics (less than 10% for 1 × 48 and 3 × 16) take more than 2 minutes.",
                "This suggests that term feedback is suitable for interactive ad-hoc retrieval, where a user usually does not want to spend too much time on providing feedback.",
                "We find that a user often makes mistakes when judging term relevance.",
                "Sometimes a relevant term may be left out because its connection to the query topic is not obvious to the user.",
                "Other times a dubious term may be included but turns out to be irrelevant.",
                "Take the topic in Figure 1 for example.",
                "There was a fire disaster in Mont 3 The maximal time is 180 seconds, as the NIST assessor would be forced to submit the form at that moment.",
                "Table 4: Term selection statistics (topic average) CF Type 1 × 48 3 × 16 6 × 8 # checked terms 14.8 13.3 11.2 # rel. terms 15.0 12.6 11.2 # rel. checked terms 7.9 6.9 5.9 precision 0.534 0.519 0.527 recall 0.526 0.548 0.527 Blanc Tunnel between France and Italy in 1999, but the user failed to select such keywords as mont, blanc, french and italian due to his/her ignorance of the event.",
                "Indeed, without proper context it would be hard to make perfect judgment.",
                "What is then, the extent to which the user is good at term feedback?",
                "Does it have serious impact on retrieval performance?",
                "To answer these questions, we need a measure of individual terms true relevance.",
                "We adopt the Simplified KL Divergence metric used in [24] to decide query expansion terms as our term relevance measure: σKLD(w) = p(w|R) log p(w|R) p(w|¬R) where p(w|R) is the probability that a relevant document contains term w, and p(w|¬R) is the probability that an irrelevant document contains w, both of which can be easily computed via maximum likelihood estimate given document-level relevance judgment.",
                "If σKLD(w) > 0, w is more likely to appear in relevant documents than irrelevant ones.",
                "We consider a term relevant if its Simplified KL Divergence value is greater than a certain threshold σ0.",
                "We can then define precision and recall of user term judgment accordingly: precision is the fraction of terms checked by the user that are relevant; recall is the fraction of presented relevant terms that are checked by the user.",
                "Table 4 shows the number of checked terms, relevant terms and relevant checked terms when σ0 is set to 1.0, as well as the precision/recall of user term judgment.",
                "Note that when the clarification forms contain more clusters, fewer terms are checked: 14.8 for 1 × 48, 13.3 for 3 × 16 and 11.2 for 6×8.",
                "Similar pattern holds for relevant terms and relevant checked terms.",
                "There seems to be a trade-off between increasing topic diversity by clustering and losing extra relevant terms: when there are more clusters, each of them gets fewer terms to present, which can hurt a major relevant cluster that contains many relevant terms.",
                "Therefore, it is not always helpful to have more clusters, e.g., TFB6C is actually worse than TFB1C.",
                "The major finding we can make from Table 4 is that the user is not particularly good at identifying relevant terms, which echoes the discovery in [18].",
                "In the case of 3 × 16 clarification forms, the average number of terms checked as relevant by the user is 13.3 per topic, and the average number of relevant terms whose σKLD value exceed 1.0 is 12.6.",
                "The user is able to recognize only 6.9 of these terms on average.",
                "Indeed, the precision and recall of user feedback terms (as defined previously) are far from perfect.",
                "On the other hand, If the user had correctly checked all such relevant terms, the performance of our algorithms would have increased a lot, as shown in Table 5.",
                "We see that TFB gets big improvement when there is an oracle who checks all relevant terms, while CFB meets a bottleneck around MAP of 0.325, since all it does is adjust cluster weights, and when the learned weights are close to being accurate, it cannot benefit more from term feedback.",
                "Also note that TCFB fails to outperform TFB, probably because TFB is sufficiently accurate.",
                "Table 5: Change of MAP when using all (and only) relevant terms (σKLD > 1.0) for feedback. original term feedback relevant term feedback TF1 0.288 0.354 TF3 0.288 0.354 TF6 0.278 0.346 CF3 0.305 0.325 CF6 0.301 0.326 TCF3 0.309 0.345 TCF6 0.304 0.341 6.4 Comparison with Relevance Feedback Now we compare term feedback with document-level relevance feedback, in which the user is presented with the top N documents from an initial retrieval and asked to judge their relevance.",
                "The feedback process is simulated using document relevance judgment from NIST.",
                "We use the mixture model based feedback method proposed in [25], with mixture noise set to 0.95 and feedback coefficient set to 0.9.",
                "Comparative evaluation of relevance feedback against other methods is complicated by the fact that some documents have already been viewed during feedback, so it makes no sense to include them in the retrieval results of the second run.",
                "However, this does not hold for term feedback.",
                "Thus, to make it fair w.r.t. users information gain, if the feedback documents are relevant, they should be kept in the top of the ranking; if they are irrelevant, they should be left out.",
                "Therefore, we use relevance feedback to produce a ranking of top 1000 retrieved documents but with every feedback document excluded, and then prepend the relevant feedback documents at the front.",
                "Table 6 shows the performance of relevance feedback for different values of N and compares it with TCFB3C.",
                "Table 6: Performance of relevance feedback for different number of feedback documents (N).",
                "N MAP Pr@30 RR 5 0.302 0.586 4779 10 0.345 0.670 4916 20 0.389 0.772 5004 TCFB3C 0.309 0.491 4947 We see that the performance of TCFB3C is comparable to that of relevance feedback using 5 documents.",
                "Although it is poorer than when there are 10 feedback documents in terms of MAP and Pr@30, it does retrieve more documents (4947) when going down the ranked list.",
                "We try to compare the quality of automatically inserted terms in relevance feedback with that of manually selected terms in term feedback.",
                "This is done by truncating the relevance feedback modified query model to a size equal to the number of checked terms for the same topic.",
                "We can then compare the terms in the truncated model with the checked terms.",
                "Figure 3 shows the distribution of the terms σKLD scores.",
                "We find that term feedback tends to produce expansion terms of higher quality(those with σKLD > 1) compared to relevance feedback (with 10 feedback documents).",
                "This does not contradict the fact that the latter yields higher retrieval performance.",
                "Actually, when we use the truncated query model instead of the intact one refined from relevance feedback, the MAP is only 0.304.",
                "The truth Figure 3: Comparison of expansion term quality between relevance feedback (with 10 feedback documents) and term feedback (with 3 × 16 CFs) −1−0 0−1 1−2 2−3 3−4 4−5 5−6 0 50 100 150 200 250 300 350 σKLD #terms relevance feedback term feedback is, although there are many unwanted terms in the expanded query model from feedback documents, there are also more relevant terms than what the user can possibly select from the list of presentation terms generated with pseudo-feedback documents, and the positive effects often outweights the negative ones.",
                "We are interested to know under what circumstances term feedback has advantage over relevance feedback.",
                "One such situation is when none of the top N feedback documents is relevant, rendering relevance feedback useless.",
                "This is not infrequent, as one might have thought: out of the 50 topics, there are 13 such cases when N = 5, 10 when N = 10, and still 3 when N = 20.",
                "When this happens, one can only back off to the original retrieval method; the power of relevance feedback is lost.",
                "Surprisingly, in 11 out of 13 such cases where relevance feedback seems impossible, the user is able to check at least 2 relevant terms from the 3 × 16 clarification form (we consider term t to be relevant if σKLD(t) > 1.0).",
                "Furthermore, in 10 out of them TCFB3C outperforms the pseudo-feedback baseline, increasing MAP from 0.076 to 0.146 on average (these are particularly hard topics).",
                "We think that there are two possible explanations for this phenomenon of term feedback being active even when relevance feedback does not work: First, even if none of the top N (suppose it is a small number) documents are relevant, we may still find relevant documents in top 60, which is more inclusive but usually unreachable when people are doing relevance feedback in interactive ad-hoc search, from which we can draw feedback terms.",
                "This is true for topic 367 piracy, where the top 10 feedback documents are all about software piracy, yet there are documents between 10-60 that are about piracy on the seas (which is about the real information need), contributing terms such as pirate, ship for selection in the clarification form.",
                "Second, for some topics, a document needs to meet some special condition in order to be relevant.",
                "The top N documents may be related to the topic, but nonetheless irrelevant.",
                "In this case, we may still extract useful terms from these documents, even if they do not qualify as relevant ones.",
                "For example, in topic 639 consumer online shopping, a document needs to mention what contributes to shopping growth to really match the specified information need, hence none of the top 10 feedback documents are regarded as relevant.",
                "But nevertheless, the feedback terms such as retail, commerce are good for query expansion. 7.",
                "CONCLUSIONS In this paper we studied the use of term feedback for interactive information retrieval in the language modeling approach.",
                "We proposed a cluster-based method for selecting presentation terms as well as algorithms to estimate refined query models from user term feedback.",
                "We saw significant improvement in retrieval accuracy brought by term feedback, in spite of the fact that a user often makes mistakes in relevance judgment that hurts its performance.",
                "We found the best-performing algorithm to be TCFB, which benefits from the combination of directly observed term evidence with TFB and indirectly learned cluster relevance with CFB.",
                "When we reduced the number of presentation terms, term feedback is still able to keep much of its performance gain over the baseline.",
                "Finally, we compared term feedback to document-level relevance feedback, and found that TCFB3Cs performance is on a par with the latter with 5 feedback documents.",
                "We regarded term feedback as a viable alternative to traditional relevance feedback, especially when there are no relevant documents in the top.",
                "We propose to extend our work in several ways.",
                "First, we want to study whether the use of various contexts can help the user to better identify term relevance, while not sacrificing the simplicity and compactness of term feedback.",
                "Second, currently all terms are presented to the user in a single batch.",
                "We could instead consider iterative term feedback, by presenting a small number of terms first, and show more terms after receiving user feedback or stop when the refined query is good enough.",
                "The presented terms should be selected dynamically to maximize learning benefits at any moment.",
                "Third, we have plans to incorporate term feedback into our UCAIR toolbar[20], an Internet Explorer plugin, to make it work for web search.",
                "We are also interested in studying how to combine term feedback with relevance feedback or implicit feedback.",
                "We could, for example, allow the user to dynamically modify terms in a language model learned from feedback documents. 8.",
                "ACKNOWLEDGMENT This work is supported in part by the National Science Foundation grants IIS-0347933 and IIS-0428472. 9.",
                "REFERENCES [1] J. Allan.",
                "Relevance feedback with too much data.",
                "In Proceedings of the 18th annual international ACM SIGIR conference on research and development in information retrieval, pages 337-343, 1995. [2] J. Allan.",
                "HARD track overview in TREC 2005 - High Accuracy Retrieval from Documents.",
                "In The Fourteenth Text REtrieval Conference, 2005. [3] P. Anick.",
                "Using terminological feedback for web search refinement: a log-based study.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 88-95, 2003. [4] P. G. Anick and S. Tipirneni.",
                "The paraphrase search assistant: terminological feedback for iterative information seeking.",
                "In Proceedings of the 22nd annual international ACM SIGIR conference on research and development in information retrieval, pages 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan, and A. Singhal.",
                "Automatic query expansion using SMART.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [6] D. Harman.",
                "Towards interactive query expansion.",
                "In Proceedings of the 11th annual international ACM SIGIR conference on research and development in information retrieval, pages 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wade, and J. Allan.",
                "UMass at TREC 2003: HARD and QA.",
                "In TREC, pages 715-725, 2003. [8] H. Joho, C. Coverson, M. Sanderson, and M. Beaulieu.",
                "Hierarchical presentation of expansion terms.",
                "In Proceedings of the 2002 ACM symposium on applied computing, pages 645-649, 2002. [9] K. S. Jones, S. Walker, and S. E. Robertson.",
                "A probabilistic model of information retrieval: development and status.",
                "Technical Report 446, Computer Laboratory, University of Cambridge, 1998. [10] D. Kelly, V. D. Dollu, and X. Fu.",
                "The loquacious user: a document-independent source of terms for query expansion.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 457-464, 2005. [11] D. Kelly and X. Fu.",
                "Elicitation of term relevance feedback: an investigation of term source and context.",
                "In Proceedings of the 29th annual international ACM SIGIR conference on research and development in information retrieval, 2006. [12] J. Koenemann and N. Belkin.",
                "A case for interaction: A study of interactive information retrieval behavior and effectiveness.",
                "In Proceedings of the SIGCHI conference on human factors in computing systems, pages 205-212, 1996. [13] V. Lavrenko and W. B. Croft.",
                "Relevance-based language models.",
                "In Research and Development in Information Retrieval, pages 120-127, 2001. [14] Y. Nemeth, B. Shapira, and M. Taeib-Maimon.",
                "Evaluation of the real and perceived value of automatic and interactive query expansion.",
                "In Proceedings of the 27th annual international ACM SIGIR conference on research and development in information retrieval, pages 526-527, 2004. [15] J. Ponte.",
                "A Language Modeling Approach to Information Retrieval.",
                "PhD thesis, University of Massachusetts at Amherst, 1998. [16] S. E. Robertson, S. Walker, S. Jones, M. Beaulieu, and M. Gatford.",
                "Okapi at TREC-3.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [17] J. Rocchio.",
                "Relevance feedback in information retrieval.",
                "In The SMART retrieval system, pages 313-323. 1971. [18] I. Ruthven.",
                "Re-examining the potential effectiveness of interactive query expansion.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 213-220, 2003. [19] G. Salton and C. Buckley.",
                "Improving retrieval performance by relevance feedback.",
                "Journal of the American Society for Information Science, 41:288-297, 1990. [20] X. Shen, B. Tan, and C. Zhai.",
                "Implicit user modeling for personalized search.",
                "In Proceedings of the 14th ACM international conference on information and knowledge management, pages 824-831, 2005. [21] X. Shen and C. Zhai.",
                "Active feedback in ad-hoc information retrieval.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 59-66, 2005. [22] A. Spink.",
                "Term relevance feedback and query expansion: relation to design.",
                "In Proceedings of the 17th annual international ACM SIGIR conference on research and development in information retrieval, pages 81-90, 1994. [23] J. Xu and W. B. Croft.",
                "Query expansion using local and global document analysis.",
                "In Proceedings of the 19th annual international ACM SIGIR conference on research and development in information retrieval, pages 4-11, 1996. [24] H. Zaragoza, N. Craswell, M. Taylor, S. Saria, and S. Robertson.",
                "Microsoft cambridge at TREC-13: Web and HARD tracks.",
                "In Proceedings of the 13th Text REtrieval Conference, 2004. [25] C. Zhai and J. Lafferty.",
                "Model-based feedback in the language modeling approach to information retrieval.",
                "In Proceedings of the tenth international conference on information and knowledge management, pages 403-410, 2001. [26] C. Zhai, A. Velivelli, and B. Yu.",
                "A cross-collection mixture model for comparative text mining.",
                "In Proceedings of the tenth ACM SIGKDD international conference on knowledge discovery and data mining, pages 743-748, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Esto es especialmente útil para la \"búsqueda interactiva de ADHOC\"."
            ],
            "translated_text": "",
            "candidates": [
                "búsqueda interactiva adhoc",
                "búsqueda interactiva de ADHOC"
            ],
            "error": []
        },
        "retrieval performance": {
            "translated_key": "rendimiento de la recuperación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Term Feedback for Information Retrieval with Language Models Bin Tan† , Atulya Velivelli‡ , Hui Fang† , ChengXiang Zhai† Dept.",
                "of Computer Science† , Dept. of Electrical and Computer Engineering‡ University of Illinois at Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.edu ABSTRACT In this paper we study term-based feedback for information retrieval in the language modeling approach.",
                "With term feedback a user directly judges the relevance of individual terms without interaction with feedback documents, taking full control of the query expansion process.",
                "We propose a cluster-based method for selecting terms to present to the user for judgment, as well as effective algorithms for constructing refined query language models from user term feedback.",
                "Our algorithms are shown to bring significant improvement in retrieval accuracy over a non-feedback baseline, and achieve comparable performance to relevance feedback.",
                "They are helpful even when there are no relevant documents in the top.",
                "Categories and Subject Descriptors H.3.3 [Information Search and Retrieval]: Retrieval models General Terms Algorithms 1.",
                "INTRODUCTION In the language modeling approach to information retrieval, feedback is often modeled as estimating an improved query model or relevance model based on a set of feedback documents [25, 13].",
                "This is in line with the traditional way of doing relevance feedback - presenting a user with documents/passages for relevance judgment and then extracting terms from the judged documents or passages to expand the initial query.",
                "It is an indirect way of seeking users assistance for query model construction, in the sense that the refined query model (based on terms) is learned through feedback documents/passages, which are high-level structures of terms.",
                "It has the disadvantage that irrelevant terms, which occur along with relevant ones in the judged content, may be erroneously used for query expansion, causing undesired effects.",
                "For example, for the TREC query Hubble telescope achievements, when a relevant document talks more about the telescopes repair than its discoveries, irrelevant terms such as spacewalk can be added into the modified query.",
                "We can consider a more direct way to involve a user in query model improvement, without an intermediary step of document feedback that can introduce noise.",
                "The idea is to present a (reasonable) number of individual terms to the user and ask him/her to judge the relevance of each term or directly specify their probabilities in the query model.",
                "This strategy has been discussed in [15], but to our knowledge, it has not been seriously studied in existing language modeling literature.",
                "Compared to traditional relevance feedback, this term-based approach to interactive query model refinement has several advantages.",
                "First, the user has better control of the final query model through direct manipulation of terms: he/she can dictate which terms are relevant, irrelevant, and possibly, to what degree.",
                "This avoids the risk of bringing unwanted terms into the query model, although sometimes the user introduces low-quality terms.",
                "Second, because a term takes less time to judge than a documents full text or summary, and as few as around 20 presented terms can bring significant improvement in <br>retrieval performance</br> (as we will show later), term feedback makes it faster to gather user feedback.",
                "This is especially helpful for interactive adhoc search.",
                "Third, sometimes there are no relevant documents in the top N of the initially retrieved results if the topic is hard.",
                "This is often true when N is constrained to be small, which arises from the fact that the user is unwilling to judge too many documents.",
                "In this case, relevance feedback is useless, as no relevant document can be leveraged on, but term feedback is still often helpful, by allowing relevant terms to be picked from irrelevant documents.",
                "During our participation in the TREC 2005 HARD Track and continued study afterward, we explored how to exploit term feedback from the user to construct improved query models for information retrieval in the language modeling approach.",
                "We identified two key subtasks of term-based feedback, i.e., pre-feedback presentation term selection and post-feedback query model construction, with effective algorithms developed for both.",
                "We imposed a secondary cluster structure on terms and found that a cluster view sheds additional insight into the users information need, and provides a good way of utilizing term feedback.",
                "Through experiments we found that term feedback improves significantly over the nonfeedback baseline, even though the user often makes mistakes in relevance judgment.",
                "Among our algorithms, the one with best <br>retrieval performance</br> is TCFB, the combination of TFB, the direct term feedback algorithm, and CFB, the cluster-based feedback algorithm.",
                "We also varied the number of feedback terms and observed reasonable improvement even at low numbers.",
                "Finally, by comparing term feedback with document-level feedback, we found it to be a viable alternative to the latter with competitive <br>retrieval performance</br>.",
                "The rest of the paper is organized as follows.",
                "Section 2 discusses some related work.",
                "Section 4 outlines our general approach to term feedback.",
                "We present our method for presentation term selection in Section 3 and algorithms for query model construction in Section 5.",
                "The experiment results are given in Section 6.",
                "Section 7 concludes this paper. 2.",
                "RELATED WORK Relevance feedback[17, 19] has long been recognized as an effective method for improving <br>retrieval performance</br>.",
                "Normally, the top N documents retrieved using the original query are presented to the user for judgment, after which terms are extracted from the judged relevant documents, weighted by their potential of attracting more relevant documents, and added into the query model.",
                "The expanded query usually represents the users information need better than the original one, which is often just a short keyword query.",
                "A second iteration of retrieval using this modified query usually produces significant increase in retrieval accuracy.",
                "In cases where true relevance judgment is unavailable and all top N documents are assumed to be relevant, it is called blind or pseudo feedback[5, 16] and usually still brings performance improvement.",
                "Because document is a large text unit, when it is used for relevance feedback many irrelevant terms can be introduced into the feedback process.",
                "To overcome this, passage feedback is proposed and shown to improve feedback performance[1, 23].",
                "A more direct solution is to ask the user for their relevance judgment of feedback terms.",
                "For example, in some relevance feedback systems such as [12], there is an interaction step that allows the user to add or remove expansion terms after they are automatically extracted from relevant documents.",
                "This is categorized as interactive query expansion, where the original query is augmented with user-provided terms, which can come from direct user input (free-form text or keywords)[22, 7, 10] or user selection of system-suggested terms (using thesauri[6, 22] or extracted from feedback documents[6, 22, 12, 4, 7]).",
                "In many cases term relevance feedback has been found to effectively improve <br>retrieval performance</br>[6, 22, 12, 4, 10].",
                "For example, the study in [12] shows that the user prefers to have explicit knowledge and direct control of which terms are used for query expansion, and the penetrable interface that provides this freedom is shown to perform better than other interfaces.",
                "However, in some other cases there is no significant benefit[3, 14], even if the user likes interacting with expansion terms.",
                "In a simulated study carried out in [18], the author compares the <br>retrieval performance</br> of interactive query expansion and automatic query expansion with a simulated study, and suggests that the potential benefits of the former can be hard to achieve.",
                "The user is found to be not good at identifying useful terms for query expansion, when a simple term presentation interface is unable to provide sufficient semantic context of the feedback terms.",
                "Our work differs from the previous ones in two important aspects.",
                "First, when we choose terms to present to the user for relevance judgment, we not only consider single-term value (e.g., the relative frequency of a term in the top documents, which can be measured by metrics such as Robertson Selection Value and Simplified Kullback-Leibler Distance as listed in [24]), but also examine the cluster structure of the terms, so as to produce a balanced coverage of the different topic aspects.",
                "Second, with the language modelling framework, we allow an elaborate construction of the updated query model, by setting different probabilities for different terms based on whether it is a query term, its significance in the top documents, and its cluster membership.",
                "Although techniques for adjusting query term weights exist for vector space models[17] and probablistic relevance models[9], most of the aforementioned works do not use them, choosing to just append feedback terms to the original query (thus using equal weights for them), which can lead to poorer <br>retrieval performance</br>.",
                "The combination of the two aspects allows our method to perform much better than the baseline.",
                "The usual way for feedback term presentation is just to display the terms in a list.",
                "There have been some works on alternative user interfaces. [8] arranges terms in a hierarchy, and [11] compares three different interfaces, including terms + checkboxes, terms + context (sentences) + checkboxes, sentences + input text box.",
                "In both studies, however, there is no significant performance difference.",
                "In our work we adopt the simplest approach of terms + checkboxes.",
                "We focus on term presentation and query model construction from feedback terms, and believe using contexts to improve feedback term quality should be orthogonal to our method. 3.",
                "GENERAL APPROACH We follow the language modeling approach, and base our method on the KL-divergence retrieval model proposed in [25].",
                "With this model, the retrieval task involves estimating a query language model θq from a given query, a document language model θd from each document, and calculating their KL-divergence D(θq||θd), which is then used to score the documents. [25] treats relevance feedback as a query model re-estimation problem, i.e., computing an updated query model θq given the original query text and the extra evidence carried by the judged relevant documents.",
                "We adopt this view, and cast our task as updating the query model from user term feedback.",
                "There are two key subtasks here: First, how to choose the best terms to present to the user for judgment, in order to gather maximal evidence about the users information need.",
                "Second, how to compute an updated query model based on this term feedback evidence, so that it captures the users information need and translates into good <br>retrieval performance</br>. 4.",
                "PRESENTATION TERM SELECTION Proper selection of terms to be presented to the user for judgment is crucial to the success of term feedback.",
                "If the terms are poorly chosen and there are few relevant ones, the user will have a hard time looking for useful terms to help clarify his/her information need.",
                "If the relevant terms are plentiful, but all concentrate on a single aspect of the query topic, then we will only be able to get feedback on that aspect and missing others, resulting in a breadth loss in retrieved results.",
                "Therefore, it is important to carefully select presentation terms to maximize expected gain from user feedback, i.e., those that can potentially reveal most evidence of the users information need.",
                "This is similar to active feedback[21], which suggests that a retrieval system should actively probe the users information need, and in the case of relevance feedback, the feedback documents should be chosen to maximize learning benefits (e.g. diversely so as to increase coverage).",
                "In our approach, the top N documents from an initial retrieval using the original query form the source of feedback terms: all terms that appear in them are considered candidates to present to the user.",
                "These documents serve as pseudo-feedback, since they provide a much richer context than the original query (usually very short), while the user is not asked to judge their relevance.",
                "Due to the latter reason, it is possible to make N quite large (e.g., in our experiments we set N = 60) to increase its coverage of different aspects in the topic.",
                "The simplest way of selecting feedback terms is to choose the most frequent M terms from the N documents.",
                "This method, however, has two drawbacks.",
                "First, a lot of common noisy terms will be selected due to their high frequencies in the document collection, unless a stop-word list is used for filtering.",
                "Second, the presentation list will tend to be filled by terms from major aspects of the topic; those from a minor aspect are likely to be missed due to their relatively low frequencies.",
                "We solve the above problems by two corresponding measures.",
                "First, we introduce a background model θB that is estimated from collection statistics and explains the common terms, so that they are much less likely to appear in the presentation list.",
                "Second, the terms are selected from multiple clusters in the pseudo-feedback documents, to ensure sufficient representation of different aspects of the topic.",
                "We rely on the mixture multinomial model, which is used for theme discovery in [26].",
                "Specifically, we assume the N documents contain K clusters {Ci| i = 1, 2, · · · K}, each characterized by a multinomial word distribution (also known as unigram language model) θi and corresponding to an aspect of the topic.",
                "The documents are regarded as sampled from a mixture of K + 1 components, including the K clusters and the background model: p(w|d) = λBp(w|θB) + (1 − λB) K i=1 πd,ip(w|θi) where w is a word, λB is the mixture weight for the background model θB, and πd,i is the document-specific mixture weight for the i-th cluster model θi.",
                "We then estimate the cluster models by maximizing the probability of the pseudo-feedback documents being generated from the multinomial mixture model: log p(D|Λ) = d∈D w∈V c(w; d) log p(w|d) where D = {di| i = 1, 2, · · · N} is the set of the N documents, V is the vocabulary, c(w; d) is ws frequency in d and Λ = {θi| i = 1, 2, · · · K} ∪ {πdij | i = 1, 2, · · · N, j = 1, 2, · · · K} is the set of model parameters to estimate.",
                "The cluster models can be efficiently estimated using the Expectation-Maximization (EM) algorithm.",
                "For its details, we refer the reader to [26].",
                "Table 1 shows the cluster models for TREC query Transportation tunnel disasters (K = 3).",
                "Note that only the middle cluster is relevant.",
                "Table 1: Cluster models for topic 363 Transportation tunnel disasters Cluster 1 Cluster 2 Cluster 3 tunnel 0.0768 tunnel 0.0935 tunnel 0.0454 transport 0.0364 fire 0.0295 transport 0.0406 traffic 0.0206 truck 0.0236 toll 0.0166 railwai 0.0186 french 0.0220 amtrak 0.0153 harbor 0.0146 smoke 0.0157 train 0.0129 rail 0.0140 car 0.0154 airport 0.0122 bridg 0.0139 italian 0.0152 turnpik 0.0105 kilomet 0.0136 firefight 0.0144 lui 0.0095 truck 0.0133 blaze 0.0127 jersei 0.0093 construct 0.0131 blanc 0.0121 pass 0.0087 · · · · · · · · · From each of the K estimated clusters, we choose the L = M/K terms with highest probabilities to form a total of M presentation terms.",
                "If a term happens to be in top L in multiple clusters, we assign it to the cluster where it has highest probability and let the other clusters take one more term as compensation.",
                "We also filter out terms in the original query text because they tend to always be relevant when the query is short.",
                "The selected terms are then presented to the user for judgment.",
                "A sample (completed) feedback form is shown in Figure 1.",
                "In this study we only deal with binary judgment: a presented term is by default unchecked, and a user may check it to indicate relevance.",
                "We also do not explicitly exploit negative feedback (i.e., penalizing irrelevant terms), because with binary feedback an unchecked term is not necessarily irrelevant (maybe the user is unsure about its relevance).",
                "We could ask the user for finer judgment (e.g., choosing from highly relevant, somewhat relevant, do not know, somewhat irrelevant and highly irrelevant), but binary feedback is more compact, taking less space to display and less user effort to make judgment. 5.",
                "ESTIMATING QUERY MODELS FROM TERM FEEDBACK In this section, we present several algorithms for exploiting term feedback.",
                "The algorithms take as input the original query q, the clusters {θi} as generated by the theme discovery algorithm, the set of feedback terms T and their relevance judgment R, and outputs an updated query language model θq that makes best use of the feedback evidence to capture the users information need.",
                "First we describe our notations: • θq: The original query model, derived from query terms only: p(w|θq) = c(w; q) |q| where c(w; q) is the count of w in q, and |q| = w∈q c(w; q) is the query length. • θq : The updated query model which we need to estimate from term feedback. • θi (i = 1, 2, . . .",
                "K): The unigram language model of cluster Ci, as estimated using the theme discovery algorithm. • T = {ti,j} (i = 1 . . .",
                "K, j = 1 . . .",
                "L): The set of terms presented to the user for judgment. ti,j is the j-th term chosen from cluster Ci. • R = {δw|w ∈ T}: δw is an indicator variable that is 1 if w is judged relevant or 0 otherwise. 5.1 TFB (Direct Term Feedback) This is a straight-forward form of term feedback that does not involve any secondary structure.",
                "We give a weight of 1 to terms judged relevant by the user, a weight of μ to query terms, zero weight to other terms, and then apply normalization: p(w|θq ) = δw + μ c(w; q) w ∈T δw + μ|q| where w ∈T δw is the total number of terms that are judged relevant.",
                "We call this method TFB (direct Term FeedBack).",
                "If we let μ = 1, this approach is equivalent to appending the relevant terms after the original query, which is what standard query expansion (without term reweighting) does.",
                "If we set μ > 1, we are putting more emphasis on the query terms than the checked ones.",
                "Note that the result model will be more biased toward θq if the original query is long or the user feedback is weak, which makes sense, as we can trust more on the original query in either case.",
                "Figure 1: Filled clarification form for Topic 363 363 transportation tunnel disasters Please select all terms that are relevant to the topic. traffic railway harbor rail bridge kilometer construct swiss cross link kong hong river project meter shanghai fire truck french smoke car italian firefights blaze blanc mont victim franc rescue driver chamonix emerge toll amtrak train airport turnpike lui jersey pass rome z center electron road boston speed bu submit 5.2 CFB (Cluster Feedback) Here we exploit the cluster structure that played an important role when we selected the presentation terms.",
                "The clusters represent different aspects of the query topic, each of which may or may not be relevant.",
                "If we are able to identify the relevant clusters, we can combine them to generate a query model that is good at discovering documents belonging to these clusters (instead of the irrelevant ones).",
                "We could ask the user to directly judge the relevance of a cluster after viewing representative terms in that cluster, but this would sometimes be a difficult task for the user, who has to guess the semantics of a cluster via its set of terms, which may not be well connected to one another due to a lack of context.",
                "Therefore, we propose to learn cluster feedback indirectly, inferring the relevance of a cluster through the relevance of its feedback terms.",
                "Because each cluster has an equal number of terms presented to the user, the simplest measure of a clusters relevance is the number of terms that are judged relevant in it.",
                "Intuitively, the more terms are marked relevant in a cluster, the closer the cluster is to the query topic, and the more the cluster should participate in query modification.",
                "If we combine the cluster models using weights determined this way and then interpolate with the original query model, we get the following formula for query updating, which we call CFB (Cluster FeedBack): p(w|θq ) = λp(w|θq) + (1 − λ) K i=1 L j=1 δti,j K k=1 L j=1 δtk,j p(w|θi) where L j=1 δti,j is the number of relevant terms in cluster Ci, and K k=1 L j=1 δtk,j is the total number of relevant terms.",
                "We note that when there is only one cluster (K = 1), the above formula degenerates to p(w|θq ) = λp(w|θq) + (1 − λ)p(w|θ1) which is merely pseudo-feedback of the form proposed in [25]. 5.3 TCFB (Term-cluster Feedback) TFB and CFB both have their drawbacks.",
                "TFB assigns non-zero probabilities to the presented terms that are marked relevant, but completely ignores (a lot more) others, which may be left unchecked due to the users ignorance, or simply not included in the presentation list, but we should be able to infer their relevance from the checked ones.",
                "For example, in Figure 1, since as many as 5 terms in the middle cluster (the third and fourth columns) are checked, we should have high confidence in the relevance of other terms in that cluster.",
                "CFB remedies TFBs problem by treating the terms in a cluster collectively, so that unchecked/unpresented terms receive weights when presented terms in their clusters are judged as relevant, but it does not distinguish which terms in a cluster are presented or judged.",
                "Intuitively, the judged relevant terms should receive larger weights because they are explicitly indicated as relevant by the user.",
                "Therefore, we try to combine the two methods, hoping to get the best out of both.",
                "We do this by interpolating the TFB model with the CFB model, and call it TCFB: p(w|θq ) = αp(w|θqT F B ) + (1 − α)p(w|θqCF B ) 6.",
                "EXPERIMENTS In this section, we describe our experiment results.",
                "We first describe our experiment setup and present an overview of various methods performance.",
                "Then we discuss the effects of varying the parameter setting in the algorithms, as well as the number of presentation terms.",
                "Next we analyze user term feedback behavior and its relation to <br>retrieval performance</br>.",
                "Finally we compare term feedback to relevance feedback and show that it has its particular advantage. 6.1 Experiment Setup and Basic Results We took the opportunity of TREC 2005 HARD Track[2] for the evaluation of our algorithms.",
                "The tracks used the AQUAINT collection, a 3GB corpus of English newswire text.",
                "The topics included 50 ones previously known to be hard, i.e. with low <br>retrieval performance</br>.",
                "It is for these hard topics that user feedback is most helpful, as it can provide information to disambiguate the queries; with easy topics the user may be unwilling to spend efforts for feedback if the automatic retrieval results are good enough.",
                "Participants of the track were able to submit custom-designed clarification forms (CF) to solicit feedback from human assessors provided by Table 2: <br>retrieval performance</br> for different methods and CF types.",
                "The last row is the percentage of MAP improvement over the baseline.",
                "The parameter settings μ = 4, λ = 0.1, α = 0.3 are near optimal.",
                "Baseline TFB1C TFB3C TFB6C CFB1C CFB3C CFB6C TCFB1C TCFB3C TCFB6C MAP 0.219 0.288 0.288 0.278 0.254 0.305 0.301 0.274 0.309 0.304 Pr@30 0.393 0.467 0.475 0.457 0.399 0.480 0.473 0.431 0.491 0.473 RR 4339 4753 4762 4740 4600 4907 4872 4767 4947 4906 % 0% 31.5% 31.5% 26.9% 16.0% 39.3% 37.4% 25.1% 41.1% 38.8% Table 3: MAP variation with the number of presented terms. # terms TFB1C TFB3C TFB6C CFB3C CFB6C TCFB3C TCFB6C 6 0.245 0.240 0.227 0.279 0.279 0.281 0.274 12 0.261 0.261 0.242 0.299 0.286 0.297 0.281 18 0.275 0.274 0.256 0.301 0.282 0.300 0.286 24 0.276 0.281 0.265 0.303 0.292 0.305 0.292 30 0.280 0.285 0.270 0.304 0.296 0.307 0.296 36 0.282 0.288 0.272 0.307 0.297 0.309 0.297 42 0.283 0.288 0.275 0.306 0.298 0.309 0.300 48 0.288 0.288 0.278 0.305 0.301 0.309 0.303 NIST.",
                "We designed three sets of clarification forms for term feedback, differing in the choice of K, the number of clusters, and L, the number of presented terms from each cluster.",
                "They are: 1× 48, a big cluster with 48 terms, 3 × 16, 3 clusters with 16 terms each, and 6 × 8, 6 clusters with 8 terms each.",
                "The total number of presented terms (M) is fixed at 48, so by comparing the performance of different types of clarification forms we can know the effects of different degree of clustering.",
                "For each topic, an assessor would complete the forms ordered by 6 × 8, 1 × 48 and 3 × 16, spending up to three minutes on each form.",
                "The sample clarification form shown in Figure 1 is of type 3 × 16.",
                "It is a simple and compact interface in which the user can check relevant terms.",
                "The form is self-explanatory; there is no need for extra user training on how to use it.",
                "Our initinal queries are constructed only using the topic title descriptions, which are on average 2.7 words in length.",
                "As our baseline we use the KL divergence retrieval method implemented in the Lemur Toolkit1 with 5 pseudo-feedback documents.",
                "We stem the terms, choose Dirichlet smoothing with a prior of 2000, and truncate query language models to 50 terms (these settings are used throughout the experiments).",
                "For all other parameters we use Lemurs default settings.",
                "The baseline turns out to perform above average among the track participants.",
                "After an initial run using this baseline retrieval method, we take the top 60 documents for each topic and apply the theme discovery algorithm to output the clusters (1, 3, or 6 of them), based on which we generate clarification forms.",
                "After user feedback is received, we run the term feedback algorithms (TFB, CFB or TCFB) to estimate updated query models, which are then used for a second iteration of retrieval.",
                "We evaluate the different retrieval methods performance on their rankings of the top 1000 documents.",
                "The evaluation metrics we adopt include mean average (non-interpolated) precision (MAP), precision at top 30 (Pr@30) and total relevant retrieved (RR).",
                "Table 2 shows the performance of various methods and configurations of K × L. The suffixes (1C, 3C, 6C) after TFB,CFB,TCFB stand for the number of clusters (K).",
                "For example, TCFB3C means the TCFB method on the 3 × 16 clarification forms.",
                "From Table 2 we can make the following observations: 1 http://www.lemurproject.com 1.",
                "All methods perform considerably better than the pseudofeedback baseline, with TCFB3C achieving a highest 41.1% improvement in MAP, indicating significant contribution of term feedback for clarification of the users information need.",
                "In other words, term feedback is truly helpful for improving retrieval accuracy. 2.",
                "For TFB, the performance is almost equal on the 1 × 48 and 3 × 16 clarification forms in terms of MAP (although the latter is slightly better in Pr@30 and RR), and a little worse on the 6 × 8 ones. 3.",
                "Both CFB3C and CFB6C perform better than their TFB counterparts in all three metrics, suggesting that feedback on a secondary cluster structure is indeed beneficial.",
                "CFB1C is actually worse because it cannot adjust the weight of its (single) cluster from term feedback and it is merely pseudofeedback. 4.",
                "Although TCFB is just a simple mixture of TFB and CFB by interpolation, it is able to outperform both.",
                "This supports our speculation that TCFB overcomes the drawbacks of TFB (paying attention only to checked terms) and CFB (not distinguishing checked and unchecked terms in a cluster).",
                "Except for TCFB6C v.s.",
                "CFB6C, the performance advantage of TCFB over TFB/CFB is significant at p < 0.05 using the Wilcoxon signed rank test.",
                "This is not true in the case of TFB v.s.",
                "CFB, each of which is better than the other in nearly half of the topics. 6.2 Reduction of Presentation Terms In some situations we may have to reduce the number of presentation terms due to limits in display space or user feedback efforts.",
                "It is interesting to know whether our algorithms performance deteriorates when the user is presented with fewer terms.",
                "Because the presentation terms within each cluster are generated in decreasing order of their frequencies, the presentation list forms a subset of the original one if its size is reduced2 .",
                "Therefore, we can easily simulate what happens when the number of presentation terms decreases 2 There are complexities arising from terms appearing in top L of multiple clusters, but these are exceptions from M to M : we will keep all judgments of the top L = M /K terms in each cluster and discard those of others.",
                "Table 3 shows the performance of various algorithms as the number of presentation terms ranges from 6 to 48.",
                "We find that the performance of TFB is more susceptible to presentation term reduction than that of CFB or TCFB.",
                "For example, at 12 terms the MAP of TFB3C is 90.6% of that at 48 terms, while the numbers for CFB3C and TCFB3C are 98.0% and 96.1% respectively.",
                "We conjecture the reason to be that while TFBs performance heavily depends on how many good terms are chosen for query expansion, CFB only needs a rough estimate of cluster weights to work.",
                "Also, the 3 × 16 clarification forms seem to be more robust than the 6 × 8 ones: at 12 terms the MAP of TFB6C is 87.1% of that at 48 terms, lower than 90.6% for TFB3C.",
                "Similarly, for CFB it is 95.0% against 98.0%.",
                "This is natual, as for a large cluster number of 6, it is easier to get into the situation where each cluster gets too few presentation terms to make topic diversification useful.",
                "Overall, we are surprised to see that the algorithms are still able to perform reasonably well when the number of presentation terms is small.",
                "For example, at only 12 terms CFB3C (the clarification form is of size 3 × 4) can still improve 36.5% over the baseline, dropping slightly from 39.3% at 48 terms. 6.3 User Feedback Analysis In this part we study several aspects of users term feedback behavior, and whether they are connected to <br>retrieval performance</br>.",
                "Figure 2: Clarification form completion time distributions 0−30 30−60 60−90 90−120 120−150 150−180 0 5 10 15 20 25 30 35 completion time (seconds) #topics 1×48 3×16 6×8 Figure 2 shows the distribution of time needed to complete a clarification form3 .",
                "We see that the user is usually able to finish term feedback within a reasonably short amount of time: for more than half of the topics the clarification form is completed in just 1 minute, and only a small fraction of topics (less than 10% for 1 × 48 and 3 × 16) take more than 2 minutes.",
                "This suggests that term feedback is suitable for interactive ad-hoc retrieval, where a user usually does not want to spend too much time on providing feedback.",
                "We find that a user often makes mistakes when judging term relevance.",
                "Sometimes a relevant term may be left out because its connection to the query topic is not obvious to the user.",
                "Other times a dubious term may be included but turns out to be irrelevant.",
                "Take the topic in Figure 1 for example.",
                "There was a fire disaster in Mont 3 The maximal time is 180 seconds, as the NIST assessor would be forced to submit the form at that moment.",
                "Table 4: Term selection statistics (topic average) CF Type 1 × 48 3 × 16 6 × 8 # checked terms 14.8 13.3 11.2 # rel. terms 15.0 12.6 11.2 # rel. checked terms 7.9 6.9 5.9 precision 0.534 0.519 0.527 recall 0.526 0.548 0.527 Blanc Tunnel between France and Italy in 1999, but the user failed to select such keywords as mont, blanc, french and italian due to his/her ignorance of the event.",
                "Indeed, without proper context it would be hard to make perfect judgment.",
                "What is then, the extent to which the user is good at term feedback?",
                "Does it have serious impact on <br>retrieval performance</br>?",
                "To answer these questions, we need a measure of individual terms true relevance.",
                "We adopt the Simplified KL Divergence metric used in [24] to decide query expansion terms as our term relevance measure: σKLD(w) = p(w|R) log p(w|R) p(w|¬R) where p(w|R) is the probability that a relevant document contains term w, and p(w|¬R) is the probability that an irrelevant document contains w, both of which can be easily computed via maximum likelihood estimate given document-level relevance judgment.",
                "If σKLD(w) > 0, w is more likely to appear in relevant documents than irrelevant ones.",
                "We consider a term relevant if its Simplified KL Divergence value is greater than a certain threshold σ0.",
                "We can then define precision and recall of user term judgment accordingly: precision is the fraction of terms checked by the user that are relevant; recall is the fraction of presented relevant terms that are checked by the user.",
                "Table 4 shows the number of checked terms, relevant terms and relevant checked terms when σ0 is set to 1.0, as well as the precision/recall of user term judgment.",
                "Note that when the clarification forms contain more clusters, fewer terms are checked: 14.8 for 1 × 48, 13.3 for 3 × 16 and 11.2 for 6×8.",
                "Similar pattern holds for relevant terms and relevant checked terms.",
                "There seems to be a trade-off between increasing topic diversity by clustering and losing extra relevant terms: when there are more clusters, each of them gets fewer terms to present, which can hurt a major relevant cluster that contains many relevant terms.",
                "Therefore, it is not always helpful to have more clusters, e.g., TFB6C is actually worse than TFB1C.",
                "The major finding we can make from Table 4 is that the user is not particularly good at identifying relevant terms, which echoes the discovery in [18].",
                "In the case of 3 × 16 clarification forms, the average number of terms checked as relevant by the user is 13.3 per topic, and the average number of relevant terms whose σKLD value exceed 1.0 is 12.6.",
                "The user is able to recognize only 6.9 of these terms on average.",
                "Indeed, the precision and recall of user feedback terms (as defined previously) are far from perfect.",
                "On the other hand, If the user had correctly checked all such relevant terms, the performance of our algorithms would have increased a lot, as shown in Table 5.",
                "We see that TFB gets big improvement when there is an oracle who checks all relevant terms, while CFB meets a bottleneck around MAP of 0.325, since all it does is adjust cluster weights, and when the learned weights are close to being accurate, it cannot benefit more from term feedback.",
                "Also note that TCFB fails to outperform TFB, probably because TFB is sufficiently accurate.",
                "Table 5: Change of MAP when using all (and only) relevant terms (σKLD > 1.0) for feedback. original term feedback relevant term feedback TF1 0.288 0.354 TF3 0.288 0.354 TF6 0.278 0.346 CF3 0.305 0.325 CF6 0.301 0.326 TCF3 0.309 0.345 TCF6 0.304 0.341 6.4 Comparison with Relevance Feedback Now we compare term feedback with document-level relevance feedback, in which the user is presented with the top N documents from an initial retrieval and asked to judge their relevance.",
                "The feedback process is simulated using document relevance judgment from NIST.",
                "We use the mixture model based feedback method proposed in [25], with mixture noise set to 0.95 and feedback coefficient set to 0.9.",
                "Comparative evaluation of relevance feedback against other methods is complicated by the fact that some documents have already been viewed during feedback, so it makes no sense to include them in the retrieval results of the second run.",
                "However, this does not hold for term feedback.",
                "Thus, to make it fair w.r.t. users information gain, if the feedback documents are relevant, they should be kept in the top of the ranking; if they are irrelevant, they should be left out.",
                "Therefore, we use relevance feedback to produce a ranking of top 1000 retrieved documents but with every feedback document excluded, and then prepend the relevant feedback documents at the front.",
                "Table 6 shows the performance of relevance feedback for different values of N and compares it with TCFB3C.",
                "Table 6: Performance of relevance feedback for different number of feedback documents (N).",
                "N MAP Pr@30 RR 5 0.302 0.586 4779 10 0.345 0.670 4916 20 0.389 0.772 5004 TCFB3C 0.309 0.491 4947 We see that the performance of TCFB3C is comparable to that of relevance feedback using 5 documents.",
                "Although it is poorer than when there are 10 feedback documents in terms of MAP and Pr@30, it does retrieve more documents (4947) when going down the ranked list.",
                "We try to compare the quality of automatically inserted terms in relevance feedback with that of manually selected terms in term feedback.",
                "This is done by truncating the relevance feedback modified query model to a size equal to the number of checked terms for the same topic.",
                "We can then compare the terms in the truncated model with the checked terms.",
                "Figure 3 shows the distribution of the terms σKLD scores.",
                "We find that term feedback tends to produce expansion terms of higher quality(those with σKLD > 1) compared to relevance feedback (with 10 feedback documents).",
                "This does not contradict the fact that the latter yields higher <br>retrieval performance</br>.",
                "Actually, when we use the truncated query model instead of the intact one refined from relevance feedback, the MAP is only 0.304.",
                "The truth Figure 3: Comparison of expansion term quality between relevance feedback (with 10 feedback documents) and term feedback (with 3 × 16 CFs) −1−0 0−1 1−2 2−3 3−4 4−5 5−6 0 50 100 150 200 250 300 350 σKLD #terms relevance feedback term feedback is, although there are many unwanted terms in the expanded query model from feedback documents, there are also more relevant terms than what the user can possibly select from the list of presentation terms generated with pseudo-feedback documents, and the positive effects often outweights the negative ones.",
                "We are interested to know under what circumstances term feedback has advantage over relevance feedback.",
                "One such situation is when none of the top N feedback documents is relevant, rendering relevance feedback useless.",
                "This is not infrequent, as one might have thought: out of the 50 topics, there are 13 such cases when N = 5, 10 when N = 10, and still 3 when N = 20.",
                "When this happens, one can only back off to the original retrieval method; the power of relevance feedback is lost.",
                "Surprisingly, in 11 out of 13 such cases where relevance feedback seems impossible, the user is able to check at least 2 relevant terms from the 3 × 16 clarification form (we consider term t to be relevant if σKLD(t) > 1.0).",
                "Furthermore, in 10 out of them TCFB3C outperforms the pseudo-feedback baseline, increasing MAP from 0.076 to 0.146 on average (these are particularly hard topics).",
                "We think that there are two possible explanations for this phenomenon of term feedback being active even when relevance feedback does not work: First, even if none of the top N (suppose it is a small number) documents are relevant, we may still find relevant documents in top 60, which is more inclusive but usually unreachable when people are doing relevance feedback in interactive ad-hoc search, from which we can draw feedback terms.",
                "This is true for topic 367 piracy, where the top 10 feedback documents are all about software piracy, yet there are documents between 10-60 that are about piracy on the seas (which is about the real information need), contributing terms such as pirate, ship for selection in the clarification form.",
                "Second, for some topics, a document needs to meet some special condition in order to be relevant.",
                "The top N documents may be related to the topic, but nonetheless irrelevant.",
                "In this case, we may still extract useful terms from these documents, even if they do not qualify as relevant ones.",
                "For example, in topic 639 consumer online shopping, a document needs to mention what contributes to shopping growth to really match the specified information need, hence none of the top 10 feedback documents are regarded as relevant.",
                "But nevertheless, the feedback terms such as retail, commerce are good for query expansion. 7.",
                "CONCLUSIONS In this paper we studied the use of term feedback for interactive information retrieval in the language modeling approach.",
                "We proposed a cluster-based method for selecting presentation terms as well as algorithms to estimate refined query models from user term feedback.",
                "We saw significant improvement in retrieval accuracy brought by term feedback, in spite of the fact that a user often makes mistakes in relevance judgment that hurts its performance.",
                "We found the best-performing algorithm to be TCFB, which benefits from the combination of directly observed term evidence with TFB and indirectly learned cluster relevance with CFB.",
                "When we reduced the number of presentation terms, term feedback is still able to keep much of its performance gain over the baseline.",
                "Finally, we compared term feedback to document-level relevance feedback, and found that TCFB3Cs performance is on a par with the latter with 5 feedback documents.",
                "We regarded term feedback as a viable alternative to traditional relevance feedback, especially when there are no relevant documents in the top.",
                "We propose to extend our work in several ways.",
                "First, we want to study whether the use of various contexts can help the user to better identify term relevance, while not sacrificing the simplicity and compactness of term feedback.",
                "Second, currently all terms are presented to the user in a single batch.",
                "We could instead consider iterative term feedback, by presenting a small number of terms first, and show more terms after receiving user feedback or stop when the refined query is good enough.",
                "The presented terms should be selected dynamically to maximize learning benefits at any moment.",
                "Third, we have plans to incorporate term feedback into our UCAIR toolbar[20], an Internet Explorer plugin, to make it work for web search.",
                "We are also interested in studying how to combine term feedback with relevance feedback or implicit feedback.",
                "We could, for example, allow the user to dynamically modify terms in a language model learned from feedback documents. 8.",
                "ACKNOWLEDGMENT This work is supported in part by the National Science Foundation grants IIS-0347933 and IIS-0428472. 9.",
                "REFERENCES [1] J. Allan.",
                "Relevance feedback with too much data.",
                "In Proceedings of the 18th annual international ACM SIGIR conference on research and development in information retrieval, pages 337-343, 1995. [2] J. Allan.",
                "HARD track overview in TREC 2005 - High Accuracy Retrieval from Documents.",
                "In The Fourteenth Text REtrieval Conference, 2005. [3] P. Anick.",
                "Using terminological feedback for web search refinement: a log-based study.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 88-95, 2003. [4] P. G. Anick and S. Tipirneni.",
                "The paraphrase search assistant: terminological feedback for iterative information seeking.",
                "In Proceedings of the 22nd annual international ACM SIGIR conference on research and development in information retrieval, pages 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan, and A. Singhal.",
                "Automatic query expansion using SMART.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [6] D. Harman.",
                "Towards interactive query expansion.",
                "In Proceedings of the 11th annual international ACM SIGIR conference on research and development in information retrieval, pages 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wade, and J. Allan.",
                "UMass at TREC 2003: HARD and QA.",
                "In TREC, pages 715-725, 2003. [8] H. Joho, C. Coverson, M. Sanderson, and M. Beaulieu.",
                "Hierarchical presentation of expansion terms.",
                "In Proceedings of the 2002 ACM symposium on applied computing, pages 645-649, 2002. [9] K. S. Jones, S. Walker, and S. E. Robertson.",
                "A probabilistic model of information retrieval: development and status.",
                "Technical Report 446, Computer Laboratory, University of Cambridge, 1998. [10] D. Kelly, V. D. Dollu, and X. Fu.",
                "The loquacious user: a document-independent source of terms for query expansion.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 457-464, 2005. [11] D. Kelly and X. Fu.",
                "Elicitation of term relevance feedback: an investigation of term source and context.",
                "In Proceedings of the 29th annual international ACM SIGIR conference on research and development in information retrieval, 2006. [12] J. Koenemann and N. Belkin.",
                "A case for interaction: A study of interactive information retrieval behavior and effectiveness.",
                "In Proceedings of the SIGCHI conference on human factors in computing systems, pages 205-212, 1996. [13] V. Lavrenko and W. B. Croft.",
                "Relevance-based language models.",
                "In Research and Development in Information Retrieval, pages 120-127, 2001. [14] Y. Nemeth, B. Shapira, and M. Taeib-Maimon.",
                "Evaluation of the real and perceived value of automatic and interactive query expansion.",
                "In Proceedings of the 27th annual international ACM SIGIR conference on research and development in information retrieval, pages 526-527, 2004. [15] J. Ponte.",
                "A Language Modeling Approach to Information Retrieval.",
                "PhD thesis, University of Massachusetts at Amherst, 1998. [16] S. E. Robertson, S. Walker, S. Jones, M. Beaulieu, and M. Gatford.",
                "Okapi at TREC-3.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [17] J. Rocchio.",
                "Relevance feedback in information retrieval.",
                "In The SMART retrieval system, pages 313-323. 1971. [18] I. Ruthven.",
                "Re-examining the potential effectiveness of interactive query expansion.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 213-220, 2003. [19] G. Salton and C. Buckley.",
                "Improving <br>retrieval performance</br> by relevance feedback.",
                "Journal of the American Society for Information Science, 41:288-297, 1990. [20] X. Shen, B. Tan, and C. Zhai.",
                "Implicit user modeling for personalized search.",
                "In Proceedings of the 14th ACM international conference on information and knowledge management, pages 824-831, 2005. [21] X. Shen and C. Zhai.",
                "Active feedback in ad-hoc information retrieval.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 59-66, 2005. [22] A. Spink.",
                "Term relevance feedback and query expansion: relation to design.",
                "In Proceedings of the 17th annual international ACM SIGIR conference on research and development in information retrieval, pages 81-90, 1994. [23] J. Xu and W. B. Croft.",
                "Query expansion using local and global document analysis.",
                "In Proceedings of the 19th annual international ACM SIGIR conference on research and development in information retrieval, pages 4-11, 1996. [24] H. Zaragoza, N. Craswell, M. Taylor, S. Saria, and S. Robertson.",
                "Microsoft cambridge at TREC-13: Web and HARD tracks.",
                "In Proceedings of the 13th Text REtrieval Conference, 2004. [25] C. Zhai and J. Lafferty.",
                "Model-based feedback in the language modeling approach to information retrieval.",
                "In Proceedings of the tenth international conference on information and knowledge management, pages 403-410, 2001. [26] C. Zhai, A. Velivelli, and B. Yu.",
                "A cross-collection mixture model for comparative text mining.",
                "In Proceedings of the tenth ACM SIGKDD international conference on knowledge discovery and data mining, pages 743-748, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Segundo, porque un término lleva menos tiempo juzgar que un texto completo o resumen de un documento, y tan pocos, ya que alrededor de 20 términos presentados pueden generar una mejora significativa en el \"rendimiento de la recuperación\" (como mostraremos más adelante), los comentarios del término hacen que sea más rápido recopilarseComentarios de los usuarios.",
                "Entre nuestros algoritmos, el que tiene el mejor \"rendimiento de recuperación\" es TCFB, la combinación de TFB, el algoritmo de retroalimentación de término directo y CFB, el algoritmo de retroalimentación basado en clúster.",
                "Finalmente, al comparar la retroalimentación a término con la retroalimentación a nivel de documento, encontramos que es una alternativa viable a esta última con el \"rendimiento de recuperación\" competitivo.",
                "La retroalimentación de relevancia laboral relacionada [17, 19] se ha reconocido durante mucho tiempo como un método efectivo para mejorar el \"rendimiento de la recuperación\".",
                "En muchos casos, se ha encontrado la retroalimentación de relevancia a término para mejorar efectivamente el \"rendimiento de la recuperación\" [6, 22, 12, 4, 10].",
                "En un estudio simulado realizado en [18], el autor compara el \"rendimiento de recuperación\" de la expansión de consultas interactivas y la expansión automática de consultas con un estudio simulado, y sugiere que los beneficios potenciales de los primeros pueden ser difíciles de lograr.",
                "Aunque existen técnicas para ajustar los pesos de los términos de consulta para los modelos de espacio vectorial [17] y los modelos de relevancia probable [9], la mayoría de los trabajos mencionados no los usan, eligiendo solo agregar términos de retroalimentación a la consulta original (utilizando así pesos iguales para ellos), que puede conducir a un \"rendimiento de recuperación\" más pobre.",
                "En segundo lugar, cómo calcular un modelo de consulta actualizado basado en este término evidencia de retroalimentación, de modo que captura la necesidad de información de los usuarios y se traduce en un buen \"rendimiento de recuperación\".4.",
                "A continuación, analizamos el comportamiento de retroalimentación del término del usuario y su relación con el \"rendimiento de la recuperación\".",
                "Los temas incluyeron 50 que anteriormente se sabían que eran difíciles, es decir, con un bajo \"rendimiento de recuperación\"."
            ],
            "translated_text": "",
            "candidates": [
                "rendimiento de recuperación",
                "rendimiento de la recuperación",
                "rendimiento de recuperación",
                "rendimiento de recuperación",
                "rendimiento de recuperación",
                "rendimiento de recuperación",
                "rendimiento de recuperación",
                "rendimiento de la recuperación",
                "rendimiento de recuperación",
                "rendimiento de la recuperación",
                "rendimiento de recuperación",
                "rendimiento de recuperación",
                "rendimiento de recuperación",
                "rendimiento de recuperación",
                "rendimiento de recuperación",
                "rendimiento de recuperación",
                "rendimiento de recuperación",
                "rendimiento de la recuperación",
                "rendimiento de recuperación",
                "rendimiento de recuperación"
            ],
            "error": []
        },
        "probability": {
            "translated_key": "probabilidad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Term Feedback for Information Retrieval with Language Models Bin Tan† , Atulya Velivelli‡ , Hui Fang† , ChengXiang Zhai† Dept.",
                "of Computer Science† , Dept. of Electrical and Computer Engineering‡ University of Illinois at Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.edu ABSTRACT In this paper we study term-based feedback for information retrieval in the language modeling approach.",
                "With term feedback a user directly judges the relevance of individual terms without interaction with feedback documents, taking full control of the query expansion process.",
                "We propose a cluster-based method for selecting terms to present to the user for judgment, as well as effective algorithms for constructing refined query language models from user term feedback.",
                "Our algorithms are shown to bring significant improvement in retrieval accuracy over a non-feedback baseline, and achieve comparable performance to relevance feedback.",
                "They are helpful even when there are no relevant documents in the top.",
                "Categories and Subject Descriptors H.3.3 [Information Search and Retrieval]: Retrieval models General Terms Algorithms 1.",
                "INTRODUCTION In the language modeling approach to information retrieval, feedback is often modeled as estimating an improved query model or relevance model based on a set of feedback documents [25, 13].",
                "This is in line with the traditional way of doing relevance feedback - presenting a user with documents/passages for relevance judgment and then extracting terms from the judged documents or passages to expand the initial query.",
                "It is an indirect way of seeking users assistance for query model construction, in the sense that the refined query model (based on terms) is learned through feedback documents/passages, which are high-level structures of terms.",
                "It has the disadvantage that irrelevant terms, which occur along with relevant ones in the judged content, may be erroneously used for query expansion, causing undesired effects.",
                "For example, for the TREC query Hubble telescope achievements, when a relevant document talks more about the telescopes repair than its discoveries, irrelevant terms such as spacewalk can be added into the modified query.",
                "We can consider a more direct way to involve a user in query model improvement, without an intermediary step of document feedback that can introduce noise.",
                "The idea is to present a (reasonable) number of individual terms to the user and ask him/her to judge the relevance of each term or directly specify their probabilities in the query model.",
                "This strategy has been discussed in [15], but to our knowledge, it has not been seriously studied in existing language modeling literature.",
                "Compared to traditional relevance feedback, this term-based approach to interactive query model refinement has several advantages.",
                "First, the user has better control of the final query model through direct manipulation of terms: he/she can dictate which terms are relevant, irrelevant, and possibly, to what degree.",
                "This avoids the risk of bringing unwanted terms into the query model, although sometimes the user introduces low-quality terms.",
                "Second, because a term takes less time to judge than a documents full text or summary, and as few as around 20 presented terms can bring significant improvement in retrieval performance (as we will show later), term feedback makes it faster to gather user feedback.",
                "This is especially helpful for interactive adhoc search.",
                "Third, sometimes there are no relevant documents in the top N of the initially retrieved results if the topic is hard.",
                "This is often true when N is constrained to be small, which arises from the fact that the user is unwilling to judge too many documents.",
                "In this case, relevance feedback is useless, as no relevant document can be leveraged on, but term feedback is still often helpful, by allowing relevant terms to be picked from irrelevant documents.",
                "During our participation in the TREC 2005 HARD Track and continued study afterward, we explored how to exploit term feedback from the user to construct improved query models for information retrieval in the language modeling approach.",
                "We identified two key subtasks of term-based feedback, i.e., pre-feedback presentation term selection and post-feedback query model construction, with effective algorithms developed for both.",
                "We imposed a secondary cluster structure on terms and found that a cluster view sheds additional insight into the users information need, and provides a good way of utilizing term feedback.",
                "Through experiments we found that term feedback improves significantly over the nonfeedback baseline, even though the user often makes mistakes in relevance judgment.",
                "Among our algorithms, the one with best retrieval performance is TCFB, the combination of TFB, the direct term feedback algorithm, and CFB, the cluster-based feedback algorithm.",
                "We also varied the number of feedback terms and observed reasonable improvement even at low numbers.",
                "Finally, by comparing term feedback with document-level feedback, we found it to be a viable alternative to the latter with competitive retrieval performance.",
                "The rest of the paper is organized as follows.",
                "Section 2 discusses some related work.",
                "Section 4 outlines our general approach to term feedback.",
                "We present our method for presentation term selection in Section 3 and algorithms for query model construction in Section 5.",
                "The experiment results are given in Section 6.",
                "Section 7 concludes this paper. 2.",
                "RELATED WORK Relevance feedback[17, 19] has long been recognized as an effective method for improving retrieval performance.",
                "Normally, the top N documents retrieved using the original query are presented to the user for judgment, after which terms are extracted from the judged relevant documents, weighted by their potential of attracting more relevant documents, and added into the query model.",
                "The expanded query usually represents the users information need better than the original one, which is often just a short keyword query.",
                "A second iteration of retrieval using this modified query usually produces significant increase in retrieval accuracy.",
                "In cases where true relevance judgment is unavailable and all top N documents are assumed to be relevant, it is called blind or pseudo feedback[5, 16] and usually still brings performance improvement.",
                "Because document is a large text unit, when it is used for relevance feedback many irrelevant terms can be introduced into the feedback process.",
                "To overcome this, passage feedback is proposed and shown to improve feedback performance[1, 23].",
                "A more direct solution is to ask the user for their relevance judgment of feedback terms.",
                "For example, in some relevance feedback systems such as [12], there is an interaction step that allows the user to add or remove expansion terms after they are automatically extracted from relevant documents.",
                "This is categorized as interactive query expansion, where the original query is augmented with user-provided terms, which can come from direct user input (free-form text or keywords)[22, 7, 10] or user selection of system-suggested terms (using thesauri[6, 22] or extracted from feedback documents[6, 22, 12, 4, 7]).",
                "In many cases term relevance feedback has been found to effectively improve retrieval performance[6, 22, 12, 4, 10].",
                "For example, the study in [12] shows that the user prefers to have explicit knowledge and direct control of which terms are used for query expansion, and the penetrable interface that provides this freedom is shown to perform better than other interfaces.",
                "However, in some other cases there is no significant benefit[3, 14], even if the user likes interacting with expansion terms.",
                "In a simulated study carried out in [18], the author compares the retrieval performance of interactive query expansion and automatic query expansion with a simulated study, and suggests that the potential benefits of the former can be hard to achieve.",
                "The user is found to be not good at identifying useful terms for query expansion, when a simple term presentation interface is unable to provide sufficient semantic context of the feedback terms.",
                "Our work differs from the previous ones in two important aspects.",
                "First, when we choose terms to present to the user for relevance judgment, we not only consider single-term value (e.g., the relative frequency of a term in the top documents, which can be measured by metrics such as Robertson Selection Value and Simplified Kullback-Leibler Distance as listed in [24]), but also examine the cluster structure of the terms, so as to produce a balanced coverage of the different topic aspects.",
                "Second, with the language modelling framework, we allow an elaborate construction of the updated query model, by setting different probabilities for different terms based on whether it is a query term, its significance in the top documents, and its cluster membership.",
                "Although techniques for adjusting query term weights exist for vector space models[17] and probablistic relevance models[9], most of the aforementioned works do not use them, choosing to just append feedback terms to the original query (thus using equal weights for them), which can lead to poorer retrieval performance.",
                "The combination of the two aspects allows our method to perform much better than the baseline.",
                "The usual way for feedback term presentation is just to display the terms in a list.",
                "There have been some works on alternative user interfaces. [8] arranges terms in a hierarchy, and [11] compares three different interfaces, including terms + checkboxes, terms + context (sentences) + checkboxes, sentences + input text box.",
                "In both studies, however, there is no significant performance difference.",
                "In our work we adopt the simplest approach of terms + checkboxes.",
                "We focus on term presentation and query model construction from feedback terms, and believe using contexts to improve feedback term quality should be orthogonal to our method. 3.",
                "GENERAL APPROACH We follow the language modeling approach, and base our method on the KL-divergence retrieval model proposed in [25].",
                "With this model, the retrieval task involves estimating a query language model θq from a given query, a document language model θd from each document, and calculating their KL-divergence D(θq||θd), which is then used to score the documents. [25] treats relevance feedback as a query model re-estimation problem, i.e., computing an updated query model θq given the original query text and the extra evidence carried by the judged relevant documents.",
                "We adopt this view, and cast our task as updating the query model from user term feedback.",
                "There are two key subtasks here: First, how to choose the best terms to present to the user for judgment, in order to gather maximal evidence about the users information need.",
                "Second, how to compute an updated query model based on this term feedback evidence, so that it captures the users information need and translates into good retrieval performance. 4.",
                "PRESENTATION TERM SELECTION Proper selection of terms to be presented to the user for judgment is crucial to the success of term feedback.",
                "If the terms are poorly chosen and there are few relevant ones, the user will have a hard time looking for useful terms to help clarify his/her information need.",
                "If the relevant terms are plentiful, but all concentrate on a single aspect of the query topic, then we will only be able to get feedback on that aspect and missing others, resulting in a breadth loss in retrieved results.",
                "Therefore, it is important to carefully select presentation terms to maximize expected gain from user feedback, i.e., those that can potentially reveal most evidence of the users information need.",
                "This is similar to active feedback[21], which suggests that a retrieval system should actively probe the users information need, and in the case of relevance feedback, the feedback documents should be chosen to maximize learning benefits (e.g. diversely so as to increase coverage).",
                "In our approach, the top N documents from an initial retrieval using the original query form the source of feedback terms: all terms that appear in them are considered candidates to present to the user.",
                "These documents serve as pseudo-feedback, since they provide a much richer context than the original query (usually very short), while the user is not asked to judge their relevance.",
                "Due to the latter reason, it is possible to make N quite large (e.g., in our experiments we set N = 60) to increase its coverage of different aspects in the topic.",
                "The simplest way of selecting feedback terms is to choose the most frequent M terms from the N documents.",
                "This method, however, has two drawbacks.",
                "First, a lot of common noisy terms will be selected due to their high frequencies in the document collection, unless a stop-word list is used for filtering.",
                "Second, the presentation list will tend to be filled by terms from major aspects of the topic; those from a minor aspect are likely to be missed due to their relatively low frequencies.",
                "We solve the above problems by two corresponding measures.",
                "First, we introduce a background model θB that is estimated from collection statistics and explains the common terms, so that they are much less likely to appear in the presentation list.",
                "Second, the terms are selected from multiple clusters in the pseudo-feedback documents, to ensure sufficient representation of different aspects of the topic.",
                "We rely on the mixture multinomial model, which is used for theme discovery in [26].",
                "Specifically, we assume the N documents contain K clusters {Ci| i = 1, 2, · · · K}, each characterized by a multinomial word distribution (also known as unigram language model) θi and corresponding to an aspect of the topic.",
                "The documents are regarded as sampled from a mixture of K + 1 components, including the K clusters and the background model: p(w|d) = λBp(w|θB) + (1 − λB) K i=1 πd,ip(w|θi) where w is a word, λB is the mixture weight for the background model θB, and πd,i is the document-specific mixture weight for the i-th cluster model θi.",
                "We then estimate the cluster models by maximizing the <br>probability</br> of the pseudo-feedback documents being generated from the multinomial mixture model: log p(D|Λ) = d∈D w∈V c(w; d) log p(w|d) where D = {di| i = 1, 2, · · · N} is the set of the N documents, V is the vocabulary, c(w; d) is ws frequency in d and Λ = {θi| i = 1, 2, · · · K} ∪ {πdij | i = 1, 2, · · · N, j = 1, 2, · · · K} is the set of model parameters to estimate.",
                "The cluster models can be efficiently estimated using the Expectation-Maximization (EM) algorithm.",
                "For its details, we refer the reader to [26].",
                "Table 1 shows the cluster models for TREC query Transportation tunnel disasters (K = 3).",
                "Note that only the middle cluster is relevant.",
                "Table 1: Cluster models for topic 363 Transportation tunnel disasters Cluster 1 Cluster 2 Cluster 3 tunnel 0.0768 tunnel 0.0935 tunnel 0.0454 transport 0.0364 fire 0.0295 transport 0.0406 traffic 0.0206 truck 0.0236 toll 0.0166 railwai 0.0186 french 0.0220 amtrak 0.0153 harbor 0.0146 smoke 0.0157 train 0.0129 rail 0.0140 car 0.0154 airport 0.0122 bridg 0.0139 italian 0.0152 turnpik 0.0105 kilomet 0.0136 firefight 0.0144 lui 0.0095 truck 0.0133 blaze 0.0127 jersei 0.0093 construct 0.0131 blanc 0.0121 pass 0.0087 · · · · · · · · · From each of the K estimated clusters, we choose the L = M/K terms with highest probabilities to form a total of M presentation terms.",
                "If a term happens to be in top L in multiple clusters, we assign it to the cluster where it has highest <br>probability</br> and let the other clusters take one more term as compensation.",
                "We also filter out terms in the original query text because they tend to always be relevant when the query is short.",
                "The selected terms are then presented to the user for judgment.",
                "A sample (completed) feedback form is shown in Figure 1.",
                "In this study we only deal with binary judgment: a presented term is by default unchecked, and a user may check it to indicate relevance.",
                "We also do not explicitly exploit negative feedback (i.e., penalizing irrelevant terms), because with binary feedback an unchecked term is not necessarily irrelevant (maybe the user is unsure about its relevance).",
                "We could ask the user for finer judgment (e.g., choosing from highly relevant, somewhat relevant, do not know, somewhat irrelevant and highly irrelevant), but binary feedback is more compact, taking less space to display and less user effort to make judgment. 5.",
                "ESTIMATING QUERY MODELS FROM TERM FEEDBACK In this section, we present several algorithms for exploiting term feedback.",
                "The algorithms take as input the original query q, the clusters {θi} as generated by the theme discovery algorithm, the set of feedback terms T and their relevance judgment R, and outputs an updated query language model θq that makes best use of the feedback evidence to capture the users information need.",
                "First we describe our notations: • θq: The original query model, derived from query terms only: p(w|θq) = c(w; q) |q| where c(w; q) is the count of w in q, and |q| = w∈q c(w; q) is the query length. • θq : The updated query model which we need to estimate from term feedback. • θi (i = 1, 2, . . .",
                "K): The unigram language model of cluster Ci, as estimated using the theme discovery algorithm. • T = {ti,j} (i = 1 . . .",
                "K, j = 1 . . .",
                "L): The set of terms presented to the user for judgment. ti,j is the j-th term chosen from cluster Ci. • R = {δw|w ∈ T}: δw is an indicator variable that is 1 if w is judged relevant or 0 otherwise. 5.1 TFB (Direct Term Feedback) This is a straight-forward form of term feedback that does not involve any secondary structure.",
                "We give a weight of 1 to terms judged relevant by the user, a weight of μ to query terms, zero weight to other terms, and then apply normalization: p(w|θq ) = δw + μ c(w; q) w ∈T δw + μ|q| where w ∈T δw is the total number of terms that are judged relevant.",
                "We call this method TFB (direct Term FeedBack).",
                "If we let μ = 1, this approach is equivalent to appending the relevant terms after the original query, which is what standard query expansion (without term reweighting) does.",
                "If we set μ > 1, we are putting more emphasis on the query terms than the checked ones.",
                "Note that the result model will be more biased toward θq if the original query is long or the user feedback is weak, which makes sense, as we can trust more on the original query in either case.",
                "Figure 1: Filled clarification form for Topic 363 363 transportation tunnel disasters Please select all terms that are relevant to the topic. traffic railway harbor rail bridge kilometer construct swiss cross link kong hong river project meter shanghai fire truck french smoke car italian firefights blaze blanc mont victim franc rescue driver chamonix emerge toll amtrak train airport turnpike lui jersey pass rome z center electron road boston speed bu submit 5.2 CFB (Cluster Feedback) Here we exploit the cluster structure that played an important role when we selected the presentation terms.",
                "The clusters represent different aspects of the query topic, each of which may or may not be relevant.",
                "If we are able to identify the relevant clusters, we can combine them to generate a query model that is good at discovering documents belonging to these clusters (instead of the irrelevant ones).",
                "We could ask the user to directly judge the relevance of a cluster after viewing representative terms in that cluster, but this would sometimes be a difficult task for the user, who has to guess the semantics of a cluster via its set of terms, which may not be well connected to one another due to a lack of context.",
                "Therefore, we propose to learn cluster feedback indirectly, inferring the relevance of a cluster through the relevance of its feedback terms.",
                "Because each cluster has an equal number of terms presented to the user, the simplest measure of a clusters relevance is the number of terms that are judged relevant in it.",
                "Intuitively, the more terms are marked relevant in a cluster, the closer the cluster is to the query topic, and the more the cluster should participate in query modification.",
                "If we combine the cluster models using weights determined this way and then interpolate with the original query model, we get the following formula for query updating, which we call CFB (Cluster FeedBack): p(w|θq ) = λp(w|θq) + (1 − λ) K i=1 L j=1 δti,j K k=1 L j=1 δtk,j p(w|θi) where L j=1 δti,j is the number of relevant terms in cluster Ci, and K k=1 L j=1 δtk,j is the total number of relevant terms.",
                "We note that when there is only one cluster (K = 1), the above formula degenerates to p(w|θq ) = λp(w|θq) + (1 − λ)p(w|θ1) which is merely pseudo-feedback of the form proposed in [25]. 5.3 TCFB (Term-cluster Feedback) TFB and CFB both have their drawbacks.",
                "TFB assigns non-zero probabilities to the presented terms that are marked relevant, but completely ignores (a lot more) others, which may be left unchecked due to the users ignorance, or simply not included in the presentation list, but we should be able to infer their relevance from the checked ones.",
                "For example, in Figure 1, since as many as 5 terms in the middle cluster (the third and fourth columns) are checked, we should have high confidence in the relevance of other terms in that cluster.",
                "CFB remedies TFBs problem by treating the terms in a cluster collectively, so that unchecked/unpresented terms receive weights when presented terms in their clusters are judged as relevant, but it does not distinguish which terms in a cluster are presented or judged.",
                "Intuitively, the judged relevant terms should receive larger weights because they are explicitly indicated as relevant by the user.",
                "Therefore, we try to combine the two methods, hoping to get the best out of both.",
                "We do this by interpolating the TFB model with the CFB model, and call it TCFB: p(w|θq ) = αp(w|θqT F B ) + (1 − α)p(w|θqCF B ) 6.",
                "EXPERIMENTS In this section, we describe our experiment results.",
                "We first describe our experiment setup and present an overview of various methods performance.",
                "Then we discuss the effects of varying the parameter setting in the algorithms, as well as the number of presentation terms.",
                "Next we analyze user term feedback behavior and its relation to retrieval performance.",
                "Finally we compare term feedback to relevance feedback and show that it has its particular advantage. 6.1 Experiment Setup and Basic Results We took the opportunity of TREC 2005 HARD Track[2] for the evaluation of our algorithms.",
                "The tracks used the AQUAINT collection, a 3GB corpus of English newswire text.",
                "The topics included 50 ones previously known to be hard, i.e. with low retrieval performance.",
                "It is for these hard topics that user feedback is most helpful, as it can provide information to disambiguate the queries; with easy topics the user may be unwilling to spend efforts for feedback if the automatic retrieval results are good enough.",
                "Participants of the track were able to submit custom-designed clarification forms (CF) to solicit feedback from human assessors provided by Table 2: Retrieval performance for different methods and CF types.",
                "The last row is the percentage of MAP improvement over the baseline.",
                "The parameter settings μ = 4, λ = 0.1, α = 0.3 are near optimal.",
                "Baseline TFB1C TFB3C TFB6C CFB1C CFB3C CFB6C TCFB1C TCFB3C TCFB6C MAP 0.219 0.288 0.288 0.278 0.254 0.305 0.301 0.274 0.309 0.304 Pr@30 0.393 0.467 0.475 0.457 0.399 0.480 0.473 0.431 0.491 0.473 RR 4339 4753 4762 4740 4600 4907 4872 4767 4947 4906 % 0% 31.5% 31.5% 26.9% 16.0% 39.3% 37.4% 25.1% 41.1% 38.8% Table 3: MAP variation with the number of presented terms. # terms TFB1C TFB3C TFB6C CFB3C CFB6C TCFB3C TCFB6C 6 0.245 0.240 0.227 0.279 0.279 0.281 0.274 12 0.261 0.261 0.242 0.299 0.286 0.297 0.281 18 0.275 0.274 0.256 0.301 0.282 0.300 0.286 24 0.276 0.281 0.265 0.303 0.292 0.305 0.292 30 0.280 0.285 0.270 0.304 0.296 0.307 0.296 36 0.282 0.288 0.272 0.307 0.297 0.309 0.297 42 0.283 0.288 0.275 0.306 0.298 0.309 0.300 48 0.288 0.288 0.278 0.305 0.301 0.309 0.303 NIST.",
                "We designed three sets of clarification forms for term feedback, differing in the choice of K, the number of clusters, and L, the number of presented terms from each cluster.",
                "They are: 1× 48, a big cluster with 48 terms, 3 × 16, 3 clusters with 16 terms each, and 6 × 8, 6 clusters with 8 terms each.",
                "The total number of presented terms (M) is fixed at 48, so by comparing the performance of different types of clarification forms we can know the effects of different degree of clustering.",
                "For each topic, an assessor would complete the forms ordered by 6 × 8, 1 × 48 and 3 × 16, spending up to three minutes on each form.",
                "The sample clarification form shown in Figure 1 is of type 3 × 16.",
                "It is a simple and compact interface in which the user can check relevant terms.",
                "The form is self-explanatory; there is no need for extra user training on how to use it.",
                "Our initinal queries are constructed only using the topic title descriptions, which are on average 2.7 words in length.",
                "As our baseline we use the KL divergence retrieval method implemented in the Lemur Toolkit1 with 5 pseudo-feedback documents.",
                "We stem the terms, choose Dirichlet smoothing with a prior of 2000, and truncate query language models to 50 terms (these settings are used throughout the experiments).",
                "For all other parameters we use Lemurs default settings.",
                "The baseline turns out to perform above average among the track participants.",
                "After an initial run using this baseline retrieval method, we take the top 60 documents for each topic and apply the theme discovery algorithm to output the clusters (1, 3, or 6 of them), based on which we generate clarification forms.",
                "After user feedback is received, we run the term feedback algorithms (TFB, CFB or TCFB) to estimate updated query models, which are then used for a second iteration of retrieval.",
                "We evaluate the different retrieval methods performance on their rankings of the top 1000 documents.",
                "The evaluation metrics we adopt include mean average (non-interpolated) precision (MAP), precision at top 30 (Pr@30) and total relevant retrieved (RR).",
                "Table 2 shows the performance of various methods and configurations of K × L. The suffixes (1C, 3C, 6C) after TFB,CFB,TCFB stand for the number of clusters (K).",
                "For example, TCFB3C means the TCFB method on the 3 × 16 clarification forms.",
                "From Table 2 we can make the following observations: 1 http://www.lemurproject.com 1.",
                "All methods perform considerably better than the pseudofeedback baseline, with TCFB3C achieving a highest 41.1% improvement in MAP, indicating significant contribution of term feedback for clarification of the users information need.",
                "In other words, term feedback is truly helpful for improving retrieval accuracy. 2.",
                "For TFB, the performance is almost equal on the 1 × 48 and 3 × 16 clarification forms in terms of MAP (although the latter is slightly better in Pr@30 and RR), and a little worse on the 6 × 8 ones. 3.",
                "Both CFB3C and CFB6C perform better than their TFB counterparts in all three metrics, suggesting that feedback on a secondary cluster structure is indeed beneficial.",
                "CFB1C is actually worse because it cannot adjust the weight of its (single) cluster from term feedback and it is merely pseudofeedback. 4.",
                "Although TCFB is just a simple mixture of TFB and CFB by interpolation, it is able to outperform both.",
                "This supports our speculation that TCFB overcomes the drawbacks of TFB (paying attention only to checked terms) and CFB (not distinguishing checked and unchecked terms in a cluster).",
                "Except for TCFB6C v.s.",
                "CFB6C, the performance advantage of TCFB over TFB/CFB is significant at p < 0.05 using the Wilcoxon signed rank test.",
                "This is not true in the case of TFB v.s.",
                "CFB, each of which is better than the other in nearly half of the topics. 6.2 Reduction of Presentation Terms In some situations we may have to reduce the number of presentation terms due to limits in display space or user feedback efforts.",
                "It is interesting to know whether our algorithms performance deteriorates when the user is presented with fewer terms.",
                "Because the presentation terms within each cluster are generated in decreasing order of their frequencies, the presentation list forms a subset of the original one if its size is reduced2 .",
                "Therefore, we can easily simulate what happens when the number of presentation terms decreases 2 There are complexities arising from terms appearing in top L of multiple clusters, but these are exceptions from M to M : we will keep all judgments of the top L = M /K terms in each cluster and discard those of others.",
                "Table 3 shows the performance of various algorithms as the number of presentation terms ranges from 6 to 48.",
                "We find that the performance of TFB is more susceptible to presentation term reduction than that of CFB or TCFB.",
                "For example, at 12 terms the MAP of TFB3C is 90.6% of that at 48 terms, while the numbers for CFB3C and TCFB3C are 98.0% and 96.1% respectively.",
                "We conjecture the reason to be that while TFBs performance heavily depends on how many good terms are chosen for query expansion, CFB only needs a rough estimate of cluster weights to work.",
                "Also, the 3 × 16 clarification forms seem to be more robust than the 6 × 8 ones: at 12 terms the MAP of TFB6C is 87.1% of that at 48 terms, lower than 90.6% for TFB3C.",
                "Similarly, for CFB it is 95.0% against 98.0%.",
                "This is natual, as for a large cluster number of 6, it is easier to get into the situation where each cluster gets too few presentation terms to make topic diversification useful.",
                "Overall, we are surprised to see that the algorithms are still able to perform reasonably well when the number of presentation terms is small.",
                "For example, at only 12 terms CFB3C (the clarification form is of size 3 × 4) can still improve 36.5% over the baseline, dropping slightly from 39.3% at 48 terms. 6.3 User Feedback Analysis In this part we study several aspects of users term feedback behavior, and whether they are connected to retrieval performance.",
                "Figure 2: Clarification form completion time distributions 0−30 30−60 60−90 90−120 120−150 150−180 0 5 10 15 20 25 30 35 completion time (seconds) #topics 1×48 3×16 6×8 Figure 2 shows the distribution of time needed to complete a clarification form3 .",
                "We see that the user is usually able to finish term feedback within a reasonably short amount of time: for more than half of the topics the clarification form is completed in just 1 minute, and only a small fraction of topics (less than 10% for 1 × 48 and 3 × 16) take more than 2 minutes.",
                "This suggests that term feedback is suitable for interactive ad-hoc retrieval, where a user usually does not want to spend too much time on providing feedback.",
                "We find that a user often makes mistakes when judging term relevance.",
                "Sometimes a relevant term may be left out because its connection to the query topic is not obvious to the user.",
                "Other times a dubious term may be included but turns out to be irrelevant.",
                "Take the topic in Figure 1 for example.",
                "There was a fire disaster in Mont 3 The maximal time is 180 seconds, as the NIST assessor would be forced to submit the form at that moment.",
                "Table 4: Term selection statistics (topic average) CF Type 1 × 48 3 × 16 6 × 8 # checked terms 14.8 13.3 11.2 # rel. terms 15.0 12.6 11.2 # rel. checked terms 7.9 6.9 5.9 precision 0.534 0.519 0.527 recall 0.526 0.548 0.527 Blanc Tunnel between France and Italy in 1999, but the user failed to select such keywords as mont, blanc, french and italian due to his/her ignorance of the event.",
                "Indeed, without proper context it would be hard to make perfect judgment.",
                "What is then, the extent to which the user is good at term feedback?",
                "Does it have serious impact on retrieval performance?",
                "To answer these questions, we need a measure of individual terms true relevance.",
                "We adopt the Simplified KL Divergence metric used in [24] to decide query expansion terms as our term relevance measure: σKLD(w) = p(w|R) log p(w|R) p(w|¬R) where p(w|R) is the <br>probability</br> that a relevant document contains term w, and p(w|¬R) is the <br>probability</br> that an irrelevant document contains w, both of which can be easily computed via maximum likelihood estimate given document-level relevance judgment.",
                "If σKLD(w) > 0, w is more likely to appear in relevant documents than irrelevant ones.",
                "We consider a term relevant if its Simplified KL Divergence value is greater than a certain threshold σ0.",
                "We can then define precision and recall of user term judgment accordingly: precision is the fraction of terms checked by the user that are relevant; recall is the fraction of presented relevant terms that are checked by the user.",
                "Table 4 shows the number of checked terms, relevant terms and relevant checked terms when σ0 is set to 1.0, as well as the precision/recall of user term judgment.",
                "Note that when the clarification forms contain more clusters, fewer terms are checked: 14.8 for 1 × 48, 13.3 for 3 × 16 and 11.2 for 6×8.",
                "Similar pattern holds for relevant terms and relevant checked terms.",
                "There seems to be a trade-off between increasing topic diversity by clustering and losing extra relevant terms: when there are more clusters, each of them gets fewer terms to present, which can hurt a major relevant cluster that contains many relevant terms.",
                "Therefore, it is not always helpful to have more clusters, e.g., TFB6C is actually worse than TFB1C.",
                "The major finding we can make from Table 4 is that the user is not particularly good at identifying relevant terms, which echoes the discovery in [18].",
                "In the case of 3 × 16 clarification forms, the average number of terms checked as relevant by the user is 13.3 per topic, and the average number of relevant terms whose σKLD value exceed 1.0 is 12.6.",
                "The user is able to recognize only 6.9 of these terms on average.",
                "Indeed, the precision and recall of user feedback terms (as defined previously) are far from perfect.",
                "On the other hand, If the user had correctly checked all such relevant terms, the performance of our algorithms would have increased a lot, as shown in Table 5.",
                "We see that TFB gets big improvement when there is an oracle who checks all relevant terms, while CFB meets a bottleneck around MAP of 0.325, since all it does is adjust cluster weights, and when the learned weights are close to being accurate, it cannot benefit more from term feedback.",
                "Also note that TCFB fails to outperform TFB, probably because TFB is sufficiently accurate.",
                "Table 5: Change of MAP when using all (and only) relevant terms (σKLD > 1.0) for feedback. original term feedback relevant term feedback TF1 0.288 0.354 TF3 0.288 0.354 TF6 0.278 0.346 CF3 0.305 0.325 CF6 0.301 0.326 TCF3 0.309 0.345 TCF6 0.304 0.341 6.4 Comparison with Relevance Feedback Now we compare term feedback with document-level relevance feedback, in which the user is presented with the top N documents from an initial retrieval and asked to judge their relevance.",
                "The feedback process is simulated using document relevance judgment from NIST.",
                "We use the mixture model based feedback method proposed in [25], with mixture noise set to 0.95 and feedback coefficient set to 0.9.",
                "Comparative evaluation of relevance feedback against other methods is complicated by the fact that some documents have already been viewed during feedback, so it makes no sense to include them in the retrieval results of the second run.",
                "However, this does not hold for term feedback.",
                "Thus, to make it fair w.r.t. users information gain, if the feedback documents are relevant, they should be kept in the top of the ranking; if they are irrelevant, they should be left out.",
                "Therefore, we use relevance feedback to produce a ranking of top 1000 retrieved documents but with every feedback document excluded, and then prepend the relevant feedback documents at the front.",
                "Table 6 shows the performance of relevance feedback for different values of N and compares it with TCFB3C.",
                "Table 6: Performance of relevance feedback for different number of feedback documents (N).",
                "N MAP Pr@30 RR 5 0.302 0.586 4779 10 0.345 0.670 4916 20 0.389 0.772 5004 TCFB3C 0.309 0.491 4947 We see that the performance of TCFB3C is comparable to that of relevance feedback using 5 documents.",
                "Although it is poorer than when there are 10 feedback documents in terms of MAP and Pr@30, it does retrieve more documents (4947) when going down the ranked list.",
                "We try to compare the quality of automatically inserted terms in relevance feedback with that of manually selected terms in term feedback.",
                "This is done by truncating the relevance feedback modified query model to a size equal to the number of checked terms for the same topic.",
                "We can then compare the terms in the truncated model with the checked terms.",
                "Figure 3 shows the distribution of the terms σKLD scores.",
                "We find that term feedback tends to produce expansion terms of higher quality(those with σKLD > 1) compared to relevance feedback (with 10 feedback documents).",
                "This does not contradict the fact that the latter yields higher retrieval performance.",
                "Actually, when we use the truncated query model instead of the intact one refined from relevance feedback, the MAP is only 0.304.",
                "The truth Figure 3: Comparison of expansion term quality between relevance feedback (with 10 feedback documents) and term feedback (with 3 × 16 CFs) −1−0 0−1 1−2 2−3 3−4 4−5 5−6 0 50 100 150 200 250 300 350 σKLD #terms relevance feedback term feedback is, although there are many unwanted terms in the expanded query model from feedback documents, there are also more relevant terms than what the user can possibly select from the list of presentation terms generated with pseudo-feedback documents, and the positive effects often outweights the negative ones.",
                "We are interested to know under what circumstances term feedback has advantage over relevance feedback.",
                "One such situation is when none of the top N feedback documents is relevant, rendering relevance feedback useless.",
                "This is not infrequent, as one might have thought: out of the 50 topics, there are 13 such cases when N = 5, 10 when N = 10, and still 3 when N = 20.",
                "When this happens, one can only back off to the original retrieval method; the power of relevance feedback is lost.",
                "Surprisingly, in 11 out of 13 such cases where relevance feedback seems impossible, the user is able to check at least 2 relevant terms from the 3 × 16 clarification form (we consider term t to be relevant if σKLD(t) > 1.0).",
                "Furthermore, in 10 out of them TCFB3C outperforms the pseudo-feedback baseline, increasing MAP from 0.076 to 0.146 on average (these are particularly hard topics).",
                "We think that there are two possible explanations for this phenomenon of term feedback being active even when relevance feedback does not work: First, even if none of the top N (suppose it is a small number) documents are relevant, we may still find relevant documents in top 60, which is more inclusive but usually unreachable when people are doing relevance feedback in interactive ad-hoc search, from which we can draw feedback terms.",
                "This is true for topic 367 piracy, where the top 10 feedback documents are all about software piracy, yet there are documents between 10-60 that are about piracy on the seas (which is about the real information need), contributing terms such as pirate, ship for selection in the clarification form.",
                "Second, for some topics, a document needs to meet some special condition in order to be relevant.",
                "The top N documents may be related to the topic, but nonetheless irrelevant.",
                "In this case, we may still extract useful terms from these documents, even if they do not qualify as relevant ones.",
                "For example, in topic 639 consumer online shopping, a document needs to mention what contributes to shopping growth to really match the specified information need, hence none of the top 10 feedback documents are regarded as relevant.",
                "But nevertheless, the feedback terms such as retail, commerce are good for query expansion. 7.",
                "CONCLUSIONS In this paper we studied the use of term feedback for interactive information retrieval in the language modeling approach.",
                "We proposed a cluster-based method for selecting presentation terms as well as algorithms to estimate refined query models from user term feedback.",
                "We saw significant improvement in retrieval accuracy brought by term feedback, in spite of the fact that a user often makes mistakes in relevance judgment that hurts its performance.",
                "We found the best-performing algorithm to be TCFB, which benefits from the combination of directly observed term evidence with TFB and indirectly learned cluster relevance with CFB.",
                "When we reduced the number of presentation terms, term feedback is still able to keep much of its performance gain over the baseline.",
                "Finally, we compared term feedback to document-level relevance feedback, and found that TCFB3Cs performance is on a par with the latter with 5 feedback documents.",
                "We regarded term feedback as a viable alternative to traditional relevance feedback, especially when there are no relevant documents in the top.",
                "We propose to extend our work in several ways.",
                "First, we want to study whether the use of various contexts can help the user to better identify term relevance, while not sacrificing the simplicity and compactness of term feedback.",
                "Second, currently all terms are presented to the user in a single batch.",
                "We could instead consider iterative term feedback, by presenting a small number of terms first, and show more terms after receiving user feedback or stop when the refined query is good enough.",
                "The presented terms should be selected dynamically to maximize learning benefits at any moment.",
                "Third, we have plans to incorporate term feedback into our UCAIR toolbar[20], an Internet Explorer plugin, to make it work for web search.",
                "We are also interested in studying how to combine term feedback with relevance feedback or implicit feedback.",
                "We could, for example, allow the user to dynamically modify terms in a language model learned from feedback documents. 8.",
                "ACKNOWLEDGMENT This work is supported in part by the National Science Foundation grants IIS-0347933 and IIS-0428472. 9.",
                "REFERENCES [1] J. Allan.",
                "Relevance feedback with too much data.",
                "In Proceedings of the 18th annual international ACM SIGIR conference on research and development in information retrieval, pages 337-343, 1995. [2] J. Allan.",
                "HARD track overview in TREC 2005 - High Accuracy Retrieval from Documents.",
                "In The Fourteenth Text REtrieval Conference, 2005. [3] P. Anick.",
                "Using terminological feedback for web search refinement: a log-based study.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 88-95, 2003. [4] P. G. Anick and S. Tipirneni.",
                "The paraphrase search assistant: terminological feedback for iterative information seeking.",
                "In Proceedings of the 22nd annual international ACM SIGIR conference on research and development in information retrieval, pages 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan, and A. Singhal.",
                "Automatic query expansion using SMART.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [6] D. Harman.",
                "Towards interactive query expansion.",
                "In Proceedings of the 11th annual international ACM SIGIR conference on research and development in information retrieval, pages 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wade, and J. Allan.",
                "UMass at TREC 2003: HARD and QA.",
                "In TREC, pages 715-725, 2003. [8] H. Joho, C. Coverson, M. Sanderson, and M. Beaulieu.",
                "Hierarchical presentation of expansion terms.",
                "In Proceedings of the 2002 ACM symposium on applied computing, pages 645-649, 2002. [9] K. S. Jones, S. Walker, and S. E. Robertson.",
                "A probabilistic model of information retrieval: development and status.",
                "Technical Report 446, Computer Laboratory, University of Cambridge, 1998. [10] D. Kelly, V. D. Dollu, and X. Fu.",
                "The loquacious user: a document-independent source of terms for query expansion.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 457-464, 2005. [11] D. Kelly and X. Fu.",
                "Elicitation of term relevance feedback: an investigation of term source and context.",
                "In Proceedings of the 29th annual international ACM SIGIR conference on research and development in information retrieval, 2006. [12] J. Koenemann and N. Belkin.",
                "A case for interaction: A study of interactive information retrieval behavior and effectiveness.",
                "In Proceedings of the SIGCHI conference on human factors in computing systems, pages 205-212, 1996. [13] V. Lavrenko and W. B. Croft.",
                "Relevance-based language models.",
                "In Research and Development in Information Retrieval, pages 120-127, 2001. [14] Y. Nemeth, B. Shapira, and M. Taeib-Maimon.",
                "Evaluation of the real and perceived value of automatic and interactive query expansion.",
                "In Proceedings of the 27th annual international ACM SIGIR conference on research and development in information retrieval, pages 526-527, 2004. [15] J. Ponte.",
                "A Language Modeling Approach to Information Retrieval.",
                "PhD thesis, University of Massachusetts at Amherst, 1998. [16] S. E. Robertson, S. Walker, S. Jones, M. Beaulieu, and M. Gatford.",
                "Okapi at TREC-3.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [17] J. Rocchio.",
                "Relevance feedback in information retrieval.",
                "In The SMART retrieval system, pages 313-323. 1971. [18] I. Ruthven.",
                "Re-examining the potential effectiveness of interactive query expansion.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 213-220, 2003. [19] G. Salton and C. Buckley.",
                "Improving retrieval performance by relevance feedback.",
                "Journal of the American Society for Information Science, 41:288-297, 1990. [20] X. Shen, B. Tan, and C. Zhai.",
                "Implicit user modeling for personalized search.",
                "In Proceedings of the 14th ACM international conference on information and knowledge management, pages 824-831, 2005. [21] X. Shen and C. Zhai.",
                "Active feedback in ad-hoc information retrieval.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 59-66, 2005. [22] A. Spink.",
                "Term relevance feedback and query expansion: relation to design.",
                "In Proceedings of the 17th annual international ACM SIGIR conference on research and development in information retrieval, pages 81-90, 1994. [23] J. Xu and W. B. Croft.",
                "Query expansion using local and global document analysis.",
                "In Proceedings of the 19th annual international ACM SIGIR conference on research and development in information retrieval, pages 4-11, 1996. [24] H. Zaragoza, N. Craswell, M. Taylor, S. Saria, and S. Robertson.",
                "Microsoft cambridge at TREC-13: Web and HARD tracks.",
                "In Proceedings of the 13th Text REtrieval Conference, 2004. [25] C. Zhai and J. Lafferty.",
                "Model-based feedback in the language modeling approach to information retrieval.",
                "In Proceedings of the tenth international conference on information and knowledge management, pages 403-410, 2001. [26] C. Zhai, A. Velivelli, and B. Yu.",
                "A cross-collection mixture model for comparative text mining.",
                "In Proceedings of the tenth ACM SIGKDD international conference on knowledge discovery and data mining, pages 743-748, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Luego estimamos los modelos de clúster maximizando la \"probabilidad\" de los documentos de pseudo-retroalimentación que se generan a partir del modelo de mezcla multinomial: log p (d | λ) = d∈D w∈V c (w; d) log p (w| d) donde d = {di |i = 1, 2, · · · n} es el conjunto de n documentos, v es el vocabulario, c (w; d) es la frecuencia de ws en d y λ = {θi |i = 1, 2, · · · k} ∪ {πdij |i = 1, 2, · · · n, j = 1, 2, · · · k} es el conjunto de parámetros del modelo a estimar.",
                "Si un término está en la parte superior L en múltiples grupos, lo asignamos al clúster donde tiene la \"probabilidad\" más alta y dejamos que los otros clústeres tomen un término más como compensación.",
                "Adoptamos la métrica de divergencia KL simplificada utilizada en [24] para decidir los términos de expansión de la consulta como nuestra medida de relevancia de término: σkld (w) = p (w | r) log p (w | r) p (w | ¬r) donde p(w | r) es la \"probabilidad\" de que un documento relevante contenga el término w, y p (w | ¬r) es la \"probabilidad\" de que un documento irrelevante contenga W, los cuales se pueden calcular fácilmente mediante una estimación de máxima probabilidad dadaJuicio de relevancia a nivel de documento."
            ],
            "translated_text": "",
            "candidates": [
                "probabilidad",
                "probabilidad",
                "probabilidad",
                "probabilidad",
                "probabilidad",
                "probabilidad",
                "probabilidad"
            ],
            "error": []
        },
        "kl-divergence": {
            "translated_key": "KL-divergencia",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Term Feedback for Information Retrieval with Language Models Bin Tan† , Atulya Velivelli‡ , Hui Fang† , ChengXiang Zhai† Dept.",
                "of Computer Science† , Dept. of Electrical and Computer Engineering‡ University of Illinois at Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.edu ABSTRACT In this paper we study term-based feedback for information retrieval in the language modeling approach.",
                "With term feedback a user directly judges the relevance of individual terms without interaction with feedback documents, taking full control of the query expansion process.",
                "We propose a cluster-based method for selecting terms to present to the user for judgment, as well as effective algorithms for constructing refined query language models from user term feedback.",
                "Our algorithms are shown to bring significant improvement in retrieval accuracy over a non-feedback baseline, and achieve comparable performance to relevance feedback.",
                "They are helpful even when there are no relevant documents in the top.",
                "Categories and Subject Descriptors H.3.3 [Information Search and Retrieval]: Retrieval models General Terms Algorithms 1.",
                "INTRODUCTION In the language modeling approach to information retrieval, feedback is often modeled as estimating an improved query model or relevance model based on a set of feedback documents [25, 13].",
                "This is in line with the traditional way of doing relevance feedback - presenting a user with documents/passages for relevance judgment and then extracting terms from the judged documents or passages to expand the initial query.",
                "It is an indirect way of seeking users assistance for query model construction, in the sense that the refined query model (based on terms) is learned through feedback documents/passages, which are high-level structures of terms.",
                "It has the disadvantage that irrelevant terms, which occur along with relevant ones in the judged content, may be erroneously used for query expansion, causing undesired effects.",
                "For example, for the TREC query Hubble telescope achievements, when a relevant document talks more about the telescopes repair than its discoveries, irrelevant terms such as spacewalk can be added into the modified query.",
                "We can consider a more direct way to involve a user in query model improvement, without an intermediary step of document feedback that can introduce noise.",
                "The idea is to present a (reasonable) number of individual terms to the user and ask him/her to judge the relevance of each term or directly specify their probabilities in the query model.",
                "This strategy has been discussed in [15], but to our knowledge, it has not been seriously studied in existing language modeling literature.",
                "Compared to traditional relevance feedback, this term-based approach to interactive query model refinement has several advantages.",
                "First, the user has better control of the final query model through direct manipulation of terms: he/she can dictate which terms are relevant, irrelevant, and possibly, to what degree.",
                "This avoids the risk of bringing unwanted terms into the query model, although sometimes the user introduces low-quality terms.",
                "Second, because a term takes less time to judge than a documents full text or summary, and as few as around 20 presented terms can bring significant improvement in retrieval performance (as we will show later), term feedback makes it faster to gather user feedback.",
                "This is especially helpful for interactive adhoc search.",
                "Third, sometimes there are no relevant documents in the top N of the initially retrieved results if the topic is hard.",
                "This is often true when N is constrained to be small, which arises from the fact that the user is unwilling to judge too many documents.",
                "In this case, relevance feedback is useless, as no relevant document can be leveraged on, but term feedback is still often helpful, by allowing relevant terms to be picked from irrelevant documents.",
                "During our participation in the TREC 2005 HARD Track and continued study afterward, we explored how to exploit term feedback from the user to construct improved query models for information retrieval in the language modeling approach.",
                "We identified two key subtasks of term-based feedback, i.e., pre-feedback presentation term selection and post-feedback query model construction, with effective algorithms developed for both.",
                "We imposed a secondary cluster structure on terms and found that a cluster view sheds additional insight into the users information need, and provides a good way of utilizing term feedback.",
                "Through experiments we found that term feedback improves significantly over the nonfeedback baseline, even though the user often makes mistakes in relevance judgment.",
                "Among our algorithms, the one with best retrieval performance is TCFB, the combination of TFB, the direct term feedback algorithm, and CFB, the cluster-based feedback algorithm.",
                "We also varied the number of feedback terms and observed reasonable improvement even at low numbers.",
                "Finally, by comparing term feedback with document-level feedback, we found it to be a viable alternative to the latter with competitive retrieval performance.",
                "The rest of the paper is organized as follows.",
                "Section 2 discusses some related work.",
                "Section 4 outlines our general approach to term feedback.",
                "We present our method for presentation term selection in Section 3 and algorithms for query model construction in Section 5.",
                "The experiment results are given in Section 6.",
                "Section 7 concludes this paper. 2.",
                "RELATED WORK Relevance feedback[17, 19] has long been recognized as an effective method for improving retrieval performance.",
                "Normally, the top N documents retrieved using the original query are presented to the user for judgment, after which terms are extracted from the judged relevant documents, weighted by their potential of attracting more relevant documents, and added into the query model.",
                "The expanded query usually represents the users information need better than the original one, which is often just a short keyword query.",
                "A second iteration of retrieval using this modified query usually produces significant increase in retrieval accuracy.",
                "In cases where true relevance judgment is unavailable and all top N documents are assumed to be relevant, it is called blind or pseudo feedback[5, 16] and usually still brings performance improvement.",
                "Because document is a large text unit, when it is used for relevance feedback many irrelevant terms can be introduced into the feedback process.",
                "To overcome this, passage feedback is proposed and shown to improve feedback performance[1, 23].",
                "A more direct solution is to ask the user for their relevance judgment of feedback terms.",
                "For example, in some relevance feedback systems such as [12], there is an interaction step that allows the user to add or remove expansion terms after they are automatically extracted from relevant documents.",
                "This is categorized as interactive query expansion, where the original query is augmented with user-provided terms, which can come from direct user input (free-form text or keywords)[22, 7, 10] or user selection of system-suggested terms (using thesauri[6, 22] or extracted from feedback documents[6, 22, 12, 4, 7]).",
                "In many cases term relevance feedback has been found to effectively improve retrieval performance[6, 22, 12, 4, 10].",
                "For example, the study in [12] shows that the user prefers to have explicit knowledge and direct control of which terms are used for query expansion, and the penetrable interface that provides this freedom is shown to perform better than other interfaces.",
                "However, in some other cases there is no significant benefit[3, 14], even if the user likes interacting with expansion terms.",
                "In a simulated study carried out in [18], the author compares the retrieval performance of interactive query expansion and automatic query expansion with a simulated study, and suggests that the potential benefits of the former can be hard to achieve.",
                "The user is found to be not good at identifying useful terms for query expansion, when a simple term presentation interface is unable to provide sufficient semantic context of the feedback terms.",
                "Our work differs from the previous ones in two important aspects.",
                "First, when we choose terms to present to the user for relevance judgment, we not only consider single-term value (e.g., the relative frequency of a term in the top documents, which can be measured by metrics such as Robertson Selection Value and Simplified Kullback-Leibler Distance as listed in [24]), but also examine the cluster structure of the terms, so as to produce a balanced coverage of the different topic aspects.",
                "Second, with the language modelling framework, we allow an elaborate construction of the updated query model, by setting different probabilities for different terms based on whether it is a query term, its significance in the top documents, and its cluster membership.",
                "Although techniques for adjusting query term weights exist for vector space models[17] and probablistic relevance models[9], most of the aforementioned works do not use them, choosing to just append feedback terms to the original query (thus using equal weights for them), which can lead to poorer retrieval performance.",
                "The combination of the two aspects allows our method to perform much better than the baseline.",
                "The usual way for feedback term presentation is just to display the terms in a list.",
                "There have been some works on alternative user interfaces. [8] arranges terms in a hierarchy, and [11] compares three different interfaces, including terms + checkboxes, terms + context (sentences) + checkboxes, sentences + input text box.",
                "In both studies, however, there is no significant performance difference.",
                "In our work we adopt the simplest approach of terms + checkboxes.",
                "We focus on term presentation and query model construction from feedback terms, and believe using contexts to improve feedback term quality should be orthogonal to our method. 3.",
                "GENERAL APPROACH We follow the language modeling approach, and base our method on the <br>kl-divergence</br> retrieval model proposed in [25].",
                "With this model, the retrieval task involves estimating a query language model θq from a given query, a document language model θd from each document, and calculating their <br>kl-divergence</br> D(θq||θd), which is then used to score the documents. [25] treats relevance feedback as a query model re-estimation problem, i.e., computing an updated query model θq given the original query text and the extra evidence carried by the judged relevant documents.",
                "We adopt this view, and cast our task as updating the query model from user term feedback.",
                "There are two key subtasks here: First, how to choose the best terms to present to the user for judgment, in order to gather maximal evidence about the users information need.",
                "Second, how to compute an updated query model based on this term feedback evidence, so that it captures the users information need and translates into good retrieval performance. 4.",
                "PRESENTATION TERM SELECTION Proper selection of terms to be presented to the user for judgment is crucial to the success of term feedback.",
                "If the terms are poorly chosen and there are few relevant ones, the user will have a hard time looking for useful terms to help clarify his/her information need.",
                "If the relevant terms are plentiful, but all concentrate on a single aspect of the query topic, then we will only be able to get feedback on that aspect and missing others, resulting in a breadth loss in retrieved results.",
                "Therefore, it is important to carefully select presentation terms to maximize expected gain from user feedback, i.e., those that can potentially reveal most evidence of the users information need.",
                "This is similar to active feedback[21], which suggests that a retrieval system should actively probe the users information need, and in the case of relevance feedback, the feedback documents should be chosen to maximize learning benefits (e.g. diversely so as to increase coverage).",
                "In our approach, the top N documents from an initial retrieval using the original query form the source of feedback terms: all terms that appear in them are considered candidates to present to the user.",
                "These documents serve as pseudo-feedback, since they provide a much richer context than the original query (usually very short), while the user is not asked to judge their relevance.",
                "Due to the latter reason, it is possible to make N quite large (e.g., in our experiments we set N = 60) to increase its coverage of different aspects in the topic.",
                "The simplest way of selecting feedback terms is to choose the most frequent M terms from the N documents.",
                "This method, however, has two drawbacks.",
                "First, a lot of common noisy terms will be selected due to their high frequencies in the document collection, unless a stop-word list is used for filtering.",
                "Second, the presentation list will tend to be filled by terms from major aspects of the topic; those from a minor aspect are likely to be missed due to their relatively low frequencies.",
                "We solve the above problems by two corresponding measures.",
                "First, we introduce a background model θB that is estimated from collection statistics and explains the common terms, so that they are much less likely to appear in the presentation list.",
                "Second, the terms are selected from multiple clusters in the pseudo-feedback documents, to ensure sufficient representation of different aspects of the topic.",
                "We rely on the mixture multinomial model, which is used for theme discovery in [26].",
                "Specifically, we assume the N documents contain K clusters {Ci| i = 1, 2, · · · K}, each characterized by a multinomial word distribution (also known as unigram language model) θi and corresponding to an aspect of the topic.",
                "The documents are regarded as sampled from a mixture of K + 1 components, including the K clusters and the background model: p(w|d) = λBp(w|θB) + (1 − λB) K i=1 πd,ip(w|θi) where w is a word, λB is the mixture weight for the background model θB, and πd,i is the document-specific mixture weight for the i-th cluster model θi.",
                "We then estimate the cluster models by maximizing the probability of the pseudo-feedback documents being generated from the multinomial mixture model: log p(D|Λ) = d∈D w∈V c(w; d) log p(w|d) where D = {di| i = 1, 2, · · · N} is the set of the N documents, V is the vocabulary, c(w; d) is ws frequency in d and Λ = {θi| i = 1, 2, · · · K} ∪ {πdij | i = 1, 2, · · · N, j = 1, 2, · · · K} is the set of model parameters to estimate.",
                "The cluster models can be efficiently estimated using the Expectation-Maximization (EM) algorithm.",
                "For its details, we refer the reader to [26].",
                "Table 1 shows the cluster models for TREC query Transportation tunnel disasters (K = 3).",
                "Note that only the middle cluster is relevant.",
                "Table 1: Cluster models for topic 363 Transportation tunnel disasters Cluster 1 Cluster 2 Cluster 3 tunnel 0.0768 tunnel 0.0935 tunnel 0.0454 transport 0.0364 fire 0.0295 transport 0.0406 traffic 0.0206 truck 0.0236 toll 0.0166 railwai 0.0186 french 0.0220 amtrak 0.0153 harbor 0.0146 smoke 0.0157 train 0.0129 rail 0.0140 car 0.0154 airport 0.0122 bridg 0.0139 italian 0.0152 turnpik 0.0105 kilomet 0.0136 firefight 0.0144 lui 0.0095 truck 0.0133 blaze 0.0127 jersei 0.0093 construct 0.0131 blanc 0.0121 pass 0.0087 · · · · · · · · · From each of the K estimated clusters, we choose the L = M/K terms with highest probabilities to form a total of M presentation terms.",
                "If a term happens to be in top L in multiple clusters, we assign it to the cluster where it has highest probability and let the other clusters take one more term as compensation.",
                "We also filter out terms in the original query text because they tend to always be relevant when the query is short.",
                "The selected terms are then presented to the user for judgment.",
                "A sample (completed) feedback form is shown in Figure 1.",
                "In this study we only deal with binary judgment: a presented term is by default unchecked, and a user may check it to indicate relevance.",
                "We also do not explicitly exploit negative feedback (i.e., penalizing irrelevant terms), because with binary feedback an unchecked term is not necessarily irrelevant (maybe the user is unsure about its relevance).",
                "We could ask the user for finer judgment (e.g., choosing from highly relevant, somewhat relevant, do not know, somewhat irrelevant and highly irrelevant), but binary feedback is more compact, taking less space to display and less user effort to make judgment. 5.",
                "ESTIMATING QUERY MODELS FROM TERM FEEDBACK In this section, we present several algorithms for exploiting term feedback.",
                "The algorithms take as input the original query q, the clusters {θi} as generated by the theme discovery algorithm, the set of feedback terms T and their relevance judgment R, and outputs an updated query language model θq that makes best use of the feedback evidence to capture the users information need.",
                "First we describe our notations: • θq: The original query model, derived from query terms only: p(w|θq) = c(w; q) |q| where c(w; q) is the count of w in q, and |q| = w∈q c(w; q) is the query length. • θq : The updated query model which we need to estimate from term feedback. • θi (i = 1, 2, . . .",
                "K): The unigram language model of cluster Ci, as estimated using the theme discovery algorithm. • T = {ti,j} (i = 1 . . .",
                "K, j = 1 . . .",
                "L): The set of terms presented to the user for judgment. ti,j is the j-th term chosen from cluster Ci. • R = {δw|w ∈ T}: δw is an indicator variable that is 1 if w is judged relevant or 0 otherwise. 5.1 TFB (Direct Term Feedback) This is a straight-forward form of term feedback that does not involve any secondary structure.",
                "We give a weight of 1 to terms judged relevant by the user, a weight of μ to query terms, zero weight to other terms, and then apply normalization: p(w|θq ) = δw + μ c(w; q) w ∈T δw + μ|q| where w ∈T δw is the total number of terms that are judged relevant.",
                "We call this method TFB (direct Term FeedBack).",
                "If we let μ = 1, this approach is equivalent to appending the relevant terms after the original query, which is what standard query expansion (without term reweighting) does.",
                "If we set μ > 1, we are putting more emphasis on the query terms than the checked ones.",
                "Note that the result model will be more biased toward θq if the original query is long or the user feedback is weak, which makes sense, as we can trust more on the original query in either case.",
                "Figure 1: Filled clarification form for Topic 363 363 transportation tunnel disasters Please select all terms that are relevant to the topic. traffic railway harbor rail bridge kilometer construct swiss cross link kong hong river project meter shanghai fire truck french smoke car italian firefights blaze blanc mont victim franc rescue driver chamonix emerge toll amtrak train airport turnpike lui jersey pass rome z center electron road boston speed bu submit 5.2 CFB (Cluster Feedback) Here we exploit the cluster structure that played an important role when we selected the presentation terms.",
                "The clusters represent different aspects of the query topic, each of which may or may not be relevant.",
                "If we are able to identify the relevant clusters, we can combine them to generate a query model that is good at discovering documents belonging to these clusters (instead of the irrelevant ones).",
                "We could ask the user to directly judge the relevance of a cluster after viewing representative terms in that cluster, but this would sometimes be a difficult task for the user, who has to guess the semantics of a cluster via its set of terms, which may not be well connected to one another due to a lack of context.",
                "Therefore, we propose to learn cluster feedback indirectly, inferring the relevance of a cluster through the relevance of its feedback terms.",
                "Because each cluster has an equal number of terms presented to the user, the simplest measure of a clusters relevance is the number of terms that are judged relevant in it.",
                "Intuitively, the more terms are marked relevant in a cluster, the closer the cluster is to the query topic, and the more the cluster should participate in query modification.",
                "If we combine the cluster models using weights determined this way and then interpolate with the original query model, we get the following formula for query updating, which we call CFB (Cluster FeedBack): p(w|θq ) = λp(w|θq) + (1 − λ) K i=1 L j=1 δti,j K k=1 L j=1 δtk,j p(w|θi) where L j=1 δti,j is the number of relevant terms in cluster Ci, and K k=1 L j=1 δtk,j is the total number of relevant terms.",
                "We note that when there is only one cluster (K = 1), the above formula degenerates to p(w|θq ) = λp(w|θq) + (1 − λ)p(w|θ1) which is merely pseudo-feedback of the form proposed in [25]. 5.3 TCFB (Term-cluster Feedback) TFB and CFB both have their drawbacks.",
                "TFB assigns non-zero probabilities to the presented terms that are marked relevant, but completely ignores (a lot more) others, which may be left unchecked due to the users ignorance, or simply not included in the presentation list, but we should be able to infer their relevance from the checked ones.",
                "For example, in Figure 1, since as many as 5 terms in the middle cluster (the third and fourth columns) are checked, we should have high confidence in the relevance of other terms in that cluster.",
                "CFB remedies TFBs problem by treating the terms in a cluster collectively, so that unchecked/unpresented terms receive weights when presented terms in their clusters are judged as relevant, but it does not distinguish which terms in a cluster are presented or judged.",
                "Intuitively, the judged relevant terms should receive larger weights because they are explicitly indicated as relevant by the user.",
                "Therefore, we try to combine the two methods, hoping to get the best out of both.",
                "We do this by interpolating the TFB model with the CFB model, and call it TCFB: p(w|θq ) = αp(w|θqT F B ) + (1 − α)p(w|θqCF B ) 6.",
                "EXPERIMENTS In this section, we describe our experiment results.",
                "We first describe our experiment setup and present an overview of various methods performance.",
                "Then we discuss the effects of varying the parameter setting in the algorithms, as well as the number of presentation terms.",
                "Next we analyze user term feedback behavior and its relation to retrieval performance.",
                "Finally we compare term feedback to relevance feedback and show that it has its particular advantage. 6.1 Experiment Setup and Basic Results We took the opportunity of TREC 2005 HARD Track[2] for the evaluation of our algorithms.",
                "The tracks used the AQUAINT collection, a 3GB corpus of English newswire text.",
                "The topics included 50 ones previously known to be hard, i.e. with low retrieval performance.",
                "It is for these hard topics that user feedback is most helpful, as it can provide information to disambiguate the queries; with easy topics the user may be unwilling to spend efforts for feedback if the automatic retrieval results are good enough.",
                "Participants of the track were able to submit custom-designed clarification forms (CF) to solicit feedback from human assessors provided by Table 2: Retrieval performance for different methods and CF types.",
                "The last row is the percentage of MAP improvement over the baseline.",
                "The parameter settings μ = 4, λ = 0.1, α = 0.3 are near optimal.",
                "Baseline TFB1C TFB3C TFB6C CFB1C CFB3C CFB6C TCFB1C TCFB3C TCFB6C MAP 0.219 0.288 0.288 0.278 0.254 0.305 0.301 0.274 0.309 0.304 Pr@30 0.393 0.467 0.475 0.457 0.399 0.480 0.473 0.431 0.491 0.473 RR 4339 4753 4762 4740 4600 4907 4872 4767 4947 4906 % 0% 31.5% 31.5% 26.9% 16.0% 39.3% 37.4% 25.1% 41.1% 38.8% Table 3: MAP variation with the number of presented terms. # terms TFB1C TFB3C TFB6C CFB3C CFB6C TCFB3C TCFB6C 6 0.245 0.240 0.227 0.279 0.279 0.281 0.274 12 0.261 0.261 0.242 0.299 0.286 0.297 0.281 18 0.275 0.274 0.256 0.301 0.282 0.300 0.286 24 0.276 0.281 0.265 0.303 0.292 0.305 0.292 30 0.280 0.285 0.270 0.304 0.296 0.307 0.296 36 0.282 0.288 0.272 0.307 0.297 0.309 0.297 42 0.283 0.288 0.275 0.306 0.298 0.309 0.300 48 0.288 0.288 0.278 0.305 0.301 0.309 0.303 NIST.",
                "We designed three sets of clarification forms for term feedback, differing in the choice of K, the number of clusters, and L, the number of presented terms from each cluster.",
                "They are: 1× 48, a big cluster with 48 terms, 3 × 16, 3 clusters with 16 terms each, and 6 × 8, 6 clusters with 8 terms each.",
                "The total number of presented terms (M) is fixed at 48, so by comparing the performance of different types of clarification forms we can know the effects of different degree of clustering.",
                "For each topic, an assessor would complete the forms ordered by 6 × 8, 1 × 48 and 3 × 16, spending up to three minutes on each form.",
                "The sample clarification form shown in Figure 1 is of type 3 × 16.",
                "It is a simple and compact interface in which the user can check relevant terms.",
                "The form is self-explanatory; there is no need for extra user training on how to use it.",
                "Our initinal queries are constructed only using the topic title descriptions, which are on average 2.7 words in length.",
                "As our baseline we use the KL divergence retrieval method implemented in the Lemur Toolkit1 with 5 pseudo-feedback documents.",
                "We stem the terms, choose Dirichlet smoothing with a prior of 2000, and truncate query language models to 50 terms (these settings are used throughout the experiments).",
                "For all other parameters we use Lemurs default settings.",
                "The baseline turns out to perform above average among the track participants.",
                "After an initial run using this baseline retrieval method, we take the top 60 documents for each topic and apply the theme discovery algorithm to output the clusters (1, 3, or 6 of them), based on which we generate clarification forms.",
                "After user feedback is received, we run the term feedback algorithms (TFB, CFB or TCFB) to estimate updated query models, which are then used for a second iteration of retrieval.",
                "We evaluate the different retrieval methods performance on their rankings of the top 1000 documents.",
                "The evaluation metrics we adopt include mean average (non-interpolated) precision (MAP), precision at top 30 (Pr@30) and total relevant retrieved (RR).",
                "Table 2 shows the performance of various methods and configurations of K × L. The suffixes (1C, 3C, 6C) after TFB,CFB,TCFB stand for the number of clusters (K).",
                "For example, TCFB3C means the TCFB method on the 3 × 16 clarification forms.",
                "From Table 2 we can make the following observations: 1 http://www.lemurproject.com 1.",
                "All methods perform considerably better than the pseudofeedback baseline, with TCFB3C achieving a highest 41.1% improvement in MAP, indicating significant contribution of term feedback for clarification of the users information need.",
                "In other words, term feedback is truly helpful for improving retrieval accuracy. 2.",
                "For TFB, the performance is almost equal on the 1 × 48 and 3 × 16 clarification forms in terms of MAP (although the latter is slightly better in Pr@30 and RR), and a little worse on the 6 × 8 ones. 3.",
                "Both CFB3C and CFB6C perform better than their TFB counterparts in all three metrics, suggesting that feedback on a secondary cluster structure is indeed beneficial.",
                "CFB1C is actually worse because it cannot adjust the weight of its (single) cluster from term feedback and it is merely pseudofeedback. 4.",
                "Although TCFB is just a simple mixture of TFB and CFB by interpolation, it is able to outperform both.",
                "This supports our speculation that TCFB overcomes the drawbacks of TFB (paying attention only to checked terms) and CFB (not distinguishing checked and unchecked terms in a cluster).",
                "Except for TCFB6C v.s.",
                "CFB6C, the performance advantage of TCFB over TFB/CFB is significant at p < 0.05 using the Wilcoxon signed rank test.",
                "This is not true in the case of TFB v.s.",
                "CFB, each of which is better than the other in nearly half of the topics. 6.2 Reduction of Presentation Terms In some situations we may have to reduce the number of presentation terms due to limits in display space or user feedback efforts.",
                "It is interesting to know whether our algorithms performance deteriorates when the user is presented with fewer terms.",
                "Because the presentation terms within each cluster are generated in decreasing order of their frequencies, the presentation list forms a subset of the original one if its size is reduced2 .",
                "Therefore, we can easily simulate what happens when the number of presentation terms decreases 2 There are complexities arising from terms appearing in top L of multiple clusters, but these are exceptions from M to M : we will keep all judgments of the top L = M /K terms in each cluster and discard those of others.",
                "Table 3 shows the performance of various algorithms as the number of presentation terms ranges from 6 to 48.",
                "We find that the performance of TFB is more susceptible to presentation term reduction than that of CFB or TCFB.",
                "For example, at 12 terms the MAP of TFB3C is 90.6% of that at 48 terms, while the numbers for CFB3C and TCFB3C are 98.0% and 96.1% respectively.",
                "We conjecture the reason to be that while TFBs performance heavily depends on how many good terms are chosen for query expansion, CFB only needs a rough estimate of cluster weights to work.",
                "Also, the 3 × 16 clarification forms seem to be more robust than the 6 × 8 ones: at 12 terms the MAP of TFB6C is 87.1% of that at 48 terms, lower than 90.6% for TFB3C.",
                "Similarly, for CFB it is 95.0% against 98.0%.",
                "This is natual, as for a large cluster number of 6, it is easier to get into the situation where each cluster gets too few presentation terms to make topic diversification useful.",
                "Overall, we are surprised to see that the algorithms are still able to perform reasonably well when the number of presentation terms is small.",
                "For example, at only 12 terms CFB3C (the clarification form is of size 3 × 4) can still improve 36.5% over the baseline, dropping slightly from 39.3% at 48 terms. 6.3 User Feedback Analysis In this part we study several aspects of users term feedback behavior, and whether they are connected to retrieval performance.",
                "Figure 2: Clarification form completion time distributions 0−30 30−60 60−90 90−120 120−150 150−180 0 5 10 15 20 25 30 35 completion time (seconds) #topics 1×48 3×16 6×8 Figure 2 shows the distribution of time needed to complete a clarification form3 .",
                "We see that the user is usually able to finish term feedback within a reasonably short amount of time: for more than half of the topics the clarification form is completed in just 1 minute, and only a small fraction of topics (less than 10% for 1 × 48 and 3 × 16) take more than 2 minutes.",
                "This suggests that term feedback is suitable for interactive ad-hoc retrieval, where a user usually does not want to spend too much time on providing feedback.",
                "We find that a user often makes mistakes when judging term relevance.",
                "Sometimes a relevant term may be left out because its connection to the query topic is not obvious to the user.",
                "Other times a dubious term may be included but turns out to be irrelevant.",
                "Take the topic in Figure 1 for example.",
                "There was a fire disaster in Mont 3 The maximal time is 180 seconds, as the NIST assessor would be forced to submit the form at that moment.",
                "Table 4: Term selection statistics (topic average) CF Type 1 × 48 3 × 16 6 × 8 # checked terms 14.8 13.3 11.2 # rel. terms 15.0 12.6 11.2 # rel. checked terms 7.9 6.9 5.9 precision 0.534 0.519 0.527 recall 0.526 0.548 0.527 Blanc Tunnel between France and Italy in 1999, but the user failed to select such keywords as mont, blanc, french and italian due to his/her ignorance of the event.",
                "Indeed, without proper context it would be hard to make perfect judgment.",
                "What is then, the extent to which the user is good at term feedback?",
                "Does it have serious impact on retrieval performance?",
                "To answer these questions, we need a measure of individual terms true relevance.",
                "We adopt the Simplified KL Divergence metric used in [24] to decide query expansion terms as our term relevance measure: σKLD(w) = p(w|R) log p(w|R) p(w|¬R) where p(w|R) is the probability that a relevant document contains term w, and p(w|¬R) is the probability that an irrelevant document contains w, both of which can be easily computed via maximum likelihood estimate given document-level relevance judgment.",
                "If σKLD(w) > 0, w is more likely to appear in relevant documents than irrelevant ones.",
                "We consider a term relevant if its Simplified KL Divergence value is greater than a certain threshold σ0.",
                "We can then define precision and recall of user term judgment accordingly: precision is the fraction of terms checked by the user that are relevant; recall is the fraction of presented relevant terms that are checked by the user.",
                "Table 4 shows the number of checked terms, relevant terms and relevant checked terms when σ0 is set to 1.0, as well as the precision/recall of user term judgment.",
                "Note that when the clarification forms contain more clusters, fewer terms are checked: 14.8 for 1 × 48, 13.3 for 3 × 16 and 11.2 for 6×8.",
                "Similar pattern holds for relevant terms and relevant checked terms.",
                "There seems to be a trade-off between increasing topic diversity by clustering and losing extra relevant terms: when there are more clusters, each of them gets fewer terms to present, which can hurt a major relevant cluster that contains many relevant terms.",
                "Therefore, it is not always helpful to have more clusters, e.g., TFB6C is actually worse than TFB1C.",
                "The major finding we can make from Table 4 is that the user is not particularly good at identifying relevant terms, which echoes the discovery in [18].",
                "In the case of 3 × 16 clarification forms, the average number of terms checked as relevant by the user is 13.3 per topic, and the average number of relevant terms whose σKLD value exceed 1.0 is 12.6.",
                "The user is able to recognize only 6.9 of these terms on average.",
                "Indeed, the precision and recall of user feedback terms (as defined previously) are far from perfect.",
                "On the other hand, If the user had correctly checked all such relevant terms, the performance of our algorithms would have increased a lot, as shown in Table 5.",
                "We see that TFB gets big improvement when there is an oracle who checks all relevant terms, while CFB meets a bottleneck around MAP of 0.325, since all it does is adjust cluster weights, and when the learned weights are close to being accurate, it cannot benefit more from term feedback.",
                "Also note that TCFB fails to outperform TFB, probably because TFB is sufficiently accurate.",
                "Table 5: Change of MAP when using all (and only) relevant terms (σKLD > 1.0) for feedback. original term feedback relevant term feedback TF1 0.288 0.354 TF3 0.288 0.354 TF6 0.278 0.346 CF3 0.305 0.325 CF6 0.301 0.326 TCF3 0.309 0.345 TCF6 0.304 0.341 6.4 Comparison with Relevance Feedback Now we compare term feedback with document-level relevance feedback, in which the user is presented with the top N documents from an initial retrieval and asked to judge their relevance.",
                "The feedback process is simulated using document relevance judgment from NIST.",
                "We use the mixture model based feedback method proposed in [25], with mixture noise set to 0.95 and feedback coefficient set to 0.9.",
                "Comparative evaluation of relevance feedback against other methods is complicated by the fact that some documents have already been viewed during feedback, so it makes no sense to include them in the retrieval results of the second run.",
                "However, this does not hold for term feedback.",
                "Thus, to make it fair w.r.t. users information gain, if the feedback documents are relevant, they should be kept in the top of the ranking; if they are irrelevant, they should be left out.",
                "Therefore, we use relevance feedback to produce a ranking of top 1000 retrieved documents but with every feedback document excluded, and then prepend the relevant feedback documents at the front.",
                "Table 6 shows the performance of relevance feedback for different values of N and compares it with TCFB3C.",
                "Table 6: Performance of relevance feedback for different number of feedback documents (N).",
                "N MAP Pr@30 RR 5 0.302 0.586 4779 10 0.345 0.670 4916 20 0.389 0.772 5004 TCFB3C 0.309 0.491 4947 We see that the performance of TCFB3C is comparable to that of relevance feedback using 5 documents.",
                "Although it is poorer than when there are 10 feedback documents in terms of MAP and Pr@30, it does retrieve more documents (4947) when going down the ranked list.",
                "We try to compare the quality of automatically inserted terms in relevance feedback with that of manually selected terms in term feedback.",
                "This is done by truncating the relevance feedback modified query model to a size equal to the number of checked terms for the same topic.",
                "We can then compare the terms in the truncated model with the checked terms.",
                "Figure 3 shows the distribution of the terms σKLD scores.",
                "We find that term feedback tends to produce expansion terms of higher quality(those with σKLD > 1) compared to relevance feedback (with 10 feedback documents).",
                "This does not contradict the fact that the latter yields higher retrieval performance.",
                "Actually, when we use the truncated query model instead of the intact one refined from relevance feedback, the MAP is only 0.304.",
                "The truth Figure 3: Comparison of expansion term quality between relevance feedback (with 10 feedback documents) and term feedback (with 3 × 16 CFs) −1−0 0−1 1−2 2−3 3−4 4−5 5−6 0 50 100 150 200 250 300 350 σKLD #terms relevance feedback term feedback is, although there are many unwanted terms in the expanded query model from feedback documents, there are also more relevant terms than what the user can possibly select from the list of presentation terms generated with pseudo-feedback documents, and the positive effects often outweights the negative ones.",
                "We are interested to know under what circumstances term feedback has advantage over relevance feedback.",
                "One such situation is when none of the top N feedback documents is relevant, rendering relevance feedback useless.",
                "This is not infrequent, as one might have thought: out of the 50 topics, there are 13 such cases when N = 5, 10 when N = 10, and still 3 when N = 20.",
                "When this happens, one can only back off to the original retrieval method; the power of relevance feedback is lost.",
                "Surprisingly, in 11 out of 13 such cases where relevance feedback seems impossible, the user is able to check at least 2 relevant terms from the 3 × 16 clarification form (we consider term t to be relevant if σKLD(t) > 1.0).",
                "Furthermore, in 10 out of them TCFB3C outperforms the pseudo-feedback baseline, increasing MAP from 0.076 to 0.146 on average (these are particularly hard topics).",
                "We think that there are two possible explanations for this phenomenon of term feedback being active even when relevance feedback does not work: First, even if none of the top N (suppose it is a small number) documents are relevant, we may still find relevant documents in top 60, which is more inclusive but usually unreachable when people are doing relevance feedback in interactive ad-hoc search, from which we can draw feedback terms.",
                "This is true for topic 367 piracy, where the top 10 feedback documents are all about software piracy, yet there are documents between 10-60 that are about piracy on the seas (which is about the real information need), contributing terms such as pirate, ship for selection in the clarification form.",
                "Second, for some topics, a document needs to meet some special condition in order to be relevant.",
                "The top N documents may be related to the topic, but nonetheless irrelevant.",
                "In this case, we may still extract useful terms from these documents, even if they do not qualify as relevant ones.",
                "For example, in topic 639 consumer online shopping, a document needs to mention what contributes to shopping growth to really match the specified information need, hence none of the top 10 feedback documents are regarded as relevant.",
                "But nevertheless, the feedback terms such as retail, commerce are good for query expansion. 7.",
                "CONCLUSIONS In this paper we studied the use of term feedback for interactive information retrieval in the language modeling approach.",
                "We proposed a cluster-based method for selecting presentation terms as well as algorithms to estimate refined query models from user term feedback.",
                "We saw significant improvement in retrieval accuracy brought by term feedback, in spite of the fact that a user often makes mistakes in relevance judgment that hurts its performance.",
                "We found the best-performing algorithm to be TCFB, which benefits from the combination of directly observed term evidence with TFB and indirectly learned cluster relevance with CFB.",
                "When we reduced the number of presentation terms, term feedback is still able to keep much of its performance gain over the baseline.",
                "Finally, we compared term feedback to document-level relevance feedback, and found that TCFB3Cs performance is on a par with the latter with 5 feedback documents.",
                "We regarded term feedback as a viable alternative to traditional relevance feedback, especially when there are no relevant documents in the top.",
                "We propose to extend our work in several ways.",
                "First, we want to study whether the use of various contexts can help the user to better identify term relevance, while not sacrificing the simplicity and compactness of term feedback.",
                "Second, currently all terms are presented to the user in a single batch.",
                "We could instead consider iterative term feedback, by presenting a small number of terms first, and show more terms after receiving user feedback or stop when the refined query is good enough.",
                "The presented terms should be selected dynamically to maximize learning benefits at any moment.",
                "Third, we have plans to incorporate term feedback into our UCAIR toolbar[20], an Internet Explorer plugin, to make it work for web search.",
                "We are also interested in studying how to combine term feedback with relevance feedback or implicit feedback.",
                "We could, for example, allow the user to dynamically modify terms in a language model learned from feedback documents. 8.",
                "ACKNOWLEDGMENT This work is supported in part by the National Science Foundation grants IIS-0347933 and IIS-0428472. 9.",
                "REFERENCES [1] J. Allan.",
                "Relevance feedback with too much data.",
                "In Proceedings of the 18th annual international ACM SIGIR conference on research and development in information retrieval, pages 337-343, 1995. [2] J. Allan.",
                "HARD track overview in TREC 2005 - High Accuracy Retrieval from Documents.",
                "In The Fourteenth Text REtrieval Conference, 2005. [3] P. Anick.",
                "Using terminological feedback for web search refinement: a log-based study.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 88-95, 2003. [4] P. G. Anick and S. Tipirneni.",
                "The paraphrase search assistant: terminological feedback for iterative information seeking.",
                "In Proceedings of the 22nd annual international ACM SIGIR conference on research and development in information retrieval, pages 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan, and A. Singhal.",
                "Automatic query expansion using SMART.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [6] D. Harman.",
                "Towards interactive query expansion.",
                "In Proceedings of the 11th annual international ACM SIGIR conference on research and development in information retrieval, pages 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wade, and J. Allan.",
                "UMass at TREC 2003: HARD and QA.",
                "In TREC, pages 715-725, 2003. [8] H. Joho, C. Coverson, M. Sanderson, and M. Beaulieu.",
                "Hierarchical presentation of expansion terms.",
                "In Proceedings of the 2002 ACM symposium on applied computing, pages 645-649, 2002. [9] K. S. Jones, S. Walker, and S. E. Robertson.",
                "A probabilistic model of information retrieval: development and status.",
                "Technical Report 446, Computer Laboratory, University of Cambridge, 1998. [10] D. Kelly, V. D. Dollu, and X. Fu.",
                "The loquacious user: a document-independent source of terms for query expansion.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 457-464, 2005. [11] D. Kelly and X. Fu.",
                "Elicitation of term relevance feedback: an investigation of term source and context.",
                "In Proceedings of the 29th annual international ACM SIGIR conference on research and development in information retrieval, 2006. [12] J. Koenemann and N. Belkin.",
                "A case for interaction: A study of interactive information retrieval behavior and effectiveness.",
                "In Proceedings of the SIGCHI conference on human factors in computing systems, pages 205-212, 1996. [13] V. Lavrenko and W. B. Croft.",
                "Relevance-based language models.",
                "In Research and Development in Information Retrieval, pages 120-127, 2001. [14] Y. Nemeth, B. Shapira, and M. Taeib-Maimon.",
                "Evaluation of the real and perceived value of automatic and interactive query expansion.",
                "In Proceedings of the 27th annual international ACM SIGIR conference on research and development in information retrieval, pages 526-527, 2004. [15] J. Ponte.",
                "A Language Modeling Approach to Information Retrieval.",
                "PhD thesis, University of Massachusetts at Amherst, 1998. [16] S. E. Robertson, S. Walker, S. Jones, M. Beaulieu, and M. Gatford.",
                "Okapi at TREC-3.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [17] J. Rocchio.",
                "Relevance feedback in information retrieval.",
                "In The SMART retrieval system, pages 313-323. 1971. [18] I. Ruthven.",
                "Re-examining the potential effectiveness of interactive query expansion.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 213-220, 2003. [19] G. Salton and C. Buckley.",
                "Improving retrieval performance by relevance feedback.",
                "Journal of the American Society for Information Science, 41:288-297, 1990. [20] X. Shen, B. Tan, and C. Zhai.",
                "Implicit user modeling for personalized search.",
                "In Proceedings of the 14th ACM international conference on information and knowledge management, pages 824-831, 2005. [21] X. Shen and C. Zhai.",
                "Active feedback in ad-hoc information retrieval.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 59-66, 2005. [22] A. Spink.",
                "Term relevance feedback and query expansion: relation to design.",
                "In Proceedings of the 17th annual international ACM SIGIR conference on research and development in information retrieval, pages 81-90, 1994. [23] J. Xu and W. B. Croft.",
                "Query expansion using local and global document analysis.",
                "In Proceedings of the 19th annual international ACM SIGIR conference on research and development in information retrieval, pages 4-11, 1996. [24] H. Zaragoza, N. Craswell, M. Taylor, S. Saria, and S. Robertson.",
                "Microsoft cambridge at TREC-13: Web and HARD tracks.",
                "In Proceedings of the 13th Text REtrieval Conference, 2004. [25] C. Zhai and J. Lafferty.",
                "Model-based feedback in the language modeling approach to information retrieval.",
                "In Proceedings of the tenth international conference on information and knowledge management, pages 403-410, 2001. [26] C. Zhai, A. Velivelli, and B. Yu.",
                "A cross-collection mixture model for comparative text mining.",
                "In Proceedings of the tenth ACM SIGKDD international conference on knowledge discovery and data mining, pages 743-748, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Enfoque general seguimos el enfoque de modelado de idiomas y basamos nuestro método en el modelo de recuperación de \"KL-Divergencia\" propuesto en [25].",
                "Con este modelo, la tarea de recuperación implica estimar un modelo de lenguaje de consulta θq de una consulta dada, un modelo de lenguaje de documento θd de cada documento, y calcular su \"kl-divergencia\" d (θq || θd), que luego se usa para anotarlos documentos.[25] trata la retroalimentación de relevancia como un problema de reestimación del modelo de consulta, es decir, calcular un modelo de consulta actualizado θq dado el texto de consulta original y la evidencia adicional llevada por los documentos relevantes juzgados."
            ],
            "translated_text": "",
            "candidates": [
                "KL-divergencia",
                "KL-Divergencia",
                "KL-divergencia",
                "kl-divergencia"
            ],
            "error": []
        },
        "presentation term": {
            "translated_key": "término de presentación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Term Feedback for Information Retrieval with Language Models Bin Tan† , Atulya Velivelli‡ , Hui Fang† , ChengXiang Zhai† Dept.",
                "of Computer Science† , Dept. of Electrical and Computer Engineering‡ University of Illinois at Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.edu ABSTRACT In this paper we study term-based feedback for information retrieval in the language modeling approach.",
                "With term feedback a user directly judges the relevance of individual terms without interaction with feedback documents, taking full control of the query expansion process.",
                "We propose a cluster-based method for selecting terms to present to the user for judgment, as well as effective algorithms for constructing refined query language models from user term feedback.",
                "Our algorithms are shown to bring significant improvement in retrieval accuracy over a non-feedback baseline, and achieve comparable performance to relevance feedback.",
                "They are helpful even when there are no relevant documents in the top.",
                "Categories and Subject Descriptors H.3.3 [Information Search and Retrieval]: Retrieval models General Terms Algorithms 1.",
                "INTRODUCTION In the language modeling approach to information retrieval, feedback is often modeled as estimating an improved query model or relevance model based on a set of feedback documents [25, 13].",
                "This is in line with the traditional way of doing relevance feedback - presenting a user with documents/passages for relevance judgment and then extracting terms from the judged documents or passages to expand the initial query.",
                "It is an indirect way of seeking users assistance for query model construction, in the sense that the refined query model (based on terms) is learned through feedback documents/passages, which are high-level structures of terms.",
                "It has the disadvantage that irrelevant terms, which occur along with relevant ones in the judged content, may be erroneously used for query expansion, causing undesired effects.",
                "For example, for the TREC query Hubble telescope achievements, when a relevant document talks more about the telescopes repair than its discoveries, irrelevant terms such as spacewalk can be added into the modified query.",
                "We can consider a more direct way to involve a user in query model improvement, without an intermediary step of document feedback that can introduce noise.",
                "The idea is to present a (reasonable) number of individual terms to the user and ask him/her to judge the relevance of each term or directly specify their probabilities in the query model.",
                "This strategy has been discussed in [15], but to our knowledge, it has not been seriously studied in existing language modeling literature.",
                "Compared to traditional relevance feedback, this term-based approach to interactive query model refinement has several advantages.",
                "First, the user has better control of the final query model through direct manipulation of terms: he/she can dictate which terms are relevant, irrelevant, and possibly, to what degree.",
                "This avoids the risk of bringing unwanted terms into the query model, although sometimes the user introduces low-quality terms.",
                "Second, because a term takes less time to judge than a documents full text or summary, and as few as around 20 presented terms can bring significant improvement in retrieval performance (as we will show later), term feedback makes it faster to gather user feedback.",
                "This is especially helpful for interactive adhoc search.",
                "Third, sometimes there are no relevant documents in the top N of the initially retrieved results if the topic is hard.",
                "This is often true when N is constrained to be small, which arises from the fact that the user is unwilling to judge too many documents.",
                "In this case, relevance feedback is useless, as no relevant document can be leveraged on, but term feedback is still often helpful, by allowing relevant terms to be picked from irrelevant documents.",
                "During our participation in the TREC 2005 HARD Track and continued study afterward, we explored how to exploit term feedback from the user to construct improved query models for information retrieval in the language modeling approach.",
                "We identified two key subtasks of term-based feedback, i.e., pre-feedback <br>presentation term</br> selection and post-feedback query model construction, with effective algorithms developed for both.",
                "We imposed a secondary cluster structure on terms and found that a cluster view sheds additional insight into the users information need, and provides a good way of utilizing term feedback.",
                "Through experiments we found that term feedback improves significantly over the nonfeedback baseline, even though the user often makes mistakes in relevance judgment.",
                "Among our algorithms, the one with best retrieval performance is TCFB, the combination of TFB, the direct term feedback algorithm, and CFB, the cluster-based feedback algorithm.",
                "We also varied the number of feedback terms and observed reasonable improvement even at low numbers.",
                "Finally, by comparing term feedback with document-level feedback, we found it to be a viable alternative to the latter with competitive retrieval performance.",
                "The rest of the paper is organized as follows.",
                "Section 2 discusses some related work.",
                "Section 4 outlines our general approach to term feedback.",
                "We present our method for <br>presentation term</br> selection in Section 3 and algorithms for query model construction in Section 5.",
                "The experiment results are given in Section 6.",
                "Section 7 concludes this paper. 2.",
                "RELATED WORK Relevance feedback[17, 19] has long been recognized as an effective method for improving retrieval performance.",
                "Normally, the top N documents retrieved using the original query are presented to the user for judgment, after which terms are extracted from the judged relevant documents, weighted by their potential of attracting more relevant documents, and added into the query model.",
                "The expanded query usually represents the users information need better than the original one, which is often just a short keyword query.",
                "A second iteration of retrieval using this modified query usually produces significant increase in retrieval accuracy.",
                "In cases where true relevance judgment is unavailable and all top N documents are assumed to be relevant, it is called blind or pseudo feedback[5, 16] and usually still brings performance improvement.",
                "Because document is a large text unit, when it is used for relevance feedback many irrelevant terms can be introduced into the feedback process.",
                "To overcome this, passage feedback is proposed and shown to improve feedback performance[1, 23].",
                "A more direct solution is to ask the user for their relevance judgment of feedback terms.",
                "For example, in some relevance feedback systems such as [12], there is an interaction step that allows the user to add or remove expansion terms after they are automatically extracted from relevant documents.",
                "This is categorized as interactive query expansion, where the original query is augmented with user-provided terms, which can come from direct user input (free-form text or keywords)[22, 7, 10] or user selection of system-suggested terms (using thesauri[6, 22] or extracted from feedback documents[6, 22, 12, 4, 7]).",
                "In many cases term relevance feedback has been found to effectively improve retrieval performance[6, 22, 12, 4, 10].",
                "For example, the study in [12] shows that the user prefers to have explicit knowledge and direct control of which terms are used for query expansion, and the penetrable interface that provides this freedom is shown to perform better than other interfaces.",
                "However, in some other cases there is no significant benefit[3, 14], even if the user likes interacting with expansion terms.",
                "In a simulated study carried out in [18], the author compares the retrieval performance of interactive query expansion and automatic query expansion with a simulated study, and suggests that the potential benefits of the former can be hard to achieve.",
                "The user is found to be not good at identifying useful terms for query expansion, when a simple term presentation interface is unable to provide sufficient semantic context of the feedback terms.",
                "Our work differs from the previous ones in two important aspects.",
                "First, when we choose terms to present to the user for relevance judgment, we not only consider single-term value (e.g., the relative frequency of a term in the top documents, which can be measured by metrics such as Robertson Selection Value and Simplified Kullback-Leibler Distance as listed in [24]), but also examine the cluster structure of the terms, so as to produce a balanced coverage of the different topic aspects.",
                "Second, with the language modelling framework, we allow an elaborate construction of the updated query model, by setting different probabilities for different terms based on whether it is a query term, its significance in the top documents, and its cluster membership.",
                "Although techniques for adjusting query term weights exist for vector space models[17] and probablistic relevance models[9], most of the aforementioned works do not use them, choosing to just append feedback terms to the original query (thus using equal weights for them), which can lead to poorer retrieval performance.",
                "The combination of the two aspects allows our method to perform much better than the baseline.",
                "The usual way for feedback term presentation is just to display the terms in a list.",
                "There have been some works on alternative user interfaces. [8] arranges terms in a hierarchy, and [11] compares three different interfaces, including terms + checkboxes, terms + context (sentences) + checkboxes, sentences + input text box.",
                "In both studies, however, there is no significant performance difference.",
                "In our work we adopt the simplest approach of terms + checkboxes.",
                "We focus on term presentation and query model construction from feedback terms, and believe using contexts to improve feedback term quality should be orthogonal to our method. 3.",
                "GENERAL APPROACH We follow the language modeling approach, and base our method on the KL-divergence retrieval model proposed in [25].",
                "With this model, the retrieval task involves estimating a query language model θq from a given query, a document language model θd from each document, and calculating their KL-divergence D(θq||θd), which is then used to score the documents. [25] treats relevance feedback as a query model re-estimation problem, i.e., computing an updated query model θq given the original query text and the extra evidence carried by the judged relevant documents.",
                "We adopt this view, and cast our task as updating the query model from user term feedback.",
                "There are two key subtasks here: First, how to choose the best terms to present to the user for judgment, in order to gather maximal evidence about the users information need.",
                "Second, how to compute an updated query model based on this term feedback evidence, so that it captures the users information need and translates into good retrieval performance. 4.",
                "<br>presentation term</br> SELECTION Proper selection of terms to be presented to the user for judgment is crucial to the success of term feedback.",
                "If the terms are poorly chosen and there are few relevant ones, the user will have a hard time looking for useful terms to help clarify his/her information need.",
                "If the relevant terms are plentiful, but all concentrate on a single aspect of the query topic, then we will only be able to get feedback on that aspect and missing others, resulting in a breadth loss in retrieved results.",
                "Therefore, it is important to carefully select presentation terms to maximize expected gain from user feedback, i.e., those that can potentially reveal most evidence of the users information need.",
                "This is similar to active feedback[21], which suggests that a retrieval system should actively probe the users information need, and in the case of relevance feedback, the feedback documents should be chosen to maximize learning benefits (e.g. diversely so as to increase coverage).",
                "In our approach, the top N documents from an initial retrieval using the original query form the source of feedback terms: all terms that appear in them are considered candidates to present to the user.",
                "These documents serve as pseudo-feedback, since they provide a much richer context than the original query (usually very short), while the user is not asked to judge their relevance.",
                "Due to the latter reason, it is possible to make N quite large (e.g., in our experiments we set N = 60) to increase its coverage of different aspects in the topic.",
                "The simplest way of selecting feedback terms is to choose the most frequent M terms from the N documents.",
                "This method, however, has two drawbacks.",
                "First, a lot of common noisy terms will be selected due to their high frequencies in the document collection, unless a stop-word list is used for filtering.",
                "Second, the presentation list will tend to be filled by terms from major aspects of the topic; those from a minor aspect are likely to be missed due to their relatively low frequencies.",
                "We solve the above problems by two corresponding measures.",
                "First, we introduce a background model θB that is estimated from collection statistics and explains the common terms, so that they are much less likely to appear in the presentation list.",
                "Second, the terms are selected from multiple clusters in the pseudo-feedback documents, to ensure sufficient representation of different aspects of the topic.",
                "We rely on the mixture multinomial model, which is used for theme discovery in [26].",
                "Specifically, we assume the N documents contain K clusters {Ci| i = 1, 2, · · · K}, each characterized by a multinomial word distribution (also known as unigram language model) θi and corresponding to an aspect of the topic.",
                "The documents are regarded as sampled from a mixture of K + 1 components, including the K clusters and the background model: p(w|d) = λBp(w|θB) + (1 − λB) K i=1 πd,ip(w|θi) where w is a word, λB is the mixture weight for the background model θB, and πd,i is the document-specific mixture weight for the i-th cluster model θi.",
                "We then estimate the cluster models by maximizing the probability of the pseudo-feedback documents being generated from the multinomial mixture model: log p(D|Λ) = d∈D w∈V c(w; d) log p(w|d) where D = {di| i = 1, 2, · · · N} is the set of the N documents, V is the vocabulary, c(w; d) is ws frequency in d and Λ = {θi| i = 1, 2, · · · K} ∪ {πdij | i = 1, 2, · · · N, j = 1, 2, · · · K} is the set of model parameters to estimate.",
                "The cluster models can be efficiently estimated using the Expectation-Maximization (EM) algorithm.",
                "For its details, we refer the reader to [26].",
                "Table 1 shows the cluster models for TREC query Transportation tunnel disasters (K = 3).",
                "Note that only the middle cluster is relevant.",
                "Table 1: Cluster models for topic 363 Transportation tunnel disasters Cluster 1 Cluster 2 Cluster 3 tunnel 0.0768 tunnel 0.0935 tunnel 0.0454 transport 0.0364 fire 0.0295 transport 0.0406 traffic 0.0206 truck 0.0236 toll 0.0166 railwai 0.0186 french 0.0220 amtrak 0.0153 harbor 0.0146 smoke 0.0157 train 0.0129 rail 0.0140 car 0.0154 airport 0.0122 bridg 0.0139 italian 0.0152 turnpik 0.0105 kilomet 0.0136 firefight 0.0144 lui 0.0095 truck 0.0133 blaze 0.0127 jersei 0.0093 construct 0.0131 blanc 0.0121 pass 0.0087 · · · · · · · · · From each of the K estimated clusters, we choose the L = M/K terms with highest probabilities to form a total of M presentation terms.",
                "If a term happens to be in top L in multiple clusters, we assign it to the cluster where it has highest probability and let the other clusters take one more term as compensation.",
                "We also filter out terms in the original query text because they tend to always be relevant when the query is short.",
                "The selected terms are then presented to the user for judgment.",
                "A sample (completed) feedback form is shown in Figure 1.",
                "In this study we only deal with binary judgment: a presented term is by default unchecked, and a user may check it to indicate relevance.",
                "We also do not explicitly exploit negative feedback (i.e., penalizing irrelevant terms), because with binary feedback an unchecked term is not necessarily irrelevant (maybe the user is unsure about its relevance).",
                "We could ask the user for finer judgment (e.g., choosing from highly relevant, somewhat relevant, do not know, somewhat irrelevant and highly irrelevant), but binary feedback is more compact, taking less space to display and less user effort to make judgment. 5.",
                "ESTIMATING QUERY MODELS FROM TERM FEEDBACK In this section, we present several algorithms for exploiting term feedback.",
                "The algorithms take as input the original query q, the clusters {θi} as generated by the theme discovery algorithm, the set of feedback terms T and their relevance judgment R, and outputs an updated query language model θq that makes best use of the feedback evidence to capture the users information need.",
                "First we describe our notations: • θq: The original query model, derived from query terms only: p(w|θq) = c(w; q) |q| where c(w; q) is the count of w in q, and |q| = w∈q c(w; q) is the query length. • θq : The updated query model which we need to estimate from term feedback. • θi (i = 1, 2, . . .",
                "K): The unigram language model of cluster Ci, as estimated using the theme discovery algorithm. • T = {ti,j} (i = 1 . . .",
                "K, j = 1 . . .",
                "L): The set of terms presented to the user for judgment. ti,j is the j-th term chosen from cluster Ci. • R = {δw|w ∈ T}: δw is an indicator variable that is 1 if w is judged relevant or 0 otherwise. 5.1 TFB (Direct Term Feedback) This is a straight-forward form of term feedback that does not involve any secondary structure.",
                "We give a weight of 1 to terms judged relevant by the user, a weight of μ to query terms, zero weight to other terms, and then apply normalization: p(w|θq ) = δw + μ c(w; q) w ∈T δw + μ|q| where w ∈T δw is the total number of terms that are judged relevant.",
                "We call this method TFB (direct Term FeedBack).",
                "If we let μ = 1, this approach is equivalent to appending the relevant terms after the original query, which is what standard query expansion (without term reweighting) does.",
                "If we set μ > 1, we are putting more emphasis on the query terms than the checked ones.",
                "Note that the result model will be more biased toward θq if the original query is long or the user feedback is weak, which makes sense, as we can trust more on the original query in either case.",
                "Figure 1: Filled clarification form for Topic 363 363 transportation tunnel disasters Please select all terms that are relevant to the topic. traffic railway harbor rail bridge kilometer construct swiss cross link kong hong river project meter shanghai fire truck french smoke car italian firefights blaze blanc mont victim franc rescue driver chamonix emerge toll amtrak train airport turnpike lui jersey pass rome z center electron road boston speed bu submit 5.2 CFB (Cluster Feedback) Here we exploit the cluster structure that played an important role when we selected the presentation terms.",
                "The clusters represent different aspects of the query topic, each of which may or may not be relevant.",
                "If we are able to identify the relevant clusters, we can combine them to generate a query model that is good at discovering documents belonging to these clusters (instead of the irrelevant ones).",
                "We could ask the user to directly judge the relevance of a cluster after viewing representative terms in that cluster, but this would sometimes be a difficult task for the user, who has to guess the semantics of a cluster via its set of terms, which may not be well connected to one another due to a lack of context.",
                "Therefore, we propose to learn cluster feedback indirectly, inferring the relevance of a cluster through the relevance of its feedback terms.",
                "Because each cluster has an equal number of terms presented to the user, the simplest measure of a clusters relevance is the number of terms that are judged relevant in it.",
                "Intuitively, the more terms are marked relevant in a cluster, the closer the cluster is to the query topic, and the more the cluster should participate in query modification.",
                "If we combine the cluster models using weights determined this way and then interpolate with the original query model, we get the following formula for query updating, which we call CFB (Cluster FeedBack): p(w|θq ) = λp(w|θq) + (1 − λ) K i=1 L j=1 δti,j K k=1 L j=1 δtk,j p(w|θi) where L j=1 δti,j is the number of relevant terms in cluster Ci, and K k=1 L j=1 δtk,j is the total number of relevant terms.",
                "We note that when there is only one cluster (K = 1), the above formula degenerates to p(w|θq ) = λp(w|θq) + (1 − λ)p(w|θ1) which is merely pseudo-feedback of the form proposed in [25]. 5.3 TCFB (Term-cluster Feedback) TFB and CFB both have their drawbacks.",
                "TFB assigns non-zero probabilities to the presented terms that are marked relevant, but completely ignores (a lot more) others, which may be left unchecked due to the users ignorance, or simply not included in the presentation list, but we should be able to infer their relevance from the checked ones.",
                "For example, in Figure 1, since as many as 5 terms in the middle cluster (the third and fourth columns) are checked, we should have high confidence in the relevance of other terms in that cluster.",
                "CFB remedies TFBs problem by treating the terms in a cluster collectively, so that unchecked/unpresented terms receive weights when presented terms in their clusters are judged as relevant, but it does not distinguish which terms in a cluster are presented or judged.",
                "Intuitively, the judged relevant terms should receive larger weights because they are explicitly indicated as relevant by the user.",
                "Therefore, we try to combine the two methods, hoping to get the best out of both.",
                "We do this by interpolating the TFB model with the CFB model, and call it TCFB: p(w|θq ) = αp(w|θqT F B ) + (1 − α)p(w|θqCF B ) 6.",
                "EXPERIMENTS In this section, we describe our experiment results.",
                "We first describe our experiment setup and present an overview of various methods performance.",
                "Then we discuss the effects of varying the parameter setting in the algorithms, as well as the number of presentation terms.",
                "Next we analyze user term feedback behavior and its relation to retrieval performance.",
                "Finally we compare term feedback to relevance feedback and show that it has its particular advantage. 6.1 Experiment Setup and Basic Results We took the opportunity of TREC 2005 HARD Track[2] for the evaluation of our algorithms.",
                "The tracks used the AQUAINT collection, a 3GB corpus of English newswire text.",
                "The topics included 50 ones previously known to be hard, i.e. with low retrieval performance.",
                "It is for these hard topics that user feedback is most helpful, as it can provide information to disambiguate the queries; with easy topics the user may be unwilling to spend efforts for feedback if the automatic retrieval results are good enough.",
                "Participants of the track were able to submit custom-designed clarification forms (CF) to solicit feedback from human assessors provided by Table 2: Retrieval performance for different methods and CF types.",
                "The last row is the percentage of MAP improvement over the baseline.",
                "The parameter settings μ = 4, λ = 0.1, α = 0.3 are near optimal.",
                "Baseline TFB1C TFB3C TFB6C CFB1C CFB3C CFB6C TCFB1C TCFB3C TCFB6C MAP 0.219 0.288 0.288 0.278 0.254 0.305 0.301 0.274 0.309 0.304 Pr@30 0.393 0.467 0.475 0.457 0.399 0.480 0.473 0.431 0.491 0.473 RR 4339 4753 4762 4740 4600 4907 4872 4767 4947 4906 % 0% 31.5% 31.5% 26.9% 16.0% 39.3% 37.4% 25.1% 41.1% 38.8% Table 3: MAP variation with the number of presented terms. # terms TFB1C TFB3C TFB6C CFB3C CFB6C TCFB3C TCFB6C 6 0.245 0.240 0.227 0.279 0.279 0.281 0.274 12 0.261 0.261 0.242 0.299 0.286 0.297 0.281 18 0.275 0.274 0.256 0.301 0.282 0.300 0.286 24 0.276 0.281 0.265 0.303 0.292 0.305 0.292 30 0.280 0.285 0.270 0.304 0.296 0.307 0.296 36 0.282 0.288 0.272 0.307 0.297 0.309 0.297 42 0.283 0.288 0.275 0.306 0.298 0.309 0.300 48 0.288 0.288 0.278 0.305 0.301 0.309 0.303 NIST.",
                "We designed three sets of clarification forms for term feedback, differing in the choice of K, the number of clusters, and L, the number of presented terms from each cluster.",
                "They are: 1× 48, a big cluster with 48 terms, 3 × 16, 3 clusters with 16 terms each, and 6 × 8, 6 clusters with 8 terms each.",
                "The total number of presented terms (M) is fixed at 48, so by comparing the performance of different types of clarification forms we can know the effects of different degree of clustering.",
                "For each topic, an assessor would complete the forms ordered by 6 × 8, 1 × 48 and 3 × 16, spending up to three minutes on each form.",
                "The sample clarification form shown in Figure 1 is of type 3 × 16.",
                "It is a simple and compact interface in which the user can check relevant terms.",
                "The form is self-explanatory; there is no need for extra user training on how to use it.",
                "Our initinal queries are constructed only using the topic title descriptions, which are on average 2.7 words in length.",
                "As our baseline we use the KL divergence retrieval method implemented in the Lemur Toolkit1 with 5 pseudo-feedback documents.",
                "We stem the terms, choose Dirichlet smoothing with a prior of 2000, and truncate query language models to 50 terms (these settings are used throughout the experiments).",
                "For all other parameters we use Lemurs default settings.",
                "The baseline turns out to perform above average among the track participants.",
                "After an initial run using this baseline retrieval method, we take the top 60 documents for each topic and apply the theme discovery algorithm to output the clusters (1, 3, or 6 of them), based on which we generate clarification forms.",
                "After user feedback is received, we run the term feedback algorithms (TFB, CFB or TCFB) to estimate updated query models, which are then used for a second iteration of retrieval.",
                "We evaluate the different retrieval methods performance on their rankings of the top 1000 documents.",
                "The evaluation metrics we adopt include mean average (non-interpolated) precision (MAP), precision at top 30 (Pr@30) and total relevant retrieved (RR).",
                "Table 2 shows the performance of various methods and configurations of K × L. The suffixes (1C, 3C, 6C) after TFB,CFB,TCFB stand for the number of clusters (K).",
                "For example, TCFB3C means the TCFB method on the 3 × 16 clarification forms.",
                "From Table 2 we can make the following observations: 1 http://www.lemurproject.com 1.",
                "All methods perform considerably better than the pseudofeedback baseline, with TCFB3C achieving a highest 41.1% improvement in MAP, indicating significant contribution of term feedback for clarification of the users information need.",
                "In other words, term feedback is truly helpful for improving retrieval accuracy. 2.",
                "For TFB, the performance is almost equal on the 1 × 48 and 3 × 16 clarification forms in terms of MAP (although the latter is slightly better in Pr@30 and RR), and a little worse on the 6 × 8 ones. 3.",
                "Both CFB3C and CFB6C perform better than their TFB counterparts in all three metrics, suggesting that feedback on a secondary cluster structure is indeed beneficial.",
                "CFB1C is actually worse because it cannot adjust the weight of its (single) cluster from term feedback and it is merely pseudofeedback. 4.",
                "Although TCFB is just a simple mixture of TFB and CFB by interpolation, it is able to outperform both.",
                "This supports our speculation that TCFB overcomes the drawbacks of TFB (paying attention only to checked terms) and CFB (not distinguishing checked and unchecked terms in a cluster).",
                "Except for TCFB6C v.s.",
                "CFB6C, the performance advantage of TCFB over TFB/CFB is significant at p < 0.05 using the Wilcoxon signed rank test.",
                "This is not true in the case of TFB v.s.",
                "CFB, each of which is better than the other in nearly half of the topics. 6.2 Reduction of Presentation Terms In some situations we may have to reduce the number of presentation terms due to limits in display space or user feedback efforts.",
                "It is interesting to know whether our algorithms performance deteriorates when the user is presented with fewer terms.",
                "Because the presentation terms within each cluster are generated in decreasing order of their frequencies, the presentation list forms a subset of the original one if its size is reduced2 .",
                "Therefore, we can easily simulate what happens when the number of presentation terms decreases 2 There are complexities arising from terms appearing in top L of multiple clusters, but these are exceptions from M to M : we will keep all judgments of the top L = M /K terms in each cluster and discard those of others.",
                "Table 3 shows the performance of various algorithms as the number of presentation terms ranges from 6 to 48.",
                "We find that the performance of TFB is more susceptible to <br>presentation term</br> reduction than that of CFB or TCFB.",
                "For example, at 12 terms the MAP of TFB3C is 90.6% of that at 48 terms, while the numbers for CFB3C and TCFB3C are 98.0% and 96.1% respectively.",
                "We conjecture the reason to be that while TFBs performance heavily depends on how many good terms are chosen for query expansion, CFB only needs a rough estimate of cluster weights to work.",
                "Also, the 3 × 16 clarification forms seem to be more robust than the 6 × 8 ones: at 12 terms the MAP of TFB6C is 87.1% of that at 48 terms, lower than 90.6% for TFB3C.",
                "Similarly, for CFB it is 95.0% against 98.0%.",
                "This is natual, as for a large cluster number of 6, it is easier to get into the situation where each cluster gets too few presentation terms to make topic diversification useful.",
                "Overall, we are surprised to see that the algorithms are still able to perform reasonably well when the number of presentation terms is small.",
                "For example, at only 12 terms CFB3C (the clarification form is of size 3 × 4) can still improve 36.5% over the baseline, dropping slightly from 39.3% at 48 terms. 6.3 User Feedback Analysis In this part we study several aspects of users term feedback behavior, and whether they are connected to retrieval performance.",
                "Figure 2: Clarification form completion time distributions 0−30 30−60 60−90 90−120 120−150 150−180 0 5 10 15 20 25 30 35 completion time (seconds) #topics 1×48 3×16 6×8 Figure 2 shows the distribution of time needed to complete a clarification form3 .",
                "We see that the user is usually able to finish term feedback within a reasonably short amount of time: for more than half of the topics the clarification form is completed in just 1 minute, and only a small fraction of topics (less than 10% for 1 × 48 and 3 × 16) take more than 2 minutes.",
                "This suggests that term feedback is suitable for interactive ad-hoc retrieval, where a user usually does not want to spend too much time on providing feedback.",
                "We find that a user often makes mistakes when judging term relevance.",
                "Sometimes a relevant term may be left out because its connection to the query topic is not obvious to the user.",
                "Other times a dubious term may be included but turns out to be irrelevant.",
                "Take the topic in Figure 1 for example.",
                "There was a fire disaster in Mont 3 The maximal time is 180 seconds, as the NIST assessor would be forced to submit the form at that moment.",
                "Table 4: Term selection statistics (topic average) CF Type 1 × 48 3 × 16 6 × 8 # checked terms 14.8 13.3 11.2 # rel. terms 15.0 12.6 11.2 # rel. checked terms 7.9 6.9 5.9 precision 0.534 0.519 0.527 recall 0.526 0.548 0.527 Blanc Tunnel between France and Italy in 1999, but the user failed to select such keywords as mont, blanc, french and italian due to his/her ignorance of the event.",
                "Indeed, without proper context it would be hard to make perfect judgment.",
                "What is then, the extent to which the user is good at term feedback?",
                "Does it have serious impact on retrieval performance?",
                "To answer these questions, we need a measure of individual terms true relevance.",
                "We adopt the Simplified KL Divergence metric used in [24] to decide query expansion terms as our term relevance measure: σKLD(w) = p(w|R) log p(w|R) p(w|¬R) where p(w|R) is the probability that a relevant document contains term w, and p(w|¬R) is the probability that an irrelevant document contains w, both of which can be easily computed via maximum likelihood estimate given document-level relevance judgment.",
                "If σKLD(w) > 0, w is more likely to appear in relevant documents than irrelevant ones.",
                "We consider a term relevant if its Simplified KL Divergence value is greater than a certain threshold σ0.",
                "We can then define precision and recall of user term judgment accordingly: precision is the fraction of terms checked by the user that are relevant; recall is the fraction of presented relevant terms that are checked by the user.",
                "Table 4 shows the number of checked terms, relevant terms and relevant checked terms when σ0 is set to 1.0, as well as the precision/recall of user term judgment.",
                "Note that when the clarification forms contain more clusters, fewer terms are checked: 14.8 for 1 × 48, 13.3 for 3 × 16 and 11.2 for 6×8.",
                "Similar pattern holds for relevant terms and relevant checked terms.",
                "There seems to be a trade-off between increasing topic diversity by clustering and losing extra relevant terms: when there are more clusters, each of them gets fewer terms to present, which can hurt a major relevant cluster that contains many relevant terms.",
                "Therefore, it is not always helpful to have more clusters, e.g., TFB6C is actually worse than TFB1C.",
                "The major finding we can make from Table 4 is that the user is not particularly good at identifying relevant terms, which echoes the discovery in [18].",
                "In the case of 3 × 16 clarification forms, the average number of terms checked as relevant by the user is 13.3 per topic, and the average number of relevant terms whose σKLD value exceed 1.0 is 12.6.",
                "The user is able to recognize only 6.9 of these terms on average.",
                "Indeed, the precision and recall of user feedback terms (as defined previously) are far from perfect.",
                "On the other hand, If the user had correctly checked all such relevant terms, the performance of our algorithms would have increased a lot, as shown in Table 5.",
                "We see that TFB gets big improvement when there is an oracle who checks all relevant terms, while CFB meets a bottleneck around MAP of 0.325, since all it does is adjust cluster weights, and when the learned weights are close to being accurate, it cannot benefit more from term feedback.",
                "Also note that TCFB fails to outperform TFB, probably because TFB is sufficiently accurate.",
                "Table 5: Change of MAP when using all (and only) relevant terms (σKLD > 1.0) for feedback. original term feedback relevant term feedback TF1 0.288 0.354 TF3 0.288 0.354 TF6 0.278 0.346 CF3 0.305 0.325 CF6 0.301 0.326 TCF3 0.309 0.345 TCF6 0.304 0.341 6.4 Comparison with Relevance Feedback Now we compare term feedback with document-level relevance feedback, in which the user is presented with the top N documents from an initial retrieval and asked to judge their relevance.",
                "The feedback process is simulated using document relevance judgment from NIST.",
                "We use the mixture model based feedback method proposed in [25], with mixture noise set to 0.95 and feedback coefficient set to 0.9.",
                "Comparative evaluation of relevance feedback against other methods is complicated by the fact that some documents have already been viewed during feedback, so it makes no sense to include them in the retrieval results of the second run.",
                "However, this does not hold for term feedback.",
                "Thus, to make it fair w.r.t. users information gain, if the feedback documents are relevant, they should be kept in the top of the ranking; if they are irrelevant, they should be left out.",
                "Therefore, we use relevance feedback to produce a ranking of top 1000 retrieved documents but with every feedback document excluded, and then prepend the relevant feedback documents at the front.",
                "Table 6 shows the performance of relevance feedback for different values of N and compares it with TCFB3C.",
                "Table 6: Performance of relevance feedback for different number of feedback documents (N).",
                "N MAP Pr@30 RR 5 0.302 0.586 4779 10 0.345 0.670 4916 20 0.389 0.772 5004 TCFB3C 0.309 0.491 4947 We see that the performance of TCFB3C is comparable to that of relevance feedback using 5 documents.",
                "Although it is poorer than when there are 10 feedback documents in terms of MAP and Pr@30, it does retrieve more documents (4947) when going down the ranked list.",
                "We try to compare the quality of automatically inserted terms in relevance feedback with that of manually selected terms in term feedback.",
                "This is done by truncating the relevance feedback modified query model to a size equal to the number of checked terms for the same topic.",
                "We can then compare the terms in the truncated model with the checked terms.",
                "Figure 3 shows the distribution of the terms σKLD scores.",
                "We find that term feedback tends to produce expansion terms of higher quality(those with σKLD > 1) compared to relevance feedback (with 10 feedback documents).",
                "This does not contradict the fact that the latter yields higher retrieval performance.",
                "Actually, when we use the truncated query model instead of the intact one refined from relevance feedback, the MAP is only 0.304.",
                "The truth Figure 3: Comparison of expansion term quality between relevance feedback (with 10 feedback documents) and term feedback (with 3 × 16 CFs) −1−0 0−1 1−2 2−3 3−4 4−5 5−6 0 50 100 150 200 250 300 350 σKLD #terms relevance feedback term feedback is, although there are many unwanted terms in the expanded query model from feedback documents, there are also more relevant terms than what the user can possibly select from the list of presentation terms generated with pseudo-feedback documents, and the positive effects often outweights the negative ones.",
                "We are interested to know under what circumstances term feedback has advantage over relevance feedback.",
                "One such situation is when none of the top N feedback documents is relevant, rendering relevance feedback useless.",
                "This is not infrequent, as one might have thought: out of the 50 topics, there are 13 such cases when N = 5, 10 when N = 10, and still 3 when N = 20.",
                "When this happens, one can only back off to the original retrieval method; the power of relevance feedback is lost.",
                "Surprisingly, in 11 out of 13 such cases where relevance feedback seems impossible, the user is able to check at least 2 relevant terms from the 3 × 16 clarification form (we consider term t to be relevant if σKLD(t) > 1.0).",
                "Furthermore, in 10 out of them TCFB3C outperforms the pseudo-feedback baseline, increasing MAP from 0.076 to 0.146 on average (these are particularly hard topics).",
                "We think that there are two possible explanations for this phenomenon of term feedback being active even when relevance feedback does not work: First, even if none of the top N (suppose it is a small number) documents are relevant, we may still find relevant documents in top 60, which is more inclusive but usually unreachable when people are doing relevance feedback in interactive ad-hoc search, from which we can draw feedback terms.",
                "This is true for topic 367 piracy, where the top 10 feedback documents are all about software piracy, yet there are documents between 10-60 that are about piracy on the seas (which is about the real information need), contributing terms such as pirate, ship for selection in the clarification form.",
                "Second, for some topics, a document needs to meet some special condition in order to be relevant.",
                "The top N documents may be related to the topic, but nonetheless irrelevant.",
                "In this case, we may still extract useful terms from these documents, even if they do not qualify as relevant ones.",
                "For example, in topic 639 consumer online shopping, a document needs to mention what contributes to shopping growth to really match the specified information need, hence none of the top 10 feedback documents are regarded as relevant.",
                "But nevertheless, the feedback terms such as retail, commerce are good for query expansion. 7.",
                "CONCLUSIONS In this paper we studied the use of term feedback for interactive information retrieval in the language modeling approach.",
                "We proposed a cluster-based method for selecting presentation terms as well as algorithms to estimate refined query models from user term feedback.",
                "We saw significant improvement in retrieval accuracy brought by term feedback, in spite of the fact that a user often makes mistakes in relevance judgment that hurts its performance.",
                "We found the best-performing algorithm to be TCFB, which benefits from the combination of directly observed term evidence with TFB and indirectly learned cluster relevance with CFB.",
                "When we reduced the number of presentation terms, term feedback is still able to keep much of its performance gain over the baseline.",
                "Finally, we compared term feedback to document-level relevance feedback, and found that TCFB3Cs performance is on a par with the latter with 5 feedback documents.",
                "We regarded term feedback as a viable alternative to traditional relevance feedback, especially when there are no relevant documents in the top.",
                "We propose to extend our work in several ways.",
                "First, we want to study whether the use of various contexts can help the user to better identify term relevance, while not sacrificing the simplicity and compactness of term feedback.",
                "Second, currently all terms are presented to the user in a single batch.",
                "We could instead consider iterative term feedback, by presenting a small number of terms first, and show more terms after receiving user feedback or stop when the refined query is good enough.",
                "The presented terms should be selected dynamically to maximize learning benefits at any moment.",
                "Third, we have plans to incorporate term feedback into our UCAIR toolbar[20], an Internet Explorer plugin, to make it work for web search.",
                "We are also interested in studying how to combine term feedback with relevance feedback or implicit feedback.",
                "We could, for example, allow the user to dynamically modify terms in a language model learned from feedback documents. 8.",
                "ACKNOWLEDGMENT This work is supported in part by the National Science Foundation grants IIS-0347933 and IIS-0428472. 9.",
                "REFERENCES [1] J. Allan.",
                "Relevance feedback with too much data.",
                "In Proceedings of the 18th annual international ACM SIGIR conference on research and development in information retrieval, pages 337-343, 1995. [2] J. Allan.",
                "HARD track overview in TREC 2005 - High Accuracy Retrieval from Documents.",
                "In The Fourteenth Text REtrieval Conference, 2005. [3] P. Anick.",
                "Using terminological feedback for web search refinement: a log-based study.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 88-95, 2003. [4] P. G. Anick and S. Tipirneni.",
                "The paraphrase search assistant: terminological feedback for iterative information seeking.",
                "In Proceedings of the 22nd annual international ACM SIGIR conference on research and development in information retrieval, pages 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan, and A. Singhal.",
                "Automatic query expansion using SMART.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [6] D. Harman.",
                "Towards interactive query expansion.",
                "In Proceedings of the 11th annual international ACM SIGIR conference on research and development in information retrieval, pages 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wade, and J. Allan.",
                "UMass at TREC 2003: HARD and QA.",
                "In TREC, pages 715-725, 2003. [8] H. Joho, C. Coverson, M. Sanderson, and M. Beaulieu.",
                "Hierarchical presentation of expansion terms.",
                "In Proceedings of the 2002 ACM symposium on applied computing, pages 645-649, 2002. [9] K. S. Jones, S. Walker, and S. E. Robertson.",
                "A probabilistic model of information retrieval: development and status.",
                "Technical Report 446, Computer Laboratory, University of Cambridge, 1998. [10] D. Kelly, V. D. Dollu, and X. Fu.",
                "The loquacious user: a document-independent source of terms for query expansion.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 457-464, 2005. [11] D. Kelly and X. Fu.",
                "Elicitation of term relevance feedback: an investigation of term source and context.",
                "In Proceedings of the 29th annual international ACM SIGIR conference on research and development in information retrieval, 2006. [12] J. Koenemann and N. Belkin.",
                "A case for interaction: A study of interactive information retrieval behavior and effectiveness.",
                "In Proceedings of the SIGCHI conference on human factors in computing systems, pages 205-212, 1996. [13] V. Lavrenko and W. B. Croft.",
                "Relevance-based language models.",
                "In Research and Development in Information Retrieval, pages 120-127, 2001. [14] Y. Nemeth, B. Shapira, and M. Taeib-Maimon.",
                "Evaluation of the real and perceived value of automatic and interactive query expansion.",
                "In Proceedings of the 27th annual international ACM SIGIR conference on research and development in information retrieval, pages 526-527, 2004. [15] J. Ponte.",
                "A Language Modeling Approach to Information Retrieval.",
                "PhD thesis, University of Massachusetts at Amherst, 1998. [16] S. E. Robertson, S. Walker, S. Jones, M. Beaulieu, and M. Gatford.",
                "Okapi at TREC-3.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [17] J. Rocchio.",
                "Relevance feedback in information retrieval.",
                "In The SMART retrieval system, pages 313-323. 1971. [18] I. Ruthven.",
                "Re-examining the potential effectiveness of interactive query expansion.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 213-220, 2003. [19] G. Salton and C. Buckley.",
                "Improving retrieval performance by relevance feedback.",
                "Journal of the American Society for Information Science, 41:288-297, 1990. [20] X. Shen, B. Tan, and C. Zhai.",
                "Implicit user modeling for personalized search.",
                "In Proceedings of the 14th ACM international conference on information and knowledge management, pages 824-831, 2005. [21] X. Shen and C. Zhai.",
                "Active feedback in ad-hoc information retrieval.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 59-66, 2005. [22] A. Spink.",
                "Term relevance feedback and query expansion: relation to design.",
                "In Proceedings of the 17th annual international ACM SIGIR conference on research and development in information retrieval, pages 81-90, 1994. [23] J. Xu and W. B. Croft.",
                "Query expansion using local and global document analysis.",
                "In Proceedings of the 19th annual international ACM SIGIR conference on research and development in information retrieval, pages 4-11, 1996. [24] H. Zaragoza, N. Craswell, M. Taylor, S. Saria, and S. Robertson.",
                "Microsoft cambridge at TREC-13: Web and HARD tracks.",
                "In Proceedings of the 13th Text REtrieval Conference, 2004. [25] C. Zhai and J. Lafferty.",
                "Model-based feedback in the language modeling approach to information retrieval.",
                "In Proceedings of the tenth international conference on information and knowledge management, pages 403-410, 2001. [26] C. Zhai, A. Velivelli, and B. Yu.",
                "A cross-collection mixture model for comparative text mining.",
                "In Proceedings of the tenth ACM SIGKDD international conference on knowledge discovery and data mining, pages 743-748, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Identificamos dos subtareas clave de la retroalimentación basada en términos, es decir, selección previa al \"término de presentación\" previa al \"término de presentación\" y la construcción del modelo de consulta posterior a la devolución, con algoritmos efectivos desarrollados para ambos.",
                "Presentamos nuestro método para la selección de \"término de presentación\" en la Sección 3 y los algoritmos para la construcción del modelo de consulta en la Sección 5.",
                "Encontramos que el rendimiento de TFB es más susceptible a la reducción del \"término de presentación\" que el de CFB o TCFB."
            ],
            "translated_text": "",
            "candidates": [
                "término de presentación",
                "término de presentación",
                "término de presentación",
                "Término de presentación",
                "término de presentación",
                "término de presentación",
                "término de presentación"
            ],
            "error": []
        },
        "query expansion": {
            "translated_key": "expansión de consultas",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Term Feedback for Information Retrieval with Language Models Bin Tan† , Atulya Velivelli‡ , Hui Fang† , ChengXiang Zhai† Dept.",
                "of Computer Science† , Dept. of Electrical and Computer Engineering‡ University of Illinois at Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.edu ABSTRACT In this paper we study term-based feedback for information retrieval in the language modeling approach.",
                "With term feedback a user directly judges the relevance of individual terms without interaction with feedback documents, taking full control of the <br>query expansion</br> process.",
                "We propose a cluster-based method for selecting terms to present to the user for judgment, as well as effective algorithms for constructing refined query language models from user term feedback.",
                "Our algorithms are shown to bring significant improvement in retrieval accuracy over a non-feedback baseline, and achieve comparable performance to relevance feedback.",
                "They are helpful even when there are no relevant documents in the top.",
                "Categories and Subject Descriptors H.3.3 [Information Search and Retrieval]: Retrieval models General Terms Algorithms 1.",
                "INTRODUCTION In the language modeling approach to information retrieval, feedback is often modeled as estimating an improved query model or relevance model based on a set of feedback documents [25, 13].",
                "This is in line with the traditional way of doing relevance feedback - presenting a user with documents/passages for relevance judgment and then extracting terms from the judged documents or passages to expand the initial query.",
                "It is an indirect way of seeking users assistance for query model construction, in the sense that the refined query model (based on terms) is learned through feedback documents/passages, which are high-level structures of terms.",
                "It has the disadvantage that irrelevant terms, which occur along with relevant ones in the judged content, may be erroneously used for <br>query expansion</br>, causing undesired effects.",
                "For example, for the TREC query Hubble telescope achievements, when a relevant document talks more about the telescopes repair than its discoveries, irrelevant terms such as spacewalk can be added into the modified query.",
                "We can consider a more direct way to involve a user in query model improvement, without an intermediary step of document feedback that can introduce noise.",
                "The idea is to present a (reasonable) number of individual terms to the user and ask him/her to judge the relevance of each term or directly specify their probabilities in the query model.",
                "This strategy has been discussed in [15], but to our knowledge, it has not been seriously studied in existing language modeling literature.",
                "Compared to traditional relevance feedback, this term-based approach to interactive query model refinement has several advantages.",
                "First, the user has better control of the final query model through direct manipulation of terms: he/she can dictate which terms are relevant, irrelevant, and possibly, to what degree.",
                "This avoids the risk of bringing unwanted terms into the query model, although sometimes the user introduces low-quality terms.",
                "Second, because a term takes less time to judge than a documents full text or summary, and as few as around 20 presented terms can bring significant improvement in retrieval performance (as we will show later), term feedback makes it faster to gather user feedback.",
                "This is especially helpful for interactive adhoc search.",
                "Third, sometimes there are no relevant documents in the top N of the initially retrieved results if the topic is hard.",
                "This is often true when N is constrained to be small, which arises from the fact that the user is unwilling to judge too many documents.",
                "In this case, relevance feedback is useless, as no relevant document can be leveraged on, but term feedback is still often helpful, by allowing relevant terms to be picked from irrelevant documents.",
                "During our participation in the TREC 2005 HARD Track and continued study afterward, we explored how to exploit term feedback from the user to construct improved query models for information retrieval in the language modeling approach.",
                "We identified two key subtasks of term-based feedback, i.e., pre-feedback presentation term selection and post-feedback query model construction, with effective algorithms developed for both.",
                "We imposed a secondary cluster structure on terms and found that a cluster view sheds additional insight into the users information need, and provides a good way of utilizing term feedback.",
                "Through experiments we found that term feedback improves significantly over the nonfeedback baseline, even though the user often makes mistakes in relevance judgment.",
                "Among our algorithms, the one with best retrieval performance is TCFB, the combination of TFB, the direct term feedback algorithm, and CFB, the cluster-based feedback algorithm.",
                "We also varied the number of feedback terms and observed reasonable improvement even at low numbers.",
                "Finally, by comparing term feedback with document-level feedback, we found it to be a viable alternative to the latter with competitive retrieval performance.",
                "The rest of the paper is organized as follows.",
                "Section 2 discusses some related work.",
                "Section 4 outlines our general approach to term feedback.",
                "We present our method for presentation term selection in Section 3 and algorithms for query model construction in Section 5.",
                "The experiment results are given in Section 6.",
                "Section 7 concludes this paper. 2.",
                "RELATED WORK Relevance feedback[17, 19] has long been recognized as an effective method for improving retrieval performance.",
                "Normally, the top N documents retrieved using the original query are presented to the user for judgment, after which terms are extracted from the judged relevant documents, weighted by their potential of attracting more relevant documents, and added into the query model.",
                "The expanded query usually represents the users information need better than the original one, which is often just a short keyword query.",
                "A second iteration of retrieval using this modified query usually produces significant increase in retrieval accuracy.",
                "In cases where true relevance judgment is unavailable and all top N documents are assumed to be relevant, it is called blind or pseudo feedback[5, 16] and usually still brings performance improvement.",
                "Because document is a large text unit, when it is used for relevance feedback many irrelevant terms can be introduced into the feedback process.",
                "To overcome this, passage feedback is proposed and shown to improve feedback performance[1, 23].",
                "A more direct solution is to ask the user for their relevance judgment of feedback terms.",
                "For example, in some relevance feedback systems such as [12], there is an interaction step that allows the user to add or remove expansion terms after they are automatically extracted from relevant documents.",
                "This is categorized as interactive <br>query expansion</br>, where the original query is augmented with user-provided terms, which can come from direct user input (free-form text or keywords)[22, 7, 10] or user selection of system-suggested terms (using thesauri[6, 22] or extracted from feedback documents[6, 22, 12, 4, 7]).",
                "In many cases term relevance feedback has been found to effectively improve retrieval performance[6, 22, 12, 4, 10].",
                "For example, the study in [12] shows that the user prefers to have explicit knowledge and direct control of which terms are used for <br>query expansion</br>, and the penetrable interface that provides this freedom is shown to perform better than other interfaces.",
                "However, in some other cases there is no significant benefit[3, 14], even if the user likes interacting with expansion terms.",
                "In a simulated study carried out in [18], the author compares the retrieval performance of interactive <br>query expansion</br> and automatic <br>query expansion</br> with a simulated study, and suggests that the potential benefits of the former can be hard to achieve.",
                "The user is found to be not good at identifying useful terms for <br>query expansion</br>, when a simple term presentation interface is unable to provide sufficient semantic context of the feedback terms.",
                "Our work differs from the previous ones in two important aspects.",
                "First, when we choose terms to present to the user for relevance judgment, we not only consider single-term value (e.g., the relative frequency of a term in the top documents, which can be measured by metrics such as Robertson Selection Value and Simplified Kullback-Leibler Distance as listed in [24]), but also examine the cluster structure of the terms, so as to produce a balanced coverage of the different topic aspects.",
                "Second, with the language modelling framework, we allow an elaborate construction of the updated query model, by setting different probabilities for different terms based on whether it is a query term, its significance in the top documents, and its cluster membership.",
                "Although techniques for adjusting query term weights exist for vector space models[17] and probablistic relevance models[9], most of the aforementioned works do not use them, choosing to just append feedback terms to the original query (thus using equal weights for them), which can lead to poorer retrieval performance.",
                "The combination of the two aspects allows our method to perform much better than the baseline.",
                "The usual way for feedback term presentation is just to display the terms in a list.",
                "There have been some works on alternative user interfaces. [8] arranges terms in a hierarchy, and [11] compares three different interfaces, including terms + checkboxes, terms + context (sentences) + checkboxes, sentences + input text box.",
                "In both studies, however, there is no significant performance difference.",
                "In our work we adopt the simplest approach of terms + checkboxes.",
                "We focus on term presentation and query model construction from feedback terms, and believe using contexts to improve feedback term quality should be orthogonal to our method. 3.",
                "GENERAL APPROACH We follow the language modeling approach, and base our method on the KL-divergence retrieval model proposed in [25].",
                "With this model, the retrieval task involves estimating a query language model θq from a given query, a document language model θd from each document, and calculating their KL-divergence D(θq||θd), which is then used to score the documents. [25] treats relevance feedback as a query model re-estimation problem, i.e., computing an updated query model θq given the original query text and the extra evidence carried by the judged relevant documents.",
                "We adopt this view, and cast our task as updating the query model from user term feedback.",
                "There are two key subtasks here: First, how to choose the best terms to present to the user for judgment, in order to gather maximal evidence about the users information need.",
                "Second, how to compute an updated query model based on this term feedback evidence, so that it captures the users information need and translates into good retrieval performance. 4.",
                "PRESENTATION TERM SELECTION Proper selection of terms to be presented to the user for judgment is crucial to the success of term feedback.",
                "If the terms are poorly chosen and there are few relevant ones, the user will have a hard time looking for useful terms to help clarify his/her information need.",
                "If the relevant terms are plentiful, but all concentrate on a single aspect of the query topic, then we will only be able to get feedback on that aspect and missing others, resulting in a breadth loss in retrieved results.",
                "Therefore, it is important to carefully select presentation terms to maximize expected gain from user feedback, i.e., those that can potentially reveal most evidence of the users information need.",
                "This is similar to active feedback[21], which suggests that a retrieval system should actively probe the users information need, and in the case of relevance feedback, the feedback documents should be chosen to maximize learning benefits (e.g. diversely so as to increase coverage).",
                "In our approach, the top N documents from an initial retrieval using the original query form the source of feedback terms: all terms that appear in them are considered candidates to present to the user.",
                "These documents serve as pseudo-feedback, since they provide a much richer context than the original query (usually very short), while the user is not asked to judge their relevance.",
                "Due to the latter reason, it is possible to make N quite large (e.g., in our experiments we set N = 60) to increase its coverage of different aspects in the topic.",
                "The simplest way of selecting feedback terms is to choose the most frequent M terms from the N documents.",
                "This method, however, has two drawbacks.",
                "First, a lot of common noisy terms will be selected due to their high frequencies in the document collection, unless a stop-word list is used for filtering.",
                "Second, the presentation list will tend to be filled by terms from major aspects of the topic; those from a minor aspect are likely to be missed due to their relatively low frequencies.",
                "We solve the above problems by two corresponding measures.",
                "First, we introduce a background model θB that is estimated from collection statistics and explains the common terms, so that they are much less likely to appear in the presentation list.",
                "Second, the terms are selected from multiple clusters in the pseudo-feedback documents, to ensure sufficient representation of different aspects of the topic.",
                "We rely on the mixture multinomial model, which is used for theme discovery in [26].",
                "Specifically, we assume the N documents contain K clusters {Ci| i = 1, 2, · · · K}, each characterized by a multinomial word distribution (also known as unigram language model) θi and corresponding to an aspect of the topic.",
                "The documents are regarded as sampled from a mixture of K + 1 components, including the K clusters and the background model: p(w|d) = λBp(w|θB) + (1 − λB) K i=1 πd,ip(w|θi) where w is a word, λB is the mixture weight for the background model θB, and πd,i is the document-specific mixture weight for the i-th cluster model θi.",
                "We then estimate the cluster models by maximizing the probability of the pseudo-feedback documents being generated from the multinomial mixture model: log p(D|Λ) = d∈D w∈V c(w; d) log p(w|d) where D = {di| i = 1, 2, · · · N} is the set of the N documents, V is the vocabulary, c(w; d) is ws frequency in d and Λ = {θi| i = 1, 2, · · · K} ∪ {πdij | i = 1, 2, · · · N, j = 1, 2, · · · K} is the set of model parameters to estimate.",
                "The cluster models can be efficiently estimated using the Expectation-Maximization (EM) algorithm.",
                "For its details, we refer the reader to [26].",
                "Table 1 shows the cluster models for TREC query Transportation tunnel disasters (K = 3).",
                "Note that only the middle cluster is relevant.",
                "Table 1: Cluster models for topic 363 Transportation tunnel disasters Cluster 1 Cluster 2 Cluster 3 tunnel 0.0768 tunnel 0.0935 tunnel 0.0454 transport 0.0364 fire 0.0295 transport 0.0406 traffic 0.0206 truck 0.0236 toll 0.0166 railwai 0.0186 french 0.0220 amtrak 0.0153 harbor 0.0146 smoke 0.0157 train 0.0129 rail 0.0140 car 0.0154 airport 0.0122 bridg 0.0139 italian 0.0152 turnpik 0.0105 kilomet 0.0136 firefight 0.0144 lui 0.0095 truck 0.0133 blaze 0.0127 jersei 0.0093 construct 0.0131 blanc 0.0121 pass 0.0087 · · · · · · · · · From each of the K estimated clusters, we choose the L = M/K terms with highest probabilities to form a total of M presentation terms.",
                "If a term happens to be in top L in multiple clusters, we assign it to the cluster where it has highest probability and let the other clusters take one more term as compensation.",
                "We also filter out terms in the original query text because they tend to always be relevant when the query is short.",
                "The selected terms are then presented to the user for judgment.",
                "A sample (completed) feedback form is shown in Figure 1.",
                "In this study we only deal with binary judgment: a presented term is by default unchecked, and a user may check it to indicate relevance.",
                "We also do not explicitly exploit negative feedback (i.e., penalizing irrelevant terms), because with binary feedback an unchecked term is not necessarily irrelevant (maybe the user is unsure about its relevance).",
                "We could ask the user for finer judgment (e.g., choosing from highly relevant, somewhat relevant, do not know, somewhat irrelevant and highly irrelevant), but binary feedback is more compact, taking less space to display and less user effort to make judgment. 5.",
                "ESTIMATING QUERY MODELS FROM TERM FEEDBACK In this section, we present several algorithms for exploiting term feedback.",
                "The algorithms take as input the original query q, the clusters {θi} as generated by the theme discovery algorithm, the set of feedback terms T and their relevance judgment R, and outputs an updated query language model θq that makes best use of the feedback evidence to capture the users information need.",
                "First we describe our notations: • θq: The original query model, derived from query terms only: p(w|θq) = c(w; q) |q| where c(w; q) is the count of w in q, and |q| = w∈q c(w; q) is the query length. • θq : The updated query model which we need to estimate from term feedback. • θi (i = 1, 2, . . .",
                "K): The unigram language model of cluster Ci, as estimated using the theme discovery algorithm. • T = {ti,j} (i = 1 . . .",
                "K, j = 1 . . .",
                "L): The set of terms presented to the user for judgment. ti,j is the j-th term chosen from cluster Ci. • R = {δw|w ∈ T}: δw is an indicator variable that is 1 if w is judged relevant or 0 otherwise. 5.1 TFB (Direct Term Feedback) This is a straight-forward form of term feedback that does not involve any secondary structure.",
                "We give a weight of 1 to terms judged relevant by the user, a weight of μ to query terms, zero weight to other terms, and then apply normalization: p(w|θq ) = δw + μ c(w; q) w ∈T δw + μ|q| where w ∈T δw is the total number of terms that are judged relevant.",
                "We call this method TFB (direct Term FeedBack).",
                "If we let μ = 1, this approach is equivalent to appending the relevant terms after the original query, which is what standard <br>query expansion</br> (without term reweighting) does.",
                "If we set μ > 1, we are putting more emphasis on the query terms than the checked ones.",
                "Note that the result model will be more biased toward θq if the original query is long or the user feedback is weak, which makes sense, as we can trust more on the original query in either case.",
                "Figure 1: Filled clarification form for Topic 363 363 transportation tunnel disasters Please select all terms that are relevant to the topic. traffic railway harbor rail bridge kilometer construct swiss cross link kong hong river project meter shanghai fire truck french smoke car italian firefights blaze blanc mont victim franc rescue driver chamonix emerge toll amtrak train airport turnpike lui jersey pass rome z center electron road boston speed bu submit 5.2 CFB (Cluster Feedback) Here we exploit the cluster structure that played an important role when we selected the presentation terms.",
                "The clusters represent different aspects of the query topic, each of which may or may not be relevant.",
                "If we are able to identify the relevant clusters, we can combine them to generate a query model that is good at discovering documents belonging to these clusters (instead of the irrelevant ones).",
                "We could ask the user to directly judge the relevance of a cluster after viewing representative terms in that cluster, but this would sometimes be a difficult task for the user, who has to guess the semantics of a cluster via its set of terms, which may not be well connected to one another due to a lack of context.",
                "Therefore, we propose to learn cluster feedback indirectly, inferring the relevance of a cluster through the relevance of its feedback terms.",
                "Because each cluster has an equal number of terms presented to the user, the simplest measure of a clusters relevance is the number of terms that are judged relevant in it.",
                "Intuitively, the more terms are marked relevant in a cluster, the closer the cluster is to the query topic, and the more the cluster should participate in query modification.",
                "If we combine the cluster models using weights determined this way and then interpolate with the original query model, we get the following formula for query updating, which we call CFB (Cluster FeedBack): p(w|θq ) = λp(w|θq) + (1 − λ) K i=1 L j=1 δti,j K k=1 L j=1 δtk,j p(w|θi) where L j=1 δti,j is the number of relevant terms in cluster Ci, and K k=1 L j=1 δtk,j is the total number of relevant terms.",
                "We note that when there is only one cluster (K = 1), the above formula degenerates to p(w|θq ) = λp(w|θq) + (1 − λ)p(w|θ1) which is merely pseudo-feedback of the form proposed in [25]. 5.3 TCFB (Term-cluster Feedback) TFB and CFB both have their drawbacks.",
                "TFB assigns non-zero probabilities to the presented terms that are marked relevant, but completely ignores (a lot more) others, which may be left unchecked due to the users ignorance, or simply not included in the presentation list, but we should be able to infer their relevance from the checked ones.",
                "For example, in Figure 1, since as many as 5 terms in the middle cluster (the third and fourth columns) are checked, we should have high confidence in the relevance of other terms in that cluster.",
                "CFB remedies TFBs problem by treating the terms in a cluster collectively, so that unchecked/unpresented terms receive weights when presented terms in their clusters are judged as relevant, but it does not distinguish which terms in a cluster are presented or judged.",
                "Intuitively, the judged relevant terms should receive larger weights because they are explicitly indicated as relevant by the user.",
                "Therefore, we try to combine the two methods, hoping to get the best out of both.",
                "We do this by interpolating the TFB model with the CFB model, and call it TCFB: p(w|θq ) = αp(w|θqT F B ) + (1 − α)p(w|θqCF B ) 6.",
                "EXPERIMENTS In this section, we describe our experiment results.",
                "We first describe our experiment setup and present an overview of various methods performance.",
                "Then we discuss the effects of varying the parameter setting in the algorithms, as well as the number of presentation terms.",
                "Next we analyze user term feedback behavior and its relation to retrieval performance.",
                "Finally we compare term feedback to relevance feedback and show that it has its particular advantage. 6.1 Experiment Setup and Basic Results We took the opportunity of TREC 2005 HARD Track[2] for the evaluation of our algorithms.",
                "The tracks used the AQUAINT collection, a 3GB corpus of English newswire text.",
                "The topics included 50 ones previously known to be hard, i.e. with low retrieval performance.",
                "It is for these hard topics that user feedback is most helpful, as it can provide information to disambiguate the queries; with easy topics the user may be unwilling to spend efforts for feedback if the automatic retrieval results are good enough.",
                "Participants of the track were able to submit custom-designed clarification forms (CF) to solicit feedback from human assessors provided by Table 2: Retrieval performance for different methods and CF types.",
                "The last row is the percentage of MAP improvement over the baseline.",
                "The parameter settings μ = 4, λ = 0.1, α = 0.3 are near optimal.",
                "Baseline TFB1C TFB3C TFB6C CFB1C CFB3C CFB6C TCFB1C TCFB3C TCFB6C MAP 0.219 0.288 0.288 0.278 0.254 0.305 0.301 0.274 0.309 0.304 Pr@30 0.393 0.467 0.475 0.457 0.399 0.480 0.473 0.431 0.491 0.473 RR 4339 4753 4762 4740 4600 4907 4872 4767 4947 4906 % 0% 31.5% 31.5% 26.9% 16.0% 39.3% 37.4% 25.1% 41.1% 38.8% Table 3: MAP variation with the number of presented terms. # terms TFB1C TFB3C TFB6C CFB3C CFB6C TCFB3C TCFB6C 6 0.245 0.240 0.227 0.279 0.279 0.281 0.274 12 0.261 0.261 0.242 0.299 0.286 0.297 0.281 18 0.275 0.274 0.256 0.301 0.282 0.300 0.286 24 0.276 0.281 0.265 0.303 0.292 0.305 0.292 30 0.280 0.285 0.270 0.304 0.296 0.307 0.296 36 0.282 0.288 0.272 0.307 0.297 0.309 0.297 42 0.283 0.288 0.275 0.306 0.298 0.309 0.300 48 0.288 0.288 0.278 0.305 0.301 0.309 0.303 NIST.",
                "We designed three sets of clarification forms for term feedback, differing in the choice of K, the number of clusters, and L, the number of presented terms from each cluster.",
                "They are: 1× 48, a big cluster with 48 terms, 3 × 16, 3 clusters with 16 terms each, and 6 × 8, 6 clusters with 8 terms each.",
                "The total number of presented terms (M) is fixed at 48, so by comparing the performance of different types of clarification forms we can know the effects of different degree of clustering.",
                "For each topic, an assessor would complete the forms ordered by 6 × 8, 1 × 48 and 3 × 16, spending up to three minutes on each form.",
                "The sample clarification form shown in Figure 1 is of type 3 × 16.",
                "It is a simple and compact interface in which the user can check relevant terms.",
                "The form is self-explanatory; there is no need for extra user training on how to use it.",
                "Our initinal queries are constructed only using the topic title descriptions, which are on average 2.7 words in length.",
                "As our baseline we use the KL divergence retrieval method implemented in the Lemur Toolkit1 with 5 pseudo-feedback documents.",
                "We stem the terms, choose Dirichlet smoothing with a prior of 2000, and truncate query language models to 50 terms (these settings are used throughout the experiments).",
                "For all other parameters we use Lemurs default settings.",
                "The baseline turns out to perform above average among the track participants.",
                "After an initial run using this baseline retrieval method, we take the top 60 documents for each topic and apply the theme discovery algorithm to output the clusters (1, 3, or 6 of them), based on which we generate clarification forms.",
                "After user feedback is received, we run the term feedback algorithms (TFB, CFB or TCFB) to estimate updated query models, which are then used for a second iteration of retrieval.",
                "We evaluate the different retrieval methods performance on their rankings of the top 1000 documents.",
                "The evaluation metrics we adopt include mean average (non-interpolated) precision (MAP), precision at top 30 (Pr@30) and total relevant retrieved (RR).",
                "Table 2 shows the performance of various methods and configurations of K × L. The suffixes (1C, 3C, 6C) after TFB,CFB,TCFB stand for the number of clusters (K).",
                "For example, TCFB3C means the TCFB method on the 3 × 16 clarification forms.",
                "From Table 2 we can make the following observations: 1 http://www.lemurproject.com 1.",
                "All methods perform considerably better than the pseudofeedback baseline, with TCFB3C achieving a highest 41.1% improvement in MAP, indicating significant contribution of term feedback for clarification of the users information need.",
                "In other words, term feedback is truly helpful for improving retrieval accuracy. 2.",
                "For TFB, the performance is almost equal on the 1 × 48 and 3 × 16 clarification forms in terms of MAP (although the latter is slightly better in Pr@30 and RR), and a little worse on the 6 × 8 ones. 3.",
                "Both CFB3C and CFB6C perform better than their TFB counterparts in all three metrics, suggesting that feedback on a secondary cluster structure is indeed beneficial.",
                "CFB1C is actually worse because it cannot adjust the weight of its (single) cluster from term feedback and it is merely pseudofeedback. 4.",
                "Although TCFB is just a simple mixture of TFB and CFB by interpolation, it is able to outperform both.",
                "This supports our speculation that TCFB overcomes the drawbacks of TFB (paying attention only to checked terms) and CFB (not distinguishing checked and unchecked terms in a cluster).",
                "Except for TCFB6C v.s.",
                "CFB6C, the performance advantage of TCFB over TFB/CFB is significant at p < 0.05 using the Wilcoxon signed rank test.",
                "This is not true in the case of TFB v.s.",
                "CFB, each of which is better than the other in nearly half of the topics. 6.2 Reduction of Presentation Terms In some situations we may have to reduce the number of presentation terms due to limits in display space or user feedback efforts.",
                "It is interesting to know whether our algorithms performance deteriorates when the user is presented with fewer terms.",
                "Because the presentation terms within each cluster are generated in decreasing order of their frequencies, the presentation list forms a subset of the original one if its size is reduced2 .",
                "Therefore, we can easily simulate what happens when the number of presentation terms decreases 2 There are complexities arising from terms appearing in top L of multiple clusters, but these are exceptions from M to M : we will keep all judgments of the top L = M /K terms in each cluster and discard those of others.",
                "Table 3 shows the performance of various algorithms as the number of presentation terms ranges from 6 to 48.",
                "We find that the performance of TFB is more susceptible to presentation term reduction than that of CFB or TCFB.",
                "For example, at 12 terms the MAP of TFB3C is 90.6% of that at 48 terms, while the numbers for CFB3C and TCFB3C are 98.0% and 96.1% respectively.",
                "We conjecture the reason to be that while TFBs performance heavily depends on how many good terms are chosen for <br>query expansion</br>, CFB only needs a rough estimate of cluster weights to work.",
                "Also, the 3 × 16 clarification forms seem to be more robust than the 6 × 8 ones: at 12 terms the MAP of TFB6C is 87.1% of that at 48 terms, lower than 90.6% for TFB3C.",
                "Similarly, for CFB it is 95.0% against 98.0%.",
                "This is natual, as for a large cluster number of 6, it is easier to get into the situation where each cluster gets too few presentation terms to make topic diversification useful.",
                "Overall, we are surprised to see that the algorithms are still able to perform reasonably well when the number of presentation terms is small.",
                "For example, at only 12 terms CFB3C (the clarification form is of size 3 × 4) can still improve 36.5% over the baseline, dropping slightly from 39.3% at 48 terms. 6.3 User Feedback Analysis In this part we study several aspects of users term feedback behavior, and whether they are connected to retrieval performance.",
                "Figure 2: Clarification form completion time distributions 0−30 30−60 60−90 90−120 120−150 150−180 0 5 10 15 20 25 30 35 completion time (seconds) #topics 1×48 3×16 6×8 Figure 2 shows the distribution of time needed to complete a clarification form3 .",
                "We see that the user is usually able to finish term feedback within a reasonably short amount of time: for more than half of the topics the clarification form is completed in just 1 minute, and only a small fraction of topics (less than 10% for 1 × 48 and 3 × 16) take more than 2 minutes.",
                "This suggests that term feedback is suitable for interactive ad-hoc retrieval, where a user usually does not want to spend too much time on providing feedback.",
                "We find that a user often makes mistakes when judging term relevance.",
                "Sometimes a relevant term may be left out because its connection to the query topic is not obvious to the user.",
                "Other times a dubious term may be included but turns out to be irrelevant.",
                "Take the topic in Figure 1 for example.",
                "There was a fire disaster in Mont 3 The maximal time is 180 seconds, as the NIST assessor would be forced to submit the form at that moment.",
                "Table 4: Term selection statistics (topic average) CF Type 1 × 48 3 × 16 6 × 8 # checked terms 14.8 13.3 11.2 # rel. terms 15.0 12.6 11.2 # rel. checked terms 7.9 6.9 5.9 precision 0.534 0.519 0.527 recall 0.526 0.548 0.527 Blanc Tunnel between France and Italy in 1999, but the user failed to select such keywords as mont, blanc, french and italian due to his/her ignorance of the event.",
                "Indeed, without proper context it would be hard to make perfect judgment.",
                "What is then, the extent to which the user is good at term feedback?",
                "Does it have serious impact on retrieval performance?",
                "To answer these questions, we need a measure of individual terms true relevance.",
                "We adopt the Simplified KL Divergence metric used in [24] to decide <br>query expansion</br> terms as our term relevance measure: σKLD(w) = p(w|R) log p(w|R) p(w|¬R) where p(w|R) is the probability that a relevant document contains term w, and p(w|¬R) is the probability that an irrelevant document contains w, both of which can be easily computed via maximum likelihood estimate given document-level relevance judgment.",
                "If σKLD(w) > 0, w is more likely to appear in relevant documents than irrelevant ones.",
                "We consider a term relevant if its Simplified KL Divergence value is greater than a certain threshold σ0.",
                "We can then define precision and recall of user term judgment accordingly: precision is the fraction of terms checked by the user that are relevant; recall is the fraction of presented relevant terms that are checked by the user.",
                "Table 4 shows the number of checked terms, relevant terms and relevant checked terms when σ0 is set to 1.0, as well as the precision/recall of user term judgment.",
                "Note that when the clarification forms contain more clusters, fewer terms are checked: 14.8 for 1 × 48, 13.3 for 3 × 16 and 11.2 for 6×8.",
                "Similar pattern holds for relevant terms and relevant checked terms.",
                "There seems to be a trade-off between increasing topic diversity by clustering and losing extra relevant terms: when there are more clusters, each of them gets fewer terms to present, which can hurt a major relevant cluster that contains many relevant terms.",
                "Therefore, it is not always helpful to have more clusters, e.g., TFB6C is actually worse than TFB1C.",
                "The major finding we can make from Table 4 is that the user is not particularly good at identifying relevant terms, which echoes the discovery in [18].",
                "In the case of 3 × 16 clarification forms, the average number of terms checked as relevant by the user is 13.3 per topic, and the average number of relevant terms whose σKLD value exceed 1.0 is 12.6.",
                "The user is able to recognize only 6.9 of these terms on average.",
                "Indeed, the precision and recall of user feedback terms (as defined previously) are far from perfect.",
                "On the other hand, If the user had correctly checked all such relevant terms, the performance of our algorithms would have increased a lot, as shown in Table 5.",
                "We see that TFB gets big improvement when there is an oracle who checks all relevant terms, while CFB meets a bottleneck around MAP of 0.325, since all it does is adjust cluster weights, and when the learned weights are close to being accurate, it cannot benefit more from term feedback.",
                "Also note that TCFB fails to outperform TFB, probably because TFB is sufficiently accurate.",
                "Table 5: Change of MAP when using all (and only) relevant terms (σKLD > 1.0) for feedback. original term feedback relevant term feedback TF1 0.288 0.354 TF3 0.288 0.354 TF6 0.278 0.346 CF3 0.305 0.325 CF6 0.301 0.326 TCF3 0.309 0.345 TCF6 0.304 0.341 6.4 Comparison with Relevance Feedback Now we compare term feedback with document-level relevance feedback, in which the user is presented with the top N documents from an initial retrieval and asked to judge their relevance.",
                "The feedback process is simulated using document relevance judgment from NIST.",
                "We use the mixture model based feedback method proposed in [25], with mixture noise set to 0.95 and feedback coefficient set to 0.9.",
                "Comparative evaluation of relevance feedback against other methods is complicated by the fact that some documents have already been viewed during feedback, so it makes no sense to include them in the retrieval results of the second run.",
                "However, this does not hold for term feedback.",
                "Thus, to make it fair w.r.t. users information gain, if the feedback documents are relevant, they should be kept in the top of the ranking; if they are irrelevant, they should be left out.",
                "Therefore, we use relevance feedback to produce a ranking of top 1000 retrieved documents but with every feedback document excluded, and then prepend the relevant feedback documents at the front.",
                "Table 6 shows the performance of relevance feedback for different values of N and compares it with TCFB3C.",
                "Table 6: Performance of relevance feedback for different number of feedback documents (N).",
                "N MAP Pr@30 RR 5 0.302 0.586 4779 10 0.345 0.670 4916 20 0.389 0.772 5004 TCFB3C 0.309 0.491 4947 We see that the performance of TCFB3C is comparable to that of relevance feedback using 5 documents.",
                "Although it is poorer than when there are 10 feedback documents in terms of MAP and Pr@30, it does retrieve more documents (4947) when going down the ranked list.",
                "We try to compare the quality of automatically inserted terms in relevance feedback with that of manually selected terms in term feedback.",
                "This is done by truncating the relevance feedback modified query model to a size equal to the number of checked terms for the same topic.",
                "We can then compare the terms in the truncated model with the checked terms.",
                "Figure 3 shows the distribution of the terms σKLD scores.",
                "We find that term feedback tends to produce expansion terms of higher quality(those with σKLD > 1) compared to relevance feedback (with 10 feedback documents).",
                "This does not contradict the fact that the latter yields higher retrieval performance.",
                "Actually, when we use the truncated query model instead of the intact one refined from relevance feedback, the MAP is only 0.304.",
                "The truth Figure 3: Comparison of expansion term quality between relevance feedback (with 10 feedback documents) and term feedback (with 3 × 16 CFs) −1−0 0−1 1−2 2−3 3−4 4−5 5−6 0 50 100 150 200 250 300 350 σKLD #terms relevance feedback term feedback is, although there are many unwanted terms in the expanded query model from feedback documents, there are also more relevant terms than what the user can possibly select from the list of presentation terms generated with pseudo-feedback documents, and the positive effects often outweights the negative ones.",
                "We are interested to know under what circumstances term feedback has advantage over relevance feedback.",
                "One such situation is when none of the top N feedback documents is relevant, rendering relevance feedback useless.",
                "This is not infrequent, as one might have thought: out of the 50 topics, there are 13 such cases when N = 5, 10 when N = 10, and still 3 when N = 20.",
                "When this happens, one can only back off to the original retrieval method; the power of relevance feedback is lost.",
                "Surprisingly, in 11 out of 13 such cases where relevance feedback seems impossible, the user is able to check at least 2 relevant terms from the 3 × 16 clarification form (we consider term t to be relevant if σKLD(t) > 1.0).",
                "Furthermore, in 10 out of them TCFB3C outperforms the pseudo-feedback baseline, increasing MAP from 0.076 to 0.146 on average (these are particularly hard topics).",
                "We think that there are two possible explanations for this phenomenon of term feedback being active even when relevance feedback does not work: First, even if none of the top N (suppose it is a small number) documents are relevant, we may still find relevant documents in top 60, which is more inclusive but usually unreachable when people are doing relevance feedback in interactive ad-hoc search, from which we can draw feedback terms.",
                "This is true for topic 367 piracy, where the top 10 feedback documents are all about software piracy, yet there are documents between 10-60 that are about piracy on the seas (which is about the real information need), contributing terms such as pirate, ship for selection in the clarification form.",
                "Second, for some topics, a document needs to meet some special condition in order to be relevant.",
                "The top N documents may be related to the topic, but nonetheless irrelevant.",
                "In this case, we may still extract useful terms from these documents, even if they do not qualify as relevant ones.",
                "For example, in topic 639 consumer online shopping, a document needs to mention what contributes to shopping growth to really match the specified information need, hence none of the top 10 feedback documents are regarded as relevant.",
                "But nevertheless, the feedback terms such as retail, commerce are good for <br>query expansion</br>. 7.",
                "CONCLUSIONS In this paper we studied the use of term feedback for interactive information retrieval in the language modeling approach.",
                "We proposed a cluster-based method for selecting presentation terms as well as algorithms to estimate refined query models from user term feedback.",
                "We saw significant improvement in retrieval accuracy brought by term feedback, in spite of the fact that a user often makes mistakes in relevance judgment that hurts its performance.",
                "We found the best-performing algorithm to be TCFB, which benefits from the combination of directly observed term evidence with TFB and indirectly learned cluster relevance with CFB.",
                "When we reduced the number of presentation terms, term feedback is still able to keep much of its performance gain over the baseline.",
                "Finally, we compared term feedback to document-level relevance feedback, and found that TCFB3Cs performance is on a par with the latter with 5 feedback documents.",
                "We regarded term feedback as a viable alternative to traditional relevance feedback, especially when there are no relevant documents in the top.",
                "We propose to extend our work in several ways.",
                "First, we want to study whether the use of various contexts can help the user to better identify term relevance, while not sacrificing the simplicity and compactness of term feedback.",
                "Second, currently all terms are presented to the user in a single batch.",
                "We could instead consider iterative term feedback, by presenting a small number of terms first, and show more terms after receiving user feedback or stop when the refined query is good enough.",
                "The presented terms should be selected dynamically to maximize learning benefits at any moment.",
                "Third, we have plans to incorporate term feedback into our UCAIR toolbar[20], an Internet Explorer plugin, to make it work for web search.",
                "We are also interested in studying how to combine term feedback with relevance feedback or implicit feedback.",
                "We could, for example, allow the user to dynamically modify terms in a language model learned from feedback documents. 8.",
                "ACKNOWLEDGMENT This work is supported in part by the National Science Foundation grants IIS-0347933 and IIS-0428472. 9.",
                "REFERENCES [1] J. Allan.",
                "Relevance feedback with too much data.",
                "In Proceedings of the 18th annual international ACM SIGIR conference on research and development in information retrieval, pages 337-343, 1995. [2] J. Allan.",
                "HARD track overview in TREC 2005 - High Accuracy Retrieval from Documents.",
                "In The Fourteenth Text REtrieval Conference, 2005. [3] P. Anick.",
                "Using terminological feedback for web search refinement: a log-based study.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 88-95, 2003. [4] P. G. Anick and S. Tipirneni.",
                "The paraphrase search assistant: terminological feedback for iterative information seeking.",
                "In Proceedings of the 22nd annual international ACM SIGIR conference on research and development in information retrieval, pages 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan, and A. Singhal.",
                "Automatic <br>query expansion</br> using SMART.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [6] D. Harman.",
                "Towards interactive <br>query expansion</br>.",
                "In Proceedings of the 11th annual international ACM SIGIR conference on research and development in information retrieval, pages 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wade, and J. Allan.",
                "UMass at TREC 2003: HARD and QA.",
                "In TREC, pages 715-725, 2003. [8] H. Joho, C. Coverson, M. Sanderson, and M. Beaulieu.",
                "Hierarchical presentation of expansion terms.",
                "In Proceedings of the 2002 ACM symposium on applied computing, pages 645-649, 2002. [9] K. S. Jones, S. Walker, and S. E. Robertson.",
                "A probabilistic model of information retrieval: development and status.",
                "Technical Report 446, Computer Laboratory, University of Cambridge, 1998. [10] D. Kelly, V. D. Dollu, and X. Fu.",
                "The loquacious user: a document-independent source of terms for <br>query expansion</br>.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 457-464, 2005. [11] D. Kelly and X. Fu.",
                "Elicitation of term relevance feedback: an investigation of term source and context.",
                "In Proceedings of the 29th annual international ACM SIGIR conference on research and development in information retrieval, 2006. [12] J. Koenemann and N. Belkin.",
                "A case for interaction: A study of interactive information retrieval behavior and effectiveness.",
                "In Proceedings of the SIGCHI conference on human factors in computing systems, pages 205-212, 1996. [13] V. Lavrenko and W. B. Croft.",
                "Relevance-based language models.",
                "In Research and Development in Information Retrieval, pages 120-127, 2001. [14] Y. Nemeth, B. Shapira, and M. Taeib-Maimon.",
                "Evaluation of the real and perceived value of automatic and interactive <br>query expansion</br>.",
                "In Proceedings of the 27th annual international ACM SIGIR conference on research and development in information retrieval, pages 526-527, 2004. [15] J. Ponte.",
                "A Language Modeling Approach to Information Retrieval.",
                "PhD thesis, University of Massachusetts at Amherst, 1998. [16] S. E. Robertson, S. Walker, S. Jones, M. Beaulieu, and M. Gatford.",
                "Okapi at TREC-3.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [17] J. Rocchio.",
                "Relevance feedback in information retrieval.",
                "In The SMART retrieval system, pages 313-323. 1971. [18] I. Ruthven.",
                "Re-examining the potential effectiveness of interactive <br>query expansion</br>.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 213-220, 2003. [19] G. Salton and C. Buckley.",
                "Improving retrieval performance by relevance feedback.",
                "Journal of the American Society for Information Science, 41:288-297, 1990. [20] X. Shen, B. Tan, and C. Zhai.",
                "Implicit user modeling for personalized search.",
                "In Proceedings of the 14th ACM international conference on information and knowledge management, pages 824-831, 2005. [21] X. Shen and C. Zhai.",
                "Active feedback in ad-hoc information retrieval.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 59-66, 2005. [22] A. Spink.",
                "Term relevance feedback and <br>query expansion</br>: relation to design.",
                "In Proceedings of the 17th annual international ACM SIGIR conference on research and development in information retrieval, pages 81-90, 1994. [23] J. Xu and W. B. Croft.",
                "<br>query expansion</br> using local and global document analysis.",
                "In Proceedings of the 19th annual international ACM SIGIR conference on research and development in information retrieval, pages 4-11, 1996. [24] H. Zaragoza, N. Craswell, M. Taylor, S. Saria, and S. Robertson.",
                "Microsoft cambridge at TREC-13: Web and HARD tracks.",
                "In Proceedings of the 13th Text REtrieval Conference, 2004. [25] C. Zhai and J. Lafferty.",
                "Model-based feedback in the language modeling approach to information retrieval.",
                "In Proceedings of the tenth international conference on information and knowledge management, pages 403-410, 2001. [26] C. Zhai, A. Velivelli, and B. Yu.",
                "A cross-collection mixture model for comparative text mining.",
                "In Proceedings of the tenth ACM SIGKDD international conference on knowledge discovery and data mining, pages 743-748, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Con la retroalimentación de término, un usuario juzga directamente la relevancia de los términos individuales sin interacción con los documentos de retroalimentación, tomando el control total del proceso de \"expansión de consultas\".",
                "Tiene la desventaja de que los términos irrelevantes, que ocurren junto con los relevantes en el contenido juzgado, pueden usarse erróneamente para la \"expansión de la consulta\", causando efectos no deseados.",
                "Esto se clasifica como \"expansión de la consulta\" interactiva, donde la consulta original se aumenta con términos proporcionados por el usuario, que pueden provenir de la entrada directa del usuario (texto de forma libre o palabras clave) [22, 7, 10] o la selección del sistema del sistema-Términos sugeridos (usando tesauros [6, 22] o extraídos de documentos de retroalimentación [6, 22, 12, 4, 7]).",
                "Por ejemplo, el estudio en [12] muestra que el usuario prefiere tener un conocimiento explícito y un control directo de qué términos se utilizan para la \"expansión de la consulta\", y la interfaz penetrable que proporciona esta libertad se muestra mejor que otras interfaces.",
                "En un estudio simulado realizado en [18], el autor compara el rendimiento de recuperación de la \"expansión de consultas\" interactiva y la \"expansión de consulta\" automática con un estudio simulado, y sugiere que los beneficios potenciales de los primeros pueden ser difíciles de lograr.",
                "Se encuentra que el usuario no es bueno para identificar términos útiles para la \"expansión de la consulta\", cuando una interfaz de presentación de término simple no puede proporcionar un contexto semántico suficiente de los términos de retroalimentación.",
                "Si dejamos μ = 1, este enfoque es equivalente a agregar los términos relevantes después de la consulta original, que es lo que lo hace la \"expansión de consulta\" estándar (sin reescribir a término).",
                "Conjeturamos la razón para ser que si bien el rendimiento de TFBS depende en gran medida de cuántos buenos términos se eligen para la \"expansión de la consulta\", CFB solo necesita una estimación aproximada de los pesos del clúster para funcionar.",
                "Adoptamos la métrica de divergencia KL simplificada utilizada en [24] para decidir los términos de \"expansión de consulta\" como nuestra medida de relevancia de término: σkld (w) = p (w | r) log p (w | r) p (w | ¬r)donde p (w | r) es la probabilidad de que un documento relevante contenga el término w, y p (w | ¬R) es la probabilidad de que un documento irrelevante contenga W, los cuales se pueden calcular fácilmente mediante una estimación de máxima probabilidad dada documento-juicio de relevancia de nivel.",
                "Sin embargo, los términos de retroalimentación como el comercio minorista, el comercio son buenos para la \"expansión de la consulta\".7."
            ],
            "translated_text": "",
            "candidates": [
                "expansión de la consulta",
                "expansión de consultas",
                "expansión de la consulta",
                "expansión de la consulta",
                "expansión de la consulta",
                "expansión de la consulta",
                "expansión de la consulta",
                "expansión de la consulta",
                "expansión de la consulta",
                "expansión de consultas",
                "expansión de consulta",
                "expansión de la consulta",
                "expansión de la consulta",
                "expansión de la consulta",
                "expansión de consulta",
                "expansión de la consulta",
                "expansión de la consulta",
                "expansión de la consulta",
                "expansión de consulta",
                "Expansión de consulta",
                "expansión de la consulta"
            ],
            "error": []
        },
        "interactive retrieval": {
            "translated_key": "recuperación interactiva",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Term Feedback for Information Retrieval with Language Models Bin Tan† , Atulya Velivelli‡ , Hui Fang† , ChengXiang Zhai† Dept.",
                "of Computer Science† , Dept. of Electrical and Computer Engineering‡ University of Illinois at Urbana-Champaign bintan@cs.uiuc.edu, velivell@ifp.uiuc.edu, hfang@cs.uiuc.edu, czhai@cs.uiuc.edu ABSTRACT In this paper we study term-based feedback for information retrieval in the language modeling approach.",
                "With term feedback a user directly judges the relevance of individual terms without interaction with feedback documents, taking full control of the query expansion process.",
                "We propose a cluster-based method for selecting terms to present to the user for judgment, as well as effective algorithms for constructing refined query language models from user term feedback.",
                "Our algorithms are shown to bring significant improvement in retrieval accuracy over a non-feedback baseline, and achieve comparable performance to relevance feedback.",
                "They are helpful even when there are no relevant documents in the top.",
                "Categories and Subject Descriptors H.3.3 [Information Search and Retrieval]: Retrieval models General Terms Algorithms 1.",
                "INTRODUCTION In the language modeling approach to information retrieval, feedback is often modeled as estimating an improved query model or relevance model based on a set of feedback documents [25, 13].",
                "This is in line with the traditional way of doing relevance feedback - presenting a user with documents/passages for relevance judgment and then extracting terms from the judged documents or passages to expand the initial query.",
                "It is an indirect way of seeking users assistance for query model construction, in the sense that the refined query model (based on terms) is learned through feedback documents/passages, which are high-level structures of terms.",
                "It has the disadvantage that irrelevant terms, which occur along with relevant ones in the judged content, may be erroneously used for query expansion, causing undesired effects.",
                "For example, for the TREC query Hubble telescope achievements, when a relevant document talks more about the telescopes repair than its discoveries, irrelevant terms such as spacewalk can be added into the modified query.",
                "We can consider a more direct way to involve a user in query model improvement, without an intermediary step of document feedback that can introduce noise.",
                "The idea is to present a (reasonable) number of individual terms to the user and ask him/her to judge the relevance of each term or directly specify their probabilities in the query model.",
                "This strategy has been discussed in [15], but to our knowledge, it has not been seriously studied in existing language modeling literature.",
                "Compared to traditional relevance feedback, this term-based approach to interactive query model refinement has several advantages.",
                "First, the user has better control of the final query model through direct manipulation of terms: he/she can dictate which terms are relevant, irrelevant, and possibly, to what degree.",
                "This avoids the risk of bringing unwanted terms into the query model, although sometimes the user introduces low-quality terms.",
                "Second, because a term takes less time to judge than a documents full text or summary, and as few as around 20 presented terms can bring significant improvement in retrieval performance (as we will show later), term feedback makes it faster to gather user feedback.",
                "This is especially helpful for interactive adhoc search.",
                "Third, sometimes there are no relevant documents in the top N of the initially retrieved results if the topic is hard.",
                "This is often true when N is constrained to be small, which arises from the fact that the user is unwilling to judge too many documents.",
                "In this case, relevance feedback is useless, as no relevant document can be leveraged on, but term feedback is still often helpful, by allowing relevant terms to be picked from irrelevant documents.",
                "During our participation in the TREC 2005 HARD Track and continued study afterward, we explored how to exploit term feedback from the user to construct improved query models for information retrieval in the language modeling approach.",
                "We identified two key subtasks of term-based feedback, i.e., pre-feedback presentation term selection and post-feedback query model construction, with effective algorithms developed for both.",
                "We imposed a secondary cluster structure on terms and found that a cluster view sheds additional insight into the users information need, and provides a good way of utilizing term feedback.",
                "Through experiments we found that term feedback improves significantly over the nonfeedback baseline, even though the user often makes mistakes in relevance judgment.",
                "Among our algorithms, the one with best retrieval performance is TCFB, the combination of TFB, the direct term feedback algorithm, and CFB, the cluster-based feedback algorithm.",
                "We also varied the number of feedback terms and observed reasonable improvement even at low numbers.",
                "Finally, by comparing term feedback with document-level feedback, we found it to be a viable alternative to the latter with competitive retrieval performance.",
                "The rest of the paper is organized as follows.",
                "Section 2 discusses some related work.",
                "Section 4 outlines our general approach to term feedback.",
                "We present our method for presentation term selection in Section 3 and algorithms for query model construction in Section 5.",
                "The experiment results are given in Section 6.",
                "Section 7 concludes this paper. 2.",
                "RELATED WORK Relevance feedback[17, 19] has long been recognized as an effective method for improving retrieval performance.",
                "Normally, the top N documents retrieved using the original query are presented to the user for judgment, after which terms are extracted from the judged relevant documents, weighted by their potential of attracting more relevant documents, and added into the query model.",
                "The expanded query usually represents the users information need better than the original one, which is often just a short keyword query.",
                "A second iteration of retrieval using this modified query usually produces significant increase in retrieval accuracy.",
                "In cases where true relevance judgment is unavailable and all top N documents are assumed to be relevant, it is called blind or pseudo feedback[5, 16] and usually still brings performance improvement.",
                "Because document is a large text unit, when it is used for relevance feedback many irrelevant terms can be introduced into the feedback process.",
                "To overcome this, passage feedback is proposed and shown to improve feedback performance[1, 23].",
                "A more direct solution is to ask the user for their relevance judgment of feedback terms.",
                "For example, in some relevance feedback systems such as [12], there is an interaction step that allows the user to add or remove expansion terms after they are automatically extracted from relevant documents.",
                "This is categorized as interactive query expansion, where the original query is augmented with user-provided terms, which can come from direct user input (free-form text or keywords)[22, 7, 10] or user selection of system-suggested terms (using thesauri[6, 22] or extracted from feedback documents[6, 22, 12, 4, 7]).",
                "In many cases term relevance feedback has been found to effectively improve retrieval performance[6, 22, 12, 4, 10].",
                "For example, the study in [12] shows that the user prefers to have explicit knowledge and direct control of which terms are used for query expansion, and the penetrable interface that provides this freedom is shown to perform better than other interfaces.",
                "However, in some other cases there is no significant benefit[3, 14], even if the user likes interacting with expansion terms.",
                "In a simulated study carried out in [18], the author compares the retrieval performance of interactive query expansion and automatic query expansion with a simulated study, and suggests that the potential benefits of the former can be hard to achieve.",
                "The user is found to be not good at identifying useful terms for query expansion, when a simple term presentation interface is unable to provide sufficient semantic context of the feedback terms.",
                "Our work differs from the previous ones in two important aspects.",
                "First, when we choose terms to present to the user for relevance judgment, we not only consider single-term value (e.g., the relative frequency of a term in the top documents, which can be measured by metrics such as Robertson Selection Value and Simplified Kullback-Leibler Distance as listed in [24]), but also examine the cluster structure of the terms, so as to produce a balanced coverage of the different topic aspects.",
                "Second, with the language modelling framework, we allow an elaborate construction of the updated query model, by setting different probabilities for different terms based on whether it is a query term, its significance in the top documents, and its cluster membership.",
                "Although techniques for adjusting query term weights exist for vector space models[17] and probablistic relevance models[9], most of the aforementioned works do not use them, choosing to just append feedback terms to the original query (thus using equal weights for them), which can lead to poorer retrieval performance.",
                "The combination of the two aspects allows our method to perform much better than the baseline.",
                "The usual way for feedback term presentation is just to display the terms in a list.",
                "There have been some works on alternative user interfaces. [8] arranges terms in a hierarchy, and [11] compares three different interfaces, including terms + checkboxes, terms + context (sentences) + checkboxes, sentences + input text box.",
                "In both studies, however, there is no significant performance difference.",
                "In our work we adopt the simplest approach of terms + checkboxes.",
                "We focus on term presentation and query model construction from feedback terms, and believe using contexts to improve feedback term quality should be orthogonal to our method. 3.",
                "GENERAL APPROACH We follow the language modeling approach, and base our method on the KL-divergence retrieval model proposed in [25].",
                "With this model, the retrieval task involves estimating a query language model θq from a given query, a document language model θd from each document, and calculating their KL-divergence D(θq||θd), which is then used to score the documents. [25] treats relevance feedback as a query model re-estimation problem, i.e., computing an updated query model θq given the original query text and the extra evidence carried by the judged relevant documents.",
                "We adopt this view, and cast our task as updating the query model from user term feedback.",
                "There are two key subtasks here: First, how to choose the best terms to present to the user for judgment, in order to gather maximal evidence about the users information need.",
                "Second, how to compute an updated query model based on this term feedback evidence, so that it captures the users information need and translates into good retrieval performance. 4.",
                "PRESENTATION TERM SELECTION Proper selection of terms to be presented to the user for judgment is crucial to the success of term feedback.",
                "If the terms are poorly chosen and there are few relevant ones, the user will have a hard time looking for useful terms to help clarify his/her information need.",
                "If the relevant terms are plentiful, but all concentrate on a single aspect of the query topic, then we will only be able to get feedback on that aspect and missing others, resulting in a breadth loss in retrieved results.",
                "Therefore, it is important to carefully select presentation terms to maximize expected gain from user feedback, i.e., those that can potentially reveal most evidence of the users information need.",
                "This is similar to active feedback[21], which suggests that a retrieval system should actively probe the users information need, and in the case of relevance feedback, the feedback documents should be chosen to maximize learning benefits (e.g. diversely so as to increase coverage).",
                "In our approach, the top N documents from an initial retrieval using the original query form the source of feedback terms: all terms that appear in them are considered candidates to present to the user.",
                "These documents serve as pseudo-feedback, since they provide a much richer context than the original query (usually very short), while the user is not asked to judge their relevance.",
                "Due to the latter reason, it is possible to make N quite large (e.g., in our experiments we set N = 60) to increase its coverage of different aspects in the topic.",
                "The simplest way of selecting feedback terms is to choose the most frequent M terms from the N documents.",
                "This method, however, has two drawbacks.",
                "First, a lot of common noisy terms will be selected due to their high frequencies in the document collection, unless a stop-word list is used for filtering.",
                "Second, the presentation list will tend to be filled by terms from major aspects of the topic; those from a minor aspect are likely to be missed due to their relatively low frequencies.",
                "We solve the above problems by two corresponding measures.",
                "First, we introduce a background model θB that is estimated from collection statistics and explains the common terms, so that they are much less likely to appear in the presentation list.",
                "Second, the terms are selected from multiple clusters in the pseudo-feedback documents, to ensure sufficient representation of different aspects of the topic.",
                "We rely on the mixture multinomial model, which is used for theme discovery in [26].",
                "Specifically, we assume the N documents contain K clusters {Ci| i = 1, 2, · · · K}, each characterized by a multinomial word distribution (also known as unigram language model) θi and corresponding to an aspect of the topic.",
                "The documents are regarded as sampled from a mixture of K + 1 components, including the K clusters and the background model: p(w|d) = λBp(w|θB) + (1 − λB) K i=1 πd,ip(w|θi) where w is a word, λB is the mixture weight for the background model θB, and πd,i is the document-specific mixture weight for the i-th cluster model θi.",
                "We then estimate the cluster models by maximizing the probability of the pseudo-feedback documents being generated from the multinomial mixture model: log p(D|Λ) = d∈D w∈V c(w; d) log p(w|d) where D = {di| i = 1, 2, · · · N} is the set of the N documents, V is the vocabulary, c(w; d) is ws frequency in d and Λ = {θi| i = 1, 2, · · · K} ∪ {πdij | i = 1, 2, · · · N, j = 1, 2, · · · K} is the set of model parameters to estimate.",
                "The cluster models can be efficiently estimated using the Expectation-Maximization (EM) algorithm.",
                "For its details, we refer the reader to [26].",
                "Table 1 shows the cluster models for TREC query Transportation tunnel disasters (K = 3).",
                "Note that only the middle cluster is relevant.",
                "Table 1: Cluster models for topic 363 Transportation tunnel disasters Cluster 1 Cluster 2 Cluster 3 tunnel 0.0768 tunnel 0.0935 tunnel 0.0454 transport 0.0364 fire 0.0295 transport 0.0406 traffic 0.0206 truck 0.0236 toll 0.0166 railwai 0.0186 french 0.0220 amtrak 0.0153 harbor 0.0146 smoke 0.0157 train 0.0129 rail 0.0140 car 0.0154 airport 0.0122 bridg 0.0139 italian 0.0152 turnpik 0.0105 kilomet 0.0136 firefight 0.0144 lui 0.0095 truck 0.0133 blaze 0.0127 jersei 0.0093 construct 0.0131 blanc 0.0121 pass 0.0087 · · · · · · · · · From each of the K estimated clusters, we choose the L = M/K terms with highest probabilities to form a total of M presentation terms.",
                "If a term happens to be in top L in multiple clusters, we assign it to the cluster where it has highest probability and let the other clusters take one more term as compensation.",
                "We also filter out terms in the original query text because they tend to always be relevant when the query is short.",
                "The selected terms are then presented to the user for judgment.",
                "A sample (completed) feedback form is shown in Figure 1.",
                "In this study we only deal with binary judgment: a presented term is by default unchecked, and a user may check it to indicate relevance.",
                "We also do not explicitly exploit negative feedback (i.e., penalizing irrelevant terms), because with binary feedback an unchecked term is not necessarily irrelevant (maybe the user is unsure about its relevance).",
                "We could ask the user for finer judgment (e.g., choosing from highly relevant, somewhat relevant, do not know, somewhat irrelevant and highly irrelevant), but binary feedback is more compact, taking less space to display and less user effort to make judgment. 5.",
                "ESTIMATING QUERY MODELS FROM TERM FEEDBACK In this section, we present several algorithms for exploiting term feedback.",
                "The algorithms take as input the original query q, the clusters {θi} as generated by the theme discovery algorithm, the set of feedback terms T and their relevance judgment R, and outputs an updated query language model θq that makes best use of the feedback evidence to capture the users information need.",
                "First we describe our notations: • θq: The original query model, derived from query terms only: p(w|θq) = c(w; q) |q| where c(w; q) is the count of w in q, and |q| = w∈q c(w; q) is the query length. • θq : The updated query model which we need to estimate from term feedback. • θi (i = 1, 2, . . .",
                "K): The unigram language model of cluster Ci, as estimated using the theme discovery algorithm. • T = {ti,j} (i = 1 . . .",
                "K, j = 1 . . .",
                "L): The set of terms presented to the user for judgment. ti,j is the j-th term chosen from cluster Ci. • R = {δw|w ∈ T}: δw is an indicator variable that is 1 if w is judged relevant or 0 otherwise. 5.1 TFB (Direct Term Feedback) This is a straight-forward form of term feedback that does not involve any secondary structure.",
                "We give a weight of 1 to terms judged relevant by the user, a weight of μ to query terms, zero weight to other terms, and then apply normalization: p(w|θq ) = δw + μ c(w; q) w ∈T δw + μ|q| where w ∈T δw is the total number of terms that are judged relevant.",
                "We call this method TFB (direct Term FeedBack).",
                "If we let μ = 1, this approach is equivalent to appending the relevant terms after the original query, which is what standard query expansion (without term reweighting) does.",
                "If we set μ > 1, we are putting more emphasis on the query terms than the checked ones.",
                "Note that the result model will be more biased toward θq if the original query is long or the user feedback is weak, which makes sense, as we can trust more on the original query in either case.",
                "Figure 1: Filled clarification form for Topic 363 363 transportation tunnel disasters Please select all terms that are relevant to the topic. traffic railway harbor rail bridge kilometer construct swiss cross link kong hong river project meter shanghai fire truck french smoke car italian firefights blaze blanc mont victim franc rescue driver chamonix emerge toll amtrak train airport turnpike lui jersey pass rome z center electron road boston speed bu submit 5.2 CFB (Cluster Feedback) Here we exploit the cluster structure that played an important role when we selected the presentation terms.",
                "The clusters represent different aspects of the query topic, each of which may or may not be relevant.",
                "If we are able to identify the relevant clusters, we can combine them to generate a query model that is good at discovering documents belonging to these clusters (instead of the irrelevant ones).",
                "We could ask the user to directly judge the relevance of a cluster after viewing representative terms in that cluster, but this would sometimes be a difficult task for the user, who has to guess the semantics of a cluster via its set of terms, which may not be well connected to one another due to a lack of context.",
                "Therefore, we propose to learn cluster feedback indirectly, inferring the relevance of a cluster through the relevance of its feedback terms.",
                "Because each cluster has an equal number of terms presented to the user, the simplest measure of a clusters relevance is the number of terms that are judged relevant in it.",
                "Intuitively, the more terms are marked relevant in a cluster, the closer the cluster is to the query topic, and the more the cluster should participate in query modification.",
                "If we combine the cluster models using weights determined this way and then interpolate with the original query model, we get the following formula for query updating, which we call CFB (Cluster FeedBack): p(w|θq ) = λp(w|θq) + (1 − λ) K i=1 L j=1 δti,j K k=1 L j=1 δtk,j p(w|θi) where L j=1 δti,j is the number of relevant terms in cluster Ci, and K k=1 L j=1 δtk,j is the total number of relevant terms.",
                "We note that when there is only one cluster (K = 1), the above formula degenerates to p(w|θq ) = λp(w|θq) + (1 − λ)p(w|θ1) which is merely pseudo-feedback of the form proposed in [25]. 5.3 TCFB (Term-cluster Feedback) TFB and CFB both have their drawbacks.",
                "TFB assigns non-zero probabilities to the presented terms that are marked relevant, but completely ignores (a lot more) others, which may be left unchecked due to the users ignorance, or simply not included in the presentation list, but we should be able to infer their relevance from the checked ones.",
                "For example, in Figure 1, since as many as 5 terms in the middle cluster (the third and fourth columns) are checked, we should have high confidence in the relevance of other terms in that cluster.",
                "CFB remedies TFBs problem by treating the terms in a cluster collectively, so that unchecked/unpresented terms receive weights when presented terms in their clusters are judged as relevant, but it does not distinguish which terms in a cluster are presented or judged.",
                "Intuitively, the judged relevant terms should receive larger weights because they are explicitly indicated as relevant by the user.",
                "Therefore, we try to combine the two methods, hoping to get the best out of both.",
                "We do this by interpolating the TFB model with the CFB model, and call it TCFB: p(w|θq ) = αp(w|θqT F B ) + (1 − α)p(w|θqCF B ) 6.",
                "EXPERIMENTS In this section, we describe our experiment results.",
                "We first describe our experiment setup and present an overview of various methods performance.",
                "Then we discuss the effects of varying the parameter setting in the algorithms, as well as the number of presentation terms.",
                "Next we analyze user term feedback behavior and its relation to retrieval performance.",
                "Finally we compare term feedback to relevance feedback and show that it has its particular advantage. 6.1 Experiment Setup and Basic Results We took the opportunity of TREC 2005 HARD Track[2] for the evaluation of our algorithms.",
                "The tracks used the AQUAINT collection, a 3GB corpus of English newswire text.",
                "The topics included 50 ones previously known to be hard, i.e. with low retrieval performance.",
                "It is for these hard topics that user feedback is most helpful, as it can provide information to disambiguate the queries; with easy topics the user may be unwilling to spend efforts for feedback if the automatic retrieval results are good enough.",
                "Participants of the track were able to submit custom-designed clarification forms (CF) to solicit feedback from human assessors provided by Table 2: Retrieval performance for different methods and CF types.",
                "The last row is the percentage of MAP improvement over the baseline.",
                "The parameter settings μ = 4, λ = 0.1, α = 0.3 are near optimal.",
                "Baseline TFB1C TFB3C TFB6C CFB1C CFB3C CFB6C TCFB1C TCFB3C TCFB6C MAP 0.219 0.288 0.288 0.278 0.254 0.305 0.301 0.274 0.309 0.304 Pr@30 0.393 0.467 0.475 0.457 0.399 0.480 0.473 0.431 0.491 0.473 RR 4339 4753 4762 4740 4600 4907 4872 4767 4947 4906 % 0% 31.5% 31.5% 26.9% 16.0% 39.3% 37.4% 25.1% 41.1% 38.8% Table 3: MAP variation with the number of presented terms. # terms TFB1C TFB3C TFB6C CFB3C CFB6C TCFB3C TCFB6C 6 0.245 0.240 0.227 0.279 0.279 0.281 0.274 12 0.261 0.261 0.242 0.299 0.286 0.297 0.281 18 0.275 0.274 0.256 0.301 0.282 0.300 0.286 24 0.276 0.281 0.265 0.303 0.292 0.305 0.292 30 0.280 0.285 0.270 0.304 0.296 0.307 0.296 36 0.282 0.288 0.272 0.307 0.297 0.309 0.297 42 0.283 0.288 0.275 0.306 0.298 0.309 0.300 48 0.288 0.288 0.278 0.305 0.301 0.309 0.303 NIST.",
                "We designed three sets of clarification forms for term feedback, differing in the choice of K, the number of clusters, and L, the number of presented terms from each cluster.",
                "They are: 1× 48, a big cluster with 48 terms, 3 × 16, 3 clusters with 16 terms each, and 6 × 8, 6 clusters with 8 terms each.",
                "The total number of presented terms (M) is fixed at 48, so by comparing the performance of different types of clarification forms we can know the effects of different degree of clustering.",
                "For each topic, an assessor would complete the forms ordered by 6 × 8, 1 × 48 and 3 × 16, spending up to three minutes on each form.",
                "The sample clarification form shown in Figure 1 is of type 3 × 16.",
                "It is a simple and compact interface in which the user can check relevant terms.",
                "The form is self-explanatory; there is no need for extra user training on how to use it.",
                "Our initinal queries are constructed only using the topic title descriptions, which are on average 2.7 words in length.",
                "As our baseline we use the KL divergence retrieval method implemented in the Lemur Toolkit1 with 5 pseudo-feedback documents.",
                "We stem the terms, choose Dirichlet smoothing with a prior of 2000, and truncate query language models to 50 terms (these settings are used throughout the experiments).",
                "For all other parameters we use Lemurs default settings.",
                "The baseline turns out to perform above average among the track participants.",
                "After an initial run using this baseline retrieval method, we take the top 60 documents for each topic and apply the theme discovery algorithm to output the clusters (1, 3, or 6 of them), based on which we generate clarification forms.",
                "After user feedback is received, we run the term feedback algorithms (TFB, CFB or TCFB) to estimate updated query models, which are then used for a second iteration of retrieval.",
                "We evaluate the different retrieval methods performance on their rankings of the top 1000 documents.",
                "The evaluation metrics we adopt include mean average (non-interpolated) precision (MAP), precision at top 30 (Pr@30) and total relevant retrieved (RR).",
                "Table 2 shows the performance of various methods and configurations of K × L. The suffixes (1C, 3C, 6C) after TFB,CFB,TCFB stand for the number of clusters (K).",
                "For example, TCFB3C means the TCFB method on the 3 × 16 clarification forms.",
                "From Table 2 we can make the following observations: 1 http://www.lemurproject.com 1.",
                "All methods perform considerably better than the pseudofeedback baseline, with TCFB3C achieving a highest 41.1% improvement in MAP, indicating significant contribution of term feedback for clarification of the users information need.",
                "In other words, term feedback is truly helpful for improving retrieval accuracy. 2.",
                "For TFB, the performance is almost equal on the 1 × 48 and 3 × 16 clarification forms in terms of MAP (although the latter is slightly better in Pr@30 and RR), and a little worse on the 6 × 8 ones. 3.",
                "Both CFB3C and CFB6C perform better than their TFB counterparts in all three metrics, suggesting that feedback on a secondary cluster structure is indeed beneficial.",
                "CFB1C is actually worse because it cannot adjust the weight of its (single) cluster from term feedback and it is merely pseudofeedback. 4.",
                "Although TCFB is just a simple mixture of TFB and CFB by interpolation, it is able to outperform both.",
                "This supports our speculation that TCFB overcomes the drawbacks of TFB (paying attention only to checked terms) and CFB (not distinguishing checked and unchecked terms in a cluster).",
                "Except for TCFB6C v.s.",
                "CFB6C, the performance advantage of TCFB over TFB/CFB is significant at p < 0.05 using the Wilcoxon signed rank test.",
                "This is not true in the case of TFB v.s.",
                "CFB, each of which is better than the other in nearly half of the topics. 6.2 Reduction of Presentation Terms In some situations we may have to reduce the number of presentation terms due to limits in display space or user feedback efforts.",
                "It is interesting to know whether our algorithms performance deteriorates when the user is presented with fewer terms.",
                "Because the presentation terms within each cluster are generated in decreasing order of their frequencies, the presentation list forms a subset of the original one if its size is reduced2 .",
                "Therefore, we can easily simulate what happens when the number of presentation terms decreases 2 There are complexities arising from terms appearing in top L of multiple clusters, but these are exceptions from M to M : we will keep all judgments of the top L = M /K terms in each cluster and discard those of others.",
                "Table 3 shows the performance of various algorithms as the number of presentation terms ranges from 6 to 48.",
                "We find that the performance of TFB is more susceptible to presentation term reduction than that of CFB or TCFB.",
                "For example, at 12 terms the MAP of TFB3C is 90.6% of that at 48 terms, while the numbers for CFB3C and TCFB3C are 98.0% and 96.1% respectively.",
                "We conjecture the reason to be that while TFBs performance heavily depends on how many good terms are chosen for query expansion, CFB only needs a rough estimate of cluster weights to work.",
                "Also, the 3 × 16 clarification forms seem to be more robust than the 6 × 8 ones: at 12 terms the MAP of TFB6C is 87.1% of that at 48 terms, lower than 90.6% for TFB3C.",
                "Similarly, for CFB it is 95.0% against 98.0%.",
                "This is natual, as for a large cluster number of 6, it is easier to get into the situation where each cluster gets too few presentation terms to make topic diversification useful.",
                "Overall, we are surprised to see that the algorithms are still able to perform reasonably well when the number of presentation terms is small.",
                "For example, at only 12 terms CFB3C (the clarification form is of size 3 × 4) can still improve 36.5% over the baseline, dropping slightly from 39.3% at 48 terms. 6.3 User Feedback Analysis In this part we study several aspects of users term feedback behavior, and whether they are connected to retrieval performance.",
                "Figure 2: Clarification form completion time distributions 0−30 30−60 60−90 90−120 120−150 150−180 0 5 10 15 20 25 30 35 completion time (seconds) #topics 1×48 3×16 6×8 Figure 2 shows the distribution of time needed to complete a clarification form3 .",
                "We see that the user is usually able to finish term feedback within a reasonably short amount of time: for more than half of the topics the clarification form is completed in just 1 minute, and only a small fraction of topics (less than 10% for 1 × 48 and 3 × 16) take more than 2 minutes.",
                "This suggests that term feedback is suitable for interactive ad-hoc retrieval, where a user usually does not want to spend too much time on providing feedback.",
                "We find that a user often makes mistakes when judging term relevance.",
                "Sometimes a relevant term may be left out because its connection to the query topic is not obvious to the user.",
                "Other times a dubious term may be included but turns out to be irrelevant.",
                "Take the topic in Figure 1 for example.",
                "There was a fire disaster in Mont 3 The maximal time is 180 seconds, as the NIST assessor would be forced to submit the form at that moment.",
                "Table 4: Term selection statistics (topic average) CF Type 1 × 48 3 × 16 6 × 8 # checked terms 14.8 13.3 11.2 # rel. terms 15.0 12.6 11.2 # rel. checked terms 7.9 6.9 5.9 precision 0.534 0.519 0.527 recall 0.526 0.548 0.527 Blanc Tunnel between France and Italy in 1999, but the user failed to select such keywords as mont, blanc, french and italian due to his/her ignorance of the event.",
                "Indeed, without proper context it would be hard to make perfect judgment.",
                "What is then, the extent to which the user is good at term feedback?",
                "Does it have serious impact on retrieval performance?",
                "To answer these questions, we need a measure of individual terms true relevance.",
                "We adopt the Simplified KL Divergence metric used in [24] to decide query expansion terms as our term relevance measure: σKLD(w) = p(w|R) log p(w|R) p(w|¬R) where p(w|R) is the probability that a relevant document contains term w, and p(w|¬R) is the probability that an irrelevant document contains w, both of which can be easily computed via maximum likelihood estimate given document-level relevance judgment.",
                "If σKLD(w) > 0, w is more likely to appear in relevant documents than irrelevant ones.",
                "We consider a term relevant if its Simplified KL Divergence value is greater than a certain threshold σ0.",
                "We can then define precision and recall of user term judgment accordingly: precision is the fraction of terms checked by the user that are relevant; recall is the fraction of presented relevant terms that are checked by the user.",
                "Table 4 shows the number of checked terms, relevant terms and relevant checked terms when σ0 is set to 1.0, as well as the precision/recall of user term judgment.",
                "Note that when the clarification forms contain more clusters, fewer terms are checked: 14.8 for 1 × 48, 13.3 for 3 × 16 and 11.2 for 6×8.",
                "Similar pattern holds for relevant terms and relevant checked terms.",
                "There seems to be a trade-off between increasing topic diversity by clustering and losing extra relevant terms: when there are more clusters, each of them gets fewer terms to present, which can hurt a major relevant cluster that contains many relevant terms.",
                "Therefore, it is not always helpful to have more clusters, e.g., TFB6C is actually worse than TFB1C.",
                "The major finding we can make from Table 4 is that the user is not particularly good at identifying relevant terms, which echoes the discovery in [18].",
                "In the case of 3 × 16 clarification forms, the average number of terms checked as relevant by the user is 13.3 per topic, and the average number of relevant terms whose σKLD value exceed 1.0 is 12.6.",
                "The user is able to recognize only 6.9 of these terms on average.",
                "Indeed, the precision and recall of user feedback terms (as defined previously) are far from perfect.",
                "On the other hand, If the user had correctly checked all such relevant terms, the performance of our algorithms would have increased a lot, as shown in Table 5.",
                "We see that TFB gets big improvement when there is an oracle who checks all relevant terms, while CFB meets a bottleneck around MAP of 0.325, since all it does is adjust cluster weights, and when the learned weights are close to being accurate, it cannot benefit more from term feedback.",
                "Also note that TCFB fails to outperform TFB, probably because TFB is sufficiently accurate.",
                "Table 5: Change of MAP when using all (and only) relevant terms (σKLD > 1.0) for feedback. original term feedback relevant term feedback TF1 0.288 0.354 TF3 0.288 0.354 TF6 0.278 0.346 CF3 0.305 0.325 CF6 0.301 0.326 TCF3 0.309 0.345 TCF6 0.304 0.341 6.4 Comparison with Relevance Feedback Now we compare term feedback with document-level relevance feedback, in which the user is presented with the top N documents from an initial retrieval and asked to judge their relevance.",
                "The feedback process is simulated using document relevance judgment from NIST.",
                "We use the mixture model based feedback method proposed in [25], with mixture noise set to 0.95 and feedback coefficient set to 0.9.",
                "Comparative evaluation of relevance feedback against other methods is complicated by the fact that some documents have already been viewed during feedback, so it makes no sense to include them in the retrieval results of the second run.",
                "However, this does not hold for term feedback.",
                "Thus, to make it fair w.r.t. users information gain, if the feedback documents are relevant, they should be kept in the top of the ranking; if they are irrelevant, they should be left out.",
                "Therefore, we use relevance feedback to produce a ranking of top 1000 retrieved documents but with every feedback document excluded, and then prepend the relevant feedback documents at the front.",
                "Table 6 shows the performance of relevance feedback for different values of N and compares it with TCFB3C.",
                "Table 6: Performance of relevance feedback for different number of feedback documents (N).",
                "N MAP Pr@30 RR 5 0.302 0.586 4779 10 0.345 0.670 4916 20 0.389 0.772 5004 TCFB3C 0.309 0.491 4947 We see that the performance of TCFB3C is comparable to that of relevance feedback using 5 documents.",
                "Although it is poorer than when there are 10 feedback documents in terms of MAP and Pr@30, it does retrieve more documents (4947) when going down the ranked list.",
                "We try to compare the quality of automatically inserted terms in relevance feedback with that of manually selected terms in term feedback.",
                "This is done by truncating the relevance feedback modified query model to a size equal to the number of checked terms for the same topic.",
                "We can then compare the terms in the truncated model with the checked terms.",
                "Figure 3 shows the distribution of the terms σKLD scores.",
                "We find that term feedback tends to produce expansion terms of higher quality(those with σKLD > 1) compared to relevance feedback (with 10 feedback documents).",
                "This does not contradict the fact that the latter yields higher retrieval performance.",
                "Actually, when we use the truncated query model instead of the intact one refined from relevance feedback, the MAP is only 0.304.",
                "The truth Figure 3: Comparison of expansion term quality between relevance feedback (with 10 feedback documents) and term feedback (with 3 × 16 CFs) −1−0 0−1 1−2 2−3 3−4 4−5 5−6 0 50 100 150 200 250 300 350 σKLD #terms relevance feedback term feedback is, although there are many unwanted terms in the expanded query model from feedback documents, there are also more relevant terms than what the user can possibly select from the list of presentation terms generated with pseudo-feedback documents, and the positive effects often outweights the negative ones.",
                "We are interested to know under what circumstances term feedback has advantage over relevance feedback.",
                "One such situation is when none of the top N feedback documents is relevant, rendering relevance feedback useless.",
                "This is not infrequent, as one might have thought: out of the 50 topics, there are 13 such cases when N = 5, 10 when N = 10, and still 3 when N = 20.",
                "When this happens, one can only back off to the original retrieval method; the power of relevance feedback is lost.",
                "Surprisingly, in 11 out of 13 such cases where relevance feedback seems impossible, the user is able to check at least 2 relevant terms from the 3 × 16 clarification form (we consider term t to be relevant if σKLD(t) > 1.0).",
                "Furthermore, in 10 out of them TCFB3C outperforms the pseudo-feedback baseline, increasing MAP from 0.076 to 0.146 on average (these are particularly hard topics).",
                "We think that there are two possible explanations for this phenomenon of term feedback being active even when relevance feedback does not work: First, even if none of the top N (suppose it is a small number) documents are relevant, we may still find relevant documents in top 60, which is more inclusive but usually unreachable when people are doing relevance feedback in interactive ad-hoc search, from which we can draw feedback terms.",
                "This is true for topic 367 piracy, where the top 10 feedback documents are all about software piracy, yet there are documents between 10-60 that are about piracy on the seas (which is about the real information need), contributing terms such as pirate, ship for selection in the clarification form.",
                "Second, for some topics, a document needs to meet some special condition in order to be relevant.",
                "The top N documents may be related to the topic, but nonetheless irrelevant.",
                "In this case, we may still extract useful terms from these documents, even if they do not qualify as relevant ones.",
                "For example, in topic 639 consumer online shopping, a document needs to mention what contributes to shopping growth to really match the specified information need, hence none of the top 10 feedback documents are regarded as relevant.",
                "But nevertheless, the feedback terms such as retail, commerce are good for query expansion. 7.",
                "CONCLUSIONS In this paper we studied the use of term feedback for interactive information retrieval in the language modeling approach.",
                "We proposed a cluster-based method for selecting presentation terms as well as algorithms to estimate refined query models from user term feedback.",
                "We saw significant improvement in retrieval accuracy brought by term feedback, in spite of the fact that a user often makes mistakes in relevance judgment that hurts its performance.",
                "We found the best-performing algorithm to be TCFB, which benefits from the combination of directly observed term evidence with TFB and indirectly learned cluster relevance with CFB.",
                "When we reduced the number of presentation terms, term feedback is still able to keep much of its performance gain over the baseline.",
                "Finally, we compared term feedback to document-level relevance feedback, and found that TCFB3Cs performance is on a par with the latter with 5 feedback documents.",
                "We regarded term feedback as a viable alternative to traditional relevance feedback, especially when there are no relevant documents in the top.",
                "We propose to extend our work in several ways.",
                "First, we want to study whether the use of various contexts can help the user to better identify term relevance, while not sacrificing the simplicity and compactness of term feedback.",
                "Second, currently all terms are presented to the user in a single batch.",
                "We could instead consider iterative term feedback, by presenting a small number of terms first, and show more terms after receiving user feedback or stop when the refined query is good enough.",
                "The presented terms should be selected dynamically to maximize learning benefits at any moment.",
                "Third, we have plans to incorporate term feedback into our UCAIR toolbar[20], an Internet Explorer plugin, to make it work for web search.",
                "We are also interested in studying how to combine term feedback with relevance feedback or implicit feedback.",
                "We could, for example, allow the user to dynamically modify terms in a language model learned from feedback documents. 8.",
                "ACKNOWLEDGMENT This work is supported in part by the National Science Foundation grants IIS-0347933 and IIS-0428472. 9.",
                "REFERENCES [1] J. Allan.",
                "Relevance feedback with too much data.",
                "In Proceedings of the 18th annual international ACM SIGIR conference on research and development in information retrieval, pages 337-343, 1995. [2] J. Allan.",
                "HARD track overview in TREC 2005 - High Accuracy Retrieval from Documents.",
                "In The Fourteenth Text REtrieval Conference, 2005. [3] P. Anick.",
                "Using terminological feedback for web search refinement: a log-based study.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 88-95, 2003. [4] P. G. Anick and S. Tipirneni.",
                "The paraphrase search assistant: terminological feedback for iterative information seeking.",
                "In Proceedings of the 22nd annual international ACM SIGIR conference on research and development in information retrieval, pages 153-159, 1999. [5] C. Buckley, G. Salton, J. Allan, and A. Singhal.",
                "Automatic query expansion using SMART.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [6] D. Harman.",
                "Towards interactive query expansion.",
                "In Proceedings of the 11th annual international ACM SIGIR conference on research and development in information retrieval, pages 321-331, 1988. [7] N. A. Jaleel, A. Corrada-Emmanuel, Q. Li, X. Liu, C. Wade, and J. Allan.",
                "UMass at TREC 2003: HARD and QA.",
                "In TREC, pages 715-725, 2003. [8] H. Joho, C. Coverson, M. Sanderson, and M. Beaulieu.",
                "Hierarchical presentation of expansion terms.",
                "In Proceedings of the 2002 ACM symposium on applied computing, pages 645-649, 2002. [9] K. S. Jones, S. Walker, and S. E. Robertson.",
                "A probabilistic model of information retrieval: development and status.",
                "Technical Report 446, Computer Laboratory, University of Cambridge, 1998. [10] D. Kelly, V. D. Dollu, and X. Fu.",
                "The loquacious user: a document-independent source of terms for query expansion.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 457-464, 2005. [11] D. Kelly and X. Fu.",
                "Elicitation of term relevance feedback: an investigation of term source and context.",
                "In Proceedings of the 29th annual international ACM SIGIR conference on research and development in information retrieval, 2006. [12] J. Koenemann and N. Belkin.",
                "A case for interaction: A study of interactive information retrieval behavior and effectiveness.",
                "In Proceedings of the SIGCHI conference on human factors in computing systems, pages 205-212, 1996. [13] V. Lavrenko and W. B. Croft.",
                "Relevance-based language models.",
                "In Research and Development in Information Retrieval, pages 120-127, 2001. [14] Y. Nemeth, B. Shapira, and M. Taeib-Maimon.",
                "Evaluation of the real and perceived value of automatic and interactive query expansion.",
                "In Proceedings of the 27th annual international ACM SIGIR conference on research and development in information retrieval, pages 526-527, 2004. [15] J. Ponte.",
                "A Language Modeling Approach to Information Retrieval.",
                "PhD thesis, University of Massachusetts at Amherst, 1998. [16] S. E. Robertson, S. Walker, S. Jones, M. Beaulieu, and M. Gatford.",
                "Okapi at TREC-3.",
                "In Proceedings of the Third Text REtrieval Conference, 1994. [17] J. Rocchio.",
                "Relevance feedback in information retrieval.",
                "In The SMART retrieval system, pages 313-323. 1971. [18] I. Ruthven.",
                "Re-examining the potential effectiveness of interactive query expansion.",
                "In Proceedings of the 26th annual international ACM SIGIR conference on research and development in informaion retrieval, pages 213-220, 2003. [19] G. Salton and C. Buckley.",
                "Improving retrieval performance by relevance feedback.",
                "Journal of the American Society for Information Science, 41:288-297, 1990. [20] X. Shen, B. Tan, and C. Zhai.",
                "Implicit user modeling for personalized search.",
                "In Proceedings of the 14th ACM international conference on information and knowledge management, pages 824-831, 2005. [21] X. Shen and C. Zhai.",
                "Active feedback in ad-hoc information retrieval.",
                "In Proceedings of the 28th annual international ACM SIGIR conference on research and development in information retrieval, pages 59-66, 2005. [22] A. Spink.",
                "Term relevance feedback and query expansion: relation to design.",
                "In Proceedings of the 17th annual international ACM SIGIR conference on research and development in information retrieval, pages 81-90, 1994. [23] J. Xu and W. B. Croft.",
                "Query expansion using local and global document analysis.",
                "In Proceedings of the 19th annual international ACM SIGIR conference on research and development in information retrieval, pages 4-11, 1996. [24] H. Zaragoza, N. Craswell, M. Taylor, S. Saria, and S. Robertson.",
                "Microsoft cambridge at TREC-13: Web and HARD tracks.",
                "In Proceedings of the 13th Text REtrieval Conference, 2004. [25] C. Zhai and J. Lafferty.",
                "Model-based feedback in the language modeling approach to information retrieval.",
                "In Proceedings of the tenth international conference on information and knowledge management, pages 403-410, 2001. [26] C. Zhai, A. Velivelli, and B. Yu.",
                "A cross-collection mixture model for comparative text mining.",
                "In Proceedings of the tenth ACM SIGKDD international conference on knowledge discovery and data mining, pages 743-748, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        }
    }
}