{
    "id": "J-3",
    "original_text": "Budget Optimization in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an auction. While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the Internet company. In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget. We model the entire process and study this budget optimization problem. While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well. More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible. As our preliminary experiments show, such uniform strategies are likely to be practical. We also present inapproximability results, and optimal algorithms for variants of the budget optimization problem. Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1. INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users. Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford. In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries. This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time. Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers. It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied. Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc. The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers. The challenge from an advertisers point of view is to understand and interact with the auction mechanism. The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget. When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction. The advertiser whose ad appears pays the Internet search company if the user clicks on the ad. The focus in this paper is on how the advertisers bid. For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign. While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks. The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations. Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively. We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords. Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain. In effect the advertiser ends up competing with herself. As a result, the advertisers face a challenging optimization problem. The focus of this paper is to solve this optimization problem. 1.1 The Budget Optimization Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2. A given advertiser sees the state of the auctions for searchbased advertising as follows. There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users. For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section. There is a bipartite graph G on the two vertex sets representing K and Q. For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget optimization problem is as follows. Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the keyword bids in the neighborhood of q. While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data). Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information. In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords. Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice. What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget optimization problem. In particular, we show: • Nearly all formulations of the problem are NP-Hard. In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget optimization problem. The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 . We show that this approximation ratio is tight for uniform strategies. We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.) These strategies can be computed in time nearly linear in |Q| + |K|, the input size. Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query. After all, the optimum can configure arbitrary bids on each of the keywords. Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2). So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum. In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis. We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies. By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance. We have conducted simulations using real auction data from Google. The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice. However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2. MODELING A KEYWORD AUCTION We describe an auction from an advertisers point of view. An advertiser bids on a keyword, which we can think of as a word or set of words. Users of the search engine submit queries. If the query matches a keyword that has been bid on by an advertiser, then the advertiser is entered into an auction for the available ad slots on the results page. What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single bid for a keyword that remains in effect for a period of time, say one day. The keyword could match many different user queries throughout the day. Each user query might have a different set of advertisers competing for clicks. The advertiser could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries. The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget. We now formalize a model of keyword bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query. In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9]. This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear. We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i. The ctr is a measure of how likely it is that our ad will receive a click if placed in position i. The ctr can be measured empirically using past history. We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions. In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a bid on a keyword that matches the users query. We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each keyword. We assume that the auction is a generalized second price (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of bid, and each advertiser is assigned a price equal to the amount bid by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad. Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction. For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0. Since the auction is a generalized second price auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1]. Suppose that we bid b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction. In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity. Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7]. Each auction mechanism will result in a different sort of optimization problem. In the conclusion we point out that for the VCG auction, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b). We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3). We use R+ to denote the nonnegative reals. Observation 1. For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2. Both costq(b) and clicksq(b) are non-decreasing functions of b. Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b. For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p]. When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape. For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now). Here we graph clicks as a function of cost. Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point. Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases. This condition is slightly weaker than concavity. Suppose we would like to solve the budget optimization problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget. One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently. Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00. Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending. Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies. Let B be a distribution on bids b ∈ R+. Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)]. Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points. This is represented in Figure 1 by the dashed line. To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull. This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull. Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point. Summarizing, Lemma 1. If an advertiser is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U. There is one subtlety in this formulation. Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost. Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget. Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget. In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation. Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape. We want to bid on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9]. The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull. Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another. We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost. More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )]. We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted. In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently. However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a bid on two different keywords that match the same query, this conflict must be resolved somehow. For example, if an advertiser has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords. The search engine specifies, in advance, a rule for resolution based on the query the keyword and the bid. A natural rule is to take the keyword with the highest bid, which we adopt here, but our results apply to other resolution rules. We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries. Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b). An edge (k, q) ∈ E means that keyword k matches query q. The advertiser can control their individual keyword bid vector a ∈ R |K| + specifying a bid ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.) Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak. By submitting a bid vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword. We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over bid vectors a ∈ R |K| + . The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget Optimization Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q. Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized. We conclude this section with a small example to illustrate some feature of the budget optimization problem. Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}. Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1. Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must bid at least $1 on u. However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective bid is $1 on both x and y. Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3. UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget Optimization problem in its full generality is difficult. In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors. Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals. With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze. We define a uniform bidding strategy to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b. In other words, each vector in the distribution bids the same value on every keyword. Uniform strategies have several advantages. First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same. Thus, they are effective in the face of limited or noisy information about the keyword interaction graph. Second, uniform strategies are also independent of the priority rule being used. Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries. We now show that we can compute the best uniform strategy efficiently. Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}. We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|. We can index the points in I as b1, . . . , bN in increasing order. The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)). For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape. Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape). The running time is dominated by the time to compute the convex hull, which is O(N log N)[12]. The resulting strategy is the convex combination of two points on the aggregate landscape. Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors. We have shown Lemma 2. Given an instance of Budget Optimization in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time. Furthermore, this strategy will always be a two-bid strategy. Putting these ideas together, we get an O(N log N)-time algorithm for Budget Optimization, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1. Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2. Find the convex hull of the points in the aggregate landscape. 3. Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4. Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β. We will also consider a special case of two-bid strategies. A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all. A single-bid strategy is even easier to implement in practice than a two-bid strategy. For example, the search engines often allow advertisers to set a maximum daily budget. In this case, the advertiser would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day. One could also use an ad scheduling tool offered by some search companies8 to implement this strategy. The best single-bid strategy can also be computed easily from the aggregate landscape. The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4. APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy. In section we prove that there is always a good uniform strategy: Theorem 3. There always exists a uniform bidding strategy that is (1 − 1 e )-optimal. Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal. We introduce the notion of a click-price curve, which is central to our analysis. This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape. Consider an adversarial bidder Ω with the power to bid independently on each query. Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords. Suppose this strategy bids b∗ q for each query q. Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ). Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q . We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks. To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω. Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}. Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2). Note that the area of each step is costq(b∗ q ). The following claim follows immediately: Claim 1. UΩ = R CΩ 0 h(r)dr. Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting. The click-price curve says that if we bid h(r ) on every keyword (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω. Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω. However, all of these extra clicks still cost at most h(r ) per click. Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click. Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ). We summarize this discussion in the following lemma: Lemma 4. For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r). Lemma 4 describes a landscape as a continuous function. For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well. Lemma 5. For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget Optimization with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords. Proof. Construct an instance as follows. Let > 0 be a small number that we will later define in terms of . Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1. The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries. The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri). Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)). Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal. In addition to being an interesting result in its own right, it also serves as a warm-up for our main result. Theorem 6. There always exists a uniform single-bid strategy that is 1 2 -optimal. Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof. Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2). Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ. We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero. For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}. Fix some α where 0 < α ≤ 1, and fix some very small > 0. Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α. The budget is U = 1 + α. The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1. This achieves a total of 2α clicks and spends the budget exactly. The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three. Any single-bid solution that uses as its non-zero bid gets at most α clicks. Bidding 1/α on both keywords results in 2α clicks and total cost 2. Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid. This results in at most α(1 + α) clicks. This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks. In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player. Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance. After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution. This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve. Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks. Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5. Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ. Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively. Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies. In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies. Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}. Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget Optimization exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.) A binary search yields the smallest such α where the objective is exactly U. To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ . It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U. Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U. Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation. Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r). By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget. Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero. Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e. Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function. The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ. The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ. Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal. We now show that no uniform strategy can do better. We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal. First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative. Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1. Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1. Thus, this curve corresponds to an instance where UΩ = 1. Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost. Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance. By Lemma 1 there is always a two-bid optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids. To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α. To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v. The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 . Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption. We turn to the case u > 0. Here we have pu = v−α v−u and pv = α−u v−u . Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ). Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1. The final inequality follows from α > 1 − 1 e . Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here. We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies. The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy. Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently. The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution. For reference, we include the lower bound of a (e − 1)/e fraction of the top curve. The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice. Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful. However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5. HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7. Budget Optimization is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data. Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users. Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget. Call this the Weighted Keyword Bidding problem. With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted). Theorem 8. The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6. EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget optimization problem exactly. Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching. Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming. We first show that to solve the Budget Optimization problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case. The proof (omitted) uses ideas similar to Observation 1 and Lemma 1. Lemma 9. Let I be an input to the Budget Optimization problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U. Then we can find the optimal solution in time O(U log U). A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si. Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property. Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes). We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors. The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming. Lemma 10. For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget Optimization problem with ai ≥ aj. We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi. In this case we say that j is a child of i. Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children. A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial. We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children. Lemma 11. Let G be a graph with the laminar property. There exists another graph G with the same optimal solution to the Budget Optimization problem, where each node has at most two children in the laminar ordering. Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t. Qj ⊆ Qi (and exactly b on keyword i) while spending at most U. For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a bid ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai). Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise. Lemma 12. If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget Optimization problem exactly in O(B3 U3 n) time. In addition, we can apply Lemma 9 to compute the optimal (randomized) solution. Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13. If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget Optimization problem in O(B3 U3 n) time. The bounds in this section make pessimistic assumptions about having to try every budget and every level. For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent). Doing so yields the obvious improvement in the bounds. 7. BID OPTIMIZATION UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search. Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties. In this section we argue that the budget optimization problem is easy under the VCG auction. For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5]. For the sake of the budget optimization problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b). Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i]. We claim that in the VCG auction, the landscapes are convex. To see this, consider two consecutive positions i,i + 1. The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i]. Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex. Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries. In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries. But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid. Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords. We conclude that the best uniform bid is an optimal solution to the budget optimization problem. 8. CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b. If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better. Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13]. Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.) Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers. In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium. Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9. REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani. Truthful auctions for pricing search keywords. ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc. WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian. Dynamics of bid optimization in online advertisement auctions. Proc. WWW 2007. [4] E. Clarke. Multipart pricing of public goods. Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz. Internet Advertising and the Generalized Second Price Auction: Selling Billions of Dollars Worth of Keywords. Second workshop on sponsored search auctions, 2006. [6] U. Feige. A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves. Incentives in teams. Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani. Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP. J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy. Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching. FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina. Stochastic models for budget optimization in search-based advertising. To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos. Computational Geometry: An Introduction. Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson. An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey. Counterspeculation, auctions and competitive-sealed tenders. Journal of Finance, 16(1):8-37, 1961. 49",
    "original_translation": "Optimización del presupuesto en subastas publicitarias basadas en la búsqueda Jon Feldman Google, Inc. Nueva York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. Nueva York, NY Muthu@google.com Martin P´al Google, Inc. Nueva York,NY mpal@google.com Cliff Stein ∗ Departamento de Ieor Columbia University cliff@ieor.columbia.edu Resumen Las compañías de búsqueda en Internet venden espacios publicitarios basados en consultas de búsqueda de usuarios a través de una subasta. Si bien ha habido trabajo previo en el proceso de subasta y sus aspectos teóricos del juego, la mayor parte se centra en la compañía de Internet. En este trabajo, nos centramos en los anunciantes, que deben resolver un complejo problema de optimización para decidir cómo colocar ofertas en las palabras clave para maximizar su rendimiento (el número de clics del usuario en sus anuncios) para un presupuesto determinado. Modelamos todo el proceso y estudiamos este problema de optimización del presupuesto. Si bien la mayoría de las variantes son NP-Hard, mostramos, quizás sorprendentemente, que simplemente aleatorizar entre dos estrategias uniformes que se ofrecen por igual en todas las palabras clave funciona bien. Más precisamente, esta estrategia obtiene al menos una fracción 1/E de los clics máximos posibles. Como muestran nuestros experimentos preliminares, es probable que tales estrategias uniformes sean prácticas. También presentamos resultados de inapropiación y algoritmos óptimos para las variantes del problema de optimización del presupuesto. Categorías y descriptores de sujetos F.2 [Teoría de la computación]: Análisis de algoritmos y complejidad del problema;J.4 [Aplicaciones informáticas]: Ciencias sociales y conductuales -Conómica -Conómica Algoritmos de términos generales, Economía, Teoría.1. Introducción La búsqueda en línea ahora es omnipresente y compañías de búsqueda de Internet como Google, Yahoo!Y MSN permite que las empresas e individuos se anuncien en base a consultas de búsqueda planteadas por los usuarios. Los medios de comunicación convencionales, como las estaciones de televisión o los periódicos, fijan el precio de sus espacios publicitarios individualmente, y los anunciantes compran los que pueden pagar. Por el contrario, las compañías de búsqueda de Internet tienen dificultades para establecer un precio explícitamente para los anuncios que colocan en respuesta a las consultas de los usuarios. Esta dificultad surge porque la oferta (y la demanda) varían de manera amplia e impredecible entre las consultas de los usuarios, y deben fijar el precio de las espacios para miles de millones de tales consultas en tiempo real. Por lo tanto, confían en el mercado para determinar los precios adecuados mediante el uso de subastas entre los anunciantes. Es un problema difícil establecer la subasta para efectuar un mercado estable en el que todas las partes (los anunciantes, los usuarios y la compañía de búsqueda de Internet) están adecuadamente satisfechas. Recientemente ha habido un estudio sistemático de los problemas involucrados en la teoría del juego de las subastas [5, 1, 2], maximización de ingresos [10], etc. La perspectiva en este documento no es de la compañía de búsqueda de Internet que muestra los anuncios, sino de los anunciantes. El desafío desde el punto de vista de los anunciantes es comprender e interactuar con el mecanismo de subasta. El anunciante determina un conjunto de palabras clave de su interés y luego debe crear anuncios, establecer las ofertas para cada palabra clave y proporcionar un presupuesto total (a menudo diario). Cuando un usuario plantea una consulta de búsqueda, la compañía de búsqueda de Internet determina los anunciantes cuyas palabras clave coinciden con la consulta y que todavía le quedan presupuesto, ejecuta una subasta entre ellos y presenta el conjunto de anuncios correspondientes a los anunciantes que ganan la subasta. El anunciante cuyo anuncio aparece paga a la compañía de búsqueda de Internet si el usuario hace clic en el anuncio. El enfoque en este documento se trata de cómo ofertan los anunciantes. Para la elección particular de las palabras clave de su interés1, un anunciante quiere optimizar el efecto general de la campaña publicitaria. Si bien el efecto de una campaña publicitaria en cualquier medio es un fenómeno complicado para cuantificar, una noción comúnmente aceptada (y fácilmente cuantificada) en la publicidad basada en la búsqueda en Internet es maximizar el número de clics. Las compañías de búsqueda de Internet apoyan a 1 La elección de palabras clave está relacionada con el conocimiento del dominio del anunciante, el comportamiento del usuario y las consideraciones estratégicas. Las compañías de búsqueda en Internet brindan a los anunciantes resúmenes del tráfico de consultas que les es útil para optimizar sus opciones de palabras clave de manera interactiva. No abordamos directamente la elección de palabras clave en este documento, que se aborda en otro lugar [13].40 Wards anunciantes y proporcionan estadísticas sobre la historia de los volúmenes de clics y la predicción sobre el rendimiento futuro de varias palabras clave. Aún así, este es un problema complejo por las siguientes razones (entre otras): • Las palabras clave individuales tienen características significativamente diferentes entre sí;Por ejemplo, si bien la pesca es una palabra clave amplia que coincide con muchas consultas de usuarios y tiene muchos anunciantes competidores, el cebo de pesca humana es una palabra clave de nicho que coincide solo con unas pocas consultas, pero podría tener menos competencia.• Hay interacciones complejas entre las palabras clave porque una consulta de usuario puede coincidir con dos o más palabras clave, ya que el anunciante está tratando de cubrir todas las palabras clave posibles en algún dominio. En efecto, el anunciante termina compitiendo consigo mismo. Como resultado, los anunciantes enfrentan un problema de optimización desafiante. El enfoque de este documento es resolver este problema de optimización.1.1 El problema de optimización del presupuesto presentamos una breve discusión y formulación del problema de optimización que enfrentan los anunciantes;Una descripción más detallada está en la Sección 2. Un anunciante determinado ve el estado de las subastas para la publicidad basada en la búsqueda de la siguiente manera. Hay un conjunto K de palabras clave de interés;En la práctica, incluso los pequeños anunciantes generalmente tienen un conjunto grande K. Hay un conjunto Q de consultas planteadas por los usuarios. Para cada consulta q ∈ Q, hay funciones que dan el clicksq (b) y el costq (b) que resultan de ofertar una cantidad particular b en la subasta para esa consulta, que modelamos más formalmente en la siguiente sección. Hay un gráfico bipartito G en los dos conjuntos de vértices que representan K y Q. Para cualquier consulta Q ∈ Q, los vecinos de Q en K son las palabras clave que se dice que coinciden con la consulta Q.2 El problema de optimización del presupuesto es el siguiente. Dado el gráfico G junto con las funciones ClickSq (·) y Costq (·) en las consultas, así como un presupuesto U, determine las ofertas BK para cada palabra clave k ∈ K de tal manera que P Q Clicksq (BQ) se maximice su sujeto a PQ COSTQ (BQ) ≤ U, donde la oferta efectiva BQ en una consulta es alguna función de las ofertas de palabras clave en el vecindario de q. Si bien podemos presentar este problema como un problema de optimización tradicional, existen diferentes desafíos en la práctica dependiendo del acceso de los anunciantes a la consulta y la información del gráfico, y de hecho la confiabilidad de esta información (por ejemplo, podría basarse en datos históricos inestables). Por lo tanto, es importante encontrar soluciones a este problema que no solo obtengan muchos clics, sino que también son simples, robustos y menos dependientes de la información. En este artículo definimos la noción de una estrategia uniforme que es esencialmente una estrategia que ofrece uniformemente a todas las palabras clave. Dado que este tipo de estrategia evita la necesidad de saber algo sobre los detalles del gráfico, y agrega efectivamente las funciones de clics y costos en las consultas, es bastante robusto y, por lo tanto, es deseable en la práctica. Lo sorprendente es que la estrategia uniforme en realidad funciona bien, lo que demostraremos.2 Los detalles de la regla de correspondencia están determinados por la compañía de búsqueda de Internet;Aquí tratamos la función como arbitraria.1.2 Nuestros principales resultados y descripción técnica presentamos resultados positivos y negativos para el problema de optimización del presupuesto. En particular, mostramos: • Casi todas las formulaciones del problema son NP-HARD. En los casos ligeramente más generales que la formulación anterior, donde los clics tienen pesos, el problema es inapropiado mejor que un factor de 1 - 1 e, a menos que p = np.• Damos un algoritmo (1-1/e)-APROXIMACIÓN para el problema de optimización del presupuesto. La estrategia encontrada por el algoritmo es una estrategia uniforme de dos licivaciones, lo que significa que aleatoriza entre ofertar algún valor B1 en todas las palabras clave, y licitar algún otro valor B2 en todas las palabras clave hasta que el presupuesto se agote 3. Mostramos que esta relación de aproximación es apretada para estrategias uniformes. También damos un algoritmo (1/2) de apropiación que ofrece una estrategia de uniforme de oferta única, solo usando un valor B1.(Esto es apretado para estrategias de uniformes de una sola año). Estas estrategias se pueden calcular en el tiempo casi lineal en | Q |+ | K |, el tamaño de entrada. Las estrategias uniformes pueden parecer ingenuas en la primera consideración porque las palabras clave varían significativamente en sus funciones de clics y costos, y puede haber una interacción compleja entre ellas cuando las palabras clave múltiples son relevantes para una consulta. Después de todo, el óptimo puede configurar ofertas arbitrarias en cada una de las palabras clave. Incluso para el caso simple cuando el gráfico es una coincidencia, el algoritmo óptimo implica colocar diferentes ofertas en diferentes palabras clave a través de un empaque similar a una mochila (Sección 2). Por lo tanto, puede ser sorprendente que una estrategia de uniforme simple de dos licivaciones sea del 63% o más efectiva en comparación con el óptimo. De hecho, nuestra prueba es más fuerte, lo que demuestra que esta estrategia es un 63% efectiva contra un adversario estrictamente más poderoso que puede ofertar independientemente en las consultas individuales, es decir, no estar limitada por la interacción impuesta por el gráfico G. Nuestra prueba de 1- La relación de aproximación 1/E se basa en un análisis adversario. Definimos un LP de revelación de factores (Sección 4) donde las soluciones primarias corresponden a posibles instancias, y las soluciones duales corresponden a distribuciones sobre estrategias de licitación. Al derivar la solución óptima a este LP, obtenemos tanto la prueba de la relación de aproximación como una instancia de peor caso. Hemos realizado simulaciones utilizando datos de subastas reales de Google. Los resultados de estas simulaciones, que se destacan al final de la Sección 4, sugieren que las estrategias de licitación uniforme podrían ser útiles en la práctica. Sin embargo, quedan preguntas importantes sobre (entre otras cosas) objetivos de licitación alternativos, modelos de licitación en línea o estocástica [11] y preocupaciones teóricas del juego [3], que discutimos brevemente en la Sección 8. 2. Modelando una subasta de palabras clave describimos una subasta desde un punto de vista de los anunciantes. Un anunciante ofrece una palabra clave, que podemos pensar como una palabra o un conjunto de palabras. Los usuarios del motor de búsqueda envían consultas. Si la consulta coincide con una palabra clave que un anunciante ha ofertado, entonces el anunciante se ingresa en una subasta para las ranuras de anuncios disponibles en la página de resultados. Lo que constituye una coincidencia varía según el motor de búsqueda.3 Este tipo de estrategia también se puede interpretar como un valor de oferta (en todas las palabras clave) para parte del día y un valor diferente para el resto del día.41 Un anunciante hace una sola oferta para una palabra clave que permanece vigente por un período de tiempo, digamos un día. La palabra clave podría coincidir con muchas consultas de usuarios diferentes durante todo el día. Cada consulta de usuario puede tener un conjunto diferente de anunciantes que compiten por los clics. El anunciante también podría ofertar diferentes cantidades en múltiples palabras clave, cada una coincidente con un conjunto (posiblemente superpuesto) de consultas de usuario. El objetivo final de un anunciante es maximizar el tráfico en su sitio web, dado un cierto presupuesto publicitario. Ahora formalizamos un modelo de oferta de palabras clave y definimos un problema de optimización que captura este objetivo.2.1 Paisajes comenzamos considerando el caso de una sola palabra clave que coincida con una sola consulta de usuario. En esta sección definimos la noción de un panorama de consulta que describe la relación entre la oferta de anunciantes y lo que sucederá en esta consulta como resultado de esta oferta [9]. Esta definición será fundamental para la discusión a medida que continuamos en casos más generales.2.1.1 Posiciones, ofertas y tasa de clics La página de resultados de búsqueda para una consulta contiene posibles posiciones en las que puede aparecer nuestro anuncio. Denotamos la posición más alta (más favorable) por 1 y la más baja por p.Asociado con cada posición I es un valor α [i] que denota la tasa de clics (CTR) de la AD en la posición I. El CTR es una medida de la probabilidad de que nuestro anuncio reciba un clic si se coloca en la posición I. El CTR se puede medir empíricamente utilizando la historia pasada. Asumimos a lo largo de este trabajo que α [i] ≤ α [j] si j <i, es decir, las posiciones más altas reciben al menos tantos clics como posiciones más bajas. Para colocar un anuncio en esta página, debemos ingresar la subasta que se lleva a cabo entre todos los anunciantes que han presentado una oferta por una palabra clave que coincida con la consulta de los usuarios. Nos referiremos a una subasta como una subasta de consulta, para enfatizar que hay una subasta para cada consulta en lugar de cada palabra clave. Suponemos que la subasta es una subasta generalizada de segundo precio (GSP) [5, 7]: los anunciantes se clasifican en orden decreciente de oferta, y a cada anunciante se le asigna un precio igual al monto de la oferta del anunciante debajo de ellos en la clasificación.4 En subastas de búsqueda patrocinadas, este anunciante solo paga si el usuario realmente hace clic en el anuncio. Sea (B [1], ..., B [P]) denotar las ofertas de los principales anunciantes de P en esta subasta de consulta. Para la comodidad de notación, suponemos que b [0] = ∞ y b [p] = α [p] = 0. Dado que la subasta es una subasta generalizada de la segunda precios, las ofertas más altas ganan posiciones más altas;es decir, b [i] ≥ b [i + 1]. Supongamos que ofrecemos B en una palabra clave que coincide con la consulta de los usuarios, entonces nuestra posición está definida por la B [i] más grande que es como máximo B, es decir, pos (b) = arg max i (b [i]: b[i] ≤ b).(1) Dado que solo pagamos si el usuario hace clic (y eso sucede con probabilidad α [i]), nuestro costo esperado para ganar la posición I 4 Google, Yahoo!y MSN usan alguna variante de la subasta GSP. En la subasta de Google, las ofertas de los anunciantes se multiplican por un puntaje de calidad antes de clasificarse;Nuestros resultados también se trasladan a este caso, que omitimos de este documento para mayor claridad. Además, se han considerado otras subastas además de GSP;por ejemplo, la subasta de Vickrey Clark Groves (VCG) [14, 4, 7]. Cada mecanismo de subasta dará como resultado un tipo diferente de problema de optimización. En la conclusión, señalamos que para la subasta VCG, el problema de optimización de licitación se vuelve bastante fácil.sería costo [i] = α [i] · b [i], donde i = pos (b). Utilizamos CostQ (b) y Clicksq (b) para denotar el costo y los clics esperados que resultan de tener una oferta B que califica para una subasta de consulta Q, y por lo tanto Costoq (b) = α [i] · B [i] dondei = pos (b), (2) clicksq (b) = α [i] donde i = pos (b).(3) Las siguientes observaciones sobre costos y clics siguen inmediatamente de las definiciones y ecuaciones (1), (2) y (3). Usamos R+ para denotar los reales no negativos. Observación 1. Para b ∈ R+, 1. (Costq (b), Clicksq (b)) solo puede asumir uno de un conjunto finito de valores vq = {(costo [1], α [1]) ,..., (costo [p], α [p])}.2. Tanto CostQ (B) como Clicksq (b) son funciones no dañadas de b. Además, el costo por clic (CPC) CostQ (b)/Clicksq (b) no es deja en b.3. Costq (b)/Clicksq (b) ≤ b. Para las ofertas (B [1], ..., B [P]) que corresponden a las ofertas de otros anunciantes, tenemos: Costq (b [i])/clicksq (b [i]) = b [i],i ∈ [p]. Cuando el contexto está claro, soltamos el subíndice q.2.1.2 PASCAPES DE CONSULTA Podemos resumir los datos contenidos en el costo de las funciones (b) y los clics (b) como una colección de puntos en una parcela de costo frente a clics, a los que nos referimos como un paisaje. Por ejemplo, para una consulta con cuatro ranuras, un paisaje puede parecerse a la Tabla 1. Costo de rango de oferta por clic Costo de costos [$ 2.60, ∞) $ 2.60 $ 1.30 .5 [$ 2.00, $ 2.60) $ 2.00 $ 0.90 .45 [$ 1.60, $ 2.00) $ 1.60 $ 0.40.25 [$ 0.50, $ 1.60) $ 0.50 $ 0.10 .2 [$ 0, $ 0.50) $ 0 $ 0 0 Tabla 1: Un panorama para una consulta Es conveniente representar estos datos gráficamente como en la Figura 1 (ignore la línea discontinua por ahora). Aquí gráficos hizo clic en función de costo. Observe que en este gráfico, el CPC (costo (b)/clics (b)) de cada punto es el recíproco de la pendiente de la línea desde el origen hasta el punto. Dado que el costo (b), los clics (b) y el costo (b)/clics (b) no son dañados, disminuye la pendiente de la línea desde el origen hasta los puntos sucesivos en la trama. Esta condición es ligeramente más débil que la concavidad. Supongamos que nos gustaría resolver el problema de optimización del presupuesto para un solo panorama de consultas.5 A medida que aumentamos nuestra oferta de cero, nuestros aumentos de costos y nuestro número esperado de clics aumenta, por lo que simplemente presentamos la oferta más alta de tal manera que permanecemos dentro de nuestrapresupuesto. Un problema que vemos de inmediato es que, dado que solo hay un conjunto finito de puntos en este paisaje, es posible que no podamos dirigir los presupuestos arbitrarios de manera eficiente. Supongamos en el ejemplo de la Tabla 1 y la Figura 1 que tuvimos un presupuesto 5, por supuesto, es un poco poco realista imaginar que un anunciante tendría que preocuparse por un presupuesto si solo se considerara una consulta de usuario;Sin embargo, uno podría imaginar múltiples instancias de la misma consulta y las escalas de problemas.42 $ 0.50 $ 1.00 $ 1.50 .1 .2 .3 .4 .5 clics Costo Figura 1: Un panorama de ofertas.de $ 1.00. La oferta entre $ 2.00 y $ 2.60 usa solo $ 0.90, por lo que estamos bajo gastos. Ofertar más de $ 2.60 no es una opción, ya que luego incurriríamos en un costo de $ 1.30 y gastaríamos en exceso nuestro presupuesto.2.1.3 Estrategias aleatorias Para rectificar este problema y utilizar mejor nuestro presupuesto disponible, permitimos estrategias de licitación aleatorias. Sea B una distribución en las ofertas b ∈ R+. Ahora definimos el costo (b) = eb∼b [costo (b)] y los clics (b) = eb∼b [Clicks (b)]. Gráficamente, los posibles valores de (costo (b), clics (b)) se encuentran en el casco convexo de los puntos de paisaje. Esto se representa en la Figura 1 por la línea discontinua. Para encontrar una distribución de ofertas B que maximice los clics sujetos a un presupuesto, simplemente dibujamos una línea vertical en la trama donde el costo es igual al presupuesto, y encontramos el punto más alto en esta línea en el casco convexo. Este punto siempre será la combinación convexa de como máximo dos puntos de paisaje originales que se encuentran en el casco convexo. Por lo tanto, dado el punto en el casco convexo, es fácil calcular una distribución en dos ofertas que condujeron a este punto. Resumen, Lema 1. Si un anunciante está haciendo una oferta por una palabra clave, sujeto a un presupuesto u, entonces la estrategia óptima es elegir una combinación convexa de (a lo sumo) dos ofertas que están en los puntos finales de la línea en el casco convexo en el punto más alto por el costo de mayor costoU. Hay una sutileza en esta formulación. Dada cualquier estrategia de licitación, aleatorizada o de otro tipo, el costo resultante es una variable aleatoria que representa el costo esperado. Por lo tanto, si nuestra restricción presupuestaria es un presupuesto difícil, tenemos que lidiar con las dificultades que surgen si nuestra estrategia fuera por encima del presupuesto. Por lo tanto, pensamos que nuestra restricción presupuestaria es suave, es decir, solo requerimos que nuestro costo esperado sea menor que el presupuesto. En la práctica, el presupuesto es a menudo un presupuesto diario promedio y, por lo tanto, no nos preocupamos si lo superamos algún día, siempre y cuando cumplamos con el presupuesto de expectativa. Además, el anunciante o el motor de búsqueda (posiblemente ambos) monitorean el costo incurrido durante el día;Por lo tanto, la oferta de anunciantes se puede cambiar a cero durante parte del día, por lo que el presupuesto no es excesivo.6 Por lo tanto, en el resto6 ver https://adwords.google.com/support/bin/answer.Py? Respuesta = 22183, por ejemplo.DER De este documento, formularemos una restricción presupuestaria que solo debe respetarse en la expectativa.2.1.4 Consultas múltiples: un problema de mochila como calentamiento, consideraremos a continuación el caso cuando tengamos un conjunto de consultas, cada una de las cuales su propio paisaje. Queremos ofertar por cada consulta sujeto independientemente a nuestro presupuesto: el problema de optimización resultante es una pequeña generalización del problema de la mochila fraccional y se resolvió en [9]. El primer paso del algoritmo es tomar el casco convexo de cada paisaje, como en la Figura 1, y eliminar cualquier punto de paisaje que no esté en el casco convexo. Cada sección lineal por partes de la curva representa el número incremental de clics y el costo incurrido al moverse una oferta de un valor particular a otro. Consideramos estas piezas como elementos en una instancia de mochila fraccional con un valor igual al número incremental de clics y tamaño igual al costo incremental. Más precisamente, para cada pieza que conecta dos ofertas consecutivas B y B en el casco convexo, creamos un elemento de mochila con valor [clics (b) - clics (b)] y tamaño [costo (b) - costo (b)]. Luego emulamos el algoritmo codicioso para la mochila, clasificando por valor/tamaño (costo por clic), y eligiendo codicioso hasta que el presupuesto esté agotado. En esta reducción a la mochila hemos ignorado el hecho de que algunas de las piezas provienen del mismo paisaje y no pueden ser tratadas de forma independiente. Sin embargo, dado que cada curva es cóncava, las piezas que provienen de una curva de consulta particular están en un orden creciente de costo por clic;Por lo tanto, de cada paisaje hemos elegido para nuestra mochila un conjunto de piezas que forman un prefijo de la curva.2.2 Interacción de palabras clave En la realidad, los anunciantes de búsqueda pueden ofertar en un gran conjunto de palabras clave, cada una de ellas calificando para un conjunto de consultas diferente (posiblemente superpuesto), pero la mayoría de los motores de búsqueda no permiten que un anunciante aparezca dos veces en la misma página de resultados de búsqueda.7 Por lo tanto, si un anunciante tiene una oferta en dos palabras clave diferentes que coinciden con la misma consulta, este conflicto debe resolverse de alguna manera. Por ejemplo, si un anunciante tiene una oferta por las palabras clave zapatos y el tacón alto, entonces si un usuario emite los zapatos de techo de consulta, coincidirá con dos palabras clave diferentes. El motor de búsqueda especifica, por adelantado, una regla de resolución basada en la consulta la palabra clave y la oferta. Una regla natural es tomar la palabra clave con la oferta más alta, que adoptamos aquí, pero nuestros resultados se aplican a otras reglas de resolución. Modelamos el problema de interacción de palabras clave utilizando un gráfico bipartito no dirigido g = (k ∪ q, e) donde k es un conjunto de palabras clave y Q es un conjunto de consultas. Cada q ∈ Q tiene un paisaje asociado, según lo definido por CostQ (b) y Clicksq (b). Un borde (k, q) ∈ E significa que la palabra clave k coincide con consulta q. El anunciante puede controlar su vector de oferta de palabras clave individual a ∈ R | k |+ Especificar una oferta AK para cada palabra clave k ∈ K. (Por ahora, no consideramos ofertas aleatorias, pero lo presentaremos en breve). Dado un vector de oferta particular A en las palabras clave, utilizamos la regla de resolución de tomar el máximo para definir la oferta efectiva en la consulta Q como bq (a) = max k: (k, q) ∈E ak. Al enviar un vector de oferta A, el anunciante recibe unos 7 ver https://adwords.google.com/support/bin/answer.Py? Respuesta = 14179, por ejemplo.43 Número de clics y paga algún costo en cada palabra clave. Usamos el término gasto para denotar el costo total;Del mismo modo, usamos el término tráfico para denotar el número total de clics: gasto (a) = x q∈Q costq (bq (a));tráfico (a) = x q∈Q clicksq (bq (a)) También permitimos estrategias aleatorias, donde un anunciante da una distribución a vectores de oferta a ∈ R | k |+. El gasto y el tráfico resultantes están dados por el gasto (a) = ea∼A [gasto (a)];tráfico (a) = ea∼A [tráfico (a)] Ahora podemos establecer el problema en su generalidad completa: entrada de optimización del presupuesto: un presupuesto u, un gráfico de cuidante de palabras clave g = (k ∪ q, e) y paisajes(Costq (·), Clicksq (·)) para cada q ∈ Q. Encontrar: una distribución A Over Bid Vectores A ∈ R | K |+ Tal que el gasto (a) ≤ u y el tráfico (a) se maximizan. Concluimos esta sección con un pequeño ejemplo para ilustrar alguna característica del problema de optimización del presupuesto. Supongamos que tiene dos palabras clave k = {u, v} y dos consultas q = {x, y} y bordes e = {(u, x), (u, y), (v, y)}. Supongamos que la consulta x tiene una posición con CTR αx [1] = 1.0, y hay una oferta BX 1 = $ 1. La consulta y tiene dos posiciones con CTRS αy [1] = αy [2] = 1.0, y oferta por 1 = $ y por 2 = $ 1 para obtener cualquier clic de X, un anunciante debe ofertar al menos $ 1 en u. Sin embargo, debido a la estructura del gráfico, si el anunciante establece BU a $ 1, entonces su oferta efectiva es de $ 1 en X e Y. Por lo tanto, debe intercambiar entre obtener los clics de X y obtener el trato de un clic para $ que sería posible de otra manera.3. Las estrategias de licitación uniformes como mostraremos en la Sección 5, es difícil resolver el problema de optimización del presupuesto en su generalidad completa. Además, puede ser difícil razonar sobre estrategias que involucran distribuciones arbitrarias sobre vectores de ofertas arbitrarias. Los anunciantes generalmente prefieren estrategias que sean fáciles de entender, evaluar y usar dentro de sus objetivos más grandes. Con esta motivación, observamos clases restringidas de estrategias que podemos calcular fácilmente, explicar y analizar. Definimos una estrategia de licitación uniforme para que sea una distribución A Vectores de Over Bid a ∈ R | K |+ donde cada vector de oferta en la distribución es de la forma (b, b, ..., b) para alguna oferta de valor real b. En otras palabras, cada vector en la distribución ofrece el mismo valor en cada palabra clave. Las estrategias uniformes tienen varias ventajas. Primero, no dependen de los bordes del gráfico de interacción, ya que todas las ofertas efectivas en consultas son las mismas. Por lo tanto, son efectivos frente a la información limitada o ruidosa sobre el gráfico de interacción de palabras clave. En segundo lugar, las estrategias uniformes también son independientes de la regla prioritaria que se utiliza. En tercer lugar, cualquier algoritmo que brinde una garantía de aproximación será válido para cualquier gráfico de interacción sobre esas palabras clave y consultas. Ahora mostramos que podemos calcular la mejor estrategia de uniforme de manera eficiente. Supongamos que tenemos un conjunto de consultas Q, donde el paisaje VQ para cada consulta Q está definido por el conjunto de puntos VQ = {(Costq [1], αq [1]) ,..., (CostQ [P], αq [P])}. Definimos el conjunto de ofertas interesantes IQ = {Costq [1]/αq [1] ,..., costaq [p]/αq [p]}, que i = ∪q∈Qiq, y deje n = | i |. Podemos indexar los puntos en I como B1 ,..., BN en orden creciente. El punto ésimo en nuestro paisaje agregado V se encuentra sumando, sobre las consultas, el costo y los clics asociados con BID BI, es decir, V = ∪n i = 1 (p Q∈Q Costq (bi), p Q∈QClicksq (bi)). Para cualquier posible oferta B, si usamos el paisaje agregado tal como lo haríamos con un paisaje regular, representamos exactamente el costo y los clics asociados con la realización de esa oferta simultáneamente en todas las consultas asociadas con el paisaje agregado. Por lo tanto, todas las definiciones y resultados de la Sección 2 sobre los paisajes pueden extenderse a paisajes agregados, y podemos aplicar el Lema 1 para calcular la mejor estrategia uniforme (utilizando el casco convexo de los puntos en este paisaje agregado). El tiempo de ejecución está dominado por el momento de calcular el casco convexo, que es o (n log n) [12]. La estrategia resultante es la combinación convexa de dos puntos en el paisaje agregado. Definir una estrategia de dos ofertas para ser una estrategia uniforme que pone un peso distinto de cero como máximo dos vectores de ofertas. Hemos mostrado Lema 2. Dada una instancia de optimización del presupuesto en la que hay un total de N puntos en todos los paisajes, podemos encontrar la mejor estrategia de uniforme en el tiempo O (n log n). Además, esta estrategia siempre será una estrategia de dos ofertas. Entiendo estas ideas, obtenemos un algoritmo de tiempo O (n log n) para la optimización del presupuesto, donde n es el número total de puntos de paisaje (más tarde mostramos que este es un algoritmo de acroximación (1-1 e)): 1. Agregue todos los puntos de los paisajes de consulta individuales a un solo paisaje agregado.2. Encuentre el casco convexo de los puntos en el paisaje agregado.3. Calcule el punto en el casco convexo para el presupuesto dado, que es la combinación convexa de dos puntos α y β.4. Salida La estrategia que es la combinación convexa apropiada de los vectores de oferta uniformes correspondientes a α y β. También consideraremos un caso especial de estrategias de dos licitaciones. Una estrategia de oferta única es una estrategia uniforme que pone un peso distinto de cero como máximo un vector distinto de cero, es decir, el anunciante aleatoriza entre ofertar una cierta cantidad b ∗ en todas las palabras clave, y no ofertar en absoluto. Una estrategia de oferta única es aún más fácil de implementar en la práctica que una estrategia de dos ofertas. Por ejemplo, los motores de búsqueda a menudo permiten a los anunciantes establecer un presupuesto diario máximo. En este caso, el anunciante simplemente ofertaría B ∗ hasta que su presupuesto se agote, y el sistema de porción de anuncios la eliminaría de todas las subastas posteriores hasta el final del día. También se podría usar una herramienta de programación de anuncios ofrecida por algunas compañías de búsqueda8 para implementar esta estrategia. La mejor estrategia de oferta única también se puede calcular fácilmente a partir del paisaje agregado. La estrategia óptima para un presupuesto u será el punto x S.T.El costo (x) es lo más grande posible sin exceder U, o una combinación convexa de cero y el punto Y, donde el costo (y) es lo más pequeño posible, mientras que es mayor que U. 8 Ver https://adwords.google.com/soporte/bin/respuesta.Py? Respuesta = 33227, por ejemplo.44 B D A C Haga clic Costo CPC A 2 $ 1 $ 0.50 B 5 $ 0.50 $ 0.10 C 3 $ 2 $ 0.67 D 4 $ 1 $ 0.25 CPC $ 0.67 $ 0.50 $ 0.25 $ 0.10 Haga clic en Total: 5 9 11 14 Figura 2: Cuatro consultas y su curva de precio de clic.4. Algoritmos de aproximación en la sección anterior propusimos usar estrategias uniformes y dimos un algoritmo eficiente para calcular la mejor estrategia. En la sección demostramos que siempre hay una buena estrategia uniforme: Teorema 3. Siempre existe una estrategia de licitación uniforme que es (1-1 e)-optimal. Además, para cualquier> 0, existe una instancia para la cual todas las estrategias uniformes son como máximo (1-1 e +)-óptimas. Introducimos la noción de una curva de precio de clic, que es fundamental para nuestro análisis. Esta definición hace que sea sencillo demostrar que siempre hay una estrategia de oferta única que es una aproximación de 1 2 (y esto es apretado);Luego construimos sobre esto para probar el teorema 3. 4.1 Las curvas de precio de clic consideramos un conjunto de consultas Q, y para cada consulta q ∈ Q, Sea (ClickSq (·), Costq (·)) el panorama de ofertas correspondiente. Considere un postor adversario Ω con el poder de ofertar de forma independiente en cada consulta. Tenga en cuenta que este postor es más poderoso que un postor óptimo, que tiene que ofertar por las palabras clave. Supongamos que esta estrategia ofrece b ∗ q para cada consulta q. Por lo tanto, ω logra el tráfico CΩ = P I clics (b ∗ i), y incurre en el gasto total de gasto Ω = P i costo (b ∗ i). Sin pérdida de generalidad, podemos suponer que Ω se ofrece de modo que para cada consulta Q, el costo por clic es igual a B ∗ Q, es decir, Costq (B ∗ Q)/Clicksq (B ∗ Q) = B ∗ Q. Podemos asumir esto porque para alguna consulta Q, si Costq (b ∗ q)/clicksq (b ∗ q) <b ∗ q, siempre podemos bajar b ∗ q y sin cambiar el costo y los clics. Para ayudar a nuestra discusión, presentamos la noción de una curva de ClickPrice (un ejemplo del cual se muestra en la Figura 2), que describe la distribución de CPC obtenida por Ω. Formalmente, la curva es una función no decretante h: [0, cΩ] → r+ definida como h (r) = min {c |P Q: B ∗ Q ≤C Clicksq (B ∗ Q) ≥ R}. Otra forma de construir esta curva es ordenar las consultas en orden creciente por b ∗ q = costq (b ∗ q)/clicksq (b ∗ q), luego haga una función de paso donde el paso QTH tiene altura b ∗ q y clicksq(B ∗ Q) (ver Figura 2). Tenga en cuenta que el área de cada paso es Costq (B ∗ Q). El siguiente reclamo sigue inmediatamente: Reclamación 1. Uω = r cω 0 h (r) dr. Supongamos que queríamos comprar alguna fracción r /cΩ del tráfico que Ω está recibiendo. La curva de precio del clic dice que si ofrecemos h (r) en cada palabra clave (y, por lo tanto, cada consulta), obtenemos al menos el tráfico R, ya que esta oferta aseguraría que para todas las Q tal que b ∗ q ≤ h (r)Ganamos tantos clics como Ω. Tenga en cuenta que al ofertar h (r) en cada palabra clave, en realidad podemos obtener incluso más del tráfico R, ya que para las consultas Q donde B ∗ Q es mucho menor que H (R) podemos ganar más clics que Ω. Sin embargo, todos estos clics adicionales aún cuestan como máximo H (R) por clic. Por lo tanto, vemos que para cualquier r ∈ [0, Cω], si ofertó h (r) en cada palabra clave, recibimos al menos r tráfico a un gasto total de como máximo h (r) por clic. Tenga en cuenta que al aleatorizar entre ofertas cero y licitación H (R), podemos recibir exactamente el tráfico R a un gasto total de R · H (R). Resumimos esta discusión en el siguiente lema: Lemma 4. Para cualquier r ∈ [0, Cω], existe una estrategia de oferta única que aleatoriza entre la oferta H (R) y la licitación cero, y esta estrategia recibe exactamente el tráfico R con el gasto total a lo sumo R · H (R). Lemma 4 describe un paisaje como una función continua. Para nuestros límites inferiores, tendremos que demostrar que, dada cualquier función continua, existe un paisaje discreto que lo aproxima arbitrariamente bien. Lema 5. Para cualquier función C, u> 0 y no dre-decreting F: [0, C] → R + tal que R C 0 F (R) dr = U, y cualquier pequeño> 0, existe una instancia de optimización del presupuesto con el presupuesto U +, donde la solución óptima logra los clics C en el costo U +, y todas las estrategias de licitación uniformes son combinaciones convexas de estrategias de oferta única que logran exactamente R clics en el costo exactamente RF (R) al ofertar F (R) en todas las palabras clave. Prueba. Construya una instancia de la siguiente manera. Sea> 0 un pequeño número que luego definiremos en términos de. Defina R0 = 0, R1, R2 ,..., rm = c tal que ri - 1 <ri ≤ ri - 1 +, f (ri - 1) ≤ f (ri) ≤ f (ri - 1) +, y m ≤ (c + f (c))/.(Esto es posible eligiendo RIS espaciados por min (, f (ri) −f (ri - 1))) Ahora haga un qi de consulta para todo lo que i ∈ [m] con los postores ofertando h (ri), h (ri+1),..., H (RM) y CTRS α [1] = α [2] = · · · = α [m− i+1] = ri −ri - 1. El gráfico es una coincidencia con una palabra clave por consulta, por lo que podemos imaginar la solución óptima como oferta en consultas. La solución óptima siempre ofertará exactamente H (RI) en la consulta Qi, y si lo hiciera en todas las consultas, gastaría U: = PM I = 1 (RI - RI - 1) H (RI). Defina lo suficientemente pequeño como para que U = U +, que siempre es posible ya que U ≤ Z C 0 F (R) DR + MX I = 1 (RI - RI - 1) (H (RI) - H (RI - 1)) ≤U + 2 m ≤ u + (c + f (c)). Tenga en cuenta que las únicas ofertas posibles (es decir, todos los demás tienen los mismos resultados que uno de estos) son F (R0) ,..., F (RM), y la oferta de manera uniforme con F (RI) da como resultado pi J = 1 RI - RI - 1 = RI Haga clic en Costo H (RI) RI.4.2 A 1 2 -Algoritmo de acroximación usando Lemma 4 Ahora podemos demostrar que existe una estrategia uniforme de oferta única que es 1 2 -Optimal. Además de ser un resultado interesante en su derecho propio, también sirve como un calentamiento para nuestro resultado principal. Teorema 6. Siempre existe una estrategia uniforme de oferta única que es 1 2 -óptima. Además, para cualquier> 0 existe una instancia para la cual todas las estrategias de oferta única son como máximo (1 2 +) óptimas.45 Prueba. Aplicando el lema 4 con r = cω/2, vemos que existe una estrategia que logra el tráfico CΩ/2 con gasto CΩ/2 · H (CΩ/2). Ahora, utilizando el hecho de que H es una función no decreciente combinada con la reivindicación 1, tenemos (CΩ/2) H (Cω/2) ≤ Z CΩ Cω/2 H (R) DR ≤ Z Cω 0 H (R)DR = Uω, (4) que muestra que gastamos como máximo Uω. Llegamos a la conclusión de que hay una estrategia óptima de una sola empresa aleatoria entre la oferta CΩ/2 y cero. Para la segunda parte del teorema, construimos un ejemplo ajustado usando dos consultas q = {x, y}, dos palabras clave k = {u, v} y bordes e = {(u, x), (v, y)}. Fije algunos α donde 0 <α ≤ 1, y fije algunos muy pequeños> 0. La consulta X tiene dos posiciones, con ofertas de Bx 1 = 1/α y Bx 2 =, y con tasas idénticas de clics αx [1] = αx [2] = α.La consulta y tiene una posición, con una oferta por 1 = 1/α y una tasa de clics de αy [1] = α. El presupuesto es u = 1 + α. La solución óptima es ofertar por u (y, por lo tanto, x) y ofertar 1/α en V (y, por lo tanto, y), ambos con probabilidad 1. Esto logra un total de 2α clics y gasta el presupuesto exactamente. Las únicas ofertas útiles son 0 y 1/α, ya que para ambas consultas, todas las otras ofertas son idénticas en términos de costo y clics a uno de esos tres. Cualquier solución de oferta única que use como su oferta distinta de cero se obtiene como máximo los clics α. La oferta 1/α en ambas palabras clave da como resultado clics 2α y costo total 2. Por lo tanto, dado que el presupuesto es u = 1 + α <2, una solución de oferta única que usa 1/α puede poner peso como máximo (1+ α)/2 en la oferta 1/α. Esto resulta en la mayoría de los clics α (1 + α). Esto se puede hacer arbitrariamente cerca de α bajando.4.3 ALGORITMO DE APROMACIÓN A (1-1 E) La clave para la prueba del Teorema 3 es mostrar que hay una distribución sobre las estrategias de la licitación única del Lemma 4 que obtiene al menos (1-1 E) los clics de CΩ. Para descubrir la mejor distribución, escribimos un programa lineal que modela el comportamiento de un jugador que está tratando de maximizar los clics y un adversario que está tratando de crear una entrada que sea difícil para el jugador. Luego, utilizando la dualidad de programación lineal, pudimos obtener una estrategia óptima y una instancia ajustada. Después de resolver el LP numéricamente, también pudimos ver que hay una estrategia uniforme para el jugador que siempre obtiene (1 - 1 e) clic en CΩ;y luego de la solución pudieron adivinar fácilmente la distribución óptima. Esta metodología es similar a la utilizada en el trabajo en LPS de revelación de factores [8, 10].4.3.1 Un LP para la curva de precio de clic en el peor de los casos. Considere el problema de los adversarios de encontrar una curva de precio de clic para la cual ninguna estrategia de licitación uniforme puede lograr los clics αCΩ. Recuerde que por Lemma 1 podemos suponer que una estrategia uniforme aleatoriza entre dos ofertas U y V. También suponemos que la estrategia uniforme utiliza una combinación convexa de estrategias de Lemma 4, que podemos suponer con Lemma 5. Por lo tanto, para lograr los clics αCΩ, una estrategia uniforme debe aleatorizar entre las BID H (U) y H (V) donde U ≤ αCω y V ≥ αCΩ. Llame al conjunto de tales estrategias S. Dada una (u, v) ∈ S, las probabilidades necesarias para lograr los clics αCΩ se determinan fácilmente, y las denotamos por P1 (U, V) y P2 (U, V) respectivamente. Tenga en cuenta además que el anunciante está tratando de descubrir cuál de estas estrategias usar y, en última instancia, quiere calcular una distribución sobre estrategias uniformes. En el LP, en realidad calculará una distribución sobre pares de estrategias en S, que luego interpretaremos como una distribución sobre las estrategias. Usando este conjunto de estrategias uniformes como restricciones, podemos caracterizar un conjunto de curvas de precio de clic en el peor de los casos mediante las restricciones Z cΩ 0 H (r) dr ≤ u ∀ (u, v) ∈ S p1 (u, v) uh(u) + p2 (u, v) vh (v) ≥ u una curva h que satisface estas restricciones tiene la propiedad de que todas las estrategias uniformes que obtienen clics αCΩ gastan más que U. Discretición de este conjunto de desigualdades e impulsando la primera restricción a la primera restricciónLa función objetivo, obtenemos las siguientes variables sobre las variables HR que representa la curva: min x r∈ {0 ,, 2, ..., cω} · hr s.t.∀ (u, v) ∈ S, p1 (u, v) uhu + p2 (u, v) vhv ≥ u en este lp, s se define en el dominio discreto como s = {(u, v) ∈ {0,, 2 ,..., CΩ} 2: 0 ≤ u ≤ αCΩ ≤ v ≤ cω}. Resolviendo este LP para un α particular, si obtenemos un objetivo menos que U, sabemos (hasta cierta discretización) que existe una instancia de optimización del presupuesto que no puede ser aproximada mejor que α.(La instancia se construye como en la prueba del lema 5.) Una búsqueda binaria produce la α más pequeña donde el objetivo es exactamente U. Para obtener una estrategia para el anunciante, observamos lo dual, lo que restringe el objetivo de ser igual a U para obtener el politope de soluciones óptimas: x (u, v) ∈S wu, v = 1 ∀ (u, v =) ∈ S, x V: (u, v) ∈S p1 (u, v) · u · wu, v ≤ y x u: (u, v) ∈S p2 (u, v) · v · wu, v≤. Es sencillo mostrar que el segundo conjunto de restricciones es equivalente a lo siguiente: ∀h ∈ RcΩ/: x r hr = u, x (u, v) ∈S wu, v (p1 (u, v) · u ·Hu + P2 (U, V) · V · HV) ≤ U. Aquí, las variables pueden interpretarse como pesos en estrategias en S. Un punto en este Polyitope representa una combinación convexa sobre estrategias en S, con la propiedad que para cualquier curva de precio H, el costo de la estrategia mixta es como máximo U. Dado que todas las estrategias en S obtienen al menos los clics αCΩ, tenemos una estrategia que logra una acroximación α. Curiosamente, la equivalencia entre este Polyitope y el LP Dual anterior muestra que hay una mezcla sobre los valores r ∈ [0, C] que logra una apropiación α para cualquier curva h.Después de una búsqueda del α apropiado (que resultó ser 1 - 1 e), resolvimos estos dos LP y se les ocurrió las parcelas en la Figura 3, que revelan no solo la relación de aproximación correcta, sino también una imagen de lo peor-Distribución del caso y la estrategia de rendimiento de aproximación.9 De la PIC9 Los parámetros U y CΩ se pueden establecer arbitrariamente utilizando argumentos de escala.46 0 0 C/E C 0 0 C/E C Figura 3: La peor curva de precio de clics y (1-1/e)-Strategio de ofertas uniformes de uniforme, como se encuentra mediante programación lineal.Tures, pudimos adivinar rápidamente la estrategia óptima y el peor ejemplo de caso.4.3.2 Prueba del teorema 3 por Lemma 4, sabemos que para cada R ≤ Uω, hay una estrategia que puede obtener el tráfico R al costo R · H (R). Al mezclar estrategias para múltiples valores de R, construimos una estrategia uniforme que se garantiza que alcanzará al menos 1 - E - 1 = 0.63 fracción del tráfico Ωs y permanecerá dentro del presupuesto. Tenga en cuenta que la distribución final de la oferta resultante tendrá cierto peso en la oferta cero, ya que las estrategias de oferta única de Lemma 4 ponen algo de peso en la oferta cero. Considere la siguiente función de densidad de probabilidad en tales estrategias (también representadas en la Figura 3): g (r) = j 0 para r <cω/e, 1/r para r ≥ cΩ/e. Tenga en cuenta que r cΩ 0 g (r) dr = r cω cΩ/e 1 r dr = 1, es decir, g es una función de densidad de probabilidad. El tráfico logrado por nuestra estrategia es igual al tráfico = Z cΩ 0 g (r) · r dr = z cω cΩ/e 1 r · r dr = „1 - 1 e« cω. El gasto total esperado de esta estrategia es como máximo gasto = z cΩ 0 g (r) · rh (r) dr = z cω cΩ/e h (r) dr ≤ z cω 0 h (r) dr = uΩ. Por lo tanto, hemos demostrado que existe una estrategia de licitación uniforme que es (1-1 e) -ptimal. Ahora mostramos que ninguna estrategia de uniforme puede hacerlo mejor. Demostraremos que para todos> 0 existe una instancia para la cual todas las estrategias uniformes son como máximo (1-1 e +)-óptimas. Primero definimos la siguiente curva de precio de clic sobre el dominio [0, 1]: h (r) = 8 <: 0 para r <e-1 1 e-2 „e-1 r« para r ≥ e-1 notaque H no es dreible y no negativo. Dado que la curva está sobre el dominio [0, 1] corresponde a una instancia donde cω = 1. Tenga en cuenta también que R 1 0 H (R) DR = 1 E - 2 R 1 1/E E - 1 R DR = 1. Por lo tanto, esta curva corresponde a una instancia donde Uω = 1. Usando Lemma 5, construimos una instancia real en la que las mejores estrategias uniformes son combinaciones convexas de estrategias que ofertan h (u) y logran los clics y el costo de U · h (u). Supongamos en aras de la contradicción que existe una estrategia de licitación uniforme que logra el tráfico α> 1 -E -1 en este caso. Por Lemma 1 siempre hay una estrategia de licitación uniforme óptima de dos licivaciones y, por lo tanto, podemos suponer que la estrategia logrando clics α aleatoriza en dos ofertas. Para lograr los clics α, las dos ofertas deben estar en los valores H (U) y H (V) con probabilidades PU y PV de modo que PU + PV = 1, 0 ≤ U ≤ α ≤ V y PUU + PVV = α. Para calcular el gasto de esta estrategia, considere dos casos: si u = 0, entonces estamos ofertando h (v) con probabilidad PV = α/V. El gasto en este caso es: gasto = pv · v · h (v) = αH (v) = αE - α/V E - 2. Usando V ≥ α y luego α> 1 - 1 E obtenemos gastos ≥ αE - 1 E - 2> (1 - 1/E) E - 1 E - 2 = 1, contradiciendo la suposición. Volvemos al caso u> 0. Aquí tenemos PU = V - α V - U y PV = α -U V - U. Tenga en cuenta que para r ∈ (0, 1] tenemos h (r) ≥ 1 e - 2 (e - 1 r). Por lo tanto, gaste ≥ pu · uh (u) + pv · vh (v) = (v - α) (ue - 1) + (α - u) (ve - 1) (v - u) (e - 2) = αE- 1 E - 2> 1. La desigualdad final se deduce de α> 1 - 1 e. Por lo tanto, en ambos casos, el gasto de nuestra estrategia es superiores al presupuesto de 1. 4.4 Resultados experimentales realizamos simulaciones utilizando los datos disponibles en Google que resumimos brevemente aquí. Tomamos una gran campaña publicitaria y, utilizando el conjunto de palabras clave en la campaña, calculamos tres curvas diferentes (ver Figura 4) para tres estrategias de licitación diferentes. El eje X es el presupuesto (unidades eliminadas), y el eje Y es el número de clics obtenidos (nuevamente sin unidades) por las ofertas óptimas en cada estrategia respectiva. La oferta de consulta representa nuestro Ω (inalcanzable) límite superior, oferta en cada consulta de forma independiente. Las curvas de licitación uniformes representan los resultados de la aplicación de nuestro algoritmo: Detetinistic usa un solo nivel de oferta, mientras que el azar usa una distribución. Como referencia, incluimos el límite inferior de una fracción (e - 1)/e de la curva superior. Los datos demuestran claramente que la mejor oferta de uniforme individual obtiene casi todos los clics posibles en la práctica. Por supuesto, en un entorno más realista sin pleno conocimiento, no siempre es posible encontrar la mejor oferta, por lo que se requiere más investigación para que este enfoque sea útil. Sin embargo, solo saber que hay una oferta disponible para simplificar las versiones en línea del problema.5. Resultados de la dureza mediante una reducción de la cubierta del vértice podemos mostrar lo siguiente (prueba omitida): Teorema 7. La optimización del presupuesto es muy fuerte.47 Consulta licitación de ofertas Uniformes (aleatorizados) licitación uniforme (determinista) inferior límite 0 0 0.5 0.5 1 1 Clicks de presupuesto Figura 4: Un ejemplo con datos reales. Ahora supongamos que presentamos pesos en las consultas que indican el valor relativo de un clic de los diversos usuarios de búsqueda. Formalmente, tenemos pesos WQ para todas q ∈ Q y nuestro objetivo es maximizar el tráfico ponderado total dado un presupuesto. Llame a esto el problema de licitación de palabras clave ponderadas. Con esta generalización adicional, podemos mostrar dureza de aproximación a través de una reducción simple del problema de cobertura máxima, que se sabe que es (1-1/e) -Hard [6] (prueba omitida). Teorema 8. El problema de licitación de palabras clave ponderadas es difícil de aproximar dentro (1 - 1/e).6. Algoritmos exactos para gráficos laminar Si un gráfico tiene una estructura especial, a veces podemos resolver el problema de optimización del presupuesto exactamente. Tenga en cuenta que el algoritmo de mochila en la Sección 2 resuelve el problema para el caso cuando el gráfico es una simple coincidencia. Aquí generalizamos esto al caso cuando el gráfico tiene una estructura laminar, que nos permitirá imponer un orden (parcial) en los posibles valores de oferta y, por lo tanto, dar un algoritmo pseudopolinomio a través de la programación dinámica. Primero mostramos que para resolver el problema de optimización del presupuesto (para gráficos generales) de manera óptima en el tiempo pseudopolinomial, es suficiente para proporcionar un algoritmo que resuelva el caso determinista. La prueba (omitida) utiliza ideas similares a la observación 1 y el lema 1. Lema 9. Que yo sea un aporte del problema de optimización del presupuesto y supongamos que encontramos la solución determinista óptima para cada presupuesto posible U ≤ U. Entonces podemos encontrar la solución óptima en el tiempo o (u log u). Una colección S de N Sets S1 ,..., S2 es laminar si, para dos conjuntos SI y SJ, si SI ∩ SJ = ∅ entonces SI ⊆ SJ o SJ ⊆ SI. Dado un gráfico de interacción de palabras clave G, asociamos un conjunto de consultas vecinas qk = {q: (k, q) ∈ E} con cada palabra clave k.Si esta colección de conjuntos si es laminar, decimos que el gráfico tiene la propiedad laminar. Tenga en cuenta que un gráfico de interacción laminar se caería naturalmente como consecuencia de diseñar un conjunto de palabras clave jerárquicas (por ejemplo, zapatos, zapatos de alta resistencia, zapatos atléticos). Llamamos a una solución determinista si consiste en un vector de oferta, en lugar de una distribución general sobre los vectores de oferta. El siguiente lema será útil para dar una estructura a la solución óptima y permitirá una programación dinámica. Lema 10. Para las palabras clave i, j ∈ K, si qi ⊆ qj, entonces existe una solución determinista óptima al problema de optimización del presupuesto con AI ≥ AJ. Podemos ver el orden laminar como un árbol con la palabra clave J como padre de la palabra clave I si QJ es el conjunto mínimo que contiene Qi. En este caso decimos que J es hijo de i. Dada una palabra clave J con C Children i1 ,..., IC, ahora necesitamos enumerar sobre todas las formas de asignar el presupuesto entre los niños y también en todas las posibles ofertas mínimas para los niños. Una complicación es que un nodo puede tener muchos hijos y, por lo tanto, un término de UC ni siquiera sería pseudopolinomio. Podemos resolver este problema demostrando que, dado cualquier orden laminar, hay una equivalente en la que cada palabra clave tiene como máximo 2 niños. Lema 11. Deje que G sea un gráfico con la propiedad laminar. Existe otro gráfico G con la misma solución óptima al problema de optimización del presupuesto, donde cada nodo tiene como máximo dos niños en el pedido laminar. Además, G tiene como máximo el doble de nodos que G. Dado un gráfico con como máximo dos niños por nodo, definimos que F [i, B, U] sea el número máximo de clics que se pueden lograr al menos B en cada uno de cada uno de los.Palabras clave J S.T. QJ ⊆ Qi (y exactamente B en la palabra clave I) mientras se gasta en la mayoría de los Estados Unidos. Para esta definición, usamos z (b, u) para denotar un conjunto de ofertas y presupuestos permitidos sobre niños: z (b, u) = {b, b, u, u: b ≥ b, u ≤ u, b ≥ b, U ≤ u, u + u ≤ u} Dada una palabra clave I y una oferta ai, calcule un gasto incremental y el tráfico asociado con la oferta ai en la palabra clave I, es decir ˆt (i, ai) = x q∈Qi \\ qi−1 Clicksq (ai) y ˆs (i, ai) = x q∈Qi \\ qi - 1 costq (ai). Ahora definimos f [i, b, u] como max b, b, u, u ∈Z (b, u) j f [j, b, u] + f [j, b, u] + ˆt (i,b) ff (5) if (ˆs (i, b) ≤ u - u - u e i> 0), y f [i, b, u] = 0 de lo contrario. Lema 12. Si el gráfico G tiene la propiedad laminar, entonces, después de aplicar Lemma 11, la recurrencia de programación dinámica en (5) encuentra una solución determinista óptima al problema de optimización del presupuesto exactamente en el tiempo O (B3 U3 N). Además, podemos aplicar el Lema 9 para calcular la solución óptima (aleatorizada). Observe que en el programa dinámico, ya hemos resuelto la instancia para cada presupuesto u ≤ u, por lo que podemos encontrar la solución aleatoria sin sobrecarga asintótica adicional.48 LEMMA 13. Si el gráfico G tiene la propiedad laminar, entonces, al aplicar Lemma 11, la recurrencia de programación dinámica en (5) y Lemma 9, podemos encontrar una solución óptima al problema de optimización del presupuesto en el tiempo O (B3 U3 N). Los límites en esta sección hacen suposiciones pesimistas sobre tener que probar cada presupuesto y cada nivel. Para muchos problemas, solo necesita elegir entre un conjunto discreto de niveles de oferta (por ejemplo, múltiplos de un centavo). Hacerlo produce la mejora obvia en los límites.7. La optimización de ofertas bajo VCG, la subasta GSP no es la única subasta posible para la búsqueda patrocinada. De hecho, la subasta VCG y las variantes [14, 4, 7, 1] ofrecen alternativas con propiedades teóricas de juego convincentes. En esta sección argumentamos que el problema de optimización del presupuesto es fácil bajo la subasta VCG. Para una definición completa de VCG y su aplicación a la búsqueda patrocinada, remitimos al lector a [1, 2, 5]. En aras del problema de optimización del presupuesto, podemos definir VCG simplemente redefiniendo CostQ (B) (Reemplazo de la ecuación (2)): Costq (B) = P - 1 X J = I (α [J] - α [J + 1]) · B [j] donde i = pos (b). La observación 1 todavía se mantiene, y podemos construir un paisaje como antes, donde cada punto de paisaje corresponde a una oferta particular B [i]. Afirmamos que en la subasta VCG, los paisajes son convexos. Para ver esto, considere dos posiciones consecutivas I, i + 1. La pendiente del segmento de línea entre los puntos correspondientes a esas dos posiciones es el costo (b [i]) - costo (b [i + 1]) clics (b [i]) - clics (b [i + 1]) = ((α [i] - α [i + 1]) · b [i] α [i] - α [i + 1] = b [i]. Dado que b [i] ≥ b [i + 1], las pendientes de las piezas del paisaje disminuyen, y obtenemos que la curva es convexa. Ahora considere ejecutar el algoritmo descrito en la Sección 2.1.4 para encontrar las ofertas óptimas para un conjunto de consultas. En este algoritmo tomamos todas las piezas de las curvas de paisaje, las clasificamos por CPC incremental, luego tomamos un prefijo de esas piezas, dándonos ofertas para cada una de las consultas. Pero, la ecuación anterior muestra que cada pieza tiene su CPC incremental igual a la oferta que la logra;Por lo tanto, en el caso de VCG, las piezas también se clasifican por BID. Por lo tanto, podemos obtener cualquier prefijo de las piezas a través de una oferta uniforme en todas las palabras clave. Concluimos que la mejor oferta uniforme es una solución óptima para el problema de optimización del presupuesto.8. Observaciones finales Nuestro resultado algorítmico presenta una heurística intrigante en la práctica: ofertar un valor único B en todas las palabras clave;Al final del día, si el presupuesto está bajo giro, ajuste B para que sea más alto;Si el presupuesto es excesivo, ajuste B para que sea más bajo;más, mantenga b. Si el escenario no cambia de día a día, esta estrategia simple tendrá las mismas propiedades teóricas que nuestra estrategia de un año y, en la práctica, es probable que sea mucho mejor. Por supuesto, el escenario cambia, sin embargo, y por lo tanto, elaborar una estrategia de licitación estocástica sigue siendo una dirección abierta importante, explorada algo por [11, 13]. Otra generalización interesante es considerar pesos en los clics, que es una forma de modelar conversiones.(Una conversión corresponde a una acción por parte del usuario que hizo clic en el sitio del anunciante; por ejemplo, una venta o un registro de cuenta). Finalmente, hemos visto este sistema como un cuadro negro que devuelve los clics en función de BID, mientras que en realidad es un juego repetido complejo que involucra múltiples anunciantes. En [3], se demostró que cuando un conjunto de anunciantes usa una estrategia similar a la que sugerimos aquí, bajo una subasta de primer precio ligeramente modificada, el enfoque de precios es un equilibrio de mercado bien entendido. Agradecimientos Agradecemos a Rohit Rao, Zoya Svitkina y Adam Wildavsky por sus útiles discusiones.9. Referencias [1] G. Aggarwal, A. Goel y R. Motwani. Subastas veraces para palabras clave de búsqueda de precios. Conferencia ACM sobre Comercio Electrónico, 1-7, 2006. [2] G. Aggarwal, J. Feldman y S. Muthukrishnan ofertando a la cima: VCG y equilibrios de subastas basadas en posición Proc. Waoa, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain y M. Mahdian. Dinámica de optimización de ofertas en subastas de anuncios en línea. Proc. WWW 2007. [4] E. Clarke. Precio multiparte de bienes públicos. Public Choice, 11 (1): 17-33, 1971. [5] B. Edelman, M. Ostrovsky y M. Schwarz. Publicidad en Internet y la segunda subasta de precios generalizada: venta de miles de millones de dólares en palabras clave. Segundo taller sobre subastas de búsqueda patrocinadas, 2006. [6] U. Feige. Un umbral de ln n para aproximar la cubierta del conjunto.28º Simposio ACM sobre Teoría de la Computación, 1996, pp. 314-318.[7] T. Groves. Incentivos en equipos. Econometrica, 41 (4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri y V. Vazirani. Algoritmos de ubicación de la instalación codiciosa analizados con el ajuste dual con LP de revelación de factores. J. ACM, 50 (6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy. Documento interno, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani y V. Vazirani, AdWords y la correspondencia generalizada en línea. FOCS 2005. [11] S. Muthukrishnan, M. P´al y Z. Svitkina. Modelos estocásticos para la optimización del presupuesto en la publicidad basada en la búsqueda. Aparecer en el tercer taller sobre subastas de búsqueda patrocinadas, www 2007. [12] F. Preparata y M. Shamos. Geometría computacional: una introducción. Springer-Verlag, Nueva York, NY, 1985. [13] P. Rusmevichientong y D. Williamson. Un algoritmo adaptativo para seleccionar palabras clave rentables para los servicios de publicidad basados en la búsqueda Proc.7ª Conferencia ACM sobre Comercio Electrónico, 260 - 269, 2006. [14] W. Vickrey. Contrapeculación, subastas y licitaciones competitivas. Journal of Finance, 16 (1): 8-37, 1961. 49",
    "original_sentences": [
        "Budget Optimization in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an auction.",
        "While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the Internet company.",
        "In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
        "We model the entire process and study this budget optimization problem.",
        "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well.",
        "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
        "As our preliminary experiments show, such uniform strategies are likely to be practical.",
        "We also present inapproximability results, and optimal algorithms for variants of the budget optimization problem.",
        "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
        "INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
        "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
        "In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
        "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
        "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
        "It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied.",
        "Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc.",
        "The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers.",
        "The challenge from an advertisers point of view is to understand and interact with the auction mechanism.",
        "The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget.",
        "When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction.",
        "The advertiser whose ad appears pays the Internet search company if the user clicks on the ad.",
        "The focus in this paper is on how the advertisers bid.",
        "For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign.",
        "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks.",
        "The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations.",
        "Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively.",
        "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
        "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain.",
        "In effect the advertiser ends up competing with herself.",
        "As a result, the advertisers face a challenging optimization problem.",
        "The focus of this paper is to solve this optimization problem. 1.1 The Budget Optimization Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
        "A given advertiser sees the state of the auctions for searchbased advertising as follows.",
        "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
        "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section.",
        "There is a bipartite graph G on the two vertex sets representing K and Q.",
        "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget optimization problem is as follows.",
        "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the keyword bids in the neighborhood of q.",
        "While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
        "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
        "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
        "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
        "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget optimization problem.",
        "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
        "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget optimization problem.",
        "The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
        "We show that this approximation ratio is tight for uniform strategies.",
        "We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.)",
        "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
        "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
        "After all, the optimum can configure arbitrary bids on each of the keywords.",
        "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
        "So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum.",
        "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
        "We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
        "By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
        "We have conducted simulations using real auction data from Google.",
        "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
        "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
        "MODELING A KEYWORD AUCTION We describe an auction from an advertisers point of view.",
        "An advertiser bids on a keyword, which we can think of as a word or set of words.",
        "Users of the search engine submit queries.",
        "If the query matches a keyword that has been bid on by an advertiser, then the advertiser is entered into an auction for the available ad slots on the results page.",
        "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single bid for a keyword that remains in effect for a period of time, say one day.",
        "The keyword could match many different user queries throughout the day.",
        "Each user query might have a different set of advertisers competing for clicks.",
        "The advertiser could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
        "The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget.",
        "We now formalize a model of keyword bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query.",
        "In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9].",
        "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
        "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
        "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
        "The ctr can be measured empirically using past history.",
        "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
        "In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a bid on a keyword that matches the users query.",
        "We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each keyword.",
        "We assume that the auction is a generalized second price (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of bid, and each advertiser is assigned a price equal to the amount bid by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
        "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction.",
        "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
        "Since the auction is a generalized second price auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
        "Suppose that we bid b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction.",
        "In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
        "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7].",
        "Each auction mechanism will result in a different sort of optimization problem.",
        "In the conclusion we point out that for the VCG auction, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
        "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
        "We use R+ to denote the nonnegative reals.",
        "Observation 1.",
        "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
        "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
        "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
        "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
        "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
        "For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
        "Here we graph clicks as a function of cost.",
        "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
        "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
        "This condition is slightly weaker than concavity.",
        "Suppose we would like to solve the budget optimization problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget.",
        "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
        "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00.",
        "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
        "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
        "Let B be a distribution on bids b ∈ R+.",
        "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
        "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
        "This is represented in Figure 1 by the dashed line.",
        "To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
        "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
        "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
        "Summarizing, Lemma 1.",
        "If an advertiser is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
        "There is one subtlety in this formulation.",
        "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
        "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
        "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
        "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
        "Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
        "We want to bid on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
        "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
        "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another.",
        "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
        "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
        "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
        "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
        "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a bid on two different keywords that match the same query, this conflict must be resolved somehow.",
        "For example, if an advertiser has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
        "The search engine specifies, in advance, a rule for resolution based on the query the keyword and the bid.",
        "A natural rule is to take the keyword with the highest bid, which we adopt here, but our results apply to other resolution rules.",
        "We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
        "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
        "An edge (k, q) ∈ E means that keyword k matches query q.",
        "The advertiser can control their individual keyword bid vector a ∈ R |K| + specifying a bid ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
        "Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak.",
        "By submitting a bid vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword.",
        "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over bid vectors a ∈ R |K| + .",
        "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget Optimization Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
        "Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
        "We conclude this section with a small example to illustrate some feature of the budget optimization problem.",
        "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
        "Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1.",
        "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must bid at least $1 on u.",
        "However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective bid is $1 on both x and y.",
        "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
        "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget Optimization problem in its full generality is difficult.",
        "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors.",
        "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
        "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
        "We define a uniform bidding strategy to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
        "In other words, each vector in the distribution bids the same value on every keyword.",
        "Uniform strategies have several advantages.",
        "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
        "Thus, they are effective in the face of limited or noisy information about the keyword interaction graph.",
        "Second, uniform strategies are also independent of the priority rule being used.",
        "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
        "We now show that we can compute the best uniform strategy efficiently.",
        "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
        "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
        "We can index the points in I as b1, . . . , bN in increasing order.",
        "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
        "For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape.",
        "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
        "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
        "The resulting strategy is the convex combination of two points on the aggregate landscape.",
        "Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors.",
        "We have shown Lemma 2.",
        "Given an instance of Budget Optimization in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
        "Furthermore, this strategy will always be a two-bid strategy.",
        "Putting these ideas together, we get an O(N log N)-time algorithm for Budget Optimization, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
        "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
        "Find the convex hull of the points in the aggregate landscape. 3.",
        "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
        "Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β.",
        "We will also consider a special case of two-bid strategies.",
        "A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
        "A single-bid strategy is even easier to implement in practice than a two-bid strategy.",
        "For example, the search engines often allow advertisers to set a maximum daily budget.",
        "In this case, the advertiser would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
        "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
        "The best single-bid strategy can also be computed easily from the aggregate landscape.",
        "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
        "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
        "In section we prove that there is always a good uniform strategy: Theorem 3.",
        "There always exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
        "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
        "We introduce the notion of a click-price curve, which is central to our analysis.",
        "This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape.",
        "Consider an adversarial bidder Ω with the power to bid independently on each query.",
        "Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords.",
        "Suppose this strategy bids b∗ q for each query q.",
        "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
        "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
        "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
        "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
        "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
        "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
        "Note that the area of each step is costq(b∗ q ).",
        "The following claim follows immediately: Claim 1.",
        "UΩ = R CΩ 0 h(r)dr.",
        "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
        "The click-price curve says that if we bid h(r ) on every keyword (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
        "Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
        "However, all of these extra clicks still cost at most h(r ) per click.",
        "Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click.",
        "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
        "We summarize this discussion in the following lemma: Lemma 4.",
        "For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
        "Lemma 4 describes a landscape as a continuous function.",
        "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
        "Lemma 5.",
        "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget Optimization with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
        "Proof.",
        "Construct an instance as follows.",
        "Let > 0 be a small number that we will later define in terms of .",
        "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
        "The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries.",
        "The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
        "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
        "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal.",
        "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
        "Theorem 6.",
        "There always exists a uniform single-bid strategy that is 1 2 -optimal.",
        "Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof.",
        "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
        "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
        "We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero.",
        "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
        "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
        "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α.",
        "The budget is U = 1 + α.",
        "The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1.",
        "This achieves a total of 2α clicks and spends the budget exactly.",
        "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
        "Any single-bid solution that uses as its non-zero bid gets at most α clicks.",
        "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
        "Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid.",
        "This results in at most α(1 + α) clicks.",
        "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
        "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
        "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
        "After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
        "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve.",
        "Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks.",
        "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
        "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
        "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
        "Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
        "In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
        "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
        "Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget Optimization exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
        "A binary search yields the smallest such α where the objective is exactly U.",
        "To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
        "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
        "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
        "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
        "Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
        "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
        "Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
        "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
        "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
        "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
        "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
        "Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
        "We now show that no uniform strategy can do better.",
        "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
        "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
        "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
        "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
        "Thus, this curve corresponds to an instance where UΩ = 1.",
        "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost.",
        "Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance.",
        "By Lemma 1 there is always a two-bid optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids.",
        "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
        "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
        "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
        "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
        "We turn to the case u > 0.",
        "Here we have pu = v−α v−u and pv = α−u v−u .",
        "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
        "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
        "The final inequality follows from α > 1 − 1 e .",
        "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
        "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
        "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy.",
        "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
        "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution.",
        "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
        "The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice.",
        "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful.",
        "However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5.",
        "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
        "Budget Optimization is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
        "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
        "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
        "Call this the Weighted Keyword Bidding problem.",
        "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
        "Theorem 8.",
        "The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6.",
        "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget optimization problem exactly.",
        "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
        "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
        "We first show that to solve the Budget Optimization problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
        "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
        "Lemma 9.",
        "Let I be an input to the Budget Optimization problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
        "Then we can find the optimal solution in time O(U log U).",
        "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
        "Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property.",
        "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes).",
        "We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors.",
        "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
        "Lemma 10.",
        "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget Optimization problem with ai ≥ aj.",
        "We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi.",
        "In this case we say that j is a child of i.",
        "Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
        "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
        "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children.",
        "Lemma 11.",
        "Let G be a graph with the laminar property.",
        "There exists another graph G with the same optimal solution to the Budget Optimization problem, where each node has at most two children in the laminar ordering.",
        "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
        "Qj ⊆ Qi (and exactly b on keyword i) while spending at most U.",
        "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a bid ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
        "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
        "Lemma 12.",
        "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget Optimization problem exactly in O(B3 U3 n) time.",
        "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
        "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
        "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget Optimization problem in O(B3 U3 n) time.",
        "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
        "For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent).",
        "Doing so yields the obvious improvement in the bounds. 7.",
        "BID OPTIMIZATION UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search.",
        "Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
        "In this section we argue that the budget optimization problem is easy under the VCG auction.",
        "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
        "For the sake of the budget optimization problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
        "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i].",
        "We claim that in the VCG auction, the landscapes are convex.",
        "To see this, consider two consecutive positions i,i + 1.",
        "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
        "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
        "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
        "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
        "But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid.",
        "Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords.",
        "We conclude that the best uniform bid is an optimal solution to the budget optimization problem. 8.",
        "CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
        "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better.",
        "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
        "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.)",
        "Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers.",
        "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium.",
        "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
        "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
        "Truthful auctions for pricing search keywords.",
        "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
        "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
        "Dynamics of bid optimization in online advertisement auctions.",
        "Proc.",
        "WWW 2007. [4] E. Clarke.",
        "Multipart pricing of public goods.",
        "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
        "Internet Advertising and the Generalized Second Price Auction: Selling Billions of Dollars Worth of Keywords.",
        "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
        "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
        "Incentives in teams.",
        "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
        "Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP.",
        "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
        "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
        "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
        "Stochastic models for budget optimization in search-based advertising.",
        "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
        "Computational Geometry: An Introduction.",
        "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
        "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
        "Counterspeculation, auctions and competitive-sealed tenders.",
        "Journal of Finance, 16(1):8-37, 1961. 49"
    ],
    "error_count": 0,
    "keys": {
        "budget optimization": {
            "translated_key": "optimización del presupuesto",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>budget optimization</br> in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an auction.",
                "While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the Internet company.",
                "In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
                "We model the entire process and study this <br>budget optimization</br> problem.",
                "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well.",
                "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
                "As our preliminary experiments show, such uniform strategies are likely to be practical.",
                "We also present inapproximability results, and optimal algorithms for variants of the <br>budget optimization</br> problem.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
                "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
                "In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
                "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
                "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
                "It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied.",
                "Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc.",
                "The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers.",
                "The challenge from an advertisers point of view is to understand and interact with the auction mechanism.",
                "The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget.",
                "When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction.",
                "The advertiser whose ad appears pays the Internet search company if the user clicks on the ad.",
                "The focus in this paper is on how the advertisers bid.",
                "For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign.",
                "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks.",
                "The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations.",
                "Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively.",
                "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
                "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain.",
                "In effect the advertiser ends up competing with herself.",
                "As a result, the advertisers face a challenging optimization problem.",
                "The focus of this paper is to solve this optimization problem. 1.1 The <br>budget optimization</br> Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
                "A given advertiser sees the state of the auctions for searchbased advertising as follows.",
                "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
                "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section.",
                "There is a bipartite graph G on the two vertex sets representing K and Q.",
                "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The <br>budget optimization</br> problem is as follows.",
                "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the keyword bids in the neighborhood of q.",
                "While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
                "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
                "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
                "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
                "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the <br>budget optimization</br> problem.",
                "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
                "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the <br>budget optimization</br> problem.",
                "The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
                "We show that this approximation ratio is tight for uniform strategies.",
                "We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.)",
                "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
                "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
                "After all, the optimum can configure arbitrary bids on each of the keywords.",
                "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
                "So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum.",
                "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
                "We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
                "By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
                "We have conducted simulations using real auction data from Google.",
                "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
                "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
                "MODELING A KEYWORD AUCTION We describe an auction from an advertisers point of view.",
                "An advertiser bids on a keyword, which we can think of as a word or set of words.",
                "Users of the search engine submit queries.",
                "If the query matches a keyword that has been bid on by an advertiser, then the advertiser is entered into an auction for the available ad slots on the results page.",
                "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single bid for a keyword that remains in effect for a period of time, say one day.",
                "The keyword could match many different user queries throughout the day.",
                "Each user query might have a different set of advertisers competing for clicks.",
                "The advertiser could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
                "The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget.",
                "We now formalize a model of keyword bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query.",
                "In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9].",
                "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
                "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
                "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
                "The ctr can be measured empirically using past history.",
                "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
                "In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a bid on a keyword that matches the users query.",
                "We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each keyword.",
                "We assume that the auction is a generalized second price (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of bid, and each advertiser is assigned a price equal to the amount bid by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
                "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction.",
                "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
                "Since the auction is a generalized second price auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
                "Suppose that we bid b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction.",
                "In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
                "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7].",
                "Each auction mechanism will result in a different sort of optimization problem.",
                "In the conclusion we point out that for the VCG auction, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
                "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
                "We use R+ to denote the nonnegative reals.",
                "Observation 1.",
                "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
                "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
                "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
                "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
                "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
                "For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
                "Here we graph clicks as a function of cost.",
                "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
                "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
                "This condition is slightly weaker than concavity.",
                "Suppose we would like to solve the <br>budget optimization</br> problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget.",
                "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
                "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00.",
                "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
                "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
                "Let B be a distribution on bids b ∈ R+.",
                "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
                "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
                "This is represented in Figure 1 by the dashed line.",
                "To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
                "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
                "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
                "Summarizing, Lemma 1.",
                "If an advertiser is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
                "There is one subtlety in this formulation.",
                "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
                "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
                "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
                "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
                "Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
                "We want to bid on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
                "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
                "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another.",
                "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
                "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
                "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
                "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
                "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a bid on two different keywords that match the same query, this conflict must be resolved somehow.",
                "For example, if an advertiser has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
                "The search engine specifies, in advance, a rule for resolution based on the query the keyword and the bid.",
                "A natural rule is to take the keyword with the highest bid, which we adopt here, but our results apply to other resolution rules.",
                "We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
                "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
                "An edge (k, q) ∈ E means that keyword k matches query q.",
                "The advertiser can control their individual keyword bid vector a ∈ R |K| + specifying a bid ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
                "Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak.",
                "By submitting a bid vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword.",
                "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over bid vectors a ∈ R |K| + .",
                "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: <br>budget optimization</br> Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
                "Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
                "We conclude this section with a small example to illustrate some feature of the <br>budget optimization</br> problem.",
                "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
                "Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1.",
                "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must bid at least $1 on u.",
                "However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective bid is $1 on both x and y.",
                "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
                "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the <br>budget optimization</br> problem in its full generality is difficult.",
                "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors.",
                "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
                "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
                "We define a uniform bidding strategy to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
                "In other words, each vector in the distribution bids the same value on every keyword.",
                "Uniform strategies have several advantages.",
                "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
                "Thus, they are effective in the face of limited or noisy information about the keyword interaction graph.",
                "Second, uniform strategies are also independent of the priority rule being used.",
                "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
                "We now show that we can compute the best uniform strategy efficiently.",
                "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
                "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
                "We can index the points in I as b1, . . . , bN in increasing order.",
                "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
                "For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape.",
                "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
                "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
                "The resulting strategy is the convex combination of two points on the aggregate landscape.",
                "Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors.",
                "We have shown Lemma 2.",
                "Given an instance of <br>budget optimization</br> in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
                "Furthermore, this strategy will always be a two-bid strategy.",
                "Putting these ideas together, we get an O(N log N)-time algorithm for <br>budget optimization</br>, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
                "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
                "Find the convex hull of the points in the aggregate landscape. 3.",
                "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
                "Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β.",
                "We will also consider a special case of two-bid strategies.",
                "A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
                "A single-bid strategy is even easier to implement in practice than a two-bid strategy.",
                "For example, the search engines often allow advertisers to set a maximum daily budget.",
                "In this case, the advertiser would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
                "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
                "The best single-bid strategy can also be computed easily from the aggregate landscape.",
                "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
                "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
                "In section we prove that there is always a good uniform strategy: Theorem 3.",
                "There always exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "We introduce the notion of a click-price curve, which is central to our analysis.",
                "This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape.",
                "Consider an adversarial bidder Ω with the power to bid independently on each query.",
                "Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords.",
                "Suppose this strategy bids b∗ q for each query q.",
                "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
                "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
                "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
                "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
                "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
                "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
                "Note that the area of each step is costq(b∗ q ).",
                "The following claim follows immediately: Claim 1.",
                "UΩ = R CΩ 0 h(r)dr.",
                "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
                "The click-price curve says that if we bid h(r ) on every keyword (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
                "Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
                "However, all of these extra clicks still cost at most h(r ) per click.",
                "Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click.",
                "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
                "We summarize this discussion in the following lemma: Lemma 4.",
                "For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
                "Lemma 4 describes a landscape as a continuous function.",
                "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
                "Lemma 5.",
                "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of <br>budget optimization</br> with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
                "Proof.",
                "Construct an instance as follows.",
                "Let > 0 be a small number that we will later define in terms of .",
                "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
                "The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries.",
                "The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
                "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
                "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal.",
                "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
                "Theorem 6.",
                "There always exists a uniform single-bid strategy that is 1 2 -optimal.",
                "Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof.",
                "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
                "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
                "We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero.",
                "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
                "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
                "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α.",
                "The budget is U = 1 + α.",
                "The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1.",
                "This achieves a total of 2α clicks and spends the budget exactly.",
                "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
                "Any single-bid solution that uses as its non-zero bid gets at most α clicks.",
                "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
                "Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid.",
                "This results in at most α(1 + α) clicks.",
                "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
                "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
                "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
                "After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
                "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve.",
                "Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks.",
                "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
                "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
                "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
                "Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
                "In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
                "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
                "Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of <br>budget optimization</br> exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
                "A binary search yields the smallest such α where the objective is exactly U.",
                "To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
                "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
                "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
                "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
                "Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
                "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
                "Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
                "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
                "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
                "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
                "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
                "Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "We now show that no uniform strategy can do better.",
                "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
                "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
                "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
                "Thus, this curve corresponds to an instance where UΩ = 1.",
                "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost.",
                "Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance.",
                "By Lemma 1 there is always a two-bid optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids.",
                "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
                "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
                "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
                "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
                "We turn to the case u > 0.",
                "Here we have pu = v−α v−u and pv = α−u v−u .",
                "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
                "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
                "The final inequality follows from α > 1 − 1 e .",
                "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
                "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
                "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy.",
                "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
                "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution.",
                "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
                "The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice.",
                "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful.",
                "However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5.",
                "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
                "<br>budget optimization</br> is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
                "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
                "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
                "Call this the Weighted Keyword Bidding problem.",
                "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
                "Theorem 8.",
                "The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6.",
                "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the <br>budget optimization</br> problem exactly.",
                "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
                "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
                "We first show that to solve the <br>budget optimization</br> problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
                "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
                "Lemma 9.",
                "Let I be an input to the <br>budget optimization</br> problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
                "Then we can find the optimal solution in time O(U log U).",
                "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
                "Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property.",
                "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes).",
                "We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors.",
                "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
                "Lemma 10.",
                "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the <br>budget optimization</br> problem with ai ≥ aj.",
                "We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi.",
                "In this case we say that j is a child of i.",
                "Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
                "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
                "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children.",
                "Lemma 11.",
                "Let G be a graph with the laminar property.",
                "There exists another graph G with the same optimal solution to the <br>budget optimization</br> problem, where each node has at most two children in the laminar ordering.",
                "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
                "Qj ⊆ Qi (and exactly b on keyword i) while spending at most U.",
                "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a bid ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
                "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
                "Lemma 12.",
                "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the <br>budget optimization</br> problem exactly in O(B3 U3 n) time.",
                "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
                "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
                "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the <br>budget optimization</br> problem in O(B3 U3 n) time.",
                "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
                "For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent).",
                "Doing so yields the obvious improvement in the bounds. 7.",
                "BID OPTIMIZATION UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search.",
                "Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
                "In this section we argue that the <br>budget optimization</br> problem is easy under the VCG auction.",
                "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
                "For the sake of the <br>budget optimization</br> problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
                "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i].",
                "We claim that in the VCG auction, the landscapes are convex.",
                "To see this, consider two consecutive positions i,i + 1.",
                "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
                "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
                "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
                "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
                "But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid.",
                "Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords.",
                "We conclude that the best uniform bid is an optimal solution to the <br>budget optimization</br> problem. 8.",
                "CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
                "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better.",
                "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
                "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.)",
                "Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers.",
                "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium.",
                "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
                "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
                "Truthful auctions for pricing search keywords.",
                "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
                "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
                "Dynamics of bid optimization in online advertisement auctions.",
                "Proc.",
                "WWW 2007. [4] E. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
                "Internet Advertising and the Generalized Second Price Auction: Selling Billions of Dollars Worth of Keywords.",
                "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
                "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
                "Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP.",
                "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
                "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
                "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
                "Stochastic models for <br>budget optimization</br> in search-based advertising.",
                "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
                "Computational Geometry: An Introduction.",
                "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
                "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
                "Counterspeculation, auctions and competitive-sealed tenders.",
                "Journal of Finance, 16(1):8-37, 1961. 49"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "\"Optimización del presupuesto\" en las subastas publicitarias basadas en la búsqueda Jon Feldman Google, Inc. Nueva York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. Nueva York, NY Muthu@google.com Martin P´al Google, Inc. NuevoYork, NY mpal@google.com Cliff Stein ∗ Departamento de Ieor Columbia University Cliff@ieor.columbia.edu Abstract Internet Search Companies Venden espacios de anuncios basados en consultas de búsqueda de usuarios a través de una subasta.",
                "Modelamos todo el proceso y estudiamos este problema de \"optimización del presupuesto\".",
                "También presentamos resultados de inapropiación y algoritmos óptimos para las variantes del problema de \"optimización del presupuesto\".",
                "El enfoque de este documento es resolver este problema de optimización.1.1 El problema de la \"optimización del presupuesto\" presentamos una breve discusión y formulación del problema de optimización que enfrentan los anunciantes;Una descripción más detallada se encuentra en la Sección 2.",
                "Para cualquier consulta Q ∈ Q, los vecinos de Q en K son las palabras clave que se dice que coinciden con la consulta Q.2 El problema de \"optimización del presupuesto\" es la siguiente.",
                "Lo sorprendente es que la estrategia uniforme en realidad funciona bien, lo que demostraremos.2 Los detalles de la regla de correspondencia están determinados por la compañía de búsqueda de Internet;Aquí tratamos la función como arbitraria.1.2 Nuestros principales resultados y descripción técnica presentamos resultados positivos y negativos para el problema de \"optimización del presupuesto\".",
                "En los casos ligeramente más generales que la formulación anterior, donde los clics tienen pesos, el problema es inapropiado mejor que un factor de 1 - 1 e, a menos que p = np.• Damos un algoritmo (1-1/e)-APROMACIÓN para el problema de la \"optimización del presupuesto\".",
                "Supongamos que nos gustaría resolver el problema de la \"optimización del presupuesto\" para un solo panorama de consultas.5 A medida que aumentamos nuestra oferta de cero, nuestro aumento de costos y nuestro número esperado de clics aumenta, por lo que simplemente presentamos la oferta más alta de tal manera que permanecemosdentro de nuestro presupuesto.",
                "El gasto y el tráfico resultantes están dados por el gasto (a) = ea∼A [gasto (a)];tráfico (a) = ea∼A [tráfico (a)] Ahora podemos indicar el problema en su generalidad completa: \"Optimización del presupuesto\" Entrada: un presupuesto U, un gráfico de querer de palabras clave G = (k ∪ q, e),y paisajes (Costq (·), Clicksq (·)) para cada Q ∈ Q.",
                "Concluimos esta sección con un pequeño ejemplo para ilustrar alguna característica del problema de \"optimización del presupuesto\".",
                "Las estrategias de licitación uniformes como mostraremos en la Sección 5, es difícil resolver el problema de \"optimización del presupuesto\" en su generalidad completa.",
                "Dada una instancia de \"optimización del presupuesto\" en la que hay un total de n puntos en todos los paisajes, podemos encontrar la mejor estrategia de uniforme en el tiempo O (n log n).",
                "Entiendo estas ideas, obtenemos un algoritmo de tiempo O (n log n) para \"optimización del presupuesto\", donde n es el número total de puntos de paisaje (más tarde mostramos que este es un algoritmo de acroximación (1-1 e)): 1.",
                "Para cualquier función C, u> 0 y no dre-decrente F: [0, C] → R+ tal que R C 0 F (R) DR = U, y cualquier pequeño> 0, existe una instancia de \"Optimización del presupuesto\" con presupuestoU +, donde la solución óptima logra los clics C en el costo U +, y todas las estrategias de licitación uniformes son combinaciones convexas de estrategias de oferta única que logran exactamente los clics R al costo exactamente RF (R) al ofertar F (R) en todas las palabras clave.",
                "Resolviendo este LP para un α en particular, si obtenemos un objetivo menos que U, sabemos (hasta cierta discretización) que existe una instancia de \"optimización del presupuesto\" que no puede ser aproximada mejor que α.(La instancia se construye como en la prueba de Lemma 5.)",
                "La \"optimización del presupuesto\" es muy fuerte.47 Consulta licitación de ofertas Uniformes (aleatorizados) licitación uniforme (determinista) inferior límite 0 0 0.5 0.5 1 1 Clicks de presupuesto Figura 4: Un ejemplo con datos reales.",
                "Algoritmos exactos para gráficos laminar Si un gráfico tiene una estructura especial, a veces podemos resolver exactamente el problema de \"optimización del presupuesto\".",
                "Primero mostramos que para resolver el problema de \"optimización del presupuesto\" (para gráficos generales) de manera óptima en el tiempo pseudopolinomial, es suficiente para proporcionar un algoritmo que resuelva el caso determinista.",
                "Deje que yo sea un aporte al problema de la \"optimización del presupuesto\" y suponga que encontramos la solución determinista óptima para cada presupuesto posible U ≤ U.",
                "Para las palabras clave i, j ∈ K, si qi ⊆ qj, entonces existe una solución determinista óptima al problema de \"optimización del presupuesto\" con AI ≥ AJ.",
                "Existe otro gráfico G con la misma solución óptima al problema de \"optimización del presupuesto\", donde cada nodo tiene como máximo dos niños en el pedido laminar.",
                "Si el gráfico G tiene la propiedad laminar, entonces, después de aplicar Lemma 11, la recurrencia de programación dinámica en (5) encuentra una solución determinista óptima al problema de \"optimización del presupuesto\" exactamente en el tiempo O (B3 U3 N).",
                "Si el gráfico G tiene la propiedad laminar, entonces, al aplicar Lemma 11, la recurrencia de programación dinámica en (5) y Lemma 9, podemos encontrar una solución óptima al problema de \"optimización del presupuesto\" en el tiempo O (B3 U3 N).",
                "En esta sección argumentamos que el problema de \"optimización del presupuesto\" es fácil bajo la subasta VCG.",
                "En aras del problema de la \"optimización del presupuesto\", podemos definir VCG simplemente redefiniendo CostQ (B) (Reemplazo de la ecuación (2)): Costq (B) = P - 1 x J = I (α [J] - α [J+ 1]) · B [j] donde i = pos (b).",
                "Concluimos que la mejor oferta uniforme es una solución óptima al problema de \"optimización del presupuesto\".8.",
                "Modelos estocásticos para la \"optimización del presupuesto\" en la publicidad basada en la búsqueda."
            ],
            "translated_text": "",
            "candidates": [
                "optimización del presupuesto",
                "Optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "Optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "Optimización del presupuesto",
                "Optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "Optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "Optimización del presupuesto",
                "Optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "Optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "Optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto",
                "optimización del presupuesto"
            ],
            "error": []
        },
        "search-based advertising auction": {
            "translated_key": "Subasta publicitaria basada en la búsqueda",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Budget Optimization in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an auction.",
                "While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the Internet company.",
                "In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
                "We model the entire process and study this budget optimization problem.",
                "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well.",
                "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
                "As our preliminary experiments show, such uniform strategies are likely to be practical.",
                "We also present inapproximability results, and optimal algorithms for variants of the budget optimization problem.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
                "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
                "In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
                "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
                "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
                "It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied.",
                "Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc.",
                "The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers.",
                "The challenge from an advertisers point of view is to understand and interact with the auction mechanism.",
                "The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget.",
                "When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction.",
                "The advertiser whose ad appears pays the Internet search company if the user clicks on the ad.",
                "The focus in this paper is on how the advertisers bid.",
                "For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign.",
                "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks.",
                "The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations.",
                "Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively.",
                "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
                "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain.",
                "In effect the advertiser ends up competing with herself.",
                "As a result, the advertisers face a challenging optimization problem.",
                "The focus of this paper is to solve this optimization problem. 1.1 The Budget Optimization Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
                "A given advertiser sees the state of the auctions for searchbased advertising as follows.",
                "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
                "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section.",
                "There is a bipartite graph G on the two vertex sets representing K and Q.",
                "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget optimization problem is as follows.",
                "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the keyword bids in the neighborhood of q.",
                "While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
                "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
                "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
                "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
                "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget optimization problem.",
                "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
                "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget optimization problem.",
                "The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
                "We show that this approximation ratio is tight for uniform strategies.",
                "We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.)",
                "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
                "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
                "After all, the optimum can configure arbitrary bids on each of the keywords.",
                "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
                "So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum.",
                "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
                "We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
                "By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
                "We have conducted simulations using real auction data from Google.",
                "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
                "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
                "MODELING A KEYWORD AUCTION We describe an auction from an advertisers point of view.",
                "An advertiser bids on a keyword, which we can think of as a word or set of words.",
                "Users of the search engine submit queries.",
                "If the query matches a keyword that has been bid on by an advertiser, then the advertiser is entered into an auction for the available ad slots on the results page.",
                "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single bid for a keyword that remains in effect for a period of time, say one day.",
                "The keyword could match many different user queries throughout the day.",
                "Each user query might have a different set of advertisers competing for clicks.",
                "The advertiser could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
                "The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget.",
                "We now formalize a model of keyword bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query.",
                "In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9].",
                "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
                "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
                "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
                "The ctr can be measured empirically using past history.",
                "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
                "In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a bid on a keyword that matches the users query.",
                "We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each keyword.",
                "We assume that the auction is a generalized second price (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of bid, and each advertiser is assigned a price equal to the amount bid by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
                "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction.",
                "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
                "Since the auction is a generalized second price auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
                "Suppose that we bid b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction.",
                "In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
                "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7].",
                "Each auction mechanism will result in a different sort of optimization problem.",
                "In the conclusion we point out that for the VCG auction, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
                "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
                "We use R+ to denote the nonnegative reals.",
                "Observation 1.",
                "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
                "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
                "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
                "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
                "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
                "For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
                "Here we graph clicks as a function of cost.",
                "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
                "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
                "This condition is slightly weaker than concavity.",
                "Suppose we would like to solve the budget optimization problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget.",
                "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
                "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00.",
                "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
                "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
                "Let B be a distribution on bids b ∈ R+.",
                "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
                "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
                "This is represented in Figure 1 by the dashed line.",
                "To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
                "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
                "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
                "Summarizing, Lemma 1.",
                "If an advertiser is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
                "There is one subtlety in this formulation.",
                "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
                "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
                "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
                "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
                "Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
                "We want to bid on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
                "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
                "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another.",
                "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
                "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
                "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
                "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
                "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a bid on two different keywords that match the same query, this conflict must be resolved somehow.",
                "For example, if an advertiser has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
                "The search engine specifies, in advance, a rule for resolution based on the query the keyword and the bid.",
                "A natural rule is to take the keyword with the highest bid, which we adopt here, but our results apply to other resolution rules.",
                "We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
                "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
                "An edge (k, q) ∈ E means that keyword k matches query q.",
                "The advertiser can control their individual keyword bid vector a ∈ R |K| + specifying a bid ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
                "Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak.",
                "By submitting a bid vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword.",
                "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over bid vectors a ∈ R |K| + .",
                "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget Optimization Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
                "Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
                "We conclude this section with a small example to illustrate some feature of the budget optimization problem.",
                "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
                "Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1.",
                "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must bid at least $1 on u.",
                "However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective bid is $1 on both x and y.",
                "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
                "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget Optimization problem in its full generality is difficult.",
                "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors.",
                "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
                "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
                "We define a uniform bidding strategy to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
                "In other words, each vector in the distribution bids the same value on every keyword.",
                "Uniform strategies have several advantages.",
                "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
                "Thus, they are effective in the face of limited or noisy information about the keyword interaction graph.",
                "Second, uniform strategies are also independent of the priority rule being used.",
                "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
                "We now show that we can compute the best uniform strategy efficiently.",
                "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
                "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
                "We can index the points in I as b1, . . . , bN in increasing order.",
                "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
                "For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape.",
                "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
                "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
                "The resulting strategy is the convex combination of two points on the aggregate landscape.",
                "Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors.",
                "We have shown Lemma 2.",
                "Given an instance of Budget Optimization in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
                "Furthermore, this strategy will always be a two-bid strategy.",
                "Putting these ideas together, we get an O(N log N)-time algorithm for Budget Optimization, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
                "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
                "Find the convex hull of the points in the aggregate landscape. 3.",
                "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
                "Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β.",
                "We will also consider a special case of two-bid strategies.",
                "A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
                "A single-bid strategy is even easier to implement in practice than a two-bid strategy.",
                "For example, the search engines often allow advertisers to set a maximum daily budget.",
                "In this case, the advertiser would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
                "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
                "The best single-bid strategy can also be computed easily from the aggregate landscape.",
                "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
                "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
                "In section we prove that there is always a good uniform strategy: Theorem 3.",
                "There always exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "We introduce the notion of a click-price curve, which is central to our analysis.",
                "This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape.",
                "Consider an adversarial bidder Ω with the power to bid independently on each query.",
                "Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords.",
                "Suppose this strategy bids b∗ q for each query q.",
                "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
                "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
                "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
                "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
                "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
                "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
                "Note that the area of each step is costq(b∗ q ).",
                "The following claim follows immediately: Claim 1.",
                "UΩ = R CΩ 0 h(r)dr.",
                "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
                "The click-price curve says that if we bid h(r ) on every keyword (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
                "Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
                "However, all of these extra clicks still cost at most h(r ) per click.",
                "Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click.",
                "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
                "We summarize this discussion in the following lemma: Lemma 4.",
                "For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
                "Lemma 4 describes a landscape as a continuous function.",
                "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
                "Lemma 5.",
                "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget Optimization with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
                "Proof.",
                "Construct an instance as follows.",
                "Let > 0 be a small number that we will later define in terms of .",
                "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
                "The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries.",
                "The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
                "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
                "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal.",
                "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
                "Theorem 6.",
                "There always exists a uniform single-bid strategy that is 1 2 -optimal.",
                "Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof.",
                "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
                "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
                "We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero.",
                "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
                "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
                "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α.",
                "The budget is U = 1 + α.",
                "The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1.",
                "This achieves a total of 2α clicks and spends the budget exactly.",
                "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
                "Any single-bid solution that uses as its non-zero bid gets at most α clicks.",
                "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
                "Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid.",
                "This results in at most α(1 + α) clicks.",
                "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
                "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
                "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
                "After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
                "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve.",
                "Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks.",
                "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
                "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
                "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
                "Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
                "In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
                "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
                "Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget Optimization exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
                "A binary search yields the smallest such α where the objective is exactly U.",
                "To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
                "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
                "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
                "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
                "Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
                "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
                "Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
                "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
                "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
                "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
                "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
                "Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "We now show that no uniform strategy can do better.",
                "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
                "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
                "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
                "Thus, this curve corresponds to an instance where UΩ = 1.",
                "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost.",
                "Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance.",
                "By Lemma 1 there is always a two-bid optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids.",
                "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
                "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
                "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
                "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
                "We turn to the case u > 0.",
                "Here we have pu = v−α v−u and pv = α−u v−u .",
                "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
                "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
                "The final inequality follows from α > 1 − 1 e .",
                "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
                "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
                "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy.",
                "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
                "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution.",
                "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
                "The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice.",
                "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful.",
                "However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5.",
                "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
                "Budget Optimization is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
                "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
                "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
                "Call this the Weighted Keyword Bidding problem.",
                "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
                "Theorem 8.",
                "The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6.",
                "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget optimization problem exactly.",
                "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
                "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
                "We first show that to solve the Budget Optimization problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
                "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
                "Lemma 9.",
                "Let I be an input to the Budget Optimization problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
                "Then we can find the optimal solution in time O(U log U).",
                "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
                "Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property.",
                "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes).",
                "We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors.",
                "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
                "Lemma 10.",
                "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget Optimization problem with ai ≥ aj.",
                "We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi.",
                "In this case we say that j is a child of i.",
                "Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
                "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
                "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children.",
                "Lemma 11.",
                "Let G be a graph with the laminar property.",
                "There exists another graph G with the same optimal solution to the Budget Optimization problem, where each node has at most two children in the laminar ordering.",
                "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
                "Qj ⊆ Qi (and exactly b on keyword i) while spending at most U.",
                "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a bid ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
                "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
                "Lemma 12.",
                "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget Optimization problem exactly in O(B3 U3 n) time.",
                "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
                "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
                "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget Optimization problem in O(B3 U3 n) time.",
                "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
                "For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent).",
                "Doing so yields the obvious improvement in the bounds. 7.",
                "BID OPTIMIZATION UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search.",
                "Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
                "In this section we argue that the budget optimization problem is easy under the VCG auction.",
                "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
                "For the sake of the budget optimization problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
                "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i].",
                "We claim that in the VCG auction, the landscapes are convex.",
                "To see this, consider two consecutive positions i,i + 1.",
                "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
                "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
                "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
                "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
                "But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid.",
                "Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords.",
                "We conclude that the best uniform bid is an optimal solution to the budget optimization problem. 8.",
                "CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
                "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better.",
                "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
                "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.)",
                "Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers.",
                "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium.",
                "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
                "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
                "Truthful auctions for pricing search keywords.",
                "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
                "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
                "Dynamics of bid optimization in online advertisement auctions.",
                "Proc.",
                "WWW 2007. [4] E. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
                "Internet Advertising and the Generalized Second Price Auction: Selling Billions of Dollars Worth of Keywords.",
                "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
                "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
                "Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP.",
                "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
                "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
                "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
                "Stochastic models for budget optimization in search-based advertising.",
                "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
                "Computational Geometry: An Introduction.",
                "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
                "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
                "Counterspeculation, auctions and competitive-sealed tenders.",
                "Journal of Finance, 16(1):8-37, 1961. 49"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "internet": {
            "translated_key": "Internet",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Budget Optimization in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT <br>internet</br> search companies sell advertisement slots based on users search queries via an auction.",
                "While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the <br>internet</br> company.",
                "In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
                "We model the entire process and study this budget optimization problem.",
                "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well.",
                "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
                "As our preliminary experiments show, such uniform strategies are likely to be practical.",
                "We also present inapproximability results, and optimal algorithms for variants of the budget optimization problem.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Online search is now ubiquitous and <br>internet</br> search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
                "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
                "In contrast, <br>internet</br> search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
                "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
                "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
                "It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the <br>internet</br> search company) are adequately satisfied.",
                "Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc.",
                "The perspective in this paper is not of the <br>internet</br> search company that displays the advertisements, but rather of the advertisers.",
                "The challenge from an advertisers point of view is to understand and interact with the auction mechanism.",
                "The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget.",
                "When a user poses a search query, the <br>internet</br> search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction.",
                "The advertiser whose ad appears pays the <br>internet</br> search company if the user clicks on the ad.",
                "The focus in this paper is on how the advertisers bid.",
                "For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign.",
                "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the <br>internet</br> is to maximize the number of clicks.",
                "The <br>internet</br> search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations.",
                "<br>internet</br> search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively.",
                "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
                "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain.",
                "In effect the advertiser ends up competing with herself.",
                "As a result, the advertisers face a challenging optimization problem.",
                "The focus of this paper is to solve this optimization problem. 1.1 The Budget Optimization Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
                "A given advertiser sees the state of the auctions for searchbased advertising as follows.",
                "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
                "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section.",
                "There is a bipartite graph G on the two vertex sets representing K and Q.",
                "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget optimization problem is as follows.",
                "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the keyword bids in the neighborhood of q.",
                "While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
                "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
                "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
                "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
                "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the <br>internet</br> search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget optimization problem.",
                "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
                "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget optimization problem.",
                "The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
                "We show that this approximation ratio is tight for uniform strategies.",
                "We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.)",
                "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
                "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
                "After all, the optimum can configure arbitrary bids on each of the keywords.",
                "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
                "So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum.",
                "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
                "We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
                "By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
                "We have conducted simulations using real auction data from Google.",
                "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
                "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
                "MODELING A KEYWORD AUCTION We describe an auction from an advertisers point of view.",
                "An advertiser bids on a keyword, which we can think of as a word or set of words.",
                "Users of the search engine submit queries.",
                "If the query matches a keyword that has been bid on by an advertiser, then the advertiser is entered into an auction for the available ad slots on the results page.",
                "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single bid for a keyword that remains in effect for a period of time, say one day.",
                "The keyword could match many different user queries throughout the day.",
                "Each user query might have a different set of advertisers competing for clicks.",
                "The advertiser could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
                "The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget.",
                "We now formalize a model of keyword bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query.",
                "In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9].",
                "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
                "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
                "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
                "The ctr can be measured empirically using past history.",
                "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
                "In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a bid on a keyword that matches the users query.",
                "We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each keyword.",
                "We assume that the auction is a generalized second price (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of bid, and each advertiser is assigned a price equal to the amount bid by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
                "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction.",
                "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
                "Since the auction is a generalized second price auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
                "Suppose that we bid b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction.",
                "In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
                "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7].",
                "Each auction mechanism will result in a different sort of optimization problem.",
                "In the conclusion we point out that for the VCG auction, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
                "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
                "We use R+ to denote the nonnegative reals.",
                "Observation 1.",
                "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
                "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
                "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
                "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
                "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
                "For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
                "Here we graph clicks as a function of cost.",
                "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
                "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
                "This condition is slightly weaker than concavity.",
                "Suppose we would like to solve the budget optimization problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget.",
                "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
                "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00.",
                "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
                "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
                "Let B be a distribution on bids b ∈ R+.",
                "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
                "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
                "This is represented in Figure 1 by the dashed line.",
                "To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
                "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
                "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
                "Summarizing, Lemma 1.",
                "If an advertiser is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
                "There is one subtlety in this formulation.",
                "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
                "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
                "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
                "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
                "Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
                "We want to bid on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
                "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
                "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another.",
                "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
                "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
                "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
                "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
                "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a bid on two different keywords that match the same query, this conflict must be resolved somehow.",
                "For example, if an advertiser has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
                "The search engine specifies, in advance, a rule for resolution based on the query the keyword and the bid.",
                "A natural rule is to take the keyword with the highest bid, which we adopt here, but our results apply to other resolution rules.",
                "We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
                "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
                "An edge (k, q) ∈ E means that keyword k matches query q.",
                "The advertiser can control their individual keyword bid vector a ∈ R |K| + specifying a bid ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
                "Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak.",
                "By submitting a bid vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword.",
                "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over bid vectors a ∈ R |K| + .",
                "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget Optimization Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
                "Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
                "We conclude this section with a small example to illustrate some feature of the budget optimization problem.",
                "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
                "Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1.",
                "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must bid at least $1 on u.",
                "However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective bid is $1 on both x and y.",
                "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
                "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget Optimization problem in its full generality is difficult.",
                "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors.",
                "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
                "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
                "We define a uniform bidding strategy to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
                "In other words, each vector in the distribution bids the same value on every keyword.",
                "Uniform strategies have several advantages.",
                "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
                "Thus, they are effective in the face of limited or noisy information about the keyword interaction graph.",
                "Second, uniform strategies are also independent of the priority rule being used.",
                "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
                "We now show that we can compute the best uniform strategy efficiently.",
                "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
                "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
                "We can index the points in I as b1, . . . , bN in increasing order.",
                "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
                "For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape.",
                "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
                "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
                "The resulting strategy is the convex combination of two points on the aggregate landscape.",
                "Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors.",
                "We have shown Lemma 2.",
                "Given an instance of Budget Optimization in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
                "Furthermore, this strategy will always be a two-bid strategy.",
                "Putting these ideas together, we get an O(N log N)-time algorithm for Budget Optimization, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
                "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
                "Find the convex hull of the points in the aggregate landscape. 3.",
                "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
                "Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β.",
                "We will also consider a special case of two-bid strategies.",
                "A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
                "A single-bid strategy is even easier to implement in practice than a two-bid strategy.",
                "For example, the search engines often allow advertisers to set a maximum daily budget.",
                "In this case, the advertiser would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
                "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
                "The best single-bid strategy can also be computed easily from the aggregate landscape.",
                "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
                "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
                "In section we prove that there is always a good uniform strategy: Theorem 3.",
                "There always exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "We introduce the notion of a click-price curve, which is central to our analysis.",
                "This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape.",
                "Consider an adversarial bidder Ω with the power to bid independently on each query.",
                "Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords.",
                "Suppose this strategy bids b∗ q for each query q.",
                "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
                "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
                "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
                "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
                "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
                "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
                "Note that the area of each step is costq(b∗ q ).",
                "The following claim follows immediately: Claim 1.",
                "UΩ = R CΩ 0 h(r)dr.",
                "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
                "The click-price curve says that if we bid h(r ) on every keyword (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
                "Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
                "However, all of these extra clicks still cost at most h(r ) per click.",
                "Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click.",
                "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
                "We summarize this discussion in the following lemma: Lemma 4.",
                "For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
                "Lemma 4 describes a landscape as a continuous function.",
                "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
                "Lemma 5.",
                "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget Optimization with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
                "Proof.",
                "Construct an instance as follows.",
                "Let > 0 be a small number that we will later define in terms of .",
                "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
                "The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries.",
                "The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
                "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
                "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal.",
                "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
                "Theorem 6.",
                "There always exists a uniform single-bid strategy that is 1 2 -optimal.",
                "Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof.",
                "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
                "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
                "We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero.",
                "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
                "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
                "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α.",
                "The budget is U = 1 + α.",
                "The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1.",
                "This achieves a total of 2α clicks and spends the budget exactly.",
                "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
                "Any single-bid solution that uses as its non-zero bid gets at most α clicks.",
                "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
                "Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid.",
                "This results in at most α(1 + α) clicks.",
                "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
                "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
                "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
                "After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
                "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve.",
                "Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks.",
                "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
                "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
                "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
                "Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
                "In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
                "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
                "Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget Optimization exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
                "A binary search yields the smallest such α where the objective is exactly U.",
                "To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
                "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
                "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
                "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
                "Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
                "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
                "Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
                "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
                "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
                "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
                "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
                "Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "We now show that no uniform strategy can do better.",
                "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
                "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
                "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
                "Thus, this curve corresponds to an instance where UΩ = 1.",
                "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost.",
                "Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance.",
                "By Lemma 1 there is always a two-bid optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids.",
                "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
                "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
                "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
                "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
                "We turn to the case u > 0.",
                "Here we have pu = v−α v−u and pv = α−u v−u .",
                "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
                "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
                "The final inequality follows from α > 1 − 1 e .",
                "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
                "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
                "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy.",
                "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
                "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution.",
                "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
                "The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice.",
                "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful.",
                "However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5.",
                "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
                "Budget Optimization is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
                "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
                "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
                "Call this the Weighted Keyword Bidding problem.",
                "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
                "Theorem 8.",
                "The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6.",
                "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget optimization problem exactly.",
                "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
                "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
                "We first show that to solve the Budget Optimization problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
                "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
                "Lemma 9.",
                "Let I be an input to the Budget Optimization problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
                "Then we can find the optimal solution in time O(U log U).",
                "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
                "Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property.",
                "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes).",
                "We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors.",
                "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
                "Lemma 10.",
                "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget Optimization problem with ai ≥ aj.",
                "We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi.",
                "In this case we say that j is a child of i.",
                "Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
                "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
                "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children.",
                "Lemma 11.",
                "Let G be a graph with the laminar property.",
                "There exists another graph G with the same optimal solution to the Budget Optimization problem, where each node has at most two children in the laminar ordering.",
                "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
                "Qj ⊆ Qi (and exactly b on keyword i) while spending at most U.",
                "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a bid ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
                "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
                "Lemma 12.",
                "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget Optimization problem exactly in O(B3 U3 n) time.",
                "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
                "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
                "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget Optimization problem in O(B3 U3 n) time.",
                "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
                "For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent).",
                "Doing so yields the obvious improvement in the bounds. 7.",
                "BID OPTIMIZATION UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search.",
                "Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
                "In this section we argue that the budget optimization problem is easy under the VCG auction.",
                "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
                "For the sake of the budget optimization problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
                "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i].",
                "We claim that in the VCG auction, the landscapes are convex.",
                "To see this, consider two consecutive positions i,i + 1.",
                "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
                "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
                "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
                "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
                "But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid.",
                "Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords.",
                "We conclude that the best uniform bid is an optimal solution to the budget optimization problem. 8.",
                "CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
                "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better.",
                "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
                "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.)",
                "Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers.",
                "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium.",
                "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
                "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
                "Truthful auctions for pricing search keywords.",
                "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
                "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
                "Dynamics of bid optimization in online advertisement auctions.",
                "Proc.",
                "WWW 2007. [4] E. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
                "<br>internet</br> Advertising and the Generalized Second Price Auction: Selling Billions of Dollars Worth of Keywords.",
                "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
                "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
                "Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP.",
                "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
                "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
                "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
                "Stochastic models for budget optimization in search-based advertising.",
                "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
                "Computational Geometry: An Introduction.",
                "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
                "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
                "Counterspeculation, auctions and competitive-sealed tenders.",
                "Journal of Finance, 16(1):8-37, 1961. 49"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Optimización del presupuesto en subastas publicitarias basadas en la búsqueda Jon Feldman Google, Inc. Nueva York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. Nueva York, NY Muthu@google.com Martin P´al Google, Inc. Nueva York,NY mpal@google.com Cliff Stein ∗ Departamento de Ieor Columbia University cliff@ieor.columbia.edu Las compañías de búsqueda de \"Internet\" abstractas venden espacios publicitarios basados en consultas de búsqueda de usuarios a través de una subasta.",
                "Si bien ha habido trabajo previo en el proceso de subasta y sus aspectos teóricos del juego, la mayor parte se centra en la compañía de \"Internet\".",
                "Introducción La búsqueda en línea ahora es omnipresente e empresas de búsqueda de \"Internet\" como Google, Yahoo!Y MSN permite que las empresas e individuos se anuncien en base a consultas de búsqueda planteadas por los usuarios.",
                "En contraste, las compañías de búsqueda de \"Internet\" les resulta difícil establecer un precio explícitamente para los anuncios que colocan en respuesta a las consultas de los usuarios.",
                "Es un problema difícil establecer la subasta para efectuar un mercado estable en el que todas las partes (los anunciantes, los usuarios y la compañía de búsqueda de \"Internet\") están adecuadamente satisfechos.",
                "La perspectiva en este documento no es de la compañía de búsqueda de \"Internet\" que muestra los anuncios, sino de los anunciantes.",
                "Cuando un usuario plantea una consulta de búsqueda, la compañía de búsqueda de \"Internet\" determina los anunciantes cuyas palabras clave coinciden con la consulta y que todavía tienen un presupuesto sobrante, ejecuta una subasta entre ellos y presenta el conjunto de anuncios correspondientes a los anunciantes que ganan la subasta.",
                "El anunciante cuyo anuncio aparece paga a la compañía de búsqueda de \"Internet\" si el usuario hace clic en el anuncio.",
                "Si bien el efecto de una campaña publicitaria en cualquier medio es un fenómeno complicado para cuantificar, una noción comúnmente aceptada (y fácilmente cuantificada) en la publicidad basada en la búsqueda en la \"Internet\" es maximizar el número de clics.",
                "Las compañías de búsqueda de \"Internet\" apoyan la elección de las palabras clave está relacionada con el conocimiento del dominio del anunciante, el comportamiento del usuario y las consideraciones estratégicas.",
                "Las compañías de búsqueda de \"Internet\" brindan a los anunciantes resúmenes del tráfico de consulta que les es útil para optimizar sus opciones de palabras clave de manera interactiva.",
                "Lo sorprendente es que la estrategia uniforme en realidad funciona bien, lo que demostraremos.2 Los detalles de la regla de correspondencia están determinados por la compañía de búsqueda de \"Internet\";Aquí tratamos la función como arbitraria.1.2 Nuestros principales resultados y descripción técnica presentamos resultados positivos y negativos para el problema de optimización del presupuesto.",
                "Publicidad de \"Internet\" y la subasta generalizada del segundo precio: venta de miles de millones de dólares en palabras clave."
            ],
            "translated_text": "",
            "candidates": [
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet",
                "Internet"
            ],
            "error": []
        },
        "advertiser": {
            "translated_key": "anunciante",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Budget Optimization in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an auction.",
                "While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the Internet company.",
                "In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
                "We model the entire process and study this budget optimization problem.",
                "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well.",
                "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
                "As our preliminary experiments show, such uniform strategies are likely to be practical.",
                "We also present inapproximability results, and optimal algorithms for variants of the budget optimization problem.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
                "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
                "In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
                "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
                "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
                "It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied.",
                "Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc.",
                "The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers.",
                "The challenge from an advertisers point of view is to understand and interact with the auction mechanism.",
                "The <br>advertiser</br> determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget.",
                "When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction.",
                "The <br>advertiser</br> whose ad appears pays the Internet search company if the user clicks on the ad.",
                "The focus in this paper is on how the advertisers bid.",
                "For the particular choice of keywords of their interest1 , an <br>advertiser</br> wants to optimize the overall effect of the advertising campaign.",
                "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks.",
                "The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the <br>advertiser</br>, user behavior and strategic considerations.",
                "Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively.",
                "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
                "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the <br>advertiser</br> is trying to cover all the possible keywords in some domain.",
                "In effect the <br>advertiser</br> ends up competing with herself.",
                "As a result, the advertisers face a challenging optimization problem.",
                "The focus of this paper is to solve this optimization problem. 1.1 The Budget Optimization Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
                "A given <br>advertiser</br> sees the state of the auctions for searchbased advertising as follows.",
                "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
                "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section.",
                "There is a bipartite graph G on the two vertex sets representing K and Q.",
                "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget optimization problem is as follows.",
                "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the keyword bids in the neighborhood of q.",
                "While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
                "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
                "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
                "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
                "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget optimization problem.",
                "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
                "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget optimization problem.",
                "The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
                "We show that this approximation ratio is tight for uniform strategies.",
                "We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.)",
                "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
                "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
                "After all, the optimum can configure arbitrary bids on each of the keywords.",
                "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
                "So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum.",
                "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
                "We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
                "By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
                "We have conducted simulations using real auction data from Google.",
                "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
                "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
                "MODELING A KEYWORD AUCTION We describe an auction from an advertisers point of view.",
                "An <br>advertiser</br> bids on a keyword, which we can think of as a word or set of words.",
                "Users of the search engine submit queries.",
                "If the query matches a keyword that has been bid on by an <br>advertiser</br>, then the <br>advertiser</br> is entered into an auction for the available ad slots on the results page.",
                "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An <br>advertiser</br> makes a single bid for a keyword that remains in effect for a period of time, say one day.",
                "The keyword could match many different user queries throughout the day.",
                "Each user query might have a different set of advertisers competing for clicks.",
                "The <br>advertiser</br> could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
                "The ultimate goal of an <br>advertiser</br> is to maximize traffic to their website, given a certain advertising budget.",
                "We now formalize a model of keyword bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query.",
                "In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9].",
                "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
                "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
                "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
                "The ctr can be measured empirically using past history.",
                "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
                "In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a bid on a keyword that matches the users query.",
                "We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each keyword.",
                "We assume that the auction is a generalized second price (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of bid, and each <br>advertiser</br> is assigned a price equal to the amount bid by the <br>advertiser</br> below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
                "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction.",
                "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
                "Since the auction is a generalized second price auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
                "Suppose that we bid b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction.",
                "In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
                "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7].",
                "Each auction mechanism will result in a different sort of optimization problem.",
                "In the conclusion we point out that for the VCG auction, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
                "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
                "We use R+ to denote the nonnegative reals.",
                "Observation 1.",
                "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
                "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
                "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
                "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
                "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
                "For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
                "Here we graph clicks as a function of cost.",
                "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
                "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
                "This condition is slightly weaker than concavity.",
                "Suppose we would like to solve the budget optimization problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget.",
                "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
                "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an <br>advertiser</br> would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00.",
                "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
                "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
                "Let B be a distribution on bids b ∈ R+.",
                "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
                "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
                "This is represented in Figure 1 by the dashed line.",
                "To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
                "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
                "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
                "Summarizing, Lemma 1.",
                "If an <br>advertiser</br> is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
                "There is one subtlety in this formulation.",
                "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
                "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
                "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
                "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
                "Further, either the <br>advertiser</br> or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
                "We want to bid on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
                "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
                "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another.",
                "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
                "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
                "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
                "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
                "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an <br>advertiser</br> to appear twice in the same search results page.7 Thus, if an <br>advertiser</br> has a bid on two different keywords that match the same query, this conflict must be resolved somehow.",
                "For example, if an <br>advertiser</br> has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
                "The search engine specifies, in advance, a rule for resolution based on the query the keyword and the bid.",
                "A natural rule is to take the keyword with the highest bid, which we adopt here, but our results apply to other resolution rules.",
                "We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
                "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
                "An edge (k, q) ∈ E means that keyword k matches query q.",
                "The <br>advertiser</br> can control their individual keyword bid vector a ∈ R |K| + specifying a bid ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
                "Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak.",
                "By submitting a bid vector a, the <br>advertiser</br> receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword.",
                "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an <br>advertiser</br> gives a distribution A over bid vectors a ∈ R |K| + .",
                "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget Optimization Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
                "Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
                "We conclude this section with a small example to illustrate some feature of the budget optimization problem.",
                "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
                "Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1.",
                "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an <br>advertiser</br> must bid at least $1 on u.",
                "However, because of the structure of the graph, if the <br>advertiser</br> sets bu to $1, then his effective bid is $1 on both x and y.",
                "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
                "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget Optimization problem in its full generality is difficult.",
                "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors.",
                "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
                "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
                "We define a uniform bidding strategy to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
                "In other words, each vector in the distribution bids the same value on every keyword.",
                "Uniform strategies have several advantages.",
                "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
                "Thus, they are effective in the face of limited or noisy information about the keyword interaction graph.",
                "Second, uniform strategies are also independent of the priority rule being used.",
                "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
                "We now show that we can compute the best uniform strategy efficiently.",
                "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
                "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
                "We can index the points in I as b1, . . . , bN in increasing order.",
                "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
                "For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape.",
                "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
                "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
                "The resulting strategy is the convex combination of two points on the aggregate landscape.",
                "Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors.",
                "We have shown Lemma 2.",
                "Given an instance of Budget Optimization in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
                "Furthermore, this strategy will always be a two-bid strategy.",
                "Putting these ideas together, we get an O(N log N)-time algorithm for Budget Optimization, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
                "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
                "Find the convex hull of the points in the aggregate landscape. 3.",
                "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
                "Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β.",
                "We will also consider a special case of two-bid strategies.",
                "A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. <br>advertiser</br> randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
                "A single-bid strategy is even easier to implement in practice than a two-bid strategy.",
                "For example, the search engines often allow advertisers to set a maximum daily budget.",
                "In this case, the <br>advertiser</br> would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
                "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
                "The best single-bid strategy can also be computed easily from the aggregate landscape.",
                "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
                "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
                "In section we prove that there is always a good uniform strategy: Theorem 3.",
                "There always exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "We introduce the notion of a click-price curve, which is central to our analysis.",
                "This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape.",
                "Consider an adversarial bidder Ω with the power to bid independently on each query.",
                "Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords.",
                "Suppose this strategy bids b∗ q for each query q.",
                "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
                "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
                "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
                "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
                "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
                "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
                "Note that the area of each step is costq(b∗ q ).",
                "The following claim follows immediately: Claim 1.",
                "UΩ = R CΩ 0 h(r)dr.",
                "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
                "The click-price curve says that if we bid h(r ) on every keyword (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
                "Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
                "However, all of these extra clicks still cost at most h(r ) per click.",
                "Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click.",
                "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
                "We summarize this discussion in the following lemma: Lemma 4.",
                "For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
                "Lemma 4 describes a landscape as a continuous function.",
                "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
                "Lemma 5.",
                "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget Optimization with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
                "Proof.",
                "Construct an instance as follows.",
                "Let > 0 be a small number that we will later define in terms of .",
                "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
                "The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries.",
                "The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
                "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
                "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal.",
                "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
                "Theorem 6.",
                "There always exists a uniform single-bid strategy that is 1 2 -optimal.",
                "Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof.",
                "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
                "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
                "We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero.",
                "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
                "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
                "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α.",
                "The budget is U = 1 + α.",
                "The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1.",
                "This achieves a total of 2α clicks and spends the budget exactly.",
                "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
                "Any single-bid solution that uses as its non-zero bid gets at most α clicks.",
                "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
                "Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid.",
                "This results in at most α(1 + α) clicks.",
                "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
                "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
                "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
                "After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
                "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve.",
                "Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks.",
                "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
                "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
                "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
                "Note further that the <br>advertiser</br> is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
                "In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
                "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
                "Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget Optimization exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
                "A binary search yields the smallest such α where the objective is exactly U.",
                "To obtain a strategy for the <br>advertiser</br>, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
                "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
                "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
                "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
                "Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
                "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
                "Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
                "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
                "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
                "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
                "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
                "Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "We now show that no uniform strategy can do better.",
                "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
                "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
                "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
                "Thus, this curve corresponds to an instance where UΩ = 1.",
                "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost.",
                "Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance.",
                "By Lemma 1 there is always a two-bid optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids.",
                "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
                "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
                "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
                "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
                "We turn to the case u > 0.",
                "Here we have pu = v−α v−u and pv = α−u v−u .",
                "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
                "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
                "The final inequality follows from α > 1 − 1 e .",
                "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
                "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
                "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy.",
                "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
                "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution.",
                "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
                "The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice.",
                "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful.",
                "However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5.",
                "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
                "Budget Optimization is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
                "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
                "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
                "Call this the Weighted Keyword Bidding problem.",
                "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
                "Theorem 8.",
                "The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6.",
                "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget optimization problem exactly.",
                "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
                "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
                "We first show that to solve the Budget Optimization problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
                "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
                "Lemma 9.",
                "Let I be an input to the Budget Optimization problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
                "Then we can find the optimal solution in time O(U log U).",
                "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
                "Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property.",
                "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes).",
                "We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors.",
                "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
                "Lemma 10.",
                "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget Optimization problem with ai ≥ aj.",
                "We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi.",
                "In this case we say that j is a child of i.",
                "Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
                "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
                "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children.",
                "Lemma 11.",
                "Let G be a graph with the laminar property.",
                "There exists another graph G with the same optimal solution to the Budget Optimization problem, where each node has at most two children in the laminar ordering.",
                "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
                "Qj ⊆ Qi (and exactly b on keyword i) while spending at most U.",
                "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a bid ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
                "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
                "Lemma 12.",
                "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget Optimization problem exactly in O(B3 U3 n) time.",
                "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
                "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
                "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget Optimization problem in O(B3 U3 n) time.",
                "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
                "For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent).",
                "Doing so yields the obvious improvement in the bounds. 7.",
                "BID OPTIMIZATION UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search.",
                "Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
                "In this section we argue that the budget optimization problem is easy under the VCG auction.",
                "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
                "For the sake of the budget optimization problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
                "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i].",
                "We claim that in the VCG auction, the landscapes are convex.",
                "To see this, consider two consecutive positions i,i + 1.",
                "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
                "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
                "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
                "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
                "But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid.",
                "Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords.",
                "We conclude that the best uniform bid is an optimal solution to the budget optimization problem. 8.",
                "CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
                "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better.",
                "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
                "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the <br>advertiser</br> site; e.g., a sale or an account sign-up.)",
                "Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers.",
                "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium.",
                "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
                "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
                "Truthful auctions for pricing search keywords.",
                "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
                "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
                "Dynamics of bid optimization in online advertisement auctions.",
                "Proc.",
                "WWW 2007. [4] E. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
                "Internet Advertising and the Generalized Second Price Auction: Selling Billions of Dollars Worth of Keywords.",
                "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
                "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
                "Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP.",
                "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
                "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
                "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
                "Stochastic models for budget optimization in search-based advertising.",
                "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
                "Computational Geometry: An Introduction.",
                "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
                "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
                "Counterspeculation, auctions and competitive-sealed tenders.",
                "Journal of Finance, 16(1):8-37, 1961. 49"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El \"anunciante\" determina un conjunto de palabras clave de su interés y luego debe crear anuncios, establecer las ofertas para cada palabra clave y proporcionar un presupuesto total (a menudo diario).",
                "El \"anunciante\" cuyo anuncio aparece paga a la compañía de búsqueda de Internet si el usuario hace clic en el anuncio.",
                "Para la elección particular de las palabras clave de su interés1, un \"anunciante\" quiere optimizar el efecto general de la campaña publicitaria.",
                "Las compañías de búsqueda de Internet apoyan a 1 La elección de palabras clave está relacionada con el conocimiento del dominio del \"anunciante\", el comportamiento del usuario y las consideraciones estratégicas.",
                "Aún así, este es un problema complejo por las siguientes razones (entre otras): • Las palabras clave individuales tienen características significativamente diferentes entre sí;Por ejemplo, si bien la pesca es una palabra clave amplia que coincide con muchas consultas de usuarios y tiene muchos anunciantes competidores, el cebo de pesca humana es una palabra clave de nicho que coincide solo con unas pocas consultas, pero podría tener menos competencia.• Hay interacciones complejas entre las palabras clave porque una consulta de usuario puede coincidir con dos o más palabras clave, ya que el \"anunciante\" está tratando de cubrir todas las palabras clave posibles en algún dominio.",
                "En efecto, el \"anunciante\" termina compitiendo consigo mismo.",
                "Un \"anunciante\" dado ve el estado de las subastas para la publicidad basada en la búsqueda de la siguiente manera.",
                "Un \"anunciante\" ofrece una palabra clave, que podemos pensar como una palabra o un conjunto de palabras.",
                "Si la consulta coincide con una palabra clave que ha sido ofertada por un \"anunciante\", entonces el \"anunciante\" se ingresa en una subasta para las ranuras de anuncios disponibles en la página de resultados.",
                "Lo que constituye una coincidencia varía según el motor de búsqueda.3 Este tipo de estrategia también se puede interpretar como un valor de oferta (en todas las palabras clave) para parte del día y un valor diferente para el resto del día.41 Un \"anunciante\" hace una sola oferta para una palabra clave que permanece vigente por un período de tiempo, digamos un día.",
                "El \"anunciante\" también podría ofertar diferentes cantidades en múltiples palabras clave, cada una coincidente con un conjunto de consultas de usuario (posiblemente superpuestas).",
                "El objetivo final de un \"anunciante\" es maximizar el tráfico en su sitio web, dado un cierto presupuesto publicitario.",
                "Suponemos que la subasta es una subasta de segundo precio generalizado (GSP) [5, 7]: a los anunciantes se clasifican en orden decreciente de oferta, y a cada \"anunciante\" se le asigna un precio igual al monto de la oferta del \"anunciante\" a continuaciónellos en la clasificación.4 En subastas de búsqueda patrocinadas, este anunciante solo paga si el usuario realmente hace clic en el anuncio.",
                "Supongamos en el ejemplo de la Tabla 1 y la Figura 1 que tuvimos un presupuesto 5, por supuesto, es un poco poco realista imaginar que un \"anunciante\" tendría que preocuparse por un presupuesto si solo se considerara una consulta de usuario;Sin embargo, uno podría imaginar múltiples instancias de la misma consulta y las escalas de problemas.42 $ 0.50 $ 1.00 $ 1.50 .1 .2 .3 .4 .5 clics Costo Figura 1: Un panorama de ofertas.de $ 1.00.",
                "Si un \"anunciante\" está ofertando en una palabra clave, sujeto a un presupuesto U, entonces la estrategia óptima es elegir una combinación convexa de (a lo sumo) dos ofertas que están en los puntos finales de la línea en el casco convexo en el punto más alto.para el costo U.",
                "Además, ya sea el \"anunciante\" o el motor de búsqueda (posiblemente ambos), monitoree el costo incurrido durante el día;Por lo tanto, la oferta de anunciantes se puede cambiar a cero durante parte del día, por lo que el presupuesto no es excesivo.6 Por lo tanto, en el resto6 ver https://adwords.google.com/support/bin/answer.Py? Respuesta = 22183, por ejemplo.DER De este documento, formularemos una restricción presupuestaria que solo debe respetarse en la expectativa.2.1.4 Consultas múltiples: un problema de mochila como calentamiento, consideraremos a continuación el caso cuando tengamos un conjunto de consultas, cada una de las cuales su propio paisaje.",
                "Sin embargo, dado que cada curva es cóncava, las piezas que provienen de una curva de consulta particular están en un orden creciente de costo por clic;Por lo tanto, de cada paisaje hemos elegido para nuestra mochila un conjunto de piezas que forman un prefijo de la curva.2.2 Interacción de palabras clave En la realidad, los anunciantes de búsqueda pueden ofertar en un gran conjunto de palabras clave, cada una de ellas calificando para un conjunto diferente (posiblemente superpuesto) de consultas, pero la mayoría de los motores de búsqueda no permiten que un \"anunciante\" aparezca dos veces en la misma búsquedaPágina de resultados.7 Por lo tanto, si un \"anunciante\" tiene una oferta en dos palabras clave diferentes que coinciden con la misma consulta, este conflicto debe resolverse de alguna manera.",
                "Por ejemplo, si un \"anunciante\" tiene una oferta por las palabras clave zapatos y el tacón alto, entonces si un usuario emite las calzado de techo alto de consulta, coincidirá con dos palabras clave diferentes.",
                "El \"anunciante\" puede controlar su vector de oferta de palabras clave individual A ∈ R | K |+ Especificar una oferta AK para cada palabra clave k ∈ K. (Por ahora, no consideramos ofertas aleatorias, pero lo presentaremos en breve).",
                "Al enviar un vector de oferta A, el \"anunciante\" recibe unos 7 ver https://adwords.google.com/support/bin/answer.Py? Respuesta = 14179, por ejemplo.43 Número de clics y paga algún costo en cada palabra clave.",
                "Usamos el término gasto para denotar el costo total;Del mismo modo, usamos el término tráfico para denotar el número total de clics: gasto (a) = x q∈Q costq (bq (a));tráfico (a) = x q∈Q clicksq (bq (a)) También permitimos estrategias aleatorias, donde un \"anunciante\" proporciona una distribución a vectores de oferta a ∈ R | k |+.",
                "La consulta y tiene dos posiciones con CTRS αy [1] = αy [2] = 1.0, y oferta por 1 = $ y por 2 = $ 1 para obtener cualquier clic de X, un \"anunciante\" debe ofertar al menos $ 1 en u.",
                "Sin embargo, debido a la estructura del gráfico, si el \"anunciante\" establece BU a $ 1, entonces su oferta efectiva es de $ 1 en X e Y.",
                "Una estrategia de oferta única es una estrategia uniforme que pone un peso distinto de cero como máximo un vector distinto de cero, es decir, \"anunciante\" aleatoriza entre ofertar una cierta cantidad b ∗ en todas las palabras clave, y no ofertar en absoluto.",
                "En este caso, el \"anunciante\" simplemente ofertaría B ∗ hasta que su presupuesto se agote, y el sistema de porción de anuncios la eliminaría de todas las subastas posteriores hasta el final del día.",
                "Tenga en cuenta además que el \"anunciante\" está tratando de descubrir cuál de estas estrategias usar y, en última instancia, quiere calcular una distribución sobre estrategias uniformes.",
                "Para obtener una estrategia para el \"anunciante\", observamos el dual, lo que restringe el objetivo de ser igual a U para obtener el politope de soluciones óptimas: x (u, v) ∈S wu, v = 1 ∀ (u (u, v) ∈ S, x V: (u, v) ∈S p1 (u, v) · u · wu, v ≤ y x u: (u, v) ∈S p2 (u, v) · v · wu, V ≤.",
                ""
            ],
            "translated_text": "",
            "candidates": [
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "Anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "Anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "anunciante",
                "",
                "anunciante"
            ],
            "error": []
        },
        "game theory": {
            "translated_key": "Teoría del juego",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Budget Optimization in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an auction.",
                "While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the Internet company.",
                "In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
                "We model the entire process and study this budget optimization problem.",
                "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well.",
                "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
                "As our preliminary experiments show, such uniform strategies are likely to be practical.",
                "We also present inapproximability results, and optimal algorithms for variants of the budget optimization problem.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
                "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
                "In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
                "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
                "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
                "It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied.",
                "Recently there has been systematic study of the issues involved in the <br>game theory</br> of the auctions [5, 1, 2], revenue maximization [10], etc.",
                "The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers.",
                "The challenge from an advertisers point of view is to understand and interact with the auction mechanism.",
                "The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget.",
                "When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction.",
                "The advertiser whose ad appears pays the Internet search company if the user clicks on the ad.",
                "The focus in this paper is on how the advertisers bid.",
                "For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign.",
                "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks.",
                "The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations.",
                "Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively.",
                "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
                "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain.",
                "In effect the advertiser ends up competing with herself.",
                "As a result, the advertisers face a challenging optimization problem.",
                "The focus of this paper is to solve this optimization problem. 1.1 The Budget Optimization Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
                "A given advertiser sees the state of the auctions for searchbased advertising as follows.",
                "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
                "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section.",
                "There is a bipartite graph G on the two vertex sets representing K and Q.",
                "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget optimization problem is as follows.",
                "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the keyword bids in the neighborhood of q.",
                "While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
                "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
                "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
                "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
                "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget optimization problem.",
                "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
                "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget optimization problem.",
                "The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
                "We show that this approximation ratio is tight for uniform strategies.",
                "We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.)",
                "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
                "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
                "After all, the optimum can configure arbitrary bids on each of the keywords.",
                "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
                "So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum.",
                "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
                "We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
                "By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
                "We have conducted simulations using real auction data from Google.",
                "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
                "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
                "MODELING A KEYWORD AUCTION We describe an auction from an advertisers point of view.",
                "An advertiser bids on a keyword, which we can think of as a word or set of words.",
                "Users of the search engine submit queries.",
                "If the query matches a keyword that has been bid on by an advertiser, then the advertiser is entered into an auction for the available ad slots on the results page.",
                "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single bid for a keyword that remains in effect for a period of time, say one day.",
                "The keyword could match many different user queries throughout the day.",
                "Each user query might have a different set of advertisers competing for clicks.",
                "The advertiser could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
                "The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget.",
                "We now formalize a model of keyword bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query.",
                "In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9].",
                "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
                "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
                "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
                "The ctr can be measured empirically using past history.",
                "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
                "In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a bid on a keyword that matches the users query.",
                "We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each keyword.",
                "We assume that the auction is a generalized second price (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of bid, and each advertiser is assigned a price equal to the amount bid by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
                "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction.",
                "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
                "Since the auction is a generalized second price auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
                "Suppose that we bid b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction.",
                "In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
                "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7].",
                "Each auction mechanism will result in a different sort of optimization problem.",
                "In the conclusion we point out that for the VCG auction, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
                "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
                "We use R+ to denote the nonnegative reals.",
                "Observation 1.",
                "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
                "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
                "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
                "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
                "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
                "For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
                "Here we graph clicks as a function of cost.",
                "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
                "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
                "This condition is slightly weaker than concavity.",
                "Suppose we would like to solve the budget optimization problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget.",
                "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
                "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00.",
                "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
                "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
                "Let B be a distribution on bids b ∈ R+.",
                "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
                "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
                "This is represented in Figure 1 by the dashed line.",
                "To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
                "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
                "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
                "Summarizing, Lemma 1.",
                "If an advertiser is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
                "There is one subtlety in this formulation.",
                "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
                "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
                "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
                "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
                "Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
                "We want to bid on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
                "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
                "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another.",
                "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
                "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
                "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
                "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
                "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a bid on two different keywords that match the same query, this conflict must be resolved somehow.",
                "For example, if an advertiser has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
                "The search engine specifies, in advance, a rule for resolution based on the query the keyword and the bid.",
                "A natural rule is to take the keyword with the highest bid, which we adopt here, but our results apply to other resolution rules.",
                "We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
                "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
                "An edge (k, q) ∈ E means that keyword k matches query q.",
                "The advertiser can control their individual keyword bid vector a ∈ R |K| + specifying a bid ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
                "Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak.",
                "By submitting a bid vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword.",
                "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over bid vectors a ∈ R |K| + .",
                "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget Optimization Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
                "Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
                "We conclude this section with a small example to illustrate some feature of the budget optimization problem.",
                "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
                "Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1.",
                "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must bid at least $1 on u.",
                "However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective bid is $1 on both x and y.",
                "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
                "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget Optimization problem in its full generality is difficult.",
                "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors.",
                "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
                "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
                "We define a uniform bidding strategy to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
                "In other words, each vector in the distribution bids the same value on every keyword.",
                "Uniform strategies have several advantages.",
                "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
                "Thus, they are effective in the face of limited or noisy information about the keyword interaction graph.",
                "Second, uniform strategies are also independent of the priority rule being used.",
                "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
                "We now show that we can compute the best uniform strategy efficiently.",
                "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
                "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
                "We can index the points in I as b1, . . . , bN in increasing order.",
                "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
                "For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape.",
                "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
                "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
                "The resulting strategy is the convex combination of two points on the aggregate landscape.",
                "Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors.",
                "We have shown Lemma 2.",
                "Given an instance of Budget Optimization in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
                "Furthermore, this strategy will always be a two-bid strategy.",
                "Putting these ideas together, we get an O(N log N)-time algorithm for Budget Optimization, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
                "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
                "Find the convex hull of the points in the aggregate landscape. 3.",
                "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
                "Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β.",
                "We will also consider a special case of two-bid strategies.",
                "A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
                "A single-bid strategy is even easier to implement in practice than a two-bid strategy.",
                "For example, the search engines often allow advertisers to set a maximum daily budget.",
                "In this case, the advertiser would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
                "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
                "The best single-bid strategy can also be computed easily from the aggregate landscape.",
                "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
                "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
                "In section we prove that there is always a good uniform strategy: Theorem 3.",
                "There always exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "We introduce the notion of a click-price curve, which is central to our analysis.",
                "This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape.",
                "Consider an adversarial bidder Ω with the power to bid independently on each query.",
                "Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords.",
                "Suppose this strategy bids b∗ q for each query q.",
                "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
                "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
                "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
                "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
                "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
                "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
                "Note that the area of each step is costq(b∗ q ).",
                "The following claim follows immediately: Claim 1.",
                "UΩ = R CΩ 0 h(r)dr.",
                "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
                "The click-price curve says that if we bid h(r ) on every keyword (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
                "Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
                "However, all of these extra clicks still cost at most h(r ) per click.",
                "Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click.",
                "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
                "We summarize this discussion in the following lemma: Lemma 4.",
                "For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
                "Lemma 4 describes a landscape as a continuous function.",
                "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
                "Lemma 5.",
                "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget Optimization with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
                "Proof.",
                "Construct an instance as follows.",
                "Let > 0 be a small number that we will later define in terms of .",
                "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
                "The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries.",
                "The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
                "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
                "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal.",
                "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
                "Theorem 6.",
                "There always exists a uniform single-bid strategy that is 1 2 -optimal.",
                "Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof.",
                "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
                "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
                "We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero.",
                "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
                "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
                "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α.",
                "The budget is U = 1 + α.",
                "The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1.",
                "This achieves a total of 2α clicks and spends the budget exactly.",
                "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
                "Any single-bid solution that uses as its non-zero bid gets at most α clicks.",
                "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
                "Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid.",
                "This results in at most α(1 + α) clicks.",
                "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
                "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
                "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
                "After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
                "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve.",
                "Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks.",
                "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
                "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
                "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
                "Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
                "In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
                "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
                "Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget Optimization exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
                "A binary search yields the smallest such α where the objective is exactly U.",
                "To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
                "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
                "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
                "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
                "Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
                "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
                "Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
                "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
                "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
                "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
                "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
                "Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "We now show that no uniform strategy can do better.",
                "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
                "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
                "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
                "Thus, this curve corresponds to an instance where UΩ = 1.",
                "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost.",
                "Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance.",
                "By Lemma 1 there is always a two-bid optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids.",
                "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
                "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
                "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
                "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
                "We turn to the case u > 0.",
                "Here we have pu = v−α v−u and pv = α−u v−u .",
                "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
                "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
                "The final inequality follows from α > 1 − 1 e .",
                "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
                "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
                "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy.",
                "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
                "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution.",
                "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
                "The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice.",
                "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful.",
                "However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5.",
                "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
                "Budget Optimization is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
                "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
                "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
                "Call this the Weighted Keyword Bidding problem.",
                "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
                "Theorem 8.",
                "The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6.",
                "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget optimization problem exactly.",
                "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
                "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
                "We first show that to solve the Budget Optimization problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
                "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
                "Lemma 9.",
                "Let I be an input to the Budget Optimization problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
                "Then we can find the optimal solution in time O(U log U).",
                "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
                "Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property.",
                "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes).",
                "We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors.",
                "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
                "Lemma 10.",
                "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget Optimization problem with ai ≥ aj.",
                "We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi.",
                "In this case we say that j is a child of i.",
                "Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
                "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
                "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children.",
                "Lemma 11.",
                "Let G be a graph with the laminar property.",
                "There exists another graph G with the same optimal solution to the Budget Optimization problem, where each node has at most two children in the laminar ordering.",
                "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
                "Qj ⊆ Qi (and exactly b on keyword i) while spending at most U.",
                "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a bid ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
                "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
                "Lemma 12.",
                "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget Optimization problem exactly in O(B3 U3 n) time.",
                "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
                "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
                "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget Optimization problem in O(B3 U3 n) time.",
                "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
                "For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent).",
                "Doing so yields the obvious improvement in the bounds. 7.",
                "BID OPTIMIZATION UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search.",
                "Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
                "In this section we argue that the budget optimization problem is easy under the VCG auction.",
                "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
                "For the sake of the budget optimization problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
                "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i].",
                "We claim that in the VCG auction, the landscapes are convex.",
                "To see this, consider two consecutive positions i,i + 1.",
                "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
                "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
                "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
                "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
                "But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid.",
                "Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords.",
                "We conclude that the best uniform bid is an optimal solution to the budget optimization problem. 8.",
                "CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
                "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better.",
                "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
                "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.)",
                "Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers.",
                "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium.",
                "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
                "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
                "Truthful auctions for pricing search keywords.",
                "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
                "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
                "Dynamics of bid optimization in online advertisement auctions.",
                "Proc.",
                "WWW 2007. [4] E. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
                "Internet Advertising and the Generalized Second Price Auction: Selling Billions of Dollars Worth of Keywords.",
                "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
                "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
                "Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP.",
                "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
                "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
                "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
                "Stochastic models for budget optimization in search-based advertising.",
                "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
                "Computational Geometry: An Introduction.",
                "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
                "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
                "Counterspeculation, auctions and competitive-sealed tenders.",
                "Journal of Finance, 16(1):8-37, 1961. 49"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Recientemente ha habido un estudio sistemático de los problemas involucrados en la \"teoría del juego\" de las subastas [5, 1, 2], maximización de ingresos [10], etc."
            ],
            "translated_text": "",
            "candidates": [
                "Teoría del juego",
                "teoría del juego"
            ],
            "error": []
        },
        "intriguing heuristic": {
            "translated_key": "heurística intrigante",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Budget Optimization in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an auction.",
                "While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the Internet company.",
                "In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
                "We model the entire process and study this budget optimization problem.",
                "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well.",
                "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
                "As our preliminary experiments show, such uniform strategies are likely to be practical.",
                "We also present inapproximability results, and optimal algorithms for variants of the budget optimization problem.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
                "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
                "In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
                "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
                "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
                "It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied.",
                "Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc.",
                "The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers.",
                "The challenge from an advertisers point of view is to understand and interact with the auction mechanism.",
                "The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget.",
                "When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction.",
                "The advertiser whose ad appears pays the Internet search company if the user clicks on the ad.",
                "The focus in this paper is on how the advertisers bid.",
                "For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign.",
                "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks.",
                "The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations.",
                "Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively.",
                "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
                "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain.",
                "In effect the advertiser ends up competing with herself.",
                "As a result, the advertisers face a challenging optimization problem.",
                "The focus of this paper is to solve this optimization problem. 1.1 The Budget Optimization Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
                "A given advertiser sees the state of the auctions for searchbased advertising as follows.",
                "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
                "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section.",
                "There is a bipartite graph G on the two vertex sets representing K and Q.",
                "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget optimization problem is as follows.",
                "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the keyword bids in the neighborhood of q.",
                "While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
                "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
                "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
                "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
                "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget optimization problem.",
                "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
                "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget optimization problem.",
                "The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
                "We show that this approximation ratio is tight for uniform strategies.",
                "We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.)",
                "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
                "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
                "After all, the optimum can configure arbitrary bids on each of the keywords.",
                "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
                "So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum.",
                "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
                "We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
                "By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
                "We have conducted simulations using real auction data from Google.",
                "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
                "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
                "MODELING A KEYWORD AUCTION We describe an auction from an advertisers point of view.",
                "An advertiser bids on a keyword, which we can think of as a word or set of words.",
                "Users of the search engine submit queries.",
                "If the query matches a keyword that has been bid on by an advertiser, then the advertiser is entered into an auction for the available ad slots on the results page.",
                "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single bid for a keyword that remains in effect for a period of time, say one day.",
                "The keyword could match many different user queries throughout the day.",
                "Each user query might have a different set of advertisers competing for clicks.",
                "The advertiser could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
                "The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget.",
                "We now formalize a model of keyword bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query.",
                "In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9].",
                "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
                "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
                "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
                "The ctr can be measured empirically using past history.",
                "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
                "In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a bid on a keyword that matches the users query.",
                "We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each keyword.",
                "We assume that the auction is a generalized second price (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of bid, and each advertiser is assigned a price equal to the amount bid by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
                "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction.",
                "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
                "Since the auction is a generalized second price auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
                "Suppose that we bid b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction.",
                "In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
                "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7].",
                "Each auction mechanism will result in a different sort of optimization problem.",
                "In the conclusion we point out that for the VCG auction, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
                "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
                "We use R+ to denote the nonnegative reals.",
                "Observation 1.",
                "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
                "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
                "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
                "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
                "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
                "For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
                "Here we graph clicks as a function of cost.",
                "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
                "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
                "This condition is slightly weaker than concavity.",
                "Suppose we would like to solve the budget optimization problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget.",
                "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
                "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00.",
                "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
                "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
                "Let B be a distribution on bids b ∈ R+.",
                "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
                "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
                "This is represented in Figure 1 by the dashed line.",
                "To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
                "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
                "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
                "Summarizing, Lemma 1.",
                "If an advertiser is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
                "There is one subtlety in this formulation.",
                "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
                "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
                "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
                "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
                "Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
                "We want to bid on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
                "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
                "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another.",
                "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
                "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
                "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
                "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
                "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a bid on two different keywords that match the same query, this conflict must be resolved somehow.",
                "For example, if an advertiser has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
                "The search engine specifies, in advance, a rule for resolution based on the query the keyword and the bid.",
                "A natural rule is to take the keyword with the highest bid, which we adopt here, but our results apply to other resolution rules.",
                "We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
                "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
                "An edge (k, q) ∈ E means that keyword k matches query q.",
                "The advertiser can control their individual keyword bid vector a ∈ R |K| + specifying a bid ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
                "Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak.",
                "By submitting a bid vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword.",
                "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over bid vectors a ∈ R |K| + .",
                "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget Optimization Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
                "Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
                "We conclude this section with a small example to illustrate some feature of the budget optimization problem.",
                "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
                "Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1.",
                "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must bid at least $1 on u.",
                "However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective bid is $1 on both x and y.",
                "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
                "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget Optimization problem in its full generality is difficult.",
                "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors.",
                "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
                "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
                "We define a uniform bidding strategy to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
                "In other words, each vector in the distribution bids the same value on every keyword.",
                "Uniform strategies have several advantages.",
                "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
                "Thus, they are effective in the face of limited or noisy information about the keyword interaction graph.",
                "Second, uniform strategies are also independent of the priority rule being used.",
                "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
                "We now show that we can compute the best uniform strategy efficiently.",
                "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
                "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
                "We can index the points in I as b1, . . . , bN in increasing order.",
                "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
                "For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape.",
                "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
                "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
                "The resulting strategy is the convex combination of two points on the aggregate landscape.",
                "Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors.",
                "We have shown Lemma 2.",
                "Given an instance of Budget Optimization in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
                "Furthermore, this strategy will always be a two-bid strategy.",
                "Putting these ideas together, we get an O(N log N)-time algorithm for Budget Optimization, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
                "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
                "Find the convex hull of the points in the aggregate landscape. 3.",
                "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
                "Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β.",
                "We will also consider a special case of two-bid strategies.",
                "A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
                "A single-bid strategy is even easier to implement in practice than a two-bid strategy.",
                "For example, the search engines often allow advertisers to set a maximum daily budget.",
                "In this case, the advertiser would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
                "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
                "The best single-bid strategy can also be computed easily from the aggregate landscape.",
                "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
                "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
                "In section we prove that there is always a good uniform strategy: Theorem 3.",
                "There always exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "We introduce the notion of a click-price curve, which is central to our analysis.",
                "This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape.",
                "Consider an adversarial bidder Ω with the power to bid independently on each query.",
                "Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords.",
                "Suppose this strategy bids b∗ q for each query q.",
                "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
                "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
                "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
                "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
                "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
                "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
                "Note that the area of each step is costq(b∗ q ).",
                "The following claim follows immediately: Claim 1.",
                "UΩ = R CΩ 0 h(r)dr.",
                "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
                "The click-price curve says that if we bid h(r ) on every keyword (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
                "Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
                "However, all of these extra clicks still cost at most h(r ) per click.",
                "Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click.",
                "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
                "We summarize this discussion in the following lemma: Lemma 4.",
                "For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
                "Lemma 4 describes a landscape as a continuous function.",
                "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
                "Lemma 5.",
                "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget Optimization with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
                "Proof.",
                "Construct an instance as follows.",
                "Let > 0 be a small number that we will later define in terms of .",
                "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
                "The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries.",
                "The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
                "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
                "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal.",
                "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
                "Theorem 6.",
                "There always exists a uniform single-bid strategy that is 1 2 -optimal.",
                "Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof.",
                "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
                "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
                "We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero.",
                "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
                "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
                "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α.",
                "The budget is U = 1 + α.",
                "The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1.",
                "This achieves a total of 2α clicks and spends the budget exactly.",
                "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
                "Any single-bid solution that uses as its non-zero bid gets at most α clicks.",
                "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
                "Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid.",
                "This results in at most α(1 + α) clicks.",
                "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
                "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
                "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
                "After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
                "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve.",
                "Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks.",
                "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
                "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
                "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
                "Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
                "In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
                "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
                "Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget Optimization exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
                "A binary search yields the smallest such α where the objective is exactly U.",
                "To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
                "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
                "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
                "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
                "Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
                "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
                "Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
                "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
                "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
                "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
                "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
                "Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "We now show that no uniform strategy can do better.",
                "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
                "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
                "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
                "Thus, this curve corresponds to an instance where UΩ = 1.",
                "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost.",
                "Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance.",
                "By Lemma 1 there is always a two-bid optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids.",
                "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
                "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
                "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
                "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
                "We turn to the case u > 0.",
                "Here we have pu = v−α v−u and pv = α−u v−u .",
                "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
                "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
                "The final inequality follows from α > 1 − 1 e .",
                "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
                "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
                "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy.",
                "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
                "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution.",
                "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
                "The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice.",
                "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful.",
                "However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5.",
                "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
                "Budget Optimization is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
                "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
                "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
                "Call this the Weighted Keyword Bidding problem.",
                "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
                "Theorem 8.",
                "The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6.",
                "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget optimization problem exactly.",
                "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
                "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
                "We first show that to solve the Budget Optimization problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
                "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
                "Lemma 9.",
                "Let I be an input to the Budget Optimization problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
                "Then we can find the optimal solution in time O(U log U).",
                "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
                "Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property.",
                "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes).",
                "We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors.",
                "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
                "Lemma 10.",
                "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget Optimization problem with ai ≥ aj.",
                "We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi.",
                "In this case we say that j is a child of i.",
                "Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
                "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
                "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children.",
                "Lemma 11.",
                "Let G be a graph with the laminar property.",
                "There exists another graph G with the same optimal solution to the Budget Optimization problem, where each node has at most two children in the laminar ordering.",
                "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
                "Qj ⊆ Qi (and exactly b on keyword i) while spending at most U.",
                "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a bid ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
                "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
                "Lemma 12.",
                "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget Optimization problem exactly in O(B3 U3 n) time.",
                "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
                "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
                "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget Optimization problem in O(B3 U3 n) time.",
                "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
                "For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent).",
                "Doing so yields the obvious improvement in the bounds. 7.",
                "BID OPTIMIZATION UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search.",
                "Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
                "In this section we argue that the budget optimization problem is easy under the VCG auction.",
                "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
                "For the sake of the budget optimization problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
                "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i].",
                "We claim that in the VCG auction, the landscapes are convex.",
                "To see this, consider two consecutive positions i,i + 1.",
                "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
                "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
                "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
                "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
                "But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid.",
                "Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords.",
                "We conclude that the best uniform bid is an optimal solution to the budget optimization problem. 8.",
                "CONCLUDING REMARKS Our algorithmic result presents an <br>intriguing heuristic</br> in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
                "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better.",
                "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
                "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.)",
                "Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers.",
                "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium.",
                "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
                "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
                "Truthful auctions for pricing search keywords.",
                "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
                "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
                "Dynamics of bid optimization in online advertisement auctions.",
                "Proc.",
                "WWW 2007. [4] E. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
                "Internet Advertising and the Generalized Second Price Auction: Selling Billions of Dollars Worth of Keywords.",
                "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
                "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
                "Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP.",
                "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
                "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
                "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
                "Stochastic models for budget optimization in search-based advertising.",
                "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
                "Computational Geometry: An Introduction.",
                "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
                "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
                "Counterspeculation, auctions and competitive-sealed tenders.",
                "Journal of Finance, 16(1):8-37, 1961. 49"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Observaciones finales Nuestro resultado algorítmico presenta una \"heurística intrigante\" en la práctica: ofertar un valor único B en todas las palabras clave;Al final del día, si el presupuesto está bajo giro, ajuste B para que sea más alto;Si el presupuesto es excesivo, ajuste B para que sea más bajo;más, mantenga b."
            ],
            "translated_text": "",
            "candidates": [
                "HEURÍSTICA INTRIGACIÓN",
                "heurística intrigante"
            ],
            "error": []
        },
        "keyword": {
            "translated_key": "palabra clave",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Budget Optimization in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an auction.",
                "While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the Internet company.",
                "In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
                "We model the entire process and study this budget optimization problem.",
                "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well.",
                "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
                "As our preliminary experiments show, such uniform strategies are likely to be practical.",
                "We also present inapproximability results, and optimal algorithms for variants of the budget optimization problem.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
                "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
                "In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
                "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
                "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
                "It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied.",
                "Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc.",
                "The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers.",
                "The challenge from an advertisers point of view is to understand and interact with the auction mechanism.",
                "The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each <br>keyword</br>, and provide a total (often daily) budget.",
                "When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction.",
                "The advertiser whose ad appears pays the Internet search company if the user clicks on the ad.",
                "The focus in this paper is on how the advertisers bid.",
                "For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign.",
                "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks.",
                "The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations.",
                "Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their <br>keyword</br> choices interactively.",
                "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
                "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad <br>keyword</br> that matches many user queries and has many competing advertisers, humane fishing bait is a niche <br>keyword</br> that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain.",
                "In effect the advertiser ends up competing with herself.",
                "As a result, the advertisers face a challenging optimization problem.",
                "The focus of this paper is to solve this optimization problem. 1.1 The Budget Optimization Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
                "A given advertiser sees the state of the auctions for searchbased advertising as follows.",
                "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
                "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section.",
                "There is a bipartite graph G on the two vertex sets representing K and Q.",
                "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget optimization problem is as follows.",
                "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each <br>keyword</br> k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the <br>keyword</br> bids in the neighborhood of q.",
                "While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
                "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
                "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
                "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
                "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget optimization problem.",
                "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
                "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget optimization problem.",
                "The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
                "We show that this approximation ratio is tight for uniform strategies.",
                "We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.)",
                "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
                "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
                "After all, the optimum can configure arbitrary bids on each of the keywords.",
                "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
                "So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum.",
                "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
                "We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
                "By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
                "We have conducted simulations using real auction data from Google.",
                "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
                "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
                "MODELING A <br>keyword</br> AUCTION We describe an auction from an advertisers point of view.",
                "An advertiser bids on a <br>keyword</br>, which we can think of as a word or set of words.",
                "Users of the search engine submit queries.",
                "If the query matches a <br>keyword</br> that has been bid on by an advertiser, then the advertiser is entered into an auction for the available ad slots on the results page.",
                "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single bid for a <br>keyword</br> that remains in effect for a period of time, say one day.",
                "The <br>keyword</br> could match many different user queries throughout the day.",
                "Each user query might have a different set of advertisers competing for clicks.",
                "The advertiser could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
                "The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget.",
                "We now formalize a model of <br>keyword</br> bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single <br>keyword</br> that matches a single user query.",
                "In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9].",
                "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
                "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
                "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
                "The ctr can be measured empirically using past history.",
                "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
                "In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a bid on a <br>keyword</br> that matches the users query.",
                "We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each <br>keyword</br>.",
                "We assume that the auction is a generalized second price (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of bid, and each advertiser is assigned a price equal to the amount bid by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
                "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction.",
                "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
                "Since the auction is a generalized second price auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
                "Suppose that we bid b on some <br>keyword</br> that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction.",
                "In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
                "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7].",
                "Each auction mechanism will result in a different sort of optimization problem.",
                "In the conclusion we point out that for the VCG auction, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
                "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
                "We use R+ to denote the nonnegative reals.",
                "Observation 1.",
                "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
                "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
                "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
                "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
                "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
                "For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
                "Here we graph clicks as a function of cost.",
                "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
                "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
                "This condition is slightly weaker than concavity.",
                "Suppose we would like to solve the budget optimization problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget.",
                "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
                "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00.",
                "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
                "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
                "Let B be a distribution on bids b ∈ R+.",
                "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
                "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
                "This is represented in Figure 1 by the dashed line.",
                "To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
                "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
                "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
                "Summarizing, Lemma 1.",
                "If an advertiser is bidding on one <br>keyword</br>, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
                "There is one subtlety in this formulation.",
                "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
                "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
                "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
                "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
                "Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
                "We want to bid on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
                "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
                "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another.",
                "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
                "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
                "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
                "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
                "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 <br>keyword</br> Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a bid on two different keywords that match the same query, this conflict must be resolved somehow.",
                "For example, if an advertiser has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
                "The search engine specifies, in advance, a rule for resolution based on the query the <br>keyword</br> and the bid.",
                "A natural rule is to take the <br>keyword</br> with the highest bid, which we adopt here, but our results apply to other resolution rules.",
                "We model the <br>keyword</br> interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
                "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
                "An edge (k, q) ∈ E means that <br>keyword</br> k matches query q.",
                "The advertiser can control their individual <br>keyword</br> bid vector a ∈ R |K| + specifying a bid ak for each <br>keyword</br> k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
                "Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak.",
                "By submitting a bid vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each <br>keyword</br>.",
                "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over bid vectors a ∈ R |K| + .",
                "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget Optimization Input: a budget U, a <br>keyword</br>-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
                "Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
                "We conclude this section with a small example to illustrate some feature of the budget optimization problem.",
                "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
                "Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1.",
                "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must bid at least $1 on u.",
                "However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective bid is $1 on both x and y.",
                "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
                "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget Optimization problem in its full generality is difficult.",
                "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors.",
                "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
                "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
                "We define a uniform bidding strategy to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
                "In other words, each vector in the distribution bids the same value on every <br>keyword</br>.",
                "Uniform strategies have several advantages.",
                "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
                "Thus, they are effective in the face of limited or noisy information about the <br>keyword</br> interaction graph.",
                "Second, uniform strategies are also independent of the priority rule being used.",
                "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
                "We now show that we can compute the best uniform strategy efficiently.",
                "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
                "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
                "We can index the points in I as b1, . . . , bN in increasing order.",
                "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
                "For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape.",
                "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
                "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
                "The resulting strategy is the convex combination of two points on the aggregate landscape.",
                "Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors.",
                "We have shown Lemma 2.",
                "Given an instance of Budget Optimization in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
                "Furthermore, this strategy will always be a two-bid strategy.",
                "Putting these ideas together, we get an O(N log N)-time algorithm for Budget Optimization, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
                "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
                "Find the convex hull of the points in the aggregate landscape. 3.",
                "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
                "Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β.",
                "We will also consider a special case of two-bid strategies.",
                "A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
                "A single-bid strategy is even easier to implement in practice than a two-bid strategy.",
                "For example, the search engines often allow advertisers to set a maximum daily budget.",
                "In this case, the advertiser would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
                "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
                "The best single-bid strategy can also be computed easily from the aggregate landscape.",
                "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
                "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
                "In section we prove that there is always a good uniform strategy: Theorem 3.",
                "There always exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "We introduce the notion of a click-price curve, which is central to our analysis.",
                "This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape.",
                "Consider an adversarial bidder Ω with the power to bid independently on each query.",
                "Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords.",
                "Suppose this strategy bids b∗ q for each query q.",
                "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
                "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
                "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
                "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
                "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
                "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
                "Note that the area of each step is costq(b∗ q ).",
                "The following claim follows immediately: Claim 1.",
                "UΩ = R CΩ 0 h(r)dr.",
                "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
                "The click-price curve says that if we bid h(r ) on every <br>keyword</br> (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
                "Note that by bidding h(r ) on every <br>keyword</br>, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
                "However, all of these extra clicks still cost at most h(r ) per click.",
                "Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every <br>keyword</br>, we receive at least r traffic at a total spend of at most h(r ) per click.",
                "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
                "We summarize this discussion in the following lemma: Lemma 4.",
                "For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
                "Lemma 4 describes a landscape as a continuous function.",
                "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
                "Lemma 5.",
                "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget Optimization with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
                "Proof.",
                "Construct an instance as follows.",
                "Let > 0 be a small number that we will later define in terms of .",
                "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
                "The graph is a matching with one <br>keyword</br> per query, and so we can imagine the optimal solution as bidding on queries.",
                "The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
                "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
                "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal.",
                "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
                "Theorem 6.",
                "There always exists a uniform single-bid strategy that is 1 2 -optimal.",
                "Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof.",
                "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
                "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
                "We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero.",
                "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
                "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
                "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α.",
                "The budget is U = 1 + α.",
                "The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1.",
                "This achieves a total of 2α clicks and spends the budget exactly.",
                "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
                "Any single-bid solution that uses as its non-zero bid gets at most α clicks.",
                "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
                "Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid.",
                "This results in at most α(1 + α) clicks.",
                "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
                "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
                "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
                "After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
                "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve.",
                "Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks.",
                "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
                "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
                "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
                "Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
                "In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
                "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
                "Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget Optimization exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
                "A binary search yields the smallest such α where the objective is exactly U.",
                "To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
                "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
                "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
                "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
                "Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
                "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
                "Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
                "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
                "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
                "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
                "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
                "Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "We now show that no uniform strategy can do better.",
                "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
                "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
                "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
                "Thus, this curve corresponds to an instance where UΩ = 1.",
                "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost.",
                "Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance.",
                "By Lemma 1 there is always a two-bid optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids.",
                "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
                "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
                "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
                "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
                "We turn to the case u > 0.",
                "Here we have pu = v−α v−u and pv = α−u v−u .",
                "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
                "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
                "The final inequality follows from α > 1 − 1 e .",
                "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
                "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
                "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy.",
                "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
                "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution.",
                "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
                "The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice.",
                "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful.",
                "However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5.",
                "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
                "Budget Optimization is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
                "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
                "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
                "Call this the Weighted <br>keyword</br> Bidding problem.",
                "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
                "Theorem 8.",
                "The Weighted <br>keyword</br> Bidding problem is hard to approximate to within (1 − 1/e). 6.",
                "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget optimization problem exactly.",
                "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
                "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
                "We first show that to solve the Budget Optimization problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
                "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
                "Lemma 9.",
                "Let I be an input to the Budget Optimization problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
                "Then we can find the optimal solution in time O(U log U).",
                "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
                "Given a <br>keyword</br> interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each <br>keyword</br> k. If this collection of sets if laminar, we say that the graph has the laminar property.",
                "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical <br>keyword</br> set (e.g., shoes, highheel shoes, athletic shoes).",
                "We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors.",
                "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
                "Lemma 10.",
                "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget Optimization problem with ai ≥ aj.",
                "We can view the laminar order as a tree with <br>keyword</br> j as a parent of <br>keyword</br> i if Qj is the minimal set containing Qi.",
                "In this case we say that j is a child of i.",
                "Given a <br>keyword</br> j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
                "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
                "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each <br>keyword</br> has at most 2 children.",
                "Lemma 11.",
                "Let G be a graph with the laminar property.",
                "There exists another graph G with the same optimal solution to the Budget Optimization problem, where each node has at most two children in the laminar ordering.",
                "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
                "Qj ⊆ Qi (and exactly b on <br>keyword</br> i) while spending at most U.",
                "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a <br>keyword</br> i and a bid ai, compute an incremental spend and traffic associated with bidding ai on <br>keyword</br> i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
                "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
                "Lemma 12.",
                "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget Optimization problem exactly in O(B3 U3 n) time.",
                "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
                "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
                "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget Optimization problem in O(B3 U3 n) time.",
                "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
                "For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent).",
                "Doing so yields the obvious improvement in the bounds. 7.",
                "BID OPTIMIZATION UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search.",
                "Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
                "In this section we argue that the budget optimization problem is easy under the VCG auction.",
                "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
                "For the sake of the budget optimization problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
                "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i].",
                "We claim that in the VCG auction, the landscapes are convex.",
                "To see this, consider two consecutive positions i,i + 1.",
                "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
                "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
                "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
                "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
                "But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid.",
                "Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords.",
                "We conclude that the best uniform bid is an optimal solution to the budget optimization problem. 8.",
                "CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
                "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better.",
                "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
                "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.)",
                "Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers.",
                "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium.",
                "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
                "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
                "Truthful auctions for pricing search keywords.",
                "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
                "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
                "Dynamics of bid optimization in online advertisement auctions.",
                "Proc.",
                "WWW 2007. [4] E. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
                "Internet Advertising and the Generalized Second Price Auction: Selling Billions of Dollars Worth of Keywords.",
                "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
                "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
                "Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP.",
                "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
                "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
                "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
                "Stochastic models for budget optimization in search-based advertising.",
                "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
                "Computational Geometry: An Introduction.",
                "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
                "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
                "Counterspeculation, auctions and competitive-sealed tenders.",
                "Journal of Finance, 16(1):8-37, 1961. 49"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El anunciante determina un conjunto de palabras clave de su interés y luego debe crear anuncios, establecer las ofertas para cada \"palabra clave\" y proporcionar un presupuesto total (a menudo diario).",
                "Las compañías de búsqueda en Internet brindan a los anunciantes resúmenes del tráfico de consulta que es útil para que optimicen sus opciones de \"palabra clave\" de manera interactiva.",
                "Aún así, este es un problema complejo por las siguientes razones (entre otras): • Las palabras clave individuales tienen características significativamente diferentes entre sí;Por ejemplo, aunque la pesca es una amplia \"palabra clave\" que coincide con muchas consultas de usuarios y tiene muchos anunciantes competidores, el cebo de pesca humana es una \"palabra clave\" de nicho que coincide solo con unas pocas consultas, pero podría tener menos competencia.• Hay interacciones complejas entre las palabras clave porque una consulta de usuario puede coincidir con dos o más palabras clave, ya que el anunciante está tratando de cubrir todas las palabras clave posibles en algún dominio.",
                "Dado el gráfico G junto con las funciones ClickSq (·) y Costq (·) en las consultas, así como un presupuesto U, determine las ofertas BK para cada \"palabra clave\" k ∈ K de modo que P Q Clicksq (BQ) se maximice sujetoa P Q CostQ (BQ) ≤ U, donde la oferta efectiva BQ en una consulta es alguna función de las ofertas de \"palabra clave\" en el vecindario de q.",
                "Modelando una subasta de \"palabra clave\" describimos una subasta desde el punto de vista del anunciante.",
                "Un anunciante ofrece una \"palabra clave\", que podemos pensar como una palabra o un conjunto de palabras.",
                "Si la consulta coincide con una \"palabra clave\" que un anunciante ha ofertado, entonces el anunciante se ingresa en una subasta para las ranuras de anuncios disponibles en la página de resultados.",
                "Lo que constituye una coincidencia varía según el motor de búsqueda.3 Este tipo de estrategia también se puede interpretar como un valor de oferta (en todas las palabras clave) para parte del día y un valor diferente para el resto del día.41 Un anunciante hace una sola oferta para una \"palabra clave\" que permanece vigente por un período de tiempo, digamos un día.",
                "La \"palabra clave\" podría coincidir con muchas consultas de usuarios diferentes durante todo el día.",
                "Ahora formalizamos un modelo de oferta de \"palabras clave\" y definimos un problema de optimización que captura este objetivo.2.1 Paisajes comenzamos considerando el caso de una única \"palabra clave\" que coincida con una sola consulta de usuario.",
                "Para colocar un anuncio en esta página, debemos ingresar la subasta que se lleva a cabo entre todos los anunciantes que han presentado una oferta por una \"palabra clave\" que coincida con la consulta de los usuarios.",
                "Nos referiremos a una subasta como una subasta de consulta, para enfatizar que hay una subasta para cada consulta en lugar de cada \"palabra clave\".",
                "Supongamos que ofrecemos B en alguna \"palabra clave\" que coincida con la consulta de los usuarios, entonces nuestra posición está definida por la B [i] más grande que es como máximo B, es decir, pos (b) = arg max I (b [i]: b [i] ≤ b).(1) Dado que solo pagamos si el usuario hace clic (y eso sucede con probabilidad α [i]), nuestro costo esperado para ganar la posición I 4 Google, Yahoo!y MSN usan alguna variante de la subasta GSP.",
                "",
                "Sin embargo, dado que cada curva es cóncava, las piezas que provienen de una curva de consulta particular están en un orden creciente de costo por clic;Por lo tanto, de cada paisaje hemos elegido para nuestra mochila un conjunto de piezas que forman un prefijo de la curva.2.2 Interacción de \"palabra clave\" En la realidad, los anunciantes de búsqueda pueden ofertar en un gran conjunto de palabras clave, cada una de ellas calificando para un conjunto de consultas diferente (posiblemente superpuesto), pero la mayoría de los motores de búsqueda no permiten que un anunciante aparezca dos veces en la misma búsquedaPágina de resultados.7 Por lo tanto, si un anunciante tiene una oferta en dos palabras clave diferentes que coinciden con la misma consulta, este conflicto debe resolverse de alguna manera.",
                "El motor de búsqueda especifica, por adelantado, una regla de resolución basada en la consulta de la \"palabra clave\" y la oferta.",
                "Una regla natural es tomar la \"palabra clave\" con la oferta más alta, que adoptamos aquí, pero nuestros resultados se aplican a otras reglas de resolución.",
                "Modelamos el problema de interacción de \"palabra clave\" utilizando un gráfico bipartito no dirigido G = (k ∪ q, e) donde k es un conjunto de palabras clave y Q es un conjunto de consultas.",
                "Un borde (k, q) ∈ E significa que la \"palabra clave\" k coincide con consulta q.",
                "",
                "Al enviar un vector de oferta A, el anunciante recibe unos 7 ver https://adwords.google.com/support/bin/answer.Py? Respuesta = 14179, por ejemplo.43 Número de clics y paga algún costo en cada \"palabra clave\".",
                "El gasto y el tráfico resultantes están dados por el gasto (a) = ea∼A [gasto (a)];tráfico (a) = ea∼A [tráfico (a)] Ahora podemos establecer el problema en su generalidad completa: entrada de optimización del presupuesto: un presupuesto u, una gráfica de \"palabra clave\" g = (k ∪ q, e),y paisajes (costq (·), clicksq (·)) para cada q ∈ Q.",
                "En otras palabras, cada vector en la distribución ofrece el mismo valor en cada \"palabra clave\".",
                "Por lo tanto, son efectivos frente a la información limitada o ruidosa sobre el gráfico de interacción de \"palabra clave\".",
                "La curva de precio del clic dice que si ofertamos h (r) en cada \"palabra clave\" (y por lo tanto cada consulta), obtenemos al menos el tráfico R, ya que esta oferta aseguraría que para todas las Q tal que b ∗ q ≤ h (r) Ganamos tantos clics como Ω.",
                "Tenga en cuenta que al ofertar h (r) en cada \"palabra clave\", en realidad podemos obtener aún más del tráfico R, ya que para las consultas q donde b ∗ q es mucho menor que h (r) podemos ganar más clics que Ω.",
                "Por lo tanto, vemos que para cualquier r ∈ [0, Cω], si ofertó h (r) en cada \"palabra clave\", recibimos al menos r tráfico a un gasto total de a lo sumo H (r) por clic.",
                "El gráfico es una coincidencia con una \"palabra clave\" por consulta, por lo que podemos imaginar la solución óptima como oferta en consultas.",
                "Llame a esto el problema de licitación de \"palabra clave\" ponderada.",
                "El problema de licitación de \"palabra clave\" ponderada es difícil de aproximar dentro (1 - 1/e).6.",
                "Dada un gráfico de interacción \"Palabra clave\" G, asociamos un conjunto de consultas vecinas qk = {q: (k, q) ∈ E} con cada \"palabra clave\" k.Si esta colección de conjuntos si es laminar, decimos que el gráfico tiene la propiedad laminar.",
                "Tenga en cuenta que un gráfico de interacción laminar se caería naturalmente como consecuencia de diseñar un conjunto jerárquico de \"palabra clave\" (por ejemplo, zapatos, zapatos de alta resistencia, zapatos atléticos).",
                "Podemos ver el orden laminar como un árbol con \"Palabra clave\" J como padre de \"Palabra clave\" I Si QJ es el conjunto mínimo que contiene Qi.",
                "Dada una \"palabra clave\" J con C Children i1 ,..., IC, ahora necesitamos enumerar sobre todas las formas de asignar el presupuesto entre los niños y también en todas las posibles ofertas mínimas para los niños.",
                "Podemos resolver este problema demostrando que, dado cualquier orden laminar, hay una equivalente en la que cada \"palabra clave\" tiene como máximo 2 hijos.",
                "",
                "Para esta definición, usamos z (b, u) para denotar un conjunto de ofertas y presupuestos permitidos sobre niños: z (b, u) = {b, b, u, u: b ≥ b, u ≤ u, b ≥ b, U ≤ u, u + u ≤ u} dada una \"palabra clave\" i y una oferta ai, calcule un gasto incremental y el tráfico asociado con la oferta ai en \"palabra clave\" i, es decir ˆt (i, ai) = x q∈Qi \\ Qi - 1 Clicksq (ai), y ˆs (i, ai) = x q∈Qi \\ qi - 1 costoq (ai)."
            ],
            "translated_text": "",
            "candidates": [
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabras clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "Palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "Palabra clave",
                "palabra clave",
                "palabra clave",
                "Palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "Palabra clave",
                "Palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave",
                "",
                "Palabra clave",
                "palabra clave",
                "palabra clave",
                "palabra clave"
            ],
            "error": []
        },
        "uniform bidding strategy": {
            "translated_key": "Estrategia de licitación uniforme",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Budget Optimization in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an auction.",
                "While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the Internet company.",
                "In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
                "We model the entire process and study this budget optimization problem.",
                "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well.",
                "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
                "As our preliminary experiments show, such uniform strategies are likely to be practical.",
                "We also present inapproximability results, and optimal algorithms for variants of the budget optimization problem.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
                "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
                "In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
                "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
                "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
                "It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied.",
                "Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc.",
                "The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers.",
                "The challenge from an advertisers point of view is to understand and interact with the auction mechanism.",
                "The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget.",
                "When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction.",
                "The advertiser whose ad appears pays the Internet search company if the user clicks on the ad.",
                "The focus in this paper is on how the advertisers bid.",
                "For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign.",
                "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks.",
                "The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations.",
                "Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively.",
                "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
                "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain.",
                "In effect the advertiser ends up competing with herself.",
                "As a result, the advertisers face a challenging optimization problem.",
                "The focus of this paper is to solve this optimization problem. 1.1 The Budget Optimization Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
                "A given advertiser sees the state of the auctions for searchbased advertising as follows.",
                "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
                "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section.",
                "There is a bipartite graph G on the two vertex sets representing K and Q.",
                "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget optimization problem is as follows.",
                "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the keyword bids in the neighborhood of q.",
                "While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
                "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
                "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
                "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
                "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget optimization problem.",
                "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
                "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget optimization problem.",
                "The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
                "We show that this approximation ratio is tight for uniform strategies.",
                "We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.)",
                "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
                "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
                "After all, the optimum can configure arbitrary bids on each of the keywords.",
                "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
                "So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum.",
                "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
                "We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
                "By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
                "We have conducted simulations using real auction data from Google.",
                "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
                "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
                "MODELING A KEYWORD AUCTION We describe an auction from an advertisers point of view.",
                "An advertiser bids on a keyword, which we can think of as a word or set of words.",
                "Users of the search engine submit queries.",
                "If the query matches a keyword that has been bid on by an advertiser, then the advertiser is entered into an auction for the available ad slots on the results page.",
                "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single bid for a keyword that remains in effect for a period of time, say one day.",
                "The keyword could match many different user queries throughout the day.",
                "Each user query might have a different set of advertisers competing for clicks.",
                "The advertiser could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
                "The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget.",
                "We now formalize a model of keyword bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query.",
                "In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9].",
                "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
                "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
                "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
                "The ctr can be measured empirically using past history.",
                "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
                "In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a bid on a keyword that matches the users query.",
                "We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each keyword.",
                "We assume that the auction is a generalized second price (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of bid, and each advertiser is assigned a price equal to the amount bid by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
                "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction.",
                "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
                "Since the auction is a generalized second price auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
                "Suppose that we bid b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction.",
                "In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
                "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7].",
                "Each auction mechanism will result in a different sort of optimization problem.",
                "In the conclusion we point out that for the VCG auction, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
                "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
                "We use R+ to denote the nonnegative reals.",
                "Observation 1.",
                "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
                "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
                "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
                "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
                "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
                "For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
                "Here we graph clicks as a function of cost.",
                "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
                "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
                "This condition is slightly weaker than concavity.",
                "Suppose we would like to solve the budget optimization problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget.",
                "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
                "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00.",
                "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
                "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
                "Let B be a distribution on bids b ∈ R+.",
                "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
                "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
                "This is represented in Figure 1 by the dashed line.",
                "To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
                "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
                "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
                "Summarizing, Lemma 1.",
                "If an advertiser is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
                "There is one subtlety in this formulation.",
                "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
                "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
                "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
                "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
                "Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
                "We want to bid on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
                "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
                "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another.",
                "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
                "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
                "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
                "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
                "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a bid on two different keywords that match the same query, this conflict must be resolved somehow.",
                "For example, if an advertiser has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
                "The search engine specifies, in advance, a rule for resolution based on the query the keyword and the bid.",
                "A natural rule is to take the keyword with the highest bid, which we adopt here, but our results apply to other resolution rules.",
                "We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
                "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
                "An edge (k, q) ∈ E means that keyword k matches query q.",
                "The advertiser can control their individual keyword bid vector a ∈ R |K| + specifying a bid ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
                "Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak.",
                "By submitting a bid vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword.",
                "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over bid vectors a ∈ R |K| + .",
                "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget Optimization Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
                "Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
                "We conclude this section with a small example to illustrate some feature of the budget optimization problem.",
                "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
                "Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1.",
                "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must bid at least $1 on u.",
                "However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective bid is $1 on both x and y.",
                "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
                "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget Optimization problem in its full generality is difficult.",
                "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors.",
                "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
                "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
                "We define a <br>uniform bidding strategy</br> to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
                "In other words, each vector in the distribution bids the same value on every keyword.",
                "Uniform strategies have several advantages.",
                "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
                "Thus, they are effective in the face of limited or noisy information about the keyword interaction graph.",
                "Second, uniform strategies are also independent of the priority rule being used.",
                "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
                "We now show that we can compute the best uniform strategy efficiently.",
                "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
                "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
                "We can index the points in I as b1, . . . , bN in increasing order.",
                "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
                "For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape.",
                "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
                "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
                "The resulting strategy is the convex combination of two points on the aggregate landscape.",
                "Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors.",
                "We have shown Lemma 2.",
                "Given an instance of Budget Optimization in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
                "Furthermore, this strategy will always be a two-bid strategy.",
                "Putting these ideas together, we get an O(N log N)-time algorithm for Budget Optimization, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
                "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
                "Find the convex hull of the points in the aggregate landscape. 3.",
                "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
                "Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β.",
                "We will also consider a special case of two-bid strategies.",
                "A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
                "A single-bid strategy is even easier to implement in practice than a two-bid strategy.",
                "For example, the search engines often allow advertisers to set a maximum daily budget.",
                "In this case, the advertiser would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
                "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
                "The best single-bid strategy can also be computed easily from the aggregate landscape.",
                "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
                "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
                "In section we prove that there is always a good uniform strategy: Theorem 3.",
                "There always exists a <br>uniform bidding strategy</br> that is (1 − 1 e )-optimal.",
                "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "We introduce the notion of a click-price curve, which is central to our analysis.",
                "This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape.",
                "Consider an adversarial bidder Ω with the power to bid independently on each query.",
                "Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords.",
                "Suppose this strategy bids b∗ q for each query q.",
                "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
                "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
                "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
                "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
                "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
                "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
                "Note that the area of each step is costq(b∗ q ).",
                "The following claim follows immediately: Claim 1.",
                "UΩ = R CΩ 0 h(r)dr.",
                "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
                "The click-price curve says that if we bid h(r ) on every keyword (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
                "Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
                "However, all of these extra clicks still cost at most h(r ) per click.",
                "Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click.",
                "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
                "We summarize this discussion in the following lemma: Lemma 4.",
                "For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
                "Lemma 4 describes a landscape as a continuous function.",
                "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
                "Lemma 5.",
                "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget Optimization with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
                "Proof.",
                "Construct an instance as follows.",
                "Let > 0 be a small number that we will later define in terms of .",
                "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
                "The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries.",
                "The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
                "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
                "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal.",
                "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
                "Theorem 6.",
                "There always exists a uniform single-bid strategy that is 1 2 -optimal.",
                "Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof.",
                "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
                "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
                "We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero.",
                "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
                "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
                "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α.",
                "The budget is U = 1 + α.",
                "The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1.",
                "This achieves a total of 2α clicks and spends the budget exactly.",
                "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
                "Any single-bid solution that uses as its non-zero bid gets at most α clicks.",
                "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
                "Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid.",
                "This results in at most α(1 + α) clicks.",
                "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
                "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
                "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
                "After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
                "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve.",
                "Consider the adversarys problem of finding a click-price curve for which no <br>uniform bidding strategy</br> can achieve αCΩ clicks.",
                "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
                "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
                "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
                "Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
                "In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
                "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
                "Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget Optimization exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
                "A binary search yields the smallest such α where the objective is exactly U.",
                "To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
                "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
                "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
                "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
                "Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate <br>uniform bidding strategy</br>, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
                "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
                "Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
                "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
                "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
                "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
                "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
                "Thus we have shown that there exists a <br>uniform bidding strategy</br> that is (1 − 1 e )-optimal.",
                "We now show that no uniform strategy can do better.",
                "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
                "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
                "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
                "Thus, this curve corresponds to an instance where UΩ = 1.",
                "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost.",
                "Suppose for the sake of contradiction that there exists a <br>uniform bidding strategy</br> that achieves α > 1−e−1 traffic on this instance.",
                "By Lemma 1 there is always a two-bid optimal <br>uniform bidding strategy</br> and so we may assume that the strategy achieving α clicks randomizes over two bids.",
                "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
                "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
                "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
                "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
                "We turn to the case u > 0.",
                "Here we have pu = v−α v−u and pv = α−u v−u .",
                "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
                "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
                "The final inequality follows from α > 1 − 1 e .",
                "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
                "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
                "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy.",
                "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
                "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution.",
                "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
                "The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice.",
                "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful.",
                "However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5.",
                "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
                "Budget Optimization is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
                "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
                "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
                "Call this the Weighted Keyword Bidding problem.",
                "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
                "Theorem 8.",
                "The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6.",
                "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget optimization problem exactly.",
                "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
                "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
                "We first show that to solve the Budget Optimization problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
                "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
                "Lemma 9.",
                "Let I be an input to the Budget Optimization problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
                "Then we can find the optimal solution in time O(U log U).",
                "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
                "Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property.",
                "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes).",
                "We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors.",
                "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
                "Lemma 10.",
                "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget Optimization problem with ai ≥ aj.",
                "We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi.",
                "In this case we say that j is a child of i.",
                "Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
                "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
                "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children.",
                "Lemma 11.",
                "Let G be a graph with the laminar property.",
                "There exists another graph G with the same optimal solution to the Budget Optimization problem, where each node has at most two children in the laminar ordering.",
                "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
                "Qj ⊆ Qi (and exactly b on keyword i) while spending at most U.",
                "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a bid ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
                "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
                "Lemma 12.",
                "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget Optimization problem exactly in O(B3 U3 n) time.",
                "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
                "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
                "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget Optimization problem in O(B3 U3 n) time.",
                "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
                "For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent).",
                "Doing so yields the obvious improvement in the bounds. 7.",
                "BID OPTIMIZATION UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search.",
                "Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
                "In this section we argue that the budget optimization problem is easy under the VCG auction.",
                "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
                "For the sake of the budget optimization problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
                "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i].",
                "We claim that in the VCG auction, the landscapes are convex.",
                "To see this, consider two consecutive positions i,i + 1.",
                "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
                "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
                "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
                "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
                "But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid.",
                "Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords.",
                "We conclude that the best uniform bid is an optimal solution to the budget optimization problem. 8.",
                "CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
                "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better.",
                "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
                "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.)",
                "Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers.",
                "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium.",
                "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
                "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
                "Truthful auctions for pricing search keywords.",
                "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
                "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
                "Dynamics of bid optimization in online advertisement auctions.",
                "Proc.",
                "WWW 2007. [4] E. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
                "Internet Advertising and the Generalized Second Price Auction: Selling Billions of Dollars Worth of Keywords.",
                "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
                "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
                "Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP.",
                "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
                "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
                "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
                "Stochastic models for budget optimization in search-based advertising.",
                "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
                "Computational Geometry: An Introduction.",
                "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
                "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
                "Counterspeculation, auctions and competitive-sealed tenders.",
                "Journal of Finance, 16(1):8-37, 1961. 49"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Definimos una \"estrategia de licitación uniforme\" para que sea una distribución de Vectores de Over Bid a ∈ R | K |+ donde cada vector de oferta en la distribución es de la forma (b, b, ..., b) para alguna oferta de valor real b.",
                "Siempre existe una \"estrategia de licitación uniforme\" que es (1-1 e) -ptimal.",
                "Considere el problema de los adversarios de encontrar una curva de precio de clic para la cual ninguna \"estrategia de licitación uniforme\" puede lograr clics αCω.",
                "Curiosamente, la equivalencia entre este Polyitope y el LP Dual anterior muestra que hay una mezcla sobre los valores r ∈ [0, C] que logra una apropiación α para cualquier curva h.Después de una búsqueda del α apropiado (que resultó ser 1 - 1 e), resolvimos estos dos LP y se les ocurrió las parcelas en la Figura 3, que revelan no solo la relación de aproximación correcta, sino también una imagen de lo peor-Distribución del caso y la estrategia de rendimiento de aproximación.9 De la PIC9 Los parámetros U y CΩ se pueden establecer arbitrariamente utilizando argumentos de escala.46 0 0 C/E C 0 0 C/E C Figura 3: La peor curva de precio de clics y (1-1/e) -Aproximate \"Estrategia de licitación uniforme\", como se encuentra por la programación lineal.Tures, pudimos adivinar rápidamente la estrategia óptima y el peor ejemplo de caso.4.3.2 Prueba del teorema 3 por Lemma 4, sabemos que para cada R ≤ Uω, hay una estrategia que puede obtener el tráfico R al costo R · H (R).",
                "Por lo tanto, hemos demostrado que existe una \"estrategia de licitación uniforme\" que es (1-1 e) -pálal.",
                "Supongamos en aras de la contradicción que existe una \"estrategia de licitación uniforme\" que logra el tráfico α> 1 -E -1 en este caso.",
                "Por el Lema 1 siempre hay una \"estrategia de licitación uniforme\" óptima de dos licivaciones, por lo que podemos suponer que la estrategia que logran los clics α aleatoriza en dos ofertas."
            ],
            "translated_text": "",
            "candidates": [
                "Estrategia de licitación uniforme",
                "estrategia de licitación uniforme",
                "Estrategia de licitación uniforme",
                "estrategia de licitación uniforme",
                "Estrategia de licitación uniforme",
                "estrategia de licitación uniforme",
                "Estrategia de licitación uniforme",
                "Estrategia de licitación uniforme",
                "Estrategia de licitación uniforme",
                "estrategia de licitación uniforme",
                "Estrategia de licitación uniforme",
                "estrategia de licitación uniforme",
                "Estrategia de licitación uniforme",
                "estrategia de licitación uniforme"
            ],
            "error": []
        },
        "vickrey clark grove": {
            "translated_key": "Vickrey Clark Grove",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Budget Optimization in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an auction.",
                "While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the Internet company.",
                "In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
                "We model the entire process and study this budget optimization problem.",
                "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well.",
                "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
                "As our preliminary experiments show, such uniform strategies are likely to be practical.",
                "We also present inapproximability results, and optimal algorithms for variants of the budget optimization problem.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
                "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
                "In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
                "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
                "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
                "It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied.",
                "Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc.",
                "The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers.",
                "The challenge from an advertisers point of view is to understand and interact with the auction mechanism.",
                "The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget.",
                "When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction.",
                "The advertiser whose ad appears pays the Internet search company if the user clicks on the ad.",
                "The focus in this paper is on how the advertisers bid.",
                "For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign.",
                "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks.",
                "The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations.",
                "Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively.",
                "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
                "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain.",
                "In effect the advertiser ends up competing with herself.",
                "As a result, the advertisers face a challenging optimization problem.",
                "The focus of this paper is to solve this optimization problem. 1.1 The Budget Optimization Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
                "A given advertiser sees the state of the auctions for searchbased advertising as follows.",
                "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
                "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section.",
                "There is a bipartite graph G on the two vertex sets representing K and Q.",
                "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget optimization problem is as follows.",
                "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the keyword bids in the neighborhood of q.",
                "While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
                "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
                "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
                "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
                "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget optimization problem.",
                "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
                "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget optimization problem.",
                "The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
                "We show that this approximation ratio is tight for uniform strategies.",
                "We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.)",
                "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
                "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
                "After all, the optimum can configure arbitrary bids on each of the keywords.",
                "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
                "So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum.",
                "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
                "We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
                "By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
                "We have conducted simulations using real auction data from Google.",
                "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
                "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
                "MODELING A KEYWORD AUCTION We describe an auction from an advertisers point of view.",
                "An advertiser bids on a keyword, which we can think of as a word or set of words.",
                "Users of the search engine submit queries.",
                "If the query matches a keyword that has been bid on by an advertiser, then the advertiser is entered into an auction for the available ad slots on the results page.",
                "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single bid for a keyword that remains in effect for a period of time, say one day.",
                "The keyword could match many different user queries throughout the day.",
                "Each user query might have a different set of advertisers competing for clicks.",
                "The advertiser could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
                "The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget.",
                "We now formalize a model of keyword bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query.",
                "In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9].",
                "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
                "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
                "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
                "The ctr can be measured empirically using past history.",
                "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
                "In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a bid on a keyword that matches the users query.",
                "We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each keyword.",
                "We assume that the auction is a generalized second price (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of bid, and each advertiser is assigned a price equal to the amount bid by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
                "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction.",
                "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
                "Since the auction is a generalized second price auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
                "Suppose that we bid b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction.",
                "In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
                "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7].",
                "Each auction mechanism will result in a different sort of optimization problem.",
                "In the conclusion we point out that for the VCG auction, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
                "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
                "We use R+ to denote the nonnegative reals.",
                "Observation 1.",
                "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
                "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
                "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
                "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
                "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
                "For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
                "Here we graph clicks as a function of cost.",
                "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
                "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
                "This condition is slightly weaker than concavity.",
                "Suppose we would like to solve the budget optimization problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget.",
                "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
                "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00.",
                "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
                "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
                "Let B be a distribution on bids b ∈ R+.",
                "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
                "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
                "This is represented in Figure 1 by the dashed line.",
                "To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
                "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
                "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
                "Summarizing, Lemma 1.",
                "If an advertiser is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
                "There is one subtlety in this formulation.",
                "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
                "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
                "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
                "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
                "Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
                "We want to bid on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
                "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
                "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another.",
                "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
                "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
                "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
                "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
                "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a bid on two different keywords that match the same query, this conflict must be resolved somehow.",
                "For example, if an advertiser has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
                "The search engine specifies, in advance, a rule for resolution based on the query the keyword and the bid.",
                "A natural rule is to take the keyword with the highest bid, which we adopt here, but our results apply to other resolution rules.",
                "We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
                "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
                "An edge (k, q) ∈ E means that keyword k matches query q.",
                "The advertiser can control their individual keyword bid vector a ∈ R |K| + specifying a bid ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
                "Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak.",
                "By submitting a bid vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword.",
                "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over bid vectors a ∈ R |K| + .",
                "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget Optimization Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
                "Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
                "We conclude this section with a small example to illustrate some feature of the budget optimization problem.",
                "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
                "Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1.",
                "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must bid at least $1 on u.",
                "However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective bid is $1 on both x and y.",
                "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
                "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget Optimization problem in its full generality is difficult.",
                "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors.",
                "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
                "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
                "We define a uniform bidding strategy to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
                "In other words, each vector in the distribution bids the same value on every keyword.",
                "Uniform strategies have several advantages.",
                "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
                "Thus, they are effective in the face of limited or noisy information about the keyword interaction graph.",
                "Second, uniform strategies are also independent of the priority rule being used.",
                "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
                "We now show that we can compute the best uniform strategy efficiently.",
                "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
                "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
                "We can index the points in I as b1, . . . , bN in increasing order.",
                "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
                "For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape.",
                "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
                "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
                "The resulting strategy is the convex combination of two points on the aggregate landscape.",
                "Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors.",
                "We have shown Lemma 2.",
                "Given an instance of Budget Optimization in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
                "Furthermore, this strategy will always be a two-bid strategy.",
                "Putting these ideas together, we get an O(N log N)-time algorithm for Budget Optimization, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
                "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
                "Find the convex hull of the points in the aggregate landscape. 3.",
                "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
                "Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β.",
                "We will also consider a special case of two-bid strategies.",
                "A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
                "A single-bid strategy is even easier to implement in practice than a two-bid strategy.",
                "For example, the search engines often allow advertisers to set a maximum daily budget.",
                "In this case, the advertiser would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
                "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
                "The best single-bid strategy can also be computed easily from the aggregate landscape.",
                "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
                "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
                "In section we prove that there is always a good uniform strategy: Theorem 3.",
                "There always exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "We introduce the notion of a click-price curve, which is central to our analysis.",
                "This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape.",
                "Consider an adversarial bidder Ω with the power to bid independently on each query.",
                "Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords.",
                "Suppose this strategy bids b∗ q for each query q.",
                "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
                "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
                "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
                "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
                "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
                "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
                "Note that the area of each step is costq(b∗ q ).",
                "The following claim follows immediately: Claim 1.",
                "UΩ = R CΩ 0 h(r)dr.",
                "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
                "The click-price curve says that if we bid h(r ) on every keyword (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
                "Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
                "However, all of these extra clicks still cost at most h(r ) per click.",
                "Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click.",
                "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
                "We summarize this discussion in the following lemma: Lemma 4.",
                "For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
                "Lemma 4 describes a landscape as a continuous function.",
                "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
                "Lemma 5.",
                "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget Optimization with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
                "Proof.",
                "Construct an instance as follows.",
                "Let > 0 be a small number that we will later define in terms of .",
                "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
                "The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries.",
                "The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
                "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
                "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal.",
                "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
                "Theorem 6.",
                "There always exists a uniform single-bid strategy that is 1 2 -optimal.",
                "Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof.",
                "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
                "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
                "We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero.",
                "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
                "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
                "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α.",
                "The budget is U = 1 + α.",
                "The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1.",
                "This achieves a total of 2α clicks and spends the budget exactly.",
                "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
                "Any single-bid solution that uses as its non-zero bid gets at most α clicks.",
                "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
                "Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid.",
                "This results in at most α(1 + α) clicks.",
                "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
                "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
                "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
                "After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
                "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve.",
                "Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks.",
                "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
                "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
                "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
                "Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
                "In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
                "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
                "Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget Optimization exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
                "A binary search yields the smallest such α where the objective is exactly U.",
                "To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
                "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
                "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
                "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
                "Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
                "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
                "Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
                "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
                "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
                "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
                "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
                "Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "We now show that no uniform strategy can do better.",
                "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
                "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
                "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
                "Thus, this curve corresponds to an instance where UΩ = 1.",
                "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost.",
                "Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance.",
                "By Lemma 1 there is always a two-bid optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids.",
                "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
                "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
                "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
                "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
                "We turn to the case u > 0.",
                "Here we have pu = v−α v−u and pv = α−u v−u .",
                "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
                "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
                "The final inequality follows from α > 1 − 1 e .",
                "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
                "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
                "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy.",
                "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
                "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution.",
                "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
                "The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice.",
                "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful.",
                "However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5.",
                "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
                "Budget Optimization is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
                "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
                "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
                "Call this the Weighted Keyword Bidding problem.",
                "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
                "Theorem 8.",
                "The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6.",
                "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget optimization problem exactly.",
                "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
                "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
                "We first show that to solve the Budget Optimization problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
                "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
                "Lemma 9.",
                "Let I be an input to the Budget Optimization problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
                "Then we can find the optimal solution in time O(U log U).",
                "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
                "Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property.",
                "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes).",
                "We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors.",
                "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
                "Lemma 10.",
                "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget Optimization problem with ai ≥ aj.",
                "We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi.",
                "In this case we say that j is a child of i.",
                "Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
                "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
                "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children.",
                "Lemma 11.",
                "Let G be a graph with the laminar property.",
                "There exists another graph G with the same optimal solution to the Budget Optimization problem, where each node has at most two children in the laminar ordering.",
                "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
                "Qj ⊆ Qi (and exactly b on keyword i) while spending at most U.",
                "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a bid ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
                "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
                "Lemma 12.",
                "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget Optimization problem exactly in O(B3 U3 n) time.",
                "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
                "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
                "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget Optimization problem in O(B3 U3 n) time.",
                "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
                "For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent).",
                "Doing so yields the obvious improvement in the bounds. 7.",
                "BID OPTIMIZATION UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search.",
                "Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
                "In this section we argue that the budget optimization problem is easy under the VCG auction.",
                "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
                "For the sake of the budget optimization problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
                "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i].",
                "We claim that in the VCG auction, the landscapes are convex.",
                "To see this, consider two consecutive positions i,i + 1.",
                "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
                "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
                "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
                "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
                "But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid.",
                "Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords.",
                "We conclude that the best uniform bid is an optimal solution to the budget optimization problem. 8.",
                "CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
                "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better.",
                "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
                "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.)",
                "Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers.",
                "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium.",
                "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
                "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
                "Truthful auctions for pricing search keywords.",
                "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
                "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
                "Dynamics of bid optimization in online advertisement auctions.",
                "Proc.",
                "WWW 2007. [4] E. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
                "Internet Advertising and the Generalized Second Price Auction: Selling Billions of Dollars Worth of Keywords.",
                "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
                "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
                "Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP.",
                "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
                "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
                "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
                "Stochastic models for budget optimization in search-based advertising.",
                "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
                "Computational Geometry: An Introduction.",
                "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
                "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
                "Counterspeculation, auctions and competitive-sealed tenders.",
                "Journal of Finance, 16(1):8-37, 1961. 49"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "lp": {
            "translated_key": "LP",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Budget Optimization in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an auction.",
                "While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the Internet company.",
                "In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
                "We model the entire process and study this budget optimization problem.",
                "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well.",
                "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
                "As our preliminary experiments show, such uniform strategies are likely to be practical.",
                "We also present inapproximability results, and optimal algorithms for variants of the budget optimization problem.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
                "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
                "In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
                "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
                "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
                "It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied.",
                "Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc.",
                "The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers.",
                "The challenge from an advertisers point of view is to understand and interact with the auction mechanism.",
                "The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget.",
                "When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction.",
                "The advertiser whose ad appears pays the Internet search company if the user clicks on the ad.",
                "The focus in this paper is on how the advertisers bid.",
                "For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign.",
                "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks.",
                "The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations.",
                "Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively.",
                "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
                "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain.",
                "In effect the advertiser ends up competing with herself.",
                "As a result, the advertisers face a challenging optimization problem.",
                "The focus of this paper is to solve this optimization problem. 1.1 The Budget Optimization Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
                "A given advertiser sees the state of the auctions for searchbased advertising as follows.",
                "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
                "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section.",
                "There is a bipartite graph G on the two vertex sets representing K and Q.",
                "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget optimization problem is as follows.",
                "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the keyword bids in the neighborhood of q.",
                "While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
                "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
                "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
                "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
                "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget optimization problem.",
                "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
                "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget optimization problem.",
                "The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
                "We show that this approximation ratio is tight for uniform strategies.",
                "We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.)",
                "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
                "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
                "After all, the optimum can configure arbitrary bids on each of the keywords.",
                "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
                "So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum.",
                "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
                "We define a factor-revealing <br>lp</br> (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
                "By deriving the optimal solution to this <br>lp</br>, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
                "We have conducted simulations using real auction data from Google.",
                "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
                "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
                "MODELING A KEYWORD AUCTION We describe an auction from an advertisers point of view.",
                "An advertiser bids on a keyword, which we can think of as a word or set of words.",
                "Users of the search engine submit queries.",
                "If the query matches a keyword that has been bid on by an advertiser, then the advertiser is entered into an auction for the available ad slots on the results page.",
                "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single bid for a keyword that remains in effect for a period of time, say one day.",
                "The keyword could match many different user queries throughout the day.",
                "Each user query might have a different set of advertisers competing for clicks.",
                "The advertiser could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
                "The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget.",
                "We now formalize a model of keyword bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query.",
                "In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9].",
                "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
                "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
                "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
                "The ctr can be measured empirically using past history.",
                "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
                "In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a bid on a keyword that matches the users query.",
                "We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each keyword.",
                "We assume that the auction is a generalized second price (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of bid, and each advertiser is assigned a price equal to the amount bid by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
                "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction.",
                "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
                "Since the auction is a generalized second price auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
                "Suppose that we bid b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction.",
                "In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
                "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7].",
                "Each auction mechanism will result in a different sort of optimization problem.",
                "In the conclusion we point out that for the VCG auction, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
                "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
                "We use R+ to denote the nonnegative reals.",
                "Observation 1.",
                "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
                "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
                "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
                "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
                "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
                "For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
                "Here we graph clicks as a function of cost.",
                "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
                "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
                "This condition is slightly weaker than concavity.",
                "Suppose we would like to solve the budget optimization problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget.",
                "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
                "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00.",
                "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
                "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
                "Let B be a distribution on bids b ∈ R+.",
                "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
                "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
                "This is represented in Figure 1 by the dashed line.",
                "To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
                "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
                "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
                "Summarizing, Lemma 1.",
                "If an advertiser is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
                "There is one subtlety in this formulation.",
                "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
                "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
                "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
                "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
                "Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
                "We want to bid on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
                "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
                "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another.",
                "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
                "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
                "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
                "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
                "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a bid on two different keywords that match the same query, this conflict must be resolved somehow.",
                "For example, if an advertiser has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
                "The search engine specifies, in advance, a rule for resolution based on the query the keyword and the bid.",
                "A natural rule is to take the keyword with the highest bid, which we adopt here, but our results apply to other resolution rules.",
                "We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
                "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
                "An edge (k, q) ∈ E means that keyword k matches query q.",
                "The advertiser can control their individual keyword bid vector a ∈ R |K| + specifying a bid ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
                "Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak.",
                "By submitting a bid vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword.",
                "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over bid vectors a ∈ R |K| + .",
                "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget Optimization Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
                "Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
                "We conclude this section with a small example to illustrate some feature of the budget optimization problem.",
                "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
                "Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1.",
                "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must bid at least $1 on u.",
                "However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective bid is $1 on both x and y.",
                "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
                "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget Optimization problem in its full generality is difficult.",
                "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors.",
                "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
                "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
                "We define a uniform bidding strategy to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
                "In other words, each vector in the distribution bids the same value on every keyword.",
                "Uniform strategies have several advantages.",
                "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
                "Thus, they are effective in the face of limited or noisy information about the keyword interaction graph.",
                "Second, uniform strategies are also independent of the priority rule being used.",
                "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
                "We now show that we can compute the best uniform strategy efficiently.",
                "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
                "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
                "We can index the points in I as b1, . . . , bN in increasing order.",
                "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
                "For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape.",
                "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
                "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
                "The resulting strategy is the convex combination of two points on the aggregate landscape.",
                "Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors.",
                "We have shown Lemma 2.",
                "Given an instance of Budget Optimization in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
                "Furthermore, this strategy will always be a two-bid strategy.",
                "Putting these ideas together, we get an O(N log N)-time algorithm for Budget Optimization, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
                "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
                "Find the convex hull of the points in the aggregate landscape. 3.",
                "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
                "Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β.",
                "We will also consider a special case of two-bid strategies.",
                "A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
                "A single-bid strategy is even easier to implement in practice than a two-bid strategy.",
                "For example, the search engines often allow advertisers to set a maximum daily budget.",
                "In this case, the advertiser would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
                "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
                "The best single-bid strategy can also be computed easily from the aggregate landscape.",
                "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
                "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
                "In section we prove that there is always a good uniform strategy: Theorem 3.",
                "There always exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "We introduce the notion of a click-price curve, which is central to our analysis.",
                "This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape.",
                "Consider an adversarial bidder Ω with the power to bid independently on each query.",
                "Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords.",
                "Suppose this strategy bids b∗ q for each query q.",
                "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
                "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
                "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
                "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
                "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
                "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
                "Note that the area of each step is costq(b∗ q ).",
                "The following claim follows immediately: Claim 1.",
                "UΩ = R CΩ 0 h(r)dr.",
                "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
                "The click-price curve says that if we bid h(r ) on every keyword (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
                "Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
                "However, all of these extra clicks still cost at most h(r ) per click.",
                "Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click.",
                "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
                "We summarize this discussion in the following lemma: Lemma 4.",
                "For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
                "Lemma 4 describes a landscape as a continuous function.",
                "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
                "Lemma 5.",
                "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget Optimization with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
                "Proof.",
                "Construct an instance as follows.",
                "Let > 0 be a small number that we will later define in terms of .",
                "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
                "The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries.",
                "The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
                "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
                "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal.",
                "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
                "Theorem 6.",
                "There always exists a uniform single-bid strategy that is 1 2 -optimal.",
                "Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof.",
                "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
                "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
                "We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero.",
                "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
                "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
                "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α.",
                "The budget is U = 1 + α.",
                "The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1.",
                "This achieves a total of 2α clicks and spends the budget exactly.",
                "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
                "Any single-bid solution that uses as its non-zero bid gets at most α clicks.",
                "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
                "Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid.",
                "This results in at most α(1 + α) clicks.",
                "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
                "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
                "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
                "After solving the <br>lp</br> numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
                "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An <br>lp</br> for the worst-case click-price curve.",
                "Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks.",
                "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
                "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
                "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
                "Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
                "In the <br>lp</br>, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
                "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following <br>lp</br> over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this <br>lp</br>, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
                "Solving this <br>lp</br> for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget Optimization exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
                "A binary search yields the smallest such α where the objective is exactly U.",
                "To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
                "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
                "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
                "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
                "Interestingly, the equivalence between this polytope and the <br>lp</br> dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
                "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
                "Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
                "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
                "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
                "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
                "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
                "Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "We now show that no uniform strategy can do better.",
                "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
                "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
                "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
                "Thus, this curve corresponds to an instance where UΩ = 1.",
                "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost.",
                "Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance.",
                "By Lemma 1 there is always a two-bid optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids.",
                "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
                "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
                "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
                "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
                "We turn to the case u > 0.",
                "Here we have pu = v−α v−u and pv = α−u v−u .",
                "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
                "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
                "The final inequality follows from α > 1 − 1 e .",
                "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
                "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
                "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy.",
                "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
                "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution.",
                "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
                "The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice.",
                "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful.",
                "However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5.",
                "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
                "Budget Optimization is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
                "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
                "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
                "Call this the Weighted Keyword Bidding problem.",
                "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
                "Theorem 8.",
                "The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6.",
                "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget optimization problem exactly.",
                "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
                "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
                "We first show that to solve the Budget Optimization problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
                "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
                "Lemma 9.",
                "Let I be an input to the Budget Optimization problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
                "Then we can find the optimal solution in time O(U log U).",
                "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
                "Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property.",
                "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes).",
                "We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors.",
                "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
                "Lemma 10.",
                "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget Optimization problem with ai ≥ aj.",
                "We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi.",
                "In this case we say that j is a child of i.",
                "Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
                "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
                "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children.",
                "Lemma 11.",
                "Let G be a graph with the laminar property.",
                "There exists another graph G with the same optimal solution to the Budget Optimization problem, where each node has at most two children in the laminar ordering.",
                "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
                "Qj ⊆ Qi (and exactly b on keyword i) while spending at most U.",
                "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a bid ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
                "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
                "Lemma 12.",
                "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget Optimization problem exactly in O(B3 U3 n) time.",
                "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
                "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
                "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget Optimization problem in O(B3 U3 n) time.",
                "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
                "For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent).",
                "Doing so yields the obvious improvement in the bounds. 7.",
                "BID OPTIMIZATION UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search.",
                "Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
                "In this section we argue that the budget optimization problem is easy under the VCG auction.",
                "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
                "For the sake of the budget optimization problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
                "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i].",
                "We claim that in the VCG auction, the landscapes are convex.",
                "To see this, consider two consecutive positions i,i + 1.",
                "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
                "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
                "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
                "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
                "But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid.",
                "Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords.",
                "We conclude that the best uniform bid is an optimal solution to the budget optimization problem. 8.",
                "CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
                "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better.",
                "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
                "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.)",
                "Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers.",
                "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium.",
                "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
                "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
                "Truthful auctions for pricing search keywords.",
                "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
                "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
                "Dynamics of bid optimization in online advertisement auctions.",
                "Proc.",
                "WWW 2007. [4] E. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
                "Internet Advertising and the Generalized Second Price Auction: Selling Billions of Dollars Worth of Keywords.",
                "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
                "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
                "Greedy facility location algorithms analyzed using dual fitting with factor-revealing <br>lp</br>.",
                "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
                "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
                "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
                "Stochastic models for budget optimization in search-based advertising.",
                "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
                "Computational Geometry: An Introduction.",
                "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
                "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
                "Counterspeculation, auctions and competitive-sealed tenders.",
                "Journal of Finance, 16(1):8-37, 1961. 49"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Definimos un \"LP\" de revelación de factores (Sección 4) donde las soluciones primarias corresponden a posibles instancias, y las soluciones duales corresponden a distribuciones sobre estrategias de licitación.",
                "Al derivar la solución óptima a este \"LP\", obtenemos tanto la prueba de la relación de aproximación como una apretada instancia de peor caso.",
                "Después de resolver el \"LP\" numéricamente, también pudimos ver que existe una estrategia uniforme para el jugador que siempre obtiene (1 - 1 e) clic en CΩ;y luego de la solución pudieron adivinar fácilmente la distribución óptima.",
                "Esta metodología es similar a la utilizada en el trabajo en LPS de revelación de factores [8, 10].4.3.1 Un \"LP\" para la peor curva de precio de clic.",
                "En el \"LP\", en realidad calculará una distribución sobre pares de estrategias en S, que luego interpretaremos como una distribución sobre las estrategias.",
                "Usando este conjunto de estrategias uniformes como restricciones, podemos caracterizar un conjunto de curvas de precio de clic en el peor de los casos mediante las restricciones Z cΩ 0 H (r) dr ≤ u ∀ (u, v) ∈ S p1 (u, v) uh(u) + p2 (u, v) vh (v) ≥ u una curva h que satisface estas restricciones tiene la propiedad de que todas las estrategias uniformes que obtienen clics αCΩ gastan más que U. Discretición de este conjunto de desigualdades e impulsando la primera restricción a la primera restricciónLa función objetivo, obtenemos las siguientes \"LP\" sobre las variables HR que representa la curva: min x r∈ {0 ,, 2, ..., cω} · hr s.t.∀ (u, v) ∈ S, p1 (u, v) uhu + p2 (u, v) vhv ≥ u en este \"lp\", s se define en el dominio discreto como s = {(u, v) ∈ {0 ,, 2 ,..., CΩ} 2: 0 ≤ u ≤ αCΩ ≤ v ≤ cω}.",
                "Resolviendo este \"LP\" para un α particular, si obtenemos un objetivo menos que U, sabemos (hasta cierta discretización) que existe una instancia de optimización del presupuesto que no puede ser aproximada mejor que α.(La instancia se construye como en la prueba del lema 5.)",
                "Curiosamente, la equivalencia entre este Polyitope y el Dual \"LP\" anterior muestra que hay una mezcla sobre los valores r ∈ [0, C] que logra una aplicación α para cualquier curva h.Después de una búsqueda del α apropiado (que resultó ser 1 - 1 e), resolvimos estos dos LP y se les ocurrió las parcelas en la Figura 3, que revelan no solo la relación de aproximación correcta, sino también una imagen de lo peor-Distribución del caso y la estrategia de rendimiento de aproximación.9 De la PIC9 Los parámetros U y CΩ se pueden establecer arbitrariamente utilizando argumentos de escala.46 0 0 C/E C 0 0 C/E C Figura 3: La peor curva de precio de clics y (1-1/e)-Strategio de ofertas uniformes de uniforme, como se encuentra mediante programación lineal.Tures, pudimos adivinar rápidamente la estrategia óptima y el peor ejemplo de caso.4.3.2 Prueba del teorema 3 por Lemma 4, sabemos que para cada R ≤ Uω, hay una estrategia que puede obtener el tráfico R al costo R · H (R).",
                "Algoritmos de ubicación de la instalación codiciosa analizados con el ajuste dual con \"LP\" de revelación de factores."
            ],
            "translated_text": "",
            "candidates": [
                "LP",
                "LP",
                "LP",
                "LP",
                "LP",
                "LP",
                "LP",
                "LP",
                "LP",
                "LP",
                "LP",
                "LP",
                "lp",
                "LP",
                "LP",
                "LP",
                "LP",
                "LP",
                "LP"
            ],
            "error": []
        },
        "generalized second price": {
            "translated_key": "segundo precio generalizado",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Budget Optimization in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an auction.",
                "While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the Internet company.",
                "In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
                "We model the entire process and study this budget optimization problem.",
                "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well.",
                "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
                "As our preliminary experiments show, such uniform strategies are likely to be practical.",
                "We also present inapproximability results, and optimal algorithms for variants of the budget optimization problem.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
                "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
                "In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
                "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
                "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
                "It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied.",
                "Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc.",
                "The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers.",
                "The challenge from an advertisers point of view is to understand and interact with the auction mechanism.",
                "The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget.",
                "When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction.",
                "The advertiser whose ad appears pays the Internet search company if the user clicks on the ad.",
                "The focus in this paper is on how the advertisers bid.",
                "For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign.",
                "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks.",
                "The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations.",
                "Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively.",
                "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
                "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain.",
                "In effect the advertiser ends up competing with herself.",
                "As a result, the advertisers face a challenging optimization problem.",
                "The focus of this paper is to solve this optimization problem. 1.1 The Budget Optimization Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
                "A given advertiser sees the state of the auctions for searchbased advertising as follows.",
                "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
                "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section.",
                "There is a bipartite graph G on the two vertex sets representing K and Q.",
                "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget optimization problem is as follows.",
                "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the keyword bids in the neighborhood of q.",
                "While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
                "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
                "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
                "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
                "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget optimization problem.",
                "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
                "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget optimization problem.",
                "The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
                "We show that this approximation ratio is tight for uniform strategies.",
                "We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.)",
                "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
                "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
                "After all, the optimum can configure arbitrary bids on each of the keywords.",
                "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
                "So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum.",
                "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
                "We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
                "By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
                "We have conducted simulations using real auction data from Google.",
                "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
                "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
                "MODELING A KEYWORD AUCTION We describe an auction from an advertisers point of view.",
                "An advertiser bids on a keyword, which we can think of as a word or set of words.",
                "Users of the search engine submit queries.",
                "If the query matches a keyword that has been bid on by an advertiser, then the advertiser is entered into an auction for the available ad slots on the results page.",
                "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single bid for a keyword that remains in effect for a period of time, say one day.",
                "The keyword could match many different user queries throughout the day.",
                "Each user query might have a different set of advertisers competing for clicks.",
                "The advertiser could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
                "The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget.",
                "We now formalize a model of keyword bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query.",
                "In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9].",
                "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
                "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
                "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
                "The ctr can be measured empirically using past history.",
                "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
                "In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a bid on a keyword that matches the users query.",
                "We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each keyword.",
                "We assume that the auction is a <br>generalized second price</br> (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of bid, and each advertiser is assigned a price equal to the amount bid by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
                "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction.",
                "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
                "Since the auction is a <br>generalized second price</br> auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
                "Suppose that we bid b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction.",
                "In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
                "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7].",
                "Each auction mechanism will result in a different sort of optimization problem.",
                "In the conclusion we point out that for the VCG auction, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
                "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
                "We use R+ to denote the nonnegative reals.",
                "Observation 1.",
                "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
                "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
                "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
                "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
                "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
                "For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
                "Here we graph clicks as a function of cost.",
                "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
                "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
                "This condition is slightly weaker than concavity.",
                "Suppose we would like to solve the budget optimization problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget.",
                "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
                "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00.",
                "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
                "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
                "Let B be a distribution on bids b ∈ R+.",
                "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
                "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
                "This is represented in Figure 1 by the dashed line.",
                "To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
                "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
                "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
                "Summarizing, Lemma 1.",
                "If an advertiser is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
                "There is one subtlety in this formulation.",
                "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
                "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
                "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
                "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
                "Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
                "We want to bid on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
                "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
                "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another.",
                "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
                "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
                "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
                "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
                "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a bid on two different keywords that match the same query, this conflict must be resolved somehow.",
                "For example, if an advertiser has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
                "The search engine specifies, in advance, a rule for resolution based on the query the keyword and the bid.",
                "A natural rule is to take the keyword with the highest bid, which we adopt here, but our results apply to other resolution rules.",
                "We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
                "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
                "An edge (k, q) ∈ E means that keyword k matches query q.",
                "The advertiser can control their individual keyword bid vector a ∈ R |K| + specifying a bid ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
                "Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak.",
                "By submitting a bid vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword.",
                "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over bid vectors a ∈ R |K| + .",
                "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget Optimization Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
                "Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
                "We conclude this section with a small example to illustrate some feature of the budget optimization problem.",
                "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
                "Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1.",
                "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must bid at least $1 on u.",
                "However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective bid is $1 on both x and y.",
                "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
                "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget Optimization problem in its full generality is difficult.",
                "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors.",
                "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
                "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
                "We define a uniform bidding strategy to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
                "In other words, each vector in the distribution bids the same value on every keyword.",
                "Uniform strategies have several advantages.",
                "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
                "Thus, they are effective in the face of limited or noisy information about the keyword interaction graph.",
                "Second, uniform strategies are also independent of the priority rule being used.",
                "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
                "We now show that we can compute the best uniform strategy efficiently.",
                "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
                "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
                "We can index the points in I as b1, . . . , bN in increasing order.",
                "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
                "For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape.",
                "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
                "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
                "The resulting strategy is the convex combination of two points on the aggregate landscape.",
                "Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors.",
                "We have shown Lemma 2.",
                "Given an instance of Budget Optimization in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
                "Furthermore, this strategy will always be a two-bid strategy.",
                "Putting these ideas together, we get an O(N log N)-time algorithm for Budget Optimization, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
                "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
                "Find the convex hull of the points in the aggregate landscape. 3.",
                "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
                "Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β.",
                "We will also consider a special case of two-bid strategies.",
                "A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
                "A single-bid strategy is even easier to implement in practice than a two-bid strategy.",
                "For example, the search engines often allow advertisers to set a maximum daily budget.",
                "In this case, the advertiser would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
                "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
                "The best single-bid strategy can also be computed easily from the aggregate landscape.",
                "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
                "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
                "In section we prove that there is always a good uniform strategy: Theorem 3.",
                "There always exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "We introduce the notion of a click-price curve, which is central to our analysis.",
                "This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape.",
                "Consider an adversarial bidder Ω with the power to bid independently on each query.",
                "Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords.",
                "Suppose this strategy bids b∗ q for each query q.",
                "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
                "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
                "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
                "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
                "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
                "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
                "Note that the area of each step is costq(b∗ q ).",
                "The following claim follows immediately: Claim 1.",
                "UΩ = R CΩ 0 h(r)dr.",
                "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
                "The click-price curve says that if we bid h(r ) on every keyword (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
                "Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
                "However, all of these extra clicks still cost at most h(r ) per click.",
                "Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click.",
                "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
                "We summarize this discussion in the following lemma: Lemma 4.",
                "For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
                "Lemma 4 describes a landscape as a continuous function.",
                "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
                "Lemma 5.",
                "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget Optimization with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
                "Proof.",
                "Construct an instance as follows.",
                "Let > 0 be a small number that we will later define in terms of .",
                "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
                "The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries.",
                "The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
                "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
                "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal.",
                "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
                "Theorem 6.",
                "There always exists a uniform single-bid strategy that is 1 2 -optimal.",
                "Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof.",
                "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
                "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
                "We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero.",
                "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
                "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
                "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α.",
                "The budget is U = 1 + α.",
                "The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1.",
                "This achieves a total of 2α clicks and spends the budget exactly.",
                "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
                "Any single-bid solution that uses as its non-zero bid gets at most α clicks.",
                "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
                "Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid.",
                "This results in at most α(1 + α) clicks.",
                "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
                "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
                "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
                "After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
                "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve.",
                "Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks.",
                "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
                "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
                "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
                "Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
                "In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
                "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
                "Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget Optimization exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
                "A binary search yields the smallest such α where the objective is exactly U.",
                "To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
                "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
                "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
                "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
                "Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
                "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
                "Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
                "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
                "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
                "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
                "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
                "Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "We now show that no uniform strategy can do better.",
                "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
                "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
                "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
                "Thus, this curve corresponds to an instance where UΩ = 1.",
                "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost.",
                "Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance.",
                "By Lemma 1 there is always a two-bid optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids.",
                "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
                "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
                "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
                "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
                "We turn to the case u > 0.",
                "Here we have pu = v−α v−u and pv = α−u v−u .",
                "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
                "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
                "The final inequality follows from α > 1 − 1 e .",
                "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
                "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
                "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy.",
                "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
                "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution.",
                "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
                "The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice.",
                "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful.",
                "However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5.",
                "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
                "Budget Optimization is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
                "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
                "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
                "Call this the Weighted Keyword Bidding problem.",
                "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
                "Theorem 8.",
                "The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6.",
                "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget optimization problem exactly.",
                "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
                "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
                "We first show that to solve the Budget Optimization problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
                "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
                "Lemma 9.",
                "Let I be an input to the Budget Optimization problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
                "Then we can find the optimal solution in time O(U log U).",
                "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
                "Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property.",
                "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes).",
                "We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors.",
                "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
                "Lemma 10.",
                "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget Optimization problem with ai ≥ aj.",
                "We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi.",
                "In this case we say that j is a child of i.",
                "Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
                "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
                "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children.",
                "Lemma 11.",
                "Let G be a graph with the laminar property.",
                "There exists another graph G with the same optimal solution to the Budget Optimization problem, where each node has at most two children in the laminar ordering.",
                "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
                "Qj ⊆ Qi (and exactly b on keyword i) while spending at most U.",
                "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a bid ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
                "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
                "Lemma 12.",
                "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget Optimization problem exactly in O(B3 U3 n) time.",
                "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
                "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
                "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget Optimization problem in O(B3 U3 n) time.",
                "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
                "For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent).",
                "Doing so yields the obvious improvement in the bounds. 7.",
                "BID OPTIMIZATION UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search.",
                "Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
                "In this section we argue that the budget optimization problem is easy under the VCG auction.",
                "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
                "For the sake of the budget optimization problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
                "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i].",
                "We claim that in the VCG auction, the landscapes are convex.",
                "To see this, consider two consecutive positions i,i + 1.",
                "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
                "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
                "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
                "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
                "But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid.",
                "Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords.",
                "We conclude that the best uniform bid is an optimal solution to the budget optimization problem. 8.",
                "CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
                "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better.",
                "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
                "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.)",
                "Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers.",
                "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium.",
                "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
                "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
                "Truthful auctions for pricing search keywords.",
                "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
                "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
                "Dynamics of bid optimization in online advertisement auctions.",
                "Proc.",
                "WWW 2007. [4] E. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
                "Internet Advertising and the <br>generalized second price</br> Auction: Selling Billions of Dollars Worth of Keywords.",
                "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
                "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
                "Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP.",
                "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
                "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
                "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
                "Stochastic models for budget optimization in search-based advertising.",
                "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
                "Computational Geometry: An Introduction.",
                "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
                "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
                "Counterspeculation, auctions and competitive-sealed tenders.",
                "Journal of Finance, 16(1):8-37, 1961. 49"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Suponemos que la subasta es una subasta de \"segundo precio generalizado\" (GSP) [5, 7]: a los anunciantes se clasifican en orden decreciente de oferta, y a cada anunciante se le asigna un precio igual al monto de la oferta del anunciante debajo de ellosLa clasificación.4 En subastas de búsqueda patrocinadas, este anunciante solo paga si el usuario realmente hace clic en el anuncio.",
                "Dado que la subasta es una subasta de \"segundo precio generalizado\", las ofertas más altas ganan posiciones más altas;es decir, b [i] ≥ b [i + 1].",
                "Publicidad en Internet y la subasta de \"segundo precio generalizado\": venta de miles de millones de dólares en palabras clave."
            ],
            "translated_text": "",
            "candidates": [
                "segundo precio generalizado",
                "segundo precio generalizado",
                "segundo precio generalizado",
                "segundo precio generalizado",
                "segundo precio generalizado",
                "segundo precio generalizado"
            ],
            "error": []
        },
        "sponsor search": {
            "translated_key": "búsqueda de patrocinador",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Budget Optimization in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an auction.",
                "While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the Internet company.",
                "In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
                "We model the entire process and study this budget optimization problem.",
                "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well.",
                "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
                "As our preliminary experiments show, such uniform strategies are likely to be practical.",
                "We also present inapproximability results, and optimal algorithms for variants of the budget optimization problem.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
                "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
                "In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
                "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
                "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
                "It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied.",
                "Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc.",
                "The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers.",
                "The challenge from an advertisers point of view is to understand and interact with the auction mechanism.",
                "The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget.",
                "When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction.",
                "The advertiser whose ad appears pays the Internet search company if the user clicks on the ad.",
                "The focus in this paper is on how the advertisers bid.",
                "For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign.",
                "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks.",
                "The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations.",
                "Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively.",
                "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
                "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain.",
                "In effect the advertiser ends up competing with herself.",
                "As a result, the advertisers face a challenging optimization problem.",
                "The focus of this paper is to solve this optimization problem. 1.1 The Budget Optimization Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
                "A given advertiser sees the state of the auctions for searchbased advertising as follows.",
                "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
                "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section.",
                "There is a bipartite graph G on the two vertex sets representing K and Q.",
                "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget optimization problem is as follows.",
                "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the keyword bids in the neighborhood of q.",
                "While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
                "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
                "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
                "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
                "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget optimization problem.",
                "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
                "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget optimization problem.",
                "The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
                "We show that this approximation ratio is tight for uniform strategies.",
                "We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.)",
                "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
                "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
                "After all, the optimum can configure arbitrary bids on each of the keywords.",
                "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
                "So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum.",
                "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
                "We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
                "By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
                "We have conducted simulations using real auction data from Google.",
                "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
                "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
                "MODELING A KEYWORD AUCTION We describe an auction from an advertisers point of view.",
                "An advertiser bids on a keyword, which we can think of as a word or set of words.",
                "Users of the search engine submit queries.",
                "If the query matches a keyword that has been bid on by an advertiser, then the advertiser is entered into an auction for the available ad slots on the results page.",
                "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single bid for a keyword that remains in effect for a period of time, say one day.",
                "The keyword could match many different user queries throughout the day.",
                "Each user query might have a different set of advertisers competing for clicks.",
                "The advertiser could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
                "The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget.",
                "We now formalize a model of keyword bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query.",
                "In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9].",
                "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
                "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
                "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
                "The ctr can be measured empirically using past history.",
                "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
                "In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a bid on a keyword that matches the users query.",
                "We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each keyword.",
                "We assume that the auction is a generalized second price (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of bid, and each advertiser is assigned a price equal to the amount bid by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
                "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction.",
                "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
                "Since the auction is a generalized second price auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
                "Suppose that we bid b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction.",
                "In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
                "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7].",
                "Each auction mechanism will result in a different sort of optimization problem.",
                "In the conclusion we point out that for the VCG auction, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
                "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
                "We use R+ to denote the nonnegative reals.",
                "Observation 1.",
                "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
                "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
                "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
                "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
                "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
                "For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
                "Here we graph clicks as a function of cost.",
                "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
                "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
                "This condition is slightly weaker than concavity.",
                "Suppose we would like to solve the budget optimization problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget.",
                "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
                "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00.",
                "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
                "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
                "Let B be a distribution on bids b ∈ R+.",
                "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
                "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
                "This is represented in Figure 1 by the dashed line.",
                "To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
                "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
                "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
                "Summarizing, Lemma 1.",
                "If an advertiser is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
                "There is one subtlety in this formulation.",
                "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
                "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
                "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
                "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
                "Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
                "We want to bid on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
                "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
                "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another.",
                "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
                "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
                "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
                "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
                "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a bid on two different keywords that match the same query, this conflict must be resolved somehow.",
                "For example, if an advertiser has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
                "The search engine specifies, in advance, a rule for resolution based on the query the keyword and the bid.",
                "A natural rule is to take the keyword with the highest bid, which we adopt here, but our results apply to other resolution rules.",
                "We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
                "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
                "An edge (k, q) ∈ E means that keyword k matches query q.",
                "The advertiser can control their individual keyword bid vector a ∈ R |K| + specifying a bid ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
                "Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak.",
                "By submitting a bid vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword.",
                "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over bid vectors a ∈ R |K| + .",
                "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget Optimization Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
                "Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
                "We conclude this section with a small example to illustrate some feature of the budget optimization problem.",
                "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
                "Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1.",
                "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must bid at least $1 on u.",
                "However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective bid is $1 on both x and y.",
                "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
                "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget Optimization problem in its full generality is difficult.",
                "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors.",
                "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
                "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
                "We define a uniform bidding strategy to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
                "In other words, each vector in the distribution bids the same value on every keyword.",
                "Uniform strategies have several advantages.",
                "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
                "Thus, they are effective in the face of limited or noisy information about the keyword interaction graph.",
                "Second, uniform strategies are also independent of the priority rule being used.",
                "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
                "We now show that we can compute the best uniform strategy efficiently.",
                "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
                "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
                "We can index the points in I as b1, . . . , bN in increasing order.",
                "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
                "For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape.",
                "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
                "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
                "The resulting strategy is the convex combination of two points on the aggregate landscape.",
                "Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors.",
                "We have shown Lemma 2.",
                "Given an instance of Budget Optimization in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
                "Furthermore, this strategy will always be a two-bid strategy.",
                "Putting these ideas together, we get an O(N log N)-time algorithm for Budget Optimization, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
                "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
                "Find the convex hull of the points in the aggregate landscape. 3.",
                "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
                "Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β.",
                "We will also consider a special case of two-bid strategies.",
                "A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
                "A single-bid strategy is even easier to implement in practice than a two-bid strategy.",
                "For example, the search engines often allow advertisers to set a maximum daily budget.",
                "In this case, the advertiser would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
                "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
                "The best single-bid strategy can also be computed easily from the aggregate landscape.",
                "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
                "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
                "In section we prove that there is always a good uniform strategy: Theorem 3.",
                "There always exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "We introduce the notion of a click-price curve, which is central to our analysis.",
                "This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape.",
                "Consider an adversarial bidder Ω with the power to bid independently on each query.",
                "Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords.",
                "Suppose this strategy bids b∗ q for each query q.",
                "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
                "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
                "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
                "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
                "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
                "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
                "Note that the area of each step is costq(b∗ q ).",
                "The following claim follows immediately: Claim 1.",
                "UΩ = R CΩ 0 h(r)dr.",
                "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
                "The click-price curve says that if we bid h(r ) on every keyword (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
                "Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
                "However, all of these extra clicks still cost at most h(r ) per click.",
                "Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click.",
                "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
                "We summarize this discussion in the following lemma: Lemma 4.",
                "For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
                "Lemma 4 describes a landscape as a continuous function.",
                "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
                "Lemma 5.",
                "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget Optimization with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
                "Proof.",
                "Construct an instance as follows.",
                "Let > 0 be a small number that we will later define in terms of .",
                "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
                "The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries.",
                "The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
                "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
                "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal.",
                "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
                "Theorem 6.",
                "There always exists a uniform single-bid strategy that is 1 2 -optimal.",
                "Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof.",
                "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
                "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
                "We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero.",
                "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
                "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
                "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α.",
                "The budget is U = 1 + α.",
                "The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1.",
                "This achieves a total of 2α clicks and spends the budget exactly.",
                "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
                "Any single-bid solution that uses as its non-zero bid gets at most α clicks.",
                "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
                "Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid.",
                "This results in at most α(1 + α) clicks.",
                "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
                "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
                "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
                "After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
                "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve.",
                "Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks.",
                "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
                "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
                "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
                "Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
                "In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
                "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
                "Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget Optimization exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
                "A binary search yields the smallest such α where the objective is exactly U.",
                "To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
                "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
                "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
                "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
                "Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
                "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
                "Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
                "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
                "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
                "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
                "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
                "Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "We now show that no uniform strategy can do better.",
                "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
                "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
                "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
                "Thus, this curve corresponds to an instance where UΩ = 1.",
                "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost.",
                "Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance.",
                "By Lemma 1 there is always a two-bid optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids.",
                "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
                "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
                "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
                "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
                "We turn to the case u > 0.",
                "Here we have pu = v−α v−u and pv = α−u v−u .",
                "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
                "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
                "The final inequality follows from α > 1 − 1 e .",
                "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
                "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
                "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy.",
                "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
                "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution.",
                "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
                "The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice.",
                "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful.",
                "However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5.",
                "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
                "Budget Optimization is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
                "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
                "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
                "Call this the Weighted Keyword Bidding problem.",
                "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
                "Theorem 8.",
                "The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6.",
                "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget optimization problem exactly.",
                "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
                "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
                "We first show that to solve the Budget Optimization problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
                "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
                "Lemma 9.",
                "Let I be an input to the Budget Optimization problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
                "Then we can find the optimal solution in time O(U log U).",
                "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
                "Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property.",
                "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes).",
                "We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors.",
                "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
                "Lemma 10.",
                "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget Optimization problem with ai ≥ aj.",
                "We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi.",
                "In this case we say that j is a child of i.",
                "Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
                "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
                "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children.",
                "Lemma 11.",
                "Let G be a graph with the laminar property.",
                "There exists another graph G with the same optimal solution to the Budget Optimization problem, where each node has at most two children in the laminar ordering.",
                "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
                "Qj ⊆ Qi (and exactly b on keyword i) while spending at most U.",
                "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a bid ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
                "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
                "Lemma 12.",
                "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget Optimization problem exactly in O(B3 U3 n) time.",
                "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
                "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
                "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget Optimization problem in O(B3 U3 n) time.",
                "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
                "For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent).",
                "Doing so yields the obvious improvement in the bounds. 7.",
                "BID OPTIMIZATION UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search.",
                "Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
                "In this section we argue that the budget optimization problem is easy under the VCG auction.",
                "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
                "For the sake of the budget optimization problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
                "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i].",
                "We claim that in the VCG auction, the landscapes are convex.",
                "To see this, consider two consecutive positions i,i + 1.",
                "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
                "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
                "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
                "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
                "But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid.",
                "Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords.",
                "We conclude that the best uniform bid is an optimal solution to the budget optimization problem. 8.",
                "CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
                "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better.",
                "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
                "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.)",
                "Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers.",
                "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium.",
                "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
                "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
                "Truthful auctions for pricing search keywords.",
                "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
                "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
                "Dynamics of bid optimization in online advertisement auctions.",
                "Proc.",
                "WWW 2007. [4] E. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
                "Internet Advertising and the Generalized Second Price Auction: Selling Billions of Dollars Worth of Keywords.",
                "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
                "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
                "Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP.",
                "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
                "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
                "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
                "Stochastic models for budget optimization in search-based advertising.",
                "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
                "Computational Geometry: An Introduction.",
                "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
                "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
                "Counterspeculation, auctions and competitive-sealed tenders.",
                "Journal of Finance, 16(1):8-37, 1961. 49"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "optimization": {
            "translated_key": "Optimización",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Budget <br>optimization</br> in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an auction.",
                "While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the Internet company.",
                "In this work, we focus on the advertisers, who must solve a complex <br>optimization</br> problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
                "We model the entire process and study this budget <br>optimization</br> problem.",
                "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well.",
                "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
                "As our preliminary experiments show, such uniform strategies are likely to be practical.",
                "We also present inapproximability results, and optimal algorithms for variants of the budget <br>optimization</br> problem.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
                "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
                "In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
                "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
                "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
                "It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied.",
                "Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc.",
                "The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers.",
                "The challenge from an advertisers point of view is to understand and interact with the auction mechanism.",
                "The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget.",
                "When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction.",
                "The advertiser whose ad appears pays the Internet search company if the user clicks on the ad.",
                "The focus in this paper is on how the advertisers bid.",
                "For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign.",
                "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks.",
                "The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations.",
                "Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively.",
                "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
                "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain.",
                "In effect the advertiser ends up competing with herself.",
                "As a result, the advertisers face a challenging <br>optimization</br> problem.",
                "The focus of this paper is to solve this <br>optimization</br> problem. 1.1 The Budget <br>optimization</br> Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
                "A given advertiser sees the state of the auctions for searchbased advertising as follows.",
                "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
                "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section.",
                "There is a bipartite graph G on the two vertex sets representing K and Q.",
                "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget <br>optimization</br> problem is as follows.",
                "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the keyword bids in the neighborhood of q.",
                "While we can cast this problem as a traditional <br>optimization</br> problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
                "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
                "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
                "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
                "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget <br>optimization</br> problem.",
                "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
                "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget <br>optimization</br> problem.",
                "The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
                "We show that this approximation ratio is tight for uniform strategies.",
                "We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.)",
                "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
                "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
                "After all, the optimum can configure arbitrary bids on each of the keywords.",
                "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
                "So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum.",
                "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
                "We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
                "By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
                "We have conducted simulations using real auction data from Google.",
                "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
                "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
                "MODELING A KEYWORD AUCTION We describe an auction from an advertisers point of view.",
                "An advertiser bids on a keyword, which we can think of as a word or set of words.",
                "Users of the search engine submit queries.",
                "If the query matches a keyword that has been bid on by an advertiser, then the advertiser is entered into an auction for the available ad slots on the results page.",
                "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single bid for a keyword that remains in effect for a period of time, say one day.",
                "The keyword could match many different user queries throughout the day.",
                "Each user query might have a different set of advertisers competing for clicks.",
                "The advertiser could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
                "The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget.",
                "We now formalize a model of keyword bidding and define an <br>optimization</br> problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query.",
                "In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9].",
                "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
                "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
                "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
                "The ctr can be measured empirically using past history.",
                "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
                "In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a bid on a keyword that matches the users query.",
                "We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each keyword.",
                "We assume that the auction is a generalized second price (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of bid, and each advertiser is assigned a price equal to the amount bid by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
                "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction.",
                "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
                "Since the auction is a generalized second price auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
                "Suppose that we bid b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction.",
                "In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
                "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7].",
                "Each auction mechanism will result in a different sort of <br>optimization</br> problem.",
                "In the conclusion we point out that for the VCG auction, the bidding <br>optimization</br> problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
                "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
                "We use R+ to denote the nonnegative reals.",
                "Observation 1.",
                "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
                "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
                "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
                "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
                "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
                "For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
                "Here we graph clicks as a function of cost.",
                "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
                "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
                "This condition is slightly weaker than concavity.",
                "Suppose we would like to solve the budget <br>optimization</br> problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget.",
                "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
                "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00.",
                "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
                "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
                "Let B be a distribution on bids b ∈ R+.",
                "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
                "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
                "This is represented in Figure 1 by the dashed line.",
                "To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
                "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
                "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
                "Summarizing, Lemma 1.",
                "If an advertiser is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
                "There is one subtlety in this formulation.",
                "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
                "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
                "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
                "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
                "Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
                "We want to bid on each query independently subject to our budget: the resulting <br>optimization</br> problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
                "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
                "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another.",
                "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
                "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
                "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
                "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
                "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a bid on two different keywords that match the same query, this conflict must be resolved somehow.",
                "For example, if an advertiser has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
                "The search engine specifies, in advance, a rule for resolution based on the query the keyword and the bid.",
                "A natural rule is to take the keyword with the highest bid, which we adopt here, but our results apply to other resolution rules.",
                "We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
                "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
                "An edge (k, q) ∈ E means that keyword k matches query q.",
                "The advertiser can control their individual keyword bid vector a ∈ R |K| + specifying a bid ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
                "Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak.",
                "By submitting a bid vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword.",
                "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over bid vectors a ∈ R |K| + .",
                "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget <br>optimization</br> Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
                "Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
                "We conclude this section with a small example to illustrate some feature of the budget <br>optimization</br> problem.",
                "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
                "Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1.",
                "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must bid at least $1 on u.",
                "However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective bid is $1 on both x and y.",
                "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
                "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget <br>optimization</br> problem in its full generality is difficult.",
                "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors.",
                "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
                "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
                "We define a uniform bidding strategy to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
                "In other words, each vector in the distribution bids the same value on every keyword.",
                "Uniform strategies have several advantages.",
                "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
                "Thus, they are effective in the face of limited or noisy information about the keyword interaction graph.",
                "Second, uniform strategies are also independent of the priority rule being used.",
                "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
                "We now show that we can compute the best uniform strategy efficiently.",
                "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
                "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
                "We can index the points in I as b1, . . . , bN in increasing order.",
                "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
                "For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape.",
                "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
                "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
                "The resulting strategy is the convex combination of two points on the aggregate landscape.",
                "Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors.",
                "We have shown Lemma 2.",
                "Given an instance of Budget <br>optimization</br> in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
                "Furthermore, this strategy will always be a two-bid strategy.",
                "Putting these ideas together, we get an O(N log N)-time algorithm for Budget <br>optimization</br>, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
                "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
                "Find the convex hull of the points in the aggregate landscape. 3.",
                "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
                "Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β.",
                "We will also consider a special case of two-bid strategies.",
                "A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
                "A single-bid strategy is even easier to implement in practice than a two-bid strategy.",
                "For example, the search engines often allow advertisers to set a maximum daily budget.",
                "In this case, the advertiser would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
                "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
                "The best single-bid strategy can also be computed easily from the aggregate landscape.",
                "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
                "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
                "In section we prove that there is always a good uniform strategy: Theorem 3.",
                "There always exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "We introduce the notion of a click-price curve, which is central to our analysis.",
                "This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape.",
                "Consider an adversarial bidder Ω with the power to bid independently on each query.",
                "Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords.",
                "Suppose this strategy bids b∗ q for each query q.",
                "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
                "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
                "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
                "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
                "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
                "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
                "Note that the area of each step is costq(b∗ q ).",
                "The following claim follows immediately: Claim 1.",
                "UΩ = R CΩ 0 h(r)dr.",
                "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
                "The click-price curve says that if we bid h(r ) on every keyword (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
                "Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
                "However, all of these extra clicks still cost at most h(r ) per click.",
                "Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click.",
                "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
                "We summarize this discussion in the following lemma: Lemma 4.",
                "For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
                "Lemma 4 describes a landscape as a continuous function.",
                "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
                "Lemma 5.",
                "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget <br>optimization</br> with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
                "Proof.",
                "Construct an instance as follows.",
                "Let > 0 be a small number that we will later define in terms of .",
                "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
                "The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries.",
                "The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
                "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
                "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal.",
                "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
                "Theorem 6.",
                "There always exists a uniform single-bid strategy that is 1 2 -optimal.",
                "Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof.",
                "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
                "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
                "We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero.",
                "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
                "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
                "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α.",
                "The budget is U = 1 + α.",
                "The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1.",
                "This achieves a total of 2α clicks and spends the budget exactly.",
                "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
                "Any single-bid solution that uses as its non-zero bid gets at most α clicks.",
                "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
                "Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid.",
                "This results in at most α(1 + α) clicks.",
                "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
                "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
                "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
                "After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
                "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve.",
                "Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks.",
                "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
                "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
                "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
                "Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
                "In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
                "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
                "Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget <br>optimization</br> exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
                "A binary search yields the smallest such α where the objective is exactly U.",
                "To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
                "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
                "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
                "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
                "Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
                "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
                "Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
                "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
                "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
                "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
                "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
                "Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "We now show that no uniform strategy can do better.",
                "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
                "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
                "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
                "Thus, this curve corresponds to an instance where UΩ = 1.",
                "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost.",
                "Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance.",
                "By Lemma 1 there is always a two-bid optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids.",
                "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
                "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
                "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
                "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
                "We turn to the case u > 0.",
                "Here we have pu = v−α v−u and pv = α−u v−u .",
                "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
                "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
                "The final inequality follows from α > 1 − 1 e .",
                "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
                "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
                "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy.",
                "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
                "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution.",
                "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
                "The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice.",
                "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful.",
                "However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5.",
                "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
                "Budget <br>optimization</br> is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
                "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
                "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
                "Call this the Weighted Keyword Bidding problem.",
                "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
                "Theorem 8.",
                "The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6.",
                "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget <br>optimization</br> problem exactly.",
                "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
                "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
                "We first show that to solve the Budget <br>optimization</br> problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
                "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
                "Lemma 9.",
                "Let I be an input to the Budget <br>optimization</br> problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
                "Then we can find the optimal solution in time O(U log U).",
                "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
                "Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property.",
                "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes).",
                "We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors.",
                "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
                "Lemma 10.",
                "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget <br>optimization</br> problem with ai ≥ aj.",
                "We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi.",
                "In this case we say that j is a child of i.",
                "Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
                "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
                "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children.",
                "Lemma 11.",
                "Let G be a graph with the laminar property.",
                "There exists another graph G with the same optimal solution to the Budget <br>optimization</br> problem, where each node has at most two children in the laminar ordering.",
                "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
                "Qj ⊆ Qi (and exactly b on keyword i) while spending at most U.",
                "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a bid ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
                "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
                "Lemma 12.",
                "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget <br>optimization</br> problem exactly in O(B3 U3 n) time.",
                "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
                "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
                "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget <br>optimization</br> problem in O(B3 U3 n) time.",
                "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
                "For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent).",
                "Doing so yields the obvious improvement in the bounds. 7.",
                "BID <br>optimization</br> UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search.",
                "Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
                "In this section we argue that the budget <br>optimization</br> problem is easy under the VCG auction.",
                "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
                "For the sake of the budget <br>optimization</br> problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
                "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i].",
                "We claim that in the VCG auction, the landscapes are convex.",
                "To see this, consider two consecutive positions i,i + 1.",
                "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
                "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
                "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
                "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
                "But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid.",
                "Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords.",
                "We conclude that the best uniform bid is an optimal solution to the budget <br>optimization</br> problem. 8.",
                "CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
                "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better.",
                "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
                "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.)",
                "Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers.",
                "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium.",
                "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
                "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
                "Truthful auctions for pricing search keywords.",
                "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
                "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
                "Dynamics of bid <br>optimization</br> in online advertisement auctions.",
                "Proc.",
                "WWW 2007. [4] E. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
                "Internet Advertising and the Generalized Second Price Auction: Selling Billions of Dollars Worth of Keywords.",
                "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
                "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
                "Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP.",
                "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
                "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
                "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
                "Stochastic models for budget <br>optimization</br> in search-based advertising.",
                "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
                "Computational Geometry: An Introduction.",
                "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
                "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
                "Counterspeculation, auctions and competitive-sealed tenders.",
                "Journal of Finance, 16(1):8-37, 1961. 49"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Presupuesto \"Optimización\" en subastas publicitarias basadas en la búsqueda Jon Feldman Google, Inc. Nueva York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. Nueva York, NY Muthu@google.com Martin P´al Google, Inc. NuevoYork, NY mpal@google.com Cliff Stein ∗ Departamento de Ieor Columbia University Cliff@ieor.columbia.edu Abstract Internet Search Companies Venden espacios de anuncios basados en consultas de búsqueda de usuarios a través de una subasta.",
                "En este trabajo, nos centramos en los anunciantes, que deben resolver un problema complejo de \"optimización\" para decidir cómo colocar ofertas en las palabras clave para maximizar su rendimiento (el número de clics del usuario en sus anuncios) para un presupuesto determinado.",
                "Modelamos todo el proceso y estudiamos este problema de \"optimización\" de presupuesto.",
                "También presentamos resultados de inapropiación y algoritmos óptimos para las variantes del problema de \"optimización\" del presupuesto.",
                "Como resultado, los anunciantes enfrentan un problema de \"optimización\" desafiante.",
                "El enfoque de este documento es resolver este problema de \"optimización\".1.1 El problema del presupuesto de \"optimización\" presentamos una breve discusión y formulación del problema de optimización que enfrentan los anunciantes;Una descripción más detallada está en la Sección 2.",
                "Para cualquier consulta Q ∈ Q, los vecinos de Q en K son las palabras clave que se dice que coinciden con la consulta Q.2 El problema de \"optimización\" del presupuesto es el siguiente.",
                "Si bien podemos presentar este problema como un problema tradicional de \"optimización\", existen diferentes desafíos en la práctica dependiendo del acceso de los anunciantes a la consulta y la información del gráfico, y de hecho la confiabilidad de esta información (por ejemplo, podría basarse en datos históricos inestables).",
                "Lo sorprendente es que la estrategia uniforme en realidad funciona bien, lo que demostraremos.2 Los detalles de la regla de correspondencia están determinados por la compañía de búsqueda de Internet;Aquí tratamos la función como arbitraria.1.2 Nuestros resultados principales y descripción técnica presentamos resultados positivos y negativos para el problema del presupuesto de \"optimización\".",
                "En los casos ligeramente más generales que la formulación anterior, donde los clics tienen pesos, el problema es inapropiado mejor que un factor de 1 - 1 e, a menos que p = np.• Damos un algoritmo (1-1/e)-APROXIMACIÓN para el problema de \"optimización\" del presupuesto.",
                "Ahora formalizamos un modelo de licitación de palabras clave y definimos un problema de \"optimización\" que captura este objetivo.2.1 Paisajes comenzamos considerando el caso de una sola palabra clave que coincida con una sola consulta de usuario.",
                "Cada mecanismo de subasta dará como resultado un tipo diferente de problema de \"optimización\".",
                "En la conclusión, señalamos que para la subasta VCG, el problema de \"optimización\" de licitación se vuelve bastante fácil.sería costo [i] = α [i] · b [i], donde i = pos (b).",
                "Supongamos que nos gustaría resolver el problema del presupuesto de \"optimización\" para un solo panorama de consultas.5 A medida que aumentamos nuestra oferta de cero, nuestros costos aumentan y nuestro número esperado de clics aumenta, por lo que simplemente presentamos la oferta más alta de tal manera que permanecemos.dentro de nuestro presupuesto.",
                "Queremos ofertar por cada consulta sujeto independientemente a nuestro presupuesto: el problema de \"optimización\" resultante es una pequeña generalización del problema de la mochila fraccionada y se resolvió en [9].",
                "El gasto y el tráfico resultantes están dados por el gasto (a) = ea∼A [gasto (a)];tráfico (a) = ea∼A [tráfico (a)] Ahora podemos indicar el problema en su generalidad completa: presupuesto \"Optimización\" Entrada: un presupuesto u, un gráfico de querer de palabras clave G = (k ∪ q, e),y paisajes (costq (·), clicksq (·)) para cada q ∈ Q.",
                "Concluimos esta sección con un pequeño ejemplo para ilustrar alguna característica del problema del presupuesto de \"optimización\".",
                "Estrategias de licitación uniformes, como mostraremos en la Sección 5, es difícil resolver el problema de \"optimización\" de presupuesto en su totalidad general.",
                "Dada una instancia de \"optimización\" presupuestaria en la que hay un total de n puntos en todos los paisajes, podemos encontrar la mejor estrategia de uniforme en el tiempo O (n log n).",
                "Entiendo estas ideas, obtenemos un algoritmo de tiempo O (n log n) para la \"optimización\" del presupuesto, donde n es el número total de puntos de paisaje (más tarde mostramos que este es un algoritmo de acroximación (1 e)): 1.",
                "Para cualquier función C, U> 0 y no dre-decreting F: [0, C] → R+ tal que R C 0 F (R) DR = U, y cualquier pequeño> 0, existe una instancia de \"Optimización\" de Presupuesto con PresupuestoU +, donde la solución óptima logra los clics C en el costo U +, y todas las estrategias de licitación uniformes son combinaciones convexas de estrategias de oferta única que logran exactamente los clics R al costo exactamente RF (R) al ofertar F (R) en todas las palabras clave.",
                "Resolviendo este LP para un α en particular, si obtenemos un objetivo menos que U, sabemos (hasta cierta discretización) que existe una instancia de \"optimización\" presupuestaria que no se puede aproximar mejor que α.(La instancia se construye como en la prueba del lema 5.)",
                "El presupuesto \"optimización\" es muy fuerte.47 Consulta licitación de ofertas Uniformes (aleatorizados) licitación uniforme (determinista) inferior límite 0 0 0.5 0.5 1 1 Clicks de presupuesto Figura 4: Un ejemplo con datos reales.",
                "Algoritmos exactos para gráficos laminar Si un gráfico tiene una estructura especial, a veces podemos resolver el problema de \"optimización\" presupuestario exactamente.",
                "Primero mostramos que para resolver el problema de \"optimización\" del presupuesto (para gráficos generales) de manera óptima en el tiempo pseudopolinomial, es suficiente para proporcionar un algoritmo que resuelva el caso determinista.",
                "Que yo sea una entrada al problema del presupuesto de \"optimización\" y suponga que encontramos la solución determinista óptima para cada presupuesto posible U ≤ U.",
                "Para las palabras clave i, j ∈ K, si qi ⊆ qj, entonces existe una solución determinista óptima al problema de \"optimización\" del presupuesto con AI ≥ AJ.",
                "Existe otro gráfico G con la misma solución óptima al problema de \"optimización\" del presupuesto, donde cada nodo tiene como máximo dos niños en el pedido laminar.",
                "Si el gráfico G tiene la propiedad laminar, entonces, después de aplicar Lemma 11, la recurrencia de programación dinámica en (5) encuentra una solución determinista óptima al problema de \"optimización\" presupuestario exactamente en el tiempo O (B3 U3 N).",
                "Si el gráfico G tiene la propiedad laminar, entonces, al aplicar Lemma 11, la recurrencia de programación dinámica en (5) y Lemma 9, podemos encontrar una solución óptima para el problema de \"optimización\" de presupuesto en el tiempo O (B3 U3 N).",
                "BID \"Optimización\" en VCG La subasta GSP no es la única subasta posible que se podría usar para la búsqueda patrocinada.",
                "En esta sección argumentamos que el problema del presupuesto de \"optimización\" es fácil bajo la subasta VCG.",
                "En aras del problema del presupuesto de \"optimización\", podemos definir VCG simplemente redefiniendo CostQ (B) (Reemplazo de la ecuación (2)): Costq (B) = P - 1 x J = I (α [J] - α [J+ 1]) · B [j] donde i = pos (b).",
                "Concluimos que la mejor oferta de uniforme es una solución óptima para el problema del presupuesto de \"optimización\".8.",
                "Dinámica de la \"optimización\" de BID en subastas de anuncios en línea.",
                "Modelos estocásticos para la \"optimización\" del presupuesto en la publicidad basada en la búsqueda."
            ],
            "translated_text": "",
            "candidates": [
                "mejoramiento",
                "Optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "Optimización",
                "optimización",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "Optimización",
                "Optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "Optimización",
                "optimización",
                "mejoramiento",
                "Optimización",
                "Optimización",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "Optimización",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "Optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización",
                "Optimización",
                "optimización",
                "mejoramiento",
                "optimización",
                "mejoramiento",
                "optimización"
            ],
            "error": []
        },
        "auction": {
            "translated_key": "subasta",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Budget Optimization in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an <br>auction</br>.",
                "While there has been previous work on the <br>auction</br> process and its game-theoretic aspects, most of it focuses on the Internet company.",
                "In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
                "We model the entire process and study this budget optimization problem.",
                "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that bid equally on all the keywords works well.",
                "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
                "As our preliminary experiments show, such uniform strategies are likely to be practical.",
                "We also present inapproximability results, and optimal algorithms for variants of the budget optimization problem.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
                "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
                "In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
                "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
                "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
                "It is a challenging problem to set up the <br>auction</br> in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied.",
                "Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc.",
                "The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers.",
                "The challenge from an advertisers point of view is to understand and interact with the <br>auction</br> mechanism.",
                "The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget.",
                "When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an <br>auction</br> amongst them, and presents the set of ads corresponding to the advertisers who win the <br>auction</br>.",
                "The advertiser whose ad appears pays the Internet search company if the user clicks on the ad.",
                "The focus in this paper is on how the advertisers bid.",
                "For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign.",
                "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks.",
                "The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations.",
                "Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively.",
                "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
                "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain.",
                "In effect the advertiser ends up competing with herself.",
                "As a result, the advertisers face a challenging optimization problem.",
                "The focus of this paper is to solve this optimization problem. 1.1 The Budget Optimization Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
                "A given advertiser sees the state of the auctions for searchbased advertising as follows.",
                "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
                "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the <br>auction</br> for that query, which we model more formally in the next section.",
                "There is a bipartite graph G on the two vertex sets representing K and Q.",
                "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget optimization problem is as follows.",
                "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective bid bq on a query is some function of the keyword bids in the neighborhood of q.",
                "While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
                "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
                "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
                "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
                "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget optimization problem.",
                "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
                "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget optimization problem.",
                "The strategy found by the algorithm is a two-bid uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
                "We show that this approximation ratio is tight for uniform strategies.",
                "We also give a (1/2)-approximation algorithm that offers a single-bid uniform strategy, only using one value b1. (This is tight for single-bid uniform strategies.)",
                "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
                "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
                "After all, the optimum can configure arbitrary bids on each of the keywords.",
                "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
                "So, it might be surprising that a simple two-bid uniform strategy is 63% or more effective compared to the optimum.",
                "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can bid independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
                "We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
                "By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
                "We have conducted simulations using real <br>auction</br> data from Google.",
                "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
                "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
                "MODELING A KEYWORD <br>auction</br> We describe an <br>auction</br> from an advertisers point of view.",
                "An advertiser bids on a keyword, which we can think of as a word or set of words.",
                "Users of the search engine submit queries.",
                "If the query matches a keyword that has been bid on by an advertiser, then the advertiser is entered into an <br>auction</br> for the available ad slots on the results page.",
                "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single bid for a keyword that remains in effect for a period of time, say one day.",
                "The keyword could match many different user queries throughout the day.",
                "Each user query might have a different set of advertisers competing for clicks.",
                "The advertiser could also bid different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
                "The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget.",
                "We now formalize a model of keyword bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query.",
                "In this section we define the notion of a query landscape that describes the relationship between the advertisers bid and what will happen on this query as a result of this bid[9].",
                "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
                "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
                "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
                "The ctr can be measured empirically using past history.",
                "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
                "In order to place an ad on this page, we must enter the <br>auction</br> that is carried out among all advertisers that have submitted a bid on a keyword that matches the users query.",
                "We will refer to such an <br>auction</br> as a query <br>auction</br>, to emphasize that there is an auction for each query rather than for each keyword.",
                "We assume that the <br>auction</br> is a generalized second price (GSP) <br>auction</br> [5, 7]: the advertisers are ranked in decreasing order of bid, and each advertiser is assigned a price equal to the amount bid by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
                "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query <br>auction</br>.",
                "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
                "Since the <br>auction</br> is a generalized second price <br>auction</br>, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
                "Suppose that we bid b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP <br>auction</br>.",
                "In the Google <br>auction</br>, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
                "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) <br>auction</br> [14, 4, 7].",
                "Each <br>auction</br> mechanism will result in a different sort of optimization problem.",
                "In the conclusion we point out that for the VCG <br>auction</br>, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
                "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a bid b that qualifies for a query <br>auction</br> q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
                "We use R+ to denote the nonnegative reals.",
                "Observation 1.",
                "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
                "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
                "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
                "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
                "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
                "For example, for a query with four slots, a landscape might look like Table 1. bid range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
                "Here we graph clicks as a function of cost.",
                "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
                "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
                "This condition is slightly weaker than concavity.",
                "Suppose we would like to solve the budget optimization problem for a single query landscape.5 As we increase our bid from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest bid such that we remain within our budget.",
                "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
                "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A bid landscape. of $1.00.",
                "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
                "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
                "Let B be a distribution on bids b ∈ R+.",
                "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
                "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
                "This is represented in Figure 1 by the dashed line.",
                "To find a bid distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
                "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
                "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
                "Summarizing, Lemma 1.",
                "If an advertiser is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
                "There is one subtlety in this formulation.",
                "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
                "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
                "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
                "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
                "Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers bid can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
                "We want to bid on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
                "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
                "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones bid from one particular value to another.",
                "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
                "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
                "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
                "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
                "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can bid on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a bid on two different keywords that match the same query, this conflict must be resolved somehow.",
                "For example, if an advertiser has a bid out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
                "The search engine specifies, in advance, a rule for resolution based on the query the keyword and the bid.",
                "A natural rule is to take the keyword with the highest bid, which we adopt here, but our results apply to other resolution rules.",
                "We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
                "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
                "An edge (k, q) ∈ E means that keyword k matches query q.",
                "The advertiser can control their individual keyword bid vector a ∈ R |K| + specifying a bid ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
                "Given a particular bid vector a on the keywords, we use the resolution rule of taking the maximum to define the effective bid on query q as bq(a) = max k:(k,q)∈E ak.",
                "By submitting a bid vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword.",
                "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over bid vectors a ∈ R |K| + .",
                "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget Optimization Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
                "Find: a distribution A over bid vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
                "We conclude this section with a small example to illustrate some feature of the budget optimization problem.",
                "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
                "Suppose query x has one position with ctr αx [1] = 1.0, and there is one bid bx 1 = $1.",
                "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must bid at least $1 on u.",
                "However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective bid is $1 on both x and y.",
                "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
                "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget Optimization problem in its full generality is difficult.",
                "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary bid vectors.",
                "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
                "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
                "We define a uniform bidding strategy to be a distribution A over bid vectors a ∈ R |K| + where each bid vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
                "In other words, each vector in the distribution bids the same value on every keyword.",
                "Uniform strategies have several advantages.",
                "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
                "Thus, they are effective in the face of limited or noisy information about the keyword interaction graph.",
                "Second, uniform strategies are also independent of the priority rule being used.",
                "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
                "We now show that we can compute the best uniform strategy efficiently.",
                "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
                "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
                "We can index the points in I as b1, . . . , bN in increasing order.",
                "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with bid bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
                "For any possible bid b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that bid simultaneously on all queries associated with the aggregate landscape.",
                "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
                "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
                "The resulting strategy is the convex combination of two points on the aggregate landscape.",
                "Define a two-bid strategy to be a uniform strategy which puts non-zero weight on at most two bid vectors.",
                "We have shown Lemma 2.",
                "Given an instance of Budget Optimization in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
                "Furthermore, this strategy will always be a two-bid strategy.",
                "Putting these ideas together, we get an O(N log N)-time algorithm for Budget Optimization, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
                "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
                "Find the convex hull of the points in the aggregate landscape. 3.",
                "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
                "Output the strategy which is the appropriate convex combination of the uniform bid vectors corresponding to α and β.",
                "We will also consider a special case of two-bid strategies.",
                "A single-bid strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
                "A single-bid strategy is even easier to implement in practice than a two-bid strategy.",
                "For example, the search engines often allow advertisers to set a maximum daily budget.",
                "In this case, the advertiser would simply bid b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
                "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
                "The best single-bid strategy can also be computed easily from the aggregate landscape.",
                "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
                "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
                "In section we prove that there is always a good uniform strategy: Theorem 3.",
                "There always exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "We introduce the notion of a click-price curve, which is central to our analysis.",
                "This definition makes it simple to show that there is always a single-bid strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding bid landscape.",
                "Consider an adversarial bidder Ω with the power to bid independently on each query.",
                "Note that this bidder is more powerful than an optimal bidder, which has to bid on the keywords.",
                "Suppose this strategy bids b∗ q for each query q.",
                "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
                "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
                "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
                "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
                "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
                "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
                "Note that the area of each step is costq(b∗ q ).",
                "The following claim follows immediately: Claim 1.",
                "UΩ = R CΩ 0 h(r)dr.",
                "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
                "The click-price curve says that if we bid h(r ) on every keyword (and therefore every query), we get at least r traffic, since this bid would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
                "Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
                "However, all of these extra clicks still cost at most h(r ) per click.",
                "Thus we see that for any r ∈ [0, CΩ], if we bid h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click.",
                "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
                "We summarize this discussion in the following lemma: Lemma 4.",
                "For any r ∈ [0, CΩ], there exists a single-bid strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
                "Lemma 4 describes a landscape as a continuous function.",
                "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
                "Lemma 5.",
                "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget Optimization with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-bid strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
                "Proof.",
                "Construct an instance as follows.",
                "Let > 0 be a small number that we will later define in terms of .",
                "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
                "The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries.",
                "The optimal solution will always bid exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
                "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
                "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-bid strategy that is 1 2 -optimal.",
                "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
                "Theorem 6.",
                "There always exists a uniform single-bid strategy that is 1 2 -optimal.",
                "Furthermore, for any > 0 there exists an instance for which all single-bid strategies are at most (1 2 + )-optimal. 45 Proof.",
                "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
                "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
                "We conclude that there is a 1 2 -optimal single-bid strategy randomizing between bidding CΩ/2 and zero.",
                "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
                "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
                "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a bid of by 1 = 1/α and a click-through rate of αy [1] = α.",
                "The budget is U = 1 + α.",
                "The optimal solution is to bid on u (and therefore x) and bid 1/α on v (and therefore y), both with probability 1.",
                "This achieves a total of 2α clicks and spends the budget exactly.",
                "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
                "Any single-bid solution that uses as its non-zero bid gets at most α clicks.",
                "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
                "Thus, since the budget is U = 1 + α < 2, a single-bid solution using 1/α can put weight at most (1+ α)/2 on the 1/α bid.",
                "This results in at most α(1 + α) clicks.",
                "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-bid strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
                "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
                "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
                "After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
                "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve.",
                "Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks.",
                "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
                "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
                "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
                "Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
                "In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
                "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
                "Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget Optimization exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
                "A binary search yields the smallest such α where the objective is exactly U.",
                "To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
                "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
                "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
                "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
                "Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
                "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
                "Note that the final resulting bid distribution will have some weight on the zero bid, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
                "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
                "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
                "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
                "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
                "Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "We now show that no uniform strategy can do better.",
                "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
                "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
                "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
                "Thus, this curve corresponds to an instance where UΩ = 1.",
                "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that bid h(u) and achieve u clicks and u · h(u) cost.",
                "Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance.",
                "By Lemma 1 there is always a two-bid optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids.",
                "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
                "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
                "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
                "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
                "We turn to the case u > 0.",
                "Here we have pu = v−α v−u and pv = α−u v−u .",
                "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
                "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
                "The final inequality follows from α > 1 − 1 e .",
                "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
                "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
                "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal bid(s) under each respective strategy.",
                "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
                "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single bid level, while randomized uses a distribution.",
                "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
                "The data clearly demonstrate that the best single uniform bid obtains almost all the possible clicks in practice.",
                "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such bid, so further investigation is required to make this approach useful.",
                "However, just knowing that there is such a bid available should make the on-line versions of the problem simpler. 5.",
                "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
                "Budget Optimization is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
                "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
                "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
                "Call this the Weighted Keyword Bidding problem.",
                "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
                "Theorem 8.",
                "The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6.",
                "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget optimization problem exactly.",
                "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
                "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible bid values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
                "We first show that to solve the Budget Optimization problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
                "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
                "Lemma 9.",
                "Let I be an input to the Budget Optimization problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
                "Then we can find the optimal solution in time O(U log U).",
                "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
                "Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property.",
                "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes).",
                "We call a solution deterministic if it consists of one bid vector, rather than a general distribution over bid vectors.",
                "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
                "Lemma 10.",
                "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget Optimization problem with ai ≥ aj.",
                "We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi.",
                "In this case we say that j is a child of i.",
                "Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
                "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
                "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children.",
                "Lemma 11.",
                "Let G be a graph with the laminar property.",
                "There exists another graph G with the same optimal solution to the Budget Optimization problem, where each node has at most two children in the laminar ordering.",
                "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
                "Qj ⊆ Qi (and exactly b on keyword i) while spending at most U.",
                "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a bid ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
                "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
                "Lemma 12.",
                "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget Optimization problem exactly in O(B3 U3 n) time.",
                "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
                "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
                "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget Optimization problem in O(B3 U3 n) time.",
                "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
                "For many problems, you only need to choose from a discrete set of bid levels (e.g., multiples of one cent).",
                "Doing so yields the obvious improvement in the bounds. 7.",
                "BID OPTIMIZATION UNDER VCG The GSP <br>auction</br> is not the only possible <br>auction</br> one could use for sponsored search.",
                "Indeed the VCG <br>auction</br> and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
                "In this section we argue that the budget optimization problem is easy under the VCG <br>auction</br>.",
                "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
                "For the sake of the budget optimization problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
                "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular bid b[i].",
                "We claim that in the VCG <br>auction</br>, the landscapes are convex.",
                "To see this, consider two consecutive positions i,i + 1.",
                "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
                "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
                "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
                "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
                "But, the equation above shows that each piece has its incremental cpc equal to the bid that achieves it; thus in the case of VCG the pieces are also sorted by bid.",
                "Hence we can obtain any prefix of the pieces via a uniform bid on all the keywords.",
                "We conclude that the best uniform bid is an optimal solution to the budget optimization problem. 8.",
                "CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: bid a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
                "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-bid strategy, and in practice, is likely to be much better.",
                "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
                "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.)",
                "Finally, we have looked at this system as a black box returning clicks as a function of bid, whereas in reality it is a complex repeated game involving multiple advertisers.",
                "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price <br>auction</br>, the prices approach a well-understood market equilibrium.",
                "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
                "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
                "Truthful auctions for pricing search keywords.",
                "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
                "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
                "Dynamics of bid optimization in online advertisement auctions.",
                "Proc.",
                "WWW 2007. [4] E. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
                "Internet Advertising and the Generalized Second Price <br>auction</br>: Selling Billions of Dollars Worth of Keywords.",
                "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
                "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
                "Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP.",
                "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
                "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
                "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
                "Stochastic models for budget optimization in search-based advertising.",
                "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
                "Computational Geometry: An Introduction.",
                "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
                "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
                "Counterspeculation, auctions and competitive-sealed tenders.",
                "Journal of Finance, 16(1):8-37, 1961. 49"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Optimización del presupuesto en subastas publicitarias basadas en la búsqueda Jon Feldman Google, Inc. Nueva York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. Nueva York, NY Muthu@google.com Martin P´al Google, Inc. Nueva York,NY mpal@google.com Cliff Stein ∗ Departamento de Ieor Columbia University cliff@ieor.columbia.edu Abstract Internet Search Companies venden espacios publicitarios basados en consultas de búsqueda de usuarios a través de una \"subasta\".",
                "Si bien ha habido trabajo previo en el proceso de \"subasta\" y sus aspectos teóricos del juego, la mayor parte se centra en la compañía de Internet.",
                "Es un problema difícil establecer la \"subasta\" para efectuar un mercado estable en el que todas las partes (los anunciantes, los usuarios y la compañía de búsqueda de Internet) están adecuadamente satisfechas.",
                "El desafío desde el punto de vista de los anunciantes es comprender e interactuar con el mecanismo de \"subasta\".",
                "Cuando un usuario plantea una consulta de búsqueda, la compañía de búsqueda de Internet determina a los anunciantes cuyas palabras clave coinciden con la consulta y que todavía le quedan presupuesto, ejecuta una \"subasta\" entre ellos y presenta el conjunto de anuncios correspondientes a los anunciantes que ganan el \"\"subasta\".",
                "Para cada consulta q ∈ Q, hay funciones que dan el clicksq (b) y el costq (b) que resultan de ofertar una cantidad particular B en la \"subasta\" para esa consulta, que modelamos más formalmente en la siguiente sección.",
                "Hemos realizado simulaciones utilizando datos reales de \"subasta\" de Google.",
                "Modelando una palabra clave \"subasta\" describimos una \"subasta\" desde el punto de vista del anunciante.",
                "Si la consulta coincide con una palabra clave que un anunciante ha ofertado, entonces el anunciante se ingresa en una \"subasta\" para las ranuras de anuncios disponibles en la página de resultados.",
                "Para colocar un anuncio en esta página, debemos ingresar la \"subasta\" que se lleva a cabo entre todos los anunciantes que han enviado una oferta por una palabra clave que coincida con la consulta de los usuarios.",
                "Nos referiremos a una \"subasta\" como una \"subasta\" de consulta, para enfatizar que hay una subasta para cada consulta en lugar de cada palabra clave.",
                "Suponemos que la \"subasta\" es una \"subasta\" de segundo precio generalizado (GSP) [5, 7]: los anunciantes se clasifican en orden decreciente de oferta, y a cada anunciante se le asigna un precio igual al monto de la oferta de por debajoellos en la clasificación.4 En subastas de búsqueda patrocinadas, este anunciante solo paga si el usuario realmente hace clic en el anuncio.",
                "Sea (B [1], ..., B [P]) denotar las ofertas de los principales anunciantes de P en esta consulta \"subasta\".",
                "Dado que la \"subasta\" es una \"subasta\" de segundo precio generalizada, las ofertas más altas ganan posiciones más altas;es decir, b [i] ≥ b [i + 1].",
                "Supongamos que ofrecemos B en una palabra clave que coincide con la consulta de los usuarios, entonces nuestra posición está definida por la B [i] más grande que es como máximo B, es decir, pos (b) = arg max i (b [i]: b[i] ≤ b).(1) Dado que solo pagamos si el usuario hace clic (y eso sucede con probabilidad α [i]), nuestro costo esperado para ganar la posición I 4 Google, Yahoo!y MSN usa alguna variante de la \"subasta\" GSP.",
                "En la \"subasta\" de Google, las ofertas de los anunciantes se multiplican por un puntaje de calidad antes de clasificarse;Nuestros resultados también se trasladan a este caso, que omitimos de este documento para mayor claridad.",
                "Además, se han considerado otras subastas además de GSP;por ejemplo, la \"subasta\" de Vickrey Clark (VCG) [14, 4, 7].",
                "Cada mecanismo de \"subasta\" dará como resultado un tipo diferente de problema de optimización.",
                "En la conclusión, señalamos que para la \"subasta\" de VCG, el problema de optimización de licitación se vuelve bastante fácil.sería costo [i] = α [i] · b [i], donde i = pos (b).",
                "Utilizamos CostQ (b) y Clicksq (b) para denotar el costo y los clics esperados que resultan de tener una oferta B que califique para una consulta \"Auctionidad\" Q, y por lo tanto CostoQ (B) = α [i] · B [i] donde i = pos (b), (2) clicksq (b) = α [i] donde i = pos (b).(3) Las siguientes observaciones sobre costos y clics siguen inmediatamente de las definiciones y ecuaciones (1), (2) y (3).",
                "La optimización de ofertas bajo VCG La \"subasta\" GSP no es la única \"subasta\" posible que se podría usar para la búsqueda patrocinada.",
                "De hecho, la \"subasta\" de VCG y las variantes [14, 4, 7, 1] ofrecen alternativas con propiedades teóricas de juego convincentes.",
                "En esta sección argumentamos que el problema de optimización del presupuesto es fácil bajo la \"subasta\" de VCG.",
                "Afirmamos que en la \"subasta\" de VCG, los paisajes son convexos.",
                "En [3], se demostró que cuando un conjunto de anunciantes usa una estrategia similar a la que sugerimos aquí, bajo una \"subasta\" de primer precio ligeramente modificada, el enfoque de precios es un equilibrio de mercado bien entendido.",
                "La publicidad en Internet y la \"subasta\" de segundo precio generalizado: venta de miles de millones de dólares en palabras clave."
            ],
            "translated_text": "",
            "candidates": [
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "Auctionidad",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta"
            ],
            "error": []
        },
        "bid": {
            "translated_key": "licitación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Budget Optimization in Search-Based Advertising Auctions Jon Feldman Google, Inc. New York, NY jonfeld@google.com S. Muthukrishnan Google, Inc. New York, NY muthu@google.com Martin P´al Google, Inc. New York, NY mpal@google.com Cliff Stein ∗ Department of IEOR Columbia University cliff@ieor.columbia.edu ABSTRACT Internet search companies sell advertisement slots based on users search queries via an auction.",
                "While there has been previous work on the auction process and its game-theoretic aspects, most of it focuses on the Internet company.",
                "In this work, we focus on the advertisers, who must solve a complex optimization problem to decide how to place bids on keywords to maximize their return (the number of user clicks on their ads) for a given budget.",
                "We model the entire process and study this budget optimization problem.",
                "While most variants are NP-hard, we show, perhaps surprisingly, that simply randomizing between two uniform strategies that <br>bid</br> equally on all the keywords works well.",
                "More precisely, this strategy gets at least a 1 − 1/e fraction of the maximum clicks possible.",
                "As our preliminary experiments show, such uniform strategies are likely to be practical.",
                "We also present inapproximability results, and optimal algorithms for variants of the budget optimization problem.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Online search is now ubiquitous and Internet search companies such as Google, Yahoo! and MSN let companies and individuals advertise based on search queries posed by users.",
                "Conventional media outlets, such as TV stations or newspapers, price their ad slots individually, and the advertisers buy the ones they can afford.",
                "In contrast, Internet search companies find it difficult to set a price explicitly for the advertisements they place in response to user queries.",
                "This difficulty arises because supply (and demand) varies widely and unpredictably across the user queries, and they must price slots for billions of such queries in real time.",
                "Thus, they rely on the market to determine suitable prices by using auctions amongst the advertisers.",
                "It is a challenging problem to set up the auction in order to effect a stable market in which all the parties (the advertisers, users as well as the Internet search company) are adequately satisfied.",
                "Recently there has been systematic study of the issues involved in the game theory of the auctions [5, 1, 2], revenue maximization [10], etc.",
                "The perspective in this paper is not of the Internet search company that displays the advertisements, but rather of the advertisers.",
                "The challenge from an advertisers point of view is to understand and interact with the auction mechanism.",
                "The advertiser determines a set of keywords of their interest and then must create ads, set the bids for each keyword, and provide a total (often daily) budget.",
                "When a user poses a search query, the Internet search company determines the advertisers whose keywords match the query and who still have budget left over, runs an auction amongst them, and presents the set of ads corresponding to the advertisers who win the auction.",
                "The advertiser whose ad appears pays the Internet search company if the user clicks on the ad.",
                "The focus in this paper is on how the advertisers <br>bid</br>.",
                "For the particular choice of keywords of their interest1 , an advertiser wants to optimize the overall effect of the advertising campaign.",
                "While the effect of an ad campaign in any medium is a complicated phenomenon to quantify, one commonly accepted (and easily quantified) notion in searchbased advertising on the Internet is to maximize the number of clicks.",
                "The Internet search companies are supportive to1 The choice of keywords is related to the domain-knowledge of the advertiser, user behavior and strategic considerations.",
                "Internet search companies provide the advertisers with summaries of the query traffic which is useful for them to optimize their keyword choices interactively.",
                "We do not directly address the choice of keywords in this paper, which is addressed elsewhere [13]. 40 wards advertisers and provide statistics about the history of click volumes and prediction about the future performance of various keywords.",
                "Still, this is a complex problem for the following reasons (among others): • Individual keywords have significantly different characteristics from each other; e.g., while fishing is a broad keyword that matches many user queries and has many competing advertisers, humane fishing bait is a niche keyword that matches only a few queries, but might have less competition. • There are complex interactions between keywords because a user query may match two or more keywords, since the advertiser is trying to cover all the possible keywords in some domain.",
                "In effect the advertiser ends up competing with herself.",
                "As a result, the advertisers face a challenging optimization problem.",
                "The focus of this paper is to solve this optimization problem. 1.1 The Budget Optimization Problem We present a short discussion and formulation of the optimization problem faced by advertisers; a more detailed description is in Section 2.",
                "A given advertiser sees the state of the auctions for searchbased advertising as follows.",
                "There is a set K of keywords of interest; in practice, even small advertisers typically have a large set K. There is a set Q of queries posed by the users.",
                "For each query q ∈ Q, there are functions giving the clicksq(b) and costq(b) that result from bidding a particular amount b in the auction for that query, which we model more formally in the next section.",
                "There is a bipartite graph G on the two vertex sets representing K and Q.",
                "For any query q ∈ Q, the neighbors of q in K are the keywords that are said to match the query q.2 The budget optimization problem is as follows.",
                "Given graph G together with the functions clicksq(·) and costq(·) on the queries, as well as a budget U, determine the bids bk for each keyword k ∈ K such that P q clicksq(bq) is maximized subject to P q costq(bq) ≤ U, where the effective <br>bid</br> bq on a query is some function of the keyword bids in the neighborhood of q.",
                "While we can cast this problem as a traditional optimization problem, there are different challenges in practice depending on the advertisers access to the query and graph information, and indeed the reliability of this information (e.g., it could be based on unstable historical data).",
                "Thus it is important to find solutions to this problem that not only get many clicks, but are also simple, robust and less reliant on the information.",
                "In this paper we define the notion of a uniform strategy which is essentially a strategy that bids uniformly on all keywords.",
                "Since this type of strategy obviates the need to know anything about the particulars of the graph, and effectively aggregates the click and cost functions on the queries, it is quite robust, and thus desirable in practice.",
                "What is surprising is that uniform strategy actually performs well, which we will prove. 2 The particulars of the matching rule are determined by the Internet search company; here we treat the function as arbitrary. 1.2 Our Main Results and Technical Overview We present positive and negative results for the budget optimization problem.",
                "In particular, we show: • Nearly all formulations of the problem are NP-Hard.",
                "In cases slightly more general than the formulation above, where the clicks have weights, the problem is inapproximable better than a factor of 1 − 1 e , unless P=NP. • We give a (1−1/e)-approximation algorithm for the budget optimization problem.",
                "The strategy found by the algorithm is a two-<br>bid</br> uniform strategy, which means that it randomizes between bidding some value b1 on all keywords, and bidding some other value b2 on all keywords until the budget is exhausted3 .",
                "We show that this approximation ratio is tight for uniform strategies.",
                "We also give a (1/2)-approximation algorithm that offers a single-<br>bid</br> uniform strategy, only using one value b1. (This is tight for single-<br>bid</br> uniform strategies.)",
                "These strategies can be computed in time nearly linear in |Q| + |K|, the input size.",
                "Uniform strategies may appear to be naive in first consideration because the keywords vary significantly in their click and cost functions, and there may be complex interaction between them when multiple keywords are relevant to a query.",
                "After all, the optimum can configure arbitrary bids on each of the keywords.",
                "Even for the simple case when the graph is a matching, the optimal algorithm involves placing different bids on different keywords via a knapsack-like packing (Section 2).",
                "So, it might be surprising that a simple two-<br>bid</br> uniform strategy is 63% or more effective compared to the optimum.",
                "In fact, our proof is stronger, showing that this strategy is 63% effective against a strictly more powerful adversary who can <br>bid</br> independently on the individual queries, i.e., not be constrained by the interaction imposed by the graph G. Our proof of the 1 − 1/e approximation ratio relies on an adversarial analysis.",
                "We define a factor-revealing LP (Section 4) where primal solutions correspond to possible instances, and dual solutions correspond to distributions over bidding strategies.",
                "By deriving the optimal solution to this LP, we obtain both the proof of the approximation ratio, and a tight worst-case instance.",
                "We have conducted simulations using real auction data from Google.",
                "The results of these simulations, which are highlighted at the end of Section 4, suggest that uniform bidding strategies could be useful in practice.",
                "However, important questions remain about (among other things) alternate bidding goals, on-line or stochastic bidding models [11], and game-theoretic concerns [3], which we briefly discuss in Section 8. 2.",
                "MODELING A KEYWORD AUCTION We describe an auction from an advertisers point of view.",
                "An advertiser bids on a keyword, which we can think of as a word or set of words.",
                "Users of the search engine submit queries.",
                "If the query matches a keyword that has been <br>bid</br> on by an advertiser, then the advertiser is entered into an auction for the available ad slots on the results page.",
                "What constitutes a match varies depending on the search engine. 3 This type of strategy can also be interpreted as bidding one value (on all keywords) for part of the day, and a different value for the rest of the day. 41 An advertiser makes a single <br>bid</br> for a keyword that remains in effect for a period of time, say one day.",
                "The keyword could match many different user queries throughout the day.",
                "Each user query might have a different set of advertisers competing for clicks.",
                "The advertiser could also <br>bid</br> different amounts on multiple keywords, each matching a (possibly overlapping) set of user queries.",
                "The ultimate goal of an advertiser is to maximize traffic to their website, given a certain advertising budget.",
                "We now formalize a model of keyword bidding and define an optimization problem that captures this goal. 2.1 Landscapes We begin by considering the case of a single keyword that matches a single user query.",
                "In this section we define the notion of a query landscape that describes the relationship between the advertisers <br>bid</br> and what will happen on this query as a result of this <br>bid</br>[9].",
                "This definition will be central to the discussion as we continue to more general cases. 2.1.1 Positions, bids and click-through rate The search results page for a query contains p possible positions in which our ad can appear.",
                "We denote the highest (most favorable) position by 1 and lowest by p. Associated with each position i is a value α[i] that denotes the click-through rate (ctr) of the ad in position i.",
                "The ctr is a measure of how likely it is that our ad will receive a click if placed in position i.",
                "The ctr can be measured empirically using past history.",
                "We assume throughout this work that that α[i] ≤ α[j] if j < i, that is, higher positions receive at least as many clicks as lower positions.",
                "In order to place an ad on this page, we must enter the auction that is carried out among all advertisers that have submitted a <br>bid</br> on a keyword that matches the users query.",
                "We will refer to such an auction as a query auction, to emphasize that there is an auction for each query rather than for each keyword.",
                "We assume that the auction is a generalized second price (GSP) auction [5, 7]: the advertisers are ranked in decreasing order of <br>bid</br>, and each advertiser is assigned a price equal to the amount <br>bid</br> by the advertiser below them in the ranking.4 In sponsored search auctions, this advertiser pays only if the user actually clicks on the ad.",
                "Let (b[1], . . . , b[p]) denote the bids of the top p advertisers in this query auction.",
                "For notational convenience, we assume that b[0] = ∞ and b[p] = α[p] = 0.",
                "Since the auction is a generalized second price auction, higher bids win higher positions; i.e. b[i] ≥ b[i + 1].",
                "Suppose that we <br>bid</br> b on some keyword that matches the users query, then our position is defined by the largest b[i] that is at most b, that is, pos(b) = arg max i (b[i] : b[i] ≤ b). (1) Since we only pay if the user clicks (and that happens with probability α[i]), our expected cost for winning position i 4 Google, Yahoo! and MSN all use some variant of the GSP auction.",
                "In the Google auction, the advertisers bids are multiplied by a quality score before they are ranked; our results carry over to this case as well, which we omit from this paper for clarity.",
                "Also, other auctions besides GSP have been considered; e.g., the Vickrey Clark Groves (VCG) auction [14, 4, 7].",
                "Each auction mechanism will result in a different sort of optimization problem.",
                "In the conclusion we point out that for the VCG auction, the bidding optimization problem becomes quite easy. would be cost[i] = α[i] · b[i], where i = pos(b).",
                "We use costq(b) and clicksq(b) to denote the expected cost and clicks that result from having a <br>bid</br> b that qualifies for a query auction q, and thus costq(b) = α[i] · b[i] where i = pos(b), (2) clicksq(b) = α[i] where i = pos(b). (3) The following observations about cost and clicks follow immediately from the definitions and equations (1), (2) and (3).",
                "We use R+ to denote the nonnegative reals.",
                "Observation 1.",
                "For b ∈ R+, 1. (costq(b), clicksq(b)) can only take on one of a finite set of values Vq = {(cost[1], α[1]), . . . , (cost[p], α[p])}. 2.",
                "Both costq(b) and clicksq(b) are non-decreasing functions of b.",
                "Also, cost-per-click (cpc) costq(b)/clicksq(b) is non-decreasing in b. 3. costq(b)/clicksq(b) ≤ b.",
                "For bids (b[1], . . . , b[p]) that correspond to the bids of other advertisers, we have: costq(b[i])/clicksq(b[i]) = b[i], i ∈ [p].",
                "When the context is clear, we drop the subscript q. 2.1.2 Query Landscapes We can summarize the data contained in the functions cost(b) and clicks(b) as a collection of points in a plot of cost vs. clicks, which we refer to as a landscape.",
                "For example, for a query with four slots, a landscape might look like Table 1. <br>bid</br> range cost per click cost clicks [$2.60,∞) $2.60 $1.30 .5 [$2.00,$2.60) $2.00 $0.90 .45 [$1.60,$2.00) $1.60 $0.40 .25 [$0.50,$1.60) $0.50 $0.10 .2 [$0,$0.50) $0 $0 0 Table 1: A landscape for a query It is convenient to represent this data graphically as in Figure 1 (ignore the dashed line for now).",
                "Here we graph clicks as a function of cost.",
                "Observe that in this graph, the cpc (cost(b)/clicks(b)) of each point is the reciprocal of the slope of the line from the origin to the point.",
                "Since cost(b), clicks(b) and cost(b)/clicks(b) are non-decreasing, the slope of the line from the origin to successive points on the plot decreases.",
                "This condition is slightly weaker than concavity.",
                "Suppose we would like to solve the budget optimization problem for a single query landscape.5 As we increase our <br>bid</br> from zero, our cost increases and our expected number of clicks increases, and so we simply submit the highest <br>bid</br> such that we remain within our budget.",
                "One problem we see right away is that since there are only a finite set of points in this landscape, we may not be able to target arbitrary budgets efficiently.",
                "Suppose in the example from Table 1 and Figure 1 that we had a budget 5 Of course it is a bit unrealistic to imagine that an advertiser would have to worry about a budget if only one user query was being considered; however one could imagine multiple instances of the same query and the problem scales. 42 $0.50 $1.00 $1.50 .1 .2 .3 .4 .5 Clicks Cost Figure 1: A <br>bid</br> landscape. of $1.00.",
                "Bidding between $2.00 and $2.60 uses only $0.90, and so we are under-spending.",
                "Bidding more than $2.60 is not an option, since we would then incur a cost of $1.30 and overspend our budget. 2.1.3 Randomized strategies To rectify this problem and better utilize our available budget, we allow randomized bidding strategies.",
                "Let B be a distribution on bids b ∈ R+.",
                "Now we define cost(B) = Eb∼B[cost(b)] and clicks(B) = Eb∼B[clicks(b)].",
                "Graphically, the possible values of (cost(B), clicks(B)) lie in the convex hull of the landscape points.",
                "This is represented in Figure 1 by the dashed line.",
                "To find a <br>bid</br> distribution B that maximizes clicks subject to a budget, we simply draw a vertical line on the plot where the cost is equal to the budget, and find the highest point on this line in the convex hull.",
                "This point will always be the convex combination of at most two original landscape points which themselves lie on the convex hull.",
                "Thus, given the point on the convex hull, it is easy to compute a distribution on two bids which led to this point.",
                "Summarizing, Lemma 1.",
                "If an advertiser is bidding on one keyword, subject to a budget U, then the optimal strategy is to pick a convex combination of (at most) two bids which are at the endpoints of the line on the convex hull at the highest point for cost U.",
                "There is one subtlety in this formulation.",
                "Given any bidding strategy, randomized or otherwise, the resulting cost is itself a random variable representing the expected cost.",
                "Thus if our budget constraint is a hard budget, we have to deal with the difficulties that arise if our strategy would be over budget.",
                "Therefore, we think of our budget constraint as soft, that is, we only require that our expected cost be less than the budget.",
                "In practice, the budget is often an average daily budget, and thus we dont worry if we exceed it one day, as long as we are meeting the budget in expectation.",
                "Further, either the advertiser or the search engine (possibly both), monitor the cost incurred over the day; hence, the advertisers <br>bid</br> can be changed to zero for part of the day, so that the budget is not overspent.6 Thus in the remain6 See https://adwords.google.com/support/bin/answer. py?answer=22183, for example. der of this paper, we will formulate a budget constraint that only needs to be respected in expectation. 2.1.4 Multiple Queries: a Knapsack Problem As a warm-up, we will consider next the case when we have a set of queries, each which its own landscape.",
                "We want to <br>bid</br> on each query independently subject to our budget: the resulting optimization problem is a small generalization of the fractional knapsack problem, and was solved in [9].",
                "The first step of the algorithm is to take the convex hull of each landscape, as in Figure 1, and remove any landscape points not on the convex hull.",
                "Each piecewise linear section of the curve represents the incremental number of clicks and cost incurred by moving ones <br>bid</br> from one particular value to another.",
                "We regard these pieces as items in an instance of fractional knapsack with value equal to the incremental number of clicks and size equal to the incremental cost.",
                "More precisely, for each piece connecting two consecutive bids b and b on the convex hull, we create a knapsack item with value [clicks(b ) − clicks(b )] and size [cost(b ) − cost(b )].",
                "We then emulate the greedy algorithm for knapsack, sorting by value/size (cost-per-click), and choosing greedily until the budget is exhausted.",
                "In this reduction to knapsack we have ignored the fact that some of the pieces come from the same landscape and cannot be treated independently.",
                "However, since each curve is concave, the pieces that come from a particular query curve are in increasing order of cost-per-click; thus from each landscape we have chosen for our knapsack a set of pieces that form a prefix of the curve. 2.2 Keyword Interaction In reality, search advertisers can <br>bid</br> on a large set of keywords, each of them qualifying for a different (possibly overlapping) set of queries, but most search engines do not allow an advertiser to appear twice in the same search results page.7 Thus, if an advertiser has a <br>bid</br> on two different keywords that match the same query, this conflict must be resolved somehow.",
                "For example, if an advertiser has a <br>bid</br> out on the keywords shoes and high-heel, then if a user issues the query high-heel shoes, it will match on two different keywords.",
                "The search engine specifies, in advance, a rule for resolution based on the query the keyword and the <br>bid</br>.",
                "A natural rule is to take the keyword with the highest <br>bid</br>, which we adopt here, but our results apply to other resolution rules.",
                "We model the keyword interaction problem using an undirected bipartite graph G = (K ∪ Q, E) where K is a set of keywords and Q is a set of queries.",
                "Each q ∈ Q has an associated landscape, as defined by costq(b) and clicksq(b).",
                "An edge (k, q) ∈ E means that keyword k matches query q.",
                "The advertiser can control their individual keyword <br>bid</br> vector a ∈ R |K| + specifying a <br>bid</br> ak for each keyword k ∈ K. (For now, we do not consider randomized bids, but we will introduce that shortly.)",
                "Given a particular <br>bid</br> vector a on the keywords, we use the resolution rule of taking the maximum to define the effective <br>bid</br> on query q as bq(a) = max k:(k,q)∈E ak.",
                "By submitting a <br>bid</br> vector a, the advertiser receives some 7 See https://adwords.google.com/support/bin/answer. py?answer=14179, for example. 43 number of clicks and pays some cost on each keyword.",
                "We use the term spend to denote the total cost; similarly, we use the term traffic to denote the total number of clicks: spend(a)= X q∈Q costq(bq(a)); traffic(a)= X q∈Q clicksq(bq(a)) We also allow randomized strategies, where an advertiser gives a distribution A over <br>bid</br> vectors a ∈ R |K| + .",
                "The resulting spend and traffic are given by spend(A)=Ea∼A[spend(a)]; traffic(A)=Ea∼A[traffic(a)] We can now state the problem in its full generality: Budget Optimization Input: a budget U, a keyword-query graph G = (K ∪ Q, E), and landscapes (costq(·), clicksq(·)) for each q ∈ Q.",
                "Find: a distribution A over <br>bid</br> vectors a ∈ R |K| + such that spend(A) ≤ U and traffic(A) is maximized.",
                "We conclude this section with a small example to illustrate some feature of the budget optimization problem.",
                "Suppose you have two keywords K = {u, v} and two queries Q = {x, y} and edges E = {(u, x), (u, y), (v, y)}.",
                "Suppose query x has one position with ctr αx [1] = 1.0, and there is one <br>bid</br> bx 1 = $1.",
                "Query y has two positions with ctrs αy [1] = αy [2] = 1.0, and bids by 1 = $ and by 2 = $1 To get any clicks from x, an advertiser must <br>bid</br> at least $1 on u.",
                "However, because of the structure of the graph, if the advertiser sets bu to $1, then his effective <br>bid</br> is $1 on both x and y.",
                "Thus he must trade-off between getting the clicks from x and getting the bargain of a click for $ that would be possible otherwise. 3.",
                "UNIFORM BIDDING STRATEGIES As we will show in Section 5, solving the Budget Optimization problem in its full generality is difficult.",
                "In addition, it may be difficult to reason about strategies that involve arbitrary distributions over arbitrary <br>bid</br> vectors.",
                "Advertisers generally prefer strategies that are easy to understand, evaluate and use within their larger goals.",
                "With this motivation, we look at restricted classes of strategies that we can easily compute, explain and analyze.",
                "We define a uniform bidding strategy to be a distribution A over <br>bid</br> vectors a ∈ R |K| + where each <br>bid</br> vector in the distribution is of the form (b, b, . . . , b) for some real-valued bid b.",
                "In other words, each vector in the distribution bids the same value on every keyword.",
                "Uniform strategies have several advantages.",
                "First, they do not depend on the edges of the interaction graph, since all effective bids on queries are the same.",
                "Thus, they are effective in the face of limited or noisy information about the keyword interaction graph.",
                "Second, uniform strategies are also independent of the priority rule being used.",
                "Third, any algorithm that gives an approximation guarantee will then be valid for any interaction graph over those keywords and queries.",
                "We now show that we can compute the best uniform strategy efficiently.",
                "Suppose we have a set of queries Q, where the landscape Vq for each query q is defined by the set of points Vq = {(costq[1], αq[1]), . . . , (costq[p], αq[p])}.",
                "We define the set of interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let I = ∪q∈QIq, and let N = |I|.",
                "We can index the points in I as b1, . . . , bN in increasing order.",
                "The ith point in our aggregate landscape V is found by summing, over the queries, the cost and clicks associated with <br>bid</br> bi, that is, V = ∪N i=1( P q∈Q costq(bi), P q∈Q clicksq(bi)).",
                "For any possible <br>bid</br> b, if we use the aggregate landscape just as we would a regular landscape, we exactly represent the cost and clicks associated with making that <br>bid</br> simultaneously on all queries associated with the aggregate landscape.",
                "Therefore, all the definitions and results of Section 2 about landscapes can be extended to aggregate landscapes, and we can apply Lemma 1 to compute the best uniform strategy (using the convex hull of the points in this aggregate landscape).",
                "The running time is dominated by the time to compute the convex hull, which is O(N log N)[12].",
                "The resulting strategy is the convex combination of two points on the aggregate landscape.",
                "Define a two-<br>bid</br> strategy to be a uniform strategy which puts non-zero weight on at most two <br>bid</br> vectors.",
                "We have shown Lemma 2.",
                "Given an instance of Budget Optimization in which there are a total of N points in all the landscapes, we can find the best uniform strategy in O(N log N) time.",
                "Furthermore, this strategy will always be a two-<br>bid</br> strategy.",
                "Putting these ideas together, we get an O(N log N)-time algorithm for Budget Optimization, where N is the total number of landscape points (we later show that this is a (1 − 1 e )-approximation algorithm): 1.",
                "Aggregate all the points from the individual query landscapes into a single aggregate landscape. 2.",
                "Find the convex hull of the points in the aggregate landscape. 3.",
                "Compute the point on the convex hull for the given budget, which is the convex combination of two points α and β. 4.",
                "Output the strategy which is the appropriate convex combination of the uniform <br>bid</br> vectors corresponding to α and β.",
                "We will also consider a special case of two-<br>bid</br> strategies.",
                "A single-<br>bid</br> strategy is a uniform strategy which puts nonzero weight on at most one non-zero vector, i.e. advertiser randomizes between bidding a certain amount b∗ on all keywords, and not bidding at all.",
                "A single-<br>bid</br> strategy is even easier to implement in practice than a two-<br>bid</br> strategy.",
                "For example, the search engines often allow advertisers to set a maximum daily budget.",
                "In this case, the advertiser would simply <br>bid</br> b∗ until her budget runs out, and the ad serving system would remove her from all subsequent auctions until the end of the day.",
                "One could also use an ad scheduling tool offered by some search companies8 to implement this strategy.",
                "The best single-<br>bid</br> strategy can also be computed easily from the aggregate landscape.",
                "The optimal strategy for a budget U will either be the point x s.t. cost(x) is as large as possible without exceeding U, or a convex combination of zero and the point y, where cost(y) is as small as possible while larger than U. 8 See https://adwords.google.com/support/bin/answer. py?answer=33227, for example. 44 B D A C clicks cost cpc A 2 $1 $0.50 B 5 $0.50 $0.10 C 3 $2 $0.67 D 4 $1 $0.25 cpc $0.67 $0.50 $0.25 $0.10 Total clicks: 5 9 11 14 Figure 2: Four queries and their click-price curve. 4.",
                "APPROXIMATION ALGORITHMS In the previous section we proposed using uniform strategies and gave an efficient algorithm to compute the best such strategy.",
                "In section we prove that there is always a good uniform strategy: Theorem 3.",
                "There always exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "Furthermore, for any > 0, there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "We introduce the notion of a click-price curve, which is central to our analysis.",
                "This definition makes it simple to show that there is always a single-<br>bid</br> strategy that is a 1 2 approximation (and this is tight); we then build on this to prove Theorem 3. 4.1 Click-price curves Consider a set of queries Q, and for each query q ∈ Q, let (clicksq(·), costq(·)) be the corresponding <br>bid</br> landscape.",
                "Consider an adversarial bidder Ω with the power to <br>bid</br> independently on each query.",
                "Note that this bidder is more powerful than an optimal bidder, which has to <br>bid</br> on the keywords.",
                "Suppose this strategy bids b∗ q for each query q.",
                "Thus, Ω achieves traffic CΩ = P i clicks(b∗ i ), and incurs total spend UΩ = P i cost(b∗ i ).",
                "Without loss of generality we can assume that Ω bids so that for each query q, the cost per click is equal to b∗ q , i.e. costq(b∗ q )/clicksq(b∗ q ) = b∗ q .",
                "We may assume this because for some query q, if costq(b∗ q)/clicksq(b∗ q) < b∗ q , we can always lower b∗ q and without changing the cost and clicks.",
                "To aid our discussion, we introduce the notion of a clickprice curve (an example of which is shown in Figure 2), which describes the cpc distribution obtained by Ω.",
                "Formally the curve is a non-decreasing function h : [0, CΩ] → R+ defined as h(r) = min{c | P q:b∗ q ≤c clicksq(b∗ q ) ≥ r}.",
                "Another way to construct this curve is to sort the queries in increasing order by b∗ q = costq(b∗ q)/clicksq(b∗ q), then make a step function where the qth step has height b∗ q and width clicksq(b∗ q ) (see Figure 2).",
                "Note that the area of each step is costq(b∗ q ).",
                "The following claim follows immediately: Claim 1.",
                "UΩ = R CΩ 0 h(r)dr.",
                "Suppose we wanted to buy some fraction r /CΩ of the traffic that Ω is getting.",
                "The click-price curve says that if we <br>bid</br> h(r ) on every keyword (and therefore every query), we get at least r traffic, since this <br>bid</br> would ensure that for all q such that b∗ q ≤ h(r ) we win as many clicks as Ω.",
                "Note that by bidding h(r ) on every keyword, we may actually get even more than r traffic, since for queries q where b∗ q is much less than h(r ) we may win more clicks than Ω.",
                "However, all of these extra clicks still cost at most h(r ) per click.",
                "Thus we see that for any r ∈ [0, CΩ], if we <br>bid</br> h(r ) on every keyword, we receive at least r traffic at a total spend of at most h(r ) per click.",
                "Note that by randomizing between bidding zero and bidding h(r ), we can receive exactly r traffic at a total spend of at most r · h(r ).",
                "We summarize this discussion in the following lemma: Lemma 4.",
                "For any r ∈ [0, CΩ], there exists a single-<br>bid</br> strategy that randomizes between bidding h(r) and bidding zero, and this strategy receives exactly r traffic with total spend at most r · h(r).",
                "Lemma 4 describes a landscape as a continuous function.",
                "For our lower bounds, we will need to show that given any continuous function, there exists a discrete landscape that approximates it arbitrarily well.",
                "Lemma 5.",
                "For any C, U > 0 and non-decreasing function f : [0, C] → R+ such that R C 0 f(r)dr = U, and any small > 0, there exists an instance of Budget Optimization with budget U + , where the optimal solution achieves C clicks at cost U + , and all uniform bidding strategies are convex combinations of single-<br>bid</br> strategies that achieve exactly r clicks at cost exactly rf(r) by bidding f(r) on all keywords.",
                "Proof.",
                "Construct an instance as follows.",
                "Let > 0 be a small number that we will later define in terms of .",
                "Define r0 = 0, r1, r2, . . . , rm = C such that ri−1 < ri ≤ ri−1 + , f(ri−1) ≤ f(ri) ≤ f(ri−1)+ , and m ≤ (C +f(C))/ . (This is possible by choosing ris spaced by min( , f(ri)−f(ri−1))) Now make a query qi for all i ∈ [m] with bidders bidding h(ri), h(ri+1), . . . , h(rm), and ctrs α[1] = α[2] = · · · = α[m− i+1] = ri −ri−1.",
                "The graph is a matching with one keyword per query, and so we can imagine the optimal solution as bidding on queries.",
                "The optimal solution will always <br>bid</br> exactly h(ri) on query qi, and if it did so on all queries, it would spend U := Pm i=1(ri − ri−1)h(ri).",
                "Define small enough so that U = U + , which is always possible since U ≤ Z C 0 f(r)dr + mX i=1 (ri − ri−1)(h(ri) − h(ri−1)) ≤ U + 2 m ≤ U + (C + f(C)).",
                "Note that the only possible bids (i.e., all others have the same results as one of these) are f(r0), . . . , f(rm), and bidding uniformly with f(ri) results in Pi j=1 ri − ri−1 = ri clicks at cost h(ri)ri. 4.2 A 1 2 -approximation algorithm Using Lemma 4 we can now show that there is a uniform single-<br>bid</br> strategy that is 1 2 -optimal.",
                "In addition to being an interesting result in its own right, it also serves as a warm-up for our main result.",
                "Theorem 6.",
                "There always exists a uniform single-<br>bid</br> strategy that is 1 2 -optimal.",
                "Furthermore, for any > 0 there exists an instance for which all single-<br>bid</br> strategies are at most (1 2 + )-optimal. 45 Proof.",
                "Applying Lemma 4 with r = CΩ/2, we see that there is a strategy that achieves traffic CΩ/2 with spend CΩ/2·h(CΩ/2).",
                "Now, using the fact that h is a non-decreasing function combined with Claim 1, we have (CΩ/2)h(CΩ/2) ≤ Z CΩ CΩ/2 h(r)dr ≤ Z CΩ 0 h(r)dr = UΩ, (4) which shows that we spend at most UΩ.",
                "We conclude that there is a 1 2 -optimal single-<br>bid</br> strategy randomizing between bidding CΩ/2 and zero.",
                "For the second part of the theorem, we construct a tight example using two queries Q = {x, y}, two keywords K = {u, v}, and edges E = {(u, x), (v, y)}.",
                "Fix some α where 0 < α ≤ 1, and fix some very small > 0.",
                "Query x has two positions, with bids of bx 1 = 1/α and bx 2 = , and with identical click-through rates αx [1] = αx [2] = α. Query y has one position, with a <br>bid</br> of by 1 = 1/α and a click-through rate of αy [1] = α.",
                "The budget is U = 1 + α.",
                "The optimal solution is to <br>bid</br> on u (and therefore x) and <br>bid</br> 1/α on v (and therefore y), both with probability 1.",
                "This achieves a total of 2α clicks and spends the budget exactly.",
                "The only useful bids are 0, and 1/α, since for both queries all other bids are identical in terms of cost and clicks to one of those three.",
                "Any single-<br>bid</br> solution that uses as its non-zero <br>bid</br> gets at most α clicks.",
                "Bidding 1/α on both keywords results in 2α clicks and total cost 2.",
                "Thus, since the budget is U = 1 + α < 2, a single-<br>bid</br> solution using 1/α can put weight at most (1+ α)/2 on the 1/α <br>bid</br>.",
                "This results in at most α(1 + α) clicks.",
                "This can be made arbitrarily close to α by lowering . 4.3 A (1 − 1 e )-approximation algorithm The key to the proof of Theorem 3 is to show that there is a distribution over single-<br>bid</br> strategies from Lemma 4 that obtains at least (1 − 1 e )CΩ clicks.",
                "In order to figure out the best distribution, we wrote a linear program that models the behavior of a player who is trying to maximize clicks and an adversary who is trying to create an input that is hard for the player.",
                "Then using linear programming duality, we were able to derive both an optimal strategy and a tight instance.",
                "After solving the LP numerically, we were also able to see that there is a uniform strategy for the player that always obtains (1 − 1 e )CΩ clicks; and then from the solution were easily able to guess the optimal distribution.",
                "This methodology is similar to that used in work on factor-revealing LPs [8, 10]. 4.3.1 An LP for the worst-case click-price curve.",
                "Consider the adversarys problem of finding a click-price curve for which no uniform bidding strategy can achieve αCΩ clicks.",
                "Recall that by Lemma 1 we can assume that a uniform strategy randomizes between two bids u and v. We also assume that the uniform strategy uses a convex combination of strategies from Lemma 4, which we can assume by Lemma 5.",
                "Thus, to achieve αCΩ clicks, a uniform strategy must randomize between bids h(u) and h(v) where u ≤ αCΩ and v ≥ αCΩ.",
                "Call the set of such strategies S. Given a (u, v) ∈ S, the necessary probabilities in order to achieve αCΩ clicks are easily determined, and we denote them by p1(u, v) and p2(u, v) respectively.",
                "Note further that the advertiser is trying to figure out which of these strategies to use, and ultimately wants to compute a distribution over uniform strategies.",
                "In the LP, she is actually going to compute a distribution over pairs of strategies in S, which we will then interpret as a distribution over strategies.",
                "Using this set of uniform strategies as constraints, we can characterize a set of worst-case click-price curves by the constraints Z CΩ 0 h(r)dr ≤ U ∀(u, v) ∈ S p1(u, v)uh(u) + p2(u, v)vh(v) ≥ U A curve h that satisfies these constraints has the property that all uniform strategies that obtain αCΩ clicks spend more than U. Discretizing this set of inequalities, and pushing the first constraint into the objective function, we get the following LP over variables hr representing the curve: min X r∈{0, ,2 ,...,CΩ} · hr s.t. ∀(u, v) ∈ S, p1(u, v)uhu + p2(u, v)vhv ≥ U In this LP, S is defined in the discrete domain as S = {(u, v) ∈ {0, , 2 , . . . , CΩ}2 : 0 ≤ u ≤ αCΩ ≤ v ≤ CΩ}.",
                "Solving this LP for a particular α, if we get an objective less than U, we know (up to some discretization) that an instance of Budget Optimization exists that cannot be approximated better than α. (The instance is constructed as in the proof of Lemma 5.)",
                "A binary search yields the smallest such α where the objective is exactly U.",
                "To obtain a strategy for the advertiser, we look at the dual, constraining the objective to be equal to U in order to get the polytope of optimum solutions: X (u,v)∈S wu,v = 1 ∀(u, v) ∈ S, X v :(u,v )∈S p1(u, v ) · u · wu,v ≤ and X u :(u ,v)∈S p2(u , v) · v · wu ,v ≤ .",
                "It is straightforward to show that the second set of constraints is equivalent to the following: ∀h ∈ RCΩ/ : X r hr = U, X (u,v)∈S wu,v(p1(u, v) · u · hu + p2(u, v) · v · hv) ≤ U.",
                "Here the variables can be interpreted as weights on strategies in S. A point in this polytope represents a convex combination over strategies in S, with the property that for any click-price curve h, the cost of the mixed strategy is at most U.",
                "Since all strategies in S get at least αCΩ clicks, we have a strategy that achieves an α-approximation.",
                "Interestingly, the equivalence between this polytope and the LP dual above shows that there is a mixture over values r ∈ [0, C] that achieves an α-approximation for any curve h. After a search for the appropriate α (which turned out to be 1 − 1 e ), we solved these two LPs and came up with the plots in Figure 3, which reveal not only the right approximation ratio, but also a picture of the worst-case distribution and the approximation-achieving strategy.9 From the pic9 The parameters U and CΩ can be set arbitrarily using scaling arguments. 46 0 0 C/e C 0 0 C/e C Figure 3: The worst-case click-price curve and (1 − 1/e)-approximate uniform bidding strategy, as found by linear programming. tures, we were able to quickly guess the optimal strategy and worst case example. 4.3.2 Proof of Theorem 3 By Lemma 4, we know that for each r ≤ UΩ, there is a strategy that can obtain traffic r at cost r · h(r).",
                "By mixing strategies for multiple values of r, we construct a uniform strategy that is guaranteed to achieve at least 1−e−1 = 0.63 fraction of Ωs traffic and remain within budget.",
                "Note that the final resulting <br>bid</br> distribution will have some weight on the zero <br>bid</br>, since the single-bid strategies from Lemma 4 put some weight on bidding zero.",
                "Consider the following probability density function over such strategies (also depicted in Figure 3): g(r) = j 0 for r < CΩ/e, 1/r for r ≥ CΩ/e.",
                "Note that R CΩ 0 g(r)dr = R CΩ CΩ/e 1 r dr = 1, i.e. g is a probability density function.",
                "The traffic achieved by our strategy is equal to traffic = Z CΩ 0 g(r)·r dr = Z CΩ CΩ/e 1 r ·r dr = „ 1 − 1 e « CΩ.",
                "The expected total spend of this strategy is at most spend = Z CΩ 0 g(r) · rh(r) dr = Z CΩ CΩ/e h(r) dr ≤ Z CΩ 0 h(r) dr = UΩ.",
                "Thus we have shown that there exists a uniform bidding strategy that is (1 − 1 e )-optimal.",
                "We now show that no uniform strategy can do better.",
                "We will prove that for all > 0 there exists an instance for which all uniform strategies are at most (1 − 1 e + )-optimal.",
                "First we define the following click-price curve over the domain [0, 1]: h(r) = 8 < : 0 for r < e−1 1 e − 2 „ e − 1 r « for r ≥ e−1 Note that h is non-decreasing and non-negative.",
                "Since the curve is over the domain [0, 1] it corresponds to an instance where CΩ = 1.",
                "Note also that R 1 0 h(r) dr = 1 e−2 R 1 1/e e − 1 r dr = 1.",
                "Thus, this curve corresponds to an instance where UΩ = 1.",
                "Using Lemma 5, we construct an actual instance where the best uniform strategies are convex combinations of strategies that <br>bid</br> h(u) and achieve u clicks and u · h(u) cost.",
                "Suppose for the sake of contradiction that there exists a uniform bidding strategy that achieves α > 1−e−1 traffic on this instance.",
                "By Lemma 1 there is always a two-<br>bid</br> optimal uniform bidding strategy and so we may assume that the strategy achieving α clicks randomizes over two bids.",
                "To achieve α clicks, the two bids must be on values h(u) and h(v) with probabilities pu and pv such that pu + pv = 1, 0 ≤ u ≤ α ≤ v and puu + pvv = α.",
                "To calculate the spend of this strategy consider two cases: if u = 0 then we are bidding h(v) with probability pv = α/v.",
                "The spend in this case is: spend = pv · v · h(v) = αh(v) = αe − α/v e − 2 .",
                "Using v ≥ α and then α > 1 − 1 e we get spend ≥ αe − 1 e − 2 > (1 − 1/e)e − 1 e − 2 = 1, contradicting the assumption.",
                "We turn to the case u > 0.",
                "Here we have pu = v−α v−u and pv = α−u v−u .",
                "Note that for r ∈ (0, 1] we have h(r) ≥ 1 e−2 (e − 1 r ).",
                "Thus spend ≥ pu · uh(u) + pv · vh(v) = (v − α)(ue − 1) + (α − u)(ve − 1) (v − u)(e − 2) = αe − 1 e − 2 > 1.",
                "The final inequality follows from α > 1 − 1 e .",
                "Thus in both cases the spend of our strategy is over the budget of 1. 4.4 Experimental Results We ran simulations using the data available at Google which we briefly summarize here.",
                "We took a large advertising campaign, and, using the set of keywords in the campaign, computed three different curves (see Figure 4) for three different bidding strategies.",
                "The x-axis is the budget (units removed), and the y-axis is the number of clicks obtained (again without units) by the optimal <br>bid</br>(s) under each respective strategy.",
                "Query bidding represents our (unachievable) upper bound Ω, bidding on each query independently.",
                "The uniform bidding curves represent the results of applying our algorithm: deterministic uses a single <br>bid</br> level, while randomized uses a distribution.",
                "For reference, we include the lower bound of a (e − 1)/e fraction of the top curve.",
                "The data clearly demonstrate that the best single uniform <br>bid</br> obtains almost all the possible clicks in practice.",
                "Of course in a more realistic environment without full knowledge, it is not always possible to find the best such <br>bid</br>, so further investigation is required to make this approach useful.",
                "However, just knowing that there is such a <br>bid</br> available should make the on-line versions of the problem simpler. 5.",
                "HARDNESS RESULTS By a reduction from vertex cover we can show the following (proof omitted): Theorem 7.",
                "Budget Optimization is strongly NP-hard. 47 Query Bidding Uniform Bidding (randomized) Uniform Bidding (deterministic) Lower bound 0 0 0.5 0.5 1 1 Budget Clicks Figure 4: An example with real data.",
                "Now suppose we introduce weights on the queries that indicate the relative value of a click from the various search users.",
                "Formally, we have weights wq for all q ∈ Q and our goal is maximize the total weighted traffic given a budget.",
                "Call this the Weighted Keyword Bidding problem.",
                "With this additional generalization we can show hardness of approximation via a simple reduction from the Maximum Coverage problem, which is known to be (1−1/e)-hard [6] (proof omitted).",
                "Theorem 8.",
                "The Weighted Keyword Bidding problem is hard to approximate to within (1 − 1/e). 6.",
                "EXACT ALGORITHMS FOR LAMINAR GRAPHS If a graph has special structure, we can sometimes solve the budget optimization problem exactly.",
                "Note that the knapsack algorithm in Section 2 solves the problem for the case when the graph is a simple matching.",
                "Here we generalize this to the case when the graph has a laminar structure, which will allow us to impose a (partial) ordering on the possible <br>bid</br> values, and thereby give a pseudopolynomial algorithm via dynamic programming.",
                "We first show that to solve the Budget Optimization problem (for general graphs) optimally in pseudopolynomial time, it suffices to provide an algorithm that solves the deterministic case.",
                "The proof (omitted) uses ideas similar to Observation 1 and Lemma 1.",
                "Lemma 9.",
                "Let I be an input to the Budget Optimization problem and suppose that we find the optimal deterministic solution for every possible budget U ≤ U.",
                "Then we can find the optimal solution in time O(U log U).",
                "A collection S of n sets S1, . . . , S2 is laminar if, for any two sets Si and Sj, if Si ∩ Sj = ∅ then either Si ⊆ Sj or Sj ⊆ Si.",
                "Given a keyword interaction graph G, we associate a set of neighboring queries Qk = {q : (k, q) ∈ E} with each keyword k. If this collection of sets if laminar, we say that the graph has the laminar property.",
                "Note that a laminar interaction graph would naturally fall out as a consequence of designing a hierarchical keyword set (e.g., shoes, highheel shoes, athletic shoes).",
                "We call a solution deterministic if it consists of one <br>bid</br> vector, rather than a general distribution over <br>bid</br> vectors.",
                "The following lemma will be useful for giving a structure to the optimal solution, and will allow dynamic programming.",
                "Lemma 10.",
                "For keywords i, j ∈ K, if Qi ⊆ Qj then there exists an optimal deterministic solution to the Budget Optimization problem with ai ≥ aj.",
                "We can view the laminar order as a tree with keyword j as a parent of keyword i if Qj is the minimal set containing Qi.",
                "In this case we say that j is a child of i.",
                "Given a keyword j with c children i1, . . . , ic, we now need to enumerate over all ways to allocate the budget among the children and also over all possible minimum bids for the children.",
                "A complication is that a node may have many children and thus a term of Uc would not even be pseudopolynomial.",
                "We can solve this problem by showing that given any laminar ordering, there is an equivalent one in which each keyword has at most 2 children.",
                "Lemma 11.",
                "Let G be a graph with the laminar property.",
                "There exists another graph G with the same optimal solution to the Budget Optimization problem, where each node has at most two children in the laminar ordering.",
                "Furthermore, G has at most twice as many nodes as G. Given a graph with at most two children per node, we define F[i, b, U] to be the maximum number of clicks achievable by bidding at least b on each of keywords j s.t.",
                "Qj ⊆ Qi (and exactly b on keyword i) while spending at most U.",
                "For this definition, we use Z(b, U) to denote set of allowable bids and budgets over children: Z(b, U) = {b, b , U , U : b ≥ b, U ≤ U, b ≥ b, U ≤ U, U + U ≤ U} Given a keyword i and a <br>bid</br> ai, compute an incremental spend and traffic associated with bidding ai on keyword i, that is ˆt(i, ai) = X q∈Qi\\Qi−1 clicksq(ai), and ˆs(i, ai) = X q∈Qi\\Qi−1 costq(ai).",
                "Now we define F[i, b, U] as max b, b ,U ,U ∈Z(b,U) j F[j , b , U ] + F[j , b , U ] + ˆt(i, b) ff (5) if (ˆs(i, b) ≤ U − U − U and i > 0), and F[i, b, U] = 0 otherwise.",
                "Lemma 12.",
                "If the graph G has the laminar property, then, after applying Lemma 11, the dynamic programming recurrence in (5) finds an optimal deterministic solution to the Budget Optimization problem exactly in O(B3 U3 n) time.",
                "In addition, we can apply Lemma 9 to compute the optimal (randomized) solution.",
                "Observe that in the dynamic program, we have already solved the instance for every budget U ≤ U, so we can find the randomized solution with no additional asymptotic overhead. 48 Lemma 13.",
                "If the graph G has the laminar property, then, by applying Lemma 11, the dynamic programming recurrence in (5), and Lemma 9, we can find an optimal solution to the Budget Optimization problem in O(B3 U3 n) time.",
                "The bounds in this section make pessimistic assumptions about having to try every budget and every level.",
                "For many problems, you only need to choose from a discrete set of <br>bid</br> levels (e.g., multiples of one cent).",
                "Doing so yields the obvious improvement in the bounds. 7.",
                "<br>bid</br> OPTIMIZATION UNDER VCG The GSP auction is not the only possible auction one could use for sponsored search.",
                "Indeed the VCG auction and variants [14, 4, 7, 1] offer alternatives with compelling game-theoretic properties.",
                "In this section we argue that the budget optimization problem is easy under the VCG auction.",
                "For a full definition of VCG and its application to sponsored search we refer the reader to [1, 2, 5].",
                "For the sake of the budget optimization problem we can define VCG by just redefining costq(b) (replacing Equation (2)): costq(b) = p−1 X j=i (α[j] − α[j + 1]) · b[j] where i = pos(b).",
                "Observation 1 still holds, and we can construct a landscape as before, where each landscape point corresponds to a particular <br>bid</br> b[i].",
                "We claim that in the VCG auction, the landscapes are convex.",
                "To see this, consider two consecutive positions i,i + 1.",
                "The slope of line segment between the points corresponding to those two positions is cost(b[i]) − cost(b[i + 1]) clicks(b[i]) − clicks(b[i + 1]) = (α[i] − α[i + 1]) · b[i] α[i] − α[i + 1] = b[i].",
                "Since b[i] ≥ b[i + 1], the slopes of the pieces of the landscape decrease, and we get that the curve is convex.",
                "Now consider running the algorithm described in Section 2.1.4 for finding the optimal bids for a set of queries.",
                "In this algorithm we took all the pieces from the landscape curves, sorted them by incremental cpc, then took a prefix of those pieces, giving us bids for each of the queries.",
                "But, the equation above shows that each piece has its incremental cpc equal to the <br>bid</br> that achieves it; thus in the case of VCG the pieces are also sorted by <br>bid</br>.",
                "Hence we can obtain any prefix of the pieces via a uniform <br>bid</br> on all the keywords.",
                "We conclude that the best uniform <br>bid</br> is an optimal solution to the budget optimization problem. 8.",
                "CONCLUDING REMARKS Our algorithmic result presents an intriguing heuristic in practice: <br>bid</br> a single value b on all keywords; at the end of the day, if the budget is under-spent, adjust b to be higher; if budget is overspent, adjust b to be lower; else, maintain b.",
                "If the scenario does not change from day to day, this simple strategy will have the same theoretical properties as our one-<br>bid</br> strategy, and in practice, is likely to be much better.",
                "Of course the scenario does change, however, and so coming up with a stochastic bidding strategy remains an important open direction, explored somewhat by [11, 13].",
                "Another interesting generalization is to consider weights on the clicks, which is a way to model conversions. (A conversion corresponds to an action on the part of the user who clicked through to the advertiser site; e.g., a sale or an account sign-up.)",
                "Finally, we have looked at this system as a black box returning clicks as a function of <br>bid</br>, whereas in reality it is a complex repeated game involving multiple advertisers.",
                "In [3], it was shown that when a set of advertisers use a strategy similar to the one we suggest here, under a slightly modified first-price auction, the prices approach a well-understood market equilibrium.",
                "Acknowledgments We thank Rohit Rao, Zoya Svitkina and Adam Wildavsky for helpful discussions. 9.",
                "REFERENCES [1] G. Aggarwal, A. Goel and R. Motwani.",
                "Truthful auctions for pricing search keywords.",
                "ACM Conference on Electronic Commerce, 1-7, 2006. [2] G. Aggarwal, J. Feldman and S. Muthukrishnan Bidding to the Top: VCG and Equilibria of Position-Based Auctions Proc.",
                "WAOA, 2006. [3] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian.",
                "Dynamics of <br>bid</br> optimization in online advertisement auctions.",
                "Proc.",
                "WWW 2007. [4] E. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11(1):17-33, 1971. [5] B. Edelman, M. Ostrovsky and M. Schwarz.",
                "Internet Advertising and the Generalized Second Price Auction: Selling Billions of Dollars Worth of Keywords.",
                "Second workshop on sponsored search auctions, 2006. [6] U. Feige.",
                "A threshold of ln n for approximating set cover. 28th ACM Symposium on Theory of Computing, 1996, pp. 314-318. [7] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41(4): 617-631, 1973. [8] K. Jain, M. Mahdian, E. Markakis, A. Sabieri and V. Vazirani.",
                "Greedy facility location algorithms analyzed using dual fitting with factor-revealing LP.",
                "J. ACM, 50(6): 795-824, 2003. [9] W. Labio, M. Rose, S. Ramaswamy.",
                "Internal Document, Google, Inc. May, 2004. [10] A. Mehta, A. Saberi, U. Vazirani, and V. Vazirani, Adwords and Generalized Online Matching.",
                "FOCS 2005. [11] S. Muthukrishnan, M. P´al and Z. Svitkina.",
                "Stochastic models for budget optimization in search-based advertising.",
                "To appear in 3rd Workshop on Sponsored Search Auctions, WWW 2007. [12] F. Preparata and M. Shamos.",
                "Computational Geometry: An Introduction.",
                "Springer-Verlag, New York, NY, 1985. [13] P. Rusmevichientong and D. Williamson.",
                "An adaptive algorithm for selecting profitable keywords for search-based advertising services Proc. 7th ACM conference on Electronic commerce, 260 - 269, 2006. [14] W. Vickrey.",
                "Counterspeculation, auctions and competitive-sealed tenders.",
                "Journal of Finance, 16(1):8-37, 1961. 49"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Si bien la mayoría de las variantes son NP-Hard, mostramos, quizás sorprendentemente, que simplemente aleatorizar entre dos estrategias uniformes que \"ofertan\" por igual en todas las palabras clave funciona bien.",
                "El enfoque en este documento se trata de cómo los anunciantes \"ofertan\".",
                "Dado el gráfico G junto con las funciones ClickSq (·) y Costq (·) en las consultas, así como un presupuesto U, determine las ofertas BK para cada palabra clave k ∈ K de tal manera que P Q Clicksq (BQ) se maximice su sujeto a PQ COSTQ (BQ) ≤ U, donde la \"oferta\" efectiva BQ en una consulta es alguna función de las ofertas de palabras clave en el vecindario de q.",
                "La estrategia encontrada por el algoritmo es una estrategia uniforme de \"oferta\", lo que significa que aleatoriza entre ofertar algún valor B1 en todas las palabras clave, y ofertar algún otro valor B2 en todas las palabras clave hasta que el presupuesto se agote 3.",
                "También damos un algoritmo (1/2) de acroximación que ofrece una estrategia uniforme de \"oferta\", solo usando un valor B1.(Esto es apretado para estrategias uniformes de una sola \"oferta\").",
                "Por lo tanto, podría ser sorprendente que una estrategia uniforme de dos \"ofertas\" sea del 63% o más efectiva en comparación con el óptimo.",
                "De hecho, nuestra prueba es más fuerte, lo que demuestra que esta estrategia es un 63% efectiva contra un adversario estrictamente más poderoso que puede \"ofertar\" independientemente en las consultas individuales, es decir, no estar limitada por la interacción impuesta por el gráfico G. Nuestra prueba deLa relación 1 - 1/E se basa en un análisis adversario.",
                "Si la consulta coincide con una palabra clave que un anunciante ha \"ofertado\", entonces el anunciante se ingresa en una subasta para las ranuras de anuncios disponibles en la página de resultados.",
                "Lo que constituye una coincidencia varía según el motor de búsqueda.3 Este tipo de estrategia también se puede interpretar como un valor de oferta (en todas las palabras clave) para parte del día y un valor diferente para el resto del día.41 Un anunciante hace una sola \"oferta\" para una palabra clave que permanece vigente por un período de tiempo, digamos un día.",
                "El anunciante también podría \"ofertar\" cantidades diferentes en múltiples palabras clave, cada una coincidente con un conjunto de consultas de usuario (posiblemente superpuestas).",
                "En esta sección definimos la noción de un panorama de consulta que describe la relación entre la \"oferta\" de los anunciantes y lo que sucederá en esta consulta como resultado de esta \"oferta\" [9].",
                "Para colocar un anuncio en esta página, debemos ingresar la subasta que se lleva a cabo entre todos los anunciantes que han presentado una \"oferta\" en una palabra clave que coincida con la consulta de los usuarios.",
                "Suponemos que la subasta es una subasta de segundo precio generalizado (GSP) [5, 7]: los anunciantes se clasifican en orden decreciente de \"oferta\", y a cada anunciante se le asigna un precio igual a la cantidad \"oferta\" por el anunciante a continuación.ellos en la clasificación.4 En subastas de búsqueda patrocinadas, este anunciante solo paga si el usuario realmente hace clic en el anuncio.",
                "Supongamos que \"ofertó\" B en una palabra clave que coincida con la consulta de los usuarios, entonces nuestra posición está definida por la B [i] más grande que es como máximo B, es decir, pos (b) = arg max I (b [i]: b [i] ≤ b).(1) Dado que solo pagamos si el usuario hace clic (y eso sucede con probabilidad α [i]), nuestro costo esperado para ganar la posición I 4 Google, Yahoo!y MSN usan alguna variante de la subasta GSP.",
                "Utilizamos CostQ (b) y Clicksq (b) para denotar el costo y los clics esperados que resultan de tener una \"oferta\" b que califica para una subasta de consulta q, y por lo tanto Costoq (b) = α [i] · b [i] donde i = pos (b), (2) clicksq (b) = α [i] donde i = pos (b).(3) Las siguientes observaciones sobre costos y clics siguen inmediatamente de las definiciones y ecuaciones (1), (2) y (3).",
                "Por ejemplo, para una consulta con cuatro ranuras, un paisaje puede parecerse a la Tabla 1. Costo de rango de \"oferta\" por clic Costo de costo [$ 2.60, ∞) $ 2.60 $ 1.30 .5 [$ 2.00, $ 2.60) $ 2.00 $ 0.90 .45 [$ 1.60, $ 2.00)$ 1.60 $ 0.40 .25 [$ 0.50, $ 1.60) $ 0.50 $ 0.10 .2 [$ 0, $ 0.50) $ 0 $ 0 0 Tabla 1: Un panorama para una consulta Es conveniente representar estos datos gráficamente como en la Figura 1 (ignore la línea discontinua por ahora).",
                "Supongamos que nos gustaría resolver el problema de optimización del presupuesto para un solo panorama de consultas.5 A medida que aumentamos nuestra \"oferta\" de cero, nuestro aumento de costos y nuestro número esperado de clics aumentan, por lo que simplemente presentamos la \"oferta\" más alta para quePermanecemos dentro de nuestro presupuesto.",
                "Supongamos en el ejemplo de la Tabla 1 y la Figura 1 que tuvimos un presupuesto 5, por supuesto, es un poco poco realista imaginar que un anunciante tendría que preocuparse por un presupuesto si solo se considerara una consulta de usuario;Sin embargo, uno podría imaginar múltiples instancias de la misma consulta y las escalas de problemas.42 $ 0.50 $ 1.00 $ 1.50 .1 .2 .3 .4 .5 clics Costo Figura 1: un panorama de \"oferta\".de $ 1.00.",
                "Para encontrar una distribución de \"oferta\" B que maximice los clics sujetos a un presupuesto, simplemente dibujamos una línea vertical en la trama donde el costo es igual al presupuesto y encontramos el punto más alto en esta línea en el casco convexo.",
                "Además, el anunciante o el motor de búsqueda (posiblemente ambos) monitorean el costo incurrido durante el día;Por lo tanto, la \"oferta\" de los anunciantes se puede cambiar a cero durante parte del día, por lo que el presupuesto no es excesivo.6 Por lo tanto, en el resto6 ver https://adwords.google.com/support/bin/answer.Py? Respuesta = 22183, por ejemplo.DER De este documento, formularemos una restricción presupuestaria que solo debe respetarse en la expectativa.2.1.4 Consultas múltiples: un problema de mochila como calentamiento, consideraremos a continuación el caso cuando tengamos un conjunto de consultas, cada una de las cuales su propio paisaje.",
                "Queremos \"ofertar\" en cada consulta sujeto independientemente a nuestro presupuesto: el problema de optimización resultante es una pequeña generalización del problema de la mochila fraccional y se resolvió en [9].",
                "Cada sección lineal por partes de la curva representa el número incremental de clics y el costo incurrido al mover los \"ofertas\" de un valor particular a otro.",
                "Sin embargo, dado que cada curva es cóncava, las piezas que provienen de una curva de consulta particular están en un orden creciente de costo por clic;Por lo tanto, de cada paisaje hemos elegido para nuestra mochila un conjunto de piezas que forman un prefijo de la curva.2.2 Interacción de palabras clave En la realidad, los anunciantes de búsqueda pueden \"ofertar\" en un gran conjunto de palabras clave, cada una de ellas calificando para un conjunto diferente (posiblemente superpuesto) de consultas, pero la mayoría de los motores de búsqueda no permiten que un anunciante aparezca dos veces en la misma búsqueda.Página de resultados.7 Por lo tanto, si un anunciante tiene una \"oferta\" en dos palabras clave diferentes que coinciden con la misma consulta, este conflicto debe resolverse de alguna manera.",
                "Por ejemplo, si un anunciante tiene una \"oferta\" en las palabras clave y los zapatos de tacón alto, entonces si un usuario emite las calzado de tacón alto de consulta, coincidirá con dos palabras clave diferentes.",
                "El motor de búsqueda especifica, por adelantado, una regla de resolución basada en la consulta la palabra clave y la \"oferta\".",
                "Una regla natural es tomar la palabra clave con la \"oferta\" más alta, que adoptamos aquí, pero nuestros resultados se aplican a otras reglas de resolución.",
                "",
                "Dada un vector de \"oferta\" particular en las palabras clave, utilizamos la regla de resolución de tomar el máximo para definir la \"oferta\" efectiva en la consulta q como bq (a) = max k: (k, q) ∈E ak.",
                "Al enviar un vector de \"oferta\" A, el anunciante recibe unos 7 ver https://adwords.google.com/support/bin/answer.Py? Respuesta = 14179, por ejemplo.43 Número de clics y paga algún costo en cada palabra clave.",
                "Usamos el término gasto para denotar el costo total;Del mismo modo, usamos el término tráfico para denotar el número total de clics: gasto (a) = x q∈Q costq (bq (a));tráfico (a) = x q∈Q clicksq (bq (a)) También permitimos estrategias aleatorias, donde un anunciante da una distribución a los vectores de \"oferta\" a ∈ R | k |+.",
                "Encontrar: una distribución a los vectores de \"oferta\" a ∈ R | k |+ Tal que el gasto (a) ≤ u y el tráfico (a) se maximizan.",
                "Supongamos que la consulta x tiene una posición con CTR αx [1] = 1.0, y hay una \"oferta\" BX 1 = $ 1.",
                "La consulta Y tiene dos posiciones con CTRS αy [1] = αy [2] = 1.0, y oferta por 1 = $ y por 2 = $ 1 para obtener cualquier clic de X, un anunciante debe \"ofertar\" al menos $ 1 en u.",
                "Sin embargo, debido a la estructura del gráfico, si el anunciante establece BU a $ 1, entonces su \"oferta\" efectiva es de $ 1 en X e Y.",
                "Además, puede ser difícil razonar sobre estrategias que involucran distribuciones arbitrarias sobre vectores arbitrarios de \"oferta\".",
                "Definimos una estrategia de licitación uniforme para que sea una distribución a los vectores de \"oferta\" a ∈ R | K |+ donde cada vector de \"oferta\" en la distribución es de la forma (b, b, ..., b) para alguna oferta de valor real b.",
                "El punto ésimo en nuestro paisaje agregado V se encuentra sumando, sobre las consultas, el costo y los clics asociados con \"Bid\" BI, es decir, V = ∪n i = 1 (P Q∈Q Costoq (BI), P Q∈Q Clicksq (bi)).",
                "Para cualquier posible \"oferta\" B, si usamos el paisaje agregado tal como lo haríamos con un paisaje regular, representamos exactamente el costo y los clics asociados con la realización de \"oferta\" simultáneamente en todas las consultas asociadas con el panorama agregado.",
                "Defina una estrategia de dos \"ofertas\" para ser una estrategia uniforme que pone el peso no cero como máximo dos vectores de \"oferta\".",
                "Además, esta estrategia siempre será una estrategia de dos \"ofertas\".",
                "Salida La estrategia que es la combinación convexa apropiada de los vectores uniformes de \"oferta\" correspondientes a α y β.",
                "También consideraremos un caso especial de dos estrategias de \"oferta\".",
                "Una sola estrategia de \"oferta\" es una estrategia uniforme que pone un peso distinto de cero como máximo un vector distinto de cero, es decir, el anunciante aleatoriza entre ofertar una cierta cantidad b ∗ en todas las palabras clave, y no una oferta en absoluto.",
                "Una estrategia de \"oferta\" es aún más fácil de implementar en la práctica que una estrategia de dos \"ofertas\".",
                "En este caso, el anunciante simplemente \"ofertaría\" b ∗ hasta que su presupuesto se agote, y el sistema de porción de anuncios la eliminaría de todas las subastas posteriores hasta el final del día.",
                "La mejor estrategia de \"oferta\" también se puede calcular fácilmente a partir del panorama agregado.",
                "Esta definición hace que sea sencillo demostrar que siempre hay una sola estrategia de \"oferta\" que es una aproximación de 1 2 (y esto es apretado);Luego construimos sobre esto para probar el teorema 3. 4.1 Las curvas de precio de clic consideramos un conjunto de consultas q, y para cada consulta q ∈ Q, Sea (ClickSq (·), Costq (·)) el panorama de \"oferta\" correspondiente.",
                "Considere un postor adversario ω con el poder de \"ofertar\" de forma independiente en cada consulta.",
                "Tenga en cuenta que este postor es más poderoso que un postor óptimo, que tiene que \"ofertar\" en las palabras clave.",
                "La curva de precio del clic dice que si \"ofertamos\" h (r) en cada palabra clave (y por lo tanto en cada consulta), obtenemos al menos el tráfico R, ya que esta \"oferta\" aseguraría que para todas las Q tal que b ∗ q ≤H (R) Ganamos tantos clics como Ω.",
                "Por lo tanto, vemos que para cualquier r ∈ [0, Cω], si \"ofertó\" h (r) en cada palabra clave, recibimos al menos r tráfico a un gasto total de a lo sumo H (r) por clic.",
                "Para cualquier r ∈ [0, CΩ], existe una estrategia de \"oferta\" que se aleatoriza entre la oferta H (R) y la licitación cero, y esta estrategia recibe exactamente el tráfico R con el gasto total a lo sumo R · H (R).",
                "Para cualquier función C, u> 0 y no dre-decreting F: [0, C] → R + tal que R C 0 F (R) dr = U, y cualquier pequeño> 0, existe una instancia de optimización del presupuesto con el presupuesto U +, donde la solución óptima logra los clics C en el costo U +, y todas las estrategias de licitación uniformes son combinaciones convexas de estrategias de \"oferta\" que logran exactamente los clics R al costo exactamente RF (R) al ofertar F (R) en todas las palabras clave.",
                "La solución óptima siempre \"ofertará\" exactamente H (RI) en la consulta Qi, y si lo hiciera en todas las consultas, gastaría U: = PM I = 1 (RI - RI - 1) H (RI).",
                "Tenga en cuenta que las únicas ofertas posibles (es decir, todos los demás tienen los mismos resultados que uno de estos) son F (R0) ,..., F (RM), y la oferta de manera uniforme con F (RI) da como resultado pi J = 1 RI - RI - 1 = RI Haga clic en Costo H (RI) RI.4.2 A 1 2 -Algoritmo de acroximación usando Lemma 4 Ahora podemos demostrar que hay una estrategia uniforme de \"oferta\" que es 1 2 -óptima.",
                "Siempre existe una estrategia uniforme de \"oferta\" que sea 1 2 -Optimal.",
                "Además, para cualquier> 0 existe una instancia para la cual todas las estrategias de una sola \"oferta\" son como máximo (1 2 +) óptimas.45 Prueba.",
                "Llegamos a la conclusión de que hay una estrategia de \"oferta única\" óptima de 1 2 aleatorización entre la oferta Cω/2 y cero.",
                "La consulta X tiene dos posiciones, con ofertas de Bx 1 = 1/α y Bx 2 =, y con tasas idénticas de clics αx [1] = αx [2] = α.La consulta y tiene una posición, con una \"oferta\" de 1 = 1/α y una tasa de clics de αy [1] = α.",
                "La solución óptima es \"ofertar\" en u (y, por lo tanto, x) y \"ofertar\" 1/α en V (y, por lo tanto, y, ambos con probabilidad 1.",
                "Cualquier solución de \"oferta\" que use como su \"oferta\" no cero obtiene como máximo clics α.",
                "Por lo tanto, dado que el presupuesto es u = 1 + α <2, una solución de \"oferta\" que usa 1/α puede poner peso como máximo (1+ α)/2 en la \"oferta\" 1/α.",
                "Esto se puede hacer arbitrariamente cerca de α bajando.4.3 ALGORITMO A (1-1 E)-ALGORITMO DE APROPIACIÓN La clave para la prueba del teorema 3 es mostrar que hay una distribución sobre las estrategias de una sola \"oferta\" de Lemma 4 que obtiene al menos (1-1 e) clic en CΩ.",
                "Tenga en cuenta que la distribución final de \"oferta\" resultante tendrá algo de peso en la \"oferta\" cero, ya que las estrategias de oferta única de Lemma 4 ponen algo de peso en la oferta cero.",
                "Usando Lemma 5, construimos una instancia real en la que las mejores estrategias uniformes son combinaciones convexas de estrategias que \"ofertan\" h (u) y logran los clics y el costo de U · h (u).",
                "Por el Lema 1 siempre hay una estrategia de licitación uniforme óptima de dos \"ofertas\", por lo que podemos suponer que la estrategia que logran los clics α aleatoriza en dos ofertas.",
                "El eje X es el presupuesto (unidades eliminadas), y el eje Y es el número de clics obtenidos (nuevamente sin unidades) por las \"ofertas\" óptimas en cada estrategia respectiva.",
                "Las curvas de licitación uniformes representan los resultados de aplicar nuestro algoritmo: Detetinistic usa un solo nivel de \"oferta\", mientras que el azar usa una distribución.",
                "Los datos demuestran claramente que la mejor \"oferta\" uniforme de uniforme obtiene casi todos los clics posibles en la práctica.",
                "Por supuesto, en un entorno más realista sin pleno conocimiento, no siempre es posible encontrar la mejor \"oferta\", por lo que se requiere más investigación para que este enfoque sea útil.",
                "Sin embargo, solo saber que existe una \"oferta\" disponible debería simplificar las versiones en línea del problema.5.",
                "Aquí generalizamos esto al caso cuando el gráfico tiene una estructura laminar, que nos permitirá imponer un orden (parcial) en los posibles valores de \"oferta\" y, por lo tanto, dar un algoritmo pseudopolinomio a través de la programación dinámica.",
                "Llamamos a una solución determinista si consiste en un vector de \"oferta\", en lugar de una distribución general sobre los vectores de \"oferta\".",
                "Para esta definición, usamos z (b, u) para denotar un conjunto de ofertas y presupuestos permitidos sobre niños: z (b, u) = {b, b, u, u: b ≥ b, u ≤ u, b ≥ b, U ≤ u, u + u ≤ u} dada una palabra clave I y una \"oferta\" ai, calcule un gasto incremental y el tráfico asociado con la oferta AI en la palabra clave I, es decir, ˆt (i, ai) = x q∈Qi \\Qi - 1 Clicksq (ai), y ˆs (i, ai) = x q∈Qi \\ qi - 1 costq (ai).",
                "Para muchos problemas, solo necesita elegir entre un conjunto discreto de niveles de \"oferta\" (por ejemplo, múltiplos de un centavo).",
                "La optimización de \"oferta\" en VCG, la subasta GSP no es la única subasta posible que se podría usar para la búsqueda patrocinada.",
                "La observación 1 todavía se mantiene, y podemos construir un paisaje como antes, donde cada punto de paisaje corresponde a una \"oferta\" particular b [i].",
                "Pero, la ecuación anterior muestra que cada pieza tiene su CPC incremental igual a la \"oferta\" que la logra;Por lo tanto, en el caso de VCG, las piezas también se clasifican por \"oferta\".",
                "Por lo tanto, podemos obtener cualquier prefijo de las piezas a través de una \"oferta\" uniforme en todas las palabras clave.",
                "Concluimos que la mejor \"oferta\" uniforme es una solución óptima para el problema de optimización del presupuesto.8.",
                "Observaciones finales Nuestro resultado algorítmico presenta una heurística intrigante en la práctica: \"ofertar\" un valor único B en todas las palabras clave;Al final del día, si el presupuesto está bajo giro, ajuste B para que sea más alto;Si el presupuesto es excesivo, ajuste B para que sea más bajo;más, mantenga b.",
                "Si el escenario no cambia de día a día, esta estrategia simple tendrá las mismas propiedades teóricas que nuestra estrategia de \"oferta\", y en la práctica, es probable que sea mucho mejor.",
                "Finalmente, hemos visto este sistema como un cuadro negro que devuelve los clics en función de la \"oferta\", mientras que en realidad es un juego repetido complejo que involucra múltiples anunciantes.",
                "Dinámica de la optimización de \"oferta\" en subastas de anuncios en línea."
            ],
            "translated_text": "",
            "candidates": [
                "licitación",
                "ofertan",
                "licitación",
                "ofertan",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "BID",
                "oferta",
                "oferta",
                "licitación",
                "ofertas",
                "licitación",
                "ofertar",
                "licitación",
                "ofertado",
                "licitación",
                "oferta",
                "licitación",
                "ofertar",
                "licitación",
                "oferta",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "oferta",
                "licitación",
                "ofertó",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "ofertar",
                "licitación",
                "ofertas",
                "licitación",
                "ofertar",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "",
                "oferta",
                "oferta",
                "licitación",
                "oferta",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "ofertar",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "oferta",
                "licitación",
                "Bid",
                "licitación",
                "oferta",
                "oferta",
                "licitación",
                "ofertas",
                "oferta",
                "licitación",
                "ofertas",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "ofertas",
                "licitación",
                "ofertaría",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "oferta",
                "licitación",
                "ofertar",
                "licitación",
                "ofertar",
                "licitación",
                "ofertamos",
                "oferta",
                "licitación",
                "ofertó",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "ofertará",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta única",
                "licitación",
                "oferta",
                "BID",
                "ofertar",
                "ofertar",
                "licitación",
                "oferta",
                "oferta",
                "licitación",
                "oferta",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "oferta",
                "licitación",
                "ofertan",
                "licitación",
                "ofertas",
                "licitación",
                "ofertas",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "Oferta",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "oferta",
                "licitación",
                "oferta",
                "Oferta",
                "oferta",
                "licitación",
                "ofertar",
                "licitación",
                "oferta",
                "licitación",
                "oferta",
                "licitación",
                "oferta"
            ],
            "error": []
        }
    }
}