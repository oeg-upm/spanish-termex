{
    "id": "C-74",
    "original_text": "Adapting Asynchronous Messaging Middleware to ad-hoc Networking Mirco Musolesi Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware. In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed. Instead, asynchronous communication seems to be a generally more suitable paradigm for such environments. Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems. In this paper, we present our experience in designing, implementing and evaluating EMMA (Epidemic Messaging Middleware for ad-hoc networks), an adaptation of Java Message Service (JMS) for mobile ad-hoc environments. We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years. Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1. INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment. Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces. Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity. Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised. In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved. In this paper, we examine one of the foundational aspects of middleware for mobile ad-hoc environments: that of the communication primitives. Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments. In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication. In recent years, there has been growing interest in platforms based on asynchronous communication paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity. From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability).... Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for mobile ad-hoc environments must therefore support semi-synchronous or completely asynchronous communication primitives if it is to avoid substantial limitations to its utility. Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe. Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9]. There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware). These models differ quite considerably from the existing traditional middleware in terms of primitives provided. Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios. If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it. The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment. This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices. Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4]. With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18]. No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted. In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks. In our case, we elected to examine JMS, as one of the most widely known MOM systems. In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2. MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) Message-oriented middleware systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server. A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism. Message-oriented middleware thus supports asynchronous communication in a very natural way, achieving de-coupling of senders and receivers. A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time. However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored. Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful message-oriented middleware for traditional distributed systems. The Java Messaging Service (JMS) is a collection of interfaces for asynchronous communication between distributed components. It provides a common way for Java programs to create, send and receive messages. JMS users are usually referred to as clients. The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system. Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages. There are two types of communication supported: point to point and publish-subscribe models. In the point to point model, hosts send messages to queues. Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them. The publish-subscribe model is based on the use of topics that can be subscribed to by clients. Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients. Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14]. Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up. In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3. JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure. Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief. In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet). Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently. The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network. In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence. The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network. However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network. If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration. Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable. As discussed in Section 2, a JMS administrator defines queues and topics on the provider. Clients can then learn about them using the Java Naming and Directory Interface (JNDI). However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is). In mobile ad-hoc environments, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks. Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate. This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed. Persistence is, however, essential functionality in asynchronous communication environments as hosts are, by definition, connected at different times. In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4. JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure. Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios. As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging. Point to Point Model The point to point model is based on the concept of queues, that are used to enable asynchronous communication between the producer of a message and possible different consumers. In our solution, the location of queues is determined by a negotiation process that is application dependent. For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue. In this case, the optimum location of the queue may well be on this particular host. In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue. Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided. It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time. The hosts that receive advertisement messages add entries to their JNDI registry. Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]). A lease represents the time of validity of a particular entry. If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry. In other words, the host assumes that the queue will be unreachable from that point in time. This may be caused, for example, if a host storing the queue becomes unreachable. A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner. In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2. If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the epidemic protocol. In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5). Given the existence of an epidemic protocol, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms. Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before. Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic. When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue). The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the epidemic protocol otherwise. It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients. When a message is delivered to one of the subscribers, this recipient is deleted from the list. In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message. We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings. In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures. In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages. When the durable subscriber reconnects, the server sends it all unexpired messages. The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry. However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception. In other words, we cannot consider disconnections as failures. For these reasons, we adopt a slightly different semantics. With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the epidemic protocol rather than the synchronous protocol. In other words, durable notifications remain valid during the possible disconnections of the subscriber. On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the epidemic protocol but exploit only the synchronous protocol. If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications. Unsubscription messages are delivered in the same way as are subscription messages. It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures. This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network. The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13]. The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16]. A message that needs to be sent is replicated on each host in reach. In this way, copies of the messages are quickly spread through connected networks, like an infection. If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts. Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2]. Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts. To improve the performance, a hash-table indexes the content of the buffer. When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores. The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have. The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host. Should buffer overflow occur, messages are dropped. The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient. Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5]. According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery. The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe). A JMS message can be persistent or non-persistent. According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones. However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying epidemic protocol can guarantee only best-effort delivery. However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates. In other words, we provide the applications with at-mostonce reliability for both types of messages. In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy epidemic protocol. Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space. If this is insufficient and non-persistent messages are present in the buffer, these are replaced. Only the successful deliveries of the persistent messages are notified to the senders. According to the JMS specification, it is possible to assign a priority to each message. The messages with higher priorities are delivered in a preferential way. As discussed above, persistent messages are prioritised above the non-persistent ones. Further selection is based on their priorities. Messages with higher priorities are treated in a preferential way. In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages). Messages are deleted from the buffers using the expiration time value that can be set by senders. This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings. However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms. EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers). This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not. We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network. Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts. The lists are exchanged during the first steps of the anti-entropic epidemic protocol with a certain predefined frequency. In the case of messages with multiple recipients, a list of the actual recipients is also stored. When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients. If the resulting length of the list of recipients is zero, the message is deleted from the buffer. These lists have, clearly, finite dimensions and are implemented as circular queues. This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time. In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed. However this is not yet part of the current architecture of EMMA. 5. IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile. The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market. We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface. We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally. More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities. The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good. In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay. Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network. One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer middleware for mobile computing due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings. What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages. This problem arises because of the lack of intelligence in the epidemic protocol, and can be addressed by selecting carrier nodes for messages with greater care. The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6. CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable. Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems. As an example, consider the recent cross-layering trend in ad-hoc networking [1]. This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains. We believe that it is possible to view our approach as an instance of cross-layering. In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation). For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery. Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms. Again, as a result of adopting a cross-layering methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour. We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system). A number of middleware systems have been developed to support ad-hoc networking with the use of asynchronous communication (such as LIME, XMIDDLE, STEAM [11]). In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering. A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2. The Swiss company Softwired has developed the first JMS middleware for mobile computing, called iBus Mobile [10]. The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library. The gateway is used for the communication between the application server and mobile hosts. The gateway is seen by the JMS provider as a normal JMS client. The JMS provider can be any JMS-enabled application server, such as BEA Weblogic. Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments. The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers. Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS. The aim of this configuration is to adapt JMS to a decentralized model. The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol. Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol. Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages. Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8]. The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18]. This work is again a JMS adaptation; the focus of that implementation is on group communication and the use of application level routing algorithms for topic delivery of messages. However, there are a number of differences in the focus of our work. The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks. The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure. This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7. ROADMAP AND CONCLUSIONS Asynchronous communication is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels). In this paper we have described the state of the art in terms of MOM for mobile systems. We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks. We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings. However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce. A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability. We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13]. One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8. REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano. Cross-layering in Mobile ad-hoc Network Design. IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry. Epidemic Algorithms for Replicated Database Maintenance. In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey. Providing connectivity to the Saami nomadic community. In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill. Supporting CORBA applications in a Mobile Environment. In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47. ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout. Java Message Service Specification Version 1.1. Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart. WebSphere MQ: Connecting your applications without complex programming. IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini. Marrying Middleware and Mobile Computing. Gartner Group Research Report, September 2001. [8] IBM. WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU. Connecting remote communities. Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis. Introducing Wireless JMS. Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich. Middleware for Mobile Computing. In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58. Springer Verlag, 2002. [12] Microsoft. Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo. Adaptive routing for intermittently connected mobile ad-hoc networks. Technical report, UCL-CS Research Note, July 2004. Submitted for Publication. [14] Sun Microsystems. Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems. Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker. Epidemic routing for Partially Connected ad-hoc Networks. Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas. The OMNeT++ discrete event simulation system. In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan. JMS on Mobile ad-hoc Networks. In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon. Pronto: Mobilegateway with publish-subscribe paradigm over wireless network. Technical Report 559, University of Cambridge, Computer Laboratory, February 2003. Middleware for Pervasive and ad-hoc Computing 126",
    "original_translation": "Adaptación de mensajería asíncrona de middleware al Departamento Ad-Hoc Networking Mirco Musolesi Dept. de informática, University College London Gower Street, Londres WC1E 6BT, Reino Unido M.Musolesi@cs.ucl.ac.uk Cecilia Mascolo Departamento de Informática, University College London Gower Street, Londres WC1E 6BT, Reino Unido C.Mascolo@cs.ucl.ac.uk Stephen Hailes Departamento de Informática, University College London Gower Street, Londres WC1E 6BT, Reino Unido s.hailes@cs.ucl.ac.uk Resumen Las características de los entornos móviles, con la posibilidad deLas desconexiones frecuentes y el ancho de banda fluctuante han forzado un replanteamiento del middleware tradicional. En particular, los paradigmas de comunicación sincrónica a menudo empleados en el middleware estándar no parecen ser particularmente adecuados para entornos ad-hoc, en los que ni siquiera se puede suponer la disponibilidad intermitente de una red troncal. En cambio, la comunicación asincrónica parece ser un paradigma generalmente más adecuado para tales entornos. El middleware orientado a mensajes para sistemas tradicionales se ha desarrollado y utilizado para proporcionar un paradigma asincrónico de comunicación para sistemas distribuidos y, recientemente, también para algunos sistemas informáticos móviles específicos. En este documento, presentamos nuestra experiencia en el diseño, implementación y evaluación de EMMA (mensajería epidémica de middleware para redes ad-hoc), una adaptación del Servicio de Mensajes Java (JMS) para entornos ad-hoc móviles. Discutimos en detalle los desafíos de diseño y algunas posibles soluciones, que muestran un ejemplo concreto de la viabilidad y la idoneidad de la aplicación del paradigma asíncrono en este entorno y describen una hoja de ruta de investigación para los próximos años. Categorías y descriptores de sujetos c.2.4 [Redes de comunicación por computadora]: aplicaciones distribuidas de sistemas distribuidos;C.2.1 [Arquitectura y diseño de red]: Diseño de términos generales de comunicación inalámbrica, algoritmos 1. Introducción Con la creciente popularidad de los dispositivos móviles y su adopción generalizada, existe una clara necesidad de permitir el desarrollo de un amplio espectro de aplicaciones que funcionan de manera efectiva en dicho entorno. Desafortunadamente, esto está lejos de ser simple: los dispositivos móviles son cada vez más heterogéneos en términos de capacidades de procesamiento, tamaño de memoria, capacidad de batería e interfaces de red. Cada una de estas configuraciones tiene características sustancialmente diferentes que son estáticamente diferentes, por ejemplo, hay una gran diferencia en la capacidad entre una mote de Berkeley y una computadora portátil equipada con 802.11g, y que varían dinámicamente, como en situaciones de ancho de banda fluctuante y conectividad intermitente. Los entornos ad hoc móviles tienen un elemento adicional de complejidad en el sentido de que están completamente descentralizados. Para elaborar aplicaciones para entornos tan complejos, una forma apropiada de middleware es esencial si se debe lograr un desarrollo rentable. En este documento, examinamos uno de los aspectos fundamentales del middleware para entornos ad-hoc móviles: el de las primitivas de comunicación. Tradicionalmente, las primitivas de middleware para la comunicación más utilizadas suponen la presencia simultánea de ambos puntos finales en una red, ya que la estabilidad y la omnipresencia de la infraestructura de redes no es una suposición irrazonable para la mayoría de los entornos con cable. En otras palabras, la mayoría de los paradigmas de comunicación son sincrónicos: el middleware orientado a objetos, como Corba y Java RMI, son ejemplos típicos de middleware basados en la comunicación sincrónica. En los últimos años, ha habido un creciente interés en las plataformas basadas en paradigmas de comunicación asincrónica, como Publish-Susscribe Systems [6]: estos se han explotado con mucho éxito donde hay asincronidad a nivel de aplicación. De un informe de mercado de Gartner [7]: Dada la popularidad, la escalabilidad, la flexibilidad y la afinidad de Messages Orientados (MOM), la escalabilidad, la flexibilidad y la afinidad con las arquitecturas móviles e inalámbricas, para 2004, MOM emergerá como la forma dominante de middleware de comunicación para vincular aplicaciones móviles y empresariales (0.7 probabilidad) .... Además, en los sistemas ad-hoc móviles, la probabilidad de fragmentación de la red significa que la comunicación sincrónica en cualquier caso puede ser impracticable, dando situaciones en las que demora el tráfico asincrónico tolerante es la única forma de tráfico que podría ser compatible.121 Middleware 2004 Companion Middleware para entornos ad-hoc móviles, por lo tanto, deben admitir primitivas de comunicación semi-sincronales o completamente asíncronas si se trata de evitar limitaciones sustanciales para su utilidad. Además del desafío intelectual para apoyar este modelo, este trabajo también es interesante porque hay una serie de dominios prácticos de aplicaciones para permitir la comunicación entre comunidades en áreas no desarrolladas del mundo. Así, por ejemplo, los proyectos que se han llevado a cabo para ayudar a las poblaciones que viven en lugares remotos del mundo, como Laponia [3] o en áreas pobres que carecen de infraestructura de conectividad fija [9]. Ha habido intentos de proporcionar al middleware móvil estas propiedades, incluidos Steam, Lime, Xmiddle, Bayou (ver [11] para una revisión más completa del middleware móvil). Estos modelos difieren considerablemente del middleware tradicional existente en términos de primitivas proporcionadas. Además, algunos de ellos fallan en proporcionar una solución para los verdaderos escenarios ad-hoc. Si el éxito proyectado de MOM se convierte en una realidad como una realidad, habrá muchos programadores con experiencia. La solución ideal para el problema del middleware para los sistemas ad-hoc es, entonces, permitir a los programadores utilizar los mismos paradigmas y modelos presentados por formas comunes de MOM y garantizar que estos paradigmas sean compatibles con el entorno móvil. Este enfoque tiene claras ventajas al permitir que las aplicaciones desarrolladas en plataformas de middleware estándar se implementen fácilmente en dispositivos móviles. De hecho, algunas investigaciones ya han llevado a la adaptación de las plataformas de middleware tradicionales a la configuración móvil, principalmente para proporcionar integración entre los dispositivos móviles y las redes fijas existentes en un entorno nómada (es decir, mixto) [4]. Con respecto al middleware orientado a mensajes, las implementaciones actuales, sin embargo, suponen la existencia de una red troncal a la que los hosts móviles se conectan de vez en cuando mientras deambulan [10], o supone que los nodos siempre son accesibles a través de una ruta [18] Se ha intentado ninguna adaptación a escenarios heterogéneos o completamente ad-hoc, con desconexión frecuente y nubes de huéspedes aisladas periódicamente. En el resto de este documento, describimos un intento inicial de adaptar el middleware orientado a mensajes para adaptarse a las redes móviles y, más específicamente, móviles ad-hoc. En nuestro caso, elegimos examinar JMS, como uno de los sistemas de mamá más conocidos. En la última parte de este documento, exploramos las limitaciones de nuestros resultados y describimos los planes que tenemos para llevar el trabajo más allá.2. Los sistemas de middleware orientados a mensajes orientados a mensajes y Java (JMS) Sistemas de middleware orientados a mensajes admiten la comunicación entre componentes distribuidos a través de pasos de mensajes: el remitente envía un mensaje a colas identificadas, que generalmente residen en un servidor. Un receptor recupera el mensaje de la cola en un momento diferente y puede reconocer la respuesta utilizando el mismo mecanismo asíncrono. El middleware orientado a mensajes admite la comunicación asincrónica de una manera muy natural, logrando el desacoplamiento de los remitentes y receptores. Un remitente puede continuar procesando tan pronto como el middleware haya aceptado el mensaje;Finalmente, el receptor enviará un mensaje de reconocimiento y el remitente podrá recopilarlo en un momento conveniente. Sin embargo, dada la forma en que se implementan, estos sistemas de middleware generalmente requieren dispositivos ricos en recursos, especialmente en términos de memoria y espacio en disco, donde se almacenan colas persistentes de mensajes que se han recibido pero aún no procesados. Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] son ejemplos de middleware orientado a mensajes muy exitoso para sistemas distribuidos tradicionales. El servicio de mensajería Java (JMS) es una colección de interfaces para la comunicación asincrónica entre componentes distribuidos. Proporciona una forma común para que los programas Java creen, envíen y reciban mensajes. Los usuarios de JMS generalmente se conocen como clientes. La especificación de JMS define además a los proveedores como los componentes a cargo de implementar el sistema de mensajería y proporcionar la funcionalidad administrativa y de control (es decir, persistencia y confiabilidad) requerida por el sistema. Los clientes pueden enviar y recibir mensajes, asincrónicamente, a través del proveedor de JMS, que está a cargo de la entrega y, posiblemente, de la persistencia de los mensajes. Hay dos tipos de comunicación compatibles: punto a punto y publicar modelos de suscripción. En el modelo de punto a punto, los hosts envían mensajes a colas. Los receptores se pueden registrar con algunas colas específicas, y pueden recuperar asincrónicamente los mensajes y luego reconocerlos. El modelo Publish-Subscribe se basa en el uso de temas a los que los clientes pueden suscribirse. Los mensajes son enviados a temas por otros clientes y luego son recibidos en modo asincrónico por todos los clientes suscritos. Los clientes aprenden sobre los temas y colas disponibles a través de la interfaz Java Naming and Directory (JNDI) [14]. Las colas y los temas son creados por un administrador en el proveedor y están registrados con la interfaz JNDI para la búsqueda. En la siguiente sección, presentamos los desafíos de las redes móviles y mostramos cómo JMS puede adaptarse para hacer frente a estos requisitos.3. JMS para la computación móvil redes móviles varía muy ampliamente en sus características, desde redes nómadas en las que los modos se reubican mientras están fuera de línea hasta redes ad-hoc en las que los modos se mueven libremente y en los que no hay infraestructura. Las redes ad-hoc móviles son más generalmente aplicables en situaciones en las que la supervivencia y la implementabilidad instantánea son clave: sobre todo en aplicaciones militares y alivio de desastres. Entre estos dos tipos de redes móviles, existen, sin embargo, una serie de posibles combinaciones heterogéneas, donde los paradigmas nómadas y ad-hoc se utilizan para interconectar áreas totalmente no deseadas con redes más estructuradas (como una LAN o Internet). Mientras que la especificación JMS se ha implementado ampliamente y se ha utilizado en sistemas distribuidos tradicionales, las adaptaciones para entornos móviles se han propuesto recientemente. Los desafíos de portar JMS a la configuración móvil son considerables;Sin embargo, en vista de su aceptación y uso generalizado, existen ventajas considerables al permitir la adaptación de aplicaciones existentes a entornos móviles y en permitir la interoperación de aplicaciones en las regiones cableadas e inalámbricas de una red. En [10], JMS se adaptó a una configuración móvil nómada, donde los hosts móviles pueden ser clientes de JMS y comunicarse a través del proveedor de JMS que, sin embargo, se encuentra en una red troncal, proporcionando confiabilidad y persistencia. El prototipo del cliente presentado en [10] es muy ligero, debido a la delegación de toda la funcionalidad de peso pesado al middleware para el proveedor de computación 122 AD-Hoc 122 en la red con cable. Sin embargo, este enfoque es algo limitado en términos de aplicabilidad generalizada y escalabilidad como consecuencia de la concentración de funcionalidad en la parte cableada de la red. Si JMS se adapta a entornos completamente ad-hoc, donde no hay infraestructura fija disponible, y donde los nodos cambian la ubicación y el estado de manera muy dinámica, se deben tener en cuenta más problemas. En primer lugar, el descubrimiento necesita usar un modelo resistente pero distribuido: en este entorno extremadamente dinámico, las soluciones estáticas son inaceptables. Como se discutió en la Sección 2, un administrador de JMS define las colas y temas del proveedor. Luego, los clientes pueden aprender sobre ellos usando la interfaz Java Naming y Directorio (JNDI). Sin embargo, debido a la forma en que se diseña JNDI, debe estar en alcance un nodo JNDI (o más de uno) para obtener un enlace de un nombre a una dirección (es decir, saber dónde está una cola/tema específico). En entornos ad-hoc móviles, el proceso de descubrimiento no puede asumir la existencia de un conjunto fijo de servidores de descubrimiento que siempre son accesibles, ya que esto no coincidiría con la dinámica de las redes ad-hoc. En segundo lugar, un proveedor de JMS, como lo sugiere la especificación JMS, también debe ser accesible por cada nodo en la red, para comunicarse. Esto supone una arquitectura muy centralizada, que nuevamente no coincide con los requisitos de una configuración ad-hoc móvil, en la que los nodos pueden ser en movimiento y escasos: se necesita una solución más distribuida y dinámica. Sin embargo, la persistencia es la funcionalidad esencial en los entornos de comunicación asincrónica, ya que los hosts están, por definición, conectados en diferentes momentos. En la siguiente sección, discutiremos nuestra experiencia en el diseño e implementación de JMS para redes ad-hoc móviles.4. JMSFOR NEDES AD-HOC MOBILES 4.1 La adaptación de JMS para redes móviles ad-hoc que desarrolla aplicaciones para redes móviles es aún más desafiante: además de las mismas consideraciones que para entornos inalámbricos infraestructurados, como las capacidades de dispositivos limitados y las restricciones de potencia, existenProblemas de tasa de cambio de conectividad de red y la falta de una infraestructura de enrutamiento estático. En consecuencia, ahora describimos un intento inicial de adaptar la especificación JMS para apuntar a los requisitos particulares relacionados con los escenarios ad-hoc. Como se discute en la Sección 3, una aplicación JMS puede usar el punto a otro y la publicación de los estilos de mensajería. Modelo de punto a punto El modelo de punto a punto se basa en el concepto de colas, que se utilizan para permitir la comunicación asincrónica entre el productor de un mensaje y posibles consumidores diferentes. En nuestra solución, la ubicación de las colas está determinada por un proceso de negociación que depende de la aplicación. Por ejemplo, supongamos que es posible conocer a priori, o es posible determinar dinámicamente, que un cierto host es el receptor de la mayor parte de los mensajes enviados a una cola particular. En este caso, la ubicación óptima de la cola puede estar en este host en particular. En general, vale la pena señalar que, de acuerdo con la especificación JMS y los patrones de diseño sugeridos, es común y preferible que un cliente tenga todos sus mensajes entregados a una sola cola. Las colas se anuncian periódicamente a los hosts que están dentro del rango de transmisión o que son accesibles por medio del protocolo de comunicación sincrónica subyacente, si se proporciona. Es importante tener en cuenta que, a nivel de middleware, es lógicamente irrelevante si la capa de red implementa alguna forma de enrutamiento ad-hoc (aunque considerablemente más eficiente si lo hace);El middleware solo considera información sobre qué nodos se puede acceder activamente en cualquier momento. Los anfitriones que reciben mensajes publicitarios agregan entradas a su registro JNDI. Cada entrada se caracteriza por un contrato de arrendamiento (un mecanismo similar al presente en Jini [15]). Un contrato de arrendamiento representa el tiempo de validez de una entrada en particular. Si no se actualiza un contrato de arrendamiento (es decir, su vida no se extiende), puede expirar y, en consecuencia, la entrada se elimina del registro. En otras palabras, el anfitrión asume que la cola será inalcanzable desde ese momento. Esto puede ser causado, por ejemplo, si un host que almacena la cola se vuelve inalcanzable. Un host que inicia un proceso de descubrimiento encontrará los temas y las colas presentes en su parte conectada de la red de manera directa. Para entregar un mensaje a un host que no está actualmente en Reach1, utilizamos un protocolo de enrutamiento epidémico asíncrono que se discutirá en detalle en la Sección 4.2. Si dos hosts están en la misma nube (es decir, existe una ruta conectada entre ellos), pero no hay un protocolo sincrónico disponible, los mensajes se envían utilizando el protocolo epidémico. En este caso, la latencia de entrega será baja como resultado de la rapidez de propagación de la infección en la nube conectada (ver también los resultados de la simulación en la Sección 5). Dada la existencia de un protocolo epidémico, el mecanismo de descubrimiento consiste en anunciar las colas a los huéspedes que actualmente son inalcanzables utilizando mecanismos análogos. Publish-suscribir el modelo En el modelo Publish-Subscribe, algunos de los hosts están designados de manera similar para mantener temas y suscripciones de almacenamiento, como antes. Los temas se anuncian a través del registro de la misma manera que las colas, y un cliente que desea suscribirse a un tema debe registrarse con el cliente que posee el tema. Cuando un cliente desea enviar un mensaje a la lista de temas, lo envía al titular del tema (de la misma manera que enviaría un mensaje a una cola). El titular del tema luego reenvía el mensaje a todos los suscriptores, utilizando el protocolo sincrónico si es posible, el protocolo de epidemia de otra manera. Vale la pena señalar que usamos un solo mensaje con múltiples destinatarios, en lugar de múltiples mensajes con múltiples destinatarios. Cuando se entrega un mensaje a uno de los suscriptores, este destinatario se elimina de la lista. Para eliminar las otras replicas posibles, empleamos mensajes de reconocimiento (discutidos en la Sección 4.4), devueltos de la misma manera que un mensaje normal. También hemos adaptado los conceptos de suscripciones duraderas y no duraderas para configuraciones ad-hoc. En plataformas fijas, se mantienen suscripciones duraderas durante las desconexiones de los clientes, ya sean intencionales o son el resultado de fallas. En los sistemas tradicionales, mientras que un suscriptor duradero está desconectado del servidor, es responsable de almacenar mensajes. Cuando el suscriptor duradero se vuelve a conectar, el servidor lo envía todos los mensajes no vencidos. El problema es que, en nuestro escenario, las desconexiones son la Norma 1 En teoría, no es posible enviar un mensaje a un compañero que nunca se haya accesible en el pasado, ya que no puede haber entrada presente en el registro. Sin embargo, para superar esta posible limitación, proporcionamos una primitiva a través del cual se puede agregar información al registro sin usar los canales normales.123 Middleware 2004 Companion en lugar de la excepción. En otras palabras, no podemos considerar las desconexiones como fallas. Por estas razones, adoptamos una semántica ligeramente diferente. Con respecto a las suscripciones duraderas, si un suscriptor se desconecta, las notificaciones no se almacenan, pero se envían utilizando el protocolo epidémico en lugar del protocolo sincrónico. En otras palabras, las notificaciones duraderas siguen siendo válidas durante las posibles desconexiones del suscriptor. Por otro lado, si un suscriptor no duradero se desconecta, su suscripción se elimina;En otras palabras, durante las desconexiones, las notificaciones no se envían utilizando el protocolo epidémico, sino que solo explotan el protocolo sincrónico. Si el tema se vuelve accesible para este host nuevamente, debe hacer otra suscripción para recibir las notificaciones. Los mensajes de la suscripción se entregan de la misma manera que los mensajes de suscripción. Es importante tener en cuenta que los suscriptores duraderos tienen explícitamente darse de baja de un tema para detener el proceso de notificación;Sin embargo, todas las suscripciones duraderas tienen un tiempo de vencimiento predefinido para hacer frente a los casos de suscriptores que no se reúnen nuevamente debido a sus movimientos o fallas. Esta característica se proporciona claramente para limitar el número de mensajes innecesarios enviados alrededor de la red.4.2 Entrega de mensajes utilizando el enrutamiento epidémico En esta sección, examinamos un posible mecanismo que permitirá la entrega de mensajes en una red parcialmente conectada. El mecanismo que discutimos está destinado a demostrar la viabilidad;Los mecanismos de comunicación más eficientes para este entorno son complejos y son objeto de otro artículo [13]. La entrega de mensajes asíncronos descrito anteriormente se basa en un protocolo típico de enrutamiento de estilo epidémico puro [16]. Un mensaje que debe enviarse se replica en cada host en alcance. De esta manera, las copias de los mensajes se extienden rápidamente a través de redes conectadas, como una infección. Si un host se conecta a otra nube de nodos móviles, durante su movimiento, el mensaje se extiende a través de esta colección de hosts. La replicación de datos y mensajes al estilo epidémico se ha explotado en el pasado en muchos campos, comenzando con el área de sistemas de bases de datos distribuidas [2]. Dentro del enrutamiento epidémico, cada host mantiene un búfer que contiene los mensajes que ha creado y las réplicas de los mensajes generados por los otros hosts. Para mejorar el rendimiento, una tabla hash indexa el contenido del búfer. Cuando dos hosts se conectan, el host con el identificador más pequeño inicia una llamada sesión anti-entropía, enviando una lista que contiene los identificadores únicos de los mensajes que actualmente almacena actualmente. El otro anfitrión evalúa esta lista y envía una lista que contiene los identificadores que almacena que no esté presente en el otro host, junto con los mensajes que el otro no tiene. El host que ha comenzado la sesión recibe la lista y, de la misma manera, envía los mensajes que no están presentes en el otro host. Si se produce el desbordamiento del búfer, se eliminan los mensajes. La fiabilidad ofrecida por este protocolo suele ser el mejor esfuerzo, ya que no hay garantía de que un mensaje eventualmente se entregará a su destinatario. Claramente, la relación de entrega del protocolo aumenta proporcionalmente al tiempo de retraso máximo permitido y el tamaño del búfer en cada huésped (se pueden encontrar resultados de simulación interesantes en [16]).4.3 Adaptación del modelo de mensaje JMS En esta sección, analizaremos los aspectos de nuestra adaptación de la especificación relacionada con el llamado modelo de mensaje JMS [5]. De acuerdo con esto, los mensajes JMS se caracterizan por algunas propiedades definidas utilizando el campo de encabezado, que contiene valores utilizados por clientes y proveedores para su entrega. Los aspectos discutidos en el resto de esta sección son válidos para ambos modelos (punto a punto y publicar suscripción). Un mensaje JMS puede ser persistente o no persistente. Según la especificación de JMS, los mensajes persistentes deben entregarse con un mayor grado de confiabilidad que los no participantes. Sin embargo, vale la pena señalar que no es posible garantizar la confiabilidad de una vez y solo una de la superación para los mensajes persistentes como se define en la especificación, ya que, como discutimos en la subsección anterior, el protocolo epidémico subyacente puede garantizar solo el mejor esfuerzoentrega. Sin embargo, los clientes mantienen una lista de los identificadores de los mensajes recibidos recientemente para evitar la entrega de duplicados de mensajes. En otras palabras, proporcionamos a las aplicaciones confiabilidad en Mostonce para ambos tipos de mensajes. Para implementar diferentes niveles de confiabilidad, Emma trata los mensajes persistentes y no persistentes de manera diferente, durante la ejecución del protocolo de epidemia anti-entropía. Dado que el espacio de búfer de mensajes es limitado, los mensajes persistentes se replican preferentemente utilizando el espacio libre disponible. Si esto es insuficiente y los mensajes no persistentes están presentes en el búfer, estos se reemplazan. Solo las entregas exitosas de los mensajes persistentes se notifican a los remitentes. Según la especificación JMS, es posible asignar una prioridad a cada mensaje. Los mensajes con prioridades más altas se entregan de manera preferencial. Como se discutió anteriormente, los mensajes persistentes se priorizan por encima de los no persistentes. Otra selección se basa en sus prioridades. Los mensajes con prioridades más altas se tratan de manera preferencial. De hecho, si no hay suficiente espacio para replicar todos los mensajes persistentes, se utiliza un mecanismo basado en prioridades para eliminar y replicar mensajes no persistentes (y, si es necesario, mensajes persistentes). Los mensajes se eliminan de los buffers utilizando el valor de tiempo de vencimiento que los remitentes pueden establecer. Esta es una forma de libre espacio en los buffers (uno elimina preferentemente mensajes más antiguos en casos de conflicto);eliminar réplicas rancias en el sistema;y para limitar el tiempo para el cual los destinos deben retener los identificadores de mensajes para deshacerse de los duplicados.4.4 Mecanismos de confiabilidad y reconocimiento Como ya se discutió, la entrega de mensajes más a la vez es lo mejor que se puede lograr en términos de semántica de entrega en entornos ad-hoc parcialmente conectados. Sin embargo, es posible mejorar la confiabilidad del sistema con mecanismos de reconocimiento eficientes. Emma proporciona un mecanismo para la notificación de falla a las aplicaciones si el reconocimiento no se recibe dentro de un tiempo de espera dado (que los desarrolladores de aplicaciones pueden configurar). Este mecanismo es el que distingue la entrega de mensajes persistentes y no persistentes en nuestra implementación de JMS: las entregas de los primeros son notificadas a los remitentes, mientras que los segundos no lo son. Utilizamos mensajes de reconocimiento no solo para informar a los remitentes sobre la entrega exitosa de mensajes, sino también para eliminar las réplicas de los mensajes entregados que aún están presentes en la red. Cada host mantiene una lista del middleware de mensajes para la computación generalizada y ad-hoc 124 entregada con éxito que se actualiza como parte del proceso normal de intercambio de información entre los hosts. Las listas se intercambian durante los primeros pasos del protocolo epidémico antientrópico con una cierta frecuencia predefinida. En el caso de mensajes con múltiples destinatarios, también se almacena una lista de los destinatarios reales. Cuando un host recibe la lista, verifica su búfer de mensajes y lo actualiza de acuerdo con las siguientes reglas: (1) si un mensaje tiene un solo destinatario y se ha entregado, se elimina del búfer;(2) Si un mensaje tiene múltiples destinatarios, los identificadores de los hosts entregados se eliminan de la lista asociada de destinatarios. Si la longitud resultante de la lista de destinatarios es cero, el mensaje se elimina del búfer. Estas listas tienen, claramente, dimensiones finitas y se implementan como colas circulares. Este mecanismo simple, junto con el uso de marcas de tiempo de vencimiento, garantiza que las viejas notificaciones de reconocimiento se eliminen del sistema después de un período de tiempo limitado. Para mejorar la confiabilidad de EMMA, se podría desarrollar un mecanismo de diseño para la replicación inteligente de colas y temas basados en la información del contexto. Sin embargo, esto aún no es parte de la arquitectura actual de Emma.5. Implementación y evaluación preliminar implementamos un prototipo de nuestra plataforma utilizando el perfil personal J2ME. El tamaño del ejecutable es de aproximadamente 250 kb, incluido el archivo jar JMS 1.1;Esta es una figura perfectamente aceptable dada la memoria disponible de los dispositivos móviles actuales en el mercado. Probamos nuestro prototipo en PDA HP IPAQ que ejecutan Linux, interconectados con Wavelan y en varias computadoras portátiles con la misma interfaz de red. También evaluamos la plataforma de middleware utilizando el simulador de eventos discretos Omnet ++ [17] para explorar una gama de escenarios móviles que incorporaron un número más realista de hosts de lo que se logró experimentalmente. Más específicamente, evaluamos el rendimiento del sistema en términos de relación de entrega y retraso promedio, variando la densidad de la población y el tamaño del amortiguador, y utilizando mensajes persistentes y no persistentes con diferentes prioridades. Los resultados de la simulación muestran que el rendimiento de EMMAS, en términos de relación de entrega y retraso de mensajes persistentes con prioridades más altas, es bueno. En general, es evidente que la relación de entrega está fuertemente relacionada con el dimensionamiento correcto de los amortiguadores al retraso máximo aceptable. Además, los algoritmos epidémicos pueden garantizar una alta relación de entrega si uno evalúa el rendimiento durante un intervalo de tiempo suficiente para la diseminación de las réplicas de mensajes (es decir, la propagación de la infección) en una gran parte de la red ad-hoc. Una consecuencia del problema de dimensionamiento es que la escalabilidad puede verse gravemente afectada en el middleware de pares para la computación móvil debido a la pobreza de recursos de los dispositivos (memoria limitada para almacenar mensajes temporalmente) y el número de posibles interconexiones en la configuración ad-hoc.. Lo que es peor es que las formas comunes de organización comercial y social (seis grados de separación) significan que incluso los valores de TTL modestos en los mensajes conducirán a una inundación generalizada de mensajes epidémicos. Este problema surge debido a la falta de inteligencia en el protocolo de epidemia, y puede abordarse seleccionando nodos portadores para mensajes con mayor cuidado. Sin embargo, los detalles de este proceso están fuera del alcance de este documento (pero se pueden encontrar en [13]) y no afectan las bases sobre las que se basa el middleware de Emma: la capacidad de entregar mensajes de manera asincrónica.6. Vista crítica del estado del arte El diseño de plataformas de middleware para la informática móvil requiere que los investigadores respondan preguntas nuevas y fundamentalmente diferentes;Simplemente asumir la presencia de porciones con cable de la red en la que puede residir la funcionalidad centralizada no es generalizada. Por lo tanto, es necesario investigar principios de diseño novedosos y diseñar patrones arquitectónicos que difieran de los que tradicionalmente explotan en el diseño de middleware para sistemas fijos. Como ejemplo, considere la tendencia reciente de capas cruzadas en las redes ad-hoc [1]. Esta es una forma de repensar el diseño de sistemas de software, abandonar explícitamente las formas clásicas de capas, ya que, aunque esta separación de las preocupaciones proporciona portabilidad, lo hace a expensas de posibles ganancias de eficiencia. Creemos que es posible ver nuestro enfoque como una instancia de capas cruzadas. De hecho, hemos agregado el protocolo de red epidémica a nivel de middleware y, al mismo tiempo, hemos utilizado el protocolo de red sincrónico existente si está presente tanto en la entrega de mensajes (capas tradicionales) como en informar el middleware sobre cuándo se pueden entregar mensajes porrevelando detalles de las tablas de reenvío (violación de la capa). Por esta razón, preferimos considerarlos conjuntamente como la capa de comunicación de nuestra plataforma juntas, proporcionando una entrega de mensajes más eficiente. Otro aspecto interesante es la explotación del contexto y la información del sistema para mejorar el rendimiento de las plataformas de middleware móviles. Nuevamente, como resultado de la adopción de una metodología de captura cruzada, podemos crear sistemas que recopilen información del sistema operativo subyacente y los componentes de comunicación para permitir la adaptación del comportamiento. Podemos resumir este enfoque de diseño conceptual diciendo que las plataformas de middleware no solo deben ser contexto (es decir, deben poder extraer y analizar información del contexto circundante) sino también consciente del sistema (es decir, deberían poder reunirinformación de los componentes de software y hardware del sistema móvil). Se han desarrollado varios sistemas de middleware para admitir redes ad-hoc con el uso de la comunicación asincrónica (como Lime, XMiddle, Steam [11]). En particular, la plataforma Steam es un ejemplo interesante de middleware basado en eventos para redes ad-hoc, proporcionando la entrega de mensajes conscientes de la ubicación y una solución efectiva para el filtrado de eventos. Una discusión sobre JMS y su realización móvil ya se ha realizado en las Secciones 4 y 2. La compañía suiza que Softwired ha desarrollado el primer Middleware JMS para la informática móvil, llamada IBUS Mobile [10]. Los componentes principales de esta arquitectura típicamente basada en infraestructura son el proveedor de JMS, la llamada puerta de enlace móvil JMS, que se implementa en un host fijo y una biblioteca de cliente JMS ligera. La puerta de enlace se utiliza para la comunicación entre el servidor de aplicaciones y los hosts móviles. El proveedor de JMS ve la puerta de enlace como un cliente JMS normal. El proveedor de JMS puede ser cualquier servidor de aplicaciones habilitado para JMS, como BEA WebLogic. Pronto [19] es un ejemplo del sistema de dleware acompañante Mid125 Middleware 2004 basado en mensajes que está específicamente diseñado para entornos móviles. La plataforma está compuesta por tres clases de componentes: clientes móviles que implementan la especificación JMS, las puertas de enlace que controlan el tráfico, garantizan la eficiencia y las posibles personalizaciones de los usuarios utilizando diferentes complementos y servidores JMS. Son posibles diferentes configuraciones de estos componentes;Con respecto a las aplicaciones de redes ad hoc móviles, lo más interesante es el JMS sin servidor. El objetivo de esta configuración es adaptar JMS a un modelo descentralizado. El modelo de publicación de publicación explota la eficiencia y la escalabilidad del protocolo de multidifusión IP subyacente. Se proporcionan servicios de entrega de mensajes poco confiables y confiables: la confiabilidad se proporciona a través de un protocolo negativo basado en el reconocimiento. Pronto representa una buena solución para las redes móviles basadas en infraestructura, pero no se dirige adecuadamente a la configuración AD-Hoc, ya que los nodos móviles dependen de servidores fijos para el intercambio de mensajes. Existen otra madre implementada para entornos móviles;Sin embargo, generalmente son extensiones directas del middleware existente [8]. La única implementación de MOM diseñada específicamente para redes ad-hoc móviles se desarrolló en la Universidad de Newcastle [18]. Este trabajo es nuevamente una adaptación de JMS;El enfoque de esa implementación está en la comunicación grupal y el uso de algoritmos de enrutamiento de nivel de aplicación para la entrega de mensajes de los temas. Sin embargo, hay una serie de diferencias en el enfoque de nuestro trabajo. La importancia que atribuimos a las desconexiones hace que la persistencia sea un requisito vital para cualquier middleware que deba usarse en redes ad-hoc móviles. Los autores de [18] indican la persistencia como posible trabajo futuro, no considerando el hecho de que enrutar un mensaje a un host no conectado dará como resultado una falla de entrega. Esta es una limitación notable en los entornos móviles donde las desconexiones impredecibles son la norma en lugar de la excepción.7. Hoja de ruta y conclusiones La comunicación asincrónica es un paradigma de comunicación útil para las redes ad-hoc móviles, ya que los hosts pueden venir, ir y recoger mensajes cuando sea conveniente, también tiene en cuenta su disponibilidad de recursos (por ejemplo, potencia, niveles de conectividad). En este artículo hemos descrito el estado del arte en términos de MOM para los sistemas móviles. También hemos mostrado una prueba de adaptación conceptual de JMS al escenario extremo de redes ad-hoc móviles parcialmente conectadas. Hemos descrito y discutido las características y diferencias de nuestra solución con respecto a las implementaciones tradicionales de JMS y las adaptaciones existentes para configuraciones móviles. Sin embargo, las compensaciones entre el enrutamiento a nivel de aplicación y el uso de recursos también deben investigarse, ya que los dispositivos móviles son comúnmente escasos/recursos. Una limitación clave de este trabajo es el algoritmo epidémico de bajo rendimiento y un avance importante en la práctica de este trabajo requiere un algoritmo que equilibre mejor las necesidades de eficiencia y probabilidad de entrega de mensajes. Actualmente estamos trabajando en algoritmos y protocolos que, explotando las técnicas probabilísticas y estadísticas sobre la base de pequeñas cantidades de información intercambiada, pueden mejorar considerablemente la eficiencia en términos de recursos (memoria, ancho de banda, etc.) y la confiabilidad de nuestra plataforma Middleware de nuestra plataforma Middleware (Middleware[13]. Un desarrollo de la investigación futurista, que puede tomar estas ideas de adaptación de la mensajería de middleware para entornos móviles es la introducción de más extensiones de comunicación orientadas a la movilidad, por ejemplo, el soporte de geocast (es decir, la capacidad de enviar mensajes a áreas geográficas específicas).8. Referencias [1] M. Conti, G. Maselli, G. Turi y S. Giordano. Capazos cruzados en el diseño de red ad-hoc móvil. IEEE Computer, 37 (2): 48-51, febrero de 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart,y D. Terry. Algoritmos epidémicos para el mantenimiento de la base de datos replicado. En el sexto simposio sobre principios de computación distribuida, páginas 1-12, agosto de 1987. [3] A. Doria, M. Uden y D. P. Pandey. Proporcionando conectividad a la comunidad nómada de Saami. En Actas de la Segunda Conferencia Internacional sobre Diseño Abierto de Colaboración para la Innovación Sostenible, diciembre de 2002. [4] M. Haahr, R. Cunningham y V. Cahill. Apoyo a las aplicaciones CORBA en un entorno móvil. En la 5ª Conferencia Internacional sobre Computación y Redes Móviles (Mobicom99), páginas 36-47. ACM, agosto de 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli y K. Stout. Servicio de mensajes Java Especificación Versión 1.1. Sun Microsystems, Inc., abril de 2002. http://java.sun.com/products/jms/.[6] J. Hart. WebSphere MQ: Conectando sus aplicaciones sin programación compleja. IBM WebSphere Software White Papers, 2003. [7] S. Hayward y M. Pezzini. Casarse con el middleware y la computación móvil. Informe de investigación del Grupo Gartner, septiembre de 2001. [8] IBM. WebSphere MQ Everyplace versión 2.0, noviembre de 2002. http://www-3.ibm.com/software/integration/wmqe/.[9] ITU. Conectando comunidades remotas. Documentos de la Cumbre Mundial sobre la Sociedad de la Información, 2003. http://www.itu.int/osg/spu/wsis-themes.[10] S. Maffeis. Introducción de JMS inalámbrico. Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra y W. Emmerich. Middleware para computación móvil. En E. Gregori, G. Anastasi y S. Basagni, editores, conferencias avanzadas sobre redes, volumen 2497 de las notas de la conferencia en informática, páginas 20-58. Springer Verlag, 2002. [12] Microsoft. Microsoft Message Queing (MSMQ) Versión 2.0 Documentación.[13] M. Musolesi, S. Hailes y C. Mascolo. Enrutamiento adaptativo para redes ad-hoc móviles conectadas intermitentemente. Informe técnico, UCL-CS Research Note, julio de 2004. Enviado para su publicación.[14] Sun Microsystems. Java Naming and Directory Interface (JNDI) Documentación Versión 1.2.2003. http://java.sun.com/products/jndi/.[15] Sun Microsystems. Jini Especificación Versión 2.0, 2003. http://java.sun.com/products/jini/.[16] A. Vahdat y D. Becker. Enrutamiento epidémico para redes ad-hoc parcialmente conectadas. Informe técnico CS-2000-06, Departamento de Ciencias de la Computación, Universidad de Duke, 2000. [17] A. Vargas. El sistema de simulación de eventos discretos OMNET ++. En Actas de la simulación europea multiconferencia (ESM2001), Praga, junio de 2001. [18] E. Vollset, D. Ingham y P. Ezhilchelvan. JMS en redes ad-hoc móviles. En Personal Wireless Communications (PWC), páginas 40-52, Venecia, septiembre de 2003. [19] E. Yoneki y J. Bacon. PRONTO: Mobilegateway con paradigma de publicación de publicación sobre la red inalámbrica. Informe técnico 559, Universidad de Cambridge, Laboratorio de Computación, febrero de 2003. Middleware para computación generalizada y ad-hoc 126",
    "original_sentences": [
        "Adapting Asynchronous Messaging Middleware to ad-hoc Networking Mirco Musolesi Dept.",
        "of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware.",
        "In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed.",
        "Instead, asynchronous communication seems to be a generally more suitable paradigm for such environments.",
        "Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems.",
        "In this paper, we present our experience in designing, implementing and evaluating EMMA (Epidemic Messaging Middleware for ad-hoc networks), an adaptation of Java Message Service (JMS) for mobile ad-hoc environments.",
        "We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years.",
        "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1.",
        "INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment.",
        "Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces.",
        "Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity.",
        "Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised.",
        "In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved.",
        "In this paper, we examine one of the foundational aspects of middleware for mobile ad-hoc environments: that of the communication primitives.",
        "Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments.",
        "In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication.",
        "In recent years, there has been growing interest in platforms based on asynchronous communication paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity.",
        "From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability)....",
        "Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for mobile ad-hoc environments must therefore support semi-synchronous or completely asynchronous communication primitives if it is to avoid substantial limitations to its utility.",
        "Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe.",
        "Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9].",
        "There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware).",
        "These models differ quite considerably from the existing traditional middleware in terms of primitives provided.",
        "Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios.",
        "If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it.",
        "The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment.",
        "This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices.",
        "Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4].",
        "With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18].",
        "No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted.",
        "In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks.",
        "In our case, we elected to examine JMS, as one of the most widely known MOM systems.",
        "In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2.",
        "MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) Message-oriented middleware systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server.",
        "A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism.",
        "Message-oriented middleware thus supports asynchronous communication in a very natural way, achieving de-coupling of senders and receivers.",
        "A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time.",
        "However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored.",
        "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful message-oriented middleware for traditional distributed systems.",
        "The Java Messaging Service (JMS) is a collection of interfaces for asynchronous communication between distributed components.",
        "It provides a common way for Java programs to create, send and receive messages.",
        "JMS users are usually referred to as clients.",
        "The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system.",
        "Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages.",
        "There are two types of communication supported: point to point and publish-subscribe models.",
        "In the point to point model, hosts send messages to queues.",
        "Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them.",
        "The publish-subscribe model is based on the use of topics that can be subscribed to by clients.",
        "Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients.",
        "Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14].",
        "Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up.",
        "In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3.",
        "JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure.",
        "Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief.",
        "In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet).",
        "Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently.",
        "The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network.",
        "In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence.",
        "The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network.",
        "However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network.",
        "If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration.",
        "Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable.",
        "As discussed in Section 2, a JMS administrator defines queues and topics on the provider.",
        "Clients can then learn about them using the Java Naming and Directory Interface (JNDI).",
        "However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is).",
        "In mobile ad-hoc environments, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks.",
        "Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate.",
        "This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed.",
        "Persistence is, however, essential functionality in asynchronous communication environments as hosts are, by definition, connected at different times.",
        "In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4.",
        "JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure.",
        "Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios.",
        "As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging.",
        "Point to Point Model The point to point model is based on the concept of queues, that are used to enable asynchronous communication between the producer of a message and possible different consumers.",
        "In our solution, the location of queues is determined by a negotiation process that is application dependent.",
        "For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue.",
        "In this case, the optimum location of the queue may well be on this particular host.",
        "In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue.",
        "Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided.",
        "It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time.",
        "The hosts that receive advertisement messages add entries to their JNDI registry.",
        "Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]).",
        "A lease represents the time of validity of a particular entry.",
        "If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry.",
        "In other words, the host assumes that the queue will be unreachable from that point in time.",
        "This may be caused, for example, if a host storing the queue becomes unreachable.",
        "A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner.",
        "In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2.",
        "If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the epidemic protocol.",
        "In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5).",
        "Given the existence of an epidemic protocol, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms.",
        "Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before.",
        "Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic.",
        "When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue).",
        "The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the epidemic protocol otherwise.",
        "It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients.",
        "When a message is delivered to one of the subscribers, this recipient is deleted from the list.",
        "In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message.",
        "We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings.",
        "In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures.",
        "In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages.",
        "When the durable subscriber reconnects, the server sends it all unexpired messages.",
        "The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry.",
        "However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception.",
        "In other words, we cannot consider disconnections as failures.",
        "For these reasons, we adopt a slightly different semantics.",
        "With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the epidemic protocol rather than the synchronous protocol.",
        "In other words, durable notifications remain valid during the possible disconnections of the subscriber.",
        "On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the epidemic protocol but exploit only the synchronous protocol.",
        "If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications.",
        "Unsubscription messages are delivered in the same way as are subscription messages.",
        "It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures.",
        "This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network.",
        "The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13].",
        "The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16].",
        "A message that needs to be sent is replicated on each host in reach.",
        "In this way, copies of the messages are quickly spread through connected networks, like an infection.",
        "If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts.",
        "Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2].",
        "Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts.",
        "To improve the performance, a hash-table indexes the content of the buffer.",
        "When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores.",
        "The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have.",
        "The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host.",
        "Should buffer overflow occur, messages are dropped.",
        "The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient.",
        "Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5].",
        "According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery.",
        "The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe).",
        "A JMS message can be persistent or non-persistent.",
        "According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones.",
        "However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying epidemic protocol can guarantee only best-effort delivery.",
        "However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates.",
        "In other words, we provide the applications with at-mostonce reliability for both types of messages.",
        "In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy epidemic protocol.",
        "Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space.",
        "If this is insufficient and non-persistent messages are present in the buffer, these are replaced.",
        "Only the successful deliveries of the persistent messages are notified to the senders.",
        "According to the JMS specification, it is possible to assign a priority to each message.",
        "The messages with higher priorities are delivered in a preferential way.",
        "As discussed above, persistent messages are prioritised above the non-persistent ones.",
        "Further selection is based on their priorities.",
        "Messages with higher priorities are treated in a preferential way.",
        "In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages).",
        "Messages are deleted from the buffers using the expiration time value that can be set by senders.",
        "This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings.",
        "However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms.",
        "EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers).",
        "This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not.",
        "We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network.",
        "Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts.",
        "The lists are exchanged during the first steps of the anti-entropic epidemic protocol with a certain predefined frequency.",
        "In the case of messages with multiple recipients, a list of the actual recipients is also stored.",
        "When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients.",
        "If the resulting length of the list of recipients is zero, the message is deleted from the buffer.",
        "These lists have, clearly, finite dimensions and are implemented as circular queues.",
        "This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time.",
        "In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed.",
        "However this is not yet part of the current architecture of EMMA. 5.",
        "IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile.",
        "The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market.",
        "We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface.",
        "We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally.",
        "More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities.",
        "The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good.",
        "In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay.",
        "Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network.",
        "One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer middleware for mobile computing due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings.",
        "What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages.",
        "This problem arises because of the lack of intelligence in the epidemic protocol, and can be addressed by selecting carrier nodes for messages with greater care.",
        "The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6.",
        "CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable.",
        "Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems.",
        "As an example, consider the recent cross-layering trend in ad-hoc networking [1].",
        "This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains.",
        "We believe that it is possible to view our approach as an instance of cross-layering.",
        "In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation).",
        "For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery.",
        "Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms.",
        "Again, as a result of adopting a cross-layering methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour.",
        "We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system).",
        "A number of middleware systems have been developed to support ad-hoc networking with the use of asynchronous communication (such as LIME, XMIDDLE, STEAM [11]).",
        "In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering.",
        "A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2.",
        "The Swiss company Softwired has developed the first JMS middleware for mobile computing, called iBus Mobile [10].",
        "The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library.",
        "The gateway is used for the communication between the application server and mobile hosts.",
        "The gateway is seen by the JMS provider as a normal JMS client.",
        "The JMS provider can be any JMS-enabled application server, such as BEA Weblogic.",
        "Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments.",
        "The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers.",
        "Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS.",
        "The aim of this configuration is to adapt JMS to a decentralized model.",
        "The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol.",
        "Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol.",
        "Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages.",
        "Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8].",
        "The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18].",
        "This work is again a JMS adaptation; the focus of that implementation is on group communication and the use of application level routing algorithms for topic delivery of messages.",
        "However, there are a number of differences in the focus of our work.",
        "The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks.",
        "The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure.",
        "This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7.",
        "ROADMAP AND CONCLUSIONS Asynchronous communication is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels).",
        "In this paper we have described the state of the art in terms of MOM for mobile systems.",
        "We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks.",
        "We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings.",
        "However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce.",
        "A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability.",
        "We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13].",
        "One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8.",
        "REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano.",
        "Cross-layering in Mobile ad-hoc Network Design.",
        "IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.",
        "Epidemic Algorithms for Replicated Database Maintenance.",
        "In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey.",
        "Providing connectivity to the Saami nomadic community.",
        "In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill.",
        "Supporting CORBA applications in a Mobile Environment.",
        "In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47.",
        "ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout.",
        "Java Message Service Specification Version 1.1.",
        "Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart.",
        "WebSphere MQ: Connecting your applications without complex programming.",
        "IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini.",
        "Marrying Middleware and Mobile Computing.",
        "Gartner Group Research Report, September 2001. [8] IBM.",
        "WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU.",
        "Connecting remote communities.",
        "Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis.",
        "Introducing Wireless JMS.",
        "Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich.",
        "Middleware for Mobile Computing.",
        "In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58.",
        "Springer Verlag, 2002. [12] Microsoft.",
        "Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo.",
        "Adaptive routing for intermittently connected mobile ad-hoc networks.",
        "Technical report, UCL-CS Research Note, July 2004.",
        "Submitted for Publication. [14] Sun Microsystems.",
        "Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems.",
        "Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker.",
        "Epidemic routing for Partially Connected ad-hoc Networks.",
        "Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas.",
        "The OMNeT++ discrete event simulation system.",
        "In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan.",
        "JMS on Mobile ad-hoc Networks.",
        "In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon.",
        "Pronto: Mobilegateway with publish-subscribe paradigm over wireless network.",
        "Technical Report 559, University of Cambridge, Computer Laboratory, February 2003.",
        "Middleware for Pervasive and ad-hoc Computing 126"
    ],
    "error_count": 0,
    "keys": {
        "asynchronous messaging middleware": {
            "translated_key": "middleware de mensajería asíncrona",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Adapting <br>asynchronous messaging middleware</br> to ad-hoc Networking Mirco Musolesi Dept.",
                "of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware.",
                "In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed.",
                "Instead, asynchronous communication seems to be a generally more suitable paradigm for such environments.",
                "Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems.",
                "In this paper, we present our experience in designing, implementing and evaluating EMMA (Epidemic Messaging Middleware for ad-hoc networks), an adaptation of Java Message Service (JMS) for mobile ad-hoc environments.",
                "We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1.",
                "INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment.",
                "Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces.",
                "Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity.",
                "Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised.",
                "In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved.",
                "In this paper, we examine one of the foundational aspects of middleware for mobile ad-hoc environments: that of the communication primitives.",
                "Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments.",
                "In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication.",
                "In recent years, there has been growing interest in platforms based on asynchronous communication paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity.",
                "From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability)....",
                "Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for mobile ad-hoc environments must therefore support semi-synchronous or completely asynchronous communication primitives if it is to avoid substantial limitations to its utility.",
                "Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe.",
                "Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9].",
                "There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware).",
                "These models differ quite considerably from the existing traditional middleware in terms of primitives provided.",
                "Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios.",
                "If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it.",
                "The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment.",
                "This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices.",
                "Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4].",
                "With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18].",
                "No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted.",
                "In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks.",
                "In our case, we elected to examine JMS, as one of the most widely known MOM systems.",
                "In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2.",
                "MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) Message-oriented middleware systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server.",
                "A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism.",
                "Message-oriented middleware thus supports asynchronous communication in a very natural way, achieving de-coupling of senders and receivers.",
                "A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time.",
                "However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored.",
                "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful message-oriented middleware for traditional distributed systems.",
                "The Java Messaging Service (JMS) is a collection of interfaces for asynchronous communication between distributed components.",
                "It provides a common way for Java programs to create, send and receive messages.",
                "JMS users are usually referred to as clients.",
                "The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system.",
                "Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages.",
                "There are two types of communication supported: point to point and publish-subscribe models.",
                "In the point to point model, hosts send messages to queues.",
                "Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them.",
                "The publish-subscribe model is based on the use of topics that can be subscribed to by clients.",
                "Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients.",
                "Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14].",
                "Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up.",
                "In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3.",
                "JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure.",
                "Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief.",
                "In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet).",
                "Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently.",
                "The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network.",
                "In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence.",
                "The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network.",
                "However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network.",
                "If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration.",
                "Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable.",
                "As discussed in Section 2, a JMS administrator defines queues and topics on the provider.",
                "Clients can then learn about them using the Java Naming and Directory Interface (JNDI).",
                "However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is).",
                "In mobile ad-hoc environments, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks.",
                "Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate.",
                "This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed.",
                "Persistence is, however, essential functionality in asynchronous communication environments as hosts are, by definition, connected at different times.",
                "In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4.",
                "JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure.",
                "Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios.",
                "As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging.",
                "Point to Point Model The point to point model is based on the concept of queues, that are used to enable asynchronous communication between the producer of a message and possible different consumers.",
                "In our solution, the location of queues is determined by a negotiation process that is application dependent.",
                "For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue.",
                "In this case, the optimum location of the queue may well be on this particular host.",
                "In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue.",
                "Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided.",
                "It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time.",
                "The hosts that receive advertisement messages add entries to their JNDI registry.",
                "Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]).",
                "A lease represents the time of validity of a particular entry.",
                "If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry.",
                "In other words, the host assumes that the queue will be unreachable from that point in time.",
                "This may be caused, for example, if a host storing the queue becomes unreachable.",
                "A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner.",
                "In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2.",
                "If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the epidemic protocol.",
                "In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5).",
                "Given the existence of an epidemic protocol, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms.",
                "Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before.",
                "Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic.",
                "When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue).",
                "The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the epidemic protocol otherwise.",
                "It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients.",
                "When a message is delivered to one of the subscribers, this recipient is deleted from the list.",
                "In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message.",
                "We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings.",
                "In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures.",
                "In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages.",
                "When the durable subscriber reconnects, the server sends it all unexpired messages.",
                "The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry.",
                "However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception.",
                "In other words, we cannot consider disconnections as failures.",
                "For these reasons, we adopt a slightly different semantics.",
                "With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the epidemic protocol rather than the synchronous protocol.",
                "In other words, durable notifications remain valid during the possible disconnections of the subscriber.",
                "On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the epidemic protocol but exploit only the synchronous protocol.",
                "If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications.",
                "Unsubscription messages are delivered in the same way as are subscription messages.",
                "It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures.",
                "This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network.",
                "The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13].",
                "The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16].",
                "A message that needs to be sent is replicated on each host in reach.",
                "In this way, copies of the messages are quickly spread through connected networks, like an infection.",
                "If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts.",
                "Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2].",
                "Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts.",
                "To improve the performance, a hash-table indexes the content of the buffer.",
                "When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores.",
                "The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have.",
                "The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host.",
                "Should buffer overflow occur, messages are dropped.",
                "The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient.",
                "Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5].",
                "According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery.",
                "The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe).",
                "A JMS message can be persistent or non-persistent.",
                "According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones.",
                "However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying epidemic protocol can guarantee only best-effort delivery.",
                "However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates.",
                "In other words, we provide the applications with at-mostonce reliability for both types of messages.",
                "In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy epidemic protocol.",
                "Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space.",
                "If this is insufficient and non-persistent messages are present in the buffer, these are replaced.",
                "Only the successful deliveries of the persistent messages are notified to the senders.",
                "According to the JMS specification, it is possible to assign a priority to each message.",
                "The messages with higher priorities are delivered in a preferential way.",
                "As discussed above, persistent messages are prioritised above the non-persistent ones.",
                "Further selection is based on their priorities.",
                "Messages with higher priorities are treated in a preferential way.",
                "In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages).",
                "Messages are deleted from the buffers using the expiration time value that can be set by senders.",
                "This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings.",
                "However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms.",
                "EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers).",
                "This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not.",
                "We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network.",
                "Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts.",
                "The lists are exchanged during the first steps of the anti-entropic epidemic protocol with a certain predefined frequency.",
                "In the case of messages with multiple recipients, a list of the actual recipients is also stored.",
                "When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients.",
                "If the resulting length of the list of recipients is zero, the message is deleted from the buffer.",
                "These lists have, clearly, finite dimensions and are implemented as circular queues.",
                "This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time.",
                "In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed.",
                "However this is not yet part of the current architecture of EMMA. 5.",
                "IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile.",
                "The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market.",
                "We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface.",
                "We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally.",
                "More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities.",
                "The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good.",
                "In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay.",
                "Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network.",
                "One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer middleware for mobile computing due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings.",
                "What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages.",
                "This problem arises because of the lack of intelligence in the epidemic protocol, and can be addressed by selecting carrier nodes for messages with greater care.",
                "The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6.",
                "CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable.",
                "Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems.",
                "As an example, consider the recent cross-layering trend in ad-hoc networking [1].",
                "This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains.",
                "We believe that it is possible to view our approach as an instance of cross-layering.",
                "In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation).",
                "For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery.",
                "Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms.",
                "Again, as a result of adopting a cross-layering methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour.",
                "We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system).",
                "A number of middleware systems have been developed to support ad-hoc networking with the use of asynchronous communication (such as LIME, XMIDDLE, STEAM [11]).",
                "In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering.",
                "A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2.",
                "The Swiss company Softwired has developed the first JMS middleware for mobile computing, called iBus Mobile [10].",
                "The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library.",
                "The gateway is used for the communication between the application server and mobile hosts.",
                "The gateway is seen by the JMS provider as a normal JMS client.",
                "The JMS provider can be any JMS-enabled application server, such as BEA Weblogic.",
                "Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments.",
                "The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers.",
                "Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS.",
                "The aim of this configuration is to adapt JMS to a decentralized model.",
                "The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol.",
                "Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol.",
                "Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages.",
                "Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8].",
                "The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18].",
                "This work is again a JMS adaptation; the focus of that implementation is on group communication and the use of application level routing algorithms for topic delivery of messages.",
                "However, there are a number of differences in the focus of our work.",
                "The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks.",
                "The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure.",
                "This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7.",
                "ROADMAP AND CONCLUSIONS Asynchronous communication is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels).",
                "In this paper we have described the state of the art in terms of MOM for mobile systems.",
                "We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks.",
                "We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings.",
                "However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce.",
                "A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability.",
                "We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13].",
                "One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8.",
                "REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano.",
                "Cross-layering in Mobile ad-hoc Network Design.",
                "IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.",
                "Epidemic Algorithms for Replicated Database Maintenance.",
                "In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey.",
                "Providing connectivity to the Saami nomadic community.",
                "In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill.",
                "Supporting CORBA applications in a Mobile Environment.",
                "In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47.",
                "ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout.",
                "Java Message Service Specification Version 1.1.",
                "Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart.",
                "WebSphere MQ: Connecting your applications without complex programming.",
                "IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini.",
                "Marrying Middleware and Mobile Computing.",
                "Gartner Group Research Report, September 2001. [8] IBM.",
                "WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU.",
                "Connecting remote communities.",
                "Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis.",
                "Introducing Wireless JMS.",
                "Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich.",
                "Middleware for Mobile Computing.",
                "In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58.",
                "Springer Verlag, 2002. [12] Microsoft.",
                "Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo.",
                "Adaptive routing for intermittently connected mobile ad-hoc networks.",
                "Technical report, UCL-CS Research Note, July 2004.",
                "Submitted for Publication. [14] Sun Microsystems.",
                "Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems.",
                "Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker.",
                "Epidemic routing for Partially Connected ad-hoc Networks.",
                "Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas.",
                "The OMNeT++ discrete event simulation system.",
                "In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan.",
                "JMS on Mobile ad-hoc Networks.",
                "In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon.",
                "Pronto: Mobilegateway with publish-subscribe paradigm over wireless network.",
                "Technical Report 559, University of Cambridge, Computer Laboratory, February 2003.",
                "Middleware for Pervasive and ad-hoc Computing 126"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "mobile ad-hoc environment": {
            "translated_key": "entorno ad-hoc móvil",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Adapting Asynchronous Messaging Middleware to ad-hoc Networking Mirco Musolesi Dept.",
                "of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware.",
                "In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed.",
                "Instead, asynchronous communication seems to be a generally more suitable paradigm for such environments.",
                "Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems.",
                "In this paper, we present our experience in designing, implementing and evaluating EMMA (Epidemic Messaging Middleware for ad-hoc networks), an adaptation of Java Message Service (JMS) for <br>mobile ad-hoc environment</br>s.",
                "We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1.",
                "INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment.",
                "Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces.",
                "Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity.",
                "Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised.",
                "In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved.",
                "In this paper, we examine one of the foundational aspects of middleware for <br>mobile ad-hoc environment</br>s: that of the communication primitives.",
                "Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments.",
                "In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication.",
                "In recent years, there has been growing interest in platforms based on asynchronous communication paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity.",
                "From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability)....",
                "Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for <br>mobile ad-hoc environment</br>s must therefore support semi-synchronous or completely asynchronous communication primitives if it is to avoid substantial limitations to its utility.",
                "Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe.",
                "Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9].",
                "There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware).",
                "These models differ quite considerably from the existing traditional middleware in terms of primitives provided.",
                "Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios.",
                "If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it.",
                "The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment.",
                "This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices.",
                "Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4].",
                "With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18].",
                "No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted.",
                "In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks.",
                "In our case, we elected to examine JMS, as one of the most widely known MOM systems.",
                "In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2.",
                "MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) Message-oriented middleware systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server.",
                "A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism.",
                "Message-oriented middleware thus supports asynchronous communication in a very natural way, achieving de-coupling of senders and receivers.",
                "A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time.",
                "However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored.",
                "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful message-oriented middleware for traditional distributed systems.",
                "The Java Messaging Service (JMS) is a collection of interfaces for asynchronous communication between distributed components.",
                "It provides a common way for Java programs to create, send and receive messages.",
                "JMS users are usually referred to as clients.",
                "The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system.",
                "Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages.",
                "There are two types of communication supported: point to point and publish-subscribe models.",
                "In the point to point model, hosts send messages to queues.",
                "Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them.",
                "The publish-subscribe model is based on the use of topics that can be subscribed to by clients.",
                "Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients.",
                "Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14].",
                "Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up.",
                "In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3.",
                "JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure.",
                "Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief.",
                "In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet).",
                "Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently.",
                "The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network.",
                "In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence.",
                "The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network.",
                "However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network.",
                "If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration.",
                "Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable.",
                "As discussed in Section 2, a JMS administrator defines queues and topics on the provider.",
                "Clients can then learn about them using the Java Naming and Directory Interface (JNDI).",
                "However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is).",
                "In <br>mobile ad-hoc environment</br>s, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks.",
                "Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate.",
                "This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed.",
                "Persistence is, however, essential functionality in asynchronous communication environments as hosts are, by definition, connected at different times.",
                "In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4.",
                "JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure.",
                "Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios.",
                "As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging.",
                "Point to Point Model The point to point model is based on the concept of queues, that are used to enable asynchronous communication between the producer of a message and possible different consumers.",
                "In our solution, the location of queues is determined by a negotiation process that is application dependent.",
                "For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue.",
                "In this case, the optimum location of the queue may well be on this particular host.",
                "In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue.",
                "Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided.",
                "It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time.",
                "The hosts that receive advertisement messages add entries to their JNDI registry.",
                "Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]).",
                "A lease represents the time of validity of a particular entry.",
                "If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry.",
                "In other words, the host assumes that the queue will be unreachable from that point in time.",
                "This may be caused, for example, if a host storing the queue becomes unreachable.",
                "A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner.",
                "In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2.",
                "If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the epidemic protocol.",
                "In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5).",
                "Given the existence of an epidemic protocol, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms.",
                "Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before.",
                "Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic.",
                "When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue).",
                "The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the epidemic protocol otherwise.",
                "It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients.",
                "When a message is delivered to one of the subscribers, this recipient is deleted from the list.",
                "In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message.",
                "We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings.",
                "In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures.",
                "In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages.",
                "When the durable subscriber reconnects, the server sends it all unexpired messages.",
                "The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry.",
                "However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception.",
                "In other words, we cannot consider disconnections as failures.",
                "For these reasons, we adopt a slightly different semantics.",
                "With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the epidemic protocol rather than the synchronous protocol.",
                "In other words, durable notifications remain valid during the possible disconnections of the subscriber.",
                "On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the epidemic protocol but exploit only the synchronous protocol.",
                "If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications.",
                "Unsubscription messages are delivered in the same way as are subscription messages.",
                "It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures.",
                "This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network.",
                "The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13].",
                "The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16].",
                "A message that needs to be sent is replicated on each host in reach.",
                "In this way, copies of the messages are quickly spread through connected networks, like an infection.",
                "If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts.",
                "Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2].",
                "Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts.",
                "To improve the performance, a hash-table indexes the content of the buffer.",
                "When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores.",
                "The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have.",
                "The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host.",
                "Should buffer overflow occur, messages are dropped.",
                "The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient.",
                "Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5].",
                "According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery.",
                "The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe).",
                "A JMS message can be persistent or non-persistent.",
                "According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones.",
                "However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying epidemic protocol can guarantee only best-effort delivery.",
                "However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates.",
                "In other words, we provide the applications with at-mostonce reliability for both types of messages.",
                "In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy epidemic protocol.",
                "Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space.",
                "If this is insufficient and non-persistent messages are present in the buffer, these are replaced.",
                "Only the successful deliveries of the persistent messages are notified to the senders.",
                "According to the JMS specification, it is possible to assign a priority to each message.",
                "The messages with higher priorities are delivered in a preferential way.",
                "As discussed above, persistent messages are prioritised above the non-persistent ones.",
                "Further selection is based on their priorities.",
                "Messages with higher priorities are treated in a preferential way.",
                "In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages).",
                "Messages are deleted from the buffers using the expiration time value that can be set by senders.",
                "This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings.",
                "However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms.",
                "EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers).",
                "This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not.",
                "We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network.",
                "Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts.",
                "The lists are exchanged during the first steps of the anti-entropic epidemic protocol with a certain predefined frequency.",
                "In the case of messages with multiple recipients, a list of the actual recipients is also stored.",
                "When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients.",
                "If the resulting length of the list of recipients is zero, the message is deleted from the buffer.",
                "These lists have, clearly, finite dimensions and are implemented as circular queues.",
                "This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time.",
                "In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed.",
                "However this is not yet part of the current architecture of EMMA. 5.",
                "IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile.",
                "The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market.",
                "We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface.",
                "We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally.",
                "More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities.",
                "The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good.",
                "In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay.",
                "Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network.",
                "One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer middleware for mobile computing due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings.",
                "What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages.",
                "This problem arises because of the lack of intelligence in the epidemic protocol, and can be addressed by selecting carrier nodes for messages with greater care.",
                "The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6.",
                "CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable.",
                "Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems.",
                "As an example, consider the recent cross-layering trend in ad-hoc networking [1].",
                "This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains.",
                "We believe that it is possible to view our approach as an instance of cross-layering.",
                "In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation).",
                "For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery.",
                "Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms.",
                "Again, as a result of adopting a cross-layering methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour.",
                "We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system).",
                "A number of middleware systems have been developed to support ad-hoc networking with the use of asynchronous communication (such as LIME, XMIDDLE, STEAM [11]).",
                "In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering.",
                "A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2.",
                "The Swiss company Softwired has developed the first JMS middleware for mobile computing, called iBus Mobile [10].",
                "The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library.",
                "The gateway is used for the communication between the application server and mobile hosts.",
                "The gateway is seen by the JMS provider as a normal JMS client.",
                "The JMS provider can be any JMS-enabled application server, such as BEA Weblogic.",
                "Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments.",
                "The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers.",
                "Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS.",
                "The aim of this configuration is to adapt JMS to a decentralized model.",
                "The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol.",
                "Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol.",
                "Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages.",
                "Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8].",
                "The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18].",
                "This work is again a JMS adaptation; the focus of that implementation is on group communication and the use of application level routing algorithms for topic delivery of messages.",
                "However, there are a number of differences in the focus of our work.",
                "The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks.",
                "The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure.",
                "This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7.",
                "ROADMAP AND CONCLUSIONS Asynchronous communication is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels).",
                "In this paper we have described the state of the art in terms of MOM for mobile systems.",
                "We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks.",
                "We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings.",
                "However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce.",
                "A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability.",
                "We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13].",
                "One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8.",
                "REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano.",
                "Cross-layering in Mobile ad-hoc Network Design.",
                "IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.",
                "Epidemic Algorithms for Replicated Database Maintenance.",
                "In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey.",
                "Providing connectivity to the Saami nomadic community.",
                "In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill.",
                "Supporting CORBA applications in a Mobile Environment.",
                "In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47.",
                "ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout.",
                "Java Message Service Specification Version 1.1.",
                "Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart.",
                "WebSphere MQ: Connecting your applications without complex programming.",
                "IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini.",
                "Marrying Middleware and Mobile Computing.",
                "Gartner Group Research Report, September 2001. [8] IBM.",
                "WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU.",
                "Connecting remote communities.",
                "Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis.",
                "Introducing Wireless JMS.",
                "Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich.",
                "Middleware for Mobile Computing.",
                "In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58.",
                "Springer Verlag, 2002. [12] Microsoft.",
                "Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo.",
                "Adaptive routing for intermittently connected mobile ad-hoc networks.",
                "Technical report, UCL-CS Research Note, July 2004.",
                "Submitted for Publication. [14] Sun Microsystems.",
                "Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems.",
                "Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker.",
                "Epidemic routing for Partially Connected ad-hoc Networks.",
                "Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas.",
                "The OMNeT++ discrete event simulation system.",
                "In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan.",
                "JMS on Mobile ad-hoc Networks.",
                "In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon.",
                "Pronto: Mobilegateway with publish-subscribe paradigm over wireless network.",
                "Technical Report 559, University of Cambridge, Computer Laboratory, February 2003.",
                "Middleware for Pervasive and ad-hoc Computing 126"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En este documento, presentamos nuestra experiencia en el diseño, implementación y evaluación de EMMA (Mensajería epidémica de middleware para redes ad-hoc), una adaptación del Servicio de Mensajes Java (JMS) para el \"entorno ad-hoc móvil\".",
                "En este documento, examinamos uno de los aspectos fundamentales del middleware para el \"entorno ad-hoc móvil\": el de las primitivas de comunicación.",
                "Además, en los sistemas ad-hoc móviles, la probabilidad de fragmentación de la red significa que la comunicación sincrónica en cualquier caso puede ser impracticable, dando situaciones en las que demora el tráfico asincrónico tolerante es la única forma de tráfico que podría ser compatible.121 Middleware 2004 Companion Middleware para el \"entorno ad-hoc móvil\", por lo tanto, debe admitir primitivas de comunicación semi-sincronales o completamente asíncronas si se trata de evitar limitaciones sustanciales para su utilidad.",
                "En el \"entorno ad-hoc móvil\", el proceso de descubrimiento no puede asumir la existencia de un conjunto fijo de servidores de descubrimiento que siempre son accesibles, ya que esto no coincidiría con la dinámica de las redes ad-hoc."
            ],
            "translated_text": "",
            "candidates": [
                "entorno ad-hoc móvil",
                "entorno ad-hoc móvil",
                "entorno ad-hoc móvil",
                "entorno ad-hoc móvil",
                "entorno ad-hoc móvil",
                "entorno ad-hoc móvil",
                "entorno ad-hoc móvil",
                "entorno ad-hoc móvil"
            ],
            "error": []
        },
        "epidemic messaging middleware": {
            "translated_key": "mensajería epidémica middleware",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Adapting Asynchronous Messaging Middleware to ad-hoc Networking Mirco Musolesi Dept.",
                "of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware.",
                "In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed.",
                "Instead, asynchronous communication seems to be a generally more suitable paradigm for such environments.",
                "Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems.",
                "In this paper, we present our experience in designing, implementing and evaluating EMMA (<br>epidemic messaging middleware</br> for ad-hoc networks), an adaptation of Java Message Service (JMS) for mobile ad-hoc environments.",
                "We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1.",
                "INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment.",
                "Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces.",
                "Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity.",
                "Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised.",
                "In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved.",
                "In this paper, we examine one of the foundational aspects of middleware for mobile ad-hoc environments: that of the communication primitives.",
                "Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments.",
                "In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication.",
                "In recent years, there has been growing interest in platforms based on asynchronous communication paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity.",
                "From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability)....",
                "Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for mobile ad-hoc environments must therefore support semi-synchronous or completely asynchronous communication primitives if it is to avoid substantial limitations to its utility.",
                "Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe.",
                "Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9].",
                "There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware).",
                "These models differ quite considerably from the existing traditional middleware in terms of primitives provided.",
                "Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios.",
                "If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it.",
                "The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment.",
                "This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices.",
                "Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4].",
                "With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18].",
                "No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted.",
                "In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks.",
                "In our case, we elected to examine JMS, as one of the most widely known MOM systems.",
                "In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2.",
                "MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) Message-oriented middleware systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server.",
                "A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism.",
                "Message-oriented middleware thus supports asynchronous communication in a very natural way, achieving de-coupling of senders and receivers.",
                "A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time.",
                "However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored.",
                "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful message-oriented middleware for traditional distributed systems.",
                "The Java Messaging Service (JMS) is a collection of interfaces for asynchronous communication between distributed components.",
                "It provides a common way for Java programs to create, send and receive messages.",
                "JMS users are usually referred to as clients.",
                "The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system.",
                "Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages.",
                "There are two types of communication supported: point to point and publish-subscribe models.",
                "In the point to point model, hosts send messages to queues.",
                "Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them.",
                "The publish-subscribe model is based on the use of topics that can be subscribed to by clients.",
                "Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients.",
                "Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14].",
                "Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up.",
                "In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3.",
                "JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure.",
                "Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief.",
                "In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet).",
                "Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently.",
                "The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network.",
                "In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence.",
                "The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network.",
                "However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network.",
                "If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration.",
                "Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable.",
                "As discussed in Section 2, a JMS administrator defines queues and topics on the provider.",
                "Clients can then learn about them using the Java Naming and Directory Interface (JNDI).",
                "However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is).",
                "In mobile ad-hoc environments, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks.",
                "Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate.",
                "This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed.",
                "Persistence is, however, essential functionality in asynchronous communication environments as hosts are, by definition, connected at different times.",
                "In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4.",
                "JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure.",
                "Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios.",
                "As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging.",
                "Point to Point Model The point to point model is based on the concept of queues, that are used to enable asynchronous communication between the producer of a message and possible different consumers.",
                "In our solution, the location of queues is determined by a negotiation process that is application dependent.",
                "For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue.",
                "In this case, the optimum location of the queue may well be on this particular host.",
                "In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue.",
                "Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided.",
                "It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time.",
                "The hosts that receive advertisement messages add entries to their JNDI registry.",
                "Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]).",
                "A lease represents the time of validity of a particular entry.",
                "If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry.",
                "In other words, the host assumes that the queue will be unreachable from that point in time.",
                "This may be caused, for example, if a host storing the queue becomes unreachable.",
                "A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner.",
                "In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2.",
                "If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the epidemic protocol.",
                "In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5).",
                "Given the existence of an epidemic protocol, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms.",
                "Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before.",
                "Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic.",
                "When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue).",
                "The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the epidemic protocol otherwise.",
                "It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients.",
                "When a message is delivered to one of the subscribers, this recipient is deleted from the list.",
                "In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message.",
                "We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings.",
                "In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures.",
                "In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages.",
                "When the durable subscriber reconnects, the server sends it all unexpired messages.",
                "The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry.",
                "However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception.",
                "In other words, we cannot consider disconnections as failures.",
                "For these reasons, we adopt a slightly different semantics.",
                "With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the epidemic protocol rather than the synchronous protocol.",
                "In other words, durable notifications remain valid during the possible disconnections of the subscriber.",
                "On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the epidemic protocol but exploit only the synchronous protocol.",
                "If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications.",
                "Unsubscription messages are delivered in the same way as are subscription messages.",
                "It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures.",
                "This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network.",
                "The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13].",
                "The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16].",
                "A message that needs to be sent is replicated on each host in reach.",
                "In this way, copies of the messages are quickly spread through connected networks, like an infection.",
                "If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts.",
                "Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2].",
                "Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts.",
                "To improve the performance, a hash-table indexes the content of the buffer.",
                "When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores.",
                "The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have.",
                "The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host.",
                "Should buffer overflow occur, messages are dropped.",
                "The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient.",
                "Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5].",
                "According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery.",
                "The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe).",
                "A JMS message can be persistent or non-persistent.",
                "According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones.",
                "However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying epidemic protocol can guarantee only best-effort delivery.",
                "However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates.",
                "In other words, we provide the applications with at-mostonce reliability for both types of messages.",
                "In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy epidemic protocol.",
                "Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space.",
                "If this is insufficient and non-persistent messages are present in the buffer, these are replaced.",
                "Only the successful deliveries of the persistent messages are notified to the senders.",
                "According to the JMS specification, it is possible to assign a priority to each message.",
                "The messages with higher priorities are delivered in a preferential way.",
                "As discussed above, persistent messages are prioritised above the non-persistent ones.",
                "Further selection is based on their priorities.",
                "Messages with higher priorities are treated in a preferential way.",
                "In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages).",
                "Messages are deleted from the buffers using the expiration time value that can be set by senders.",
                "This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings.",
                "However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms.",
                "EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers).",
                "This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not.",
                "We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network.",
                "Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts.",
                "The lists are exchanged during the first steps of the anti-entropic epidemic protocol with a certain predefined frequency.",
                "In the case of messages with multiple recipients, a list of the actual recipients is also stored.",
                "When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients.",
                "If the resulting length of the list of recipients is zero, the message is deleted from the buffer.",
                "These lists have, clearly, finite dimensions and are implemented as circular queues.",
                "This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time.",
                "In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed.",
                "However this is not yet part of the current architecture of EMMA. 5.",
                "IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile.",
                "The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market.",
                "We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface.",
                "We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally.",
                "More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities.",
                "The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good.",
                "In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay.",
                "Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network.",
                "One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer middleware for mobile computing due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings.",
                "What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages.",
                "This problem arises because of the lack of intelligence in the epidemic protocol, and can be addressed by selecting carrier nodes for messages with greater care.",
                "The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6.",
                "CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable.",
                "Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems.",
                "As an example, consider the recent cross-layering trend in ad-hoc networking [1].",
                "This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains.",
                "We believe that it is possible to view our approach as an instance of cross-layering.",
                "In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation).",
                "For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery.",
                "Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms.",
                "Again, as a result of adopting a cross-layering methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour.",
                "We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system).",
                "A number of middleware systems have been developed to support ad-hoc networking with the use of asynchronous communication (such as LIME, XMIDDLE, STEAM [11]).",
                "In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering.",
                "A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2.",
                "The Swiss company Softwired has developed the first JMS middleware for mobile computing, called iBus Mobile [10].",
                "The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library.",
                "The gateway is used for the communication between the application server and mobile hosts.",
                "The gateway is seen by the JMS provider as a normal JMS client.",
                "The JMS provider can be any JMS-enabled application server, such as BEA Weblogic.",
                "Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments.",
                "The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers.",
                "Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS.",
                "The aim of this configuration is to adapt JMS to a decentralized model.",
                "The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol.",
                "Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol.",
                "Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages.",
                "Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8].",
                "The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18].",
                "This work is again a JMS adaptation; the focus of that implementation is on group communication and the use of application level routing algorithms for topic delivery of messages.",
                "However, there are a number of differences in the focus of our work.",
                "The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks.",
                "The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure.",
                "This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7.",
                "ROADMAP AND CONCLUSIONS Asynchronous communication is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels).",
                "In this paper we have described the state of the art in terms of MOM for mobile systems.",
                "We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks.",
                "We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings.",
                "However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce.",
                "A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability.",
                "We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13].",
                "One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8.",
                "REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano.",
                "Cross-layering in Mobile ad-hoc Network Design.",
                "IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.",
                "Epidemic Algorithms for Replicated Database Maintenance.",
                "In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey.",
                "Providing connectivity to the Saami nomadic community.",
                "In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill.",
                "Supporting CORBA applications in a Mobile Environment.",
                "In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47.",
                "ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout.",
                "Java Message Service Specification Version 1.1.",
                "Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart.",
                "WebSphere MQ: Connecting your applications without complex programming.",
                "IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini.",
                "Marrying Middleware and Mobile Computing.",
                "Gartner Group Research Report, September 2001. [8] IBM.",
                "WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU.",
                "Connecting remote communities.",
                "Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis.",
                "Introducing Wireless JMS.",
                "Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich.",
                "Middleware for Mobile Computing.",
                "In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58.",
                "Springer Verlag, 2002. [12] Microsoft.",
                "Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo.",
                "Adaptive routing for intermittently connected mobile ad-hoc networks.",
                "Technical report, UCL-CS Research Note, July 2004.",
                "Submitted for Publication. [14] Sun Microsystems.",
                "Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems.",
                "Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker.",
                "Epidemic routing for Partially Connected ad-hoc Networks.",
                "Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas.",
                "The OMNeT++ discrete event simulation system.",
                "In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan.",
                "JMS on Mobile ad-hoc Networks.",
                "In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon.",
                "Pronto: Mobilegateway with publish-subscribe paradigm over wireless network.",
                "Technical Report 559, University of Cambridge, Computer Laboratory, February 2003.",
                "Middleware for Pervasive and ad-hoc Computing 126"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En este documento, presentamos nuestra experiencia en el diseño, implementación y evaluación de EMMA (\"Messorsing Middleware\" para redes ad-hoc), una adaptación del Servicio de Mensajes Java (JMS) para entornos ad-hoc móviles."
            ],
            "translated_text": "",
            "candidates": [
                "mensajería epidémica middleware",
                "Messorsing Middleware"
            ],
            "error": []
        },
        "message-oriented middleware": {
            "translated_key": "middleware orientado a mensajes",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Adapting Asynchronous Messaging Middleware to ad-hoc Networking Mirco Musolesi Dept.",
                "of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware.",
                "In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed.",
                "Instead, asynchronous communication seems to be a generally more suitable paradigm for such environments.",
                "Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems.",
                "In this paper, we present our experience in designing, implementing and evaluating EMMA (Epidemic Messaging Middleware for ad-hoc networks), an adaptation of Java Message Service (JMS) for mobile ad-hoc environments.",
                "We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1.",
                "INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment.",
                "Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces.",
                "Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity.",
                "Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised.",
                "In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved.",
                "In this paper, we examine one of the foundational aspects of middleware for mobile ad-hoc environments: that of the communication primitives.",
                "Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments.",
                "In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication.",
                "In recent years, there has been growing interest in platforms based on asynchronous communication paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity.",
                "From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability)....",
                "Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for mobile ad-hoc environments must therefore support semi-synchronous or completely asynchronous communication primitives if it is to avoid substantial limitations to its utility.",
                "Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe.",
                "Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9].",
                "There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware).",
                "These models differ quite considerably from the existing traditional middleware in terms of primitives provided.",
                "Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios.",
                "If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it.",
                "The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment.",
                "This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices.",
                "Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4].",
                "With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18].",
                "No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted.",
                "In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks.",
                "In our case, we elected to examine JMS, as one of the most widely known MOM systems.",
                "In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2.",
                "MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) <br>message-oriented middleware</br> systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server.",
                "A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism.",
                "<br>message-oriented middleware</br> thus supports asynchronous communication in a very natural way, achieving de-coupling of senders and receivers.",
                "A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time.",
                "However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored.",
                "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful <br>message-oriented middleware</br> for traditional distributed systems.",
                "The Java Messaging Service (JMS) is a collection of interfaces for asynchronous communication between distributed components.",
                "It provides a common way for Java programs to create, send and receive messages.",
                "JMS users are usually referred to as clients.",
                "The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system.",
                "Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages.",
                "There are two types of communication supported: point to point and publish-subscribe models.",
                "In the point to point model, hosts send messages to queues.",
                "Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them.",
                "The publish-subscribe model is based on the use of topics that can be subscribed to by clients.",
                "Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients.",
                "Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14].",
                "Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up.",
                "In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3.",
                "JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure.",
                "Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief.",
                "In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet).",
                "Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently.",
                "The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network.",
                "In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence.",
                "The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network.",
                "However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network.",
                "If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration.",
                "Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable.",
                "As discussed in Section 2, a JMS administrator defines queues and topics on the provider.",
                "Clients can then learn about them using the Java Naming and Directory Interface (JNDI).",
                "However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is).",
                "In mobile ad-hoc environments, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks.",
                "Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate.",
                "This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed.",
                "Persistence is, however, essential functionality in asynchronous communication environments as hosts are, by definition, connected at different times.",
                "In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4.",
                "JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure.",
                "Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios.",
                "As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging.",
                "Point to Point Model The point to point model is based on the concept of queues, that are used to enable asynchronous communication between the producer of a message and possible different consumers.",
                "In our solution, the location of queues is determined by a negotiation process that is application dependent.",
                "For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue.",
                "In this case, the optimum location of the queue may well be on this particular host.",
                "In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue.",
                "Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided.",
                "It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time.",
                "The hosts that receive advertisement messages add entries to their JNDI registry.",
                "Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]).",
                "A lease represents the time of validity of a particular entry.",
                "If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry.",
                "In other words, the host assumes that the queue will be unreachable from that point in time.",
                "This may be caused, for example, if a host storing the queue becomes unreachable.",
                "A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner.",
                "In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2.",
                "If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the epidemic protocol.",
                "In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5).",
                "Given the existence of an epidemic protocol, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms.",
                "Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before.",
                "Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic.",
                "When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue).",
                "The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the epidemic protocol otherwise.",
                "It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients.",
                "When a message is delivered to one of the subscribers, this recipient is deleted from the list.",
                "In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message.",
                "We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings.",
                "In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures.",
                "In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages.",
                "When the durable subscriber reconnects, the server sends it all unexpired messages.",
                "The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry.",
                "However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception.",
                "In other words, we cannot consider disconnections as failures.",
                "For these reasons, we adopt a slightly different semantics.",
                "With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the epidemic protocol rather than the synchronous protocol.",
                "In other words, durable notifications remain valid during the possible disconnections of the subscriber.",
                "On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the epidemic protocol but exploit only the synchronous protocol.",
                "If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications.",
                "Unsubscription messages are delivered in the same way as are subscription messages.",
                "It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures.",
                "This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network.",
                "The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13].",
                "The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16].",
                "A message that needs to be sent is replicated on each host in reach.",
                "In this way, copies of the messages are quickly spread through connected networks, like an infection.",
                "If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts.",
                "Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2].",
                "Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts.",
                "To improve the performance, a hash-table indexes the content of the buffer.",
                "When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores.",
                "The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have.",
                "The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host.",
                "Should buffer overflow occur, messages are dropped.",
                "The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient.",
                "Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5].",
                "According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery.",
                "The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe).",
                "A JMS message can be persistent or non-persistent.",
                "According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones.",
                "However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying epidemic protocol can guarantee only best-effort delivery.",
                "However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates.",
                "In other words, we provide the applications with at-mostonce reliability for both types of messages.",
                "In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy epidemic protocol.",
                "Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space.",
                "If this is insufficient and non-persistent messages are present in the buffer, these are replaced.",
                "Only the successful deliveries of the persistent messages are notified to the senders.",
                "According to the JMS specification, it is possible to assign a priority to each message.",
                "The messages with higher priorities are delivered in a preferential way.",
                "As discussed above, persistent messages are prioritised above the non-persistent ones.",
                "Further selection is based on their priorities.",
                "Messages with higher priorities are treated in a preferential way.",
                "In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages).",
                "Messages are deleted from the buffers using the expiration time value that can be set by senders.",
                "This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings.",
                "However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms.",
                "EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers).",
                "This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not.",
                "We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network.",
                "Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts.",
                "The lists are exchanged during the first steps of the anti-entropic epidemic protocol with a certain predefined frequency.",
                "In the case of messages with multiple recipients, a list of the actual recipients is also stored.",
                "When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients.",
                "If the resulting length of the list of recipients is zero, the message is deleted from the buffer.",
                "These lists have, clearly, finite dimensions and are implemented as circular queues.",
                "This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time.",
                "In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed.",
                "However this is not yet part of the current architecture of EMMA. 5.",
                "IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile.",
                "The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market.",
                "We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface.",
                "We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally.",
                "More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities.",
                "The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good.",
                "In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay.",
                "Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network.",
                "One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer middleware for mobile computing due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings.",
                "What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages.",
                "This problem arises because of the lack of intelligence in the epidemic protocol, and can be addressed by selecting carrier nodes for messages with greater care.",
                "The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6.",
                "CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable.",
                "Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems.",
                "As an example, consider the recent cross-layering trend in ad-hoc networking [1].",
                "This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains.",
                "We believe that it is possible to view our approach as an instance of cross-layering.",
                "In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation).",
                "For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery.",
                "Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms.",
                "Again, as a result of adopting a cross-layering methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour.",
                "We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system).",
                "A number of middleware systems have been developed to support ad-hoc networking with the use of asynchronous communication (such as LIME, XMIDDLE, STEAM [11]).",
                "In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering.",
                "A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2.",
                "The Swiss company Softwired has developed the first JMS middleware for mobile computing, called iBus Mobile [10].",
                "The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library.",
                "The gateway is used for the communication between the application server and mobile hosts.",
                "The gateway is seen by the JMS provider as a normal JMS client.",
                "The JMS provider can be any JMS-enabled application server, such as BEA Weblogic.",
                "Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments.",
                "The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers.",
                "Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS.",
                "The aim of this configuration is to adapt JMS to a decentralized model.",
                "The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol.",
                "Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol.",
                "Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages.",
                "Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8].",
                "The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18].",
                "This work is again a JMS adaptation; the focus of that implementation is on group communication and the use of application level routing algorithms for topic delivery of messages.",
                "However, there are a number of differences in the focus of our work.",
                "The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks.",
                "The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure.",
                "This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7.",
                "ROADMAP AND CONCLUSIONS Asynchronous communication is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels).",
                "In this paper we have described the state of the art in terms of MOM for mobile systems.",
                "We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks.",
                "We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings.",
                "However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce.",
                "A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability.",
                "We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13].",
                "One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8.",
                "REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano.",
                "Cross-layering in Mobile ad-hoc Network Design.",
                "IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.",
                "Epidemic Algorithms for Replicated Database Maintenance.",
                "In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey.",
                "Providing connectivity to the Saami nomadic community.",
                "In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill.",
                "Supporting CORBA applications in a Mobile Environment.",
                "In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47.",
                "ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout.",
                "Java Message Service Specification Version 1.1.",
                "Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart.",
                "WebSphere MQ: Connecting your applications without complex programming.",
                "IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini.",
                "Marrying Middleware and Mobile Computing.",
                "Gartner Group Research Report, September 2001. [8] IBM.",
                "WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU.",
                "Connecting remote communities.",
                "Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis.",
                "Introducing Wireless JMS.",
                "Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich.",
                "Middleware for Mobile Computing.",
                "In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58.",
                "Springer Verlag, 2002. [12] Microsoft.",
                "Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo.",
                "Adaptive routing for intermittently connected mobile ad-hoc networks.",
                "Technical report, UCL-CS Research Note, July 2004.",
                "Submitted for Publication. [14] Sun Microsystems.",
                "Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems.",
                "Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker.",
                "Epidemic routing for Partially Connected ad-hoc Networks.",
                "Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas.",
                "The OMNeT++ discrete event simulation system.",
                "In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan.",
                "JMS on Mobile ad-hoc Networks.",
                "In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon.",
                "Pronto: Mobilegateway with publish-subscribe paradigm over wireless network.",
                "Technical Report 559, University of Cambridge, Computer Laboratory, February 2003.",
                "Middleware for Pervasive and ad-hoc Computing 126"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Los sistemas de \"Middleware orientado a mensajes\" orientados a mensajes y Servicio de mensajes Java (JMS) admiten la comunicación entre componentes distribuidos a través de la pasada de mensajes: el remitente envía un mensaje a las colas identificadas, que generalmente residen en un servidor.",
                "El \"middleware orientado a mensajes\" admite la comunicación asincrónica de una manera muy natural, logrando el desacoplamiento de los remitentes y receptores.",
                "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] son ejemplos de \"middleware orientado a mensajes\" muy exitoso para los sistemas distribuidos tradicionales."
            ],
            "translated_text": "",
            "candidates": [
                "middleware orientado a mensajes",
                "Middleware orientado a mensajes",
                "middleware orientado a mensajes",
                "middleware orientado a mensajes",
                "middleware orientado a mensajes",
                "middleware orientado a mensajes"
            ],
            "error": []
        },
        "java messaging service": {
            "translated_key": "servicio de mensajería Java",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Adapting Asynchronous Messaging Middleware to ad-hoc Networking Mirco Musolesi Dept.",
                "of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware.",
                "In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed.",
                "Instead, asynchronous communication seems to be a generally more suitable paradigm for such environments.",
                "Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems.",
                "In this paper, we present our experience in designing, implementing and evaluating EMMA (Epidemic Messaging Middleware for ad-hoc networks), an adaptation of Java Message Service (JMS) for mobile ad-hoc environments.",
                "We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1.",
                "INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment.",
                "Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces.",
                "Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity.",
                "Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised.",
                "In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved.",
                "In this paper, we examine one of the foundational aspects of middleware for mobile ad-hoc environments: that of the communication primitives.",
                "Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments.",
                "In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication.",
                "In recent years, there has been growing interest in platforms based on asynchronous communication paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity.",
                "From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability)....",
                "Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for mobile ad-hoc environments must therefore support semi-synchronous or completely asynchronous communication primitives if it is to avoid substantial limitations to its utility.",
                "Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe.",
                "Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9].",
                "There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware).",
                "These models differ quite considerably from the existing traditional middleware in terms of primitives provided.",
                "Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios.",
                "If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it.",
                "The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment.",
                "This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices.",
                "Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4].",
                "With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18].",
                "No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted.",
                "In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks.",
                "In our case, we elected to examine JMS, as one of the most widely known MOM systems.",
                "In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2.",
                "MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) Message-oriented middleware systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server.",
                "A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism.",
                "Message-oriented middleware thus supports asynchronous communication in a very natural way, achieving de-coupling of senders and receivers.",
                "A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time.",
                "However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored.",
                "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful message-oriented middleware for traditional distributed systems.",
                "The <br>java messaging service</br> (JMS) is a collection of interfaces for asynchronous communication between distributed components.",
                "It provides a common way for Java programs to create, send and receive messages.",
                "JMS users are usually referred to as clients.",
                "The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system.",
                "Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages.",
                "There are two types of communication supported: point to point and publish-subscribe models.",
                "In the point to point model, hosts send messages to queues.",
                "Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them.",
                "The publish-subscribe model is based on the use of topics that can be subscribed to by clients.",
                "Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients.",
                "Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14].",
                "Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up.",
                "In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3.",
                "JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure.",
                "Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief.",
                "In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet).",
                "Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently.",
                "The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network.",
                "In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence.",
                "The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network.",
                "However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network.",
                "If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration.",
                "Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable.",
                "As discussed in Section 2, a JMS administrator defines queues and topics on the provider.",
                "Clients can then learn about them using the Java Naming and Directory Interface (JNDI).",
                "However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is).",
                "In mobile ad-hoc environments, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks.",
                "Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate.",
                "This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed.",
                "Persistence is, however, essential functionality in asynchronous communication environments as hosts are, by definition, connected at different times.",
                "In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4.",
                "JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure.",
                "Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios.",
                "As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging.",
                "Point to Point Model The point to point model is based on the concept of queues, that are used to enable asynchronous communication between the producer of a message and possible different consumers.",
                "In our solution, the location of queues is determined by a negotiation process that is application dependent.",
                "For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue.",
                "In this case, the optimum location of the queue may well be on this particular host.",
                "In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue.",
                "Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided.",
                "It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time.",
                "The hosts that receive advertisement messages add entries to their JNDI registry.",
                "Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]).",
                "A lease represents the time of validity of a particular entry.",
                "If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry.",
                "In other words, the host assumes that the queue will be unreachable from that point in time.",
                "This may be caused, for example, if a host storing the queue becomes unreachable.",
                "A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner.",
                "In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2.",
                "If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the epidemic protocol.",
                "In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5).",
                "Given the existence of an epidemic protocol, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms.",
                "Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before.",
                "Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic.",
                "When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue).",
                "The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the epidemic protocol otherwise.",
                "It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients.",
                "When a message is delivered to one of the subscribers, this recipient is deleted from the list.",
                "In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message.",
                "We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings.",
                "In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures.",
                "In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages.",
                "When the durable subscriber reconnects, the server sends it all unexpired messages.",
                "The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry.",
                "However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception.",
                "In other words, we cannot consider disconnections as failures.",
                "For these reasons, we adopt a slightly different semantics.",
                "With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the epidemic protocol rather than the synchronous protocol.",
                "In other words, durable notifications remain valid during the possible disconnections of the subscriber.",
                "On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the epidemic protocol but exploit only the synchronous protocol.",
                "If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications.",
                "Unsubscription messages are delivered in the same way as are subscription messages.",
                "It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures.",
                "This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network.",
                "The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13].",
                "The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16].",
                "A message that needs to be sent is replicated on each host in reach.",
                "In this way, copies of the messages are quickly spread through connected networks, like an infection.",
                "If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts.",
                "Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2].",
                "Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts.",
                "To improve the performance, a hash-table indexes the content of the buffer.",
                "When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores.",
                "The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have.",
                "The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host.",
                "Should buffer overflow occur, messages are dropped.",
                "The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient.",
                "Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5].",
                "According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery.",
                "The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe).",
                "A JMS message can be persistent or non-persistent.",
                "According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones.",
                "However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying epidemic protocol can guarantee only best-effort delivery.",
                "However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates.",
                "In other words, we provide the applications with at-mostonce reliability for both types of messages.",
                "In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy epidemic protocol.",
                "Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space.",
                "If this is insufficient and non-persistent messages are present in the buffer, these are replaced.",
                "Only the successful deliveries of the persistent messages are notified to the senders.",
                "According to the JMS specification, it is possible to assign a priority to each message.",
                "The messages with higher priorities are delivered in a preferential way.",
                "As discussed above, persistent messages are prioritised above the non-persistent ones.",
                "Further selection is based on their priorities.",
                "Messages with higher priorities are treated in a preferential way.",
                "In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages).",
                "Messages are deleted from the buffers using the expiration time value that can be set by senders.",
                "This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings.",
                "However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms.",
                "EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers).",
                "This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not.",
                "We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network.",
                "Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts.",
                "The lists are exchanged during the first steps of the anti-entropic epidemic protocol with a certain predefined frequency.",
                "In the case of messages with multiple recipients, a list of the actual recipients is also stored.",
                "When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients.",
                "If the resulting length of the list of recipients is zero, the message is deleted from the buffer.",
                "These lists have, clearly, finite dimensions and are implemented as circular queues.",
                "This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time.",
                "In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed.",
                "However this is not yet part of the current architecture of EMMA. 5.",
                "IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile.",
                "The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market.",
                "We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface.",
                "We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally.",
                "More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities.",
                "The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good.",
                "In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay.",
                "Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network.",
                "One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer middleware for mobile computing due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings.",
                "What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages.",
                "This problem arises because of the lack of intelligence in the epidemic protocol, and can be addressed by selecting carrier nodes for messages with greater care.",
                "The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6.",
                "CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable.",
                "Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems.",
                "As an example, consider the recent cross-layering trend in ad-hoc networking [1].",
                "This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains.",
                "We believe that it is possible to view our approach as an instance of cross-layering.",
                "In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation).",
                "For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery.",
                "Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms.",
                "Again, as a result of adopting a cross-layering methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour.",
                "We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system).",
                "A number of middleware systems have been developed to support ad-hoc networking with the use of asynchronous communication (such as LIME, XMIDDLE, STEAM [11]).",
                "In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering.",
                "A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2.",
                "The Swiss company Softwired has developed the first JMS middleware for mobile computing, called iBus Mobile [10].",
                "The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library.",
                "The gateway is used for the communication between the application server and mobile hosts.",
                "The gateway is seen by the JMS provider as a normal JMS client.",
                "The JMS provider can be any JMS-enabled application server, such as BEA Weblogic.",
                "Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments.",
                "The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers.",
                "Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS.",
                "The aim of this configuration is to adapt JMS to a decentralized model.",
                "The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol.",
                "Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol.",
                "Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages.",
                "Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8].",
                "The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18].",
                "This work is again a JMS adaptation; the focus of that implementation is on group communication and the use of application level routing algorithms for topic delivery of messages.",
                "However, there are a number of differences in the focus of our work.",
                "The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks.",
                "The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure.",
                "This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7.",
                "ROADMAP AND CONCLUSIONS Asynchronous communication is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels).",
                "In this paper we have described the state of the art in terms of MOM for mobile systems.",
                "We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks.",
                "We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings.",
                "However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce.",
                "A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability.",
                "We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13].",
                "One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8.",
                "REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano.",
                "Cross-layering in Mobile ad-hoc Network Design.",
                "IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.",
                "Epidemic Algorithms for Replicated Database Maintenance.",
                "In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey.",
                "Providing connectivity to the Saami nomadic community.",
                "In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill.",
                "Supporting CORBA applications in a Mobile Environment.",
                "In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47.",
                "ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout.",
                "Java Message Service Specification Version 1.1.",
                "Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart.",
                "WebSphere MQ: Connecting your applications without complex programming.",
                "IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini.",
                "Marrying Middleware and Mobile Computing.",
                "Gartner Group Research Report, September 2001. [8] IBM.",
                "WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU.",
                "Connecting remote communities.",
                "Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis.",
                "Introducing Wireless JMS.",
                "Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich.",
                "Middleware for Mobile Computing.",
                "In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58.",
                "Springer Verlag, 2002. [12] Microsoft.",
                "Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo.",
                "Adaptive routing for intermittently connected mobile ad-hoc networks.",
                "Technical report, UCL-CS Research Note, July 2004.",
                "Submitted for Publication. [14] Sun Microsystems.",
                "Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems.",
                "Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker.",
                "Epidemic routing for Partially Connected ad-hoc Networks.",
                "Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas.",
                "The OMNeT++ discrete event simulation system.",
                "In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan.",
                "JMS on Mobile ad-hoc Networks.",
                "In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon.",
                "Pronto: Mobilegateway with publish-subscribe paradigm over wireless network.",
                "Technical Report 559, University of Cambridge, Computer Laboratory, February 2003.",
                "Middleware for Pervasive and ad-hoc Computing 126"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El \"Servicio de mensajería Java\" (JMS) es una colección de interfaces para la comunicación asincrónica entre componentes distribuidos."
            ],
            "translated_text": "",
            "candidates": [
                "servicio de mensajería Java",
                "Servicio de mensajería Java"
            ],
            "error": []
        },
        "asynchronous communication": {
            "translated_key": "comunicación asíncrona",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Adapting Asynchronous Messaging Middleware to ad-hoc Networking Mirco Musolesi Dept.",
                "of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware.",
                "In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed.",
                "Instead, <br>asynchronous communication</br> seems to be a generally more suitable paradigm for such environments.",
                "Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems.",
                "In this paper, we present our experience in designing, implementing and evaluating EMMA (Epidemic Messaging Middleware for ad-hoc networks), an adaptation of Java Message Service (JMS) for mobile ad-hoc environments.",
                "We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1.",
                "INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment.",
                "Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces.",
                "Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity.",
                "Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised.",
                "In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved.",
                "In this paper, we examine one of the foundational aspects of middleware for mobile ad-hoc environments: that of the communication primitives.",
                "Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments.",
                "In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication.",
                "In recent years, there has been growing interest in platforms based on <br>asynchronous communication</br> paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity.",
                "From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability)....",
                "Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for mobile ad-hoc environments must therefore support semi-synchronous or completely <br>asynchronous communication</br> primitives if it is to avoid substantial limitations to its utility.",
                "Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe.",
                "Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9].",
                "There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware).",
                "These models differ quite considerably from the existing traditional middleware in terms of primitives provided.",
                "Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios.",
                "If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it.",
                "The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment.",
                "This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices.",
                "Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4].",
                "With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18].",
                "No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted.",
                "In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks.",
                "In our case, we elected to examine JMS, as one of the most widely known MOM systems.",
                "In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2.",
                "MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) Message-oriented middleware systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server.",
                "A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism.",
                "Message-oriented middleware thus supports <br>asynchronous communication</br> in a very natural way, achieving de-coupling of senders and receivers.",
                "A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time.",
                "However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored.",
                "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful message-oriented middleware for traditional distributed systems.",
                "The Java Messaging Service (JMS) is a collection of interfaces for <br>asynchronous communication</br> between distributed components.",
                "It provides a common way for Java programs to create, send and receive messages.",
                "JMS users are usually referred to as clients.",
                "The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system.",
                "Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages.",
                "There are two types of communication supported: point to point and publish-subscribe models.",
                "In the point to point model, hosts send messages to queues.",
                "Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them.",
                "The publish-subscribe model is based on the use of topics that can be subscribed to by clients.",
                "Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients.",
                "Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14].",
                "Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up.",
                "In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3.",
                "JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure.",
                "Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief.",
                "In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet).",
                "Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently.",
                "The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network.",
                "In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence.",
                "The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network.",
                "However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network.",
                "If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration.",
                "Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable.",
                "As discussed in Section 2, a JMS administrator defines queues and topics on the provider.",
                "Clients can then learn about them using the Java Naming and Directory Interface (JNDI).",
                "However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is).",
                "In mobile ad-hoc environments, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks.",
                "Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate.",
                "This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed.",
                "Persistence is, however, essential functionality in <br>asynchronous communication</br> environments as hosts are, by definition, connected at different times.",
                "In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4.",
                "JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure.",
                "Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios.",
                "As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging.",
                "Point to Point Model The point to point model is based on the concept of queues, that are used to enable <br>asynchronous communication</br> between the producer of a message and possible different consumers.",
                "In our solution, the location of queues is determined by a negotiation process that is application dependent.",
                "For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue.",
                "In this case, the optimum location of the queue may well be on this particular host.",
                "In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue.",
                "Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided.",
                "It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time.",
                "The hosts that receive advertisement messages add entries to their JNDI registry.",
                "Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]).",
                "A lease represents the time of validity of a particular entry.",
                "If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry.",
                "In other words, the host assumes that the queue will be unreachable from that point in time.",
                "This may be caused, for example, if a host storing the queue becomes unreachable.",
                "A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner.",
                "In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2.",
                "If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the epidemic protocol.",
                "In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5).",
                "Given the existence of an epidemic protocol, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms.",
                "Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before.",
                "Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic.",
                "When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue).",
                "The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the epidemic protocol otherwise.",
                "It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients.",
                "When a message is delivered to one of the subscribers, this recipient is deleted from the list.",
                "In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message.",
                "We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings.",
                "In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures.",
                "In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages.",
                "When the durable subscriber reconnects, the server sends it all unexpired messages.",
                "The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry.",
                "However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception.",
                "In other words, we cannot consider disconnections as failures.",
                "For these reasons, we adopt a slightly different semantics.",
                "With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the epidemic protocol rather than the synchronous protocol.",
                "In other words, durable notifications remain valid during the possible disconnections of the subscriber.",
                "On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the epidemic protocol but exploit only the synchronous protocol.",
                "If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications.",
                "Unsubscription messages are delivered in the same way as are subscription messages.",
                "It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures.",
                "This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network.",
                "The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13].",
                "The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16].",
                "A message that needs to be sent is replicated on each host in reach.",
                "In this way, copies of the messages are quickly spread through connected networks, like an infection.",
                "If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts.",
                "Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2].",
                "Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts.",
                "To improve the performance, a hash-table indexes the content of the buffer.",
                "When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores.",
                "The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have.",
                "The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host.",
                "Should buffer overflow occur, messages are dropped.",
                "The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient.",
                "Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5].",
                "According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery.",
                "The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe).",
                "A JMS message can be persistent or non-persistent.",
                "According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones.",
                "However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying epidemic protocol can guarantee only best-effort delivery.",
                "However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates.",
                "In other words, we provide the applications with at-mostonce reliability for both types of messages.",
                "In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy epidemic protocol.",
                "Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space.",
                "If this is insufficient and non-persistent messages are present in the buffer, these are replaced.",
                "Only the successful deliveries of the persistent messages are notified to the senders.",
                "According to the JMS specification, it is possible to assign a priority to each message.",
                "The messages with higher priorities are delivered in a preferential way.",
                "As discussed above, persistent messages are prioritised above the non-persistent ones.",
                "Further selection is based on their priorities.",
                "Messages with higher priorities are treated in a preferential way.",
                "In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages).",
                "Messages are deleted from the buffers using the expiration time value that can be set by senders.",
                "This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings.",
                "However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms.",
                "EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers).",
                "This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not.",
                "We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network.",
                "Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts.",
                "The lists are exchanged during the first steps of the anti-entropic epidemic protocol with a certain predefined frequency.",
                "In the case of messages with multiple recipients, a list of the actual recipients is also stored.",
                "When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients.",
                "If the resulting length of the list of recipients is zero, the message is deleted from the buffer.",
                "These lists have, clearly, finite dimensions and are implemented as circular queues.",
                "This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time.",
                "In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed.",
                "However this is not yet part of the current architecture of EMMA. 5.",
                "IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile.",
                "The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market.",
                "We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface.",
                "We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally.",
                "More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities.",
                "The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good.",
                "In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay.",
                "Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network.",
                "One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer middleware for mobile computing due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings.",
                "What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages.",
                "This problem arises because of the lack of intelligence in the epidemic protocol, and can be addressed by selecting carrier nodes for messages with greater care.",
                "The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6.",
                "CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable.",
                "Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems.",
                "As an example, consider the recent cross-layering trend in ad-hoc networking [1].",
                "This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains.",
                "We believe that it is possible to view our approach as an instance of cross-layering.",
                "In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation).",
                "For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery.",
                "Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms.",
                "Again, as a result of adopting a cross-layering methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour.",
                "We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system).",
                "A number of middleware systems have been developed to support ad-hoc networking with the use of <br>asynchronous communication</br> (such as LIME, XMIDDLE, STEAM [11]).",
                "In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering.",
                "A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2.",
                "The Swiss company Softwired has developed the first JMS middleware for mobile computing, called iBus Mobile [10].",
                "The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library.",
                "The gateway is used for the communication between the application server and mobile hosts.",
                "The gateway is seen by the JMS provider as a normal JMS client.",
                "The JMS provider can be any JMS-enabled application server, such as BEA Weblogic.",
                "Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments.",
                "The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers.",
                "Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS.",
                "The aim of this configuration is to adapt JMS to a decentralized model.",
                "The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol.",
                "Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol.",
                "Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages.",
                "Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8].",
                "The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18].",
                "This work is again a JMS adaptation; the focus of that implementation is on group communication and the use of application level routing algorithms for topic delivery of messages.",
                "However, there are a number of differences in the focus of our work.",
                "The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks.",
                "The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure.",
                "This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7.",
                "ROADMAP AND CONCLUSIONS <br>asynchronous communication</br> is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels).",
                "In this paper we have described the state of the art in terms of MOM for mobile systems.",
                "We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks.",
                "We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings.",
                "However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce.",
                "A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability.",
                "We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13].",
                "One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8.",
                "REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano.",
                "Cross-layering in Mobile ad-hoc Network Design.",
                "IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.",
                "Epidemic Algorithms for Replicated Database Maintenance.",
                "In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey.",
                "Providing connectivity to the Saami nomadic community.",
                "In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill.",
                "Supporting CORBA applications in a Mobile Environment.",
                "In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47.",
                "ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout.",
                "Java Message Service Specification Version 1.1.",
                "Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart.",
                "WebSphere MQ: Connecting your applications without complex programming.",
                "IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini.",
                "Marrying Middleware and Mobile Computing.",
                "Gartner Group Research Report, September 2001. [8] IBM.",
                "WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU.",
                "Connecting remote communities.",
                "Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis.",
                "Introducing Wireless JMS.",
                "Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich.",
                "Middleware for Mobile Computing.",
                "In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58.",
                "Springer Verlag, 2002. [12] Microsoft.",
                "Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo.",
                "Adaptive routing for intermittently connected mobile ad-hoc networks.",
                "Technical report, UCL-CS Research Note, July 2004.",
                "Submitted for Publication. [14] Sun Microsystems.",
                "Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems.",
                "Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker.",
                "Epidemic routing for Partially Connected ad-hoc Networks.",
                "Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas.",
                "The OMNeT++ discrete event simulation system.",
                "In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan.",
                "JMS on Mobile ad-hoc Networks.",
                "In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon.",
                "Pronto: Mobilegateway with publish-subscribe paradigm over wireless network.",
                "Technical Report 559, University of Cambridge, Computer Laboratory, February 2003.",
                "Middleware for Pervasive and ad-hoc Computing 126"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En cambio, la \"comunicación asincrónica\" parece ser un paradigma generalmente más adecuado para tales entornos.",
                "En los últimos años, ha habido un creciente interés en las plataformas basadas en paradigmas de \"comunicación asincrónica\", como Publish-Susscribe Systems [6]: estos se han explotado con mucho éxito donde hay asincronía a nivel de aplicación.",
                "Además, en los sistemas ad-hoc móviles, la probabilidad de fragmentación de la red significa que la comunicación sincrónica en cualquier caso puede ser impracticable, dando situaciones en las que demora el tráfico asincrónico tolerante es la única forma de tráfico que podría ser compatible.121 Middleware 2004 Companion Middleware para entornos ad-hoc móviles, por lo tanto, deben admitir primitivas semi-sincronales o completamente \"de comunicación asincrónica\" si se trata de evitar limitaciones sustanciales para su utilidad.",
                "El middleware orientado a mensajes es compatible con la \"comunicación asincrónica\" de una manera muy natural, logrando el desacoplamiento de los remitentes y receptores.",
                "El servicio de mensajería Java (JMS) es una colección de interfaces para la \"comunicación asíncrona\" entre los componentes distribuidos.",
                "Sin embargo, la persistencia es la funcionalidad esencial en los entornos de \"comunicación asincrónica\", ya que los hosts están, por definición, conectados en diferentes momentos.",
                "Modelo de punto a punto El modelo de punto a punto se basa en el concepto de colas, que se utilizan para habilitar la \"comunicación asincrónica\" entre el productor de un mensaje y posibles consumidores diferentes.",
                "Se han desarrollado varios sistemas de middleware para admitir redes ad-hoc con el uso de \"comunicación asincrónica\" (como Lime, XMiddle, Steam [11]).",
                "La hoja de ruta y las conclusiones \"comunicación asincrónica\" es un paradigma de comunicación útil para las redes ad-hoc móviles, ya que los hosts pueden venir, ir y recoger mensajes cuando sea conveniente, también tiene en cuenta su disponibilidad de recursos (por ejemplo, potencia, niveles de conectividad)."
            ],
            "translated_text": "",
            "candidates": [
                "comunicación asíncrona",
                "comunicación asincrónica",
                "comunicación asíncrona",
                "comunicación asincrónica",
                "comunicación asíncrona",
                "de comunicación asincrónica",
                "comunicación asíncrona",
                "comunicación asincrónica",
                "comunicación asíncrona",
                "comunicación asíncrona",
                "comunicación asíncrona",
                "comunicación asincrónica",
                "comunicación asíncrona",
                "comunicación asincrónica",
                "comunicación asíncrona",
                "comunicación asincrónica",
                "comunicación asíncrona",
                "comunicación asincrónica"
            ],
            "error": []
        },
        "epidemic protocol": {
            "translated_key": "protocolo epidémico",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Adapting Asynchronous Messaging Middleware to ad-hoc Networking Mirco Musolesi Dept.",
                "of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware.",
                "In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed.",
                "Instead, asynchronous communication seems to be a generally more suitable paradigm for such environments.",
                "Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems.",
                "In this paper, we present our experience in designing, implementing and evaluating EMMA (Epidemic Messaging Middleware for ad-hoc networks), an adaptation of Java Message Service (JMS) for mobile ad-hoc environments.",
                "We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1.",
                "INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment.",
                "Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces.",
                "Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity.",
                "Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised.",
                "In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved.",
                "In this paper, we examine one of the foundational aspects of middleware for mobile ad-hoc environments: that of the communication primitives.",
                "Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments.",
                "In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication.",
                "In recent years, there has been growing interest in platforms based on asynchronous communication paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity.",
                "From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability)....",
                "Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for mobile ad-hoc environments must therefore support semi-synchronous or completely asynchronous communication primitives if it is to avoid substantial limitations to its utility.",
                "Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe.",
                "Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9].",
                "There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware).",
                "These models differ quite considerably from the existing traditional middleware in terms of primitives provided.",
                "Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios.",
                "If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it.",
                "The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment.",
                "This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices.",
                "Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4].",
                "With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18].",
                "No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted.",
                "In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks.",
                "In our case, we elected to examine JMS, as one of the most widely known MOM systems.",
                "In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2.",
                "MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) Message-oriented middleware systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server.",
                "A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism.",
                "Message-oriented middleware thus supports asynchronous communication in a very natural way, achieving de-coupling of senders and receivers.",
                "A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time.",
                "However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored.",
                "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful message-oriented middleware for traditional distributed systems.",
                "The Java Messaging Service (JMS) is a collection of interfaces for asynchronous communication between distributed components.",
                "It provides a common way for Java programs to create, send and receive messages.",
                "JMS users are usually referred to as clients.",
                "The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system.",
                "Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages.",
                "There are two types of communication supported: point to point and publish-subscribe models.",
                "In the point to point model, hosts send messages to queues.",
                "Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them.",
                "The publish-subscribe model is based on the use of topics that can be subscribed to by clients.",
                "Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients.",
                "Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14].",
                "Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up.",
                "In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3.",
                "JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure.",
                "Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief.",
                "In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet).",
                "Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently.",
                "The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network.",
                "In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence.",
                "The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network.",
                "However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network.",
                "If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration.",
                "Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable.",
                "As discussed in Section 2, a JMS administrator defines queues and topics on the provider.",
                "Clients can then learn about them using the Java Naming and Directory Interface (JNDI).",
                "However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is).",
                "In mobile ad-hoc environments, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks.",
                "Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate.",
                "This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed.",
                "Persistence is, however, essential functionality in asynchronous communication environments as hosts are, by definition, connected at different times.",
                "In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4.",
                "JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure.",
                "Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios.",
                "As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging.",
                "Point to Point Model The point to point model is based on the concept of queues, that are used to enable asynchronous communication between the producer of a message and possible different consumers.",
                "In our solution, the location of queues is determined by a negotiation process that is application dependent.",
                "For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue.",
                "In this case, the optimum location of the queue may well be on this particular host.",
                "In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue.",
                "Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided.",
                "It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time.",
                "The hosts that receive advertisement messages add entries to their JNDI registry.",
                "Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]).",
                "A lease represents the time of validity of a particular entry.",
                "If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry.",
                "In other words, the host assumes that the queue will be unreachable from that point in time.",
                "This may be caused, for example, if a host storing the queue becomes unreachable.",
                "A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner.",
                "In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2.",
                "If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the <br>epidemic protocol</br>.",
                "In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5).",
                "Given the existence of an <br>epidemic protocol</br>, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms.",
                "Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before.",
                "Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic.",
                "When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue).",
                "The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the <br>epidemic protocol</br> otherwise.",
                "It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients.",
                "When a message is delivered to one of the subscribers, this recipient is deleted from the list.",
                "In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message.",
                "We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings.",
                "In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures.",
                "In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages.",
                "When the durable subscriber reconnects, the server sends it all unexpired messages.",
                "The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry.",
                "However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception.",
                "In other words, we cannot consider disconnections as failures.",
                "For these reasons, we adopt a slightly different semantics.",
                "With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the <br>epidemic protocol</br> rather than the synchronous protocol.",
                "In other words, durable notifications remain valid during the possible disconnections of the subscriber.",
                "On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the <br>epidemic protocol</br> but exploit only the synchronous protocol.",
                "If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications.",
                "Unsubscription messages are delivered in the same way as are subscription messages.",
                "It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures.",
                "This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network.",
                "The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13].",
                "The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16].",
                "A message that needs to be sent is replicated on each host in reach.",
                "In this way, copies of the messages are quickly spread through connected networks, like an infection.",
                "If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts.",
                "Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2].",
                "Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts.",
                "To improve the performance, a hash-table indexes the content of the buffer.",
                "When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores.",
                "The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have.",
                "The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host.",
                "Should buffer overflow occur, messages are dropped.",
                "The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient.",
                "Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5].",
                "According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery.",
                "The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe).",
                "A JMS message can be persistent or non-persistent.",
                "According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones.",
                "However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying <br>epidemic protocol</br> can guarantee only best-effort delivery.",
                "However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates.",
                "In other words, we provide the applications with at-mostonce reliability for both types of messages.",
                "In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy <br>epidemic protocol</br>.",
                "Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space.",
                "If this is insufficient and non-persistent messages are present in the buffer, these are replaced.",
                "Only the successful deliveries of the persistent messages are notified to the senders.",
                "According to the JMS specification, it is possible to assign a priority to each message.",
                "The messages with higher priorities are delivered in a preferential way.",
                "As discussed above, persistent messages are prioritised above the non-persistent ones.",
                "Further selection is based on their priorities.",
                "Messages with higher priorities are treated in a preferential way.",
                "In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages).",
                "Messages are deleted from the buffers using the expiration time value that can be set by senders.",
                "This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings.",
                "However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms.",
                "EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers).",
                "This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not.",
                "We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network.",
                "Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts.",
                "The lists are exchanged during the first steps of the anti-entropic <br>epidemic protocol</br> with a certain predefined frequency.",
                "In the case of messages with multiple recipients, a list of the actual recipients is also stored.",
                "When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients.",
                "If the resulting length of the list of recipients is zero, the message is deleted from the buffer.",
                "These lists have, clearly, finite dimensions and are implemented as circular queues.",
                "This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time.",
                "In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed.",
                "However this is not yet part of the current architecture of EMMA. 5.",
                "IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile.",
                "The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market.",
                "We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface.",
                "We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally.",
                "More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities.",
                "The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good.",
                "In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay.",
                "Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network.",
                "One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer middleware for mobile computing due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings.",
                "What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages.",
                "This problem arises because of the lack of intelligence in the <br>epidemic protocol</br>, and can be addressed by selecting carrier nodes for messages with greater care.",
                "The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6.",
                "CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable.",
                "Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems.",
                "As an example, consider the recent cross-layering trend in ad-hoc networking [1].",
                "This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains.",
                "We believe that it is possible to view our approach as an instance of cross-layering.",
                "In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation).",
                "For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery.",
                "Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms.",
                "Again, as a result of adopting a cross-layering methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour.",
                "We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system).",
                "A number of middleware systems have been developed to support ad-hoc networking with the use of asynchronous communication (such as LIME, XMIDDLE, STEAM [11]).",
                "In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering.",
                "A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2.",
                "The Swiss company Softwired has developed the first JMS middleware for mobile computing, called iBus Mobile [10].",
                "The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library.",
                "The gateway is used for the communication between the application server and mobile hosts.",
                "The gateway is seen by the JMS provider as a normal JMS client.",
                "The JMS provider can be any JMS-enabled application server, such as BEA Weblogic.",
                "Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments.",
                "The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers.",
                "Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS.",
                "The aim of this configuration is to adapt JMS to a decentralized model.",
                "The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol.",
                "Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol.",
                "Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages.",
                "Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8].",
                "The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18].",
                "This work is again a JMS adaptation; the focus of that implementation is on group communication and the use of application level routing algorithms for topic delivery of messages.",
                "However, there are a number of differences in the focus of our work.",
                "The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks.",
                "The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure.",
                "This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7.",
                "ROADMAP AND CONCLUSIONS Asynchronous communication is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels).",
                "In this paper we have described the state of the art in terms of MOM for mobile systems.",
                "We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks.",
                "We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings.",
                "However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce.",
                "A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability.",
                "We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13].",
                "One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8.",
                "REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano.",
                "Cross-layering in Mobile ad-hoc Network Design.",
                "IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.",
                "Epidemic Algorithms for Replicated Database Maintenance.",
                "In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey.",
                "Providing connectivity to the Saami nomadic community.",
                "In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill.",
                "Supporting CORBA applications in a Mobile Environment.",
                "In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47.",
                "ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout.",
                "Java Message Service Specification Version 1.1.",
                "Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart.",
                "WebSphere MQ: Connecting your applications without complex programming.",
                "IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini.",
                "Marrying Middleware and Mobile Computing.",
                "Gartner Group Research Report, September 2001. [8] IBM.",
                "WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU.",
                "Connecting remote communities.",
                "Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis.",
                "Introducing Wireless JMS.",
                "Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich.",
                "Middleware for Mobile Computing.",
                "In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58.",
                "Springer Verlag, 2002. [12] Microsoft.",
                "Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo.",
                "Adaptive routing for intermittently connected mobile ad-hoc networks.",
                "Technical report, UCL-CS Research Note, July 2004.",
                "Submitted for Publication. [14] Sun Microsystems.",
                "Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems.",
                "Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker.",
                "Epidemic routing for Partially Connected ad-hoc Networks.",
                "Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas.",
                "The OMNeT++ discrete event simulation system.",
                "In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan.",
                "JMS on Mobile ad-hoc Networks.",
                "In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon.",
                "Pronto: Mobilegateway with publish-subscribe paradigm over wireless network.",
                "Technical Report 559, University of Cambridge, Computer Laboratory, February 2003.",
                "Middleware for Pervasive and ad-hoc Computing 126"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Si dos hosts están en la misma nube (es decir, existe una ruta conectada entre ellos), pero no hay un protocolo sincrónico disponible, los mensajes se envían utilizando el \"Protocolo epidémico\".",
                "Dada la existencia de un \"protocolo epidémico\", el mecanismo de descubrimiento consiste en anunciar las colas a los huéspedes que actualmente no se pueden usar utilizando mecanismos análogos.",
                "El titular del tema luego reenvía el mensaje a todos los suscriptores, utilizando el protocolo sincrónico si es posible, el \"protocolo epidémico\" de lo contrario.",
                "Con respecto a las suscripciones duraderas, si un suscriptor se desconecta, las notificaciones no se almacenan, pero se envían utilizando el \"protocolo epidémico\" en lugar del protocolo sincrónico.",
                "Por otro lado, si un suscriptor no duradero se desconecta, su suscripción se elimina;En otras palabras, durante las desconexiones, las notificaciones no se envían utilizando el \"protocolo epidémico\", sino que solo explotan el protocolo sincrónico.",
                "Sin embargo, vale la pena señalar que no es posible asegurarse de una confiabilidad de una vez y solo de manera que los mensajes persistentes como se define en la especificación, ya que, como discutimos en la subsección anterior, el \"protocolo epidémico\" subyacente puede garantizar la mejor-Entrega de efortes.",
                "Para implementar diferentes niveles de confiabilidad, Emma trata los mensajes persistentes y no persistentes de manera diferente, durante la ejecución del \"protocolo epidémico\" anti-entropía.",
                "Las listas se intercambian durante los primeros pasos del \"protocolo epidémico\" antientrópico con cierta frecuencia predefinida.",
                "Este problema surge debido a la falta de inteligencia en el \"protocolo epidémico\", y puede abordarse seleccionando nodos portadores para mensajes con mayor cuidado."
            ],
            "translated_text": "",
            "candidates": [
                "protocolo epidémico",
                "Protocolo epidémico",
                "protocolo epidémico",
                "protocolo epidémico",
                "protocolo epidémico",
                "protocolo epidémico",
                "protocolo epidémico",
                "protocolo epidémico",
                "protocolo epidémico",
                "protocolo epidémico",
                "protocolo epidémico",
                "protocolo epidémico",
                "protocolo epidémico",
                "protocolo epidémico",
                "protocolo epidémico",
                "protocolo epidémico",
                "protocolo epidémico",
                "protocolo epidémico"
            ],
            "error": []
        },
        "cross-layering": {
            "translated_key": "capas cruzadas",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Adapting Asynchronous Messaging Middleware to ad-hoc Networking Mirco Musolesi Dept.",
                "of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware.",
                "In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed.",
                "Instead, asynchronous communication seems to be a generally more suitable paradigm for such environments.",
                "Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems.",
                "In this paper, we present our experience in designing, implementing and evaluating EMMA (Epidemic Messaging Middleware for ad-hoc networks), an adaptation of Java Message Service (JMS) for mobile ad-hoc environments.",
                "We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1.",
                "INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment.",
                "Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces.",
                "Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity.",
                "Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised.",
                "In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved.",
                "In this paper, we examine one of the foundational aspects of middleware for mobile ad-hoc environments: that of the communication primitives.",
                "Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments.",
                "In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication.",
                "In recent years, there has been growing interest in platforms based on asynchronous communication paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity.",
                "From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability)....",
                "Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for mobile ad-hoc environments must therefore support semi-synchronous or completely asynchronous communication primitives if it is to avoid substantial limitations to its utility.",
                "Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe.",
                "Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9].",
                "There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware).",
                "These models differ quite considerably from the existing traditional middleware in terms of primitives provided.",
                "Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios.",
                "If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it.",
                "The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment.",
                "This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices.",
                "Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4].",
                "With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18].",
                "No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted.",
                "In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks.",
                "In our case, we elected to examine JMS, as one of the most widely known MOM systems.",
                "In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2.",
                "MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) Message-oriented middleware systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server.",
                "A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism.",
                "Message-oriented middleware thus supports asynchronous communication in a very natural way, achieving de-coupling of senders and receivers.",
                "A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time.",
                "However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored.",
                "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful message-oriented middleware for traditional distributed systems.",
                "The Java Messaging Service (JMS) is a collection of interfaces for asynchronous communication between distributed components.",
                "It provides a common way for Java programs to create, send and receive messages.",
                "JMS users are usually referred to as clients.",
                "The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system.",
                "Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages.",
                "There are two types of communication supported: point to point and publish-subscribe models.",
                "In the point to point model, hosts send messages to queues.",
                "Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them.",
                "The publish-subscribe model is based on the use of topics that can be subscribed to by clients.",
                "Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients.",
                "Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14].",
                "Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up.",
                "In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3.",
                "JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure.",
                "Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief.",
                "In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet).",
                "Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently.",
                "The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network.",
                "In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence.",
                "The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network.",
                "However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network.",
                "If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration.",
                "Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable.",
                "As discussed in Section 2, a JMS administrator defines queues and topics on the provider.",
                "Clients can then learn about them using the Java Naming and Directory Interface (JNDI).",
                "However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is).",
                "In mobile ad-hoc environments, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks.",
                "Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate.",
                "This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed.",
                "Persistence is, however, essential functionality in asynchronous communication environments as hosts are, by definition, connected at different times.",
                "In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4.",
                "JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure.",
                "Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios.",
                "As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging.",
                "Point to Point Model The point to point model is based on the concept of queues, that are used to enable asynchronous communication between the producer of a message and possible different consumers.",
                "In our solution, the location of queues is determined by a negotiation process that is application dependent.",
                "For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue.",
                "In this case, the optimum location of the queue may well be on this particular host.",
                "In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue.",
                "Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided.",
                "It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time.",
                "The hosts that receive advertisement messages add entries to their JNDI registry.",
                "Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]).",
                "A lease represents the time of validity of a particular entry.",
                "If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry.",
                "In other words, the host assumes that the queue will be unreachable from that point in time.",
                "This may be caused, for example, if a host storing the queue becomes unreachable.",
                "A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner.",
                "In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2.",
                "If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the epidemic protocol.",
                "In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5).",
                "Given the existence of an epidemic protocol, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms.",
                "Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before.",
                "Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic.",
                "When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue).",
                "The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the epidemic protocol otherwise.",
                "It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients.",
                "When a message is delivered to one of the subscribers, this recipient is deleted from the list.",
                "In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message.",
                "We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings.",
                "In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures.",
                "In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages.",
                "When the durable subscriber reconnects, the server sends it all unexpired messages.",
                "The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry.",
                "However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception.",
                "In other words, we cannot consider disconnections as failures.",
                "For these reasons, we adopt a slightly different semantics.",
                "With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the epidemic protocol rather than the synchronous protocol.",
                "In other words, durable notifications remain valid during the possible disconnections of the subscriber.",
                "On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the epidemic protocol but exploit only the synchronous protocol.",
                "If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications.",
                "Unsubscription messages are delivered in the same way as are subscription messages.",
                "It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures.",
                "This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network.",
                "The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13].",
                "The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16].",
                "A message that needs to be sent is replicated on each host in reach.",
                "In this way, copies of the messages are quickly spread through connected networks, like an infection.",
                "If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts.",
                "Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2].",
                "Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts.",
                "To improve the performance, a hash-table indexes the content of the buffer.",
                "When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores.",
                "The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have.",
                "The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host.",
                "Should buffer overflow occur, messages are dropped.",
                "The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient.",
                "Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5].",
                "According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery.",
                "The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe).",
                "A JMS message can be persistent or non-persistent.",
                "According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones.",
                "However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying epidemic protocol can guarantee only best-effort delivery.",
                "However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates.",
                "In other words, we provide the applications with at-mostonce reliability for both types of messages.",
                "In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy epidemic protocol.",
                "Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space.",
                "If this is insufficient and non-persistent messages are present in the buffer, these are replaced.",
                "Only the successful deliveries of the persistent messages are notified to the senders.",
                "According to the JMS specification, it is possible to assign a priority to each message.",
                "The messages with higher priorities are delivered in a preferential way.",
                "As discussed above, persistent messages are prioritised above the non-persistent ones.",
                "Further selection is based on their priorities.",
                "Messages with higher priorities are treated in a preferential way.",
                "In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages).",
                "Messages are deleted from the buffers using the expiration time value that can be set by senders.",
                "This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings.",
                "However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms.",
                "EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers).",
                "This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not.",
                "We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network.",
                "Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts.",
                "The lists are exchanged during the first steps of the anti-entropic epidemic protocol with a certain predefined frequency.",
                "In the case of messages with multiple recipients, a list of the actual recipients is also stored.",
                "When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients.",
                "If the resulting length of the list of recipients is zero, the message is deleted from the buffer.",
                "These lists have, clearly, finite dimensions and are implemented as circular queues.",
                "This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time.",
                "In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed.",
                "However this is not yet part of the current architecture of EMMA. 5.",
                "IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile.",
                "The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market.",
                "We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface.",
                "We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally.",
                "More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities.",
                "The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good.",
                "In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay.",
                "Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network.",
                "One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer middleware for mobile computing due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings.",
                "What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages.",
                "This problem arises because of the lack of intelligence in the epidemic protocol, and can be addressed by selecting carrier nodes for messages with greater care.",
                "The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6.",
                "CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable.",
                "Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems.",
                "As an example, consider the recent <br>cross-layering</br> trend in ad-hoc networking [1].",
                "This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains.",
                "We believe that it is possible to view our approach as an instance of <br>cross-layering</br>.",
                "In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation).",
                "For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery.",
                "Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms.",
                "Again, as a result of adopting a <br>cross-layering</br> methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour.",
                "We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system).",
                "A number of middleware systems have been developed to support ad-hoc networking with the use of asynchronous communication (such as LIME, XMIDDLE, STEAM [11]).",
                "In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering.",
                "A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2.",
                "The Swiss company Softwired has developed the first JMS middleware for mobile computing, called iBus Mobile [10].",
                "The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library.",
                "The gateway is used for the communication between the application server and mobile hosts.",
                "The gateway is seen by the JMS provider as a normal JMS client.",
                "The JMS provider can be any JMS-enabled application server, such as BEA Weblogic.",
                "Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments.",
                "The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers.",
                "Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS.",
                "The aim of this configuration is to adapt JMS to a decentralized model.",
                "The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol.",
                "Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol.",
                "Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages.",
                "Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8].",
                "The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18].",
                "This work is again a JMS adaptation; the focus of that implementation is on group communication and the use of application level routing algorithms for topic delivery of messages.",
                "However, there are a number of differences in the focus of our work.",
                "The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks.",
                "The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure.",
                "This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7.",
                "ROADMAP AND CONCLUSIONS Asynchronous communication is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels).",
                "In this paper we have described the state of the art in terms of MOM for mobile systems.",
                "We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks.",
                "We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings.",
                "However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce.",
                "A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability.",
                "We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13].",
                "One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8.",
                "REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano.",
                "<br>cross-layering</br> in Mobile ad-hoc Network Design.",
                "IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.",
                "Epidemic Algorithms for Replicated Database Maintenance.",
                "In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey.",
                "Providing connectivity to the Saami nomadic community.",
                "In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill.",
                "Supporting CORBA applications in a Mobile Environment.",
                "In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47.",
                "ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout.",
                "Java Message Service Specification Version 1.1.",
                "Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart.",
                "WebSphere MQ: Connecting your applications without complex programming.",
                "IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini.",
                "Marrying Middleware and Mobile Computing.",
                "Gartner Group Research Report, September 2001. [8] IBM.",
                "WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU.",
                "Connecting remote communities.",
                "Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis.",
                "Introducing Wireless JMS.",
                "Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich.",
                "Middleware for Mobile Computing.",
                "In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58.",
                "Springer Verlag, 2002. [12] Microsoft.",
                "Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo.",
                "Adaptive routing for intermittently connected mobile ad-hoc networks.",
                "Technical report, UCL-CS Research Note, July 2004.",
                "Submitted for Publication. [14] Sun Microsystems.",
                "Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems.",
                "Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker.",
                "Epidemic routing for Partially Connected ad-hoc Networks.",
                "Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas.",
                "The OMNeT++ discrete event simulation system.",
                "In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan.",
                "JMS on Mobile ad-hoc Networks.",
                "In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon.",
                "Pronto: Mobilegateway with publish-subscribe paradigm over wireless network.",
                "Technical Report 559, University of Cambridge, Computer Laboratory, February 2003.",
                "Middleware for Pervasive and ad-hoc Computing 126"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Como ejemplo, considere la tendencia reciente de \"puesta cruzada\" en las redes ad-hoc [1].",
                "Creemos que es posible ver nuestro enfoque como una instancia de \"capas cruzadas\".",
                "Una vez más, como resultado de la adopción de una metodología de \"captura cruzada\", podemos crear sistemas que recopilen información del sistema operativo y los componentes de comunicación subyacentes para permitir la adaptación del comportamiento.",
                "\"Layering\" en el diseño de red ad-hoc móvil."
            ],
            "translated_text": "",
            "candidates": [
                "enlaza cruzada",
                "puesta cruzada",
                "enlaza cruzada",
                "capas cruzadas",
                "enlaza cruzada",
                "captura cruzada",
                "enlaza cruzada",
                "Layering"
            ],
            "error": []
        },
        "application level routing": {
            "translated_key": "enrutamiento de nivel de aplicación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Adapting Asynchronous Messaging Middleware to ad-hoc Networking Mirco Musolesi Dept.",
                "of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware.",
                "In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed.",
                "Instead, asynchronous communication seems to be a generally more suitable paradigm for such environments.",
                "Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems.",
                "In this paper, we present our experience in designing, implementing and evaluating EMMA (Epidemic Messaging Middleware for ad-hoc networks), an adaptation of Java Message Service (JMS) for mobile ad-hoc environments.",
                "We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1.",
                "INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment.",
                "Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces.",
                "Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity.",
                "Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised.",
                "In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved.",
                "In this paper, we examine one of the foundational aspects of middleware for mobile ad-hoc environments: that of the communication primitives.",
                "Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments.",
                "In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication.",
                "In recent years, there has been growing interest in platforms based on asynchronous communication paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity.",
                "From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability)....",
                "Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for mobile ad-hoc environments must therefore support semi-synchronous or completely asynchronous communication primitives if it is to avoid substantial limitations to its utility.",
                "Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe.",
                "Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9].",
                "There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware).",
                "These models differ quite considerably from the existing traditional middleware in terms of primitives provided.",
                "Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios.",
                "If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it.",
                "The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment.",
                "This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices.",
                "Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4].",
                "With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18].",
                "No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted.",
                "In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks.",
                "In our case, we elected to examine JMS, as one of the most widely known MOM systems.",
                "In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2.",
                "MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) Message-oriented middleware systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server.",
                "A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism.",
                "Message-oriented middleware thus supports asynchronous communication in a very natural way, achieving de-coupling of senders and receivers.",
                "A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time.",
                "However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored.",
                "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful message-oriented middleware for traditional distributed systems.",
                "The Java Messaging Service (JMS) is a collection of interfaces for asynchronous communication between distributed components.",
                "It provides a common way for Java programs to create, send and receive messages.",
                "JMS users are usually referred to as clients.",
                "The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system.",
                "Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages.",
                "There are two types of communication supported: point to point and publish-subscribe models.",
                "In the point to point model, hosts send messages to queues.",
                "Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them.",
                "The publish-subscribe model is based on the use of topics that can be subscribed to by clients.",
                "Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients.",
                "Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14].",
                "Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up.",
                "In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3.",
                "JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure.",
                "Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief.",
                "In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet).",
                "Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently.",
                "The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network.",
                "In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence.",
                "The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network.",
                "However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network.",
                "If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration.",
                "Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable.",
                "As discussed in Section 2, a JMS administrator defines queues and topics on the provider.",
                "Clients can then learn about them using the Java Naming and Directory Interface (JNDI).",
                "However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is).",
                "In mobile ad-hoc environments, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks.",
                "Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate.",
                "This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed.",
                "Persistence is, however, essential functionality in asynchronous communication environments as hosts are, by definition, connected at different times.",
                "In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4.",
                "JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure.",
                "Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios.",
                "As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging.",
                "Point to Point Model The point to point model is based on the concept of queues, that are used to enable asynchronous communication between the producer of a message and possible different consumers.",
                "In our solution, the location of queues is determined by a negotiation process that is application dependent.",
                "For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue.",
                "In this case, the optimum location of the queue may well be on this particular host.",
                "In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue.",
                "Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided.",
                "It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time.",
                "The hosts that receive advertisement messages add entries to their JNDI registry.",
                "Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]).",
                "A lease represents the time of validity of a particular entry.",
                "If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry.",
                "In other words, the host assumes that the queue will be unreachable from that point in time.",
                "This may be caused, for example, if a host storing the queue becomes unreachable.",
                "A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner.",
                "In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2.",
                "If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the epidemic protocol.",
                "In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5).",
                "Given the existence of an epidemic protocol, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms.",
                "Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before.",
                "Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic.",
                "When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue).",
                "The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the epidemic protocol otherwise.",
                "It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients.",
                "When a message is delivered to one of the subscribers, this recipient is deleted from the list.",
                "In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message.",
                "We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings.",
                "In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures.",
                "In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages.",
                "When the durable subscriber reconnects, the server sends it all unexpired messages.",
                "The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry.",
                "However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception.",
                "In other words, we cannot consider disconnections as failures.",
                "For these reasons, we adopt a slightly different semantics.",
                "With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the epidemic protocol rather than the synchronous protocol.",
                "In other words, durable notifications remain valid during the possible disconnections of the subscriber.",
                "On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the epidemic protocol but exploit only the synchronous protocol.",
                "If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications.",
                "Unsubscription messages are delivered in the same way as are subscription messages.",
                "It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures.",
                "This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network.",
                "The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13].",
                "The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16].",
                "A message that needs to be sent is replicated on each host in reach.",
                "In this way, copies of the messages are quickly spread through connected networks, like an infection.",
                "If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts.",
                "Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2].",
                "Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts.",
                "To improve the performance, a hash-table indexes the content of the buffer.",
                "When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores.",
                "The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have.",
                "The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host.",
                "Should buffer overflow occur, messages are dropped.",
                "The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient.",
                "Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5].",
                "According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery.",
                "The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe).",
                "A JMS message can be persistent or non-persistent.",
                "According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones.",
                "However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying epidemic protocol can guarantee only best-effort delivery.",
                "However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates.",
                "In other words, we provide the applications with at-mostonce reliability for both types of messages.",
                "In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy epidemic protocol.",
                "Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space.",
                "If this is insufficient and non-persistent messages are present in the buffer, these are replaced.",
                "Only the successful deliveries of the persistent messages are notified to the senders.",
                "According to the JMS specification, it is possible to assign a priority to each message.",
                "The messages with higher priorities are delivered in a preferential way.",
                "As discussed above, persistent messages are prioritised above the non-persistent ones.",
                "Further selection is based on their priorities.",
                "Messages with higher priorities are treated in a preferential way.",
                "In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages).",
                "Messages are deleted from the buffers using the expiration time value that can be set by senders.",
                "This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings.",
                "However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms.",
                "EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers).",
                "This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not.",
                "We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network.",
                "Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts.",
                "The lists are exchanged during the first steps of the anti-entropic epidemic protocol with a certain predefined frequency.",
                "In the case of messages with multiple recipients, a list of the actual recipients is also stored.",
                "When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients.",
                "If the resulting length of the list of recipients is zero, the message is deleted from the buffer.",
                "These lists have, clearly, finite dimensions and are implemented as circular queues.",
                "This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time.",
                "In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed.",
                "However this is not yet part of the current architecture of EMMA. 5.",
                "IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile.",
                "The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market.",
                "We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface.",
                "We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally.",
                "More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities.",
                "The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good.",
                "In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay.",
                "Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network.",
                "One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer middleware for mobile computing due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings.",
                "What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages.",
                "This problem arises because of the lack of intelligence in the epidemic protocol, and can be addressed by selecting carrier nodes for messages with greater care.",
                "The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6.",
                "CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable.",
                "Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems.",
                "As an example, consider the recent cross-layering trend in ad-hoc networking [1].",
                "This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains.",
                "We believe that it is possible to view our approach as an instance of cross-layering.",
                "In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation).",
                "For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery.",
                "Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms.",
                "Again, as a result of adopting a cross-layering methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour.",
                "We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system).",
                "A number of middleware systems have been developed to support ad-hoc networking with the use of asynchronous communication (such as LIME, XMIDDLE, STEAM [11]).",
                "In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering.",
                "A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2.",
                "The Swiss company Softwired has developed the first JMS middleware for mobile computing, called iBus Mobile [10].",
                "The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library.",
                "The gateway is used for the communication between the application server and mobile hosts.",
                "The gateway is seen by the JMS provider as a normal JMS client.",
                "The JMS provider can be any JMS-enabled application server, such as BEA Weblogic.",
                "Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments.",
                "The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers.",
                "Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS.",
                "The aim of this configuration is to adapt JMS to a decentralized model.",
                "The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol.",
                "Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol.",
                "Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages.",
                "Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8].",
                "The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18].",
                "This work is again a JMS adaptation; the focus of that implementation is on group communication and the use of <br>application level routing</br> algorithms for topic delivery of messages.",
                "However, there are a number of differences in the focus of our work.",
                "The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks.",
                "The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure.",
                "This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7.",
                "ROADMAP AND CONCLUSIONS Asynchronous communication is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels).",
                "In this paper we have described the state of the art in terms of MOM for mobile systems.",
                "We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks.",
                "We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings.",
                "However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce.",
                "A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability.",
                "We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13].",
                "One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8.",
                "REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano.",
                "Cross-layering in Mobile ad-hoc Network Design.",
                "IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.",
                "Epidemic Algorithms for Replicated Database Maintenance.",
                "In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey.",
                "Providing connectivity to the Saami nomadic community.",
                "In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill.",
                "Supporting CORBA applications in a Mobile Environment.",
                "In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47.",
                "ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout.",
                "Java Message Service Specification Version 1.1.",
                "Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart.",
                "WebSphere MQ: Connecting your applications without complex programming.",
                "IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini.",
                "Marrying Middleware and Mobile Computing.",
                "Gartner Group Research Report, September 2001. [8] IBM.",
                "WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU.",
                "Connecting remote communities.",
                "Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis.",
                "Introducing Wireless JMS.",
                "Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich.",
                "Middleware for Mobile Computing.",
                "In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58.",
                "Springer Verlag, 2002. [12] Microsoft.",
                "Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo.",
                "Adaptive routing for intermittently connected mobile ad-hoc networks.",
                "Technical report, UCL-CS Research Note, July 2004.",
                "Submitted for Publication. [14] Sun Microsystems.",
                "Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems.",
                "Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker.",
                "Epidemic routing for Partially Connected ad-hoc Networks.",
                "Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas.",
                "The OMNeT++ discrete event simulation system.",
                "In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan.",
                "JMS on Mobile ad-hoc Networks.",
                "In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon.",
                "Pronto: Mobilegateway with publish-subscribe paradigm over wireless network.",
                "Technical Report 559, University of Cambridge, Computer Laboratory, February 2003.",
                "Middleware for Pervasive and ad-hoc Computing 126"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Este trabajo es nuevamente una adaptación de JMS;El enfoque de esa implementación está en la comunicación grupal y el uso de algoritmos de \"enrutamiento de nivel de aplicación\" para la entrega de mensajes de temas."
            ],
            "translated_text": "",
            "candidates": [
                "enrutamiento de nivel de aplicación",
                "enrutamiento de nivel de aplicación"
            ],
            "error": []
        },
        "group communication": {
            "translated_key": "comunicación grupal",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Adapting Asynchronous Messaging Middleware to ad-hoc Networking Mirco Musolesi Dept.",
                "of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware.",
                "In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed.",
                "Instead, asynchronous communication seems to be a generally more suitable paradigm for such environments.",
                "Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems.",
                "In this paper, we present our experience in designing, implementing and evaluating EMMA (Epidemic Messaging Middleware for ad-hoc networks), an adaptation of Java Message Service (JMS) for mobile ad-hoc environments.",
                "We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1.",
                "INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment.",
                "Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces.",
                "Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity.",
                "Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised.",
                "In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved.",
                "In this paper, we examine one of the foundational aspects of middleware for mobile ad-hoc environments: that of the communication primitives.",
                "Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments.",
                "In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication.",
                "In recent years, there has been growing interest in platforms based on asynchronous communication paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity.",
                "From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability)....",
                "Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for mobile ad-hoc environments must therefore support semi-synchronous or completely asynchronous communication primitives if it is to avoid substantial limitations to its utility.",
                "Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe.",
                "Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9].",
                "There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware).",
                "These models differ quite considerably from the existing traditional middleware in terms of primitives provided.",
                "Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios.",
                "If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it.",
                "The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment.",
                "This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices.",
                "Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4].",
                "With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18].",
                "No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted.",
                "In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks.",
                "In our case, we elected to examine JMS, as one of the most widely known MOM systems.",
                "In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2.",
                "MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) Message-oriented middleware systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server.",
                "A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism.",
                "Message-oriented middleware thus supports asynchronous communication in a very natural way, achieving de-coupling of senders and receivers.",
                "A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time.",
                "However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored.",
                "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful message-oriented middleware for traditional distributed systems.",
                "The Java Messaging Service (JMS) is a collection of interfaces for asynchronous communication between distributed components.",
                "It provides a common way for Java programs to create, send and receive messages.",
                "JMS users are usually referred to as clients.",
                "The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system.",
                "Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages.",
                "There are two types of communication supported: point to point and publish-subscribe models.",
                "In the point to point model, hosts send messages to queues.",
                "Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them.",
                "The publish-subscribe model is based on the use of topics that can be subscribed to by clients.",
                "Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients.",
                "Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14].",
                "Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up.",
                "In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3.",
                "JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure.",
                "Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief.",
                "In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet).",
                "Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently.",
                "The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network.",
                "In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence.",
                "The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network.",
                "However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network.",
                "If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration.",
                "Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable.",
                "As discussed in Section 2, a JMS administrator defines queues and topics on the provider.",
                "Clients can then learn about them using the Java Naming and Directory Interface (JNDI).",
                "However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is).",
                "In mobile ad-hoc environments, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks.",
                "Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate.",
                "This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed.",
                "Persistence is, however, essential functionality in asynchronous communication environments as hosts are, by definition, connected at different times.",
                "In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4.",
                "JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure.",
                "Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios.",
                "As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging.",
                "Point to Point Model The point to point model is based on the concept of queues, that are used to enable asynchronous communication between the producer of a message and possible different consumers.",
                "In our solution, the location of queues is determined by a negotiation process that is application dependent.",
                "For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue.",
                "In this case, the optimum location of the queue may well be on this particular host.",
                "In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue.",
                "Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided.",
                "It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time.",
                "The hosts that receive advertisement messages add entries to their JNDI registry.",
                "Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]).",
                "A lease represents the time of validity of a particular entry.",
                "If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry.",
                "In other words, the host assumes that the queue will be unreachable from that point in time.",
                "This may be caused, for example, if a host storing the queue becomes unreachable.",
                "A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner.",
                "In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2.",
                "If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the epidemic protocol.",
                "In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5).",
                "Given the existence of an epidemic protocol, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms.",
                "Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before.",
                "Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic.",
                "When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue).",
                "The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the epidemic protocol otherwise.",
                "It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients.",
                "When a message is delivered to one of the subscribers, this recipient is deleted from the list.",
                "In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message.",
                "We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings.",
                "In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures.",
                "In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages.",
                "When the durable subscriber reconnects, the server sends it all unexpired messages.",
                "The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry.",
                "However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception.",
                "In other words, we cannot consider disconnections as failures.",
                "For these reasons, we adopt a slightly different semantics.",
                "With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the epidemic protocol rather than the synchronous protocol.",
                "In other words, durable notifications remain valid during the possible disconnections of the subscriber.",
                "On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the epidemic protocol but exploit only the synchronous protocol.",
                "If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications.",
                "Unsubscription messages are delivered in the same way as are subscription messages.",
                "It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures.",
                "This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network.",
                "The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13].",
                "The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16].",
                "A message that needs to be sent is replicated on each host in reach.",
                "In this way, copies of the messages are quickly spread through connected networks, like an infection.",
                "If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts.",
                "Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2].",
                "Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts.",
                "To improve the performance, a hash-table indexes the content of the buffer.",
                "When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores.",
                "The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have.",
                "The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host.",
                "Should buffer overflow occur, messages are dropped.",
                "The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient.",
                "Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5].",
                "According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery.",
                "The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe).",
                "A JMS message can be persistent or non-persistent.",
                "According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones.",
                "However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying epidemic protocol can guarantee only best-effort delivery.",
                "However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates.",
                "In other words, we provide the applications with at-mostonce reliability for both types of messages.",
                "In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy epidemic protocol.",
                "Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space.",
                "If this is insufficient and non-persistent messages are present in the buffer, these are replaced.",
                "Only the successful deliveries of the persistent messages are notified to the senders.",
                "According to the JMS specification, it is possible to assign a priority to each message.",
                "The messages with higher priorities are delivered in a preferential way.",
                "As discussed above, persistent messages are prioritised above the non-persistent ones.",
                "Further selection is based on their priorities.",
                "Messages with higher priorities are treated in a preferential way.",
                "In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages).",
                "Messages are deleted from the buffers using the expiration time value that can be set by senders.",
                "This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings.",
                "However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms.",
                "EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers).",
                "This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not.",
                "We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network.",
                "Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts.",
                "The lists are exchanged during the first steps of the anti-entropic epidemic protocol with a certain predefined frequency.",
                "In the case of messages with multiple recipients, a list of the actual recipients is also stored.",
                "When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients.",
                "If the resulting length of the list of recipients is zero, the message is deleted from the buffer.",
                "These lists have, clearly, finite dimensions and are implemented as circular queues.",
                "This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time.",
                "In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed.",
                "However this is not yet part of the current architecture of EMMA. 5.",
                "IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile.",
                "The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market.",
                "We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface.",
                "We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally.",
                "More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities.",
                "The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good.",
                "In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay.",
                "Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network.",
                "One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer middleware for mobile computing due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings.",
                "What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages.",
                "This problem arises because of the lack of intelligence in the epidemic protocol, and can be addressed by selecting carrier nodes for messages with greater care.",
                "The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6.",
                "CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable.",
                "Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems.",
                "As an example, consider the recent cross-layering trend in ad-hoc networking [1].",
                "This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains.",
                "We believe that it is possible to view our approach as an instance of cross-layering.",
                "In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation).",
                "For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery.",
                "Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms.",
                "Again, as a result of adopting a cross-layering methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour.",
                "We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system).",
                "A number of middleware systems have been developed to support ad-hoc networking with the use of asynchronous communication (such as LIME, XMIDDLE, STEAM [11]).",
                "In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering.",
                "A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2.",
                "The Swiss company Softwired has developed the first JMS middleware for mobile computing, called iBus Mobile [10].",
                "The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library.",
                "The gateway is used for the communication between the application server and mobile hosts.",
                "The gateway is seen by the JMS provider as a normal JMS client.",
                "The JMS provider can be any JMS-enabled application server, such as BEA Weblogic.",
                "Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments.",
                "The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers.",
                "Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS.",
                "The aim of this configuration is to adapt JMS to a decentralized model.",
                "The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol.",
                "Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol.",
                "Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages.",
                "Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8].",
                "The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18].",
                "This work is again a JMS adaptation; the focus of that implementation is on <br>group communication</br> and the use of application level routing algorithms for topic delivery of messages.",
                "However, there are a number of differences in the focus of our work.",
                "The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks.",
                "The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure.",
                "This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7.",
                "ROADMAP AND CONCLUSIONS Asynchronous communication is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels).",
                "In this paper we have described the state of the art in terms of MOM for mobile systems.",
                "We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks.",
                "We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings.",
                "However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce.",
                "A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability.",
                "We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13].",
                "One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8.",
                "REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano.",
                "Cross-layering in Mobile ad-hoc Network Design.",
                "IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.",
                "Epidemic Algorithms for Replicated Database Maintenance.",
                "In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey.",
                "Providing connectivity to the Saami nomadic community.",
                "In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill.",
                "Supporting CORBA applications in a Mobile Environment.",
                "In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47.",
                "ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout.",
                "Java Message Service Specification Version 1.1.",
                "Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart.",
                "WebSphere MQ: Connecting your applications without complex programming.",
                "IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini.",
                "Marrying Middleware and Mobile Computing.",
                "Gartner Group Research Report, September 2001. [8] IBM.",
                "WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU.",
                "Connecting remote communities.",
                "Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis.",
                "Introducing Wireless JMS.",
                "Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich.",
                "Middleware for Mobile Computing.",
                "In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58.",
                "Springer Verlag, 2002. [12] Microsoft.",
                "Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo.",
                "Adaptive routing for intermittently connected mobile ad-hoc networks.",
                "Technical report, UCL-CS Research Note, July 2004.",
                "Submitted for Publication. [14] Sun Microsystems.",
                "Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems.",
                "Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker.",
                "Epidemic routing for Partially Connected ad-hoc Networks.",
                "Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas.",
                "The OMNeT++ discrete event simulation system.",
                "In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan.",
                "JMS on Mobile ad-hoc Networks.",
                "In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon.",
                "Pronto: Mobilegateway with publish-subscribe paradigm over wireless network.",
                "Technical Report 559, University of Cambridge, Computer Laboratory, February 2003.",
                "Middleware for Pervasive and ad-hoc Computing 126"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Este trabajo es nuevamente una adaptación de JMS;El enfoque de esa implementación está en la \"comunicación grupal\" y el uso de algoritmos de enrutamiento de nivel de aplicación para la entrega de mensajes de temas."
            ],
            "translated_text": "",
            "candidates": [
                "comunicación grupal",
                "comunicación grupal"
            ],
            "error": []
        },
        "message orient middleware": {
            "translated_key": "Middleware de orientación de mensajes",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Adapting Asynchronous Messaging Middleware to ad-hoc Networking Mirco Musolesi Dept.",
                "of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware.",
                "In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed.",
                "Instead, asynchronous communication seems to be a generally more suitable paradigm for such environments.",
                "Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems.",
                "In this paper, we present our experience in designing, implementing and evaluating EMMA (Epidemic Messaging Middleware for ad-hoc networks), an adaptation of Java Message Service (JMS) for mobile ad-hoc environments.",
                "We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1.",
                "INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment.",
                "Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces.",
                "Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity.",
                "Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised.",
                "In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved.",
                "In this paper, we examine one of the foundational aspects of middleware for mobile ad-hoc environments: that of the communication primitives.",
                "Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments.",
                "In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication.",
                "In recent years, there has been growing interest in platforms based on asynchronous communication paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity.",
                "From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability)....",
                "Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for mobile ad-hoc environments must therefore support semi-synchronous or completely asynchronous communication primitives if it is to avoid substantial limitations to its utility.",
                "Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe.",
                "Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9].",
                "There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware).",
                "These models differ quite considerably from the existing traditional middleware in terms of primitives provided.",
                "Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios.",
                "If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it.",
                "The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment.",
                "This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices.",
                "Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4].",
                "With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18].",
                "No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted.",
                "In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks.",
                "In our case, we elected to examine JMS, as one of the most widely known MOM systems.",
                "In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2.",
                "MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) Message-oriented middleware systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server.",
                "A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism.",
                "Message-oriented middleware thus supports asynchronous communication in a very natural way, achieving de-coupling of senders and receivers.",
                "A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time.",
                "However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored.",
                "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful message-oriented middleware for traditional distributed systems.",
                "The Java Messaging Service (JMS) is a collection of interfaces for asynchronous communication between distributed components.",
                "It provides a common way for Java programs to create, send and receive messages.",
                "JMS users are usually referred to as clients.",
                "The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system.",
                "Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages.",
                "There are two types of communication supported: point to point and publish-subscribe models.",
                "In the point to point model, hosts send messages to queues.",
                "Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them.",
                "The publish-subscribe model is based on the use of topics that can be subscribed to by clients.",
                "Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients.",
                "Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14].",
                "Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up.",
                "In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3.",
                "JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure.",
                "Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief.",
                "In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet).",
                "Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently.",
                "The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network.",
                "In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence.",
                "The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network.",
                "However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network.",
                "If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration.",
                "Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable.",
                "As discussed in Section 2, a JMS administrator defines queues and topics on the provider.",
                "Clients can then learn about them using the Java Naming and Directory Interface (JNDI).",
                "However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is).",
                "In mobile ad-hoc environments, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks.",
                "Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate.",
                "This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed.",
                "Persistence is, however, essential functionality in asynchronous communication environments as hosts are, by definition, connected at different times.",
                "In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4.",
                "JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure.",
                "Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios.",
                "As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging.",
                "Point to Point Model The point to point model is based on the concept of queues, that are used to enable asynchronous communication between the producer of a message and possible different consumers.",
                "In our solution, the location of queues is determined by a negotiation process that is application dependent.",
                "For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue.",
                "In this case, the optimum location of the queue may well be on this particular host.",
                "In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue.",
                "Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided.",
                "It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time.",
                "The hosts that receive advertisement messages add entries to their JNDI registry.",
                "Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]).",
                "A lease represents the time of validity of a particular entry.",
                "If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry.",
                "In other words, the host assumes that the queue will be unreachable from that point in time.",
                "This may be caused, for example, if a host storing the queue becomes unreachable.",
                "A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner.",
                "In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2.",
                "If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the epidemic protocol.",
                "In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5).",
                "Given the existence of an epidemic protocol, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms.",
                "Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before.",
                "Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic.",
                "When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue).",
                "The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the epidemic protocol otherwise.",
                "It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients.",
                "When a message is delivered to one of the subscribers, this recipient is deleted from the list.",
                "In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message.",
                "We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings.",
                "In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures.",
                "In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages.",
                "When the durable subscriber reconnects, the server sends it all unexpired messages.",
                "The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry.",
                "However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception.",
                "In other words, we cannot consider disconnections as failures.",
                "For these reasons, we adopt a slightly different semantics.",
                "With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the epidemic protocol rather than the synchronous protocol.",
                "In other words, durable notifications remain valid during the possible disconnections of the subscriber.",
                "On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the epidemic protocol but exploit only the synchronous protocol.",
                "If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications.",
                "Unsubscription messages are delivered in the same way as are subscription messages.",
                "It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures.",
                "This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network.",
                "The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13].",
                "The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16].",
                "A message that needs to be sent is replicated on each host in reach.",
                "In this way, copies of the messages are quickly spread through connected networks, like an infection.",
                "If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts.",
                "Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2].",
                "Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts.",
                "To improve the performance, a hash-table indexes the content of the buffer.",
                "When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores.",
                "The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have.",
                "The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host.",
                "Should buffer overflow occur, messages are dropped.",
                "The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient.",
                "Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5].",
                "According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery.",
                "The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe).",
                "A JMS message can be persistent or non-persistent.",
                "According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones.",
                "However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying epidemic protocol can guarantee only best-effort delivery.",
                "However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates.",
                "In other words, we provide the applications with at-mostonce reliability for both types of messages.",
                "In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy epidemic protocol.",
                "Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space.",
                "If this is insufficient and non-persistent messages are present in the buffer, these are replaced.",
                "Only the successful deliveries of the persistent messages are notified to the senders.",
                "According to the JMS specification, it is possible to assign a priority to each message.",
                "The messages with higher priorities are delivered in a preferential way.",
                "As discussed above, persistent messages are prioritised above the non-persistent ones.",
                "Further selection is based on their priorities.",
                "Messages with higher priorities are treated in a preferential way.",
                "In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages).",
                "Messages are deleted from the buffers using the expiration time value that can be set by senders.",
                "This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings.",
                "However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms.",
                "EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers).",
                "This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not.",
                "We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network.",
                "Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts.",
                "The lists are exchanged during the first steps of the anti-entropic epidemic protocol with a certain predefined frequency.",
                "In the case of messages with multiple recipients, a list of the actual recipients is also stored.",
                "When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients.",
                "If the resulting length of the list of recipients is zero, the message is deleted from the buffer.",
                "These lists have, clearly, finite dimensions and are implemented as circular queues.",
                "This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time.",
                "In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed.",
                "However this is not yet part of the current architecture of EMMA. 5.",
                "IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile.",
                "The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market.",
                "We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface.",
                "We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally.",
                "More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities.",
                "The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good.",
                "In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay.",
                "Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network.",
                "One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer middleware for mobile computing due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings.",
                "What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages.",
                "This problem arises because of the lack of intelligence in the epidemic protocol, and can be addressed by selecting carrier nodes for messages with greater care.",
                "The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6.",
                "CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable.",
                "Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems.",
                "As an example, consider the recent cross-layering trend in ad-hoc networking [1].",
                "This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains.",
                "We believe that it is possible to view our approach as an instance of cross-layering.",
                "In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation).",
                "For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery.",
                "Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms.",
                "Again, as a result of adopting a cross-layering methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour.",
                "We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system).",
                "A number of middleware systems have been developed to support ad-hoc networking with the use of asynchronous communication (such as LIME, XMIDDLE, STEAM [11]).",
                "In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering.",
                "A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2.",
                "The Swiss company Softwired has developed the first JMS middleware for mobile computing, called iBus Mobile [10].",
                "The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library.",
                "The gateway is used for the communication between the application server and mobile hosts.",
                "The gateway is seen by the JMS provider as a normal JMS client.",
                "The JMS provider can be any JMS-enabled application server, such as BEA Weblogic.",
                "Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments.",
                "The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers.",
                "Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS.",
                "The aim of this configuration is to adapt JMS to a decentralized model.",
                "The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol.",
                "Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol.",
                "Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages.",
                "Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8].",
                "The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18].",
                "This work is again a JMS adaptation; the focus of that implementation is on group communication and the use of application level routing algorithms for topic delivery of messages.",
                "However, there are a number of differences in the focus of our work.",
                "The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks.",
                "The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure.",
                "This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7.",
                "ROADMAP AND CONCLUSIONS Asynchronous communication is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels).",
                "In this paper we have described the state of the art in terms of MOM for mobile systems.",
                "We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks.",
                "We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings.",
                "However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce.",
                "A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability.",
                "We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13].",
                "One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8.",
                "REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano.",
                "Cross-layering in Mobile ad-hoc Network Design.",
                "IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.",
                "Epidemic Algorithms for Replicated Database Maintenance.",
                "In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey.",
                "Providing connectivity to the Saami nomadic community.",
                "In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill.",
                "Supporting CORBA applications in a Mobile Environment.",
                "In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47.",
                "ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout.",
                "Java Message Service Specification Version 1.1.",
                "Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart.",
                "WebSphere MQ: Connecting your applications without complex programming.",
                "IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini.",
                "Marrying Middleware and Mobile Computing.",
                "Gartner Group Research Report, September 2001. [8] IBM.",
                "WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU.",
                "Connecting remote communities.",
                "Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis.",
                "Introducing Wireless JMS.",
                "Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich.",
                "Middleware for Mobile Computing.",
                "In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58.",
                "Springer Verlag, 2002. [12] Microsoft.",
                "Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo.",
                "Adaptive routing for intermittently connected mobile ad-hoc networks.",
                "Technical report, UCL-CS Research Note, July 2004.",
                "Submitted for Publication. [14] Sun Microsystems.",
                "Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems.",
                "Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker.",
                "Epidemic routing for Partially Connected ad-hoc Networks.",
                "Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas.",
                "The OMNeT++ discrete event simulation system.",
                "In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan.",
                "JMS on Mobile ad-hoc Networks.",
                "In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon.",
                "Pronto: Mobilegateway with publish-subscribe paradigm over wireless network.",
                "Technical Report 559, University of Cambridge, Computer Laboratory, February 2003.",
                "Middleware for Pervasive and ad-hoc Computing 126"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "middleware for mobile computing": {
            "translated_key": "middleware para computación móvil",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Adapting Asynchronous Messaging Middleware to ad-hoc Networking Mirco Musolesi Dept.",
                "of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware.",
                "In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed.",
                "Instead, asynchronous communication seems to be a generally more suitable paradigm for such environments.",
                "Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems.",
                "In this paper, we present our experience in designing, implementing and evaluating EMMA (Epidemic Messaging Middleware for ad-hoc networks), an adaptation of Java Message Service (JMS) for mobile ad-hoc environments.",
                "We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1.",
                "INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment.",
                "Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces.",
                "Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity.",
                "Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised.",
                "In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved.",
                "In this paper, we examine one of the foundational aspects of middleware for mobile ad-hoc environments: that of the communication primitives.",
                "Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments.",
                "In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication.",
                "In recent years, there has been growing interest in platforms based on asynchronous communication paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity.",
                "From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability)....",
                "Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for mobile ad-hoc environments must therefore support semi-synchronous or completely asynchronous communication primitives if it is to avoid substantial limitations to its utility.",
                "Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe.",
                "Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9].",
                "There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware).",
                "These models differ quite considerably from the existing traditional middleware in terms of primitives provided.",
                "Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios.",
                "If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it.",
                "The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment.",
                "This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices.",
                "Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4].",
                "With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18].",
                "No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted.",
                "In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks.",
                "In our case, we elected to examine JMS, as one of the most widely known MOM systems.",
                "In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2.",
                "MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) Message-oriented middleware systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server.",
                "A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism.",
                "Message-oriented middleware thus supports asynchronous communication in a very natural way, achieving de-coupling of senders and receivers.",
                "A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time.",
                "However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored.",
                "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful message-oriented middleware for traditional distributed systems.",
                "The Java Messaging Service (JMS) is a collection of interfaces for asynchronous communication between distributed components.",
                "It provides a common way for Java programs to create, send and receive messages.",
                "JMS users are usually referred to as clients.",
                "The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system.",
                "Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages.",
                "There are two types of communication supported: point to point and publish-subscribe models.",
                "In the point to point model, hosts send messages to queues.",
                "Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them.",
                "The publish-subscribe model is based on the use of topics that can be subscribed to by clients.",
                "Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients.",
                "Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14].",
                "Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up.",
                "In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3.",
                "JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure.",
                "Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief.",
                "In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet).",
                "Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently.",
                "The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network.",
                "In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence.",
                "The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network.",
                "However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network.",
                "If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration.",
                "Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable.",
                "As discussed in Section 2, a JMS administrator defines queues and topics on the provider.",
                "Clients can then learn about them using the Java Naming and Directory Interface (JNDI).",
                "However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is).",
                "In mobile ad-hoc environments, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks.",
                "Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate.",
                "This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed.",
                "Persistence is, however, essential functionality in asynchronous communication environments as hosts are, by definition, connected at different times.",
                "In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4.",
                "JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure.",
                "Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios.",
                "As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging.",
                "Point to Point Model The point to point model is based on the concept of queues, that are used to enable asynchronous communication between the producer of a message and possible different consumers.",
                "In our solution, the location of queues is determined by a negotiation process that is application dependent.",
                "For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue.",
                "In this case, the optimum location of the queue may well be on this particular host.",
                "In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue.",
                "Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided.",
                "It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time.",
                "The hosts that receive advertisement messages add entries to their JNDI registry.",
                "Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]).",
                "A lease represents the time of validity of a particular entry.",
                "If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry.",
                "In other words, the host assumes that the queue will be unreachable from that point in time.",
                "This may be caused, for example, if a host storing the queue becomes unreachable.",
                "A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner.",
                "In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2.",
                "If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the epidemic protocol.",
                "In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5).",
                "Given the existence of an epidemic protocol, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms.",
                "Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before.",
                "Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic.",
                "When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue).",
                "The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the epidemic protocol otherwise.",
                "It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients.",
                "When a message is delivered to one of the subscribers, this recipient is deleted from the list.",
                "In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message.",
                "We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings.",
                "In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures.",
                "In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages.",
                "When the durable subscriber reconnects, the server sends it all unexpired messages.",
                "The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry.",
                "However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception.",
                "In other words, we cannot consider disconnections as failures.",
                "For these reasons, we adopt a slightly different semantics.",
                "With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the epidemic protocol rather than the synchronous protocol.",
                "In other words, durable notifications remain valid during the possible disconnections of the subscriber.",
                "On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the epidemic protocol but exploit only the synchronous protocol.",
                "If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications.",
                "Unsubscription messages are delivered in the same way as are subscription messages.",
                "It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures.",
                "This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network.",
                "The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13].",
                "The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16].",
                "A message that needs to be sent is replicated on each host in reach.",
                "In this way, copies of the messages are quickly spread through connected networks, like an infection.",
                "If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts.",
                "Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2].",
                "Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts.",
                "To improve the performance, a hash-table indexes the content of the buffer.",
                "When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores.",
                "The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have.",
                "The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host.",
                "Should buffer overflow occur, messages are dropped.",
                "The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient.",
                "Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5].",
                "According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery.",
                "The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe).",
                "A JMS message can be persistent or non-persistent.",
                "According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones.",
                "However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying epidemic protocol can guarantee only best-effort delivery.",
                "However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates.",
                "In other words, we provide the applications with at-mostonce reliability for both types of messages.",
                "In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy epidemic protocol.",
                "Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space.",
                "If this is insufficient and non-persistent messages are present in the buffer, these are replaced.",
                "Only the successful deliveries of the persistent messages are notified to the senders.",
                "According to the JMS specification, it is possible to assign a priority to each message.",
                "The messages with higher priorities are delivered in a preferential way.",
                "As discussed above, persistent messages are prioritised above the non-persistent ones.",
                "Further selection is based on their priorities.",
                "Messages with higher priorities are treated in a preferential way.",
                "In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages).",
                "Messages are deleted from the buffers using the expiration time value that can be set by senders.",
                "This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings.",
                "However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms.",
                "EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers).",
                "This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not.",
                "We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network.",
                "Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts.",
                "The lists are exchanged during the first steps of the anti-entropic epidemic protocol with a certain predefined frequency.",
                "In the case of messages with multiple recipients, a list of the actual recipients is also stored.",
                "When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients.",
                "If the resulting length of the list of recipients is zero, the message is deleted from the buffer.",
                "These lists have, clearly, finite dimensions and are implemented as circular queues.",
                "This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time.",
                "In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed.",
                "However this is not yet part of the current architecture of EMMA. 5.",
                "IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile.",
                "The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market.",
                "We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface.",
                "We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally.",
                "More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities.",
                "The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good.",
                "In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay.",
                "Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network.",
                "One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer <br>middleware for mobile computing</br> due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings.",
                "What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages.",
                "This problem arises because of the lack of intelligence in the epidemic protocol, and can be addressed by selecting carrier nodes for messages with greater care.",
                "The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6.",
                "CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable.",
                "Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems.",
                "As an example, consider the recent cross-layering trend in ad-hoc networking [1].",
                "This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains.",
                "We believe that it is possible to view our approach as an instance of cross-layering.",
                "In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation).",
                "For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery.",
                "Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms.",
                "Again, as a result of adopting a cross-layering methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour.",
                "We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system).",
                "A number of middleware systems have been developed to support ad-hoc networking with the use of asynchronous communication (such as LIME, XMIDDLE, STEAM [11]).",
                "In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering.",
                "A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2.",
                "The Swiss company Softwired has developed the first JMS <br>middleware for mobile computing</br>, called iBus Mobile [10].",
                "The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library.",
                "The gateway is used for the communication between the application server and mobile hosts.",
                "The gateway is seen by the JMS provider as a normal JMS client.",
                "The JMS provider can be any JMS-enabled application server, such as BEA Weblogic.",
                "Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments.",
                "The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers.",
                "Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS.",
                "The aim of this configuration is to adapt JMS to a decentralized model.",
                "The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol.",
                "Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol.",
                "Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages.",
                "Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8].",
                "The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18].",
                "This work is again a JMS adaptation; the focus of that implementation is on group communication and the use of application level routing algorithms for topic delivery of messages.",
                "However, there are a number of differences in the focus of our work.",
                "The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks.",
                "The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure.",
                "This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7.",
                "ROADMAP AND CONCLUSIONS Asynchronous communication is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels).",
                "In this paper we have described the state of the art in terms of MOM for mobile systems.",
                "We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks.",
                "We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings.",
                "However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce.",
                "A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability.",
                "We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13].",
                "One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8.",
                "REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano.",
                "Cross-layering in Mobile ad-hoc Network Design.",
                "IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.",
                "Epidemic Algorithms for Replicated Database Maintenance.",
                "In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey.",
                "Providing connectivity to the Saami nomadic community.",
                "In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill.",
                "Supporting CORBA applications in a Mobile Environment.",
                "In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47.",
                "ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout.",
                "Java Message Service Specification Version 1.1.",
                "Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart.",
                "WebSphere MQ: Connecting your applications without complex programming.",
                "IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini.",
                "Marrying Middleware and Mobile Computing.",
                "Gartner Group Research Report, September 2001. [8] IBM.",
                "WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU.",
                "Connecting remote communities.",
                "Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis.",
                "Introducing Wireless JMS.",
                "Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich.",
                "<br>middleware for mobile computing</br>.",
                "In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58.",
                "Springer Verlag, 2002. [12] Microsoft.",
                "Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo.",
                "Adaptive routing for intermittently connected mobile ad-hoc networks.",
                "Technical report, UCL-CS Research Note, July 2004.",
                "Submitted for Publication. [14] Sun Microsystems.",
                "Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems.",
                "Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker.",
                "Epidemic routing for Partially Connected ad-hoc Networks.",
                "Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas.",
                "The OMNeT++ discrete event simulation system.",
                "In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan.",
                "JMS on Mobile ad-hoc Networks.",
                "In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon.",
                "Pronto: Mobilegateway with publish-subscribe paradigm over wireless network.",
                "Technical Report 559, University of Cambridge, Computer Laboratory, February 2003.",
                "Middleware for Pervasive and ad-hoc Computing 126"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Una consecuencia del problema de dimensionamiento es que la escalabilidad puede verse gravemente afectada en el \"middleware para la computación móvil\" de pares debido a la pobreza de recursos de los dispositivos (memoria limitada para almacenar mensajes temporalmente) y el número de posibles interconexiones en AD-Configuración hoc.",
                "La compañía suiza que Softwired ha desarrollado el primer JMS \"Middleware para la informática móvil\", llamada IBUS Mobile [10].",
                "\"Middleware para computación móvil\"."
            ],
            "translated_text": "",
            "candidates": [
                "middleware para computación móvil",
                "middleware para la computación móvil",
                "middleware para computación móvil",
                "Middleware para la informática móvil",
                "middleware para computación móvil",
                "Middleware para computación móvil"
            ],
            "error": []
        },
        "mobile ad-hoc network": {
            "translated_key": "red ad-hoc móvil",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Adapting Asynchronous Messaging Middleware to ad-hoc Networking Mirco Musolesi Dept.",
                "of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware.",
                "In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed.",
                "Instead, asynchronous communication seems to be a generally more suitable paradigm for such environments.",
                "Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems.",
                "In this paper, we present our experience in designing, implementing and evaluating EMMA (Epidemic Messaging Middleware for ad-hoc networks), an adaptation of Java Message Service (JMS) for mobile ad-hoc environments.",
                "We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1.",
                "INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment.",
                "Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces.",
                "Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity.",
                "Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised.",
                "In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved.",
                "In this paper, we examine one of the foundational aspects of middleware for mobile ad-hoc environments: that of the communication primitives.",
                "Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments.",
                "In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication.",
                "In recent years, there has been growing interest in platforms based on asynchronous communication paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity.",
                "From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability)....",
                "Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for mobile ad-hoc environments must therefore support semi-synchronous or completely asynchronous communication primitives if it is to avoid substantial limitations to its utility.",
                "Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe.",
                "Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9].",
                "There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware).",
                "These models differ quite considerably from the existing traditional middleware in terms of primitives provided.",
                "Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios.",
                "If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it.",
                "The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment.",
                "This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices.",
                "Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4].",
                "With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18].",
                "No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted.",
                "In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks.",
                "In our case, we elected to examine JMS, as one of the most widely known MOM systems.",
                "In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2.",
                "MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) Message-oriented middleware systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server.",
                "A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism.",
                "Message-oriented middleware thus supports asynchronous communication in a very natural way, achieving de-coupling of senders and receivers.",
                "A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time.",
                "However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored.",
                "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful message-oriented middleware for traditional distributed systems.",
                "The Java Messaging Service (JMS) is a collection of interfaces for asynchronous communication between distributed components.",
                "It provides a common way for Java programs to create, send and receive messages.",
                "JMS users are usually referred to as clients.",
                "The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system.",
                "Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages.",
                "There are two types of communication supported: point to point and publish-subscribe models.",
                "In the point to point model, hosts send messages to queues.",
                "Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them.",
                "The publish-subscribe model is based on the use of topics that can be subscribed to by clients.",
                "Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients.",
                "Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14].",
                "Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up.",
                "In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3.",
                "JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure.",
                "Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief.",
                "In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet).",
                "Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently.",
                "The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network.",
                "In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence.",
                "The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network.",
                "However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network.",
                "If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration.",
                "Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable.",
                "As discussed in Section 2, a JMS administrator defines queues and topics on the provider.",
                "Clients can then learn about them using the Java Naming and Directory Interface (JNDI).",
                "However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is).",
                "In mobile ad-hoc environments, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks.",
                "Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate.",
                "This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed.",
                "Persistence is, however, essential functionality in asynchronous communication environments as hosts are, by definition, connected at different times.",
                "In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4.",
                "JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure.",
                "Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios.",
                "As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging.",
                "Point to Point Model The point to point model is based on the concept of queues, that are used to enable asynchronous communication between the producer of a message and possible different consumers.",
                "In our solution, the location of queues is determined by a negotiation process that is application dependent.",
                "For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue.",
                "In this case, the optimum location of the queue may well be on this particular host.",
                "In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue.",
                "Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided.",
                "It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time.",
                "The hosts that receive advertisement messages add entries to their JNDI registry.",
                "Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]).",
                "A lease represents the time of validity of a particular entry.",
                "If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry.",
                "In other words, the host assumes that the queue will be unreachable from that point in time.",
                "This may be caused, for example, if a host storing the queue becomes unreachable.",
                "A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner.",
                "In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2.",
                "If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the epidemic protocol.",
                "In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5).",
                "Given the existence of an epidemic protocol, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms.",
                "Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before.",
                "Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic.",
                "When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue).",
                "The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the epidemic protocol otherwise.",
                "It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients.",
                "When a message is delivered to one of the subscribers, this recipient is deleted from the list.",
                "In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message.",
                "We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings.",
                "In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures.",
                "In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages.",
                "When the durable subscriber reconnects, the server sends it all unexpired messages.",
                "The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry.",
                "However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception.",
                "In other words, we cannot consider disconnections as failures.",
                "For these reasons, we adopt a slightly different semantics.",
                "With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the epidemic protocol rather than the synchronous protocol.",
                "In other words, durable notifications remain valid during the possible disconnections of the subscriber.",
                "On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the epidemic protocol but exploit only the synchronous protocol.",
                "If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications.",
                "Unsubscription messages are delivered in the same way as are subscription messages.",
                "It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures.",
                "This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network.",
                "The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13].",
                "The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16].",
                "A message that needs to be sent is replicated on each host in reach.",
                "In this way, copies of the messages are quickly spread through connected networks, like an infection.",
                "If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts.",
                "Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2].",
                "Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts.",
                "To improve the performance, a hash-table indexes the content of the buffer.",
                "When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores.",
                "The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have.",
                "The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host.",
                "Should buffer overflow occur, messages are dropped.",
                "The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient.",
                "Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5].",
                "According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery.",
                "The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe).",
                "A JMS message can be persistent or non-persistent.",
                "According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones.",
                "However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying epidemic protocol can guarantee only best-effort delivery.",
                "However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates.",
                "In other words, we provide the applications with at-mostonce reliability for both types of messages.",
                "In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy epidemic protocol.",
                "Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space.",
                "If this is insufficient and non-persistent messages are present in the buffer, these are replaced.",
                "Only the successful deliveries of the persistent messages are notified to the senders.",
                "According to the JMS specification, it is possible to assign a priority to each message.",
                "The messages with higher priorities are delivered in a preferential way.",
                "As discussed above, persistent messages are prioritised above the non-persistent ones.",
                "Further selection is based on their priorities.",
                "Messages with higher priorities are treated in a preferential way.",
                "In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages).",
                "Messages are deleted from the buffers using the expiration time value that can be set by senders.",
                "This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings.",
                "However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms.",
                "EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers).",
                "This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not.",
                "We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network.",
                "Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts.",
                "The lists are exchanged during the first steps of the anti-entropic epidemic protocol with a certain predefined frequency.",
                "In the case of messages with multiple recipients, a list of the actual recipients is also stored.",
                "When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients.",
                "If the resulting length of the list of recipients is zero, the message is deleted from the buffer.",
                "These lists have, clearly, finite dimensions and are implemented as circular queues.",
                "This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time.",
                "In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed.",
                "However this is not yet part of the current architecture of EMMA. 5.",
                "IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile.",
                "The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market.",
                "We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface.",
                "We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally.",
                "More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities.",
                "The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good.",
                "In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay.",
                "Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network.",
                "One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer middleware for mobile computing due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings.",
                "What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages.",
                "This problem arises because of the lack of intelligence in the epidemic protocol, and can be addressed by selecting carrier nodes for messages with greater care.",
                "The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6.",
                "CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable.",
                "Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems.",
                "As an example, consider the recent cross-layering trend in ad-hoc networking [1].",
                "This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains.",
                "We believe that it is possible to view our approach as an instance of cross-layering.",
                "In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation).",
                "For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery.",
                "Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms.",
                "Again, as a result of adopting a cross-layering methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour.",
                "We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system).",
                "A number of middleware systems have been developed to support ad-hoc networking with the use of asynchronous communication (such as LIME, XMIDDLE, STEAM [11]).",
                "In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering.",
                "A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2.",
                "The Swiss company Softwired has developed the first JMS middleware for mobile computing, called iBus Mobile [10].",
                "The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library.",
                "The gateway is used for the communication between the application server and mobile hosts.",
                "The gateway is seen by the JMS provider as a normal JMS client.",
                "The JMS provider can be any JMS-enabled application server, such as BEA Weblogic.",
                "Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments.",
                "The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers.",
                "Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS.",
                "The aim of this configuration is to adapt JMS to a decentralized model.",
                "The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol.",
                "Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol.",
                "Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages.",
                "Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8].",
                "The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18].",
                "This work is again a JMS adaptation; the focus of that implementation is on group communication and the use of application level routing algorithms for topic delivery of messages.",
                "However, there are a number of differences in the focus of our work.",
                "The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks.",
                "The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure.",
                "This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7.",
                "ROADMAP AND CONCLUSIONS Asynchronous communication is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels).",
                "In this paper we have described the state of the art in terms of MOM for mobile systems.",
                "We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks.",
                "We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings.",
                "However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce.",
                "A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability.",
                "We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13].",
                "One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8.",
                "REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano.",
                "Cross-layering in <br>mobile ad-hoc network</br> Design.",
                "IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.",
                "Epidemic Algorithms for Replicated Database Maintenance.",
                "In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey.",
                "Providing connectivity to the Saami nomadic community.",
                "In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill.",
                "Supporting CORBA applications in a Mobile Environment.",
                "In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47.",
                "ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout.",
                "Java Message Service Specification Version 1.1.",
                "Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart.",
                "WebSphere MQ: Connecting your applications without complex programming.",
                "IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini.",
                "Marrying Middleware and Mobile Computing.",
                "Gartner Group Research Report, September 2001. [8] IBM.",
                "WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU.",
                "Connecting remote communities.",
                "Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis.",
                "Introducing Wireless JMS.",
                "Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich.",
                "Middleware for Mobile Computing.",
                "In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58.",
                "Springer Verlag, 2002. [12] Microsoft.",
                "Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo.",
                "Adaptive routing for intermittently connected mobile ad-hoc networks.",
                "Technical report, UCL-CS Research Note, July 2004.",
                "Submitted for Publication. [14] Sun Microsystems.",
                "Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems.",
                "Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker.",
                "Epidemic routing for Partially Connected ad-hoc Networks.",
                "Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas.",
                "The OMNeT++ discrete event simulation system.",
                "In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan.",
                "JMS on Mobile ad-hoc Networks.",
                "In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon.",
                "Pronto: Mobilegateway with publish-subscribe paradigm over wireless network.",
                "Technical Report 559, University of Cambridge, Computer Laboratory, February 2003.",
                "Middleware for Pervasive and ad-hoc Computing 126"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Layering en diseño de \"red ad-hoc móvil\"."
            ],
            "translated_text": "",
            "candidates": [
                "red ad-hoc móvil",
                "red ad-hoc móvil"
            ],
            "error": []
        },
        "context awareness": {
            "translated_key": "conocimiento del contexto",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Adapting Asynchronous Messaging Middleware to ad-hoc Networking Mirco Musolesi Dept.",
                "of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom m.musolesi@cs.ucl.ac.uk Cecilia Mascolo Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom c.mascolo@cs.ucl.ac.uk Stephen Hailes Dept. of Computer Science, University College London Gower Street, London WC1E 6BT, United Kingdom s.hailes@cs.ucl.ac.uk ABSTRACT The characteristics of mobile environments, with the possibility of frequent disconnections and fluctuating bandwidth, have forced a rethink of traditional middleware.",
                "In particular, the synchronous communication paradigms often employed in standard middleware do not appear to be particularly suited to ad-hoc environments, in which not even the intermittent availability of a backbone network can be assumed.",
                "Instead, asynchronous communication seems to be a generally more suitable paradigm for such environments.",
                "Message oriented middleware for traditional systems has been developed and used to provide an asynchronous paradigm of communication for distributed systems, and, recently, also for some specific mobile computing systems.",
                "In this paper, we present our experience in designing, implementing and evaluating EMMA (Epidemic Messaging Middleware for ad-hoc networks), an adaptation of Java Message Service (JMS) for mobile ad-hoc environments.",
                "We discuss in detail the design challenges and some possible solutions, showing a concrete example of the feasibility and suitability of the application of the asynchronous paradigm in this setting and outlining a research roadmap for the coming years.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed Applications; C.2.1 [Network Architecture and Design]: Wireless Communication General Terms DESIGN, ALGORITHMS 1.",
                "INTRODUCTION With the increasing popularity of mobile devices and their widespread adoption, there is a clear need to allow the development of a broad spectrum of applications that operate effectively over such an environment.",
                "Unfortunately, this is far from simple: mobile devices are increasingly heterogeneous in terms of processing capabilities, memory size, battery capacity, and network interfaces.",
                "Each such configuration has substantially different characteristics that are both statically different - for example, there is a major difference in capability between a Berkeley mote and an 802.11g-equipped laptop - and that vary dynamically, as in situations of fluctuating bandwidth and intermittent connectivity.",
                "Mobile ad hoc environments have an additional element of complexity in that they are entirely decentralised.",
                "In order to craft applications for such complex environments, an appropriate form of middleware is essential if cost effective development is to be achieved.",
                "In this paper, we examine one of the foundational aspects of middleware for mobile ad-hoc environments: that of the communication primitives.",
                "Traditionally, the most frequently used middleware primitives for communication assume the simultaneous presence of both end points on a network, since the stability and pervasiveness of the networking infrastructure is not an unreasonable assumption for most wired environments.",
                "In other words, most communication paradigms are synchronous: object oriented middleware such as CORBA and Java RMI are typical examples of middleware based on synchronous communication.",
                "In recent years, there has been growing interest in platforms based on asynchronous communication paradigms, such as publish-subscribe systems [6]: these have been exploited very successfully where there is application level asynchronicity.",
                "From a Gartner Market Report [7]: Given messageoriented-middlewares (MOM) popularity, scalability, flexibility, and affinity with mobile and wireless architectures, by 2004, MOM will emerge as the dominant form of communication middleware for linking mobile and enterprise applications (0.7 probability)....",
                "Moreover, in mobile ad-hoc systems, the likelihood of network fragmentation means that synchronous communication may in any case be impracticable, giving situations in which delay tolerant asynchronous traffic is the only form of traffic that could be supported. 121 Middleware 2004 Companion Middleware for mobile ad-hoc environments must therefore support semi-synchronous or completely asynchronous communication primitives if it is to avoid substantial limitations to its utility.",
                "Aside from the intellectual challenge in supporting this model, this work is also interesting because there are a number of practical application domains in allowing inter-community communication in undeveloped areas of the globe.",
                "Thus, for example, projects that have been carried out to help populations that live in remote places of the globe such as Lapland [3] or in poor areas that lack fixed connectivity infrastructure [9].",
                "There have been attempts to provide mobile middleware with these properties, including STEAM, LIME, XMIDDLE, Bayou (see [11] for a more complete review of mobile middleware).",
                "These models differ quite considerably from the existing traditional middleware in terms of primitives provided.",
                "Furthermore, some of them fail in providing a solution for the true ad-hoc scenarios.",
                "If the projected success of MOM becomes anything like a reality, there will be many programmers with experience of it.",
                "The ideal solution to the problem of middleware for ad-hoc systems is, then, to allow programmers to utilise the same paradigms and models presented by common forms of MOM and to ensure that these paradigms are supportable within the mobile environment.",
                "This approach has clear advantages in allowing applications developed on standard middleware platforms to be easily deployed on mobile devices.",
                "Indeed, some research has already led to the adaptation of traditional middleware platforms to mobile settings, mainly to provide integration between mobile devices and existing fixed networks in a nomadic (i.e., mixed) environment [4].",
                "With respect to message oriented middleware, the current implementations, however, either assume the existence of a backbone network to which the mobile hosts connect from time to time while roaming [10], or assume that nodes are always somehow reachable through a path [18].",
                "No adaptation to heterogeneous or completely ad-hoc scenarios, with frequent disconnection and periodically isolated clouds of hosts, has been attempted.",
                "In the remainder of this paper we describe an initial attempt to adapt message oriented middleware to suit mobile and, more specifically, mobile ad-hoc networks.",
                "In our case, we elected to examine JMS, as one of the most widely known MOM systems.",
                "In the latter part of this paper, we explore the limitations of our results and describe the plans we have to take the work further. 2.",
                "MESSAGE ORIENTED MIDDLEWARE AND JAVA MESSAGE SERVICE (JMS) Message-oriented middleware systems support communication between distributed components via message-passing: the sender sends a message to identified queues, which usually reside on a server.",
                "A receiver retrieves the message from the queue at a different time and may acknowledge the reply using the same asynchronous mechanism.",
                "Message-oriented middleware thus supports asynchronous communication in a very natural way, achieving de-coupling of senders and receivers.",
                "A sender is able to continue processing as soon as the middleware has accepted the message; eventually, the receiver will send an acknowledgment message and the sender will be able to collect it at a convenient time.",
                "However, given the way they are implemented, these middleware systems usually require resource-rich devices, especially in terms of memory and disk space, where persistent queues of messages that have been received but not yet processed, are stored.",
                "Sun Java Message Service [5], IBM WebSphere MQ [6], Microsoft MSMQ [12] are examples of very successful message-oriented middleware for traditional distributed systems.",
                "The Java Messaging Service (JMS) is a collection of interfaces for asynchronous communication between distributed components.",
                "It provides a common way for Java programs to create, send and receive messages.",
                "JMS users are usually referred to as clients.",
                "The JMS specification further defines providers as the components in charge of implementing the messaging system and providing the administrative and control functionality (i.e., persistence and reliability) required by the system.",
                "Clients can send and receive messages, asynchronously, through the JMS provider, which is in charge of the delivery and, possibly, of the persistence of the messages.",
                "There are two types of communication supported: point to point and publish-subscribe models.",
                "In the point to point model, hosts send messages to queues.",
                "Receivers can be registered with some specific queues, and can asynchronously retrieve the messages and then acknowledge them.",
                "The publish-subscribe model is based on the use of topics that can be subscribed to by clients.",
                "Messages are sent to topics by other clients and are then received in an asynchronous mode by all the subscribed clients.",
                "Clients learn about the available topics and queues through Java Naming and Directory Interface (JNDI) [14].",
                "Queues and topics are created by an administrator on the provider and are registered with the JNDI interface for look-up.",
                "In the next section, we introduce the challenges of mobile networks, and show how JMS can be adapted to cope with these requirements. 3.",
                "JMS FOR MOBILE COMPUTING Mobile networks vary very widely in their characteristics, from nomadic networks in which modes relocate whilst offline through to ad-hoc networks in which modes move freely and in which there is no infrastructure.",
                "Mobile ad-hoc networks are most generally applicable in situations where survivability and instant deployability are key: most notably in military applications and disaster relief.",
                "In between these two types of mobile networks, there are, however, a number of possible heterogeneous combinations, where nomadic and ad-hoc paradigms are used to interconnect totally unwired areas to more structured networks (such as a LAN or the Internet).",
                "Whilst the JMS specification has been extensively implemented and used in traditional distributed systems, adaptations for mobile environments have been proposed only recently.",
                "The challenges of porting JMS to mobile settings are considerable; however, in view of its widespread acceptance and use, there are considerable advantages in allowing the adaptation of existing applications to mobile environments and in allowing the interoperation of applications in the wired and wireless regions of a network.",
                "In [10], JMS was adapted to a nomadic mobile setting, where mobile hosts can be JMS clients and communicate through the JMS provider that, however, sits on a backbone network, providing reliability and persistence.",
                "The client prototype presented in [10] is very lightweight, due to the delegation of all the heavyweight functionality to the Middleware for Pervasive and ad-hoc Computing 122 provider on the wired network.",
                "However, this approach is somewhat limited in terms of widespread applicability and scalability as a consequence of the concentration of functionality in the wired portion of the network.",
                "If JMS is to be adapted to completely ad-hoc environments, where no fixed infrastructure is available, and where nodes change location and status very dynamically, more issues must be taken into consideration.",
                "Firstly, discovery needs to use a resilient but distributed model: in this extremely dynamic environment, static solutions are unacceptable.",
                "As discussed in Section 2, a JMS administrator defines queues and topics on the provider.",
                "Clients can then learn about them using the Java Naming and Directory Interface (JNDI).",
                "However, due to the way JNDI is designed, a JNDI node (or more than one) needs to be in reach in order to obtain a binding of a name to an address (i.e., knowing where a specific queue/topic is).",
                "In mobile ad-hoc environments, the discovery process cannot assume the existence of a fixed set of discovery servers that are always reachable, as this would not match the dynamicity of ad-hoc networks.",
                "Secondly, a JMS Provider, as suggested by the JMS specification, also needs to be reachable by each node in the network, in order to communicate.",
                "This assumes a very centralised architecture, which again does not match the requirements of a mobile ad-hoc setting, in which nodes may be moving and sparse: a more distributed and dynamic solution is needed.",
                "Persistence is, however, essential functionality in asynchronous communication environments as hosts are, by definition, connected at different times.",
                "In the following section, we will discuss our experience in designing and implementing JMS for mobile ad-hoc networks. 4.",
                "JMSFOR MOBILE ad-hoc NETWORKS 4.1 Adaptation of JMS for Mobile ad-hoc Networks Developing applications for mobile networks is yet more challenging: in addition to the same considerations as for infrastructured wireless environments, such as the limited device capabilities and power constraints, there are issues of rate of change of network connectivity, and the lack of a static routing infrastructure.",
                "Consequently, we now describe an initial attempt to adapt the JMS specification to target the particular requirements related to ad-hoc scenarios.",
                "As discussed in Section 3, a JMS application can use either the point to point and the publish-subscribe styles of messaging.",
                "Point to Point Model The point to point model is based on the concept of queues, that are used to enable asynchronous communication between the producer of a message and possible different consumers.",
                "In our solution, the location of queues is determined by a negotiation process that is application dependent.",
                "For example, let us suppose that it is possible to know a priori, or it is possible to determine dynamically, that a certain host is the receiver of the most part of messages sent to a particular queue.",
                "In this case, the optimum location of the queue may well be on this particular host.",
                "In general, it is worth noting that, according to the JMS specification and suggested design patterns, it is common and preferable for a client to have all of its messages delivered to a single queue.",
                "Queues are advertised periodically to the hosts that are within transmission range or that are reachable by means of the underlying synchronous communication protocol, if provided.",
                "It is important to note that, at the middleware level, it is logically irrelevant whether or not the network layer implements some form of ad-hoc routing (though considerably more efficient if it does); the middleware only considers information about which nodes are actively reachable at any point in time.",
                "The hosts that receive advertisement messages add entries to their JNDI registry.",
                "Each entry is characterized by a lease (a mechanism similar to that present in Jini [15]).",
                "A lease represents the time of validity of a particular entry.",
                "If a lease is not refreshed (i.e, its life is not extended), it can expire and, consequently, the entry is deleted from the registry.",
                "In other words, the host assumes that the queue will be unreachable from that point in time.",
                "This may be caused, for example, if a host storing the queue becomes unreachable.",
                "A host that initiates a discovery process will find the topics and the queues present in its connected portion of the network in a straightforward manner.",
                "In order to deliver a message to a host that is not currently in reach1 , we use an asynchronous epidemic routing protocol that will be discussed in detail in Section 4.2.",
                "If two hosts are in the same cloud (i.e., a connected path exists between them), but no synchronous protocol is available, the messages are sent using the epidemic protocol.",
                "In this case, the delivery latency will be low as a result of the rapidity of propagation of the infection in the connected cloud (see also the simulation results in Section 5).",
                "Given the existence of an epidemic protocol, the discovery mechanism consists of advertising the queues to the hosts that are currently unreachable using analogous mechanisms.",
                "Publish-Subscribe Model In the publish-subscribe model, some of the hosts are similarly designated to hold topics and store subscriptions, as before.",
                "Topics are advertised through the registry in the same way as are queues, and a client wishing to subscribe to a topic must register with the client holding the topic.",
                "When a client wishes to send a message to the topic list, it sends it to the topic holder (in the same way as it would send a message to a queue).",
                "The topic holder then forwards the message to all subscribers, using the synchronous protocol if possible, the epidemic protocol otherwise.",
                "It is worth noting that we use a single message with multiple recipients, instead of multiple messages with multiple recipients.",
                "When a message is delivered to one of the subscribers, this recipient is deleted from the list.",
                "In order to delete the other possible replicas, we employ acknowledgment messages (discussed in Section 4.4), returned in the same way as a normal message.",
                "We have also adapted the concepts of durable and non durable subscriptions for ad-hoc settings.",
                "In fixed platforms, durable subscriptions are maintained during the disconnections of the clients, whether these are intentional or are the result of failures.",
                "In traditional systems, while a durable subscriber is disconnected from the server, it is responsible for storing messages.",
                "When the durable subscriber reconnects, the server sends it all unexpired messages.",
                "The problem is that, in our scenario, disconnections are the norm 1 In theory, it is not possible to send a message to a peer that has never been reachable in the past, since there can be no entry present in the registry.",
                "However, to overcome this possible limitation, we provide a primitive through which information can be added to the registry without using the normal channels. 123 Middleware 2004 Companion rather than the exception.",
                "In other words, we cannot consider disconnections as failures.",
                "For these reasons, we adopt a slightly different semantics.",
                "With respect to durable subscriptions, if a subscriber becomes disconnected, notifications are not stored but are sent using the epidemic protocol rather than the synchronous protocol.",
                "In other words, durable notifications remain valid during the possible disconnections of the subscriber.",
                "On the other hand, if a non-durable subscriber becomes disconnected, its subscription is deleted; in other words, during disconnections, notifications are not sent using the epidemic protocol but exploit only the synchronous protocol.",
                "If the topic becomes accessible to this host again, it must make another subscription in order to receive the notifications.",
                "Unsubscription messages are delivered in the same way as are subscription messages.",
                "It is important to note that durable subscribers have explicitly to unsubscribe from a topic in order to stop the notification process; however, all durable subscriptions have a predefined expiration time in order to cope with the cases of subscribers that do not meet again because of their movements or failures.",
                "This feature is clearly provided to limit the number of the unnecessary messages sent around the network. 4.2 Message Delivery using Epidemic Routing In this section, we examine one possible mechanism that will allow the delivery of messages in a partially connected network.",
                "The mechanism we discuss is intended for the purposes of demonstrating feasibility; more efficient communication mechanisms for this environment are themselves complex, and are the subject of another paper [13].",
                "The asynchronous message delivery described above is based on a typical pure epidemic-style routing protocol [16].",
                "A message that needs to be sent is replicated on each host in reach.",
                "In this way, copies of the messages are quickly spread through connected networks, like an infection.",
                "If a host becomes connected to another cloud of mobile nodes, during its movement, the message spreads through this collection of hosts.",
                "Epidemic-style replication of data and messages has been exploited in the past in many fields starting with the distributed database systems area [2].",
                "Within epidemic routing, each host maintains a buffer containing the messages that it has created and the replicas of the messages generated by the other hosts.",
                "To improve the performance, a hash-table indexes the content of the buffer.",
                "When two hosts connect, the host with the smaller identifier initiates a so-called anti-entropy session, sending a list containing the unique identifiers of the messages that it currently stores.",
                "The other host evaluates this list and sends back a list containing the identifiers it is storing that are not present in the other host, together with the messages that the other does not have.",
                "The host that has started the session receives the list and, in the same way, sends the messages that are not present in the other host.",
                "Should buffer overflow occur, messages are dropped.",
                "The reliability offered by this protocol is typically best effort, since there is no guarantee that a message will eventually be delivered to its recipient.",
                "Clearly, the delivery ratio of the protocol increases proportionally to the maximum allowed delay time and the buffer size in each host (interesting simulation results may be found in [16]). 4.3 Adaptation of the JMS Message Model In this section, we will analyse the aspects of our adaptation of the specification related to the so-called JMS Message Model [5].",
                "According to this, JMS messages are characterised by some properties defined using the header field, which contains values that are used by both clients and providers for their delivery.",
                "The aspects discussed in the remainder of this section are valid for both models (point to point and publish-subscribe).",
                "A JMS message can be persistent or non-persistent.",
                "According to the JMS specification, persistent messages must be delivered with a higher degree of reliability than the nonpersistent ones.",
                "However, it is worth noting that it is not possible to ensure once-and-only-once reliability for persistent messages as defined in the specification, since, as we discussed in the previous subsection, the underlying epidemic protocol can guarantee only best-effort delivery.",
                "However, clients maintain a list of the identifiers of the recently received messages to avoid the delivery of message duplicates.",
                "In other words, we provide the applications with at-mostonce reliability for both types of messages.",
                "In order to implement different levels of reliability, EMMA treats persistent and non-persistent messages differently, during the execution of the anti-entropy epidemic protocol.",
                "Since the message buffer space is limited, persistent messages are preferentially replicated using the available free space.",
                "If this is insufficient and non-persistent messages are present in the buffer, these are replaced.",
                "Only the successful deliveries of the persistent messages are notified to the senders.",
                "According to the JMS specification, it is possible to assign a priority to each message.",
                "The messages with higher priorities are delivered in a preferential way.",
                "As discussed above, persistent messages are prioritised above the non-persistent ones.",
                "Further selection is based on their priorities.",
                "Messages with higher priorities are treated in a preferential way.",
                "In fact, if there is not enough space to replicate all the persistent messages, a mechanism based on priorities is used to delete and replicate non-persistent messages (and, if necessary, persistent messages).",
                "Messages are deleted from the buffers using the expiration time value that can be set by senders.",
                "This is a way to free space in the buffers (one preferentially deletes older messages in cases of conflict); to eliminate stale replicas in the system; and to limit the time for which destinations must hold message identifiers to dispose of duplicates. 4.4 Reliability and Acknowledgment Mechanisms As already discussed, at-most-once message delivery is the best that can be achieved in terms of delivery semantics in partially connected ad-hoc settings.",
                "However, it is possible to improve the reliability of the system with efficient acknowledgment mechanisms.",
                "EMMA provides a mechanism for failure notification to applications if the acknowledgment is not received within a given timeout (that can be configured by application developers).",
                "This mechanism is the one that distinguishes the delivery of persistent and non-persistent messages in our JMS implementation: the deliveries of the former are notified to the senders, whereas the latter are not.",
                "We use acknowledgment messages not only to inform senders about the successful delivery of messages but also to delete the replicas of the delivered messages that are still present in the network.",
                "Each host maintains a list of the messages Middleware for Pervasive and ad-hoc Computing 124 successfully delivered that is updated as part of the normal process of information exchange between the hosts.",
                "The lists are exchanged during the first steps of the anti-entropic epidemic protocol with a certain predefined frequency.",
                "In the case of messages with multiple recipients, a list of the actual recipients is also stored.",
                "When a host receives the list, it checks its message buffer and updates it according to the following rules: (1) if a message has a single recipient and it has been delivered, it is deleted from the buffer; (2) if a message has multiple recipients, the identifiers of the delivered hosts are deleted from the associated list of recipients.",
                "If the resulting length of the list of recipients is zero, the message is deleted from the buffer.",
                "These lists have, clearly, finite dimensions and are implemented as circular queues.",
                "This simple mechanism, together with the use of expiration timestamps, guarantees that the old acknowledgment notifications are deleted from the system after a limited period of time.",
                "In order to improve the reliability of EMMA, a design mechanism for intelligent replication of queues and topics based on the context information could be developed.",
                "However this is not yet part of the current architecture of EMMA. 5.",
                "IMPLEMENTATION AND PRELIMINARY EVALUATION We implemented a prototype of our platform using the J2ME Personal Profile.",
                "The size of the executable is about 250KB including the JMS 1.1 jar file; this is a perfectly acceptable figure given the available memory of the current mobile devices on the market.",
                "We tested our prototype on HP IPaq PDAs running Linux, interconnected with WaveLan, and on a number of laptops with the same network interface.",
                "We also evaluated the middleware platform using the OMNET++ discrete event simulator [17] in order to explore a range of mobile scenarios that incorporated a more realistic number of hosts than was achievable experimentally.",
                "More specifically, we assessed the performance of the system in terms of delivery ratio and average delay, varying the density of population and the buffer size, and using persistent and non-persistent messages with different priorities.",
                "The simulation results show that the EMMAs performance, in terms of delivery ratio and delay of persistent messages with higher priorities, is good.",
                "In general, it is evident that the delivery ratio is strongly related to the correct dimensioning of the buffers to the maximum acceptable delay.",
                "Moreover, the epidemic algorithms are able to guarantee a high delivery ratio if one evaluates performance over a time interval sufficient for the dissemination of the replicas of messages (i.e., the infection spreading) in a large portion of the ad-hoc network.",
                "One consequence of the dimensioning problem is that scalability may be seriously impacted in peer-to-peer middleware for mobile computing due to the resource poverty of the devices (limited memory to store temporarily messages) and the number of possible interconnections in ad-hoc settings.",
                "What is worse is that common forms of commercial and social organisation (six degrees of separation) mean that even modest TTL values on messages will lead to widespread flooding of epidemic messages.",
                "This problem arises because of the lack of intelligence in the epidemic protocol, and can be addressed by selecting carrier nodes for messages with greater care.",
                "The details of this process are, however, outside the scope of this paper (but may be found in [13]) and do not affect the foundation on which the EMMA middleware is based: the ability to deliver messages asynchronously. 6.",
                "CRITICAL VIEW OF THE STATE OF THE ART The design of middleware platforms for mobile computing requires researchers to answer new and fundamentally different questions; simply assuming the presence of wired portions of the network on which centralised functionality can reside is not generalisable.",
                "Thus, it is necessary to investigate novel design principles and to devise architectural patterns that differ from those traditionally exploited in the design of middleware for fixed systems.",
                "As an example, consider the recent cross-layering trend in ad-hoc networking [1].",
                "This is a way of re-thinking software systems design, explicitly abandoning the classical forms of layering, since, although this separation of concerns afford portability, it does so at the expense of potential efficiency gains.",
                "We believe that it is possible to view our approach as an instance of cross-layering.",
                "In fact, we have added the epidemic network protocol at middleware level and, at the same time, we have used the existing synchronous network protocol if present both in delivering messages (traditional layering) and in informing the middleware about when messages may be delivered by revealing details of the forwarding tables (layer violation).",
                "For this reason, we prefer to consider them jointly as the communication layer of our platform together providing more efficient message delivery.",
                "Another interesting aspect is the exploitation of context and system information to improve the performance of mobile middleware platforms.",
                "Again, as a result of adopting a cross-layering methodology, we are able to build systems that gather information from the underlying operating system and communication components in order to allow for adaptation of behaviour.",
                "We can summarise this conceptual design approach by saying that middleware platforms must be not only context-aware (i.e., they should be able to extract and analyse information from the surrounding context) but also system-aware (i.e., they should be able to gather information from the software and hardware components of the mobile system).",
                "A number of middleware systems have been developed to support ad-hoc networking with the use of asynchronous communication (such as LIME, XMIDDLE, STEAM [11]).",
                "In particular, the STEAM platform is an interesting example of event-based middleware for ad-hoc networks, providing location-aware message delivery and an effective solution for event filtering.",
                "A discussion of JMS, and its mobile realisation, has already been conducted in Sections 4 and 2.",
                "The Swiss company Softwired has developed the first JMS middleware for mobile computing, called iBus Mobile [10].",
                "The main components of this typically infrastructure-based architecture are the JMS provider, the so-called mobile JMS gateway, which is deployed on a fixed host and a lightweight JMS client library.",
                "The gateway is used for the communication between the application server and mobile hosts.",
                "The gateway is seen by the JMS provider as a normal JMS client.",
                "The JMS provider can be any JMS-enabled application server, such as BEA Weblogic.",
                "Pronto [19] is an example of mid125 Middleware 2004 Companion dleware system based on messaging that is specifically designed for mobile environments.",
                "The platform is composed of three classes of components: mobile clients implementing the JMS specification, gateways that control traffic, guaranteeing efficiency and possible user customizations using different plug-ins and JMS servers.",
                "Different configurations of these components are possible; with respect to mobile ad hoc networks applications, the most interesting is Serverless JMS.",
                "The aim of this configuration is to adapt JMS to a decentralized model.",
                "The publish-subscribe model exploits the efficiency and the scalability of the underlying IP multicast protocol.",
                "Unreliable and reliable message delivery services are provided: reliability is provided through a negative acknowledgment-based protocol.",
                "Pronto represents a good solution for infrastructure-based mobile networks but it does not adequately target ad-hoc settings, since mobile nodes rely on fixed servers for the exchange of messages.",
                "Other MOM implemented for mobile environments exist; however, they are usually straightforward extensions of existing middleware [8].",
                "The only implementation of MOM specifically designed for mobile ad-hoc networks was developed at the University of Newcastle [18].",
                "This work is again a JMS adaptation; the focus of that implementation is on group communication and the use of application level routing algorithms for topic delivery of messages.",
                "However, there are a number of differences in the focus of our work.",
                "The importance that we attribute to disconnections makes persistence a vital requirement for any middleware that needs to be used in mobile ad-hoc networks.",
                "The authors of [18] signal persistence as possible future work, not considering the fact that routing a message to a non-connected host will result in delivery failure.",
                "This is a remarkable limitation in mobile settings where unpredictable disconnections are the norm rather than the exception. 7.",
                "ROADMAP AND CONCLUSIONS Asynchronous communication is a useful communication paradigm for mobile ad-hoc networks, as hosts are allowed to come, go and pick up messages when convenient, also taking account of their resource availability (e.g., power, connectivity levels).",
                "In this paper we have described the state of the art in terms of MOM for mobile systems.",
                "We have also shown a proof of concept adaptation of JMS to the extreme scenario of partially connected mobile ad-hoc networks.",
                "We have described and discussed the characteristics and differences of our solution with respect to traditional JMS implementations and the existing adaptations for mobile settings.",
                "However, trade-offs between application-level routing and resource usage should also be investigated, as mobile devices are commonly power/resource scarce.",
                "A key limitation of this work is the poorly performing epidemic algorithm and an important advance in the practicability of this work requires an algorithm that better balances the needs of efficiency and message delivery probability.",
                "We are currently working on algorithms and protocols that, exploiting probabilistic and statistical techniques on the basis of small amounts of exchanged information, are able to improve considerably the efficiency in terms of resources (memory, bandwidth, etc) and the reliability of our middleware platform [13].",
                "One futuristic research development, which may take these ideas of adaptation of messaging middleware for mobile environments further is the introduction of more mobility oriented communication extensions, for instance the support of geocast (i.e., the ability to send messages to specific geographical areas). 8.",
                "REFERENCES [1] M. Conti, G. Maselli, G. Turi, and S. Giordano.",
                "Cross-layering in Mobile ad-hoc Network Design.",
                "IEEE Computer, 37(2):48-51, February 2004. [2] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.",
                "Epidemic Algorithms for Replicated Database Maintenance.",
                "In Sixth Symposium on Principles of Distributed Computing, pages 1-12, August 1987. [3] A. Doria, M. Uden, and D. P. Pandey.",
                "Providing connectivity to the Saami nomadic community.",
                "In Proceedings of the Second International Conference on Open Collaborative Design for Sustainable Innovation, December 2002. [4] M. Haahr, R. Cunningham, and V. Cahill.",
                "Supporting CORBA applications in a Mobile Environment.",
                "In 5th International Conference on Mobile Computing and Networking (MOBICOM99), pages 36-47.",
                "ACM, August 1999. [5] M. Hapner, R. Burridge, R. Sharma, J. Fialli, and K. Stout.",
                "Java Message Service Specification Version 1.1.",
                "Sun Microsystems, Inc., April 2002. http://java.sun.com/products/jms/. [6] J. Hart.",
                "WebSphere MQ: Connecting your applications without complex programming.",
                "IBM WebSphere Software White Papers, 2003. [7] S. Hayward and M. Pezzini.",
                "Marrying Middleware and Mobile Computing.",
                "Gartner Group Research Report, September 2001. [8] IBM.",
                "WebSphere MQ EveryPlace Version 2.0, November 2002. http://www-3.ibm.com/software/integration/wmqe/. [9] ITU.",
                "Connecting remote communities.",
                "Documents of the World Summit on Information Society, 2003. http://www.itu.int/osg/spu/wsis-themes. [10] S. Maffeis.",
                "Introducing Wireless JMS.",
                "Softwired AG, www.sofwired-inc.com, 2002. [11] C. Mascolo, L. Capra, and W. Emmerich.",
                "Middleware for Mobile Computing.",
                "In E. Gregori, G. Anastasi, and S. Basagni, editors, Advanced Lectures on Networking, volume 2497 of Lecture Notes in Computer Science, pages 20-58.",
                "Springer Verlag, 2002. [12] Microsoft.",
                "Microsoft Message Queuing (MSMQ) Version 2.0 Documentation. [13] M. Musolesi, S. Hailes, and C. Mascolo.",
                "Adaptive routing for intermittently connected mobile ad-hoc networks.",
                "Technical report, UCL-CS Research Note, July 2004.",
                "Submitted for Publication. [14] Sun Microsystems.",
                "Java Naming and Directory Interface (JNDI) Documentation Version 1.2. 2003. http://java.sun.com/products/jndi/. [15] Sun Microsystems.",
                "Jini Specification Version 2.0, 2003. http://java.sun.com/products/jini/. [16] A. Vahdat and D. Becker.",
                "Epidemic routing for Partially Connected ad-hoc Networks.",
                "Technical Report CS-2000-06, Department of Computer Science, Duke University, 2000. [17] A. Vargas.",
                "The OMNeT++ discrete event simulation system.",
                "In Proceedings of the European Simulation Multiconference (ESM2001), Prague, June 2001. [18] E. Vollset, D. Ingham, and P. Ezhilchelvan.",
                "JMS on Mobile ad-hoc Networks.",
                "In Personal Wireless Communications (PWC), pages 40-52, Venice, September 2003. [19] E. Yoneki and J. Bacon.",
                "Pronto: Mobilegateway with publish-subscribe paradigm over wireless network.",
                "Technical Report 559, University of Cambridge, Computer Laboratory, February 2003.",
                "Middleware for Pervasive and ad-hoc Computing 126"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        }
    }
}