{
    "id": "H-37",
    "original_text": "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs. Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam. The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification. However, similar performance gains have yet to be demonstrated for online spam filtering. Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods. In this paper, we offer a resolution to this controversy. First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets. Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost. Our results are experimentally verified on email spam, blog spam, and splog detection tasks. Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1. INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam. The most well known form of spam is email spam, which remains a major problem for large email systems. Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17]. There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis. The approach of content analysis has shown particular promise and generality for combating spam. In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam. Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17]. In this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection. Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14]. However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems. Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20]. This Bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates. This allows a deployed system to easily adapt to a changing environment over time. Other fast methods for spam filtering include compression models [1] and logistic regression [10]. It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution. We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam. We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection. We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2. SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs. The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering. Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods. In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm. We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value. However, the cost of Online SVMs turns out to be prohibitive for largescale applications. These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them. We use the following notation to describe SVMs, which draws from [23]. A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example. In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively. The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi. Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23]. These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks. Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features. This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis. Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification. Training SVMs, however, typically takes O(n2 ) time, for n training examples. A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode. That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data. Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally. Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example. Online learning allows a deployed system to adapt itself in a changing environment. Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive. However, using an old hypothesis as the starting point for re-training reduces this cost considerably. One method of incremental and decremental SVM learning was proposed in [2]. Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16]. Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point. Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23]. We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis. Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information. However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9]. Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples. Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters. An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters. Note that n-grams may include whitespace, and are overlapping. We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9]. We normalize the vectors with the Euclidean norm. Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string. For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given. No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error. Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features. Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4]. Following standard machine learning practice, we tuned C on separate tuning data not used for later testing. We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set. For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000. We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}. We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments. Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure. The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1. For the remainder of our experiments with SVMs in this paper, we set C = 100. We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam. Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets. Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation. We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection. We used two large benchmark data sets of email spam as our test corpora. These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.) We used the canonical ordering provided with each of these data sets for fair comparison. Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1. To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent. This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another. These results show that Online SVMs do give state of the art performance on email spam. The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19]. To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21]. However, large benchmark data sets of labeled blog comment spam do not yet exist. Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for Splog vs. Blog Detection using SVMs and Leave One Out Cross Validation. We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21]. Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14]. We use the parameter setting C = 100, with the same feature space mappings as above. We report accuracy, precision, and recall to compare these to the results given on the same data set by [21]. These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data. However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs. The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.) They also tested several domain-informed feature mappings, such as giving special features to url tags. For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100. As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data. The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds. These times do not include the time spent mapping strings to feature vectors. The number of examples in each data set is given in the last row as corpus size. A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error. This corresponds to setting C to a low value. Hyperplane B accepts a smaller margin in order to reduce training error. This corresponds to setting C to a high value. Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering. However, this performance comes at a price. Although the blog comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost. Table 4 shows computation time versus data set size for each of the online learning tasks (on same system). The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host. In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3. RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space. Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples. However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3). Thus, while SVMs do create high performance spam filters, applying them in practice is overkill. The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost. We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem. As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost. Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows. We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code). Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8]. This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed. This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past. Formally, the optimization problem is now defined most clearly in the dual form [23]. In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p). Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.) This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example. Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1. If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step. The number of re-training updates can be reduced by relaxing the definition of well classified. An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1. Here, each update still produces an optimal hyperplane. The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining. This update procedure is similar to that used by variants of the Perceptron algorithm [18]. In the extreme case, we can set M = 0, which creates a mistake driven Online SVM. In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function. SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22]. Successive iterations of this loop bring the hyperplane closer to an optimal value. However, it is possible that these iterations provide less benefit than their expense justifies. That is, a close first approximation may be good enough. We introduce a parameter T to control the maximum number of iterations we allow. As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4. EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost. In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost. In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods. We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost. Our main tests on content-based spam detection are performed on large benchmark sets of email data. We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec. Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates. Each of these approaches relax the maximum margin criteria on the global set of previously seen data. Here we test the effect that each of these methods has on both effectiveness and efficiency. In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section. For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100. We test a range of values p in a coarse grid search. Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom). The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly. However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost. These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs. Ordinarily, the training time would grow quadratically with the number of seen examples. However, fixing a value of p ensures that the training time is independent of the size of the data set. Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec. Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations. Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}. Other parameters were identical to the original Online SVM tests. The results on this test were surprisingly stable (see Figure 6). Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed. This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal. These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates. As noted before, when M = 1, the hyperplane is globally optimal at every step. Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent. We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.) The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency. Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec. M trec05p-1 trec06p Figure 7: Reduced Updates Tests. M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and splog detection tasks. These experiments show comparable performance on these tasks, at radically different costs. In the previous section, the effect of the different relaxation methods was tested separately. Here, we tested these methods together to create a full implementation of ROSVM. We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks. Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost. The splog and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems. Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and splog detection. For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering. We randomly ordered both the blog comment spam corpus and the splog corpus to create online learning tasks. Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable. However, this experimental design Table 5: Email Spam Benchmark Data. These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space. Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam. These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space. Acc. Prec. Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks. We ran each method on each task, and report the results in Tables 5, 6, and 7. Note that the CPU time reported for each method was generated on the same computing system. This time reflects only the time needed to complete online learning on tokenized data. We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task. In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways. First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods. Second, they show a dramatic disparity in computational cost. ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results. Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs. Note the blog and splog data sets are relatively small, and results on these data sets must be considered preliminary. Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam. ROSVMs offer a far cheaper alternative with little or no performance loss. 5. CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web. We have presented one resolution to this debate. Online SVMs do, indeed, proTable 7: Splog Data Set. These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space. Acc. Prec. Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set. The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task. Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results. These methods are efficient enough for large-scale filtering of contentbased spam in its many forms. It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM. After all, not all data allows the relaxation of SVM requirements. We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam. These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection. Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance. It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin. Future work will determine how applicable relaxed SVMs are to the general problem of text classification. Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change. Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack. While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6. REFERENCES [1] A. Bratko and B. Filipic. Spam filtering using compression models. Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio. Incremental and decremental support vector machine learning. In NIPS, pages 409-415, 2000. [3] G. V. Cormack. TREC 2006 spam track overview. In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko. Batch and on-line spam filter comparison. In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam. TREC 2005 spam track overview. In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam. On-line supervised spam filter evaluation. Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor. An introduction to support vector machines. Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff. Alpha seeding for support vector machines. In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu. Support vector machines for spam categorization. IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin. Online discriminative spam filter training. In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham. A plan for spam. 2002. [12] P. Graham. Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina. Spam: Its not just for inboxes anymore. Computer, 38(10):28-34, 2005. [14] T. Joachims. Text categorization with suport vector machines: Learning with many relevant features. In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims. Training linear svms in linear time. In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson. Online learning with kernels. In Advances in Neural Information Processing Systems 14, pages 785-793. MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi. SVMs for the blogosphere: Blog identification and splog detection. AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard. Learning algorithms with optimal stability in neural networks. Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton. On-line spam filter fusion. In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras. Spam filtering with naive bayes - which naive bayes? Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel. Blocking blog spam with language model disagreement. Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt. Sequenital minimal optimization: A fast algorithm for training support vector machines. In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning. MIT Press, 1998. [23] B. Scholkopf and A. Smola. Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond. MIT Press, 2001. [24] G. L. Wittel and S. F. Wu. On attacking statistical spam filters. CEAS: First Conference on Email and Anti-Spam, 2004.",
    "original_translation": "SVMS en línea relajados para el filtrado de spam D. Sculley Tufts University Departamento de Ciencias de la Computación 161 College Ave., Medford, MA USA DSCulleycs.tufts.edu Gabriel M. Wachman Tufts University Departamento de Ciencias de la Computación 161 College Ave., Medford, MA Gwachm01cs.Tufts.Edu Abstract Spam es un problema clave en la comunicación electrónica, incluidos los sistemas de correo electrónico a gran escala y el creciente número de blogs. El filtrado basado en el contenido es un método confiable para combatir esta amenaza en sus diversas formas, pero algunos investigadores académicos y profesionales industriales no están de acuerdo sobre la mejor manera de filtrar el spam. Los primeros han abogado por el uso de máquinas de vectores de soporte (SVM) para el filtrado basado en el contenido, ya que esta metodología de aprendizaje automático ofrece un rendimiento de última generación para la clasificación de texto. Sin embargo, aún no se han demostrado ganancias de rendimiento similares para el filtrado de spam en línea. Además, los profesionales citan el alto costo de las SVM como razón para preferir métodos bayesianos más rápidos (aunque menos estadísticamente robustos). En este artículo, ofrecemos una resolución a esta controversia. Primero, mostramos que los SVM en línea de hecho brindan un rendimiento de clasificación de última generación en el filtrado de spam en línea en grandes conjuntos de datos de referencia. En segundo lugar, mostramos que un rendimiento casi equivalente puede lograrse mediante un SVM en línea relajado (ROSVM) a un costo computacional muy reducido. Nuestros resultados se verifican experimentalmente en el correo electrónico spam, el spam de blog y las tareas de detección de Splog. Categorías y descriptores de sujetos H.3.3 [Algoritmos 1 de almacenamiento y recuperación de información]: Búsqueda y recuperación de información - Medición de términos generales de spam, experimentación, algoritmos 1. Introducción La comunicación electrónica está cada vez más plagada de contenido no deseado o dañino conocido como spam. La forma más conocida de spam es el correo electrónico spam, que sigue siendo un problema importante para los grandes sistemas de correo electrónico. Otras formas de spam también se están volviendo problemáticas, incluido el spam del blog, en el que los spammers publican comentarios no deseados en los blogs [21], y Splogs, que son blogs falsos construidos para permitir el enlace spam con la esperanza de aumentar la importancia medida de una página web dada enLos ojos de los motores de búsqueda automatizados [17]. Existen una variedad de métodos para identificar estas muchas formas de spam, incluida la compilación de listas negras de spammers conocidos y realizar análisis de enlaces. El enfoque del análisis de contenido ha mostrado una promesa y generalidad particular para combatir el spam. En el análisis de contenido, el texto del mensaje real (a menudo incluye hiper-texto y meta-texto, como HTML y encabezados) se analiza utilizando técnicas de aprendizaje automático para la clasificación de texto para determinar si el contenido dado es spam. El análisis de contenido se ha aplicado ampliamente al detectar el correo electrónico spam [11], y también se ha utilizado para identificar el spam del blog [21] y Splogs [17]. En este documento, no exploramos el problema relacionado del spam de enlace, que actualmente se combina mejor mediante análisis de enlaces [13].1.1 Una controversia anti-Spama La comunidad anti-Spama se ha dividido en la elección del mejor método de aprendizaje automático para la detección de spam basada en el contenido. Los investigadores académicos han tendido a favorecer el uso de Máquinas de vectores de soporte (SVM), un método de aprendizaje automático estadísticamente robusto [7] que produce el rendimiento del estado de la clasificación de texto general [14]. Sin embargo, las SVM generalmente requieren un tiempo de entrenamiento cuadrático en el número de ejemplos de capacitación, y no son prácticos para los sistemas de correo electrónico a gran escala. Los profesionales que requieren filtrado de spam basado en el contenido generalmente han elegido usar el método de aprendizaje automático más rápido (aunque menos robusto) de la clasificación de texto de Naive Bayes [11, 12, 20]. Este método bayesiano solo requiere tiempo de capacitación lineal, y se implementa fácilmente en un entorno en línea con actualizaciones incrementales. Esto permite que un sistema implementado se adapte fácilmente a un entorno cambiante con el tiempo. Otros métodos rápidos para el filtrado de spam incluyen modelos de compresión [1] y regresión logística [10]. Todavía no se ha demostrado empíricamente que las SVM brindan un rendimiento mejorado sobre estos métodos en una configuración de detección de spam en línea [4].1.2 Contribuciones En este documento, abordamos la controversia contra el SPAM y ofrecemos una resolución potencial. Primero demostramos que los SVM en línea de hecho proporcionan detección de spam de última generación a través de pruebas empíricas en varios conjuntos de datos de referencia grandes de correo no deseado. Luego analizamos el efecto del parámetro de compensación en la función objetivo SVM, que muestra que la costosa metodología SVM puede, de hecho, ser exagerada para la detección de spam. Reducimos el costo computacional del aprendizaje SVM relajando este requisito en el margen máximo en la configuración en línea, y creamos un SVM en línea relajado, ROSVM, apropiado para el filtrado de spam basado en el contenido de alto rendimiento en entornos a gran escala.2. SPAM y SVM en línea La controversia entre académicos y profesionales en el filtrado de spam se centra en el uso de SVM. Los primeros abogan por su uso, pero aún no han demostrado un fuerte rendimiento con los SVM en el filtrado de spam en línea. De hecho, los resultados de [4] muestran que, cuando se usan con parámetros predeterminados, los SVM en realidad funcionan peor que otros métodos. En esta sección, revisamos el funcionamiento básico de las SVM y describimos un algoritmo SVM en línea simple. Luego mostramos que las SVM en línea de hecho logran un rendimiento de última generación en el filtrado de spam por correo electrónico, spam de comentarios de blog y SPLOG, siempre que el parámetro C de compensación C esté establecido en un alto valor. Sin embargo, el costo de las estafas en línea resulta ser prohibitiva para aplicaciones a gran escala. Estos hallazgos motivan nuestra propuesta de SVM en línea relajados en la siguiente sección.2.1 Antecedentes: SVMS SVMS es una metodología de aprendizaje automático robusto que se ha demostrado que produce un rendimiento de última generación en la clasificación de texto [14].Al encontrar un hiperplano que separe dos clases de datos en el espacio de datos al tiempo que maximiza el margen entre ellos. Utilizamos la siguiente notación para describir SVMS, que se basa en [23]. Un conjunto de datos X contiene n vectores de ejemplo etiquetados {(x1, y1)...(xn, yn)}, donde cada Xi es un vector que contiene características que describe el ejemplo I, y cada Yi es la etiqueta de clase para ese ejemplo. En la detección de spam, a las clases de spam y jamón (es decir, no spam) se les asigna las etiquetas de clase numérica +1 y −1, respectivamente. Los SVM lineales que empleamos en este documento usan un vector de hipótesis W y BIAS Término B para clasificar un nuevo ejemplo X, generando una etiqueta de clase predicha F (x): f (x) = signo (<w, x> +b)SVMS Encuentre la hipótesis W, que define el hiperplano de separación, minimizando la siguiente función objetivo sobre todos los n ejemplos de entrenamiento: τ (w, ξ) = 1 2 || w || 2 + c nx i = i ξi bajo las limitaciones que∀i = {1..n}: yi (<w, xi> +b) ≥ 1 - ξi, ξi ≥ 0 En esta función objetivo, cada variable floja ξi muestra la cantidad de error que el clasificador hace en un ejemplo dadoxi. Minimizar la suma de las variables flojas corresponde a minimizar la función de pérdida en los datos de entrenamiento, mientras que minimizar el término 1 2 || w || 2 corresponde a maximizar el margen entre las dos clases [23]. Estos dos objetivos de optimización a menudo están en conflicto;El parámetro de compensación C determina cuánta importancia dar cada una de estas tareas. SVMS lineal explota la escasez de datos para clasificar una nueva instancia en el tiempo O (S), donde S es el número de características distintas de cero. Este es el mismo tiempo de clasificación que otro lineal dado: conjunto de datos x = (x1, y1) ,..., (xn, yn), c, m: inicializar w: = 0, b: = 0, seendata: = {} para cada xi ∈ X do: clasificar xi usando f (xi) = signo (<w, xi> +b) Si yif (xi) <1 encuentra w, b usando Smo en Seendata, usando W, B como hipótesis de semillas. Agregue Xi a SEENDATA realizado Figura 1: Pseudo Código para SVM en línea.clasificadores, y como clasificación bayesiana ingenua. La capacitación de SVM, sin embargo, generalmente lleva el tiempo O (N2), para N ejemplos de capacitación. Recientemente se propuso una variante para las SVM lineales en qué trenes en el tiempo O (NS) [15], pero debido a que este método tiene una constante alta, no lo exploramos aquí.2.2 SVM en línea En muchas aplicaciones tradicionales de aprendizaje automático, los SVM se aplican en modo por lotes. Es decir, un SVM está entrenado en un conjunto completo de datos de entrenamiento, y luego se prueba en un conjunto separado de datos de prueba. El filtrado de spam generalmente se prueba e implementa en una configuración en línea, que procede de forma incremental. Aquí, el alumno clasifica un nuevo ejemplo, se dice si su predicción es correcta, actualiza su hipótesis en consecuencia y luego espera un nuevo ejemplo. El aprendizaje en línea permite que un sistema implementado se adapte en un entorno cambiante. Re-capitando un SVM desde cero en todo el conjunto de datos vistos anteriormente para cada nuevo ejemplo es el costo prohibitivo. Sin embargo, el uso de una hipótesis antigua como punto de partida para volver a capacitar reduce este costo considerablemente. Se propuso un método de aprendizaje SVM incremental y decremental en [2]. Debido a que solo nos preocupa el aprendizaje incremental, aplicamos un algoritmo más simple para convertir un alumno de SVM por lotes en un SVM en línea (ver Figura 1 para el pseudocódigo), que es similar al enfoque de [16]. Cada vez que el SVM en línea se encuentra con un ejemplo que estaba mal clasificado, se vuelve a conectar con la antigua hipótesis como punto de partida. Tenga en cuenta que debido a las condiciones de Karush-Kuhn-Tucker (KKT), no es necesario volver a entrenar en ejemplos bien clasificados que están fuera de los márgenes [23]. Utilizamos el algoritmo SMO PLATTS [22] como un solucionador SVM central, ya que es un método iterativo que es adecuado para converger rápidamente de una buena hipótesis inicial. Debido a que el trabajo previo (y nuestras propias pruebas iniciales) indica que los valores de características binarias dan los mejores resultados para el filtrado de spam [20, 9], optimizamos nuestra implementación de la SMO en línea para explotar los productos internos rápidos con vectores binarios.1 2.3 Mapeo de características Contenido de spam Extracción de las características de aprendizaje automático del texto se pueden hacer de varias maneras, especialmente cuando ese texto puede incluir hipercontente y meta-contenido, como HTML y información de encabezado. Sin embargo, investigaciones anteriores han demostrado que los métodos simples de la clasificación de texto, como los vectores de palabras y las n-gramos superpuestas a nivel de caracteres, pueden lograr resultados fuertes [9]. Formalmente, una bolsa de palabras vector es un vector X con una dimensión única para cada uno posible 1 nuestro código fuente está disponible gratuitamente en www.cs.tufts.edu/∼dsculley/onlinesmo.1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCAREA C 2 gramos 3 gramos 4 gramos Palabras Figura 2: Ajustar el parámetro de compensación C. Las pruebas se realizaron con SMO en línea, utilizando vectores de características binarias, en el conjunto de datos de Spamassin del conjunto de datos de spamassin del conjunto de datos de spamassin del conjunto de datos de spamassin de6034 ejemplos. Gráficos gráficos C versus área debajo de la curva ROC.Palabra, definida como una subcadena contigua de caracteres no blancos. Un vector N-Gram es un vector X con una dimensión única para cada posible subcadena de N Total caracteres. Tenga en cuenta que los N-Grams pueden incluir espacios en blanco y se superponen. Utilizamos la puntuación de características binarias, que se ha demostrado que es más efectiva para una variedad de métodos de detección de spam [20, 9]. Normalizamos los vectores con la norma euclidiana. Además, con los datos de correo electrónico, reducimos el impacto de los mensajes largos (por ejemplo, con archivos adjuntos) considerando solo los primeros 3.000 caracteres de cada cadena. Para los comentarios del blog y Splogs, consideramos todo el texto, incluidos cualquier meta-datos, como etiquetas HTML, como se indica. No se utilizó otra selección de características o conocimiento del dominio.2.4 Ajuste del parámetro de compensación, c El parámetro de compensación SVM C debe ajustarse para equilibrar los objetivos (potencialmente conflictivos) de maximizar el margen y minimizar el error de entrenamiento. El trabajo temprano en la detección de spam basada en SVM [9] mostró que los valores altos de C dan el mejor rendimiento con las características binarias. El trabajo posterior no siempre ha seguido este plomo: se usó una configuración (baja) predeterminada de C en la detección de SPLOG [17], y también en correo no deseado [4]. Después de la práctica estándar de aprendizaje automático, sintonizamos C en datos de sintonización separados que no se usan para pruebas posteriores. Utilizamos el conjunto de datos de spam de correo electrónico de SpamassAnsin disponibles públicamente y creamos una tarea de aprendizaje en línea intercalando aleatoriamente todos los mensajes etiquetados 6034 para crear un solo conjunto ordenado. Para el ajuste, realizamos una búsqueda de parámetros grueso para C usando poderes de diez de .0001 a 10000. Utilizamos el SVM en línea descrito anteriormente y probamos tanto los vectores de la bolsa binaria de las palabras y los vectores N-Gram con n = {2, 3, 4}. Utilizamos los primeros 3000 caracteres de cada mensaje, que incluía información de encabezado, cuerpo del correo electrónico y posiblemente archivos adjuntos. Después de la recomendación de [6], utilizamos el área bajo la curva ROC como nuestra medida de evaluación. Los resultados (ver Figura 2) están de acuerdo con [9]: hay una meseta de alto rendimiento lograda con todos los valores de C ≥ 10, y el rendimiento se degrada bruscamente con C <1. Para el resto de nuestros experimentos con SVM en este documento, establecemos C = 100. Volveremos a la observación de que los valores muy altos de C no degradan el rendimiento como soporte para la intuición de que las SVM relajadas deben funcionar bien en el spam. Tabla 1: Resultados para el filtrado de spam por correo electrónico con SVM en línea en conjuntos de datos de referencia. La puntuación reportada es (1-Roca)%, donde 0 es óptimo.TREC05P-1 TREC06P ONSVM: palabras 0.015 (.011-.022) 0.034 (.025-.046) 3 gramos 0.011 (.009-.015) 0.025 (.017-.035) 4 gramos 0.008 (.007-.011) 0.023 (.017-.032) SPAMPROBE 0.059 (.049-.071) 0.092 (.078-.110) Bogofilter 0.048 (.038-.062) 0.077 (.056-.105) TREC ganadores 0.019 (.015-.023) 0.054 (.034-.085) 53-confirmación 0.007 (.005-.008) 0.020 (.007-.050) Tabla 2: Resultados para la detección de spam de comentarios de blog usando SVMS y deje una validación cruzada. Reportamos las mismas medidas de rendimiento que en el trabajo anterior para una comparación significativa.precisión precisión recordar SVM C = 100: palabras 0.931 0.946 0.954 3 gramos 0.951 0.963 0.965 4 gramos 0.949 0.967 0.956 Mejor mejor método 0.83 0.874 0.874 2.5 Spam de correo electrónico y SVM en línea con C Añedado en un conjunto de ajuste separado, luego probamos el rendimiento del rendimientode SVM en línea en detección de spam. Utilizamos dos grandes conjuntos de datos de referencia de correo electrónico spam como nuestros corpus de prueba. Estos conjuntos de datos son el conjunto de datos públicos TREC 2005 TREC05P-1 de 92,189 mensajes, y los conjuntos de datos públicos TREC 2006, TREC06P, que contienen 37,822 mensajes en inglés.(No informamos nuestros fuertes resultados en el Corpus TREC06C de los mensajes chinos, ya que se han planteado preguntas sobre la validez de este conjunto de pruebas). Utilizamos el pedido canónico proporcionado con cada uno de estos conjuntos de datos para una comparación justa. Los resultados para estos experimentos, con la bolsa de vectores de palabras y los vectores N-Gram aparecen en la Tabla 1. Para comparar nuestros resultados con puntajes anteriores en estos conjuntos de datos, utilizamos la misma medida de% (1-ROCA) descrita en [6], que es menos el área bajo la curva ROC, expresada como un porcentaje. Esta medida muestra el porcentaje de posibilidades de error cometido por un clasificador que afirma que es más probable que un mensaje sea spam que otro. Estos resultados muestran que los SVM en línea brindan una actuación de última generación en el correo electrónico spam. El único sistema conocido que supera los SVM en línea en el conjunto de datos TREC05P-1 es un clasificador de conjunto reciente que combina los resultados de 53 filtros de spam únicos [19]. Hasta donde sabemos, el SVM en línea ha superado a cualquier otro filtro único en estos conjuntos de datos, incluidos los que usan métodos bayesianos [5, 3], modelos de compresión [5, 3], regresión logística [10] y variantes de perceptrones [3], los ganadores de la competencia TREC [5, 3], y los filtros de correo electrónico de código abierto de código abierto Bogofilter V1.1.5 y SPAMProbe v1.4d.2.6 Comentarios del blog Spam y SVMS Comment Spam es similar al correo no deseado por correo electrónico en muchos aspectos, y se han propuesto métodos basados en contenido para detectar estos comentarios de spam [21]. Sin embargo, los grandes conjuntos de datos de referencia de los comentarios de blog etiquetados no existen spam. Por lo tanto, ejecutamos experimentos en el único conjunto de datos disponible públicamente que conocemos, que se utilizó en el blog basado en contenido Tabla 3: Resultados para Splog vs. Detección de blogs usando SVMS y deja una validación cruzada. Reportamos las mismas medidas de evaluación que en el trabajo anterior para una comparación significativa.Características RECUERDO DE PRECISIÓN F1 SVM C = 100: Palabras 0.921 0.870 0.895 3 gramos 0.904 0.866 0.885 4 gramos 0.928 0.876 0.901 SVM previo con: palabras 0.887 0.864 0.875 4 gramos 0.867 0.844 0.855 palabras+urls 0.893 0.869[21]. Debido al pequeño tamaño del conjunto de datos, y debido a que los investigadores anteriores no realizaron sus experimentos en un entorno en línea, probamos el rendimiento de las SVM lineales utilizando la validación cruzada de licencia, con SVM-Light, un estándar abierto-Source SVM Implementación [14]. Usamos la configuración de parámetros C = 100, con las mismas asignaciones de espacio de características que las anteriores. Reportamos precisión, precisión y recuerdo para compararlos con los resultados dados en los mismos datos establecidos por [21]. Estos resultados (ver Tabla 2) muestran que los SVM dan un rendimiento superior en este conjunto de datos en la metodología anterior.2.7 Splogs y SVMS Al igual que con el spam de comentarios del blog, aún no hay un gran corpus de referencia disponible públicamente de datos de prueba de detección Splog etiquetados. Sin embargo, los autores de [17] nos proporcionaron amablemente el conjunto de datos etiquetado de 1.389 blogs y SPLOG que usaron para probar la detección de SPLOG basada en el contenido utilizando SVM. La única diferencia entre nuestra metodología y la de [17] es que utilizaron los parámetros predeterminados para C, que SVM-Light establece en 1 AVG || x || 2.(Para vectores normalizados, este valor predeterminado se establece c = 1.) También probaron varias asignaciones de características informadas por el dominio, como dar características especiales a las etiquetas de URL. Para nuestros experimentos, utilizamos las mismas asignaciones de características que anteriormente, y probamos el efecto de establecer C = 100. Al igual que con la metodología de [17], realizamos una validación cruzada de dejar uno para la comparación de manzanas a manzanas en estos datos. Los resultados (ver Tabla 3) muestran que un alto valor de C produce un mayor rendimiento para las mismas asignaciones de espacio de características, e incluso permite que el mapeo simple de 4 gramos supera el mejor mapeo anterior que incorporó el conocimiento del dominio mediante el uso de palabras y URL..2.8 Costo computacional Los resultados presentados en esta sección demuestran que LinFeatures TREC06P TREC05P-1 Palabras 12196S 66478S 3-Grams 44605S 128924S 4-Grams 87519s 242160S Corpus Size 32822 92189 Tabla 4: Tiempo de ejecución en línea para SVMS en línea SEPS SEPM Detections. Estos tiempos no incluyen el tiempo dedicado a las cadenas de mapeo para presentar vectores. El número de ejemplos en cada conjunto de datos se da en la última fila como tamaño del corpus. A B Figura 3: Visualizar el efecto del hiperplano de C. A maximiza el margen mientras acepta una pequeña cantidad de error de entrenamiento. Esto corresponde a establecer C a un valor bajo. El hiperplano B acepta un margen más pequeño para reducir el error de entrenamiento. Esto corresponde a establecer C a un valor alto. El filtrado de spam basado en el contenido parece funcionar mejor con altos valores de C. SVM de EAR brinda un rendimiento de última generación en el filtrado de spam basado en el contenido. Sin embargo, este rendimiento tiene un precio. Aunque los conjuntos de datos de Spam y Splog de comentarios del blog son demasiado pequeños para que el tiempo de entrenamiento cuadrático de SVMS parezca problemático, los conjuntos de datos de correo electrónico son lo suficientemente grandes como para ilustrar los problemas del costo de entrenamiento cuadrático. La Tabla 4 muestra el tiempo de cálculo versus el tamaño del conjunto de datos para cada una de las tareas de aprendizaje en línea (en el mismo sistema). El costo de capacitación de SVM es prohibitivo para la detección de spam basada en contenido a gran escala, o un gran anfitrión de blogs. En la siguiente sección, reducimos este costo relajando los costosos requisitos de las SVM.3. SVMS en línea relajado (ROSVM) Uno de los principales beneficios de las SVM es que encuentran un hiperplano de decisión que maximiza el margen entre las clases en el espacio de datos. Maximizar el margen es costoso, que generalmente requiere un tiempo de entrenamiento cuadrático en el número de ejemplos de entrenamiento. Sin embargo, como vimos en la sección anterior, la tarea de detección de spam basada en el contenido se logra mejor mediante SVM con un alto valor de C. establecer C a un alto valor para este dominio implica que minimizar la pérdida de entrenamiento es más importante que maximizar elmargen (ver Figura 3). Por lo tanto, mientras que los SVM crean filtros de spam de alto rendimiento, aplicarlos en la práctica es exagerado. La característica de maximización del margen completo que proporcionan es innecesaria, y relajar este requisito puede reducir el costo computacional. Proponemos tres formas de relajar las SVM en línea: • Reduzca el tamaño del problema de optimización solo optimizando en los últimos ejemplos de P.• Reduzca el número de actualizaciones de capacitación solo en capacitación en errores reales.• Reduzca el número de iteraciones en la SVM iterativa dada: conjunto de datos x = (x1, y1) ,..., (xn, yn), c, m, p: inicializar w: = 0, b: = 0, seendata: = {} para cada xi ∈ X do: clasificar xi usando f (xi) = signo (<w, xi> +b) Si yif (xi) <m encuentra w, b con Smo en seendata, usando w, b como hipótesis de semillas.Establecer (W, B): = (W, B) If Size (Seendata)> P Eliminar el ejemplo más antiguo de Seendata Agregar Xi a Seendata realizado Figura 4: Pseudo-código para SVM en línea relajado.solucionador permitiendo una solución aproximada al problema de optimización. Como describimos en el resto de esta subsección, todos estos métodos intercambian robustez estadística por un costo computacional reducido. Los resultados experimentales informados en la siguiente sección muestran que equivalen o abordan el rendimiento de las SVM en línea completas en la detección de spam basada en el contenido.3.1 Reducción del tamaño del problema En los SVM en línea completos, re-óptimos en el conjunto completo de datos vistos en cada actualización, que se vuelve costosa a medida que crece el número de puntos de datos vistos. Podemos limitar este gasto solo considerando los ejemplos más recientes para la optimización (consulte la Figura 4 para el pseudo-código). Tenga en cuenta que esto no es equivalente a capacitar a un nuevo clasificador SVM desde cero en los ejemplos más recientes de P, porque cada problema de optimización sucesivo se sembra con la hipótesis anterior W [8]. Esta hipótesis puede contener valores para características que no ocurren en ningún lugar de los ejemplos más recientes, y estos no se cambiarán. Esto permite que la hipótesis recuerde características raras (pero informativas) que se aprendieron más allá de los ejemplos de P en el pasado. Formalmente, el problema de optimización ahora se define más claramente en la forma dual [23]. En este caso, el SVM original SoftMargin se calcula maximizando en el ejemplo n: w (α) = nx i = 1 αi - 1 2 nx I, j = 1 αiαjyiyj <xi, xj>, sujeto a las restricciones anteriores [23]: ∀i ∈ {1 ,..., n}: 0 ≤ αi ≤ c y nx i = 1 αiyi = 0 A esto, agregamos la restricción de búfer de retroceso adicional ∀j ∈ {1 ,..., (n - p)}: αJ = CJ donde CJ es una constante, fijada como el último valor encontrado para αJ mientras j> (n - p). Por lo tanto, no se garantiza que el margen encontrado por una optimización sea uno que maximice el margen para el conjunto de datos globales de ejemplos {x1 ,..., xn)}, pero más bien uno que satisfaga un requisito relajado de que el margen se maximice sobre los ejemplos {x (n - p+1) ,..., xn}, sujeto a las restricciones fijas en el hiperplano que se encontraron en optimizaciones anteriores sobre ejemplos {x1 ,..., x (n - p)}.(Para completar, cuando p ≥ n, defina (n - p) = 1.) Este conjunto de restricciones reduce el número de variables libres en el problema de optimización, reduciendo el costo computacional.3.2 Reducción del número de actualizaciones Como se señaló anteriormente, las condiciones de KKT muestran que un ejemplo bien clasificado no cambiará la hipótesis;Por lo tanto, no es necesario volver a entrenar cuando encontramos tal ejemplo. Según las condiciones de KKT, un ejemplo Xi se considera bien clasificado cuando YIF (xi)> 1. Si volvemos a entrenar en cada ejemplo que no está bien clasificado, nuestro hiperplano se garantizará que sea óptimo en cada paso. El número de actualizaciones de re-entrenamiento se puede reducir relajando la definición de bien clasificado. Un ejemplo Xi ahora se considera bien clasificado cuando Yif (xi)> m, para unos 0 ≤ m ≤ 1. Aquí, cada actualización todavía produce un hiperplano óptimo. El alumno puede encontrar un ejemplo que se encuentra dentro de los márgenes, pero más lejos de los márgenes que M. Tal ejemplo significa que la hipótesis ya no es globalmente óptima para el conjunto de datos, pero se considera lo suficientemente bueno para el uso continuo sin reentrenamiento inmediato. Este procedimiento de actualización es similar al utilizado por las variantes del algoritmo Perceptron [18]. En el caso extremo, podemos establecer M = 0, lo que crea un SVM en línea impulsado por errores. En la sección experimental, mostramos que esta versión de SVM en línea, que se actualiza solo en errores reales, no degrada significativamente el rendimiento en la detección de spam basada en el contenido, pero reduce significativamente los costos.3.3 Reducción de iteraciones como solucionador iterativo, SMO realiza pases repetidos sobre el conjunto de datos para optimizar la función objetivo. SMO tiene un bucle principal, que puede alternarse entre pasar todo el conjunto de datos, o el conjunto activo más pequeño de vectores de soporte actual [22]. Las iteraciones sucesivas de este bucle acercan el hiperplano a un valor óptimo. Sin embargo, es posible que estas iteraciones proporcionen menos beneficio de lo que justifica sus gastos. Es decir, una primera aproximación cercana puede ser lo suficientemente buena. Introducimos un parámetro t para controlar el número máximo de iteraciones que permitimos. Como veremos en la sección experimental, este parámetro se puede establecer tan bajo como 1 con poco impacto en la calidad de los resultados, proporcionando ahorros computacionales.4. Experimentos En la Sección 2, argumentamos que el fuerte rendimiento en la detección de spam basada en el contenido con SVM con un alto valor de C muestra que los criterios de margen máximo son excesivos, incurrir en un costo computacional innecesario. En la Sección 3, propusimos ROSVM para abordar este problema, ya que ambos métodos intercambian garantías en el hiperplano de margen máximo a cambio de un costo computacional reducido. En esta sección, probamos estos métodos en los mismos conjuntos de datos de referencia para ver si estos métodos menos costosos pueden lograrse. Encontramos que ROSVM es capaz de lograr estos altos niveles de rendimiento con un costo muy reducido. Nuestras pruebas principales sobre la detección de spam basada en el contenido se realizan en grandes conjuntos de datos de referencia de datos de correo electrónico. Luego aplicamos estos métodos en los conjuntos de datos más pequeños de los comentarios de comentarios y blogs de comentarios, con un rendimiento similar.4.1 Pruebas de ROSVM En la Sección 3, propusimos tres enfoques para reducir el costo computacional de la SMO en línea: reduciendo el Prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-Roca) Tamaño del tampón TREC05P-1 TREC06P 0 50000 100000 150000200000 250000 10 100 1000 10000 100000 CPUSEC. Tamaño del búfer TREC05P-1 TREC06P Figura 5: Pruebas de tamaño reducido.Tamaño de LEM, reduciendo el número de iteraciones de optimización y reduciendo el número de actualizaciones de capacitación. Cada uno de estos enfoques relaja los criterios de margen máximo en el conjunto global de datos previamente vistos. Aquí probamos el efecto que cada uno de estos métodos tiene tanto en efectividad como en eficiencia. En cada una de estas pruebas, utilizamos los grandes conjuntos de datos de correo electrónico de referencia, TREC05P-1 y TREC06P.4.1.1 Pruebas de tamaño reducido para nuestra primera prueba ROSVM, experimentamos el efecto de reducir el tamaño del problema de optimización al considerar solo los ejemplos más recientes, como se describe en la sección anterior. Para esta prueba, utilizamos las mismas asignaciones de 4 gramos que para los experimentos de referencia en la Sección 2, con el mismo valor C = 100. Probamos un rango de valores P en una búsqueda de cuadrícula gruesa. La Figura 5 informa el efecto del tamaño del búfer P en relación con la medida de rendimiento (1-Roca)% (superior) y el número de segundos de CPU requeridos (abajo). Los resultados muestran que los valores de P <100 dan como resultado un rendimiento degradado, aunque se evalúan muy rápidamente. Sin embargo, los valores de P de 500 a 10,000 funcionan casi tan bien como la SMO en línea original (representada aquí como P = 100, 000), a un costo computacional dramáticamente reducido. Estos resultados son importantes para hacer que el rendimiento de última generación sea práctica de detección de spam basada en el contenido a gran escala con SVM en línea. Por lo general, el tiempo de entrenamiento crecería cuadráticamente con el número de ejemplos vistos. Sin embargo, arreglar un valor de P asegura que el tiempo de entrenamiento sea independiente del tamaño del conjunto de datos. Además, un búfer de apariencia permite que el filtro se ajuste a la deriva del concepto.0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% máximo de iteradores.TREC06P TREC05P-1 50000 100000 150000 200000 250000 10521 CPUSEC. Max iters.TREC06P TREC05P-1 Figura 6: Pruebas de iteraciones reducidas.4.1.2 Pruebas de reducción de iteraciones en la segunda prueba ROSVM, experimentamos reduciendo el número de iteraciones. Nuestras pruebas iniciales mostraron que el número máximo de iteraciones utilizadas por SMO en línea rara vez era mucho mayor que 10 en la detección de spam basada en el contenido;Así probamos valores de t = {1, 2, 5, ∞}. Otros parámetros fueron idénticos a las pruebas SVM en línea originales. Los resultados en esta prueba fueron sorprendentemente estables (ver Figura 6). Reducir el número máximo de iteraciones SMO por actualización no tuvo impacto esencialmente en el rendimiento de la clasificación, pero sí dio como resultado un aumento moderado en la velocidad. Esto sugiere que cualquier iteración adicional se gastan intentando encontrar mejoras en un hiperplano que ya esté muy cerca de óptimo. Estos resultados muestran que para la detección de spam basada en el contenido, podemos reducir el costo computacional al permitir una sola iteración SMO (es decir, t = 1) con un rendimiento efectivamente equivalente.4.1.3 Pruebas de actualizaciones reducidas para nuestro tercer experimento ROSVM, evaluamos el impacto de ajustar el parámetro M para reducir el número total de actualizaciones. Como se señaló anteriormente, cuando M = 1, el hiperplano es globalmente óptimo en cada paso. La reducción de M permite que un hiperplano ligeramente inconsistente persista hasta que encuentre un ejemplo para el cual es demasiado inconsistente. Probamos valores de M de 0 a 1, a incrementos de 0.1.(Tenga en cuenta que usamos P = 10000 para disminuir el costo de evaluar estas pruebas). Los resultados para estas pruebas aparecen en la Figura 7, y muestran que hay una ligera degradación en el rendimiento con valores reducidos de M, y que esta degradación en el rendimiento se acompaña de un aumento de la eficiencia. Valores de 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M TREC05P-1 TREC06P 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.6 0.8 1 Cpusec. M TREC05P-1 TREC06P Figura 7: Pruebas de actualizaciones reducidas. M> 0.7 Da un rendimiento efectivamente equivalente como M = 1, y aún reduce el costo.4.2 SVMS en línea y ROSVM ahora comparamos ROSVM con SVM en línea en el correo no deseado, spam de comentarios de blog y tareas de detección de Splog. Estos experimentos muestran un rendimiento comparable en estas tareas, a costos radicalmente diferentes. En la sección anterior, el efecto de los diferentes métodos de relajación se probó por separado. Aquí, probamos estos métodos juntos para crear una implementación completa de ROSVM. Elegimos los valores p = 10000, t = 1, m = 0.8 para las tareas de detección de spam por correo electrónico. Tenga en cuenta que estos valores de parámetros se seleccionaron como aquellos que permiten a ROSVM lograr resultados de rendimiento comparables con SVM en línea, para probar la diferencia total en el costo computacional. Los conjuntos de datos SPLOG y blog fueron mucho más pequeños, por lo que establecemos P = 100 para estas tareas para permitir comparaciones significativas entre el tamaño reducido y los problemas de optimización de tamaño completo. Debido a que estos valores no se ajustaron a mano, tanto el rendimiento de la generalización como los resultados del tiempo de ejecución son significativos en estos experimentos.4.2.1 Configuración experimental Comparamos SVM en línea y ROSVM en el correo electrónico spam, spam de comentarios de blog y detección de Splog. Para el correo electrónico spam, utilizamos los dos grandes corpus de referencia, TREC05P-1 y TREC06P, en el pedido estándar en línea. Ordenamos al azar tanto el blog Spam Corpus y el Corpus Splog para crear tareas de aprendizaje en línea. Tenga en cuenta que esta es una configuración diferente a la tarea de validación cruzada de licencia una presentada en estos corpus en la Sección 2: los resultados no son directamente comparables. Sin embargo, este diseño experimental Tabla 5: Datos de referencia de spam por correo electrónico. Estos resultados comparan SVM y ROSVM en línea en la detección de spam por correo electrónico, utilizando un espacio de características binarias de 4 gramos. La puntuación reportada es (1-Roca)%, donde 0 es óptimo.TREC05P-1 TREC05P-1 TREC06P TREC06P (1-ROC)% CPU (1-ROC)% CPU ONSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Tabla 6: Blog Comentario Spam. Estos resultados que comparan SVM y ROSVM en línea en la detección de spam de comentarios de comentarios de blog utilizando un espacio de características binarias de 4 gramos. Accado Prec. Recarga F1 CPU ONSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 permite una comparación significativa entre nuestros dos métodos en línea en estas tareas de detección de spam basadas en el contenido. Ejecutamos cada método en cada tarea e informamos los resultados en las Tablas 5, 6 y 7. Tenga en cuenta que el tiempo de CPU informado para cada método se generó en el mismo sistema informático. Esta vez refleja solo el tiempo necesario para completar el aprendizaje en línea en datos tokenizados. No informamos el tiempo necesario para tokenizar los datos en 4 gramos binarios, ya que esta es la misma constante aditiva para todos los métodos en cada tarea. En todos los casos, ROSVM fue significativamente menos costoso computacionalmente.4.3 Discusión Los resultados de comparación que se muestran en las Tablas 5, 6 y 7 son sorprendentes de dos maneras. Primero, muestran que el rendimiento de los SVM en línea puede ser igualado e incluso superado por métodos de margen relajado. En segundo lugar, muestran una disparidad dramática en el costo computacional. ROSVM es un orden de magnitud más eficiente que el SVM en línea normal, y ofrece resultados comparables. Además, el búfer fijo de retroceso asegura que el costo de cada actualización no dependa del tamaño del conjunto de datos ya visto, a diferencia de los SVM en línea. Tenga en cuenta que los conjuntos de datos del blog y Splog son relativamente pequeños, y los resultados en estos conjuntos de datos deben considerarse preliminares. En general, estos resultados muestran que no hay necesidad de pagar el alto costo de las SVM para lograr este nivel de rendimiento en la detección basada en el contenido de SPAM. Rosvms ofrece una alternativa mucho más barata con poca o ninguna pérdida de rendimiento.5. Conclusiones En el pasado, los investigadores académicos y los profesionales industriales no están de acuerdo sobre el mejor método para la detección de spam basada en el contenido en línea en la web. Hemos presentado una resolución a este debate. Los SVM en línea sí, de hecho, Protable 7: Splog Data Set. Estos resultados comparan SVM y ROSVM en línea en la detección de Splog utilizando un espacio de características binarias de 4 gramos. Accado Prec. Recuerde F1 CPU ONSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 Duce el rendimiento de vanguardia en esta tarea con un ajuste adecuado del parámetro C de compensación, pero con costo que crece cuadráticamente con el tamaño del establecimiento de datos. Los altos valores de C requeridos para el mejor rendimiento con SVM muestran que la maximización del margen de las SVM en línea es exagerada para esta tarea. Por lo tanto, hemos propuesto una alternativa menos costosa, ROSVM, que relaja este requisito de margen máximo y produce resultados casi equivalentes. Estos métodos son lo suficientemente eficientes para el filtrado a gran escala de spam basado en contenido en sus muchas formas. Es natural preguntar por qué la tarea de detección de spam basada en el contenido obtiene un fuerte rendimiento de ROSVM. Después de todo, no todos los datos permiten la relajación de los requisitos de SVM. Conjeturamos que el correo electrónico spam, el spam de comentarios del blog y SPLOG comparten la característica de que un subconjunto de características es particularmente indicativo de que el contenido es spam o no spam. Estas características indicativas pueden estar escasamente representadas en el conjunto de datos, debido a los métodos de spam, como la ofuscación de palabras, en la que las palabras spam comunes se escriben mal intencionalmente en un intento de reducir la efectividad de la detección de spam basada en palabras. Maximizar el margen puede hacer que estas características escasamente representadas se ignoren, creando una reducción general en el rendimiento. Parece que los datos de spam son altamente separables, lo que permite que ROSVM tenga éxito con altos valores de C y se dan poco esfuerzo para maximizar el margen. El trabajo futuro determinará cuán aplicables son las SVM relajadas para el problema general de la clasificación de texto. Finalmente, observamos que el éxito de los métodos SVM relajados para la detección de spam basada en el contenido es un resultado que depende de la naturaleza de los datos de spam, que está potencialmente sujeto a cambios. Aunque actualmente es cierto que el jamón y el spam son linealmente separables dado un espacio de características apropiado, esta suposición puede estar sujeta a ataque. Si bien nuestros métodos actuales parecen robustos contra ataques primitivos en este sentido, como el buen ataque de palabras [24], debemos explorar la viabilidad de ataques más sofisticados.6. Referencias [1] A. Bratko y B. Filipic. Filtrado de spam usando modelos de compresión. Informe técnico IJS-DP-9227, Departamento de Sistemas Inteligentes, Instituto Jozef Stefan, L Jobljana, Eslovenia, 2005. [2] G. Cauwenberghs y T. Poggio. Apoyo incremental y disminución de aprendizaje automático de vectores. En NIPS, páginas 409-415, 2000. [3] G. V. Cormack. Descripción general de la pista de spam TREC 2006. Aparecer en: La Decimocuarta Conferencia de Recuperación de Textos (TREC 2006) Actas, 2006. [4] G. V. Cormack y A. Bratko. Comparación de filtro de spam lotes y en línea. En Actas de la tercera conferencia sobre correo electrónico y anti-SPAM (CEAS), 2006. [5] G. V. Cormack y T. R. Lynam. Descripción general de la pista de spam TREC 2005. En la Decimocuarta Conferencia de Recuperación de Textos (TREC 2005) Actas, 2005. [6] G. V. Cormack y T. R. Lynam. Evaluación de filtro de spam supervisado en línea. Informe técnico, David R. Cheriton School of Computer Science, Universidad de Waterloo, Canadá, febrero de 2006. [7] N. Cristianini y J. Shawe-Taylor. Una introducción a las máquinas de vectores de soporte. Cambridge University Press, 2000. [8] D. Decoste y K. Wagstaff. Sembrado alfa para máquinas de vectores de soporte. En KDD 00: Actas de la Sexta Conferencia Internacional de ACM Sigkdd sobre descubrimiento de conocimiento y minería de datos, páginas 345-349, 2000. [9] H. Drucker, V. Vapnik y D. Wu. Máquinas de vectores de soporte para la categorización de spam. Transacciones IEEE en redes neuronales, 10 (5): 1048-1054, 1999. [10] J. Goodman y W. Yin. Capacitación de filtro de spam discriminativo en línea. En Actas de la tercera conferencia sobre correo electrónico y anti-Spama (CEAS), 2006. [11] P. Graham. Un plan para el spam.2002. [12] P. Graham. Mejor filtrado bayesiano.2003. [13] Z. Gyongi y H. García-Molina. SPAM: Ya no es solo para bandejas de entrada. Computadora, 38 (10): 28-34, 2005. [14] T. Joachims. Categorización de texto con máquinas vectoriales de soporte: aprendizaje con muchas características relevantes. En ECML 98: Actas de la décima Conferencia Europea sobre Aprendizaje Autor, páginas 137-142, 1998. [15] T. Joachims. Entrenamiento SVM lineal en tiempo lineal. En KDD 06: Actas de la 12ª Conferencia Internacional SIGKDD SIGKDD sobre descubrimiento de conocimiento y minería de datos, páginas 217-226, 2006. [16] J. Kivinen, A. Smola y R. Williamson. Aprendizaje en línea con núcleos. En Avances en Sistemas de Procesamiento de Información Neural 14, páginas 785-793. MIT Press, 2002. [17] P. Kolari, T. Finin y A. Joshi. SVMS para la blogósfera: identificación de blog y detección de Splog. Simposio de primavera AAAI sobre enfoques computacionales para analizar los weblogs, 2006. [18] W. Krauth y M. M´zard. Algoritmos de aprendizaje con estabilidad óptima en redes neuronales. Journal of Physics A, 20 (11): 745-752, 1987. [19] T. Lynam, G. Cormack y D. Cheriton. Fusión de filtro de spam en línea. En Sigir 06: Actas de la 29a Conferencia Internacional ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 123-130, 2006. [20] V. Metsis, I. Androutsopoulos y G. Paliouras. Filtrado de spam con Bayes ingenuos: ¿qué bayes ingenuos? Tercera conferencia sobre correo electrónico y anti-spam (CEAS), 2006. [21] G. Mishne, D. Carmel y R. Lempel. Bloqueo del spam del blog con desacuerdo del modelo de idioma. Actas del primer taller internacional sobre recuperación de información adversa en la web (AirWeb), mayo de 2005. [22] J. Platt. Optimización mínima secuencial: un algoritmo rápido para el entrenamiento de máquinas de vectores de soporte. En B. Scholkopf, C. Burges y A. Smola, editores, Avances en los métodos del núcleo - Apoyo al aprendizaje del vector. MIT Press, 1998. [23] B. Scholkopf y A. Smola. Aprendizaje con núcleos: soporte de máquinas vectoriales, regularización, optimización y más allá. MIT Press, 2001. [24] G. L. Wittel y S. F. Wu. Sobre atacar filtros de spam estadísticos. CEAS: Primera conferencia sobre correo electrónico y anti-Spama, 2004.",
    "original_sentences": [
        "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
        "Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
        "The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification.",
        "However, similar performance gains have yet to be demonstrated for online spam filtering.",
        "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
        "In this paper, we offer a resolution to this controversy.",
        "First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets.",
        "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
        "Our results are experimentally verified on email spam, blog spam, and splog detection tasks.",
        "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
        "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
        "The most well known form of spam is email spam, which remains a major problem for large email systems.",
        "Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
        "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.",
        "The approach of content analysis has shown particular promise and generality for combating spam.",
        "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam.",
        "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].",
        "In this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.",
        "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
        "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
        "Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
        "This Bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates.",
        "This allows a deployed system to easily adapt to a changing environment over time.",
        "Other fast methods for spam filtering include compression models [1] and logistic regression [10].",
        "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
        "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
        "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
        "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2.",
        "SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs.",
        "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering.",
        "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
        "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
        "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
        "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
        "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them.",
        "We use the following notation to describe SVMs, which draws from [23].",
        "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
        "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
        "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
        "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
        "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
        "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
        "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
        "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
        "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
        "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
        "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
        "Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally.",
        "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
        "Online learning allows a deployed system to adapt itself in a changing environment.",
        "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
        "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
        "One method of incremental and decremental SVM learning was proposed in [2].",
        "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
        "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
        "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
        "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
        "Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
        "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
        "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
        "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
        "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
        "Note that n-grams may include whitespace, and are overlapping.",
        "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
        "We normalize the vectors with the Euclidean norm.",
        "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
        "For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
        "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
        "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
        "Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4].",
        "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
        "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
        "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
        "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
        "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
        "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
        "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
        "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
        "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
        "Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets.",
        "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
        "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
        "We used two large benchmark data sets of email spam as our test corpora.",
        "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
        "We used the canonical ordering provided with each of these data sets for fair comparison.",
        "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
        "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
        "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
        "These results show that Online SVMs do give state of the art performance on email spam.",
        "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
        "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
        "However, large benchmark data sets of labeled blog comment spam do not yet exist.",
        "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for Splog vs. Blog Detection using SVMs and Leave One Out Cross Validation.",
        "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
        "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
        "We use the parameter setting C = 100, with the same feature space mappings as above.",
        "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
        "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data.",
        "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs.",
        "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
        "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
        "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
        "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
        "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
        "These times do not include the time spent mapping strings to feature vectors.",
        "The number of examples in each data set is given in the last row as corpus size.",
        "A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error.",
        "This corresponds to setting C to a low value.",
        "Hyperplane B accepts a smaller margin in order to reduce training error.",
        "This corresponds to setting C to a high value.",
        "Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering.",
        "However, this performance comes at a price.",
        "Although the blog comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
        "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
        "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host.",
        "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
        "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space.",
        "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
        "However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
        "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
        "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
        "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
        "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
        "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
        "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
        "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
        "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
        "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
        "Formally, the optimization problem is now defined most clearly in the dual form [23].",
        "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
        "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
        "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
        "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
        "If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step.",
        "The number of re-training updates can be reduced by relaxing the definition of well classified.",
        "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
        "Here, each update still produces an optimal hyperplane.",
        "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
        "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
        "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
        "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
        "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
        "Successive iterations of this loop bring the hyperplane closer to an optimal value.",
        "However, it is possible that these iterations provide less benefit than their expense justifies.",
        "That is, a close first approximation may be good enough.",
        "We introduce a parameter T to control the maximum number of iterations we allow.",
        "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
        "EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
        "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost.",
        "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
        "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
        "Our main tests on content-based spam detection are performed on large benchmark sets of email data.",
        "We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
        "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
        "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
        "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
        "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
        "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
        "We test a range of values p in a coarse grid search.",
        "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
        "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
        "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
        "These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs.",
        "Ordinarily, the training time would grow quadratically with the number of seen examples.",
        "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
        "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
        "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
        "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}.",
        "Other parameters were identical to the original Online SVM tests.",
        "The results on this test were surprisingly stable (see Figure 6).",
        "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
        "This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal.",
        "These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
        "As noted before, when M = 1, the hyperplane is globally optimal at every step.",
        "Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent.",
        "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
        "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
        "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
        "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
        "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and splog detection tasks.",
        "These experiments show comparable performance on these tasks, at radically different costs.",
        "In the previous section, the effect of the different relaxation methods was tested separately.",
        "Here, we tested these methods together to create a full implementation of ROSVM.",
        "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
        "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
        "The splog and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
        "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and splog detection.",
        "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
        "We randomly ordered both the blog comment spam corpus and the splog corpus to create online learning tasks.",
        "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
        "However, this experimental design Table 5: Email Spam Benchmark Data.",
        "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
        "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam.",
        "These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space.",
        "Acc.",
        "Prec.",
        "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks.",
        "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
        "Note that the CPU time reported for each method was generated on the same computing system.",
        "This time reflects only the time needed to complete online learning on tokenized data.",
        "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
        "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
        "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
        "Second, they show a dramatic disparity in computational cost.",
        "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
        "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
        "Note the blog and splog data sets are relatively small, and results on these data sets must be considered preliminary.",
        "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
        "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
        "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
        "We have presented one resolution to this debate.",
        "Online SVMs do, indeed, proTable 7: Splog Data Set.",
        "These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space.",
        "Acc.",
        "Prec.",
        "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
        "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
        "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
        "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
        "It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM.",
        "After all, not all data allows the relaxation of SVM requirements.",
        "We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
        "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
        "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
        "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
        "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
        "Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change.",
        "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
        "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
        "REFERENCES [1] A. Bratko and B. Filipic.",
        "Spam filtering using compression models.",
        "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
        "Incremental and decremental support vector machine learning.",
        "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
        "TREC 2006 spam track overview.",
        "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
        "Batch and on-line spam filter comparison.",
        "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
        "TREC 2005 spam track overview.",
        "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
        "On-line supervised spam filter evaluation.",
        "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
        "An introduction to support vector machines.",
        "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
        "Alpha seeding for support vector machines.",
        "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
        "Support vector machines for spam categorization.",
        "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
        "Online discriminative spam filter training.",
        "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
        "A plan for spam. 2002. [12] P. Graham.",
        "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
        "Spam: Its not just for inboxes anymore.",
        "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
        "Text categorization with suport vector machines: Learning with many relevant features.",
        "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
        "Training linear svms in linear time.",
        "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
        "Online learning with kernels.",
        "In Advances in Neural Information Processing Systems 14, pages 785-793.",
        "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
        "SVMs for the blogosphere: Blog identification and splog detection.",
        "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
        "Learning algorithms with optimal stability in neural networks.",
        "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
        "On-line spam filter fusion.",
        "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
        "Spam filtering with naive bayes - which naive bayes?",
        "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
        "Blocking blog spam with language model disagreement.",
        "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
        "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
        "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
        "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
        "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
        "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
        "On attacking statistical spam filters.",
        "CEAS: First Conference on Email and Anti-Spam, 2004."
    ],
    "error_count": 0,
    "keys": {
        "support vector machine": {
            "translated_key": "máquinas de vectores soporte",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
                "Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
                "The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification.",
                "However, similar performance gains have yet to be demonstrated for online spam filtering.",
                "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
                "In this paper, we offer a resolution to this controversy.",
                "First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets.",
                "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
                "Our results are experimentally verified on email spam, blog spam, and splog detection tasks.",
                "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
                "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
                "The most well known form of spam is email spam, which remains a major problem for large email systems.",
                "Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
                "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.",
                "The approach of content analysis has shown particular promise and generality for combating spam.",
                "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam.",
                "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].",
                "In this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.",
                "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
                "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
                "Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
                "This Bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates.",
                "This allows a deployed system to easily adapt to a changing environment over time.",
                "Other fast methods for spam filtering include compression models [1] and logistic regression [10].",
                "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
                "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
                "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
                "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2.",
                "SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs.",
                "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering.",
                "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
                "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
                "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
                "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
                "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them.",
                "We use the following notation to describe SVMs, which draws from [23].",
                "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
                "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
                "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
                "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
                "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
                "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
                "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
                "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
                "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
                "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
                "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
                "Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally.",
                "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
                "Online learning allows a deployed system to adapt itself in a changing environment.",
                "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
                "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
                "One method of incremental and decremental SVM learning was proposed in [2].",
                "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
                "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
                "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
                "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
                "Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
                "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
                "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
                "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
                "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
                "Note that n-grams may include whitespace, and are overlapping.",
                "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
                "We normalize the vectors with the Euclidean norm.",
                "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
                "For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
                "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
                "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
                "Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4].",
                "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
                "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
                "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
                "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
                "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
                "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
                "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
                "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
                "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
                "Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
                "We used two large benchmark data sets of email spam as our test corpora.",
                "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
                "We used the canonical ordering provided with each of these data sets for fair comparison.",
                "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
                "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
                "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
                "These results show that Online SVMs do give state of the art performance on email spam.",
                "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
                "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
                "However, large benchmark data sets of labeled blog comment spam do not yet exist.",
                "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for Splog vs. Blog Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
                "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
                "We use the parameter setting C = 100, with the same feature space mappings as above.",
                "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
                "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data.",
                "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs.",
                "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
                "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
                "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
                "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
                "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
                "These times do not include the time spent mapping strings to feature vectors.",
                "The number of examples in each data set is given in the last row as corpus size.",
                "A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error.",
                "This corresponds to setting C to a low value.",
                "Hyperplane B accepts a smaller margin in order to reduce training error.",
                "This corresponds to setting C to a high value.",
                "Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering.",
                "However, this performance comes at a price.",
                "Although the blog comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
                "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
                "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host.",
                "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
                "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space.",
                "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
                "However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
                "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
                "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
                "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
                "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
                "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
                "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
                "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
                "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
                "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
                "Formally, the optimization problem is now defined most clearly in the dual form [23].",
                "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
                "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
                "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
                "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
                "If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step.",
                "The number of re-training updates can be reduced by relaxing the definition of well classified.",
                "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
                "Here, each update still produces an optimal hyperplane.",
                "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
                "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
                "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
                "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
                "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
                "Successive iterations of this loop bring the hyperplane closer to an optimal value.",
                "However, it is possible that these iterations provide less benefit than their expense justifies.",
                "That is, a close first approximation may be good enough.",
                "We introduce a parameter T to control the maximum number of iterations we allow.",
                "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
                "EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
                "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost.",
                "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
                "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
                "Our main tests on content-based spam detection are performed on large benchmark sets of email data.",
                "We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
                "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
                "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
                "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
                "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
                "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
                "We test a range of values p in a coarse grid search.",
                "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
                "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
                "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
                "These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs.",
                "Ordinarily, the training time would grow quadratically with the number of seen examples.",
                "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
                "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
                "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
                "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}.",
                "Other parameters were identical to the original Online SVM tests.",
                "The results on this test were surprisingly stable (see Figure 6).",
                "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
                "This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal.",
                "These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
                "As noted before, when M = 1, the hyperplane is globally optimal at every step.",
                "Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent.",
                "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
                "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
                "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
                "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
                "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and splog detection tasks.",
                "These experiments show comparable performance on these tasks, at radically different costs.",
                "In the previous section, the effect of the different relaxation methods was tested separately.",
                "Here, we tested these methods together to create a full implementation of ROSVM.",
                "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
                "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
                "The splog and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
                "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and splog detection.",
                "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
                "We randomly ordered both the blog comment spam corpus and the splog corpus to create online learning tasks.",
                "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
                "However, this experimental design Table 5: Email Spam Benchmark Data.",
                "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam.",
                "These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks.",
                "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
                "Note that the CPU time reported for each method was generated on the same computing system.",
                "This time reflects only the time needed to complete online learning on tokenized data.",
                "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
                "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
                "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
                "Second, they show a dramatic disparity in computational cost.",
                "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
                "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
                "Note the blog and splog data sets are relatively small, and results on these data sets must be considered preliminary.",
                "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
                "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
                "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
                "We have presented one resolution to this debate.",
                "Online SVMs do, indeed, proTable 7: Splog Data Set.",
                "These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
                "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
                "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
                "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
                "It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM.",
                "After all, not all data allows the relaxation of SVM requirements.",
                "We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
                "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
                "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
                "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
                "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
                "Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change.",
                "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
                "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
                "REFERENCES [1] A. Bratko and B. Filipic.",
                "Spam filtering using compression models.",
                "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
                "Incremental and decremental <br>support vector machine</br> learning.",
                "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
                "TREC 2006 spam track overview.",
                "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
                "Batch and on-line spam filter comparison.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
                "TREC 2005 spam track overview.",
                "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
                "On-line supervised spam filter evaluation.",
                "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
                "An introduction to support vector machines.",
                "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
                "Alpha seeding for support vector machines.",
                "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
                "Support vector machines for spam categorization.",
                "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
                "Online discriminative spam filter training.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
                "A plan for spam. 2002. [12] P. Graham.",
                "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
                "Spam: Its not just for inboxes anymore.",
                "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
                "Text categorization with suport vector machines: Learning with many relevant features.",
                "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
                "Training linear svms in linear time.",
                "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
                "Online learning with kernels.",
                "In Advances in Neural Information Processing Systems 14, pages 785-793.",
                "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
                "SVMs for the blogosphere: Blog identification and splog detection.",
                "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
                "Learning algorithms with optimal stability in neural networks.",
                "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
                "On-line spam filter fusion.",
                "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
                "Spam filtering with naive bayes - which naive bayes?",
                "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
                "Blocking blog spam with language model disagreement.",
                "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
                "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
                "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
                "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
                "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
                "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
                "On attacking statistical spam filters.",
                "CEAS: First Conference on Email and Anti-Spam, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Aprendizaje incremental y decremental \"Máquina de vectores de soporte\"."
            ],
            "translated_text": "",
            "candidates": [
                "máquinas de vectores soporte",
                "Máquina de vectores de soporte"
            ],
            "error": []
        },
        "content-based filtering": {
            "translated_key": "filtrado basado en contenido",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
                "<br>content-based filtering</br> is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
                "The former have advocated the use of Support Vector Machines (SVMs) for <br>content-based filtering</br>, as this machine learning methodology gives state-of-the-art performance for text classification.",
                "However, similar performance gains have yet to be demonstrated for online spam filtering.",
                "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
                "In this paper, we offer a resolution to this controversy.",
                "First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets.",
                "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
                "Our results are experimentally verified on email spam, blog spam, and splog detection tasks.",
                "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
                "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
                "The most well known form of spam is email spam, which remains a major problem for large email systems.",
                "Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
                "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.",
                "The approach of content analysis has shown particular promise and generality for combating spam.",
                "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam.",
                "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].",
                "In this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.",
                "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
                "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
                "Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
                "This Bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates.",
                "This allows a deployed system to easily adapt to a changing environment over time.",
                "Other fast methods for spam filtering include compression models [1] and logistic regression [10].",
                "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
                "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
                "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
                "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2.",
                "SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs.",
                "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering.",
                "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
                "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
                "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
                "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
                "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them.",
                "We use the following notation to describe SVMs, which draws from [23].",
                "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
                "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
                "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
                "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
                "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
                "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
                "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
                "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
                "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
                "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
                "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
                "Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally.",
                "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
                "Online learning allows a deployed system to adapt itself in a changing environment.",
                "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
                "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
                "One method of incremental and decremental SVM learning was proposed in [2].",
                "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
                "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
                "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
                "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
                "Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
                "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
                "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
                "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
                "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
                "Note that n-grams may include whitespace, and are overlapping.",
                "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
                "We normalize the vectors with the Euclidean norm.",
                "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
                "For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
                "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
                "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
                "Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4].",
                "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
                "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
                "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
                "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
                "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
                "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
                "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
                "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
                "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
                "Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
                "We used two large benchmark data sets of email spam as our test corpora.",
                "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
                "We used the canonical ordering provided with each of these data sets for fair comparison.",
                "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
                "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
                "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
                "These results show that Online SVMs do give state of the art performance on email spam.",
                "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
                "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
                "However, large benchmark data sets of labeled blog comment spam do not yet exist.",
                "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for Splog vs. Blog Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
                "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
                "We use the parameter setting C = 100, with the same feature space mappings as above.",
                "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
                "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data.",
                "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs.",
                "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
                "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
                "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
                "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
                "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
                "These times do not include the time spent mapping strings to feature vectors.",
                "The number of examples in each data set is given in the last row as corpus size.",
                "A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error.",
                "This corresponds to setting C to a low value.",
                "Hyperplane B accepts a smaller margin in order to reduce training error.",
                "This corresponds to setting C to a high value.",
                "Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering.",
                "However, this performance comes at a price.",
                "Although the blog comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
                "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
                "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host.",
                "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
                "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space.",
                "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
                "However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
                "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
                "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
                "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
                "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
                "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
                "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
                "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
                "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
                "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
                "Formally, the optimization problem is now defined most clearly in the dual form [23].",
                "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
                "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
                "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
                "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
                "If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step.",
                "The number of re-training updates can be reduced by relaxing the definition of well classified.",
                "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
                "Here, each update still produces an optimal hyperplane.",
                "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
                "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
                "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
                "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
                "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
                "Successive iterations of this loop bring the hyperplane closer to an optimal value.",
                "However, it is possible that these iterations provide less benefit than their expense justifies.",
                "That is, a close first approximation may be good enough.",
                "We introduce a parameter T to control the maximum number of iterations we allow.",
                "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
                "EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
                "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost.",
                "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
                "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
                "Our main tests on content-based spam detection are performed on large benchmark sets of email data.",
                "We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
                "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
                "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
                "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
                "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
                "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
                "We test a range of values p in a coarse grid search.",
                "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
                "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
                "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
                "These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs.",
                "Ordinarily, the training time would grow quadratically with the number of seen examples.",
                "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
                "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
                "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
                "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}.",
                "Other parameters were identical to the original Online SVM tests.",
                "The results on this test were surprisingly stable (see Figure 6).",
                "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
                "This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal.",
                "These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
                "As noted before, when M = 1, the hyperplane is globally optimal at every step.",
                "Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent.",
                "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
                "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
                "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
                "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
                "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and splog detection tasks.",
                "These experiments show comparable performance on these tasks, at radically different costs.",
                "In the previous section, the effect of the different relaxation methods was tested separately.",
                "Here, we tested these methods together to create a full implementation of ROSVM.",
                "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
                "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
                "The splog and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
                "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and splog detection.",
                "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
                "We randomly ordered both the blog comment spam corpus and the splog corpus to create online learning tasks.",
                "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
                "However, this experimental design Table 5: Email Spam Benchmark Data.",
                "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam.",
                "These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks.",
                "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
                "Note that the CPU time reported for each method was generated on the same computing system.",
                "This time reflects only the time needed to complete online learning on tokenized data.",
                "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
                "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
                "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
                "Second, they show a dramatic disparity in computational cost.",
                "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
                "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
                "Note the blog and splog data sets are relatively small, and results on these data sets must be considered preliminary.",
                "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
                "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
                "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
                "We have presented one resolution to this debate.",
                "Online SVMs do, indeed, proTable 7: Splog Data Set.",
                "These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
                "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
                "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
                "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
                "It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM.",
                "After all, not all data allows the relaxation of SVM requirements.",
                "We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
                "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
                "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
                "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
                "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
                "Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change.",
                "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
                "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
                "REFERENCES [1] A. Bratko and B. Filipic.",
                "Spam filtering using compression models.",
                "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
                "Incremental and decremental support vector machine learning.",
                "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
                "TREC 2006 spam track overview.",
                "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
                "Batch and on-line spam filter comparison.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
                "TREC 2005 spam track overview.",
                "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
                "On-line supervised spam filter evaluation.",
                "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
                "An introduction to support vector machines.",
                "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
                "Alpha seeding for support vector machines.",
                "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
                "Support vector machines for spam categorization.",
                "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
                "Online discriminative spam filter training.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
                "A plan for spam. 2002. [12] P. Graham.",
                "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
                "Spam: Its not just for inboxes anymore.",
                "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
                "Text categorization with suport vector machines: Learning with many relevant features.",
                "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
                "Training linear svms in linear time.",
                "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
                "Online learning with kernels.",
                "In Advances in Neural Information Processing Systems 14, pages 785-793.",
                "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
                "SVMs for the blogosphere: Blog identification and splog detection.",
                "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
                "Learning algorithms with optimal stability in neural networks.",
                "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
                "On-line spam filter fusion.",
                "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
                "Spam filtering with naive bayes - which naive bayes?",
                "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
                "Blocking blog spam with language model disagreement.",
                "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
                "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
                "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
                "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
                "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
                "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
                "On attacking statistical spam filters.",
                "CEAS: First Conference on Email and Anti-Spam, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El \"filtrado basado en el contenido\" es un método confiable para combatir esta amenaza en sus diversas formas, pero algunos investigadores académicos y profesionales industriales no están de acuerdo sobre la mejor manera de filtrar el spam.",
                "Los primeros han abogado por el uso de máquinas de vectores de soporte (SVM) para el \"filtrado basado en contenido\", ya que esta metodología de aprendizaje automático ofrece un rendimiento de última generación para la clasificación de texto."
            ],
            "translated_text": "",
            "candidates": [
                "filtrado basado en contenido",
                "filtrado basado en el contenido",
                "filtrado basado en contenido",
                "filtrado basado en contenido"
            ],
            "error": []
        },
        "spam filtering": {
            "translated_key": "filtrado de spam",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Relaxed Online SVMs for <br>spam filtering</br> D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
                "Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
                "The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification.",
                "However, similar performance gains have yet to be demonstrated for online <br>spam filtering</br>.",
                "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
                "In this paper, we offer a resolution to this controversy.",
                "First, we show that online SVMs indeed give state-of-the-art classification performance on online <br>spam filtering</br> on large benchmark data sets.",
                "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
                "Our results are experimentally verified on email spam, blog spam, and splog detection tasks.",
                "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
                "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
                "The most well known form of spam is email spam, which remains a major problem for large email systems.",
                "Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
                "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.",
                "The approach of content analysis has shown particular promise and generality for combating spam.",
                "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam.",
                "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].",
                "In this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.",
                "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
                "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
                "Practitioners requiring content-based <br>spam filtering</br> have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
                "This Bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates.",
                "This allows a deployed system to easily adapt to a changing environment over time.",
                "Other fast methods for <br>spam filtering</br> include compression models [1] and logistic regression [10].",
                "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
                "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
                "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
                "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based <br>spam filtering</br> in large-scale settings. 2.",
                "SPAM AND ONLINE SVMS The controversy between academics and practitioners in <br>spam filtering</br> centers on the use of SVMs.",
                "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online <br>spam filtering</br>.",
                "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
                "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
                "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
                "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
                "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them.",
                "We use the following notation to describe SVMs, which draws from [23].",
                "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
                "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
                "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
                "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
                "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
                "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
                "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
                "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
                "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
                "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
                "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
                "<br>spam filtering</br> is typically tested and deployed in an online setting, which proceeds incrementally.",
                "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
                "Online learning allows a deployed system to adapt itself in a changing environment.",
                "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
                "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
                "One method of incremental and decremental SVM learning was proposed in [2].",
                "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
                "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
                "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
                "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
                "Because previous work (and our own initial testing) indicates that binary feature values give the best results for <br>spam filtering</br> [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
                "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
                "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
                "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
                "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
                "Note that n-grams may include whitespace, and are overlapping.",
                "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
                "We normalize the vectors with the Euclidean norm.",
                "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
                "For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
                "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
                "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
                "Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4].",
                "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
                "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
                "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
                "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
                "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
                "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
                "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
                "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
                "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
                "Table 1: Results for Email <br>spam filtering</br> with Online SVM on benchmark data sets.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
                "We used two large benchmark data sets of email spam as our test corpora.",
                "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
                "We used the canonical ordering provided with each of these data sets for fair comparison.",
                "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
                "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
                "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
                "These results show that Online SVMs do give state of the art performance on email spam.",
                "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
                "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
                "However, large benchmark data sets of labeled blog comment spam do not yet exist.",
                "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for Splog vs. Blog Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
                "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
                "We use the parameter setting C = 100, with the same feature space mappings as above.",
                "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
                "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data.",
                "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs.",
                "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
                "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
                "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
                "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
                "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
                "These times do not include the time spent mapping strings to feature vectors.",
                "The number of examples in each data set is given in the last row as corpus size.",
                "A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error.",
                "This corresponds to setting C to a low value.",
                "Hyperplane B accepts a smaller margin in order to reduce training error.",
                "This corresponds to setting C to a high value.",
                "Content-based <br>spam filtering</br> appears to do best with high values of C. ear SVMs give state of the art performance on content-based <br>spam filtering</br>.",
                "However, this performance comes at a price.",
                "Although the blog comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
                "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
                "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host.",
                "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
                "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space.",
                "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
                "However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
                "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
                "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
                "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
                "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
                "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
                "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
                "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
                "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
                "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
                "Formally, the optimization problem is now defined most clearly in the dual form [23].",
                "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
                "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
                "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
                "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
                "If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step.",
                "The number of re-training updates can be reduced by relaxing the definition of well classified.",
                "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
                "Here, each update still produces an optimal hyperplane.",
                "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
                "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
                "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
                "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
                "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
                "Successive iterations of this loop bring the hyperplane closer to an optimal value.",
                "However, it is possible that these iterations provide less benefit than their expense justifies.",
                "That is, a close first approximation may be good enough.",
                "We introduce a parameter T to control the maximum number of iterations we allow.",
                "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
                "EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
                "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost.",
                "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
                "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
                "Our main tests on content-based spam detection are performed on large benchmark sets of email data.",
                "We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
                "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
                "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
                "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
                "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
                "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
                "We test a range of values p in a coarse grid search.",
                "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
                "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
                "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
                "These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs.",
                "Ordinarily, the training time would grow quadratically with the number of seen examples.",
                "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
                "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
                "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
                "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}.",
                "Other parameters were identical to the original Online SVM tests.",
                "The results on this test were surprisingly stable (see Figure 6).",
                "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
                "This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal.",
                "These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
                "As noted before, when M = 1, the hyperplane is globally optimal at every step.",
                "Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent.",
                "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
                "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
                "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
                "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
                "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and splog detection tasks.",
                "These experiments show comparable performance on these tasks, at radically different costs.",
                "In the previous section, the effect of the different relaxation methods was tested separately.",
                "Here, we tested these methods together to create a full implementation of ROSVM.",
                "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
                "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
                "The splog and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
                "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and splog detection.",
                "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
                "We randomly ordered both the blog comment spam corpus and the splog corpus to create online learning tasks.",
                "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
                "However, this experimental design Table 5: Email Spam Benchmark Data.",
                "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam.",
                "These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks.",
                "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
                "Note that the CPU time reported for each method was generated on the same computing system.",
                "This time reflects only the time needed to complete online learning on tokenized data.",
                "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
                "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
                "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
                "Second, they show a dramatic disparity in computational cost.",
                "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
                "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
                "Note the blog and splog data sets are relatively small, and results on these data sets must be considered preliminary.",
                "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
                "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
                "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
                "We have presented one resolution to this debate.",
                "Online SVMs do, indeed, proTable 7: Splog Data Set.",
                "These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
                "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
                "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
                "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
                "It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM.",
                "After all, not all data allows the relaxation of SVM requirements.",
                "We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
                "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
                "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
                "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
                "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
                "Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change.",
                "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
                "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
                "REFERENCES [1] A. Bratko and B. Filipic.",
                "<br>spam filtering</br> using compression models.",
                "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
                "Incremental and decremental support vector machine learning.",
                "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
                "TREC 2006 spam track overview.",
                "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
                "Batch and on-line spam filter comparison.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
                "TREC 2005 spam track overview.",
                "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
                "On-line supervised spam filter evaluation.",
                "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
                "An introduction to support vector machines.",
                "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
                "Alpha seeding for support vector machines.",
                "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
                "Support vector machines for spam categorization.",
                "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
                "Online discriminative spam filter training.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
                "A plan for spam. 2002. [12] P. Graham.",
                "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
                "Spam: Its not just for inboxes anymore.",
                "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
                "Text categorization with suport vector machines: Learning with many relevant features.",
                "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
                "Training linear svms in linear time.",
                "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
                "Online learning with kernels.",
                "In Advances in Neural Information Processing Systems 14, pages 785-793.",
                "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
                "SVMs for the blogosphere: Blog identification and splog detection.",
                "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
                "Learning algorithms with optimal stability in neural networks.",
                "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
                "On-line spam filter fusion.",
                "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
                "<br>spam filtering</br> with naive bayes - which naive bayes?",
                "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
                "Blocking blog spam with language model disagreement.",
                "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
                "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
                "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
                "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
                "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
                "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
                "On attacking statistical spam filters.",
                "CEAS: First Conference on Email and Anti-Spam, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "SVMS en línea relajados para \"Filtrado de spam\" D. Sculley Tufts University Departamento de Ciencias de la Computación 161 College Ave., Medford, MA USA Dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Departamento de Ciencias de la Computación 161 College Ave., Medford, MA USA, MA USA, MA USAgwachm01cs.tufts.edu abstract spam es un problema clave en la comunicación electrónica, incluidos los sistemas de correo electrónico a gran escala y el creciente número de blogs.",
                "Sin embargo, aún no se han demostrado ganancias de rendimiento similares para el \"filtrado de spam\" en línea.",
                "Primero, mostramos que los SVM en línea de hecho brindan un rendimiento de clasificación de última generación en el \"filtrado de spam\" en línea en grandes conjuntos de datos de referencia.",
                "Los profesionales que requieren \"filtrado de spam\" basado en el contenido generalmente han elegido usar el método de aprendizaje automático más rápido (aunque menos robusto) de la clasificación de texto de Naive Bayes [11, 12, 20].",
                "Otros métodos rápidos para el \"filtrado de spam\" incluyen modelos de compresión [1] y regresión logística [10].",
                "Reducimos el costo computacional del aprendizaje SVM al relajar este requisito en el máximo margen en la configuración en línea, y creamos un SVM en línea relajado, ROSVM, apropiado para el \"filtrado de spam\" basado en el contenido de alto rendimiento en la configuración a gran escala.2.",
                "SPAM y SVM en línea La controversia entre académicos y profesionales en el \"filtrado de spam\" se centra en el uso de SVM.",
                "Los primeros abogan por su uso, pero aún no han demostrado un fuerte rendimiento con los SVM en el \"filtrado de spam\" en línea.",
                "El \"filtrado de spam\" generalmente se prueba e implementa en una configuración en línea, que procede de forma incremental.",
                "Debido a que el trabajo previo (y nuestras propias pruebas iniciales) indica que los valores de características binarias dan los mejores resultados para el \"filtrado de spam\" [20, 9], optimizamos nuestra implementación de la SMO en línea para explotar los productos internos rápidos con vectores binarios.1 2.3 Mapeo de características Contenido de spam Extracción de las características de aprendizaje automático del texto se pueden hacer de varias maneras, especialmente cuando ese texto puede incluir hipercontente y meta-contenido, como HTML y información de encabezado."
            ],
            "translated_text": "",
            "candidates": [
                "filtrado de spam",
                "Filtrado de spam",
                "filtrado de spam",
                "filtrado de spam",
                "filtrado de spam",
                "filtrado de spam",
                "filtrado de spam",
                "filtrado de spam",
                "filtrado de spam",
                "filtrado de spam",
                "Filtrado de spam",
                "filtrado de spam",
                "filtrado de spam",
                "filtrado de spam",
                "filtrado de spam",
                "filtrado de spam",
                "filtrado de spam",
                "filtrado de spam",
                "filtrado de spam",
                "filtrado de spam"
            ],
            "error": []
        },
        "blog": {
            "translated_key": "Blog",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
                "Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
                "The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification.",
                "However, similar performance gains have yet to be demonstrated for online spam filtering.",
                "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
                "In this paper, we offer a resolution to this controversy.",
                "First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets.",
                "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
                "Our results are experimentally verified on email spam, <br>blog</br> spam, and splog detection tasks.",
                "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
                "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
                "The most well known form of spam is email spam, which remains a major problem for large email systems.",
                "Other forms of spam are also becoming problematic, including <br>blog</br> spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
                "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.",
                "The approach of content analysis has shown particular promise and generality for combating spam.",
                "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam.",
                "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying <br>blog</br> spam [21] and splogs [17].",
                "In this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.",
                "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
                "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
                "Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
                "This Bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates.",
                "This allows a deployed system to easily adapt to a changing environment over time.",
                "Other fast methods for spam filtering include compression models [1] and logistic regression [10].",
                "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
                "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
                "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
                "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2.",
                "SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs.",
                "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering.",
                "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
                "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
                "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, <br>blog</br> comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
                "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
                "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them.",
                "We use the following notation to describe SVMs, which draws from [23].",
                "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
                "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
                "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
                "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
                "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
                "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
                "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
                "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
                "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
                "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
                "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
                "Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally.",
                "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
                "Online learning allows a deployed system to adapt itself in a changing environment.",
                "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
                "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
                "One method of incremental and decremental SVM learning was proposed in [2].",
                "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
                "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
                "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
                "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
                "Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
                "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
                "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
                "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
                "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
                "Note that n-grams may include whitespace, and are overlapping.",
                "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
                "We normalize the vectors with the Euclidean norm.",
                "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
                "For <br>blog</br> comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
                "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
                "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
                "Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4].",
                "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
                "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
                "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
                "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
                "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
                "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
                "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
                "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
                "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
                "Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for <br>blog</br> Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
                "We used two large benchmark data sets of email spam as our test corpora.",
                "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
                "We used the canonical ordering provided with each of these data sets for fair comparison.",
                "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
                "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
                "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
                "These results show that Online SVMs do give state of the art performance on email spam.",
                "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
                "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 <br>blog</br> Comment Spam and SVMs <br>blog</br> comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
                "However, large benchmark data sets of labeled <br>blog</br> comment spam do not yet exist.",
                "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based <br>blog</br> Table 3: Results for Splog vs. <br>blog</br> Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
                "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
                "We use the parameter setting C = 100, with the same feature space mappings as above.",
                "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
                "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with <br>blog</br> comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data.",
                "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs.",
                "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
                "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
                "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
                "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
                "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
                "These times do not include the time spent mapping strings to feature vectors.",
                "The number of examples in each data set is given in the last row as corpus size.",
                "A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error.",
                "This corresponds to setting C to a low value.",
                "Hyperplane B accepts a smaller margin in order to reduce training error.",
                "This corresponds to setting C to a high value.",
                "Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering.",
                "However, this performance comes at a price.",
                "Although the <br>blog</br> comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
                "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
                "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large <br>blog</br> host.",
                "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
                "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space.",
                "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
                "However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
                "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
                "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
                "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
                "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
                "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
                "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
                "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
                "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
                "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
                "Formally, the optimization problem is now defined most clearly in the dual form [23].",
                "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
                "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
                "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
                "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
                "If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step.",
                "The number of re-training updates can be reduced by relaxing the definition of well classified.",
                "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
                "Here, each update still produces an optimal hyperplane.",
                "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
                "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
                "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
                "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
                "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
                "Successive iterations of this loop bring the hyperplane closer to an optimal value.",
                "However, it is possible that these iterations provide less benefit than their expense justifies.",
                "That is, a close first approximation may be good enough.",
                "We introduce a parameter T to control the maximum number of iterations we allow.",
                "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
                "EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
                "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost.",
                "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
                "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
                "Our main tests on content-based spam detection are performed on large benchmark sets of email data.",
                "We then apply these methods on the smaller data sets of <br>blog</br> comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
                "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
                "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
                "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
                "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
                "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
                "We test a range of values p in a coarse grid search.",
                "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
                "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
                "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
                "These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs.",
                "Ordinarily, the training time would grow quadratically with the number of seen examples.",
                "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
                "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
                "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
                "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}.",
                "Other parameters were identical to the original Online SVM tests.",
                "The results on this test were surprisingly stable (see Figure 6).",
                "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
                "This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal.",
                "These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
                "As noted before, when M = 1, the hyperplane is globally optimal at every step.",
                "Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent.",
                "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
                "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
                "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
                "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
                "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, <br>blog</br> comment spam, and splog detection tasks.",
                "These experiments show comparable performance on these tasks, at radically different costs.",
                "In the previous section, the effect of the different relaxation methods was tested separately.",
                "Here, we tested these methods together to create a full implementation of ROSVM.",
                "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
                "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
                "The splog and <br>blog</br> data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
                "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, <br>blog</br> comment spam, and splog detection.",
                "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
                "We randomly ordered both the <br>blog</br> comment spam corpus and the splog corpus to create online learning tasks.",
                "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
                "However, this experimental design Table 5: Email Spam Benchmark Data.",
                "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: <br>blog</br> Comment Spam.",
                "These results comparing Online SVM and ROSVM on <br>blog</br> comment spam detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks.",
                "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
                "Note that the CPU time reported for each method was generated on the same computing system.",
                "This time reflects only the time needed to complete online learning on tokenized data.",
                "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
                "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
                "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
                "Second, they show a dramatic disparity in computational cost.",
                "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
                "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
                "Note the <br>blog</br> and splog data sets are relatively small, and results on these data sets must be considered preliminary.",
                "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
                "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
                "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
                "We have presented one resolution to this debate.",
                "Online SVMs do, indeed, proTable 7: Splog Data Set.",
                "These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
                "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
                "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
                "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
                "It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM.",
                "After all, not all data allows the relaxation of SVM requirements.",
                "We conjecture that email spam, <br>blog</br> comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
                "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
                "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
                "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
                "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
                "Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change.",
                "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
                "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
                "REFERENCES [1] A. Bratko and B. Filipic.",
                "Spam filtering using compression models.",
                "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
                "Incremental and decremental support vector machine learning.",
                "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
                "TREC 2006 spam track overview.",
                "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
                "Batch and on-line spam filter comparison.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
                "TREC 2005 spam track overview.",
                "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
                "On-line supervised spam filter evaluation.",
                "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
                "An introduction to support vector machines.",
                "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
                "Alpha seeding for support vector machines.",
                "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
                "Support vector machines for spam categorization.",
                "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
                "Online discriminative spam filter training.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
                "A plan for spam. 2002. [12] P. Graham.",
                "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
                "Spam: Its not just for inboxes anymore.",
                "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
                "Text categorization with suport vector machines: Learning with many relevant features.",
                "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
                "Training linear svms in linear time.",
                "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
                "Online learning with kernels.",
                "In Advances in Neural Information Processing Systems 14, pages 785-793.",
                "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
                "SVMs for the blogosphere: <br>blog</br> identification and splog detection.",
                "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
                "Learning algorithms with optimal stability in neural networks.",
                "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
                "On-line spam filter fusion.",
                "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
                "Spam filtering with naive bayes - which naive bayes?",
                "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
                "Blocking <br>blog</br> spam with language model disagreement.",
                "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
                "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
                "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
                "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
                "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
                "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
                "On attacking statistical spam filters.",
                "CEAS: First Conference on Email and Anti-Spam, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Nuestros resultados se verifican experimentalmente en spam por correo electrónico, spam \"blog\" y tareas de detección de Splog.",
                "Otras formas de spam también se están volviendo problemáticas, incluido el spam \"blog\", en el que los spammers publican comentarios no deseados en los blogs [21], y Splogs, que son blogs falsos construidos para permitir el spam de enlace con la esperanza de aumentar la importancia medida de un dadoPágina web a los ojos de los motores de búsqueda automatizados [17].",
                "El análisis de contenido se ha aplicado ampliamente en la detección de spam de correo electrónico [11], y también se ha utilizado para identificar el \"blog\" spam [21] y Splogs [17].",
                "Luego mostramos que las SVM en línea de hecho logran un rendimiento de última generación en el filtrado de spam por correo electrónico, spam de comentarios \"blog\" y SPLOG, siempre que el parámetro de compensación C esté establecido en un alto valor.",
                "Para los comentarios de \"blog\" y Splogs, consideramos todo el texto, incluidos los metadatos, como las etiquetas HTML, como se indica.",
                "La puntuación reportada es (1-Roca)%, donde 0 es óptimo.TREC05P-1 TREC06P ONSVM: palabras 0.015 (.011-.022) 0.034 (.025-.046) 3 gramos 0.011 (.009-.015) 0.025 (.017-.035) 4 gramos 0.008 (.007-.011) 0.023 (.017-.032) SPAMPROBE 0.059 (.049-.071) 0.092 (.078-.110) Bogofilter 0.048 (.038-.062) 0.077 (.056-.105) TREC ganadores 0.019 (.015-.023) 0.054 (.034-.085) 53-confirmación 0.007 (.005-.008) 0.020 (.007-.050) Tabla 2: Resultados para la detección de spam de comentarios de \"blog usando SVMS y dejar una cruz de una solaValidación.",
                "Hasta donde sabemos, el SVM en línea ha superado a cualquier otro filtro único en estos conjuntos de datos, incluidos los que usan métodos bayesianos [5, 3], modelos de compresión [5, 3], regresión logística [10] y variantes de perceptrones [3], los ganadores de la competencia TREC [5, 3], y los filtros de correo electrónico de código abierto de código abierto Bogofilter V1.1.5 y SPAMProbe v1.4d.2.6 Blog \"Blog\" Spam y SVMS \"Blog\" Comment Spam es similar al correo no deseado por correo electrónico en muchos aspectos, y se han propuesto métodos basados en contenido para detectar estos comentarios de spam [21].",
                "Sin embargo, los grandes conjuntos de datos de referencia de los comentarios etiquetados de \"blog\" de comentarios spam aún no existen.",
                "Por lo tanto, ejecutamos experimentos en el único conjunto de datos disponible públicamente que conocemos, que se utilizó en el \"blog\" basado en contenido Tabla 3: Resultados para la detección de \"blog\" de Splog vs. \"Blog\" utilizando SVMS y deja una validación cruzada.",
                "Estos resultados (ver Tabla 2) muestran que los SVM dan un rendimiento superior en este conjunto de datos en la metodología anterior.2.7 Splogs y SVMS Al igual que con el spam de comentarios de \"blog\", todavía no hay un gran corpus de referencia disponible públicamente de datos de prueba de detección Splog etiquetados."
            ],
            "translated_text": "",
            "candidates": [
                "Blog",
                "blog",
                "Blog",
                "blog",
                "Blog",
                "blog",
                "Blog",
                "blog",
                "Blog",
                "blog",
                "Blog",
                "Blog",
                "Blog",
                "Blog",
                "Blog",
                "blog",
                "Blog",
                "blog",
                "blog",
                "Blog",
                "Blog",
                "blog"
            ],
            "error": []
        },
        "splog": {
            "translated_key": "splog",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
                "Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
                "The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification.",
                "However, similar performance gains have yet to be demonstrated for online spam filtering.",
                "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
                "In this paper, we offer a resolution to this controversy.",
                "First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets.",
                "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
                "Our results are experimentally verified on email spam, blog spam, and <br>splog</br> detection tasks.",
                "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
                "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
                "The most well known form of spam is email spam, which remains a major problem for large email systems.",
                "Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
                "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.",
                "The approach of content analysis has shown particular promise and generality for combating spam.",
                "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam.",
                "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].",
                "In this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.",
                "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
                "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
                "Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
                "This Bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates.",
                "This allows a deployed system to easily adapt to a changing environment over time.",
                "Other fast methods for spam filtering include compression models [1] and logistic regression [10].",
                "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
                "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
                "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
                "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2.",
                "SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs.",
                "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering.",
                "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
                "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
                "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
                "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
                "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them.",
                "We use the following notation to describe SVMs, which draws from [23].",
                "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
                "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
                "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
                "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
                "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
                "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
                "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
                "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
                "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
                "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
                "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
                "Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally.",
                "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
                "Online learning allows a deployed system to adapt itself in a changing environment.",
                "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
                "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
                "One method of incremental and decremental SVM learning was proposed in [2].",
                "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
                "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
                "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
                "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
                "Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
                "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
                "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
                "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
                "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
                "Note that n-grams may include whitespace, and are overlapping.",
                "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
                "We normalize the vectors with the Euclidean norm.",
                "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
                "For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
                "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
                "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
                "Later work has not always followed this lead: a (low) default setting of C was used on <br>splog</br> detection [17], and also on email spam [4].",
                "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
                "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
                "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
                "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
                "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
                "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
                "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
                "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
                "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
                "Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
                "We used two large benchmark data sets of email spam as our test corpora.",
                "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
                "We used the canonical ordering provided with each of these data sets for fair comparison.",
                "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
                "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
                "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
                "These results show that Online SVMs do give state of the art performance on email spam.",
                "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
                "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
                "However, large benchmark data sets of labeled blog comment spam do not yet exist.",
                "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for <br>splog</br> vs. Blog Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
                "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
                "We use the parameter setting C = 100, with the same feature space mappings as above.",
                "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
                "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled <br>splog</br> detection test data.",
                "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based <br>splog</br> detection using SVMs.",
                "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
                "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
                "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
                "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
                "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
                "These times do not include the time spent mapping strings to feature vectors.",
                "The number of examples in each data set is given in the last row as corpus size.",
                "A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error.",
                "This corresponds to setting C to a low value.",
                "Hyperplane B accepts a smaller margin in order to reduce training error.",
                "This corresponds to setting C to a high value.",
                "Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering.",
                "However, this performance comes at a price.",
                "Although the blog comment spam and <br>splog</br> data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
                "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
                "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host.",
                "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
                "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space.",
                "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
                "However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
                "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
                "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
                "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
                "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
                "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
                "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
                "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
                "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
                "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
                "Formally, the optimization problem is now defined most clearly in the dual form [23].",
                "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
                "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
                "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
                "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
                "If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step.",
                "The number of re-training updates can be reduced by relaxing the definition of well classified.",
                "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
                "Here, each update still produces an optimal hyperplane.",
                "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
                "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
                "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
                "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
                "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
                "Successive iterations of this loop bring the hyperplane closer to an optimal value.",
                "However, it is possible that these iterations provide less benefit than their expense justifies.",
                "That is, a close first approximation may be good enough.",
                "We introduce a parameter T to control the maximum number of iterations we allow.",
                "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
                "EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
                "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost.",
                "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
                "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
                "Our main tests on content-based spam detection are performed on large benchmark sets of email data.",
                "We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
                "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
                "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
                "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
                "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
                "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
                "We test a range of values p in a coarse grid search.",
                "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
                "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
                "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
                "These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs.",
                "Ordinarily, the training time would grow quadratically with the number of seen examples.",
                "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
                "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
                "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
                "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}.",
                "Other parameters were identical to the original Online SVM tests.",
                "The results on this test were surprisingly stable (see Figure 6).",
                "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
                "This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal.",
                "These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
                "As noted before, when M = 1, the hyperplane is globally optimal at every step.",
                "Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent.",
                "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
                "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
                "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
                "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
                "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and <br>splog</br> detection tasks.",
                "These experiments show comparable performance on these tasks, at radically different costs.",
                "In the previous section, the effect of the different relaxation methods was tested separately.",
                "Here, we tested these methods together to create a full implementation of ROSVM.",
                "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
                "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
                "The <br>splog</br> and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
                "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and <br>splog</br> detection.",
                "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
                "We randomly ordered both the blog comment spam corpus and the <br>splog</br> corpus to create online learning tasks.",
                "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
                "However, this experimental design Table 5: Email Spam Benchmark Data.",
                "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam.",
                "These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks.",
                "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
                "Note that the CPU time reported for each method was generated on the same computing system.",
                "This time reflects only the time needed to complete online learning on tokenized data.",
                "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
                "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
                "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
                "Second, they show a dramatic disparity in computational cost.",
                "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
                "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
                "Note the blog and <br>splog</br> data sets are relatively small, and results on these data sets must be considered preliminary.",
                "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
                "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
                "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
                "We have presented one resolution to this debate.",
                "Online SVMs do, indeed, proTable 7: <br>splog</br> Data Set.",
                "These results compare Online SVM and ROSVM on <br>splog</br> detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
                "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
                "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
                "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
                "It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM.",
                "After all, not all data allows the relaxation of SVM requirements.",
                "We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
                "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
                "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
                "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
                "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
                "Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change.",
                "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
                "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
                "REFERENCES [1] A. Bratko and B. Filipic.",
                "Spam filtering using compression models.",
                "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
                "Incremental and decremental support vector machine learning.",
                "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
                "TREC 2006 spam track overview.",
                "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
                "Batch and on-line spam filter comparison.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
                "TREC 2005 spam track overview.",
                "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
                "On-line supervised spam filter evaluation.",
                "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
                "An introduction to support vector machines.",
                "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
                "Alpha seeding for support vector machines.",
                "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
                "Support vector machines for spam categorization.",
                "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
                "Online discriminative spam filter training.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
                "A plan for spam. 2002. [12] P. Graham.",
                "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
                "Spam: Its not just for inboxes anymore.",
                "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
                "Text categorization with suport vector machines: Learning with many relevant features.",
                "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
                "Training linear svms in linear time.",
                "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
                "Online learning with kernels.",
                "In Advances in Neural Information Processing Systems 14, pages 785-793.",
                "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
                "SVMs for the blogosphere: Blog identification and <br>splog</br> detection.",
                "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
                "Learning algorithms with optimal stability in neural networks.",
                "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
                "On-line spam filter fusion.",
                "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
                "Spam filtering with naive bayes - which naive bayes?",
                "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
                "Blocking blog spam with language model disagreement.",
                "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
                "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
                "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
                "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
                "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
                "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
                "On attacking statistical spam filters.",
                "CEAS: First Conference on Email and Anti-Spam, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Nuestros resultados se verifican experimentalmente en spam por correo electrónico, spam de blog y tareas de detección \"Splog\".",
                "El trabajo posterior no siempre ha seguido este plomo: se usó una configuración (baja) predeterminada de C en la detección de \"Splog\" [17], y también en el correo no deseado [4].",
                "Por lo tanto, ejecutamos experimentos en el único conjunto de datos disponible públicamente que conocemos, que se utilizó en el blog basado en contenido Tabla 3: Resultados para \"Splog\" frente a la detección de blogs utilizando SVMS y dejar una validación cruzada.",
                "Estos resultados (ver Tabla 2) muestran que los SVM dan un rendimiento superior en este conjunto de datos en la metodología anterior.2.7 Splogs y SVMS Al igual que con el spam de comentarios del blog, todavía no hay un gran corpus de referencia de disponibles públicamente de datos de detección \"Splog\".",
                "Sin embargo, los autores de [17] nos proporcionaron amablemente el conjunto de datos etiquetado de 1.389 blogs y SPLOG que usaron para probar la detección de \"SPLOG\" basada en el contenido utilizando SVM.",
                "Aunque los conjuntos de datos de Spam y \"Splog\" del blog son demasiado pequeños para que el tiempo de entrenamiento cuadrático de SVMS parezca problemático, los conjuntos de datos de correo electrónico son lo suficientemente grandes como para ilustrar los problemas del costo de entrenamiento cuadrático.",
                "M> 0.7 Da un rendimiento efectivamente equivalente como M = 1, y aún reduce el costo.4.2 SVMS en línea y ROSVM ahora comparamos ROSVM con SVM en línea en el correo electrónico spam, spam de comentarios de blog y tareas de detección \"Splog\".",
                "Los conjuntos de datos \"Splog\" y de blog fueron mucho más pequeños, por lo que establecemos P = 100 para estas tareas para permitir comparaciones significativas entre el tamaño reducido y los problemas de optimización de tamaño completo.",
                "Debido a que estos valores no se ajustaron a mano, tanto el rendimiento de la generalización como los resultados del tiempo de ejecución son significativos en estos experimentos.4.2.1 Configuración experimental Comparamos SVM en línea y ROSVM en el correo electrónico spam, spam de comentarios de blog y detección de \"Splog\".",
                "Ordenamos aleatoriamente tanto el blog de comentarios de Spam Corpus como el corpus \"Splog\" para crear tareas de aprendizaje en línea."
            ],
            "translated_text": "",
            "candidates": [
                "flog",
                "Splog",
                "flog",
                "Splog",
                "flog",
                "Splog",
                "flog",
                "Splog",
                "flog",
                "SPLOG",
                "flog",
                "Splog",
                "flog",
                "Splog",
                "flog",
                "Splog",
                "flog",
                "Splog",
                "flog",
                "Splog"
            ],
            "error": []
        },
        "link analysis": {
            "translated_key": "análisis de enlaces",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
                "Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
                "The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification.",
                "However, similar performance gains have yet to be demonstrated for online spam filtering.",
                "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
                "In this paper, we offer a resolution to this controversy.",
                "First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets.",
                "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
                "Our results are experimentally verified on email spam, blog spam, and splog detection tasks.",
                "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
                "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
                "The most well known form of spam is email spam, which remains a major problem for large email systems.",
                "Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
                "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting <br>link analysis</br>.",
                "The approach of content analysis has shown particular promise and generality for combating spam.",
                "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam.",
                "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].",
                "In this paper, we do not explore the related problem of link spam, which is currently best combated by <br>link analysis</br> [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.",
                "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
                "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
                "Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
                "This Bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates.",
                "This allows a deployed system to easily adapt to a changing environment over time.",
                "Other fast methods for spam filtering include compression models [1] and logistic regression [10].",
                "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
                "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
                "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
                "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2.",
                "SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs.",
                "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering.",
                "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
                "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
                "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
                "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
                "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them.",
                "We use the following notation to describe SVMs, which draws from [23].",
                "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
                "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
                "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
                "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
                "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
                "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
                "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
                "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
                "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
                "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
                "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
                "Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally.",
                "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
                "Online learning allows a deployed system to adapt itself in a changing environment.",
                "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
                "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
                "One method of incremental and decremental SVM learning was proposed in [2].",
                "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
                "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
                "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
                "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
                "Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
                "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
                "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
                "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
                "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
                "Note that n-grams may include whitespace, and are overlapping.",
                "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
                "We normalize the vectors with the Euclidean norm.",
                "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
                "For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
                "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
                "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
                "Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4].",
                "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
                "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
                "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
                "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
                "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
                "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
                "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
                "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
                "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
                "Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
                "We used two large benchmark data sets of email spam as our test corpora.",
                "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
                "We used the canonical ordering provided with each of these data sets for fair comparison.",
                "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
                "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
                "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
                "These results show that Online SVMs do give state of the art performance on email spam.",
                "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
                "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
                "However, large benchmark data sets of labeled blog comment spam do not yet exist.",
                "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for Splog vs. Blog Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
                "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
                "We use the parameter setting C = 100, with the same feature space mappings as above.",
                "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
                "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data.",
                "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs.",
                "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
                "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
                "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
                "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
                "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
                "These times do not include the time spent mapping strings to feature vectors.",
                "The number of examples in each data set is given in the last row as corpus size.",
                "A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error.",
                "This corresponds to setting C to a low value.",
                "Hyperplane B accepts a smaller margin in order to reduce training error.",
                "This corresponds to setting C to a high value.",
                "Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering.",
                "However, this performance comes at a price.",
                "Although the blog comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
                "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
                "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host.",
                "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
                "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space.",
                "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
                "However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
                "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
                "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
                "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
                "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
                "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
                "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
                "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
                "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
                "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
                "Formally, the optimization problem is now defined most clearly in the dual form [23].",
                "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
                "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
                "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
                "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
                "If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step.",
                "The number of re-training updates can be reduced by relaxing the definition of well classified.",
                "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
                "Here, each update still produces an optimal hyperplane.",
                "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
                "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
                "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
                "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
                "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
                "Successive iterations of this loop bring the hyperplane closer to an optimal value.",
                "However, it is possible that these iterations provide less benefit than their expense justifies.",
                "That is, a close first approximation may be good enough.",
                "We introduce a parameter T to control the maximum number of iterations we allow.",
                "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
                "EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
                "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost.",
                "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
                "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
                "Our main tests on content-based spam detection are performed on large benchmark sets of email data.",
                "We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
                "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
                "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
                "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
                "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
                "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
                "We test a range of values p in a coarse grid search.",
                "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
                "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
                "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
                "These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs.",
                "Ordinarily, the training time would grow quadratically with the number of seen examples.",
                "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
                "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
                "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
                "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}.",
                "Other parameters were identical to the original Online SVM tests.",
                "The results on this test were surprisingly stable (see Figure 6).",
                "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
                "This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal.",
                "These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
                "As noted before, when M = 1, the hyperplane is globally optimal at every step.",
                "Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent.",
                "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
                "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
                "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
                "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
                "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and splog detection tasks.",
                "These experiments show comparable performance on these tasks, at radically different costs.",
                "In the previous section, the effect of the different relaxation methods was tested separately.",
                "Here, we tested these methods together to create a full implementation of ROSVM.",
                "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
                "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
                "The splog and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
                "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and splog detection.",
                "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
                "We randomly ordered both the blog comment spam corpus and the splog corpus to create online learning tasks.",
                "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
                "However, this experimental design Table 5: Email Spam Benchmark Data.",
                "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam.",
                "These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks.",
                "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
                "Note that the CPU time reported for each method was generated on the same computing system.",
                "This time reflects only the time needed to complete online learning on tokenized data.",
                "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
                "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
                "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
                "Second, they show a dramatic disparity in computational cost.",
                "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
                "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
                "Note the blog and splog data sets are relatively small, and results on these data sets must be considered preliminary.",
                "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
                "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
                "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
                "We have presented one resolution to this debate.",
                "Online SVMs do, indeed, proTable 7: Splog Data Set.",
                "These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
                "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
                "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
                "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
                "It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM.",
                "After all, not all data allows the relaxation of SVM requirements.",
                "We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
                "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
                "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
                "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
                "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
                "Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change.",
                "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
                "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
                "REFERENCES [1] A. Bratko and B. Filipic.",
                "Spam filtering using compression models.",
                "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
                "Incremental and decremental support vector machine learning.",
                "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
                "TREC 2006 spam track overview.",
                "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
                "Batch and on-line spam filter comparison.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
                "TREC 2005 spam track overview.",
                "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
                "On-line supervised spam filter evaluation.",
                "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
                "An introduction to support vector machines.",
                "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
                "Alpha seeding for support vector machines.",
                "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
                "Support vector machines for spam categorization.",
                "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
                "Online discriminative spam filter training.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
                "A plan for spam. 2002. [12] P. Graham.",
                "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
                "Spam: Its not just for inboxes anymore.",
                "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
                "Text categorization with suport vector machines: Learning with many relevant features.",
                "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
                "Training linear svms in linear time.",
                "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
                "Online learning with kernels.",
                "In Advances in Neural Information Processing Systems 14, pages 785-793.",
                "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
                "SVMs for the blogosphere: Blog identification and splog detection.",
                "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
                "Learning algorithms with optimal stability in neural networks.",
                "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
                "On-line spam filter fusion.",
                "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
                "Spam filtering with naive bayes - which naive bayes?",
                "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
                "Blocking blog spam with language model disagreement.",
                "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
                "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
                "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
                "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
                "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
                "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
                "On attacking statistical spam filters.",
                "CEAS: First Conference on Email and Anti-Spam, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Existen una variedad de métodos para identificar estas muchas formas de spam, incluida la compilación de listas negras de spammers conocidos y realizar un \"análisis de enlaces\".",
                "En este documento, no exploramos el problema relacionado del spam de enlace, que actualmente se combina mejor por \"análisis de enlaces\" [13].1.1 Una controversia anti-Spama La comunidad anti-Spama se ha dividido en la elección del mejor método de aprendizaje automático para la detección de spam basada en el contenido."
            ],
            "translated_text": "",
            "candidates": [
                "análisis de enlaces",
                "análisis de enlaces",
                "análisis de enlaces",
                "análisis de enlaces"
            ],
            "error": []
        },
        "machine learning technique": {
            "translated_key": "técnica de aprendizaje automático",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
                "Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
                "The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification.",
                "However, similar performance gains have yet to be demonstrated for online spam filtering.",
                "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
                "In this paper, we offer a resolution to this controversy.",
                "First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets.",
                "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
                "Our results are experimentally verified on email spam, blog spam, and splog detection tasks.",
                "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
                "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
                "The most well known form of spam is email spam, which remains a major problem for large email systems.",
                "Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
                "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.",
                "The approach of content analysis has shown particular promise and generality for combating spam.",
                "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using <br>machine learning technique</br>s for text classification to determine if the given content is spam.",
                "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].",
                "In this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.",
                "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
                "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
                "Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
                "This Bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates.",
                "This allows a deployed system to easily adapt to a changing environment over time.",
                "Other fast methods for spam filtering include compression models [1] and logistic regression [10].",
                "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
                "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
                "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
                "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2.",
                "SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs.",
                "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering.",
                "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
                "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
                "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
                "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
                "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them.",
                "We use the following notation to describe SVMs, which draws from [23].",
                "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
                "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
                "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
                "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
                "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
                "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
                "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
                "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
                "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
                "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
                "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
                "Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally.",
                "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
                "Online learning allows a deployed system to adapt itself in a changing environment.",
                "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
                "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
                "One method of incremental and decremental SVM learning was proposed in [2].",
                "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
                "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
                "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
                "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
                "Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
                "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
                "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
                "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
                "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
                "Note that n-grams may include whitespace, and are overlapping.",
                "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
                "We normalize the vectors with the Euclidean norm.",
                "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
                "For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
                "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
                "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
                "Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4].",
                "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
                "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
                "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
                "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
                "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
                "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
                "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
                "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
                "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
                "Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
                "We used two large benchmark data sets of email spam as our test corpora.",
                "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
                "We used the canonical ordering provided with each of these data sets for fair comparison.",
                "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
                "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
                "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
                "These results show that Online SVMs do give state of the art performance on email spam.",
                "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
                "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
                "However, large benchmark data sets of labeled blog comment spam do not yet exist.",
                "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for Splog vs. Blog Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
                "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
                "We use the parameter setting C = 100, with the same feature space mappings as above.",
                "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
                "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data.",
                "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs.",
                "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
                "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
                "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
                "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
                "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
                "These times do not include the time spent mapping strings to feature vectors.",
                "The number of examples in each data set is given in the last row as corpus size.",
                "A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error.",
                "This corresponds to setting C to a low value.",
                "Hyperplane B accepts a smaller margin in order to reduce training error.",
                "This corresponds to setting C to a high value.",
                "Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering.",
                "However, this performance comes at a price.",
                "Although the blog comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
                "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
                "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host.",
                "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
                "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space.",
                "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
                "However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
                "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
                "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
                "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
                "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
                "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
                "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
                "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
                "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
                "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
                "Formally, the optimization problem is now defined most clearly in the dual form [23].",
                "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
                "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
                "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
                "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
                "If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step.",
                "The number of re-training updates can be reduced by relaxing the definition of well classified.",
                "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
                "Here, each update still produces an optimal hyperplane.",
                "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
                "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
                "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
                "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
                "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
                "Successive iterations of this loop bring the hyperplane closer to an optimal value.",
                "However, it is possible that these iterations provide less benefit than their expense justifies.",
                "That is, a close first approximation may be good enough.",
                "We introduce a parameter T to control the maximum number of iterations we allow.",
                "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
                "EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
                "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost.",
                "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
                "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
                "Our main tests on content-based spam detection are performed on large benchmark sets of email data.",
                "We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
                "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
                "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
                "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
                "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
                "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
                "We test a range of values p in a coarse grid search.",
                "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
                "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
                "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
                "These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs.",
                "Ordinarily, the training time would grow quadratically with the number of seen examples.",
                "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
                "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
                "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
                "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}.",
                "Other parameters were identical to the original Online SVM tests.",
                "The results on this test were surprisingly stable (see Figure 6).",
                "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
                "This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal.",
                "These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
                "As noted before, when M = 1, the hyperplane is globally optimal at every step.",
                "Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent.",
                "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
                "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
                "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
                "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
                "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and splog detection tasks.",
                "These experiments show comparable performance on these tasks, at radically different costs.",
                "In the previous section, the effect of the different relaxation methods was tested separately.",
                "Here, we tested these methods together to create a full implementation of ROSVM.",
                "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
                "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
                "The splog and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
                "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and splog detection.",
                "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
                "We randomly ordered both the blog comment spam corpus and the splog corpus to create online learning tasks.",
                "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
                "However, this experimental design Table 5: Email Spam Benchmark Data.",
                "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam.",
                "These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks.",
                "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
                "Note that the CPU time reported for each method was generated on the same computing system.",
                "This time reflects only the time needed to complete online learning on tokenized data.",
                "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
                "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
                "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
                "Second, they show a dramatic disparity in computational cost.",
                "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
                "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
                "Note the blog and splog data sets are relatively small, and results on these data sets must be considered preliminary.",
                "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
                "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
                "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
                "We have presented one resolution to this debate.",
                "Online SVMs do, indeed, proTable 7: Splog Data Set.",
                "These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
                "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
                "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
                "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
                "It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM.",
                "After all, not all data allows the relaxation of SVM requirements.",
                "We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
                "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
                "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
                "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
                "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
                "Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change.",
                "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
                "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
                "REFERENCES [1] A. Bratko and B. Filipic.",
                "Spam filtering using compression models.",
                "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
                "Incremental and decremental support vector machine learning.",
                "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
                "TREC 2006 spam track overview.",
                "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
                "Batch and on-line spam filter comparison.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
                "TREC 2005 spam track overview.",
                "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
                "On-line supervised spam filter evaluation.",
                "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
                "An introduction to support vector machines.",
                "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
                "Alpha seeding for support vector machines.",
                "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
                "Support vector machines for spam categorization.",
                "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
                "Online discriminative spam filter training.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
                "A plan for spam. 2002. [12] P. Graham.",
                "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
                "Spam: Its not just for inboxes anymore.",
                "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
                "Text categorization with suport vector machines: Learning with many relevant features.",
                "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
                "Training linear svms in linear time.",
                "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
                "Online learning with kernels.",
                "In Advances in Neural Information Processing Systems 14, pages 785-793.",
                "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
                "SVMs for the blogosphere: Blog identification and splog detection.",
                "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
                "Learning algorithms with optimal stability in neural networks.",
                "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
                "On-line spam filter fusion.",
                "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
                "Spam filtering with naive bayes - which naive bayes?",
                "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
                "Blocking blog spam with language model disagreement.",
                "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
                "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
                "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
                "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
                "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
                "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
                "On attacking statistical spam filters.",
                "CEAS: First Conference on Email and Anti-Spam, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En el análisis de contenido, el texto del mensaje real (a menudo incluye hiper-texto y meta-texto, como HTML y encabezados) se analiza utilizando la \"técnica de aprendizaje automático\" para la clasificación de texto para determinar si el contenido dado es spam."
            ],
            "translated_text": "",
            "candidates": [
                "técnica de aprendizaje automático",
                "técnica de aprendizaje automático"
            ],
            "error": []
        },
        "link spam": {
            "translated_key": "enlace spam",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
                "Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
                "The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification.",
                "However, similar performance gains have yet to be demonstrated for online spam filtering.",
                "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
                "In this paper, we offer a resolution to this controversy.",
                "First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets.",
                "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
                "Our results are experimentally verified on email spam, blog spam, and splog detection tasks.",
                "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
                "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
                "The most well known form of spam is email spam, which remains a major problem for large email systems.",
                "Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable <br>link spam</br> with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
                "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.",
                "The approach of content analysis has shown particular promise and generality for combating spam.",
                "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam.",
                "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].",
                "In this paper, we do not explore the related problem of <br>link spam</br>, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.",
                "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
                "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
                "Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
                "This Bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates.",
                "This allows a deployed system to easily adapt to a changing environment over time.",
                "Other fast methods for spam filtering include compression models [1] and logistic regression [10].",
                "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
                "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
                "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
                "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2.",
                "SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs.",
                "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering.",
                "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
                "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
                "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
                "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
                "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them.",
                "We use the following notation to describe SVMs, which draws from [23].",
                "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
                "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
                "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
                "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
                "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
                "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
                "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
                "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
                "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
                "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
                "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
                "Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally.",
                "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
                "Online learning allows a deployed system to adapt itself in a changing environment.",
                "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
                "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
                "One method of incremental and decremental SVM learning was proposed in [2].",
                "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
                "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
                "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
                "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
                "Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
                "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
                "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
                "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
                "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
                "Note that n-grams may include whitespace, and are overlapping.",
                "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
                "We normalize the vectors with the Euclidean norm.",
                "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
                "For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
                "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
                "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
                "Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4].",
                "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
                "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
                "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
                "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
                "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
                "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
                "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
                "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
                "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
                "Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
                "We used two large benchmark data sets of email spam as our test corpora.",
                "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
                "We used the canonical ordering provided with each of these data sets for fair comparison.",
                "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
                "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
                "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
                "These results show that Online SVMs do give state of the art performance on email spam.",
                "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
                "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
                "However, large benchmark data sets of labeled blog comment spam do not yet exist.",
                "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for Splog vs. Blog Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
                "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
                "We use the parameter setting C = 100, with the same feature space mappings as above.",
                "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
                "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data.",
                "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs.",
                "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
                "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
                "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
                "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
                "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
                "These times do not include the time spent mapping strings to feature vectors.",
                "The number of examples in each data set is given in the last row as corpus size.",
                "A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error.",
                "This corresponds to setting C to a low value.",
                "Hyperplane B accepts a smaller margin in order to reduce training error.",
                "This corresponds to setting C to a high value.",
                "Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering.",
                "However, this performance comes at a price.",
                "Although the blog comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
                "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
                "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host.",
                "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
                "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space.",
                "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
                "However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
                "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
                "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
                "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
                "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
                "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
                "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
                "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
                "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
                "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
                "Formally, the optimization problem is now defined most clearly in the dual form [23].",
                "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
                "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
                "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
                "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
                "If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step.",
                "The number of re-training updates can be reduced by relaxing the definition of well classified.",
                "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
                "Here, each update still produces an optimal hyperplane.",
                "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
                "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
                "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
                "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
                "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
                "Successive iterations of this loop bring the hyperplane closer to an optimal value.",
                "However, it is possible that these iterations provide less benefit than their expense justifies.",
                "That is, a close first approximation may be good enough.",
                "We introduce a parameter T to control the maximum number of iterations we allow.",
                "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
                "EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
                "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost.",
                "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
                "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
                "Our main tests on content-based spam detection are performed on large benchmark sets of email data.",
                "We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
                "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
                "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
                "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
                "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
                "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
                "We test a range of values p in a coarse grid search.",
                "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
                "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
                "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
                "These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs.",
                "Ordinarily, the training time would grow quadratically with the number of seen examples.",
                "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
                "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
                "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
                "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}.",
                "Other parameters were identical to the original Online SVM tests.",
                "The results on this test were surprisingly stable (see Figure 6).",
                "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
                "This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal.",
                "These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
                "As noted before, when M = 1, the hyperplane is globally optimal at every step.",
                "Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent.",
                "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
                "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
                "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
                "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
                "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and splog detection tasks.",
                "These experiments show comparable performance on these tasks, at radically different costs.",
                "In the previous section, the effect of the different relaxation methods was tested separately.",
                "Here, we tested these methods together to create a full implementation of ROSVM.",
                "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
                "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
                "The splog and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
                "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and splog detection.",
                "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
                "We randomly ordered both the blog comment spam corpus and the splog corpus to create online learning tasks.",
                "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
                "However, this experimental design Table 5: Email Spam Benchmark Data.",
                "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam.",
                "These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks.",
                "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
                "Note that the CPU time reported for each method was generated on the same computing system.",
                "This time reflects only the time needed to complete online learning on tokenized data.",
                "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
                "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
                "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
                "Second, they show a dramatic disparity in computational cost.",
                "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
                "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
                "Note the blog and splog data sets are relatively small, and results on these data sets must be considered preliminary.",
                "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
                "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
                "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
                "We have presented one resolution to this debate.",
                "Online SVMs do, indeed, proTable 7: Splog Data Set.",
                "These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
                "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
                "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
                "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
                "It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM.",
                "After all, not all data allows the relaxation of SVM requirements.",
                "We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
                "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
                "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
                "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
                "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
                "Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change.",
                "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
                "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
                "REFERENCES [1] A. Bratko and B. Filipic.",
                "Spam filtering using compression models.",
                "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
                "Incremental and decremental support vector machine learning.",
                "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
                "TREC 2006 spam track overview.",
                "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
                "Batch and on-line spam filter comparison.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
                "TREC 2005 spam track overview.",
                "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
                "On-line supervised spam filter evaluation.",
                "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
                "An introduction to support vector machines.",
                "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
                "Alpha seeding for support vector machines.",
                "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
                "Support vector machines for spam categorization.",
                "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
                "Online discriminative spam filter training.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
                "A plan for spam. 2002. [12] P. Graham.",
                "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
                "Spam: Its not just for inboxes anymore.",
                "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
                "Text categorization with suport vector machines: Learning with many relevant features.",
                "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
                "Training linear svms in linear time.",
                "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
                "Online learning with kernels.",
                "In Advances in Neural Information Processing Systems 14, pages 785-793.",
                "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
                "SVMs for the blogosphere: Blog identification and splog detection.",
                "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
                "Learning algorithms with optimal stability in neural networks.",
                "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
                "On-line spam filter fusion.",
                "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
                "Spam filtering with naive bayes - which naive bayes?",
                "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
                "Blocking blog spam with language model disagreement.",
                "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
                "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
                "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
                "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
                "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
                "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
                "On attacking statistical spam filters.",
                "CEAS: First Conference on Email and Anti-Spam, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Otras formas de spam también se están volviendo problemáticas, incluido el spam del blog, en el que los spammers publican comentarios no deseados en los blogs [21] y Splogs, que son blogs falsos construidos para permitir el \"enlace spam\" con la esperanza de aumentar la importancia medida de un dadoPágina web a los ojos de los motores de búsqueda automatizados [17].",
                "En este documento, no exploramos el problema relacionado de \"Spam de enlace\", que actualmente se combina mejor mediante análisis de enlaces [13].1.1 Una controversia anti-Spama La comunidad anti-Spama se ha dividido en la elección del mejor método de aprendizaje automático para la detección de spam basada en el contenido."
            ],
            "translated_text": "",
            "candidates": [
                "enlace spam",
                "enlace spam",
                "enlace spam",
                "Spam de enlace"
            ],
            "error": []
        },
        "content-based spam detection": {
            "translated_key": "detección de spam basada en el contenido",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
                "Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
                "The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification.",
                "However, similar performance gains have yet to be demonstrated for online spam filtering.",
                "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
                "In this paper, we offer a resolution to this controversy.",
                "First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets.",
                "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
                "Our results are experimentally verified on email spam, blog spam, and splog detection tasks.",
                "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
                "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
                "The most well known form of spam is email spam, which remains a major problem for large email systems.",
                "Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
                "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.",
                "The approach of content analysis has shown particular promise and generality for combating spam.",
                "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam.",
                "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].",
                "In this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for <br>content-based spam detection</br>.",
                "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
                "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
                "Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
                "This Bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates.",
                "This allows a deployed system to easily adapt to a changing environment over time.",
                "Other fast methods for spam filtering include compression models [1] and logistic regression [10].",
                "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
                "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
                "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
                "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2.",
                "SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs.",
                "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering.",
                "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
                "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
                "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
                "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
                "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them.",
                "We use the following notation to describe SVMs, which draws from [23].",
                "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
                "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
                "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
                "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
                "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
                "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
                "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
                "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
                "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
                "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
                "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
                "Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally.",
                "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
                "Online learning allows a deployed system to adapt itself in a changing environment.",
                "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
                "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
                "One method of incremental and decremental SVM learning was proposed in [2].",
                "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
                "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
                "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
                "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
                "Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
                "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
                "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
                "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
                "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
                "Note that n-grams may include whitespace, and are overlapping.",
                "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
                "We normalize the vectors with the Euclidean norm.",
                "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
                "For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
                "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
                "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
                "Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4].",
                "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
                "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
                "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
                "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
                "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
                "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
                "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
                "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
                "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
                "Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
                "We used two large benchmark data sets of email spam as our test corpora.",
                "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
                "We used the canonical ordering provided with each of these data sets for fair comparison.",
                "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
                "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
                "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
                "These results show that Online SVMs do give state of the art performance on email spam.",
                "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
                "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
                "However, large benchmark data sets of labeled blog comment spam do not yet exist.",
                "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for Splog vs. Blog Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
                "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
                "We use the parameter setting C = 100, with the same feature space mappings as above.",
                "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
                "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data.",
                "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs.",
                "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
                "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
                "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
                "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
                "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
                "These times do not include the time spent mapping strings to feature vectors.",
                "The number of examples in each data set is given in the last row as corpus size.",
                "A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error.",
                "This corresponds to setting C to a low value.",
                "Hyperplane B accepts a smaller margin in order to reduce training error.",
                "This corresponds to setting C to a high value.",
                "Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering.",
                "However, this performance comes at a price.",
                "Although the blog comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
                "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
                "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host.",
                "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
                "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space.",
                "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
                "However, as we saw in the previous section, the task of <br>content-based spam detection</br> is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
                "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
                "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
                "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
                "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
                "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on <br>content-based spam detection</br>. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
                "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
                "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
                "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
                "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
                "Formally, the optimization problem is now defined most clearly in the dual form [23].",
                "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
                "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
                "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
                "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
                "If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step.",
                "The number of re-training updates can be reduced by relaxing the definition of well classified.",
                "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
                "Here, each update still produces an optimal hyperplane.",
                "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
                "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
                "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
                "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on <br>content-based spam detection</br>, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
                "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
                "Successive iterations of this loop bring the hyperplane closer to an optimal value.",
                "However, it is possible that these iterations provide less benefit than their expense justifies.",
                "That is, a close first approximation may be good enough.",
                "We introduce a parameter T to control the maximum number of iterations we allow.",
                "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
                "EXPERIMENTS In Section 2, we argued that the strong performance on <br>content-based spam detection</br> with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
                "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost.",
                "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
                "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
                "Our main tests on <br>content-based spam detection</br> are performed on large benchmark sets of email data.",
                "We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
                "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
                "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
                "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
                "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
                "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
                "We test a range of values p in a coarse grid search.",
                "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
                "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
                "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
                "These results are important for making state of the art performance on large-scale <br>content-based spam detection</br> practical with online SVMs.",
                "Ordinarily, the training time would grow quadratically with the number of seen examples.",
                "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
                "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
                "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
                "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on <br>content-based spam detection</br>; thus we tested values of T = {1, 2, 5, ∞}.",
                "Other parameters were identical to the original Online SVM tests.",
                "The results on this test were surprisingly stable (see Figure 6).",
                "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
                "This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal.",
                "These results show that for <br>content-based spam detection</br>, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
                "As noted before, when M = 1, the hyperplane is globally optimal at every step.",
                "Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent.",
                "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
                "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
                "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
                "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
                "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and splog detection tasks.",
                "These experiments show comparable performance on these tasks, at radically different costs.",
                "In the previous section, the effect of the different relaxation methods was tested separately.",
                "Here, we tested these methods together to create a full implementation of ROSVM.",
                "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
                "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
                "The splog and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
                "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and splog detection.",
                "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
                "We randomly ordered both the blog comment spam corpus and the splog corpus to create online learning tasks.",
                "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
                "However, this experimental design Table 5: Email Spam Benchmark Data.",
                "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam.",
                "These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these <br>content-based spam detection</br> tasks.",
                "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
                "Note that the CPU time reported for each method was generated on the same computing system.",
                "This time reflects only the time needed to complete online learning on tokenized data.",
                "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
                "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
                "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
                "Second, they show a dramatic disparity in computational cost.",
                "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
                "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
                "Note the blog and splog data sets are relatively small, and results on these data sets must be considered preliminary.",
                "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
                "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
                "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
                "We have presented one resolution to this debate.",
                "Online SVMs do, indeed, proTable 7: Splog Data Set.",
                "These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
                "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
                "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
                "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
                "It is natural to ask why the task of <br>content-based spam detection</br> gets strong performance from ROSVM.",
                "After all, not all data allows the relaxation of SVM requirements.",
                "We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
                "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
                "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
                "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
                "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
                "Finally, we note that the success of relaxed SVM methods for <br>content-based spam detection</br> is a result that depends on the nature of spam data, which is potentially subject to change.",
                "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
                "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
                "REFERENCES [1] A. Bratko and B. Filipic.",
                "Spam filtering using compression models.",
                "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
                "Incremental and decremental support vector machine learning.",
                "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
                "TREC 2006 spam track overview.",
                "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
                "Batch and on-line spam filter comparison.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
                "TREC 2005 spam track overview.",
                "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
                "On-line supervised spam filter evaluation.",
                "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
                "An introduction to support vector machines.",
                "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
                "Alpha seeding for support vector machines.",
                "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
                "Support vector machines for spam categorization.",
                "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
                "Online discriminative spam filter training.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
                "A plan for spam. 2002. [12] P. Graham.",
                "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
                "Spam: Its not just for inboxes anymore.",
                "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
                "Text categorization with suport vector machines: Learning with many relevant features.",
                "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
                "Training linear svms in linear time.",
                "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
                "Online learning with kernels.",
                "In Advances in Neural Information Processing Systems 14, pages 785-793.",
                "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
                "SVMs for the blogosphere: Blog identification and splog detection.",
                "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
                "Learning algorithms with optimal stability in neural networks.",
                "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
                "On-line spam filter fusion.",
                "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
                "Spam filtering with naive bayes - which naive bayes?",
                "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
                "Blocking blog spam with language model disagreement.",
                "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
                "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
                "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
                "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
                "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
                "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
                "On attacking statistical spam filters.",
                "CEAS: First Conference on Email and Anti-Spam, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En este documento, no exploramos el problema relacionado del spam de enlace, que actualmente se combina mejor mediante análisis de enlaces [13].1.1 Una controversia anti-Spama La comunidad anti-Spama se ha dividido en la elección del mejor método de aprendizaje automático para la \"detección de spam basada en el contenido\".",
                "Sin embargo, como vimos en la sección anterior, la tarea de \"detección de spam basada en el contenido\" se logra mejor con SVMS con un alto valor de C. establecer C a un alto valor para este dominio implica que minimizar la pérdida de entrenamiento es más importante queMaximizando el margen (ver Figura 3).",
                "Los resultados experimentales informados en la siguiente sección muestran que igualan o abordan el rendimiento de las SVM en línea completas en \"detección de spam basada en el contenido\".3.1 Reducción del tamaño del problema En los SVM en línea completos, re-óptimos en el conjunto completo de datos vistos en cada actualización, que se vuelve costosa a medida que crece el número de puntos de datos vistos.",
                "En la sección experimental, mostramos que esta versión de SVM en línea, que se actualiza solo en errores reales, no degrada significativamente el rendimiento en la \"detección de spam basada en el contenido\", pero reduce significativamente los costos.3.3 Reducción de iteraciones como solucionador iterativo, SMO realiza pases repetidos sobre el conjunto de datos para optimizar la función objetivo.",
                "Experimentos En la Sección 2, argumentamos que el fuerte rendimiento en la \"detección de spam basada en el contenido\" con SVM con un alto valor de C muestra que el criterio de margen máximo es excesivo, incurre en un costo computacional innecesario.",
                "Nuestras principales pruebas sobre \"detección de spam basada en el contenido\" se realizan en grandes conjuntos de datos de referencia de datos de correo electrónico.",
                "Estos resultados son importantes para hacer que el rendimiento de última generación en la \"detección de spam basada en el contenido\" a gran escala sea práctica con SVM en línea.",
                "Nuestras pruebas iniciales mostraron que el número máximo de iteraciones utilizadas por SMO en línea rara vez era mucho mayor que 10 en \"detección de spam basada en el contenido\";Así probamos valores de t = {1, 2, 5, ∞}.",
                "Estos resultados muestran que para la \"detección de spam basada en el contenido\", podemos reducir el costo computacional al permitir una sola iteración SMO (es decir, t = 1) con un rendimiento efectivamente equivalente.4.1.3 Pruebas de actualizaciones reducidas para nuestro tercer experimento ROSVM, evaluamos el impacto de ajustar el parámetro M para reducir el número total de actualizaciones.",
                "Recarga F1 CPU ONSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 permite una comparación significativa entre nuestros dos métodos en línea en estas tareas de \"detección de spam basada en contenido\"."
            ],
            "translated_text": "",
            "candidates": [
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en el contenido",
                "detección de spam basada en contenido"
            ],
            "error": []
        },
        "bayesian method": {
            "translated_key": "método bayesiano",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
                "Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
                "The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification.",
                "However, similar performance gains have yet to be demonstrated for online spam filtering.",
                "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
                "In this paper, we offer a resolution to this controversy.",
                "First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets.",
                "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
                "Our results are experimentally verified on email spam, blog spam, and splog detection tasks.",
                "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
                "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
                "The most well known form of spam is email spam, which remains a major problem for large email systems.",
                "Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
                "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.",
                "The approach of content analysis has shown particular promise and generality for combating spam.",
                "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam.",
                "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].",
                "In this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.",
                "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
                "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
                "Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
                "This <br>bayesian method</br> requires only linear training time, and is easily implemented in an online setting with incremental updates.",
                "This allows a deployed system to easily adapt to a changing environment over time.",
                "Other fast methods for spam filtering include compression models [1] and logistic regression [10].",
                "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
                "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
                "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
                "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2.",
                "SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs.",
                "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering.",
                "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
                "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
                "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
                "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
                "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them.",
                "We use the following notation to describe SVMs, which draws from [23].",
                "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
                "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
                "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
                "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
                "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
                "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
                "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
                "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
                "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
                "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
                "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
                "Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally.",
                "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
                "Online learning allows a deployed system to adapt itself in a changing environment.",
                "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
                "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
                "One method of incremental and decremental SVM learning was proposed in [2].",
                "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
                "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
                "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
                "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
                "Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
                "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
                "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
                "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
                "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
                "Note that n-grams may include whitespace, and are overlapping.",
                "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
                "We normalize the vectors with the Euclidean norm.",
                "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
                "For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
                "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
                "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
                "Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4].",
                "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
                "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
                "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
                "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
                "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
                "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
                "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
                "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
                "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
                "Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
                "We used two large benchmark data sets of email spam as our test corpora.",
                "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
                "We used the canonical ordering provided with each of these data sets for fair comparison.",
                "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
                "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
                "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
                "These results show that Online SVMs do give state of the art performance on email spam.",
                "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
                "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
                "However, large benchmark data sets of labeled blog comment spam do not yet exist.",
                "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for Splog vs. Blog Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
                "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
                "We use the parameter setting C = 100, with the same feature space mappings as above.",
                "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
                "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data.",
                "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs.",
                "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
                "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
                "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
                "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
                "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
                "These times do not include the time spent mapping strings to feature vectors.",
                "The number of examples in each data set is given in the last row as corpus size.",
                "A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error.",
                "This corresponds to setting C to a low value.",
                "Hyperplane B accepts a smaller margin in order to reduce training error.",
                "This corresponds to setting C to a high value.",
                "Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering.",
                "However, this performance comes at a price.",
                "Although the blog comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
                "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
                "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host.",
                "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
                "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space.",
                "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
                "However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
                "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
                "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
                "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
                "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
                "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
                "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
                "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
                "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
                "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
                "Formally, the optimization problem is now defined most clearly in the dual form [23].",
                "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
                "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
                "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
                "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
                "If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step.",
                "The number of re-training updates can be reduced by relaxing the definition of well classified.",
                "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
                "Here, each update still produces an optimal hyperplane.",
                "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
                "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
                "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
                "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
                "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
                "Successive iterations of this loop bring the hyperplane closer to an optimal value.",
                "However, it is possible that these iterations provide less benefit than their expense justifies.",
                "That is, a close first approximation may be good enough.",
                "We introduce a parameter T to control the maximum number of iterations we allow.",
                "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
                "EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
                "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost.",
                "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
                "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
                "Our main tests on content-based spam detection are performed on large benchmark sets of email data.",
                "We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
                "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
                "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
                "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
                "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
                "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
                "We test a range of values p in a coarse grid search.",
                "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
                "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
                "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
                "These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs.",
                "Ordinarily, the training time would grow quadratically with the number of seen examples.",
                "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
                "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
                "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
                "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}.",
                "Other parameters were identical to the original Online SVM tests.",
                "The results on this test were surprisingly stable (see Figure 6).",
                "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
                "This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal.",
                "These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
                "As noted before, when M = 1, the hyperplane is globally optimal at every step.",
                "Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent.",
                "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
                "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
                "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
                "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
                "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and splog detection tasks.",
                "These experiments show comparable performance on these tasks, at radically different costs.",
                "In the previous section, the effect of the different relaxation methods was tested separately.",
                "Here, we tested these methods together to create a full implementation of ROSVM.",
                "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
                "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
                "The splog and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
                "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and splog detection.",
                "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
                "We randomly ordered both the blog comment spam corpus and the splog corpus to create online learning tasks.",
                "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
                "However, this experimental design Table 5: Email Spam Benchmark Data.",
                "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam.",
                "These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks.",
                "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
                "Note that the CPU time reported for each method was generated on the same computing system.",
                "This time reflects only the time needed to complete online learning on tokenized data.",
                "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
                "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
                "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
                "Second, they show a dramatic disparity in computational cost.",
                "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
                "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
                "Note the blog and splog data sets are relatively small, and results on these data sets must be considered preliminary.",
                "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
                "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
                "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
                "We have presented one resolution to this debate.",
                "Online SVMs do, indeed, proTable 7: Splog Data Set.",
                "These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
                "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
                "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
                "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
                "It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM.",
                "After all, not all data allows the relaxation of SVM requirements.",
                "We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
                "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
                "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
                "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
                "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
                "Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change.",
                "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
                "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
                "REFERENCES [1] A. Bratko and B. Filipic.",
                "Spam filtering using compression models.",
                "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
                "Incremental and decremental support vector machine learning.",
                "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
                "TREC 2006 spam track overview.",
                "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
                "Batch and on-line spam filter comparison.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
                "TREC 2005 spam track overview.",
                "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
                "On-line supervised spam filter evaluation.",
                "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
                "An introduction to support vector machines.",
                "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
                "Alpha seeding for support vector machines.",
                "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
                "Support vector machines for spam categorization.",
                "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
                "Online discriminative spam filter training.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
                "A plan for spam. 2002. [12] P. Graham.",
                "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
                "Spam: Its not just for inboxes anymore.",
                "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
                "Text categorization with suport vector machines: Learning with many relevant features.",
                "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
                "Training linear svms in linear time.",
                "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
                "Online learning with kernels.",
                "In Advances in Neural Information Processing Systems 14, pages 785-793.",
                "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
                "SVMs for the blogosphere: Blog identification and splog detection.",
                "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
                "Learning algorithms with optimal stability in neural networks.",
                "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
                "On-line spam filter fusion.",
                "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
                "Spam filtering with naive bayes - which naive bayes?",
                "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
                "Blocking blog spam with language model disagreement.",
                "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
                "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
                "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
                "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
                "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
                "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
                "On attacking statistical spam filters.",
                "CEAS: First Conference on Email and Anti-Spam, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Este \"método bayesiano\" requiere solo tiempo de capacitación lineal, y se implementa fácilmente en un entorno en línea con actualizaciones incrementales."
            ],
            "translated_text": "",
            "candidates": [
                "método bayesiano",
                "método bayesiano"
            ],
            "error": []
        },
        "incremental update": {
            "translated_key": "actualización incremental",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
                "Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
                "The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification.",
                "However, similar performance gains have yet to be demonstrated for online spam filtering.",
                "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
                "In this paper, we offer a resolution to this controversy.",
                "First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets.",
                "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
                "Our results are experimentally verified on email spam, blog spam, and splog detection tasks.",
                "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
                "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
                "The most well known form of spam is email spam, which remains a major problem for large email systems.",
                "Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
                "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.",
                "The approach of content analysis has shown particular promise and generality for combating spam.",
                "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam.",
                "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].",
                "In this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.",
                "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
                "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
                "Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
                "This Bayesian method requires only linear training time, and is easily implemented in an online setting with <br>incremental update</br>s.",
                "This allows a deployed system to easily adapt to a changing environment over time.",
                "Other fast methods for spam filtering include compression models [1] and logistic regression [10].",
                "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
                "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
                "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
                "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2.",
                "SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs.",
                "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering.",
                "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
                "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
                "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
                "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
                "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them.",
                "We use the following notation to describe SVMs, which draws from [23].",
                "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
                "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
                "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
                "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
                "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
                "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
                "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
                "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
                "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
                "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
                "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
                "Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally.",
                "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
                "Online learning allows a deployed system to adapt itself in a changing environment.",
                "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
                "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
                "One method of incremental and decremental SVM learning was proposed in [2].",
                "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
                "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
                "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
                "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
                "Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
                "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
                "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
                "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
                "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
                "Note that n-grams may include whitespace, and are overlapping.",
                "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
                "We normalize the vectors with the Euclidean norm.",
                "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
                "For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
                "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
                "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
                "Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4].",
                "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
                "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
                "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
                "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
                "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
                "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
                "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
                "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
                "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
                "Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
                "We used two large benchmark data sets of email spam as our test corpora.",
                "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
                "We used the canonical ordering provided with each of these data sets for fair comparison.",
                "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
                "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
                "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
                "These results show that Online SVMs do give state of the art performance on email spam.",
                "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
                "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
                "However, large benchmark data sets of labeled blog comment spam do not yet exist.",
                "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for Splog vs. Blog Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
                "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
                "We use the parameter setting C = 100, with the same feature space mappings as above.",
                "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
                "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data.",
                "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs.",
                "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
                "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
                "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
                "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
                "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
                "These times do not include the time spent mapping strings to feature vectors.",
                "The number of examples in each data set is given in the last row as corpus size.",
                "A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error.",
                "This corresponds to setting C to a low value.",
                "Hyperplane B accepts a smaller margin in order to reduce training error.",
                "This corresponds to setting C to a high value.",
                "Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering.",
                "However, this performance comes at a price.",
                "Although the blog comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
                "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
                "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host.",
                "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
                "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space.",
                "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
                "However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
                "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
                "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
                "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
                "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
                "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
                "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
                "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
                "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
                "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
                "Formally, the optimization problem is now defined most clearly in the dual form [23].",
                "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
                "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
                "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
                "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
                "If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step.",
                "The number of re-training updates can be reduced by relaxing the definition of well classified.",
                "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
                "Here, each update still produces an optimal hyperplane.",
                "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
                "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
                "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
                "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
                "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
                "Successive iterations of this loop bring the hyperplane closer to an optimal value.",
                "However, it is possible that these iterations provide less benefit than their expense justifies.",
                "That is, a close first approximation may be good enough.",
                "We introduce a parameter T to control the maximum number of iterations we allow.",
                "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
                "EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
                "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost.",
                "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
                "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
                "Our main tests on content-based spam detection are performed on large benchmark sets of email data.",
                "We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
                "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
                "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
                "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
                "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
                "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
                "We test a range of values p in a coarse grid search.",
                "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
                "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
                "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
                "These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs.",
                "Ordinarily, the training time would grow quadratically with the number of seen examples.",
                "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
                "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
                "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
                "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}.",
                "Other parameters were identical to the original Online SVM tests.",
                "The results on this test were surprisingly stable (see Figure 6).",
                "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
                "This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal.",
                "These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
                "As noted before, when M = 1, the hyperplane is globally optimal at every step.",
                "Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent.",
                "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
                "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
                "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
                "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
                "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and splog detection tasks.",
                "These experiments show comparable performance on these tasks, at radically different costs.",
                "In the previous section, the effect of the different relaxation methods was tested separately.",
                "Here, we tested these methods together to create a full implementation of ROSVM.",
                "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
                "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
                "The splog and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
                "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and splog detection.",
                "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
                "We randomly ordered both the blog comment spam corpus and the splog corpus to create online learning tasks.",
                "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
                "However, this experimental design Table 5: Email Spam Benchmark Data.",
                "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam.",
                "These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks.",
                "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
                "Note that the CPU time reported for each method was generated on the same computing system.",
                "This time reflects only the time needed to complete online learning on tokenized data.",
                "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
                "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
                "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
                "Second, they show a dramatic disparity in computational cost.",
                "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
                "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
                "Note the blog and splog data sets are relatively small, and results on these data sets must be considered preliminary.",
                "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
                "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
                "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
                "We have presented one resolution to this debate.",
                "Online SVMs do, indeed, proTable 7: Splog Data Set.",
                "These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
                "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
                "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
                "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
                "It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM.",
                "After all, not all data allows the relaxation of SVM requirements.",
                "We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
                "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
                "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
                "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
                "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
                "Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change.",
                "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
                "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
                "REFERENCES [1] A. Bratko and B. Filipic.",
                "Spam filtering using compression models.",
                "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
                "Incremental and decremental support vector machine learning.",
                "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
                "TREC 2006 spam track overview.",
                "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
                "Batch and on-line spam filter comparison.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
                "TREC 2005 spam track overview.",
                "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
                "On-line supervised spam filter evaluation.",
                "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
                "An introduction to support vector machines.",
                "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
                "Alpha seeding for support vector machines.",
                "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
                "Support vector machines for spam categorization.",
                "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
                "Online discriminative spam filter training.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
                "A plan for spam. 2002. [12] P. Graham.",
                "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
                "Spam: Its not just for inboxes anymore.",
                "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
                "Text categorization with suport vector machines: Learning with many relevant features.",
                "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
                "Training linear svms in linear time.",
                "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
                "Online learning with kernels.",
                "In Advances in Neural Information Processing Systems 14, pages 785-793.",
                "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
                "SVMs for the blogosphere: Blog identification and splog detection.",
                "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
                "Learning algorithms with optimal stability in neural networks.",
                "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
                "On-line spam filter fusion.",
                "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
                "Spam filtering with naive bayes - which naive bayes?",
                "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
                "Blocking blog spam with language model disagreement.",
                "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
                "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
                "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
                "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
                "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
                "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
                "On attacking statistical spam filters.",
                "CEAS: First Conference on Email and Anti-Spam, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Este método bayesiano solo requiere tiempo de capacitación lineal, y se implementa fácilmente en una configuración en línea con \"actualización incremental\" s."
            ],
            "translated_text": "",
            "candidates": [
                "actualización incremental",
                "actualización incremental"
            ],
            "error": []
        },
        "logistic regression": {
            "translated_key": "Regresión logística",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
                "Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
                "The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification.",
                "However, similar performance gains have yet to be demonstrated for online spam filtering.",
                "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
                "In this paper, we offer a resolution to this controversy.",
                "First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets.",
                "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
                "Our results are experimentally verified on email spam, blog spam, and splog detection tasks.",
                "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
                "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
                "The most well known form of spam is email spam, which remains a major problem for large email systems.",
                "Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
                "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.",
                "The approach of content analysis has shown particular promise and generality for combating spam.",
                "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam.",
                "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].",
                "In this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.",
                "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
                "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
                "Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
                "This Bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates.",
                "This allows a deployed system to easily adapt to a changing environment over time.",
                "Other fast methods for spam filtering include compression models [1] and <br>logistic regression</br> [10].",
                "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
                "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
                "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
                "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2.",
                "SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs.",
                "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering.",
                "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
                "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
                "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
                "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
                "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them.",
                "We use the following notation to describe SVMs, which draws from [23].",
                "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
                "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
                "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
                "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
                "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
                "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
                "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
                "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
                "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
                "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
                "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
                "Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally.",
                "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
                "Online learning allows a deployed system to adapt itself in a changing environment.",
                "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
                "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
                "One method of incremental and decremental SVM learning was proposed in [2].",
                "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
                "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
                "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
                "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
                "Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
                "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
                "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
                "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
                "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
                "Note that n-grams may include whitespace, and are overlapping.",
                "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
                "We normalize the vectors with the Euclidean norm.",
                "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
                "For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
                "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
                "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
                "Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4].",
                "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
                "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
                "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
                "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
                "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
                "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
                "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
                "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
                "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
                "Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
                "We used two large benchmark data sets of email spam as our test corpora.",
                "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
                "We used the canonical ordering provided with each of these data sets for fair comparison.",
                "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
                "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
                "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
                "These results show that Online SVMs do give state of the art performance on email spam.",
                "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
                "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], <br>logistic regression</br> [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
                "However, large benchmark data sets of labeled blog comment spam do not yet exist.",
                "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for Splog vs. Blog Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
                "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
                "We use the parameter setting C = 100, with the same feature space mappings as above.",
                "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
                "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data.",
                "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs.",
                "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
                "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
                "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
                "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
                "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
                "These times do not include the time spent mapping strings to feature vectors.",
                "The number of examples in each data set is given in the last row as corpus size.",
                "A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error.",
                "This corresponds to setting C to a low value.",
                "Hyperplane B accepts a smaller margin in order to reduce training error.",
                "This corresponds to setting C to a high value.",
                "Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering.",
                "However, this performance comes at a price.",
                "Although the blog comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
                "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
                "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host.",
                "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
                "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space.",
                "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
                "However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
                "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
                "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
                "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
                "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
                "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
                "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
                "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
                "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
                "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
                "Formally, the optimization problem is now defined most clearly in the dual form [23].",
                "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
                "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
                "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
                "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
                "If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step.",
                "The number of re-training updates can be reduced by relaxing the definition of well classified.",
                "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
                "Here, each update still produces an optimal hyperplane.",
                "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
                "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
                "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
                "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
                "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
                "Successive iterations of this loop bring the hyperplane closer to an optimal value.",
                "However, it is possible that these iterations provide less benefit than their expense justifies.",
                "That is, a close first approximation may be good enough.",
                "We introduce a parameter T to control the maximum number of iterations we allow.",
                "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
                "EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
                "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost.",
                "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
                "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
                "Our main tests on content-based spam detection are performed on large benchmark sets of email data.",
                "We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
                "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
                "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
                "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
                "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
                "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
                "We test a range of values p in a coarse grid search.",
                "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
                "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
                "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
                "These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs.",
                "Ordinarily, the training time would grow quadratically with the number of seen examples.",
                "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
                "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
                "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
                "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}.",
                "Other parameters were identical to the original Online SVM tests.",
                "The results on this test were surprisingly stable (see Figure 6).",
                "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
                "This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal.",
                "These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
                "As noted before, when M = 1, the hyperplane is globally optimal at every step.",
                "Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent.",
                "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
                "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
                "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
                "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
                "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and splog detection tasks.",
                "These experiments show comparable performance on these tasks, at radically different costs.",
                "In the previous section, the effect of the different relaxation methods was tested separately.",
                "Here, we tested these methods together to create a full implementation of ROSVM.",
                "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
                "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
                "The splog and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
                "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and splog detection.",
                "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
                "We randomly ordered both the blog comment spam corpus and the splog corpus to create online learning tasks.",
                "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
                "However, this experimental design Table 5: Email Spam Benchmark Data.",
                "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam.",
                "These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks.",
                "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
                "Note that the CPU time reported for each method was generated on the same computing system.",
                "This time reflects only the time needed to complete online learning on tokenized data.",
                "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
                "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
                "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
                "Second, they show a dramatic disparity in computational cost.",
                "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
                "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
                "Note the blog and splog data sets are relatively small, and results on these data sets must be considered preliminary.",
                "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
                "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
                "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
                "We have presented one resolution to this debate.",
                "Online SVMs do, indeed, proTable 7: Splog Data Set.",
                "These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
                "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
                "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
                "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
                "It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM.",
                "After all, not all data allows the relaxation of SVM requirements.",
                "We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
                "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
                "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
                "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
                "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
                "Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change.",
                "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
                "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
                "REFERENCES [1] A. Bratko and B. Filipic.",
                "Spam filtering using compression models.",
                "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
                "Incremental and decremental support vector machine learning.",
                "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
                "TREC 2006 spam track overview.",
                "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
                "Batch and on-line spam filter comparison.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
                "TREC 2005 spam track overview.",
                "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
                "On-line supervised spam filter evaluation.",
                "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
                "An introduction to support vector machines.",
                "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
                "Alpha seeding for support vector machines.",
                "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
                "Support vector machines for spam categorization.",
                "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
                "Online discriminative spam filter training.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
                "A plan for spam. 2002. [12] P. Graham.",
                "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
                "Spam: Its not just for inboxes anymore.",
                "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
                "Text categorization with suport vector machines: Learning with many relevant features.",
                "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
                "Training linear svms in linear time.",
                "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
                "Online learning with kernels.",
                "In Advances in Neural Information Processing Systems 14, pages 785-793.",
                "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
                "SVMs for the blogosphere: Blog identification and splog detection.",
                "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
                "Learning algorithms with optimal stability in neural networks.",
                "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
                "On-line spam filter fusion.",
                "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
                "Spam filtering with naive bayes - which naive bayes?",
                "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
                "Blocking blog spam with language model disagreement.",
                "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
                "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
                "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
                "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
                "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
                "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
                "On attacking statistical spam filters.",
                "CEAS: First Conference on Email and Anti-Spam, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Otros métodos rápidos para el filtrado de spam incluyen modelos de compresión [1] y \"regresión logística\" [10].",
                "Hasta donde sabemos, el SVM en línea ha superado a cualquier otro filtro único en estos conjuntos de datos, incluidos los que usan métodos bayesianos [5, 3], modelos de compresión [5, 3], \"regresión logística\" [10] y variantes de perceptrones[3], los ganadores de la competencia TREC [5, 3], y los filtros de correo de correo electrónico de código abierto Bogofilter V1.1.5 y SPAMPROBE V1.4D.2.6 Comentarios del blog Spam y SVMS Comment Spam es similar al correo no deseado por correo electrónico en muchos aspectos, y se han propuesto métodos basados en contenido para detectar estos comentarios de spam [21]."
            ],
            "translated_text": "",
            "candidates": [
                "Regresión logística",
                "regresión logística",
                "Regresión logística",
                "regresión logística"
            ],
            "error": []
        },
        "hyperplane": {
            "translated_key": "hiperplano",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
                "Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
                "The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification.",
                "However, similar performance gains have yet to be demonstrated for online spam filtering.",
                "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
                "In this paper, we offer a resolution to this controversy.",
                "First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets.",
                "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
                "Our results are experimentally verified on email spam, blog spam, and splog detection tasks.",
                "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
                "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
                "The most well known form of spam is email spam, which remains a major problem for large email systems.",
                "Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
                "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.",
                "The approach of content analysis has shown particular promise and generality for combating spam.",
                "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam.",
                "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].",
                "In this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.",
                "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
                "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
                "Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
                "This Bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates.",
                "This allows a deployed system to easily adapt to a changing environment over time.",
                "Other fast methods for spam filtering include compression models [1] and logistic regression [10].",
                "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
                "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
                "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
                "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2.",
                "SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs.",
                "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering.",
                "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
                "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
                "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
                "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
                "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a <br>hyperplane</br> that separates two classes of data in data space while maximizing the margin between them.",
                "We use the following notation to describe SVMs, which draws from [23].",
                "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
                "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
                "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating <br>hyperplane</br>, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
                "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
                "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
                "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
                "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
                "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
                "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
                "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
                "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
                "Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally.",
                "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
                "Online learning allows a deployed system to adapt itself in a changing environment.",
                "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
                "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
                "One method of incremental and decremental SVM learning was proposed in [2].",
                "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
                "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
                "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
                "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
                "Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
                "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
                "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
                "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
                "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
                "Note that n-grams may include whitespace, and are overlapping.",
                "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
                "We normalize the vectors with the Euclidean norm.",
                "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
                "For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
                "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
                "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
                "Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4].",
                "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
                "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
                "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
                "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
                "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
                "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
                "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
                "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
                "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
                "Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
                "We used two large benchmark data sets of email spam as our test corpora.",
                "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
                "We used the canonical ordering provided with each of these data sets for fair comparison.",
                "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
                "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
                "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
                "These results show that Online SVMs do give state of the art performance on email spam.",
                "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
                "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
                "However, large benchmark data sets of labeled blog comment spam do not yet exist.",
                "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for Splog vs. Blog Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
                "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
                "We use the parameter setting C = 100, with the same feature space mappings as above.",
                "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
                "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data.",
                "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs.",
                "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
                "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
                "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
                "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
                "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
                "These times do not include the time spent mapping strings to feature vectors.",
                "The number of examples in each data set is given in the last row as corpus size.",
                "A B Figure 3: Visualizing the effect of C. <br>hyperplane</br> A maximizes the margin while accepting a small amount of training error.",
                "This corresponds to setting C to a low value.",
                "<br>hyperplane</br> B accepts a smaller margin in order to reduce training error.",
                "This corresponds to setting C to a high value.",
                "Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering.",
                "However, this performance comes at a price.",
                "Although the blog comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
                "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
                "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host.",
                "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
                "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision <br>hyperplane</br> that maximizes the margin between classes in the data space.",
                "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
                "However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
                "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
                "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
                "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
                "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
                "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
                "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
                "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
                "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
                "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
                "Formally, the optimization problem is now defined most clearly in the dual form [23].",
                "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
                "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the <br>hyperplane</br> that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
                "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
                "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
                "If we re-train on every example that is not well-classified, our <br>hyperplane</br> will be guaranteed to be optimal at every step.",
                "The number of re-training updates can be reduced by relaxing the definition of well classified.",
                "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
                "Here, each update still produces an optimal <br>hyperplane</br>.",
                "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
                "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
                "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
                "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
                "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
                "Successive iterations of this loop bring the <br>hyperplane</br> closer to an optimal value.",
                "However, it is possible that these iterations provide less benefit than their expense justifies.",
                "That is, a close first approximation may be good enough.",
                "We introduce a parameter T to control the maximum number of iterations we allow.",
                "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
                "EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
                "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin <br>hyperplane</br> in return for reduced computational cost.",
                "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
                "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
                "Our main tests on content-based spam detection are performed on large benchmark sets of email data.",
                "We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
                "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
                "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
                "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
                "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
                "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
                "We test a range of values p in a coarse grid search.",
                "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
                "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
                "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
                "These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs.",
                "Ordinarily, the training time would grow quadratically with the number of seen examples.",
                "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
                "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
                "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
                "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}.",
                "Other parameters were identical to the original Online SVM tests.",
                "The results on this test were surprisingly stable (see Figure 6).",
                "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
                "This suggests that any additional iterations are spent attempting to find improvements to a <br>hyperplane</br> that is already very close to optimal.",
                "These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
                "As noted before, when M = 1, the <br>hyperplane</br> is globally optimal at every step.",
                "Reducing M allows a slightly inconsistent <br>hyperplane</br> to persist until it encounters an example for which it is too inconsistent.",
                "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
                "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
                "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
                "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
                "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and splog detection tasks.",
                "These experiments show comparable performance on these tasks, at radically different costs.",
                "In the previous section, the effect of the different relaxation methods was tested separately.",
                "Here, we tested these methods together to create a full implementation of ROSVM.",
                "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
                "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
                "The splog and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
                "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and splog detection.",
                "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
                "We randomly ordered both the blog comment spam corpus and the splog corpus to create online learning tasks.",
                "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
                "However, this experimental design Table 5: Email Spam Benchmark Data.",
                "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam.",
                "These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks.",
                "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
                "Note that the CPU time reported for each method was generated on the same computing system.",
                "This time reflects only the time needed to complete online learning on tokenized data.",
                "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
                "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
                "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
                "Second, they show a dramatic disparity in computational cost.",
                "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
                "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
                "Note the blog and splog data sets are relatively small, and results on these data sets must be considered preliminary.",
                "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
                "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
                "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
                "We have presented one resolution to this debate.",
                "Online SVMs do, indeed, proTable 7: Splog Data Set.",
                "These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
                "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
                "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
                "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
                "It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM.",
                "After all, not all data allows the relaxation of SVM requirements.",
                "We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
                "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
                "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
                "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
                "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
                "Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change.",
                "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
                "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
                "REFERENCES [1] A. Bratko and B. Filipic.",
                "Spam filtering using compression models.",
                "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
                "Incremental and decremental support vector machine learning.",
                "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
                "TREC 2006 spam track overview.",
                "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
                "Batch and on-line spam filter comparison.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
                "TREC 2005 spam track overview.",
                "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
                "On-line supervised spam filter evaluation.",
                "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
                "An introduction to support vector machines.",
                "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
                "Alpha seeding for support vector machines.",
                "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
                "Support vector machines for spam categorization.",
                "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
                "Online discriminative spam filter training.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
                "A plan for spam. 2002. [12] P. Graham.",
                "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
                "Spam: Its not just for inboxes anymore.",
                "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
                "Text categorization with suport vector machines: Learning with many relevant features.",
                "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
                "Training linear svms in linear time.",
                "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
                "Online learning with kernels.",
                "In Advances in Neural Information Processing Systems 14, pages 785-793.",
                "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
                "SVMs for the blogosphere: Blog identification and splog detection.",
                "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
                "Learning algorithms with optimal stability in neural networks.",
                "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
                "On-line spam filter fusion.",
                "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
                "Spam filtering with naive bayes - which naive bayes?",
                "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
                "Blocking blog spam with language model disagreement.",
                "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
                "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
                "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
                "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
                "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
                "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
                "On attacking statistical spam filters.",
                "CEAS: First Conference on Email and Anti-Spam, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Estos hallazgos motivan nuestra propuesta de SVM en línea relajados en la siguiente sección.2.1 Antecedentes: SVMS SVMS es una metodología de aprendizaje automático robusto que se ha demostrado que produce un rendimiento de última generación en la clasificación de texto [14].Al encontrar un \"hiperplano\" que separa dos clases de datos en el espacio de datos mientras maximiza el margen entre ellos.",
                "Los SVM lineales que empleamos en este documento usan un vector de hipótesis W y BIAS Término B para clasificar un nuevo ejemplo X, generando una etiqueta de clase predicha F (x): f (x) = signo (<w, x> +b)SVMS Encuentra la hipótesis W, que define la separación del \"hiperplano\", minimizando la siguiente función objetivo sobre todos los n ejemplos de entrenamiento: τ (w, ξ) = 1 2 || w || 2 + c nx i = i ξi debajo delrestricciones que ∀i = {1..n}: yi (<w, xi> +b) ≥ 1 - ξi, ξi ≥ 0 En esta función objetivo, cada variable floja ξi muestra la cantidad de error que comete el clasificador en unDado ejemplo xi.",
                "A B Figura 3: Visualizar el efecto de C. \"Hiperplano\" A maximiza el margen mientras acepta una pequeña cantidad de error de entrenamiento.",
                "\"Hyperplane\" B acepta un margen más pequeño para reducir el error de entrenamiento.",
                "SVMS en línea relajado (ROSVM) Uno de los principales beneficios de SVM es que encuentran una decisión de \"hiperplano\" que maximiza el margen entre las clases en el espacio de datos.",
                "Por lo tanto, no se garantiza que el margen encontrado por una optimización sea uno que maximice el margen para el conjunto de datos globales de ejemplos {x1 ,..., xn)}, pero más bien uno que satisfaga un requisito relajado de que el margen se maximice sobre los ejemplos {x (n - p+1) ,..., xn}, sujeto a las restricciones fijas en el \"hiperplano\" que se encontraron en optimizaciones anteriores sobre ejemplos {x1 ,..., x (n - p)}.(Para completar, cuando P ≥ N, defina (N - P) = 1.)",
                "Si volvemos a entrenar en cada ejemplo que no está bien clasificado, nuestro \"hiperplano\" se garantizará que será óptimo en cada paso.",
                "Aquí, cada actualización todavía produce un \"hiperplano\" óptimo.",
                "Las iteraciones sucesivas de este bucle acercan el \"hiperplano\" a un valor óptimo.",
                "En la Sección 3, propusimos ROSVM para abordar este problema, ya que ambos métodos intercambian garantías en el \"hiperplano\" del margen máximo a cambio de un costo computacional reducido."
            ],
            "translated_text": "",
            "candidates": [
                "hiperplano",
                "hiperplano",
                "hiperplano",
                "hiperplano",
                "hiperplano",
                "Hiperplano",
                "hiperplano",
                "Hyperplane",
                "hiperplano",
                "hiperplano",
                "Hiperplano",
                "hiperplano",
                "hiperplano",
                "hiperplano",
                "hiperplano",
                "hiperplano",
                "hiperplano",
                "hiperplano",
                "hiperplano",
                "hiperplano"
            ],
            "error": []
        },
        "feature mapping": {
            "translated_key": "mapeo de características",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
                "Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
                "The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification.",
                "However, similar performance gains have yet to be demonstrated for online spam filtering.",
                "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
                "In this paper, we offer a resolution to this controversy.",
                "First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets.",
                "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
                "Our results are experimentally verified on email spam, blog spam, and splog detection tasks.",
                "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
                "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
                "The most well known form of spam is email spam, which remains a major problem for large email systems.",
                "Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
                "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.",
                "The approach of content analysis has shown particular promise and generality for combating spam.",
                "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam.",
                "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].",
                "In this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.",
                "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
                "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
                "Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
                "This Bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates.",
                "This allows a deployed system to easily adapt to a changing environment over time.",
                "Other fast methods for spam filtering include compression models [1] and logistic regression [10].",
                "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
                "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
                "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
                "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2.",
                "SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs.",
                "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering.",
                "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
                "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
                "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
                "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
                "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them.",
                "We use the following notation to describe SVMs, which draws from [23].",
                "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
                "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
                "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
                "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
                "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
                "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
                "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
                "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
                "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
                "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
                "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
                "Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally.",
                "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
                "Online learning allows a deployed system to adapt itself in a changing environment.",
                "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
                "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
                "One method of incremental and decremental SVM learning was proposed in [2].",
                "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
                "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
                "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
                "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
                "Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 <br>feature mapping</br> Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
                "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
                "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
                "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
                "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
                "Note that n-grams may include whitespace, and are overlapping.",
                "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
                "We normalize the vectors with the Euclidean norm.",
                "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
                "For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
                "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
                "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
                "Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4].",
                "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
                "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
                "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
                "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
                "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
                "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
                "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
                "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
                "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
                "Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
                "We used two large benchmark data sets of email spam as our test corpora.",
                "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
                "We used the canonical ordering provided with each of these data sets for fair comparison.",
                "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
                "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
                "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
                "These results show that Online SVMs do give state of the art performance on email spam.",
                "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
                "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
                "However, large benchmark data sets of labeled blog comment spam do not yet exist.",
                "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for Splog vs. Blog Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
                "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
                "We use the parameter setting C = 100, with the same feature space mappings as above.",
                "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
                "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data.",
                "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs.",
                "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
                "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
                "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
                "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
                "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
                "These times do not include the time spent mapping strings to feature vectors.",
                "The number of examples in each data set is given in the last row as corpus size.",
                "A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error.",
                "This corresponds to setting C to a low value.",
                "Hyperplane B accepts a smaller margin in order to reduce training error.",
                "This corresponds to setting C to a high value.",
                "Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering.",
                "However, this performance comes at a price.",
                "Although the blog comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
                "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
                "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host.",
                "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
                "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space.",
                "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
                "However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
                "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
                "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
                "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
                "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
                "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
                "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
                "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
                "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
                "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
                "Formally, the optimization problem is now defined most clearly in the dual form [23].",
                "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
                "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
                "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
                "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
                "If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step.",
                "The number of re-training updates can be reduced by relaxing the definition of well classified.",
                "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
                "Here, each update still produces an optimal hyperplane.",
                "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
                "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
                "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
                "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
                "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
                "Successive iterations of this loop bring the hyperplane closer to an optimal value.",
                "However, it is possible that these iterations provide less benefit than their expense justifies.",
                "That is, a close first approximation may be good enough.",
                "We introduce a parameter T to control the maximum number of iterations we allow.",
                "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
                "EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
                "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost.",
                "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
                "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
                "Our main tests on content-based spam detection are performed on large benchmark sets of email data.",
                "We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
                "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
                "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
                "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
                "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
                "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
                "We test a range of values p in a coarse grid search.",
                "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
                "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
                "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
                "These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs.",
                "Ordinarily, the training time would grow quadratically with the number of seen examples.",
                "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
                "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
                "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
                "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}.",
                "Other parameters were identical to the original Online SVM tests.",
                "The results on this test were surprisingly stable (see Figure 6).",
                "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
                "This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal.",
                "These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
                "As noted before, when M = 1, the hyperplane is globally optimal at every step.",
                "Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent.",
                "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
                "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
                "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
                "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
                "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and splog detection tasks.",
                "These experiments show comparable performance on these tasks, at radically different costs.",
                "In the previous section, the effect of the different relaxation methods was tested separately.",
                "Here, we tested these methods together to create a full implementation of ROSVM.",
                "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
                "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
                "The splog and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
                "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and splog detection.",
                "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
                "We randomly ordered both the blog comment spam corpus and the splog corpus to create online learning tasks.",
                "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
                "However, this experimental design Table 5: Email Spam Benchmark Data.",
                "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam.",
                "These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks.",
                "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
                "Note that the CPU time reported for each method was generated on the same computing system.",
                "This time reflects only the time needed to complete online learning on tokenized data.",
                "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
                "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
                "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
                "Second, they show a dramatic disparity in computational cost.",
                "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
                "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
                "Note the blog and splog data sets are relatively small, and results on these data sets must be considered preliminary.",
                "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
                "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
                "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
                "We have presented one resolution to this debate.",
                "Online SVMs do, indeed, proTable 7: Splog Data Set.",
                "These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
                "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
                "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
                "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
                "It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM.",
                "After all, not all data allows the relaxation of SVM requirements.",
                "We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
                "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
                "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
                "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
                "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
                "Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change.",
                "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
                "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
                "REFERENCES [1] A. Bratko and B. Filipic.",
                "Spam filtering using compression models.",
                "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
                "Incremental and decremental support vector machine learning.",
                "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
                "TREC 2006 spam track overview.",
                "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
                "Batch and on-line spam filter comparison.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
                "TREC 2005 spam track overview.",
                "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
                "On-line supervised spam filter evaluation.",
                "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
                "An introduction to support vector machines.",
                "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
                "Alpha seeding for support vector machines.",
                "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
                "Support vector machines for spam categorization.",
                "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
                "Online discriminative spam filter training.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
                "A plan for spam. 2002. [12] P. Graham.",
                "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
                "Spam: Its not just for inboxes anymore.",
                "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
                "Text categorization with suport vector machines: Learning with many relevant features.",
                "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
                "Training linear svms in linear time.",
                "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
                "Online learning with kernels.",
                "In Advances in Neural Information Processing Systems 14, pages 785-793.",
                "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
                "SVMs for the blogosphere: Blog identification and splog detection.",
                "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
                "Learning algorithms with optimal stability in neural networks.",
                "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
                "On-line spam filter fusion.",
                "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
                "Spam filtering with naive bayes - which naive bayes?",
                "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
                "Blocking blog spam with language model disagreement.",
                "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
                "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
                "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
                "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
                "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
                "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
                "On attacking statistical spam filters.",
                "CEAS: First Conference on Email and Anti-Spam, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Debido a que el trabajo previo (y nuestras propias pruebas iniciales) indica que los valores de características binarias dan los mejores resultados para el filtrado de spam [20, 9], optimizamos nuestra implementación de la SMO en línea para explotar los productos internos rápidos con vectores binarios.1 2.3 Las características de extracción de contenido de extracción de contenido de extracción de spam de \"mapeo de características de texto se pueden hacer de varias maneras, especialmente cuando ese texto puede incluir hipercontente y meta-contenido, como HTML e información de encabezado."
            ],
            "translated_text": "",
            "candidates": [
                "mapeo de características"
            ],
            "error": []
        },
        "spam filter": {
            "translated_key": "filtro de spam",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Relaxed Online SVMs for Spam Filtering D. Sculley Tufts University Department of Computer Science 161 College Ave., Medford, MA USA dsculleycs.tufts.edu Gabriel M. Wachman Tufts University Department of Computer Science 161 College Ave., Medford, MA USA gwachm01cs.tufts.edu ABSTRACT Spam is a key problem in electronic communication, including large-scale email systems and the growing number of blogs.",
                "Content-based filtering is one reliable method of combating this threat in its various forms, but some academic researchers and industrial practitioners disagree on how best to filter spam.",
                "The former have advocated the use of Support Vector Machines (SVMs) for content-based filtering, as this machine learning methodology gives state-of-the-art performance for text classification.",
                "However, similar performance gains have yet to be demonstrated for online spam filtering.",
                "Additionally, practitioners cite the high cost of SVMs as reason to prefer faster (if less statistically robust) Bayesian methods.",
                "In this paper, we offer a resolution to this controversy.",
                "First, we show that online SVMs indeed give state-of-the-art classification performance on online spam filtering on large benchmark data sets.",
                "Second, we show that nearly equivalent performance may be achieved by a Relaxed Online SVM (ROSVM) at greatly reduced computational cost.",
                "Our results are experimentally verified on email spam, blog spam, and splog detection tasks.",
                "Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - spam General Terms Measurement, Experimentation, Algorithms 1.",
                "INTRODUCTION Electronic communication is increasingly plagued by unwanted or harmful content known as spam.",
                "The most well known form of spam is email spam, which remains a major problem for large email systems.",
                "Other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].",
                "There are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.",
                "The approach of content analysis has shown particular promise and generality for combating spam.",
                "In content analysis, the actual message text (often including hyper-text and meta-text, such as HTML and headers) is analyzed using machine learning techniques for text classification to determine if the given content is spam.",
                "Content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].",
                "In this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13]. 1.1 An Anti-Spam Controversy The anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.",
                "Academic researchers have tended to favor the use of Support Vector Machines (SVMs), a statistically robust machine learning method [7] which yields state-of-theart performance on general text classification [14].",
                "However, SVMs typically require training time that is quadratic in the number of training examples, and are impractical for largescale email systems.",
                "Practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of Naive Bayes text classification [11, 12, 20].",
                "This Bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates.",
                "This allows a deployed system to easily adapt to a changing environment over time.",
                "Other fast methods for spam filtering include compression models [1] and logistic regression [10].",
                "It has not yet been empirically demonstrated that SVMs give improved performance over these methods in an online spam detection setting [4]. 1.2 Contributions In this paper, we address the anti-spam controversy and offer a potential resolution.",
                "We first demonstrate that online SVMs do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.",
                "We then analyze the effect of the tradeoff parameter in the SVM objective function, which shows that the expensive SVM methodology may, in fact, be overkill for spam detection.",
                "We reduce the computational cost of SVM learning by relaxing this requirement on the maximum margin in online settings, and create a Relaxed Online SVM, ROSVM, appropriate for high performance content-based spam filtering in large-scale settings. 2.",
                "SPAM AND ONLINE SVMS The controversy between academics and practitioners in spam filtering centers on the use of SVMs.",
                "The former advocate their use, but have yet to demonstrate strong performance with SVMs on online spam filtering.",
                "Indeed, the results of [4] show that, when used with default parameters, SVMs actually perform worse than other methods.",
                "In this section, we review the basic workings of SVMs and describe a simple Online SVM algorithm.",
                "We then show that Online SVMs indeed achieve state-of-the-art performance on filtering email spam, blog comment spam, and splogs, so long as the tradeoff parameter C is set to a high value.",
                "However, the cost of Online SVMs turns out to be prohibitive for largescale applications.",
                "These findings motivate our proposal of Relaxed Online SVMs in the following section. 2.1 Background: SVMs SVMs are a robust machine learning methodology which has been shown to yield state-of-the-art performance on text classification [14]. by finding a hyperplane that separates two classes of data in data space while maximizing the margin between them.",
                "We use the following notation to describe SVMs, which draws from [23].",
                "A data set X contains n labeled example vectors {(x1, y1) . . . (xn, yn)}, where each xi is a vector containing features describing example i, and each yi is the class label for that example.",
                "In spam detection, the classes spam and ham (i.e., not spam) are assigned the numerical class labels +1 and −1, respectively.",
                "The linear SVMs we employ in this paper use a hypothesis vector w and bias term b to classify a new example x, by generating a predicted class label f(x): f(x) = sign(< w, x > +b) SVMs find the hypothesis w, which defines the separating hyperplane, by minimizing the following objective function over all n training examples: τ(w, ξ) = 1 2 ||w||2 + C nX i=i ξi under the constraints that ∀i = {1..n} : yi(< w, xi > +b) ≥ 1 − ξi, ξi ≥ 0 In this objective function, each slack variable ξi shows the amount of error that the classifier makes on a given example xi.",
                "Minimizing the sum of the slack variables corresponds to minimizing the loss function on the training data, while minimizing the term 1 2 ||w||2 corresponds to maximizing the margin between the two classes [23].",
                "These two optimization goals are often in conflict; the tradeoff parameter C determines how much importance to give each of these tasks.",
                "Linear SVMs exploit data sparsity to classify a new instance in O(s) time, where s is the number of non-zero features.",
                "This is the same classification time as other linear Given: data set X = (x1, y1), . . . , (xn, yn), C, m: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) IF yif(xi) < 1 Find w , b using SMO on seenData, using w, b as seed hypothesis.",
                "Add xi to seenData done Figure 1: Pseudo code for Online SVM. classifiers, and as Naive Bayesian classification.",
                "Training SVMs, however, typically takes O(n2 ) time, for n training examples.",
                "A variant for linear SVMs was recently proposed which trains in O(ns) time [15], but because this method has a high constant, we do not explore it here. 2.2 Online SVMs In many traditional machine learning applications, SVMs are applied in batch mode.",
                "That is, an SVM is trained on an entire set of training data, and is then tested on a separate set of testing data.",
                "Spam filtering is typically tested and deployed in an online setting, which proceeds incrementally.",
                "Here, the learner classifies a new example, is told if its prediction is correct, updates its hypothesis accordingly, and then awaits a new example.",
                "Online learning allows a deployed system to adapt itself in a changing environment.",
                "Re-training an SVM from scratch on the entire set of previously seen data for each new example is cost prohibitive.",
                "However, using an old hypothesis as the starting point for re-training reduces this cost considerably.",
                "One method of incremental and decremental SVM learning was proposed in [2].",
                "Because we are only concerned with incremental learning, we apply a simpler algorithm for converting a batch SVM learner into an online SVM (see Figure 1 for pseudocode), which is similar to the approach of [16].",
                "Each time the Online SVM encounters an example that was poorly classified, it retrains using the old hypothesis as a starting point.",
                "Note that due to the Karush-Kuhn-Tucker (KKT) conditions, it is not necessary to re-train on wellclassified examples that are outside the margins [23].",
                "We used Platts SMO algorithm [22] as a core SVM solver, because it is an iterative method that is well suited to converge quickly from a good initial hypothesis.",
                "Because previous work (and our own initial testing) indicates that binary feature values give the best results for spam filtering [20, 9], we optimized our implementation of the Online SMO to exploit fast inner-products with binary vectors. 1 2.3 Feature Mapping Spam Content Extracting machine learning features from text may be done in a variety of ways, especially when that text may include hyper-content and meta-content such as HTML and header information.",
                "However, previous research has shown that simple methods from text classification, such as bag of words vectors, and overlapping character-level n-grams, can achieve strong results [9].",
                "Formally, a bag of words vector is a vector x with a unique dimension for each possible 1 Our source code is freely available at www.cs.tufts.edu/∼dsculley/onlineSMO. 1 0.999 0.995 0.99 0.985 0.98 0.1 1 10 100 1000 ROCArea C 2-grams 3-grams 4-grams words Figure 2: Tuning the Tradeoff Parameter C. Tests were conducted with Online SMO, using binary feature vectors, on the spamassassin data set of 6034 examples.",
                "Graph plots C versus Area under the ROC curve. word, defined as a contiguous substring of non-whitespace characters.",
                "An n-gram vector is a vector x with a unique dimension for each possible substring of n total characters.",
                "Note that n-grams may include whitespace, and are overlapping.",
                "We use binary feature scoring, which has been shown to be most effective for a variety of spam detection methods [20, 9].",
                "We normalize the vectors with the Euclidean norm.",
                "Furthermore, with email data, we reduce the impact of long messages (for example, with attachments) by considering only the first 3,000 characters of each string.",
                "For blog comments and splogs, we consider the whole text, including any meta-data such as HTML tags, as given.",
                "No other feature selection or domain knowledge was used. 2.4 Tuning the Tradeoff Parameter, C The SVM tradeoff parameter C must be tuned to balance the (potentially conflicting) goals of maximizing the margin and minimizing the training error.",
                "Early work on SVM based spam detection [9] showed that high values of C give best performance with binary features.",
                "Later work has not always followed this lead: a (low) default setting of C was used on splog detection [17], and also on email spam [4].",
                "Following standard machine learning practice, we tuned C on separate tuning data not used for later testing.",
                "We used the publicly available spamassassin email spam data set, and created an online learning task by randomly interleaving all 6034 labeled messages to create a single ordered set.",
                "For tuning, we performed a coarse parameter search for C using powers of ten from .0001 to 10000.",
                "We used the Online SVM described above, and tested both binary bag of words vectors and n-gram vectors with n = {2, 3, 4}.",
                "We used the first 3000 characters of each message, which included header information, body of the email, and possibly attachments.",
                "Following the recommendation of [6], we use Area under the ROC curve as our evaluation measure.",
                "The results (see Figure 2) agree with [9]: there is a plateau of high performance achieved with all values of C ≥ 10, and performance degrades sharply with C < 1.",
                "For the remainder of our experiments with SVMs in this paper, we set C = 100.",
                "We will return to the observation that very high values of C do not degrade performance as support for the intuition that relaxed SVMs should perform well on spam.",
                "Table 1: Results for Email Spam filtering with Online SVM on benchmark data sets.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec06p OnSVM: words 0.015 (.011-.022) 0.034 (.025-.046) 3-grams 0.011 (.009-.015) 0.025 (.017-.035) 4-grams 0.008 (.007-.011) 0.023 (.017-.032) SpamProbe 0.059 (.049-.071) 0.092 (.078-.110) BogoFilter 0.048 (.038-.062) 0.077 (.056-.105) TREC Winners 0.019 (.015-.023) 0.054 (.034-.085) 53-Ensemble 0.007 (.005-.008) 0.020 (.007-.050) Table 2: Results for Blog Comment Spam Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same performance measures as in the prior work for meaningful comparison. accuracy precision recall SVM C = 100: words 0.931 0.946 0.954 3-grams 0.951 0.963 0.965 4-grams 0.949 0.967 0.956 Prior best method 0.83 0.874 0.874 2.5 Email Spam and Online SVMs With C tuned on a separate tuning set, we then tested the performance of Online SVMs in spam detection.",
                "We used two large benchmark data sets of email spam as our test corpora.",
                "These data sets are the 2005 TREC public data set trec05p-1 of 92,189 messages, and the 2006 TREC public data sets, trec06p, containing 37,822 messages in English. (We do not report our strong results on the trec06c corpus of Chinese messages as there have been questions raised over the validity of this test set.)",
                "We used the canonical ordering provided with each of these data sets for fair comparison.",
                "Results for these experiments, with bag of words vectors and and n-gram vectors appear in Table 1.",
                "To compare our results with previous scores on these data sets, we use the same (1-ROCA)% measure described in [6], which is one minus the area under the ROC curve, expressed as a percent.",
                "This measure shows the percent chance of error made by a classifier asserting that one message is more likely to be spam than another.",
                "These results show that Online SVMs do give state of the art performance on email spam.",
                "The only known system that out-performs the Online SVMs on the trec05p-1 data set is a recent ensemble classifier which combines the results of 53 unique spam filters [19].",
                "To our knowledge, the Online SVM has out-performed every other single filter on these data sets, including those using Bayesian methods [5, 3], compression models [5, 3], logistic regression [10], and perceptron variants [3], the TREC competition winners [5, 3], and open source email spam filters BogoFilter v1.1.5 and SpamProbe v1.4d. 2.6 Blog Comment Spam and SVMs Blog comment spam is similar to email spam in many regards, and content-based methods have been proposed for detecting these spam comments [21].",
                "However, large benchmark data sets of labeled blog comment spam do not yet exist.",
                "Thus, we run experiments on the only publicly available data set we know of, which was used in content-based blog Table 3: Results for Splog vs. Blog Detection using SVMs and Leave One Out Cross Validation.",
                "We report the same evaluation measures as in the prior work for meaningful comparison. features precision recall F1 SVM C = 100: words 0.921 0.870 0.895 3-grams 0.904 0.866 0.885 4-grams 0.928 0.876 0.901 Prior SVM with: words 0.887 0.864 0.875 4-grams 0.867 0.844 0.855 words+urls 0.893 0.869 0.881 comment spam detection experiments by [21].",
                "Because of the small size of the data set, and because prior researchers did not conduct their experiments in an on-line setting, we test the performance of linear SVMs using leave-one-out cross validation, with SVM-Light, a standard open-source SVM implementation [14].",
                "We use the parameter setting C = 100, with the same feature space mappings as above.",
                "We report accuracy, precision, and recall to compare these to the results given on the same data set by [21].",
                "These results (see Table 2) show that SVMs give superior performance on this data set to the prior methodology. 2.7 Splogs and SVMs As with blog comment spam, there is not yet a large, publicly available benchmark corpus of labeled splog detection test data.",
                "However, the authors of [17] kindly provided us with the labeled data set of 1,389 blogs and splogs that they used to test content-based splog detection using SVMs.",
                "The only difference between our methodology and that of [17] is that they used default parameters for C, which SVM-Light sets to 1 avg||x||2 . (For normalized vectors, this default value sets C = 1.)",
                "They also tested several domain-informed feature mappings, such as giving special features to url tags.",
                "For our experiments, we used the same feature mappings as above, and tested the effect of setting C = 100.",
                "As with the methodology of [17], we performed leave one out cross validation for apples-to-apples comparison on this data.",
                "The results (see Table 3) show that a high value of C produces higher performance for the same feature space mappings, and even enables the simple 4-gram mapping to out-perform the previous best mapping which incorporated domain knowledge by using words and urls. 2.8 Computational Cost The results presented in this section demonstrate that linfeatures trec06p trec05p-1 words 12196s 66478s 3-grams 44605s 128924s 4-grams 87519s 242160s corpus size 32822 92189 Table 4: Execution time for Online SVMs with email spam detection, in CPU seconds.",
                "These times do not include the time spent mapping strings to feature vectors.",
                "The number of examples in each data set is given in the last row as corpus size.",
                "A B Figure 3: Visualizing the effect of C. Hyperplane A maximizes the margin while accepting a small amount of training error.",
                "This corresponds to setting C to a low value.",
                "Hyperplane B accepts a smaller margin in order to reduce training error.",
                "This corresponds to setting C to a high value.",
                "Content-based spam filtering appears to do best with high values of C. ear SVMs give state of the art performance on content-based spam filtering.",
                "However, this performance comes at a price.",
                "Although the blog comment spam and splog data sets are too small for the quadratic training time of SVMs to appear problematic, the email data sets are large enough to illustrate the problems of quadratic training cost.",
                "Table 4 shows computation time versus data set size for each of the online learning tasks (on same system).",
                "The training cost of SVMs are prohibitive for large-scale content based spam detection, or a large blog host.",
                "In the following section, we reduce this cost by relaxing the expensive requirements of SVMs. 3.",
                "RELAXED ONLINE SVMS (ROSVM) One of the main benefits of SVMs is that they find a decision hyperplane that maximizes the margin between classes in the data space.",
                "Maximizing the margin is expensive, typically requiring quadratic training time in the number of training examples.",
                "However, as we saw in the previous section, the task of content-based spam detection is best achieved by SVMs with a high value of C. Setting C to a high value for this domain implies that minimizing training loss is more important than maximizing the margin (see Figure 3).",
                "Thus, while SVMs do create high performance spam filters, applying them in practice is overkill.",
                "The full margin maximization feature that they provide is unnecessary, and relaxing this requirement can reduce computational cost.",
                "We propose three ways to relax Online SVMs: • Reduce the size of the optimization problem by only optimizing over the last p examples. • Reduce the number of training updates by only training on actual errors. • Reduce the number of iterations in the iterative SVM Given: dataset X = (x1, y1), . . . , (xn, yn), C, m, p: Initialize w := 0, b := 0, seenData := { } For Each xi ∈ X do: Classify xi using f(xi) = sign(< w, xi > +b) If yif(xi) < m Find w , b with SMO on seenData, using w, b as seed hypothesis. set (w, b) := (w,b) If size(seenData) > p remove oldest example from seenData Add xi to seenData done Figure 4: Pseudo-code for Relaxed Online SVM. solver by allowing an approximate solution to the optimization problem.",
                "As we describe in the remainder of this subsection, all of these methods trade statistical robustness for reduced computational cost.",
                "Experimental results reported in the following section show that they equal or approach the performance of full Online SVMs on content-based spam detection. 3.1 Reducing Problem Size In the full Online SVMs, we re-optimize over the full set of seen data on every update, which becomes expensive as the number of seen data points grows.",
                "We can bound this expense by only considering the p most recent examples for optimization (see Figure 4 for pseudo-code).",
                "Note that this is not equivalent to training a new SVM classifier from scratch on the p most recent examples, because each successive optimization problem is seeded with the previous hypothesis w [8].",
                "This hypothesis may contain values for features that do not occur anywhere in the p most recent examples, and these will not be changed.",
                "This allows the hypothesis to remember rare (but informative) features that were learned further than p examples in the past.",
                "Formally, the optimization problem is now defined most clearly in the dual form [23].",
                "In this case, the original softmargin SVM is computed by maximizing at example n: W (α) = nX i=1 αi − 1 2 nX i,j=1 αiαjyiyj < xi, xj >, subject to the previous constraints [23]: ∀i ∈ {1, . . . , n} : 0 ≤ αi ≤ C and nX i=1 αiyi = 0 To this, we add the additional lookback buffer constraint ∀j ∈ {1, . . . , (n − p)} : αj = cj where cj is a constant, fixed as the last value found for αj while j > (n − p).",
                "Thus, the margin found by an optimization is not guaranteed to be one that maximizes the margin for the global data set of examples {x1, . . . , xn)}, but rather one that satisfies a relaxed requirement that the margin be maximized over the examples { x(n−p+1), . . . , xn}, subject to the fixed constraints on the hyperplane that were found in previous optimizations over examples {x1, . . . , x(n−p)}. (For completeness, when p ≥ n, define (n − p) = 1.)",
                "This set of constraints reduces the number of free variables in the optimization problem, reducing computational cost. 3.2 Reducing Number of Updates As noted before, the KKT conditions show that a well classified example will not change the hypothesis; thus it is not necessary to re-train when we encounter such an example.",
                "Under the KKT conditions, an example xi is considered well-classified when yif(xi) > 1.",
                "If we re-train on every example that is not well-classified, our hyperplane will be guaranteed to be optimal at every step.",
                "The number of re-training updates can be reduced by relaxing the definition of well classified.",
                "An example xi is now considered well classified when yif(xi) > M, for some 0 ≤ M ≤ 1.",
                "Here, each update still produces an optimal hyperplane.",
                "The learner may encounter an example that lies within the margins, but farther from the margins than M. Such an example means the hypothesis is no longer globally optimal for the data set, but it is considered good enough for continued use without immediate retraining.",
                "This update procedure is similar to that used by variants of the Perceptron algorithm [18].",
                "In the extreme case, we can set M = 0, which creates a mistake driven Online SVM.",
                "In the experimental section, we show that this version of Online SVMs, which updates only on actual errors, does not significantly degrade performance on content-based spam detection, but does significantly reduce cost. 3.3 Reducing Iterations As an iterative solver, SMO makes repeated passes over the data set to optimize the objective function.",
                "SMO has one main loop, which can alternate between passing over the entire data set, or the smaller active set of current support vectors [22].",
                "Successive iterations of this loop bring the hyperplane closer to an optimal value.",
                "However, it is possible that these iterations provide less benefit than their expense justifies.",
                "That is, a close first approximation may be good enough.",
                "We introduce a parameter T to control the maximum number of iterations we allow.",
                "As we will see in the experimental section, this parameter can be set as low as 1 with little impact on the quality of results, providing computational savings. 4.",
                "EXPERIMENTS In Section 2, we argued that the strong performance on content-based spam detection with SVMs with a high value of C show that the maximum margin criteria is overkill, incurring unnecessary computational cost.",
                "In Section 3, we proposed ROSVM to address this issue, as both of these methods trade away guarantees on the maximum margin hyperplane in return for reduced computational cost.",
                "In this section, we test these methods on the same benchmark data sets to see if state of the art performance may be achieved by these less costly methods.",
                "We find that ROSVM is capable of achieving these high levels of performance with greatly reduced cost.",
                "Our main tests on content-based spam detection are performed on large benchmark sets of email data.",
                "We then apply these methods on the smaller data sets of blog comment spam and blogs, with similar performance. 4.1 ROSVM Tests In Section 3, we proposed three approaches for reducing the computational cost of Online SMO: reducing the prob0.005 0.01 0.025 0.05 0.1 10 100 1000 10000 100000 (1-ROCA)% Buffer Size trec05p-1 trec06p 0 50000 100000 150000 200000 250000 10 100 1000 10000 100000 CPUSec.",
                "Buffer Size trec05p-1 trec06p Figure 5: Reduced Size Tests. lem size, reducing the number of optimization iterations, and reducing the number of training updates.",
                "Each of these approaches relax the maximum margin criteria on the global set of previously seen data.",
                "Here we test the effect that each of these methods has on both effectiveness and efficiency.",
                "In each of these tests, we use the large benchmark email data sets, trec05p-1 and trec06p. 4.1.1 Testing Reduced Size For our first ROSVM test, we experiment on the effect of reducing the size of the optimization problem by only considering the p most recent examples, as described in the previous section.",
                "For this test, we use the same 4-gram mappings as for the reference experiments in Section 2, with the same value C = 100.",
                "We test a range of values p in a coarse grid search.",
                "Figure 5 reports the effect of the buffer size p in relationship to the (1-ROCA)% performance measure (top), and the number of CPU seconds required (bottom).",
                "The results show that values of p < 100 do result in degraded performance, although they evaluate very quickly.",
                "However, p values from 500 to 10,000 perform almost as well as the original Online SMO (represented here as p = 100, 000), at dramatically reduced computational cost.",
                "These results are important for making state of the art performance on large-scale content-based spam detection practical with online SVMs.",
                "Ordinarily, the training time would grow quadratically with the number of seen examples.",
                "However, fixing a value of p ensures that the training time is independent of the size of the data set.",
                "Furthermore, a lookback buffer allows the filter to adjust to concept drift. 0.005 0.01 0.025 0.05 0.1 10521 (1-ROCA)% Max Iters. trec06p trec05p-1 50000 100000 150000 200000 250000 10521 CPUSec.",
                "Max Iters. trec06p trec05p-1 Figure 6: Reduced Iterations Tests. 4.1.2 Testing Reduced Iterations In the second ROSVM test, we experiment with reducing the number of iterations.",
                "Our initial tests showed that the maximum number of iterations used by Online SMO was rarely much larger than 10 on content-based spam detection; thus we tested values of T = {1, 2, 5, ∞}.",
                "Other parameters were identical to the original Online SVM tests.",
                "The results on this test were surprisingly stable (see Figure 6).",
                "Reducing the maximum number of SMO iterations per update had essentially no impact on classification performance, but did result in a moderate increase in speed.",
                "This suggests that any additional iterations are spent attempting to find improvements to a hyperplane that is already very close to optimal.",
                "These results show that for content-based spam detection, we can reduce computational cost by allowing only a single SMO iteration (that is, T = 1) with effectively equivalent performance. 4.1.3 Testing Reduced Updates For our third ROSVM experiment, we evaluate the impact of adjusting the parameter M to reduce the total number of updates.",
                "As noted before, when M = 1, the hyperplane is globally optimal at every step.",
                "Reducing M allows a slightly inconsistent hyperplane to persist until it encounters an example for which it is too inconsistent.",
                "We tested values of M from 0 to 1, at increments of 0.1. (Note that we used p = 10000 to decrease the cost of evaluating these tests.)",
                "The results for these tests are appear in Figure 7, and show that there is a slight degradation in performance with reduced values of M, and that this degradation in performance is accompanied by an increase in efficiency.",
                "Values of 0.005 0.01 0.025 0.05 0.1 0 0.2 0.4 0.6 0.8 1 (1-ROCA)% M trec05p-1 trec06p 5000 10000 15000 20000 25000 30000 35000 40000 0 0.2 0.4 0.6 0.8 1 CPUSec.",
                "M trec05p-1 trec06p Figure 7: Reduced Updates Tests.",
                "M > 0.7 give effectively equivalent performance as M = 1, and still reduce cost. 4.2 Online SVMs and ROSVM We now compare ROSVM against Online SVMs on the email spam, blog comment spam, and splog detection tasks.",
                "These experiments show comparable performance on these tasks, at radically different costs.",
                "In the previous section, the effect of the different relaxation methods was tested separately.",
                "Here, we tested these methods together to create a full implementation of ROSVM.",
                "We chose the values p = 10000, T = 1, M = 0.8 for the email spam detection tasks.",
                "Note that these parameter values were selected as those allowing ROSVM to achieve comparable performance results with Online SVMs, in order to test total difference in computational cost.",
                "The splog and blog data sets were much smaller, so we set p = 100 for these tasks to allow meaningful comparisons between the reduced size and full size optimization problems.",
                "Because these values were not hand-tuned, both generalization performance and runtime results are meaningful in these experiments. 4.2.1 Experimental Setup We compared Online SVMs and ROSVM on email spam, blog comment spam, and splog detection.",
                "For the email spam, we used the two large benchmark corpora, trec05p-1 and trec06p, in the standard online ordering.",
                "We randomly ordered both the blog comment spam corpus and the splog corpus to create online learning tasks.",
                "Note that this is a different setting than the leave-one-out cross validation task presented on these corpora in Section 2 - the results are not directly comparable.",
                "However, this experimental design Table 5: Email Spam Benchmark Data.",
                "These results compare Online SVM and ROSVM on email spam detection, using binary 4-gram feature space.",
                "Score reported is (1-ROCA)%, where 0 is optimal. trec05p-1 trec05p-1 trec06p trec06p (1-ROC)% CPUs (1-ROC)% CPUs OnSVM 0.0084 242,160 0.0232 87,519 ROSVM 0.0090 24,720 0.0240 18,541 Table 6: Blog Comment Spam.",
                "These results comparing Online SVM and ROSVM on blog comment spam detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.926 0.930 0.962 0.946 139 ROSVM 0.923 0.925 0.965 0.945 11 does allow meaningful comparison between our two online methods on these content-based spam detection tasks.",
                "We ran each method on each task, and report the results in Tables 5, 6, and 7.",
                "Note that the CPU time reported for each method was generated on the same computing system.",
                "This time reflects only the time needed to complete online learning on tokenized data.",
                "We do not report the time taken to tokenize the data into binary 4-grams, as this is the same additive constant for all methods on each task.",
                "In all cases, ROSVM was significantly less expensive computationally. 4.3 Discussion The comparison results shown in Tables 5, 6, and 7 are striking in two ways.",
                "First, they show that the performance of Online SVMs can be matched and even exceeded by relaxed margin methods.",
                "Second, they show a dramatic disparity in computational cost.",
                "ROSVM is an order of magnitude more efficient than the normal Online SVM, and gives comparable results.",
                "Furthermore, the fixed lookback buffer ensures that the cost of each update does not depend on the size of the data set already seen, unlike Online SVMs.",
                "Note the blog and splog data sets are relatively small, and results on these data sets must be considered preliminary.",
                "Overall, these results show that there is no need to pay the high cost of SVMs to achieve this level of performance on contentbased detection of spam.",
                "ROSVMs offer a far cheaper alternative with little or no performance loss. 5.",
                "CONCLUSIONS In the past, academic researchers and industrial practitioners have disagreed on the best method for online contentbased detection of spam on the web.",
                "We have presented one resolution to this debate.",
                "Online SVMs do, indeed, proTable 7: Splog Data Set.",
                "These results compare Online SVM and ROSVM on splog detection using binary 4-gram feature space.",
                "Acc.",
                "Prec.",
                "Recall F1 CPUs OnSVM 0.880 0.910 0.842 0.874 29353 ROSVM 0.878 0.902 0.849 0.875 1251 duce state-of-the-art performance on this task with proper adjustment of the tradeoff parameter C, but with cost that grows quadratically with the size of the data set.",
                "The high values of C required for best performance with SVMs show that the margin maximization of Online SVMs is overkill for this task.",
                "Thus, we have proposed a less expensive alternative, ROSVM, that relaxes this maximum margin requirement, and produces nearly equivalent results.",
                "These methods are efficient enough for large-scale filtering of contentbased spam in its many forms.",
                "It is natural to ask why the task of content-based spam detection gets strong performance from ROSVM.",
                "After all, not all data allows the relaxation of SVM requirements.",
                "We conjecture that email spam, blog comment spam, and splogs all share the characteristic that a subset of features are particularly indicative of content being either spam or not spam.",
                "These indicative features may be sparsely represented in the data set, because of spam methods such as word obfuscation, in which common spam words are intentionally misspelled in an attempt to reduce the effectiveness of word-based spam detection.",
                "Maximizing the margin may cause these sparsely represented features to be ignored, creating an overall reduction in performance.",
                "It appears that spam data is highly separable, allowing ROSVM to be successful with high values of C and little effort given to maximizing the margin.",
                "Future work will determine how applicable relaxed SVMs are to the general problem of text classification.",
                "Finally, we note that the success of relaxed SVM methods for content-based spam detection is a result that depends on the nature of spam data, which is potentially subject to change.",
                "Although it is currently true that ham and spam are linearly separable given an appropriate feature space, this assumption may be subject to attack.",
                "While our current methods appear robust against primitive attacks along these lines, such as the good word attack [24], we must explore the feasibility of more sophisticated attacks. 6.",
                "REFERENCES [1] A. Bratko and B. Filipic.",
                "Spam filtering using compression models.",
                "Technical Report IJS-DP-9227, Department of Intelligent Systems, Jozef Stefan Institute, L jubljana, Slovenia, 2005. [2] G. Cauwenberghs and T. Poggio.",
                "Incremental and decremental support vector machine learning.",
                "In NIPS, pages 409-415, 2000. [3] G. V. Cormack.",
                "TREC 2006 spam track overview.",
                "In To appear in: The Fifteenth Text REtrieval Conference (TREC 2006) Proceedings, 2006. [4] G. V. Cormack and A. Bratko.",
                "Batch and on-line <br>spam filter</br> comparison.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [5] G. V. Cormack and T. R. Lynam.",
                "TREC 2005 spam track overview.",
                "In The Fourteenth Text REtrieval Conference (TREC 2005) Proceedings, 2005. [6] G. V. Cormack and T. R. Lynam.",
                "On-line supervised <br>spam filter</br> evaluation.",
                "Technical report, David R. Cheriton School of Computer Science, University of Waterloo, Canada, February 2006. [7] N. Cristianini and J. Shawe-Taylor.",
                "An introduction to support vector machines.",
                "Cambridge University Press, 2000. [8] D. DeCoste and K. Wagstaff.",
                "Alpha seeding for support vector machines.",
                "In KDD 00: Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 345-349, 2000. [9] H. Drucker, V. Vapnik, and D. Wu.",
                "Support vector machines for spam categorization.",
                "IEEE Transactions on Neural Networks, 10(5):1048-1054, 1999. [10] J. Goodman and W. Yin.",
                "Online discriminative <br>spam filter</br> training.",
                "In Proceedings of the Third Conference on Email and Anti-Spam (CEAS), 2006. [11] P. Graham.",
                "A plan for spam. 2002. [12] P. Graham.",
                "Better bayesian filtering. 2003. [13] Z. Gyongi and H. Garcia-Molina.",
                "Spam: Its not just for inboxes anymore.",
                "Computer, 38(10):28-34, 2005. [14] T. Joachims.",
                "Text categorization with suport vector machines: Learning with many relevant features.",
                "In ECML 98: Proceedings of the 10th European Conference on Machine Learning, pages 137-142, 1998. [15] T. Joachims.",
                "Training linear svms in linear time.",
                "In KDD 06: Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 217-226, 2006. [16] J. Kivinen, A. Smola, and R. Williamson.",
                "Online learning with kernels.",
                "In Advances in Neural Information Processing Systems 14, pages 785-793.",
                "MIT Press, 2002. [17] P. Kolari, T. Finin, and A. Joshi.",
                "SVMs for the blogosphere: Blog identification and splog detection.",
                "AAAI Spring Symposium on Computational Approaches to Analyzing Weblogs, 2006. [18] W. Krauth and M. M´ezard.",
                "Learning algorithms with optimal stability in neural networks.",
                "Journal of Physics A, 20(11):745-752, 1987. [19] T. Lynam, G. Cormack, and D. Cheriton.",
                "On-line <br>spam filter</br> fusion.",
                "In SIGIR 06: Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 123-130, 2006. [20] V. Metsis, I. Androutsopoulos, and G. Paliouras.",
                "Spam filtering with naive bayes - which naive bayes?",
                "Third Conference on Email and Anti-Spam (CEAS), 2006. [21] G. Mishne, D. Carmel, and R. Lempel.",
                "Blocking blog spam with language model disagreement.",
                "Proceedings of the 1st International Workshop on Adversarial Information Retrieval on the Web (AIRWeb), May 2005. [22] J. Platt.",
                "Sequenital minimal optimization: A fast algorithm for training support vector machines.",
                "In B. Scholkopf, C. Burges, and A. Smola, editors, Advances in Kernel Methods - Support Vector Learning.",
                "MIT Press, 1998. [23] B. Scholkopf and A. Smola.",
                "Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond.",
                "MIT Press, 2001. [24] G. L. Wittel and S. F. Wu.",
                "On attacking statistical spam filters.",
                "CEAS: First Conference on Email and Anti-Spam, 2004."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Comparación de lote y \"Filtro de spam\" en línea.",
                "Evaluación de \"filtro de spam\" supervisada en línea.",
                "En línea discriminativa \"Filtro de spam\".",
                "Fusión en línea \"Filtro de spam\"."
            ],
            "translated_text": "",
            "candidates": [
                "filtro de spam",
                "Filtro de spam",
                "filtro de spam",
                "filtro de spam",
                "filtro de spam",
                "Filtro de spam",
                "filtro de spam",
                "Filtro de spam"
            ],
            "error": []
        }
    }
}