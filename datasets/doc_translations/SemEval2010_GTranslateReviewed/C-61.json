{
    "id": "C-61",
    "original_text": "Authority Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and authority assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games. The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers. Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support. Using this architecture, we propose an authority assignment mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis. We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest. In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics. Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1. INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game. In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other. In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events. Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment. A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4]. It has been shown that network latency has real impact on practical game playing experience [3, 5]. Some types of games can function quite well even in the presence of large delays. For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms. This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction. For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions. But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5]. Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate. In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable. First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space. Second, we propose that assignment of authority in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server. In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined. Most currently implemented MMOGs have game servers that have almost absolute authority. We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience. We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players. In this paper we define what it means to have authority within the context of events and objects in a virtual game space. We then show the benefits of delegating authority for different actions and game events between the clients and server. In our model, the game space consists of game clients (representing the players) and objects that they control. We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa. Depending on who has the authority, that entity will make decisions on the events that happen within a game space. We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client. These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players. Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players. For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server. Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item. The clients decision can always be accurately verified by the server. In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game. As networked games become more complex, our architecture will become more applicable. This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired. We propose that a mixed authority assignment mechanism such as the one outlined above be implemented in high interaction MMOGs. Our paper has the following contributions. First we propose an architecture that uses communication proxies to enable clients to connect to the game server. A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions. In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies. These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience. Second, we propose a mixed authority assignment mechanism as described above that improves game playing experience. Third, we implement the proposed mixed authority assignment mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs. In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages. In Section 3, we provide a generic description of the mixed authority assignment mechanism and discuss how it improves game playing experience. In Section 4, we show the feasibility of implementing the proposed mixed authority assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest. Section 5 discusses related work. In Section 6, we present our conclusions and discuss future work. 2. PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other. State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture. But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server. In other words, the different game regions are hosted by different servers in a distributed fashion. When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region. The servers communicate with one another to hand off a player or an object from one region to another. In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space. We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture. In the proposed architecture, players who are close by geographically join a particular proxy. The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server. This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay. Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures. With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients. With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers. Figure 1 shows the proposed architecture. Figure 1: Architecture of the gaming environment. Note that the communication proxies need not be cognizant of the game. They host a number of players and inform the servers which players are hosted by the proxy in question. Also note that the players hosted by a proxy may not be in the same game space. That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space. The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players. The proxies communicate with one another in a peer-to-peer to fashion. The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority. In this way, information about players can be disseminated faster before even the game server gets to know about it. This definitely improves the responsiveness of the game. However, it ignores consistency that is critical in MMORPGs. The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3. Figure 2 shows and example of the working principle of the proposed architecture. Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions. Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9. Figure 2: An example. There are four communication proxies placed in geographically distant locations. Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4. Underneath each player, the figure shows which game region the player is located currently. For example, players a, b, c are in regions 1, 2, 6, respectively. Therefore, proxy P1 must communicate with servers S1 and S3. The reader can verify the rest of the links between the proxies and the servers. Players can move within the region and between regions. Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly. At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies). For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4. Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information. If a player is at the boundary of a region and moves into a new region, there are two possibilities. The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time. In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe). Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2. Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently. In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed. Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement. Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement. But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed. We propose that in this particular scenario, the handoff be managed by the proxy P4 itself. When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region. In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed. In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players. We consider this the fast path for movement update. We envision the proxies to be just communication proxies in that they do not know about the workings of specific games. They merely process movement information of players and objects and communicate this information to the other proxies and the servers. If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating. The servers could perform the same functionality but with more delay. Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11]. The second possibility that should be considered is when players move between regions. It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions). In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located. The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server. We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player. In the example, assume that player a moves from region 1 to region 4. Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1. The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time). Server S1 will also initiate a handoff of player a with server S2. Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region. It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region. Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates. By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3. ASSIGNMENT OF AUTHORITY As a MMOG is played, the players and the game objects that are part of the game, continually change their state. For example, consider a player who owns a tank in a battlefield game. Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc. Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it. That is, some decision has to be made on the state of each player and object as the game progresses. Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes. In a client-server based game, the server controls all the players and the objects. When a player at a client machine makes a move, the move is transmitted to the server over the network. The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change. The client subsequently updates the state of the player and renders the player at the new location. In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do. Most of the current first person shooter (FPS) games and role playing games (RPG) fall under this category. In current FPS games, much like in RPG games, the client is not trusted. All moves and actions that it makes are validated. If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit. Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit. If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot. If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit. A difference that occurs in some RPGs is that they use very dumb client programs. Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client. State information is not maintained because the client is not trusted with it. In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner. This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games. In a peer-to-peer game, each peer controls the player and object that it owns. When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position. Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player. In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner. For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions. It was built primarily with LAN play in mind and cheating as an afterthought. Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players. The server does no sort of validation. Each of the above two traditional approaches has its own set of advantages and disadvantages. The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority. While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen. In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server. This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game. One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating. The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive. However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state. Neither tie break nor roll back is a desirable feature of online gaming. For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g. BzFlag). When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up. Both players will see on their screen that it is the winner. This makes the state of the game inconsistent. Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again. Neither of these two approaches is a pleasing experience for online gaming. Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client. We propose to use a hybrid approach to assign the authority dynamically between the client and the server. That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent. By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates. For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag. Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent. We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself. This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation. We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game. Fundamentally, the consistent state of the system is the one that is defined by the server. However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state. For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory. Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other. In this situation, the client authority must revert to the server and the sever would then make decisions. Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players. We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time. Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14]. This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player. The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server. While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client. That is, the shortest distance in our architecture is not through the game server but through the communication proxy. After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy. We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs. This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically. Our game architecture does not assume that the client is not to be trusted. We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15]. In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place. In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to. For example, assume that in a game a plane controlled by a client moves in the game space. It is not possible for the plane to go through a building unharmed. In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed. However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move. This allows us to distribute authority to make decisions about the clients. In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation. Our implementation shows the viability of our proposed solution. 4. IMPLEMENTATION EXPERIENCE We have experimented with the authority assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest. A screen shot from this game is shown in Figure 3. The purpose of the implementation is to test its feasibility in a real game. RPGQuest is a basic first person game where the player can move around a three dimensional environment. Objects are placed within the game world and players gain points for each object that is collected. The game clients connect to a game server which allows many players to coexist in the same game world. The basic functionality of this game is representative of current online first person shooter and role playing games. The game uses the DirectX 8 graphics API and DirectPlay networking API. In this section we will discuss the three different versions of the game that we experimented with. Figure 3: The RPGQuest Game. The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client. Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object. This version of the game performs well up to 100ms round-trip latency between the client and the server. There is little lag between the time player hits a wall and the time the server corrects the players position. However, as more latency is induced between the client and server, the game becomes increasingly difficult to play. With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough. This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision. When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server. Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position. This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly. In order to get around this problem, we developed a second version of the game, which gives all authority to the client. The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server. In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects. A position update is then sent to the server which then immediately forwards the update to the other clients within the region. The update does not have to go through any extra processing or validation. This game model of complete authority given to the client is beneficial with respect to movement. When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server. When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision. Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach. The most important of these is consistency. Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states. An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player. In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object. From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time. When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed. The two players will now both think that they own the object. This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players. These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority. It is better to place authority on the client for quickly changing actions such as movement. It is not desirable to have to wait for server validation on a movement that could change before the reply is even received. It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership. We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary. To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server. In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object. The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server. When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall. A positional update is then sent to the server which then simply forwards it to the other clients within the region. This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server. This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version. The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update. The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client. However, the benefits of mixed authority will not truly be seen until an implementation of our communication proxy is integrated into the game. With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location. The coding of the different versions of the game was very simple. The complexity of the client increased very slightly in the client authoritative and hybrid models. The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server. The server updates each client with the position of all nearby clients. The dumb clients use client side prediction to fill in the gaps between the updates they receive. The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area. This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5. RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used. In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency. It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server. A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player. The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead). The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server. In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server). There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17]. In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission. The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games. The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server. The architecture uses interconnected proxy servers that each have a full view of the global game state. Proxy servers are located at various different ISPs. It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary. This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space. Fidelity based agent architectures have been proposed in [20, 21]. These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space. When an object moves from one portion to another, there is a handoff from one server to another. Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies. Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic authority assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6. CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update. Second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game. Third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience. In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture. We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness. We also plan to implement a version of the RPGQuest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near. As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server. Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature. Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client. We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7. REFERENCES [1] Y. W. Bernier. Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization. In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf. On the impact of delay on real-time multiplayer games. In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002. ACM Press. [3] G. Armitage. Sensitivity of Quake3 Players to Network Latency. In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller. The effect of latency and network limitations on mmorpgs: a field study of everquest2. In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005. ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool. The effects of loss and latency on user performance in unreal tournament 2003. In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004. ACM Press. [6] Y. Lin, K. Guo, and S. Paul. Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games. In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul. A fair message exchange framework for distributed multi-player games. In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003. ACM Press. [8] T. Barron. Multiplayer Game Programming, chapter 16-17, pages 672-731. Prima Techs Game Development Series. Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen. The fun of using tcp for an mmorpg. In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006. ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan. Accuracy in dead-reckoning based distributed multi-player games. In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004. ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan. Fairness in dead-reckoning based distributed multi-player games. In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005. ACM Press. [12] Riker, T. et al. Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab. Second life. http://secondlife.com, 2003. [14] Martin Mauve. How to keep a dead man from shooting. In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000. Springer-Verlag. [15] Max Skibinsky. Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373. Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis. Bandwidth requirement and state consistency in three multiplayer game architectures. In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003. ACM Press. [17] M. Mauve J. Widmer and S. Fischer. A Generic Proxy Systems for Networked Computer Games. In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve. A Proxy Server Network Architecture for Real-Time Computer Games. In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi. Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games. In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal. A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation. In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly. Hierarchical Structuring for Distributed Interactive Simulation. In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva. Trust and Reputation Model in Peer-to-Peer Networks. In Third International Conference on Peer-to-Peer Computing, 2003. The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9",
    "original_translation": "Asignación de autoridad en los juegos distribuidos basados en el poder múltiples Sudhir Aggarwal Justin Christofoli Departamento de Ciencias de la Computación de la Universidad Estatal de Florida, Tallahassee, FL {Sudhir, Christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Bell Laboratories, Holmdel,, Holmdel,,NJ {Sarit, sampath}@bell-labs.com Resumen Presentamos una arquitectura de juego basada en el poder y una asignación de autoridad dentro de esta arquitectura que puede conducir a una mejor experiencia de juego en juegos en línea masivamente múltiples jugadores. La arquitectura de juego propuesta consiste en clientes de juegos distribuidos que se conectan a los proxies de juegos (denominados proxies de comunicación) que reenvían los mensajes relacionados con el juego de los clientes a uno o más servidores de juegos. A diferencia de las arquitecturas basadas en el proxy que se han propuesto en la literatura donde los proxies replican todo el estado del juego, los proxies de comunicación en los clientes de soporte de arquitectura propuestos que están cerca de él en la red física y mantienen información sobre las porciones seleccionadas del juegoespacio que son relevantes solo para los clientes que apoyan. Usando esta arquitectura, proponemos un mecanismo de asignación de autoridad que divide la autoridad para decidir el resultado de diferentes acciones/eventos que ocurren dentro del juego entre el cliente y los servidores por acción/evento. Mostramos que dicha división de autoridad conduce a una experiencia de juego más suave al implementar este mecanismo en un juego en línea masivamente multijugador llamado RPGQuest. Además, argumentamos que las técnicas de detección de trucos se pueden implementar fácilmente en los proxies de comunicación si se considera que la mecánica del juego. Categorías y descriptores de sujetos C.2.4 [Redes de comunicación por computadora]: aplicaciones distribuidas distribuidas de sistemas Términos generales Juegos, rendimiento 1. Introducción en juegos en línea masivamente múltiples jugadores (MMOG), clientes de juegos que están posicionados a través de Internet se conectan a un servidor de juegos para interactuar con otros clientes para ser parte del juego. En las arquitecturas actuales, estas interacciones son directas en que los clientes del juego y los servidores intercambian mensajes del juego entre sí. Además, MMOGS actual delega a toda la autoridad al servidor de juegos para tomar decisiones sobre los resultados relacionados con las acciones que toman los clientes del juego y también para decidir sobre el resultado de otros eventos relacionados con el juego. Dicha autoridad centralizada se ha implementado con la afirmación de que esto mejora la seguridad y la consistencia requeridas en un entorno de juego. Varios trabajos han demostrado el efecto de la latencia de la red en los juegos distribuidos de múltiples jugadores [1, 2, 3, 4]. Se ha demostrado que la latencia de la red tiene un impacto real en la experiencia práctica en el juego [3, 5]. Algunos tipos de juegos pueden funcionar bastante bien incluso en presencia de grandes retrasos. Por ejemplo, [4] muestra que en un juego de rol moderno llamado Everquest 2, el punto de interrupción del juego al agregar latencia artificial fue de 1250 ms. Esto se explica al hecho de que el sistema de combate utilizado en Everquest 2 se basa en colas y tiene una interacción muy baja. Por ejemplo, un jugador hace cola 4 o 5 hechizos que desea lanzar, cada uno de estos hechizos tarda 1-2 segundos en realizar, dando al servidor mucho tiempo para validar estas acciones. Pero hay otros juegos, como los juegos de FPS, que se rompen en presencia de latencias de red moderadas [3, 5]. Se han propuesto técnicas de compensación de latencia para aliviar el efecto de la latencia [1, 6, 7], pero es obvio que si los MMOG aumentan en interactividad y velocidad, se deberán desarrollar más arquitecturas que aborden la capacidad de respuesta, precisión y consistencia de laGamestate. En este artículo, proponemos dos características importantes que harían que el juego se repita con el juego dentro de los MMOG más receptivos para el movimiento y escalable. Primero, proponemos que las arquitecturas centralizadas basadas en el servidor sean jerárquicas a través de la introducción de proxies de comunicación para que las actualizaciones de juegos realizadas por clientes que son sensibles al tiempo, como el movimiento, pueden distribuirse de manera más eficiente a otros jugadores dentro de su espacio de juego. En segundo lugar, proponemos que la asignación de autoridad en términos de quién toma la decisión sobre las acciones del cliente, como las recogidas y los golpes de objetos, y las colisiones entre los jugadores, se distribuyan entre los clientes y los servidores para distribuir la carga informática del servidor central del servidor central. Para avanzar hacia juegos en red en tiempo real más complejos, creemos que las definiciones de autoridad deben ser refinadas. La mayoría de los MMOG implementados actualmente tienen servidores de juegos que tienen una autoridad casi absoluta. Argumentamos que no existe una visión consistente del espacio de juegos virtual que se pueda mantener en cualquier componente dentro de una red que tenga una latencia significativa, como la que muchos jugadores de MMOG experimentarían. Creemos que en la mayoría de los casos, el cliente con la visión más precisa de una entidad es la más adecuada para tomar decisiones para esa entidad cuando la causalidad de esa acción no afectará de inmediato a ningún otro jugador. En este artículo definimos lo que significa tener autoridad dentro del contexto de eventos y objetos en un espacio de juego virtual. Luego mostramos los beneficios de delegar la autoridad para diferentes acciones y eventos de juego entre los clientes y el servidor. En nuestro modelo, el espacio de juego consta de clientes de juegos (que representan a los jugadores) y objetos que controlan. Dividamos las acciones del cliente y los eventos del juego (nos referiremos colectivamente a estos como eventos) como colisiones, éxitos, etc. en tres categorías diferentes, a) eventos para los cuales el cliente del juego tiene una autoridad absoluta, b) eventos para los cuales el servidor del juegotiene autoridad absoluta, y c) eventos para los cuales la autoridad cambia dinámicamente del cliente al servidor y al viceversa. Dependiendo de quién tenga la autoridad, esa entidad tomará decisiones sobre los eventos que ocurren dentro de un espacio de juego. Proponemos que la autoridad para todas las decisiones que pertenecen a un solo jugador u objeto en el juego que no afecte a los otros jugadores u objetos, ni se ve afectado por las acciones de otros jugadores se delegan a ese cliente del juego de jugadores. Este tipo de decisiones incluiría la detección de colisiones con objetos estáticos dentro del espacio de juego virtual y la detección de golpes con balas de ruta lineal (cuya trayectoria se fija y no cambia con el tiempo) disparadas por otros jugadores. La autoridad de las decisiones que podrían verse afectadas por dos o más jugadores deben delegarse al servidor central imparcial, en algunos casos, para garantizar que no se produzcan conflictos y en otros casos se puedan delegar a los clientes responsables de esos jugadores. Por ejemplo, la detección de colisiones de dos jugadores que chocan entre sí y golpean la detección de balas no lineales (que cambia la trayectoria con el tiempo) debe delegarse al servidor. La decisión sobre eventos como la recolección de elementos (por ejemplo, recoger elementos en un juego para acumular puntos) debe delegarse a un servidor si hay múltiples jugadores muy cerca de un elemento y cualquiera de los jugadores podría tener éxito en elegir el elemento;Para la disputa de recogida de artículos, donde el cliente se da cuenta de que ningún otro jugador, excepto su propio jugador, está dentro de un cierto rango del artículo, el cliente podría delegarse la responsabilidad de reclamar el artículo. La decisión de los clientes siempre puede ser verificada con precisión por el servidor. En resumen, argumentamos que, si bien los modelos de autoridad actual que solo delegan la responsabilidad del servidor para tomar decisiones autorizadas sobre los eventos es más seguro que permitir a los clientes tomar las decisiones, este tipo de modelos agregan demoras indeseables a los eventos que podrían decidir ser decididos.por los clientes sin que se introduzca ninguna inconsistencia en el juego. A medida que los juegos en red se vuelven más complejos, nuestra arquitectura se volverá más aplicable. Esta arquitectura es aplicable para juegos multijugador masivo donde la velocidad y la precisión del juego son una gran preocupación, mientras que la consistencia entre los estados de juego del jugador todavía se desea. Proponemos que un mecanismo de asignación de autoridad mixta, como el descrito anteriormente, se implementará en MMOG de alta interacción. Nuestro artículo tiene las siguientes contribuciones. Primero proponemos una arquitectura que utiliza proxies de comunicación para permitir que los clientes se conecten al servidor de juegos. Un proxy de comunicación en la arquitectura propuesta mantiene información solo sobre partes del espacio de juego que son relevantes para los clientes conectados a él y pueden procesar la información de movimiento de objetos y jugadores dentro de estas porciones. Además, es capaz de multidifusión de esta información solo a un subconjunto relevante de otros proxies de comunicación. Estas funcionalidades de un proxy de comunicación conducen a una disminución en la latencia de la actualización de eventos y, posteriormente, una mejor experiencia de juego. En segundo lugar, proponemos un mecanismo de asignación de autoridad mixta como se describe anteriormente que mejora la experiencia del juego. En tercer lugar, implementamos el mecanismo de asignación de autoridad mixta propuesta dentro de un MMOG llamado RPGQuest [8] para validar su viabilidad dentro de MMOGS. En la Sección 2, describimos la arquitectura del juego basada en el poder con más detalle e ilustramos sus ventajas. En la Sección 3, proporcionamos una descripción genérica del mecanismo de asignación de autoridad mixta y discutimos cómo mejora la experiencia del juego. En la Sección 4, mostramos la viabilidad de implementar el mecanismo de asignación de autoridad mixta propuesta dentro de los MMOG existentes describiendo una implementación de prueba de concepto dentro de un MMOG existente llamado RPGQuest. La Sección 5 discute el trabajo relacionado. En la Sección 6, presentamos nuestras conclusiones y discutimos el trabajo futuro.2. La arquitectura de juegos basada en el poder basada en los juegos en línea de juego múltiple (MMOG) generalmente consisten en un gran espacio de juego en el que los jugadores y los diferentes objetos de juego residen y se mueven e interactúan con uno, uno. La información estatal sobre todo el espacio del juego podría mantenerse en un solo servidor central al que nos referiríamos como una arquitectura de servidor central. Pero para aliviar la gran demanda del procesamiento para manejar la población de jugadores grandes y los objetos en el juego en tiempo real, normalmente se implementa un MMOG utilizando una arquitectura de servidor distribuido donde el espacio del juego se subdivide aún más en regiones para que cada unoLa región tiene un número relativamente menor de jugadores y objetos que pueden ser manejados por un solo servidor. En otras palabras, las diferentes regiones de juegos son alojadas por diferentes servidores de manera distribuida. Cuando un jugador sale de una región de juego a otra adyacente, el jugador debe comunicarse con un servidor diferente (de lo que se estaba comunicando actualmente) alojando la nueva región. Los servidores se comunican entre sí para entregar un jugador o un objeto de una región a otra. En este modelo, el reproductor de la máquina cliente tiene que establecer múltiples sesiones de juego con diferentes servidores para que pueda deambular en todo el espacio del juego. Proponemos una arquitectura basada en el proxy de comunicación donde un reproductor se conecta a un proxy (geográficamente) cercano en lugar de conectarse a un servidor central en el caso de una arquitectura de centralserver o a uno de los servidores en caso de DIS2 el quinto taller en la red y el soporte del sistemaPara los Juegos 2006 - NetGames 2006 Arquitectura del servidor Tributed. En la arquitectura propuesta, los jugadores que están cerca se unen geográficamente un proxy particular. El proxy luego se conecta a uno o más servidores de juegos, según lo sea necesario por el conjunto de jugadores que se conectan a él y mantienen sesiones de transporte persistentes con este servidor. Esto alivia el problema de que cada jugador tenga que conectarse directamente a múltiples servidores de juegos, lo que puede agregar un retraso de configuración de conexión adicional. La introducción de los proxies de comunicación también mitiga la sobrecarga de una gran cantidad de sesiones de transporte que deben administrarse y reduce el ancho de banda de red requerido [9] y el procesamiento en los servidores de juegos con arquitecturas de servidor central y servidor distribuido. Con las arquitecturas del servidor central, los proxies de comunicación reducen la sobrecarga en el servidor al no requerir que el servidor termine las sesiones de transporte persistentes de cada uno de los clientes. Con las arquitecturas de servidor distribuido, además, los representantes de comunicación eliminan la necesidad de que los clientes mantengan sesiones de transporte persistentes a cada uno de los servidores. La Figura 1 muestra la arquitectura propuesta. Figura 1: Arquitectura del entorno de juego. Tenga en cuenta que los proxies de comunicación no necesitan ser conscientes del juego. Organizan a varios jugadores e informan a los servidores qué jugadores son alojados por el proxy en cuestión. También tenga en cuenta que los jugadores organizados por un proxy pueden no estar en el mismo espacio de juego. Es decir, un proxy alberga jugadores que están geográficamente cerca de él, pero los propios jugadores pueden residir en diferentes partes del espacio del juego. El proxy se comunica con los servidores responsables de mantener los espacios de juego suscritos por los diferentes jugadores. Los proxies se comunican entre sí en un punto de igual a la moda. La capacidad de respuesta del juego se puede mejorar para las actualizaciones que no necesitan esperar el procesamiento en una autoridad central. De esta manera, la información sobre los jugadores se puede difundir más rápido antes de que el servidor del juego lo sepa. Esto definitivamente mejora la capacidad de respuesta del juego. Sin embargo, ignora la consistencia que es crítica en MMORPG. La noción de que una arquitectura como esta aún puede mantener la consistencia temporal se discutirá en detalle en la Sección 3. La Figura 2 muestra y ejemplo del principio de funcionamiento de la arquitectura propuesta. Suponga que el espacio del juego se divide en 9 regiones y hay tres servidores responsables de administrar las regiones. Server S1 posee las regiones 1 y 2, S2 administra 4, 5, 7 y 8, y S3 es responsable de 3, 6 y 9. Figura 2: Un ejemplo. Hay cuatro proxies de comunicación colocados en ubicaciones geográficamente distantes. Los jugadores A, B, C se unen a Proxy P1, proxy P2 Hosts Players D, E, F, Players G, H son con Proxy P3, mientras que los jugadores I, J, K, L están con Proxy P4. Debajo de cada jugador, la figura muestra qué región de juego se encuentra el jugador actualmente. Por ejemplo, los jugadores A, B, C están en las regiones 1, 2, 6, respectivamente. Por lo tanto, el proxy P1 debe comunicarse con los servidores S1 y S3. El lector puede verificar el resto de los enlaces entre los proxies y los servidores. Los jugadores pueden moverse dentro de la región y entre regiones. El movimiento del jugador dentro de una región será rastreado por el proxy que aloja al jugador y esta información de movimiento (por ejemplo, las nuevas coordenadas de los jugadores) serán multidifusión a un subconjunto de otros proxies de comunicación relevantes directamente. Al mismo tiempo, esta información se enviará al servidor responsable de esa región con la indicación de que este movimiento ya se ha comunicado a todos los demás proxies de comunicación relevantes (para que el servidor no tenga que transmitir esta información a todos los proxies). Por ejemplo, si el jugador A se mueve dentro de la Región 1, esta información será comunicada por Proxy P1 al servidor S1 y multidifusión a proxies P3 y P4. Tenga en cuenta que los representantes que no mantienen información estatal sobre esta región en este momento (porque no tienen ningún cliente dentro de esa región) como P2 no tienen que recibir esta información de movimiento. Si un jugador está en el límite de una región y se muda a una nueva región, hay dos posibilidades. La primera posibilidad es que el proxy que aloja al jugador puede identificar la región en la que se mueve el jugador (según la información de la trayectoria) porque también mantiene información de estado sobre la nueva región en ese momento. En este caso, el proxy puede actualizar la información del movimiento directamente a los otros representantes de comunicación relevantes y también enviar información al servidor apropiado informando sobre el movimiento (esto puede requerir la transferencia entre los servidores como describiremos). Considere el escenario en el que el Jugador A está en el límite de la Región 1 y Proxy P1 puede identificar que el jugador se está mudando a la Región 2. Debido a que Proxy P1 actualmente mantiene la información estatal sobre la Región 2, puede informar todo el quinto taller sobre el soporte de redes y sistemas para los juegos 2006 - NetGames 2006 3 Los otros proxies de comunicación relevantes (en este ejemplo, ningún otro proxy mantiene información sobre la Región 2 enEste punto y, por lo tanto, no se debe enviar ninguna actualización a ninguno de los otros proxies) sobre este movimiento y luego informar al servidor de forma independiente. En este caso particular, el servidor S1 también es responsable de la Región 2, por lo que no se necesitaría transferir entre servidores. Ahora considere otro escenario en el que el jugador J se mueve de la región 9 a la región 8 y ese proxy P4 puede identificar este movimiento. Nuevamente, debido a que Proxy P4 mantiene información estatal sobre la Región 8, puede informar a cualquier otro proxies de comunicación relevante (nuevamente, ninguno en este ejemplo) sobre este movimiento. Pero ahora, las regiones 9 y 8 son manejadas por diferentes servidores (servidores S3 y S2 respectivamente) y, por lo tanto, se necesita una transferencia entre estos servidores. Proponemos que en este escenario particular, la transferencia sea administrada por el proxy P4 en sí. Cuando el proxy envía la actualización de movimiento al servidor S3 (informando al servidor que el reproductor se está mudando de su región), también enviaría un mensaje al servidor S2 informando al servidor sobre la presencia y la ubicación del reproductor en una de su región. En los escenarios intra-región e interregión descritos anteriormente, el proxy puede administrar la información relacionada con el movimiento, actualizar solo los proxies de comunicación relevantes sobre el movimiento, actualizar los servidores con el movimiento y habilitar la transferencia de un jugador entre los servidores si es necesario.. De esta manera, el proxy realiza actualizaciones de movimiento sin involucrar a los servidores de ninguna manera en esta función crítica de tiempo, acelerando así el juego y mejorando la experiencia de juego para los jugadores. Consideramos que este es el camino rápido para la actualización del movimiento. Imaginamos que los proxies son justos proxies de comunicación, ya que no saben sobre el funcionamiento de juegos específicos. Simplemente procesan información de movimiento de jugadores y objetos y comunican esta información a los otros proxies y los servidores. Si los proxies se hacen más inteligentes, ya que entienden más de la lógica del juego, es posible que verifiquen rápidamente las reclamaciones hechas por los clientes y mitigan las trampas. Los servidores podrían realizar la misma funcionalidad pero con más retraso. Incluso sin ser conscientes de la lógica del juego, los proxies pueden proporcionar funcionalidades adicionales, como mensajes de marca de tiempo para hacer que la experiencia de juego del juego sea más precisa [10] y justa [11]. La segunda posibilidad que debe considerarse es cuando los jugadores se mueven entre regiones. Es posible que un jugador se mueva de una región a otra, pero el proxy que está alojando al jugador no puede determinar la región en la que el jugador se mueve, a) el proxy no mantiene información de estado sobre todas las regiones en las que las regiones en las queEl jugador podría moverse, o b) el proxy no puede determinar en qué región puede moverse el jugador (incluso si mantiene información de estado sobre todas estas regiones). En este caso, proponemos que el proxy no sea responsable de tomar la decisión del movimiento, sino comunicar la indicación del movimiento al servidor responsable de la región dentro de la cual se encuentra actualmente el jugador. Luego, el servidor tomará la decisión de movimiento y luego a) informa a todos los proxies, incluido el proxy que aloja al reproductor, y b) iniciará la transferencia con otro servidor si el reproductor se mueve a una región administrada por otro servidor. Consideramos que esta es la actualización de ruta lenta para el movimiento en que los servidores deben participar en la determinación de la nueva posición del jugador. En el ejemplo, suponga que el jugador A se mueve de la Región 1 a la Región 4. Proxy P1 no mantiene información estatal sobre la Región 4 y, por lo tanto, pasaría la información del movimiento al servidor S1. El servidor identificará que el jugador se ha mudado a la Región 4 e informará a Proxy P1 y Proxy P2 (que es el único otro proxy que mantiene información sobre la Región 4 en este momento). Server S1 también iniciará una transferencia del Jugador A con el servidor S2. Proxy P1 ahora comenzará a mantener la información estatal sobre la Región 4 porque uno de sus jugadores alojados, el Jugador A se ha mudado a esta región. Lo hará solicitando y recibiendo la información del estado actual sobre la Región 4 del servidor S2 que es responsable de esta región. Por lo tanto, una arquitectura proxy nos permite hacer uso de actualizaciones de movimiento más rápidas a través de la ruta rápida a través de un proxy si es posible, en lugar de las arquitecturas convencionales basadas en servidores que siempre tienen que usar la ruta lenta a través del servidor para las actualizaciones de movimiento. Al mantener selectivamente la información relevante del estado del juego regional en los proxies, podemos lograr esta capacidad en nuestra arquitectura sin la necesidad de mantener el estado completo del juego en cada proxy.3. Se juega la asignación de autoridad como MMOG, los jugadores y los objetos del juego que forman parte del juego, cambian continuamente su estado. Por ejemplo, considere a un jugador que posee un tanque en un juego de campo de batalla. Según la acción del jugador, el tanque cambia su posición en el espacio del juego, la cantidad de municiones que el tanque contiene cambios a medida que dispara a otros tanques, el tanque recolecta un poder de disparo de bonificación basada en éxitos exitosos, etc. De manera similar, los objetos en el campo de batalla, como banderas, edificios, etc., cambian su estado cuando un jugador recoge una bandera (es decir, un tanque) o un edificio se destruye disparando. Es decir, se debe tomar alguna decisión en el estado de cada jugador y objeto a medida que avanza el juego. Tenga en cuenta que el estado de un jugador y/u objeto puede contener varios parámetros (por ejemplo, posición, cantidad de municiones, almacenamiento de combustible, puntos recolectados, etc.), y si alguno de los parámetros cambia, el estado del jugador/objeto cambia. En un juego basado en el cliente-servidor, el servidor controla a todos los jugadores y los objetos. Cuando un reproductor en una máquina cliente hace un movimiento, el movimiento se transmite al servidor a través de la red. Luego, el servidor analiza el movimiento, y si el movimiento es válido, cambia el estado del reproductor en el servidor e informa al cliente del cambio. Posteriormente, el cliente actualiza el estado del jugador y representa al jugador en la nueva ubicación. En este caso, la autoridad para cambiar el estado del reproductor reside con el servidor por completo y el cliente simplemente sigue lo que el servidor le indica que haga. La mayoría de los juegos actuales de First Person Shooter (FPS) y los juegos de rol (RPG) caen en esta categoría. En los juegos actuales de FPS, al igual que en los juegos RPG, no se confía en el cliente. Todos los movimientos y acciones que realiza están validados. Si un cliente detecta que ha golpeado a otro jugador con una bala, procede asumiendo que es un éxito. Mientras tanto, se envía una actualización al servidor y el servidor enviará un mensaje afirmando o negando que el reproductor fuera golpeado. Si el jugador remoto no fue golpeado, entonces el cliente sabrá que es el quinto taller en la red y el soporte del sistema para los juegos 2006 - NetGames 2006 en realidad no realizó la toma. Si hizo el golpe, también se enviará una actualización del servidor a los otros clientes informándoles que el otro jugador fue golpeado. Una diferencia que ocurre en algunos juegos de rol es que usan programas de clientes muy tontos. Algunos juegos de rol no mantienen información de estado en el cliente y, por lo tanto, no pueden predecir nada como los golpes en el cliente. La información del estado no se mantiene porque no se confía en el cliente. En los juegos de rol, un jugador de trampa con un cliente de juego pirateado puede usar información estatal almacenada en el cliente para obtener una ventaja y encontrar cosas como tesoros ocultos o monstruos que acechan a la vuelta de la esquina. Esta es una razón por la cual la mayoría de los MMORPG no envían mucha información estatal al cliente y hace que el juego sea menos receptivo y tenga un juego de juego de interacción más bajo que los juegos de FPS. En un juego de pares, cada par de pares controla el jugador y el objeto que posee. Cuando un jugador hace un movimiento, la máquina de pares analiza el movimiento y, si es válido, cambia el estado del jugador y coloca al jugador en una nueva posición. Posteriormente, el pares del propietario informa a todos los demás pares sobre el nuevo estado del jugador y el resto de los pares actualizan el estado del jugador. En este escenario, la autoridad para cambiar el estado del jugador se le da al compañero de propiedad y todos los demás pares simplemente siguen al propietario. Por ejemplo, Battle Zone Flag (BZFlag) [12] es un juego de servidor de cliente multijugador donde el cliente tiene toda la autoridad para tomar decisiones. Fue construido principalmente con Lan Play en mente y engañando como una ocurrencia tardía. Los clientes en BZFLAG son completamente autorizados y cuando detectan que fueron golpeados por una bala, envían una actualización al servidor que simplemente reenvía el mensaje a todos los demás jugadores. El servidor no hace un tipo de validación. Cada uno de los dos enfoques tradicionales anteriores tiene su propio conjunto de ventajas y desventajas. El primer enfoque, al que nos referiremos como autoridad del servidor en adelante, utiliza un método centralizado para asignar autoridad. Si bien un enfoque centralizado puede mantener el estado del juego (es decir, el estado de todos los jugadores y objetos) consistente en cualquier cantidad de máquinas clientes, sufre una respuesta retrasada en el juego como cualquier movimiento que un jugador en la máquina del cliente realizaDebe pasar por un retraso de ida y vuelta al servidor antes de que pueda entrar en vigencia en la pantalla del cliente. Además del retraso de ida y vuelta, también existe un retraso en cola en el procesamiento de la solicitud de cambio de estado en el servidor. Esto puede dar lugar a un retraso de procesamiento adicional, y también puede traer problemas de escalabilidad severos si hay una gran cantidad de clientes que juegan el juego. Una ventaja definitiva del enfoque autorizado del servidor es que puede detectar fácilmente si un cliente está haciendo trampa y puede tomar las medidas apropiadas para evitar hacer trampa. El enfoque de igual a igual, en adelante denominado autorizado por el cliente, puede hacer que los juegos sean muy receptivos. Sin embargo, puede hacer que el estado del juego sea inconsistente para algunos jugadores y se debe realizar un descanso (o retroceder) para llevar el juego de regreso a un estado consistente. Ni Tie Break ni Roll Back es una característica deseable de los juegos en línea. Por ejemplo, suponga que para un juego, el objetivo de cada jugador es recolectar tantas banderas como sea posible del espacio del juego (p. Ej. Bzflag). Cuando dos jugadores en proximidad intentan recolectar la misma bandera al mismo tiempo, dependiendo del algoritmo utilizado en el lado del cliente, ambos clientes pueden determinar que es el ganador, aunque en realidad solo un jugador puede recoger la bandera. Ambos jugadores verán en su pantalla que es el ganador. Esto hace que el estado del juego sea inconsistente. Las formas de recuperarse de esta inconsistencia son dar la bandera a un solo jugador (usando una regla de break de back) o retroceder el juego para que los jugadores puedan intentarlo nuevamente. Ninguno de estos dos enfoques es una experiencia agradable para los juegos en línea. Otro problema con el enfoque autorizado del cliente es el engaño de los clientes, ya que no hay verificación cruzada de la validación de los cambios estatales autorizados por el cliente propietario. Proponemos utilizar un enfoque híbrido para asignar la autoridad dinámicamente entre el cliente y el servidor. Es decir, asignamos la autoridad al cliente para que el juego responda, y usamos la autoridad de los servidores solo cuando las decisiones autorizadas individuales de los clientes pueden hacer que el juego sea inconsistente. Al trasladar las actualizaciones críticas de la autoridad del tiempo al cliente, evitamos el retraso adicional causado al requerir que el servidor valida estas actualizaciones. Por ejemplo, en el juego de recolección de banderas, a los clientes tendrán la autoridad de recoger banderas solo cuando otros jugadores no están dentro de un rango de que podrían recoger inminentemente una bandera. Solo cuando dos o más jugadores están cerca para que más de un jugador pueda afirmar haber recogido una bandera, la autoridad para el movimiento y la recolección de bandera irían al servidor central para que el estado del juego no se vuelva inconsistente. Creemos que en un gran espacio de juego donde un jugador a menudo se encuentra en un área muy abierta y escasamente poblada como las que a menudo se ven en el juego Second Life [13], esta arquitectura híbrida sería muy beneficiosa debido a los largos períodos queEl cliente tendría autoridad para enviar actualizaciones de movimiento por sí mismo. Esto tiene dos ventajas sobre el enfoque de la centralidad central, distribuye la carga de procesamiento a los clientes para la mayoría de los eventos y permite un juego más receptivo que no necesita esperar en un servidor para su validación. Creemos que nuestra noción de autoridad puede usarse para desarrollar un modelo estatal globalmente consistente de la evolución de un juego. Fundamentalmente, el estado consistente del sistema es el que define el servidor. Sin embargo, si la autoridad local se delega al cliente, en este caso, el estado del cliente se superpone en el estado de los servidores para determinar el estado global correcto. Por ejemplo, si el cliente es autorizado con respecto al movimiento de un jugador, entonces la trayectoria del jugador es la verdadera trayectoria y debe reemplazar la vista de los servidores de la trayectoria de los jugadores. Tenga en cuenta que esto podría ser problemático y conducir a una inconsistencia temporal solo si, por ejemplo, dos o más entidades se mueven en la misma región y pueden interactuar entre sí. En esta situación, la autoridad del cliente debe volver al servidor y el grave tomaría decisiones. Por lo tanto, el cliente solo es autorizado en situaciones en las que no hay potencial para interactuar inminentemente con otros jugadores. Creemos que en los MMOG complejos, al permitir un movimiento más rápido, seguirá siendo el caso de que la autoridad local sea posible para tramos significativos de tiempo de juego. Tenga en cuenta que también podría ser posible minimizar las ocurrencias del problema de disparo del hombre muerto descrito en [14]. Esto podría hacerse permitiendo que el cliente sea autorizado para más acciones, como sus jugadores, la muerte de sus jugadores y rechazar a otros jugadores de tomar decisiones preventivas basadas en un jugador remoto. El quinto taller sobre el soporte de redes y sistemas para los juegos 2006 - NetGames 2006 5 Una razón por la cual la arquitectura basada en el cliente -servidor ha ganado popularidad se debe a la creencia de que la ruta más rápida hacia los otros clientes es a través del servidor. Si bien esto puede ser cierto, nuestro objetivo es crear una nueva arquitectura donde las decisiones no siempre tengan que tomarse en el servidor de juegos y la ruta más rápida hacia un cliente es realmente a través de un proxy de comunicación ubicado cerca del cliente. Es decir, la distancia más corta en nuestra arquitectura no es a través del servidor de juegos sino a través del proxy de comunicación. Después de que un cliente realiza una acción como el movimiento, lo distribuirá simultáneamente directamente a los clientes y al servidor de juegos a través del proxy de comunicaciones. Sin embargo, notamos que nuestra arquitectura no es práctica para un juego en el que los jugadores de juego configuran sus propios servidores de manera ad-hoc y no tienen acceso a proxies en los diversos ISP. Esta arquitectura de proxy y autoridad distribuida se puede utilizar a su máximo potencial solo cuando los proxies se pueden colocar en lugares estratégicos dentro de los ISP principales y distribuirse de manera uniforme geográficamente. Nuestra arquitectura del juego no supone que el cliente no sea confiado. Estamos diseñando nuestra arquitectura sobre el hecho de que habrá suficientes mecanismos de disuasión y detección de trucos presentes para que sea indeseable y muy difícil de hacer trampa [15]. En nuestro enfoque propuesto, podemos hacer que los juegos trate de resistencia utilizando la arquitectura basada en el proxy cuando tienen lugar las decisiones autoritarias del cliente. Para lograr esto, los proxies deben ser conscientes del juego para que las decisiones tomadas por un cliente puedan verificarse cruzadas por un proxy al que el cliente se conecta. Por ejemplo, suponga que en un juego un avión controlado por un cliente se mueve en el espacio del juego. No es posible que el avión pase por un edificio ileso. En un modo autoritario del cliente, es posible que el cliente haga trampa maniobre el avión a través de un edificio y reclamando que el avión no se d azaña. Sin embargo, cuando el cliente publica tal movimiento, el proxy, al tanto del espacio de juego en el que se encuentra el avión, puede verificar rápidamente que el cliente haya utilizado mal la autoridad y luego puede bloquear dicho movimiento. Esto nos permite distribuir autoridad para tomar decisiones sobre los clientes. En la siguiente sección, utilizamos un juego multijugador llamado RPGQuest para implementar diferentes esquemas autorizados y discutir nuestra experiencia con la implementación. Nuestra implementación muestra la viabilidad de nuestra solución propuesta.4. Experiencia de implementación Hemos experimentado con el mecanismo de asignación de autoridad descrito en la última sección mediante la implementación de los mecanismos en un juego llamado RPGQuest. Una captura de pantalla de este juego se muestra en la Figura 3. El propósito de la implementación es probar su viabilidad en un juego real. RPGQuest es un juego básico en primera persona donde el jugador puede moverse alrededor de un entorno tridimensional. Los objetos se colocan dentro del mundo del juego y los jugadores obtienen puntos para cada objeto que se recopila. Los clientes del juego se conectan a un servidor de juegos que permite que muchos jugadores coexistan en el mismo mundo del juego. La funcionalidad básica de este juego es representativa de los juegos actuales en primera persona en primera persona y los juegos de rol. El juego utiliza la API de gráficos DirectX 8 y la API de redes de DirectPlay. En esta sección discutiremos las tres versiones diferentes del juego con las que experimentamos. Figura 3: El juego RPGQuest. La primera versión del juego, que es la implementación original de RPGQuest, se creó con un servidor completamente autorizado y un cliente no autoritario. La autoridad dada al servidor incluye decisiones de cuándo un jugador choca con objetos estáticos y otros jugadores y cuándo un jugador recoge un objeto. Esta versión del juego funciona bien hasta 100 ms de latencia de ida y vuelta entre el cliente y el servidor. Hay poco retraso entre el tiempo que el jugador llega a una pared y el tiempo que el servidor corrige la posición de los jugadores. Sin embargo, a medida que se induce más latencia entre el cliente y el servidor, el juego se vuelve cada vez más difícil de jugar. Con el aumento de la latencia, los mensajes provenientes del servidor corrigen el reproductor cuando se ejecuta en una pared no se reciben lo suficientemente rápido. Esto hace que el jugador pase por la pared durante el período que está esperando que el servidor resuelva la colisión. Al estudiar el código fuente de la versión original del juego RPGQuest, hay un retraso sustancial que es inevitable cada vez que el servidor debe validar una acción. Cada vez que se envía una actualización de movimiento al servidor, el cliente debe esperar cualquiera que sea el retraso de ida y vuelta, más algún tiempo de procesamiento en el servidor para recibir su posición validada o corregida. Obviamente, esto es inaceptable en cualquier juego donde el movimiento o cualquier otra información de estado que cambie rápidamente debe validarse y difundir a los otros clientes rápidamente. Para evitar este problema, desarrollamos una segunda versión del juego, que le da toda la autoridad al cliente. El cliente fue delegado la autoridad para validar su propio movimiento y la autoridad para recoger objetos sin validación del servidor. En esta versión del juego, cuando un jugador se mueve por el espacio del juego, el cliente valida que la nueva posición de los jugadores no se cruza con ninguna pared o objetos estáticos. Luego se envía una actualización de posición al servidor que luego reenvía inmediatamente la actualización a los otros clientes dentro de la región. La actualización no tiene que pasar por ningún procesamiento o validación adicional. Este modelo de juego de autoridad completa que se le da al cliente es beneficioso con respecto al movimiento. Cuando las latencias de 6 el quinto taller en la red y el soporte del sistema para los juegos 2006 - NetGames 2006 100ms y Up se inducen al enlace entre el cliente y el servidor, el juego todavía se puede jugar ya que los aspectos críticos del tiempo del juego no tienen queEspere una respuesta desde el servidor. Cuando un jugador golpea un muro, la colisión se procesa localmente y no tiene que esperar en el servidor para resolver la colisión. Aunque la experiencia del juego con respecto a la capacidad de respuesta se mejora cuando la autoridad para el movimiento se da al cliente, todavía hay aspectos de los juegos que no se benefician de este enfoque. El más importante de estos es la consistencia. Aunque las acciones como el movimiento son críticas en el tiempo, otras acciones no son tan críticas del tiempo, sino que requieren consistencia entre los estados del jugador. Un ejemplo de un aspecto del juego que requiere consistencia es recoger objetos que solo deben poseer por un solo jugador. En nuestro cliente, la versión autorizada de los clientes RPGQuest envía sus propias actualizaciones a todos los demás jugadores cada vez que eligen un objeto. A partir de nuestras pruebas, nos hemos dado cuenta de que este es un problema porque cuando hay una cantidad realista de latencia entre el cliente y el servidor, es posible que dos jugadores recojan el mismo objeto al mismo tiempo. Cuando dos jugadores intentan recoger un objeto en los momentos físicos que están cerca el uno del otro, la actualización enviada por el jugador que recogió el objeto primero no llegará al segundo jugador a tiempo para ver que el objeto ya se ha reclamado.. Los dos jugadores ahora pensarán que son dueños del objeto. Es por eso que un servidor todavía es necesario para ser autorizado en esta situación y mantener la consistencia en los jugadores. Estas dos versiones del juego RPGQuest nos han mostrado por qué es necesario mezclar los dos modelos absolutos de autoridad. Es mejor colocar autoridad en el cliente para cambiar rápidamente acciones como el movimiento. No es deseable tener que esperar la validación del servidor en un movimiento que podría cambiar antes de que se reciba la respuesta. A veces también es necesario poner consistencia sobre la eficiencia en los aspectos del juego que no pueden tolerar ninguna inconsistencia como la propiedad de objetos. Creemos que a medida que aumenta la interactividad de los juegos, será necesaria nuestra arquitectura de autoridad mixta que no depende de la validación del servidor. Para probar los beneficios y mostrar la viabilidad de nuestra arquitectura de autoridad mixta, desarrollamos una tercera versión del juego RPGQuest que distribuyó autoridad para diferentes acciones entre el cliente y el servidor. En esta versión, en aras de la consistencia, el servidor siguió siendo autorizado por decidir quién recogió un objeto. El cliente recibió plena autoridad para enviar actualizaciones posicionales a otros clientes y verificar su propia posición sin la necesidad de verificar sus actualizaciones con el servidor. Cuando el jugador intenta mover su avatar, el cliente verifica que el movimiento no hará que se mueva a través de una pared. Luego se envía una actualización posicional al servidor que simplemente la reenvía a los otros clientes dentro de la región. Esto elimina cualquier retraso de procesamiento adicional que ocurra en el servidor y también es un medio de verificación más preciso, ya que el cliente tiene una visión más precisa de su propio estado que el servidor. Esta versión del juego RPGQuest donde se distribuye la autoridad entre el cliente y el servidor es una mejora de la versión autorizada del servidor. El cliente no tiene demora en esperar una actualización para su propio puesto y otros clientes no tienen que esperar en el servidor para verificar la actualización. Las inconsistencias en las que dos clientes pueden recoger el mismo objeto en la arquitectura autorizada del cliente no están presentes en esta versión del cliente. Sin embargo, los beneficios de la autoridad mixta no se verán realmente hasta que una implementación de nuestro proxy de comunicación se integre en el juego. Con la adición del proxy de comunicación, después de que el cliente verifica sus propias actualizaciones posicionales, podrá enviar la actualización a todos los clientes dentro de su región a través de un enlace de baja latencia en lugar de tener que pasar primero por el servidor de juegos que posiblemente podría estar enuna ubicación muy remota. La codificación de las diferentes versiones del juego fue muy simple. La complejidad del cliente aumentó muy ligeramente en los modelos autoritarios e híbridos del cliente. Los clientes tontos originales de RPGQuest conocen la posición de otros jugadores;No solo se envía una instantánea de pantalla desde el servidor. El servidor actualiza a cada cliente con la posición de todos los clientes cercanos. Los clientes tontos usan la predicción del lado del cliente para llenar los vacíos entre las actualizaciones que reciben. El único procesamiento adicional que el cliente tiene que hacer en la arquitectura híbrida es comparar su posición actual con las posiciones de todos los objetos (paredes, cajas, etc.) en su área. Obviamente, esto significa que cada cliente ya tendrá que haber descargado las ubicaciones de todos los objetos estáticos dentro de su región actual.5. Trabajo relacionado Se ha observado que, además de la latencia, los requisitos de ancho de banda también dictan el tipo de arquitectura de juego que se utilizará. En [16], se estudian diferentes tipos de arquitecturas con respecto a la eficiencia y la latencia del ancho de banda. Se señala que las arquitecturas del servidor central no son escalables debido a los requisitos de ancho de banda en el servidor, pero la sobrecarga para las verificaciones de consistencia es limitada a medida que se realizan en el servidor. Una arquitectura de igual a igual, por otro lado, es escalable, pero hay una sobrecarga significativa para las verificaciones de consistencia, ya que esto se requiere en cada jugador. El documento propone una arquitectura híbrida que es un tope de pares en términos de intercambio de mensajes (y por lo tanto es escalable) donde se utiliza un servidor central para verificaciones de consistencia fuera de línea (por lo tanto, mitigan la sobrecarga de verificación de consistencia). El documento proporciona un ejemplo de implementación de BZFLAG, que es un juego de igual a igual que se modifica para transferir toda la autoridad a un servidor central. En esencia, este documento aboga por una arquitectura de autoridad que se basa en el servidor incluso para los juegos de peert-peer, pero no considera la división de autoridad entre un cliente y un servidor para minimizar la latencia que podría afectar la experiencia de juego de los juegos incluso con el tipo de latencia que se encuentra enJuegos basados en servidor (donde toda la autoridad está con el servidor). También hay trabajos previos que han sugerido que se utilizarán arquitecturas basadas en proxy para aliviar el problema de latencia y, además, utilizar proxies para proporcionar control de congestión y mecanismos a prueba de trucos en juegos distribuidos de múltiples jugadores [17]. En [18], se presenta una arquitectura de red de servidor proxy que tiene como objetivo mejorar la escalabilidad de los juegos multijugador y reducir la latencia en la transmisión de datos del servidor-cliente. El objetivo principal de este trabajo es mejorar la escalabilidad de los juegos de disparos en primera persona (FPS) y los juegos de RPG. El objetivo adicional es mejorar la capacidad de respuesta MMOGS proporcionando comunicaciones de baja latencia entre el cliente y el quinto taller sobre el soporte de redes y sistemas para los juegos 2006 - NetGames 2006 7 Server. La arquitectura utiliza servidores proxy interconectados que tienen una visión completa del estado del juego global. Los servidores proxy se encuentran en varios ISP diferentes. Se menciona en este trabajo que dividir el espacio del juego entre los servidores de múltiples juegos, como el modelo federado presentado en [19], es ineficiente para un flujo de juego relativamente rápido y que la arquitectura propuesta alivia este problema porque los usuarios no tienen que conectarse a unServidor diferente cada vez que cruzan el límite del servidor. Esta arquitectura aún requiere que todos los proxies tengan en cuenta el estado general del juego en todo el espacio del juego a diferencia de nuestro trabajo donde requerimos que los proxies mantengan solo información de estado parcial sobre el espacio del juego. Se han propuesto arquitecturas de agentes basadas en fidelidad en [20, 21]. Estos trabajos proponen una arquitectura distribuida de cliente-servidor para simulaciones interactivas distribuidas donde diferentes servidores son responsables de diferentes partes del espacio del juego. Cuando un objeto se mueve de una porción a otra, hay una transferencia de un servidor a otro. Aunque estos trabajos proponen una arquitectura donde diferentes partes del espacio de simulación son administradas por diferentes servidores, no abordan el problema de disminuir el ancho de banda requerido mediante el uso de representantes de comunicación. Nuestro trabajo difiere de los trabajos anteriores discutidos anteriormente al proponer a) una arquitectura distribuida basada en el poder para disminuir los requisitos de ancho de banda en los clientes y los servidores sin requerir que los representantes mantengan información estatal sobre todo el espacio del juego, b) una técnica de asignación de autoridad dinámicapara reducir la latencia (realizando controles de consistencia localmente en el cliente siempre que sea posible) dividiendo la autoridad entre los clientes y los servidores por objeto, y c) proponer que la detección de trucos se pueda integrar en los proxies si se les proporciona más información sobreEl juego específico en lugar de usarlos puramente como proxies de comunicación (aunque esta idea aún no se ha implementado y es parte de nuestro trabajo futuro).6. Conclusiones y trabajo futuro En este documento, primero propusimos una arquitectura basada en el poder para los MMOG que permite que los MMOG se escalen a un gran número de usuarios mediante la mitigación de la necesidad de que se mantenga una gran cantidad de sesiones de transporte y disminuyan tanto la sobrecarga de la banda como la latenciade actualización de eventos. En segundo lugar, propusimos un mecanismo de asignación de autoridad mixta que divide la autoridad para tomar decisiones sobre acciones y eventos dentro del juego entre los clientes y el servidor y argumentamos cómo tal tarea de autoridad conduce a una mejor experiencia en el juego sin sacrificar la consistencia del juego. Tercero, para validar la viabilidad del mecanismo de asignación de autoridad mixta, lo implementamos dentro de un MMOG llamado RPGQuest y describimos nuestra experiencia de implementación. En el trabajo futuro, proponemos implementar la arquitectura proxy de comunicaciones descrita en este documento e integrar el mecanismo de autoridad mixta dentro de esta arquitectura. Proponemos evaluar los beneficios de la arquitectura basada en el poder en términos de escalabilidad, precisión y capacidad de respuesta. También planeamos implementar una versión del juego RPGQuest con una asignación dinámica de autoridad para permitir a los jugadores la autoridad para recoger objetos cuando ningún otro jugador está cerca. Como se discutió anteriormente, esto permitirá un juego más eficiente y receptivo en ciertas situaciones y aliviará parte de la carga de procesamiento del servidor. Además, dado que se pone tanta confianza en los clientes de nuestra arquitectura, será necesario integrarse en la arquitectura, muchos de los esquemas de detección de trucos que se han propuesto en la literatura. El software como Punkbuster [22] y un sistema de reputación como los propuestos por [23] y [15] serían integrales para el funcionamiento de una arquitectura como la nuestra que tiene mucha confianza en el cliente. Además, proponemos hacer que los proxies en nuestra arquitectura sean más conscientes de juegos para que los mecanismos de detección de trucos puedan incorporarse en los proxies mismos.7. Referencias [1] Y. W. Bernier. Métodos de compensación de latencia en el diseño y optimización del protocolo del cliente/servidor. En Proc.de Game Developers Conference01, 2001. [2] Lothar Pantel y Lars C. Wolf. Sobre el impacto del retraso en los juegos multijugador en tiempo real. En Nossdav 02: Actas del 12º Taller Internacional sobre Soporte de Red y Sistemas Operativos para Audio y Video digital, Páginas 23-29, Nueva York, NY, EE. UU., 2002. ACM Press.[3] G. Armitage. Sensibilidad de los jugadores de Quake3 a la latencia de red. En Proc.de IMW2001, Sesión del Taller Poster, noviembre de 2001. http://www.geocities.com/ GJ Armitage/Q3/Quake-Results.html.[4] Tobias Fritsch, Hartmut Ritter y Jochen Schiller. El efecto de la latencia y las limitaciones de la red en los MMORPG: un estudio de campo de Everquest2. En NetGames 05: Actas del 4º Taller de ACM Sigcomm en la red y el soporte del sistema para juegos, páginas 1-9, Nueva York, NY, EE. UU., 2005. ACM Press.[5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu y Mark Claypool. Los efectos de la pérdida y la latencia en el rendimiento del usuario en Unreal Tournament 2003. En NetGames 04: Actas del tercer taller de ACM Sigcomm en la red y el soporte del sistema para juegos, páginas 144-151, Nueva York, NY, EE. UU., 2004. ACM Press.[6] Y. Lin, K. Guo y S. Paul. Sync-MS: servicio de mensajería sincronizada para juegos distribuidos de jugadores múltiples en tiempo real. En Proc.de la décima Conferencia Internacional IEEE sobre protocolos de red (ICNP), noviembre de 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan y Sanjoy Paul. Un marco de intercambio de mensajes justo para juegos distribuidos de múltiples jugadores. En NetGames 03: Actas del segundo taller en la red y el soporte del sistema para juegos, páginas 29-41, Nueva York, NY, EE. UU., 2003. ACM Press.[8] T. Barron. Programación del juego multijugador, Capítulo 16-17, páginas 672-731. Serie de desarrollo de juegos Prima Techs. Prima Publishing, 2001. 8 El quinto taller sobre el soporte de redes y sistemas para los juegos 2006 - NetGames 2006 [9] Carsten Griwodz y P˚al Halvorsen. La diversión de usar TCP para un MMORPG. En Nossdav 06: Actas del Taller Internacional sobre Soporte de Redes y Sistemas Operativos para Audio y Video Digital, Nueva York, NY, EE. UU., 2006. ACM Press.[10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee y Sampath Rangarajan. Precisión en juegos de juego múltiples basados en la reducción muerta. En NetGames 04: Actas del tercer taller de ACM Sigcomm en la red y el soporte del sistema para juegos, páginas 161-165, Nueva York, NY, EE. UU., 2004. ACM Press.[11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee y Sampath Rangarajan. Justicia en juegos de juego múltiples basados en reciones muertas. En NetGames 05: Actas del taller de 4º ACM SIGCOMM en Network and System Support para Juegos, Páginas 1-10, Nueva York, NY, EE. UU., 2005. ACM Press.[12] Riker, T. et al. Bzflag.http://www.bzflag.org, 2000-2006.[13] Linden Lab. Segunda vida.http://secondlife.com, 2003. [14] Martin Mauve. Cómo evitar que un hombre muerto dispare. En IDMS 00: Actas del 7º Taller Internacional sobre Sistemas Multimedia Distribuidos Interactivos y Servicios de Telecomunicaciones, páginas 199-204, Londres, Reino Unido, 2000. Springer-Verlag.[15] Max Skibinsky. Desarrollo de juego multijugador masivo 2, Capítulo La búsqueda de Holy Scalepart 2: P2P Continuum, páginas 355-373. Charles River Media, 2005. [16] Joseph D. Pellegrino y Constantinos Dovrolis. Requisito de ancho de banda y consistencia de estado en tres arquitecturas de juegos multijugador. En NetGames 03: Actas del segundo taller en la red y el soporte del sistema para juegos, páginas 52-59, Nueva York, NY, EE. UU., 2003. ACM Press.[17] M. Mauve J. Widmer y S. Fischer. Un sistema proxy genérico para juegos de computadora en red. En Proc.del taller en los juegos de red, NetGames 2002, abril de 2002. [18] S. Gorlatch J. Muller, S. Fischer y M.Mauve. Una arquitectura de red de servidor proxy para juegos de computadora en tiempo real. En Euor-PAR 2004 Procesamiento paralelo: 10ª Conferencia Internacional de Euro-PAR, agosto-septiembre de 2004. [19] H. Hazeyama T. Limura e Y. Kadobayashi. Federación Zoned de Servidores de Juego: un enfoque de igual a igual para juegos en línea multijugador escalables. En Proc.de ACM Workshop en los juegos de red, NetGames 2004, agosto-septiembre de 2004. [20] B. Kelly y S. Aggarwal. Un marco para una arquitectura de agente basada en fidelidad para la simulación interactiva distribuida. En Proc.14º taller sobre estándares para la simulación interactiva distribuida, páginas 541-546, marzo de 1996. [21] S. Aggarwal y B. Kelly. Estructura jerárquica para la simulación interactiva distribuida. En Proc.13º taller sobre estándares para la simulación interactiva distribuida, páginas 125-132, septiembre de 1995. [22] Incluso Balance, Inc. Punkbuster.http://www.evenbalance.com/, 2001-2006.[23] Y. Wang y J. Vassileva. Modelo de confianza y reputación en redes entre pares. En la Tercera Conferencia Internacional sobre Computación de Peer-To-Peer, 2003. El quinto taller sobre el soporte de redes y sistemas para los juegos 2006 - NetGames 2006 9",
    "original_sentences": [
        "Authority Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and authority assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
        "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
        "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
        "Using this architecture, we propose an authority assignment mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
        "We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest.",
        "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
        "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
        "INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
        "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
        "In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
        "Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
        "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
        "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
        "Some types of games can function quite well even in the presence of large delays.",
        "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms.",
        "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
        "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
        "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
        "Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
        "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
        "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
        "Second, we propose that assignment of authority in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
        "In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined.",
        "Most currently implemented MMOGs have game servers that have almost absolute authority.",
        "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience.",
        "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
        "In this paper we define what it means to have authority within the context of events and objects in a virtual game space.",
        "We then show the benefits of delegating authority for different actions and game events between the clients and server.",
        "In our model, the game space consists of game clients (representing the players) and objects that they control.",
        "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
        "Depending on who has the authority, that entity will make decisions on the events that happen within a game space.",
        "We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
        "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
        "Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
        "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
        "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
        "The clients decision can always be accurately verified by the server.",
        "In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
        "As networked games become more complex, our architecture will become more applicable.",
        "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
        "We propose that a mixed authority assignment mechanism such as the one outlined above be implemented in high interaction MMOGs.",
        "Our paper has the following contributions.",
        "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
        "A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
        "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
        "These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience.",
        "Second, we propose a mixed authority assignment mechanism as described above that improves game playing experience.",
        "Third, we implement the proposed mixed authority assignment mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs.",
        "In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages.",
        "In Section 3, we provide a generic description of the mixed authority assignment mechanism and discuss how it improves game playing experience.",
        "In Section 4, we show the feasibility of implementing the proposed mixed authority assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest.",
        "Section 5 discusses related work.",
        "In Section 6, we present our conclusions and discuss future work. 2.",
        "PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
        "State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture.",
        "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
        "In other words, the different game regions are hosted by different servers in a distributed fashion.",
        "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
        "The servers communicate with one another to hand off a player or an object from one region to another.",
        "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
        "We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
        "In the proposed architecture, players who are close by geographically join a particular proxy.",
        "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
        "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
        "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
        "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
        "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
        "Figure 1 shows the proposed architecture.",
        "Figure 1: Architecture of the gaming environment.",
        "Note that the communication proxies need not be cognizant of the game.",
        "They host a number of players and inform the servers which players are hosted by the proxy in question.",
        "Also note that the players hosted by a proxy may not be in the same game space.",
        "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
        "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
        "The proxies communicate with one another in a peer-to-peer to fashion.",
        "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority.",
        "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
        "This definitely improves the responsiveness of the game.",
        "However, it ignores consistency that is critical in MMORPGs.",
        "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
        "Figure 2 shows and example of the working principle of the proposed architecture.",
        "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
        "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
        "Figure 2: An example.",
        "There are four communication proxies placed in geographically distant locations.",
        "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
        "Underneath each player, the figure shows which game region the player is located currently.",
        "For example, players a, b, c are in regions 1, 2, 6, respectively.",
        "Therefore, proxy P1 must communicate with servers S1 and S3.",
        "The reader can verify the rest of the links between the proxies and the servers.",
        "Players can move within the region and between regions.",
        "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
        "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
        "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
        "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
        "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
        "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
        "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
        "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
        "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
        "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
        "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
        "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
        "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
        "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
        "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
        "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
        "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
        "We consider this the fast path for movement update.",
        "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
        "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
        "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
        "The servers could perform the same functionality but with more delay.",
        "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
        "The second possibility that should be considered is when players move between regions.",
        "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
        "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
        "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
        "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
        "In the example, assume that player a moves from region 1 to region 4.",
        "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
        "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
        "Server S1 will also initiate a handoff of player a with server S2.",
        "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
        "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
        "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
        "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
        "ASSIGNMENT OF AUTHORITY As a MMOG is played, the players and the game objects that are part of the game, continually change their state.",
        "For example, consider a player who owns a tank in a battlefield game.",
        "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
        "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
        "That is, some decision has to be made on the state of each player and object as the game progresses.",
        "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
        "In a client-server based game, the server controls all the players and the objects.",
        "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
        "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
        "The client subsequently updates the state of the player and renders the player at the new location.",
        "In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
        "Most of the current first person shooter (FPS) games and role playing games (RPG) fall under this category.",
        "In current FPS games, much like in RPG games, the client is not trusted.",
        "All moves and actions that it makes are validated.",
        "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
        "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
        "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
        "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
        "A difference that occurs in some RPGs is that they use very dumb client programs.",
        "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
        "State information is not maintained because the client is not trusted with it.",
        "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
        "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
        "In a peer-to-peer game, each peer controls the player and object that it owns.",
        "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
        "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
        "In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
        "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions.",
        "It was built primarily with LAN play in mind and cheating as an afterthought.",
        "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
        "The server does no sort of validation.",
        "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
        "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority.",
        "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
        "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
        "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
        "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
        "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
        "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
        "Neither tie break nor roll back is a desirable feature of online gaming.",
        "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
        "BzFlag).",
        "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
        "Both players will see on their screen that it is the winner.",
        "This makes the state of the game inconsistent.",
        "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
        "Neither of these two approaches is a pleasing experience for online gaming.",
        "Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
        "We propose to use a hybrid approach to assign the authority dynamically between the client and the server.",
        "That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent.",
        "By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
        "For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
        "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
        "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself.",
        "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
        "We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game.",
        "Fundamentally, the consistent state of the system is the one that is defined by the server.",
        "However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
        "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
        "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
        "In this situation, the client authority must revert to the server and the sever would then make decisions.",
        "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
        "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time.",
        "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
        "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
        "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
        "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client.",
        "That is, the shortest distance in our architecture is not through the game server but through the communication proxy.",
        "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
        "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
        "This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
        "Our game architecture does not assume that the client is not to be trusted.",
        "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
        "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
        "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
        "For example, assume that in a game a plane controlled by a client moves in the game space.",
        "It is not possible for the plane to go through a building unharmed.",
        "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
        "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move.",
        "This allows us to distribute authority to make decisions about the clients.",
        "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
        "Our implementation shows the viability of our proposed solution. 4.",
        "IMPLEMENTATION EXPERIENCE We have experimented with the authority assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
        "A screen shot from this game is shown in Figure 3.",
        "The purpose of the implementation is to test its feasibility in a real game.",
        "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
        "Objects are placed within the game world and players gain points for each object that is collected.",
        "The game clients connect to a game server which allows many players to coexist in the same game world.",
        "The basic functionality of this game is representative of current online first person shooter and role playing games.",
        "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
        "In this section we will discuss the three different versions of the game that we experimented with.",
        "Figure 3: The RPGQuest Game.",
        "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
        "Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
        "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
        "There is little lag between the time player hits a wall and the time the server corrects the players position.",
        "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
        "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
        "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
        "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
        "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
        "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
        "In order to get around this problem, we developed a second version of the game, which gives all authority to the client.",
        "The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server.",
        "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
        "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
        "The update does not have to go through any extra processing or validation.",
        "This game model of complete authority given to the client is beneficial with respect to movement.",
        "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
        "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
        "Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
        "The most important of these is consistency.",
        "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
        "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
        "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
        "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
        "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
        "The two players will now both think that they own the object.",
        "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
        "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority.",
        "It is better to place authority on the client for quickly changing actions such as movement.",
        "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
        "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
        "We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary.",
        "To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server.",
        "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
        "The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
        "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
        "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
        "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
        "This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version.",
        "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
        "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
        "However, the benefits of mixed authority will not truly be seen until an implementation of our communication proxy is integrated into the game.",
        "With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
        "The coding of the different versions of the game was very simple.",
        "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
        "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
        "The server updates each client with the position of all nearby clients.",
        "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
        "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
        "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
        "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
        "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
        "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
        "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
        "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
        "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server.",
        "In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
        "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17].",
        "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
        "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
        "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
        "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
        "Proxy servers are located at various different ISPs.",
        "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
        "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
        "Fidelity based agent architectures have been proposed in [20, 21].",
        "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
        "When an object moves from one portion to another, there is a handoff from one server to another.",
        "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
        "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic authority assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
        "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
        "Second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.",
        "Third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience.",
        "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture.",
        "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
        "We also plan to implement a version of the RPGQuest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near.",
        "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
        "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
        "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
        "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
        "REFERENCES [1] Y. W. Bernier.",
        "Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization.",
        "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
        "On the impact of delay on real-time multiplayer games.",
        "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
        "ACM Press. [3] G. Armitage.",
        "Sensitivity of Quake3 Players to Network Latency.",
        "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
        "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
        "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
        "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
        "The effects of loss and latency on user performance in unreal tournament 2003.",
        "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
        "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
        "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
        "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
        "A fair message exchange framework for distributed multi-player games.",
        "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
        "ACM Press. [8] T. Barron.",
        "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
        "Prima Techs Game Development Series.",
        "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
        "The fun of using tcp for an mmorpg.",
        "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
        "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
        "Accuracy in dead-reckoning based distributed multi-player games.",
        "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
        "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
        "Fairness in dead-reckoning based distributed multi-player games.",
        "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
        "ACM Press. [12] Riker, T. et al.",
        "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
        "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
        "How to keep a dead man from shooting.",
        "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
        "Springer-Verlag. [15] Max Skibinsky.",
        "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
        "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
        "Bandwidth requirement and state consistency in three multiplayer game architectures.",
        "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
        "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
        "A Generic Proxy Systems for Networked Computer Games.",
        "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
        "A Proxy Server Network Architecture for Real-Time Computer Games.",
        "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
        "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
        "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
        "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
        "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
        "Hierarchical Structuring for Distributed Interactive Simulation.",
        "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
        "Trust and Reputation Model in Peer-to-Peer Networks.",
        "In Third International Conference on Peer-to-Peer Computing, 2003.",
        "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
    ],
    "error_count": 0,
    "keys": {
        "multi-player online game": {
            "translated_key": "juego en línea de múltiples jugadores",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Authority Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and authority assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
                "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
                "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
                "Using this architecture, we propose an authority assignment mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
                "We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively <br>multi-player online game</br> called RPGQuest.",
                "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
                "INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
                "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
                "In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
                "Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
                "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
                "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
                "Some types of games can function quite well even in the presence of large delays.",
                "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms.",
                "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
                "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
                "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
                "Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
                "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
                "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
                "Second, we propose that assignment of authority in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
                "In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined.",
                "Most currently implemented MMOGs have game servers that have almost absolute authority.",
                "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience.",
                "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
                "In this paper we define what it means to have authority within the context of events and objects in a virtual game space.",
                "We then show the benefits of delegating authority for different actions and game events between the clients and server.",
                "In our model, the game space consists of game clients (representing the players) and objects that they control.",
                "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
                "Depending on who has the authority, that entity will make decisions on the events that happen within a game space.",
                "We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
                "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
                "Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
                "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
                "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
                "The clients decision can always be accurately verified by the server.",
                "In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
                "As networked games become more complex, our architecture will become more applicable.",
                "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
                "We propose that a mixed authority assignment mechanism such as the one outlined above be implemented in high interaction MMOGs.",
                "Our paper has the following contributions.",
                "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
                "A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
                "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
                "These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience.",
                "Second, we propose a mixed authority assignment mechanism as described above that improves game playing experience.",
                "Third, we implement the proposed mixed authority assignment mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs.",
                "In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages.",
                "In Section 3, we provide a generic description of the mixed authority assignment mechanism and discuss how it improves game playing experience.",
                "In Section 4, we show the feasibility of implementing the proposed mixed authority assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest.",
                "Section 5 discusses related work.",
                "In Section 6, we present our conclusions and discuss future work. 2.",
                "PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
                "State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture.",
                "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
                "In other words, the different game regions are hosted by different servers in a distributed fashion.",
                "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
                "The servers communicate with one another to hand off a player or an object from one region to another.",
                "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
                "We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
                "In the proposed architecture, players who are close by geographically join a particular proxy.",
                "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
                "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
                "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
                "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
                "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
                "Figure 1 shows the proposed architecture.",
                "Figure 1: Architecture of the gaming environment.",
                "Note that the communication proxies need not be cognizant of the game.",
                "They host a number of players and inform the servers which players are hosted by the proxy in question.",
                "Also note that the players hosted by a proxy may not be in the same game space.",
                "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
                "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
                "The proxies communicate with one another in a peer-to-peer to fashion.",
                "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority.",
                "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
                "This definitely improves the responsiveness of the game.",
                "However, it ignores consistency that is critical in MMORPGs.",
                "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
                "Figure 2 shows and example of the working principle of the proposed architecture.",
                "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
                "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
                "Figure 2: An example.",
                "There are four communication proxies placed in geographically distant locations.",
                "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
                "Underneath each player, the figure shows which game region the player is located currently.",
                "For example, players a, b, c are in regions 1, 2, 6, respectively.",
                "Therefore, proxy P1 must communicate with servers S1 and S3.",
                "The reader can verify the rest of the links between the proxies and the servers.",
                "Players can move within the region and between regions.",
                "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
                "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
                "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
                "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
                "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
                "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
                "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
                "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
                "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
                "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
                "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
                "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
                "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
                "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
                "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
                "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
                "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
                "We consider this the fast path for movement update.",
                "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
                "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
                "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
                "The servers could perform the same functionality but with more delay.",
                "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
                "The second possibility that should be considered is when players move between regions.",
                "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
                "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
                "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
                "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
                "In the example, assume that player a moves from region 1 to region 4.",
                "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
                "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
                "Server S1 will also initiate a handoff of player a with server S2.",
                "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
                "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
                "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
                "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
                "ASSIGNMENT OF AUTHORITY As a MMOG is played, the players and the game objects that are part of the game, continually change their state.",
                "For example, consider a player who owns a tank in a battlefield game.",
                "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
                "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
                "That is, some decision has to be made on the state of each player and object as the game progresses.",
                "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
                "In a client-server based game, the server controls all the players and the objects.",
                "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
                "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
                "The client subsequently updates the state of the player and renders the player at the new location.",
                "In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
                "Most of the current first person shooter (FPS) games and role playing games (RPG) fall under this category.",
                "In current FPS games, much like in RPG games, the client is not trusted.",
                "All moves and actions that it makes are validated.",
                "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
                "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
                "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
                "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
                "A difference that occurs in some RPGs is that they use very dumb client programs.",
                "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
                "State information is not maintained because the client is not trusted with it.",
                "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
                "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
                "In a peer-to-peer game, each peer controls the player and object that it owns.",
                "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
                "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
                "In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
                "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions.",
                "It was built primarily with LAN play in mind and cheating as an afterthought.",
                "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
                "The server does no sort of validation.",
                "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
                "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority.",
                "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
                "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
                "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
                "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
                "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
                "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
                "Neither tie break nor roll back is a desirable feature of online gaming.",
                "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
                "BzFlag).",
                "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
                "Both players will see on their screen that it is the winner.",
                "This makes the state of the game inconsistent.",
                "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
                "Neither of these two approaches is a pleasing experience for online gaming.",
                "Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
                "We propose to use a hybrid approach to assign the authority dynamically between the client and the server.",
                "That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent.",
                "By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
                "For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
                "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
                "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself.",
                "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
                "We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game.",
                "Fundamentally, the consistent state of the system is the one that is defined by the server.",
                "However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
                "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
                "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
                "In this situation, the client authority must revert to the server and the sever would then make decisions.",
                "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
                "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time.",
                "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
                "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
                "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client.",
                "That is, the shortest distance in our architecture is not through the game server but through the communication proxy.",
                "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
                "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
                "This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
                "Our game architecture does not assume that the client is not to be trusted.",
                "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
                "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
                "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
                "For example, assume that in a game a plane controlled by a client moves in the game space.",
                "It is not possible for the plane to go through a building unharmed.",
                "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
                "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move.",
                "This allows us to distribute authority to make decisions about the clients.",
                "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
                "Our implementation shows the viability of our proposed solution. 4.",
                "IMPLEMENTATION EXPERIENCE We have experimented with the authority assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
                "A screen shot from this game is shown in Figure 3.",
                "The purpose of the implementation is to test its feasibility in a real game.",
                "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
                "Objects are placed within the game world and players gain points for each object that is collected.",
                "The game clients connect to a game server which allows many players to coexist in the same game world.",
                "The basic functionality of this game is representative of current online first person shooter and role playing games.",
                "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
                "In this section we will discuss the three different versions of the game that we experimented with.",
                "Figure 3: The RPGQuest Game.",
                "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
                "Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
                "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
                "There is little lag between the time player hits a wall and the time the server corrects the players position.",
                "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
                "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
                "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
                "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
                "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
                "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
                "In order to get around this problem, we developed a second version of the game, which gives all authority to the client.",
                "The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server.",
                "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
                "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
                "The update does not have to go through any extra processing or validation.",
                "This game model of complete authority given to the client is beneficial with respect to movement.",
                "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
                "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
                "Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
                "The most important of these is consistency.",
                "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
                "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
                "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
                "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
                "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
                "The two players will now both think that they own the object.",
                "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
                "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority.",
                "It is better to place authority on the client for quickly changing actions such as movement.",
                "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
                "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
                "We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary.",
                "To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server.",
                "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
                "The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
                "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
                "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
                "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
                "This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version.",
                "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
                "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
                "However, the benefits of mixed authority will not truly be seen until an implementation of our communication proxy is integrated into the game.",
                "With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
                "The coding of the different versions of the game was very simple.",
                "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
                "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
                "The server updates each client with the position of all nearby clients.",
                "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
                "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
                "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
                "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
                "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
                "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
                "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
                "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
                "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server.",
                "In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
                "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17].",
                "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
                "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
                "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
                "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
                "Proxy servers are located at various different ISPs.",
                "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
                "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
                "Fidelity based agent architectures have been proposed in [20, 21].",
                "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
                "When an object moves from one portion to another, there is a handoff from one server to another.",
                "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
                "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic authority assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
                "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
                "Second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.",
                "Third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience.",
                "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture.",
                "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
                "We also plan to implement a version of the RPGQuest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near.",
                "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
                "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
                "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
                "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
                "REFERENCES [1] Y. W. Bernier.",
                "Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization.",
                "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
                "On the impact of delay on real-time multiplayer games.",
                "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
                "ACM Press. [3] G. Armitage.",
                "Sensitivity of Quake3 Players to Network Latency.",
                "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
                "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
                "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
                "The effects of loss and latency on user performance in unreal tournament 2003.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
                "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
                "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
                "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
                "A fair message exchange framework for distributed multi-player games.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
                "ACM Press. [8] T. Barron.",
                "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
                "Prima Techs Game Development Series.",
                "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
                "The fun of using tcp for an mmorpg.",
                "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
                "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
                "Accuracy in dead-reckoning based distributed multi-player games.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
                "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
                "Fairness in dead-reckoning based distributed multi-player games.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
                "ACM Press. [12] Riker, T. et al.",
                "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
                "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
                "How to keep a dead man from shooting.",
                "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
                "Springer-Verlag. [15] Max Skibinsky.",
                "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
                "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
                "Bandwidth requirement and state consistency in three multiplayer game architectures.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
                "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
                "A Generic Proxy Systems for Networked Computer Games.",
                "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
                "A Proxy Server Network Architecture for Real-Time Computer Games.",
                "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
                "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
                "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
                "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
                "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
                "Hierarchical Structuring for Distributed Interactive Simulation.",
                "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
                "Trust and Reputation Model in Peer-to-Peer Networks.",
                "In Third International Conference on Peer-to-Peer Computing, 2003.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Mostramos que dicha división de autoridad conduce a una experiencia de juego más suave al implementar este mecanismo en un \"juego en línea multijugador\" masivo llamado RPGQuest."
            ],
            "translated_text": "",
            "candidates": [
                "juego en línea de múltiples jugadores",
                "juego en línea multijugador"
            ],
            "error": []
        },
        "communication proxy": {
            "translated_key": "proxy de comunicación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Authority Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and authority assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
                "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
                "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
                "Using this architecture, we propose an authority assignment mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
                "We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest.",
                "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
                "INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
                "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
                "In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
                "Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
                "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
                "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
                "Some types of games can function quite well even in the presence of large delays.",
                "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms.",
                "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
                "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
                "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
                "Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
                "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
                "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
                "Second, we propose that assignment of authority in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
                "In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined.",
                "Most currently implemented MMOGs have game servers that have almost absolute authority.",
                "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience.",
                "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
                "In this paper we define what it means to have authority within the context of events and objects in a virtual game space.",
                "We then show the benefits of delegating authority for different actions and game events between the clients and server.",
                "In our model, the game space consists of game clients (representing the players) and objects that they control.",
                "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
                "Depending on who has the authority, that entity will make decisions on the events that happen within a game space.",
                "We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
                "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
                "Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
                "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
                "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
                "The clients decision can always be accurately verified by the server.",
                "In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
                "As networked games become more complex, our architecture will become more applicable.",
                "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
                "We propose that a mixed authority assignment mechanism such as the one outlined above be implemented in high interaction MMOGs.",
                "Our paper has the following contributions.",
                "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
                "A <br>communication proxy</br> in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
                "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
                "These functionalities of a <br>communication proxy</br> leads to a decrease in latency of event update and subsequently, better game playing experience.",
                "Second, we propose a mixed authority assignment mechanism as described above that improves game playing experience.",
                "Third, we implement the proposed mixed authority assignment mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs.",
                "In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages.",
                "In Section 3, we provide a generic description of the mixed authority assignment mechanism and discuss how it improves game playing experience.",
                "In Section 4, we show the feasibility of implementing the proposed mixed authority assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest.",
                "Section 5 discusses related work.",
                "In Section 6, we present our conclusions and discuss future work. 2.",
                "PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
                "State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture.",
                "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
                "In other words, the different game regions are hosted by different servers in a distributed fashion.",
                "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
                "The servers communicate with one another to hand off a player or an object from one region to another.",
                "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
                "We propose a <br>communication proxy</br> based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
                "In the proposed architecture, players who are close by geographically join a particular proxy.",
                "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
                "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
                "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
                "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
                "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
                "Figure 1 shows the proposed architecture.",
                "Figure 1: Architecture of the gaming environment.",
                "Note that the communication proxies need not be cognizant of the game.",
                "They host a number of players and inform the servers which players are hosted by the proxy in question.",
                "Also note that the players hosted by a proxy may not be in the same game space.",
                "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
                "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
                "The proxies communicate with one another in a peer-to-peer to fashion.",
                "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority.",
                "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
                "This definitely improves the responsiveness of the game.",
                "However, it ignores consistency that is critical in MMORPGs.",
                "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
                "Figure 2 shows and example of the working principle of the proposed architecture.",
                "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
                "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
                "Figure 2: An example.",
                "There are four communication proxies placed in geographically distant locations.",
                "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
                "Underneath each player, the figure shows which game region the player is located currently.",
                "For example, players a, b, c are in regions 1, 2, 6, respectively.",
                "Therefore, proxy P1 must communicate with servers S1 and S3.",
                "The reader can verify the rest of the links between the proxies and the servers.",
                "Players can move within the region and between regions.",
                "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
                "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
                "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
                "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
                "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
                "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
                "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
                "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
                "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
                "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
                "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
                "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
                "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
                "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
                "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
                "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
                "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
                "We consider this the fast path for movement update.",
                "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
                "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
                "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
                "The servers could perform the same functionality but with more delay.",
                "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
                "The second possibility that should be considered is when players move between regions.",
                "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
                "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
                "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
                "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
                "In the example, assume that player a moves from region 1 to region 4.",
                "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
                "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
                "Server S1 will also initiate a handoff of player a with server S2.",
                "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
                "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
                "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
                "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
                "ASSIGNMENT OF AUTHORITY As a MMOG is played, the players and the game objects that are part of the game, continually change their state.",
                "For example, consider a player who owns a tank in a battlefield game.",
                "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
                "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
                "That is, some decision has to be made on the state of each player and object as the game progresses.",
                "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
                "In a client-server based game, the server controls all the players and the objects.",
                "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
                "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
                "The client subsequently updates the state of the player and renders the player at the new location.",
                "In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
                "Most of the current first person shooter (FPS) games and role playing games (RPG) fall under this category.",
                "In current FPS games, much like in RPG games, the client is not trusted.",
                "All moves and actions that it makes are validated.",
                "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
                "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
                "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
                "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
                "A difference that occurs in some RPGs is that they use very dumb client programs.",
                "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
                "State information is not maintained because the client is not trusted with it.",
                "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
                "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
                "In a peer-to-peer game, each peer controls the player and object that it owns.",
                "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
                "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
                "In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
                "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions.",
                "It was built primarily with LAN play in mind and cheating as an afterthought.",
                "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
                "The server does no sort of validation.",
                "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
                "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority.",
                "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
                "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
                "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
                "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
                "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
                "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
                "Neither tie break nor roll back is a desirable feature of online gaming.",
                "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
                "BzFlag).",
                "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
                "Both players will see on their screen that it is the winner.",
                "This makes the state of the game inconsistent.",
                "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
                "Neither of these two approaches is a pleasing experience for online gaming.",
                "Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
                "We propose to use a hybrid approach to assign the authority dynamically between the client and the server.",
                "That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent.",
                "By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
                "For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
                "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
                "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself.",
                "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
                "We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game.",
                "Fundamentally, the consistent state of the system is the one that is defined by the server.",
                "However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
                "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
                "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
                "In this situation, the client authority must revert to the server and the sever would then make decisions.",
                "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
                "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time.",
                "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
                "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
                "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a <br>communication proxy</br> located close to the client.",
                "That is, the shortest distance in our architecture is not through the game server but through the <br>communication proxy</br>.",
                "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
                "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
                "This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
                "Our game architecture does not assume that the client is not to be trusted.",
                "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
                "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
                "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
                "For example, assume that in a game a plane controlled by a client moves in the game space.",
                "It is not possible for the plane to go through a building unharmed.",
                "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
                "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move.",
                "This allows us to distribute authority to make decisions about the clients.",
                "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
                "Our implementation shows the viability of our proposed solution. 4.",
                "IMPLEMENTATION EXPERIENCE We have experimented with the authority assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
                "A screen shot from this game is shown in Figure 3.",
                "The purpose of the implementation is to test its feasibility in a real game.",
                "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
                "Objects are placed within the game world and players gain points for each object that is collected.",
                "The game clients connect to a game server which allows many players to coexist in the same game world.",
                "The basic functionality of this game is representative of current online first person shooter and role playing games.",
                "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
                "In this section we will discuss the three different versions of the game that we experimented with.",
                "Figure 3: The RPGQuest Game.",
                "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
                "Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
                "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
                "There is little lag between the time player hits a wall and the time the server corrects the players position.",
                "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
                "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
                "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
                "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
                "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
                "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
                "In order to get around this problem, we developed a second version of the game, which gives all authority to the client.",
                "The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server.",
                "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
                "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
                "The update does not have to go through any extra processing or validation.",
                "This game model of complete authority given to the client is beneficial with respect to movement.",
                "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
                "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
                "Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
                "The most important of these is consistency.",
                "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
                "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
                "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
                "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
                "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
                "The two players will now both think that they own the object.",
                "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
                "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority.",
                "It is better to place authority on the client for quickly changing actions such as movement.",
                "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
                "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
                "We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary.",
                "To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server.",
                "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
                "The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
                "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
                "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
                "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
                "This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version.",
                "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
                "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
                "However, the benefits of mixed authority will not truly be seen until an implementation of our <br>communication proxy</br> is integrated into the game.",
                "With the addition of the <br>communication proxy</br>, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
                "The coding of the different versions of the game was very simple.",
                "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
                "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
                "The server updates each client with the position of all nearby clients.",
                "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
                "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
                "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
                "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
                "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
                "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
                "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
                "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
                "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server.",
                "In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
                "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17].",
                "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
                "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
                "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
                "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
                "Proxy servers are located at various different ISPs.",
                "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
                "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
                "Fidelity based agent architectures have been proposed in [20, 21].",
                "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
                "When an object moves from one portion to another, there is a handoff from one server to another.",
                "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
                "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic authority assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
                "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
                "Second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.",
                "Third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience.",
                "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture.",
                "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
                "We also plan to implement a version of the RPGQuest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near.",
                "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
                "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
                "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
                "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
                "REFERENCES [1] Y. W. Bernier.",
                "Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization.",
                "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
                "On the impact of delay on real-time multiplayer games.",
                "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
                "ACM Press. [3] G. Armitage.",
                "Sensitivity of Quake3 Players to Network Latency.",
                "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
                "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
                "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
                "The effects of loss and latency on user performance in unreal tournament 2003.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
                "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
                "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
                "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
                "A fair message exchange framework for distributed multi-player games.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
                "ACM Press. [8] T. Barron.",
                "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
                "Prima Techs Game Development Series.",
                "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
                "The fun of using tcp for an mmorpg.",
                "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
                "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
                "Accuracy in dead-reckoning based distributed multi-player games.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
                "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
                "Fairness in dead-reckoning based distributed multi-player games.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
                "ACM Press. [12] Riker, T. et al.",
                "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
                "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
                "How to keep a dead man from shooting.",
                "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
                "Springer-Verlag. [15] Max Skibinsky.",
                "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
                "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
                "Bandwidth requirement and state consistency in three multiplayer game architectures.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
                "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
                "A Generic Proxy Systems for Networked Computer Games.",
                "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
                "A Proxy Server Network Architecture for Real-Time Computer Games.",
                "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
                "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
                "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
                "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
                "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
                "Hierarchical Structuring for Distributed Interactive Simulation.",
                "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
                "Trust and Reputation Model in Peer-to-Peer Networks.",
                "In Third International Conference on Peer-to-Peer Computing, 2003.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Un \"proxy de comunicación\" en la arquitectura propuesta mantiene información solo sobre partes del espacio de juego que son relevantes para los clientes conectados a él y pueden procesar la información de movimiento de objetos y jugadores dentro de estas porciones.",
                "Estas funcionalidades de un \"proxy de comunicación\" conducen a una disminución en la latencia de la actualización de eventos y, posteriormente, una mejor experiencia de juego.",
                "Proponemos una arquitectura basada en el \"proxy de comunicación\" donde un reproductor se conecta a un proxy (geográficamente) cercano en lugar de conectarse a un servidor central en el caso de una arquitectura de centralserver o a uno de los servidores en el caso de DIS2 el 5º taller en la red ySoporte del sistema para los juegos 2006 - NetGames 2006 Arquitectura del servidor Tributed.",
                "Si bien esto puede ser cierto, nuestro objetivo es crear una nueva arquitectura donde las decisiones no siempre tengan que tomarse en el servidor de juegos y la ruta más rápida hacia un cliente es en realidad a través de un \"proxy de comunicación\" ubicado cerca del cliente.",
                "Es decir, la distancia más corta en nuestra arquitectura no es a través del servidor de juegos sino a través del \"proxy de comunicación\".",
                "Sin embargo, los beneficios de la autoridad mixta no se verán realmente hasta que una implementación de nuestro \"proxy de comunicación\" esté integrado en el juego.",
                "Con la adición del \"proxy de comunicación\", después de que el cliente verifica sus propias actualizaciones posicionales, podrá enviar la actualización a todos los clientes dentro de su región a través de un enlace de baja latencia en lugar de tener que pasar primero por el servidor de juego que posiblemente podríaestar en una ubicación muy remota."
            ],
            "translated_text": "",
            "candidates": [
                "proxy de comunicación",
                "proxy de comunicación",
                "proxy de comunicación",
                "proxy de comunicación",
                "proxy de comunicación",
                "proxy de comunicación",
                "proxy de comunicación",
                "proxy de comunicación",
                "proxy de comunicación",
                "proxy de comunicación",
                "proxy de comunicación",
                "proxy de comunicación",
                "proxy de comunicación",
                "proxy de comunicación"
            ],
            "error": []
        },
        "latency compensation": {
            "translated_key": "compensación de latencia",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Authority Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and authority assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
                "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
                "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
                "Using this architecture, we propose an authority assignment mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
                "We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest.",
                "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
                "INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
                "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
                "In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
                "Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
                "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
                "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
                "Some types of games can function quite well even in the presence of large delays.",
                "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms.",
                "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
                "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
                "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
                "<br>latency compensation</br> techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
                "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
                "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
                "Second, we propose that assignment of authority in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
                "In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined.",
                "Most currently implemented MMOGs have game servers that have almost absolute authority.",
                "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience.",
                "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
                "In this paper we define what it means to have authority within the context of events and objects in a virtual game space.",
                "We then show the benefits of delegating authority for different actions and game events between the clients and server.",
                "In our model, the game space consists of game clients (representing the players) and objects that they control.",
                "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
                "Depending on who has the authority, that entity will make decisions on the events that happen within a game space.",
                "We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
                "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
                "Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
                "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
                "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
                "The clients decision can always be accurately verified by the server.",
                "In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
                "As networked games become more complex, our architecture will become more applicable.",
                "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
                "We propose that a mixed authority assignment mechanism such as the one outlined above be implemented in high interaction MMOGs.",
                "Our paper has the following contributions.",
                "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
                "A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
                "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
                "These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience.",
                "Second, we propose a mixed authority assignment mechanism as described above that improves game playing experience.",
                "Third, we implement the proposed mixed authority assignment mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs.",
                "In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages.",
                "In Section 3, we provide a generic description of the mixed authority assignment mechanism and discuss how it improves game playing experience.",
                "In Section 4, we show the feasibility of implementing the proposed mixed authority assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest.",
                "Section 5 discusses related work.",
                "In Section 6, we present our conclusions and discuss future work. 2.",
                "PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
                "State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture.",
                "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
                "In other words, the different game regions are hosted by different servers in a distributed fashion.",
                "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
                "The servers communicate with one another to hand off a player or an object from one region to another.",
                "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
                "We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
                "In the proposed architecture, players who are close by geographically join a particular proxy.",
                "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
                "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
                "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
                "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
                "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
                "Figure 1 shows the proposed architecture.",
                "Figure 1: Architecture of the gaming environment.",
                "Note that the communication proxies need not be cognizant of the game.",
                "They host a number of players and inform the servers which players are hosted by the proxy in question.",
                "Also note that the players hosted by a proxy may not be in the same game space.",
                "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
                "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
                "The proxies communicate with one another in a peer-to-peer to fashion.",
                "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority.",
                "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
                "This definitely improves the responsiveness of the game.",
                "However, it ignores consistency that is critical in MMORPGs.",
                "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
                "Figure 2 shows and example of the working principle of the proposed architecture.",
                "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
                "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
                "Figure 2: An example.",
                "There are four communication proxies placed in geographically distant locations.",
                "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
                "Underneath each player, the figure shows which game region the player is located currently.",
                "For example, players a, b, c are in regions 1, 2, 6, respectively.",
                "Therefore, proxy P1 must communicate with servers S1 and S3.",
                "The reader can verify the rest of the links between the proxies and the servers.",
                "Players can move within the region and between regions.",
                "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
                "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
                "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
                "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
                "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
                "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
                "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
                "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
                "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
                "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
                "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
                "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
                "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
                "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
                "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
                "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
                "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
                "We consider this the fast path for movement update.",
                "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
                "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
                "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
                "The servers could perform the same functionality but with more delay.",
                "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
                "The second possibility that should be considered is when players move between regions.",
                "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
                "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
                "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
                "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
                "In the example, assume that player a moves from region 1 to region 4.",
                "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
                "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
                "Server S1 will also initiate a handoff of player a with server S2.",
                "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
                "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
                "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
                "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
                "ASSIGNMENT OF AUTHORITY As a MMOG is played, the players and the game objects that are part of the game, continually change their state.",
                "For example, consider a player who owns a tank in a battlefield game.",
                "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
                "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
                "That is, some decision has to be made on the state of each player and object as the game progresses.",
                "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
                "In a client-server based game, the server controls all the players and the objects.",
                "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
                "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
                "The client subsequently updates the state of the player and renders the player at the new location.",
                "In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
                "Most of the current first person shooter (FPS) games and role playing games (RPG) fall under this category.",
                "In current FPS games, much like in RPG games, the client is not trusted.",
                "All moves and actions that it makes are validated.",
                "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
                "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
                "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
                "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
                "A difference that occurs in some RPGs is that they use very dumb client programs.",
                "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
                "State information is not maintained because the client is not trusted with it.",
                "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
                "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
                "In a peer-to-peer game, each peer controls the player and object that it owns.",
                "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
                "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
                "In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
                "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions.",
                "It was built primarily with LAN play in mind and cheating as an afterthought.",
                "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
                "The server does no sort of validation.",
                "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
                "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority.",
                "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
                "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
                "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
                "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
                "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
                "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
                "Neither tie break nor roll back is a desirable feature of online gaming.",
                "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
                "BzFlag).",
                "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
                "Both players will see on their screen that it is the winner.",
                "This makes the state of the game inconsistent.",
                "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
                "Neither of these two approaches is a pleasing experience for online gaming.",
                "Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
                "We propose to use a hybrid approach to assign the authority dynamically between the client and the server.",
                "That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent.",
                "By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
                "For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
                "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
                "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself.",
                "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
                "We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game.",
                "Fundamentally, the consistent state of the system is the one that is defined by the server.",
                "However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
                "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
                "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
                "In this situation, the client authority must revert to the server and the sever would then make decisions.",
                "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
                "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time.",
                "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
                "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
                "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client.",
                "That is, the shortest distance in our architecture is not through the game server but through the communication proxy.",
                "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
                "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
                "This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
                "Our game architecture does not assume that the client is not to be trusted.",
                "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
                "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
                "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
                "For example, assume that in a game a plane controlled by a client moves in the game space.",
                "It is not possible for the plane to go through a building unharmed.",
                "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
                "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move.",
                "This allows us to distribute authority to make decisions about the clients.",
                "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
                "Our implementation shows the viability of our proposed solution. 4.",
                "IMPLEMENTATION EXPERIENCE We have experimented with the authority assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
                "A screen shot from this game is shown in Figure 3.",
                "The purpose of the implementation is to test its feasibility in a real game.",
                "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
                "Objects are placed within the game world and players gain points for each object that is collected.",
                "The game clients connect to a game server which allows many players to coexist in the same game world.",
                "The basic functionality of this game is representative of current online first person shooter and role playing games.",
                "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
                "In this section we will discuss the three different versions of the game that we experimented with.",
                "Figure 3: The RPGQuest Game.",
                "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
                "Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
                "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
                "There is little lag between the time player hits a wall and the time the server corrects the players position.",
                "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
                "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
                "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
                "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
                "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
                "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
                "In order to get around this problem, we developed a second version of the game, which gives all authority to the client.",
                "The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server.",
                "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
                "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
                "The update does not have to go through any extra processing or validation.",
                "This game model of complete authority given to the client is beneficial with respect to movement.",
                "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
                "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
                "Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
                "The most important of these is consistency.",
                "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
                "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
                "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
                "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
                "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
                "The two players will now both think that they own the object.",
                "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
                "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority.",
                "It is better to place authority on the client for quickly changing actions such as movement.",
                "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
                "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
                "We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary.",
                "To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server.",
                "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
                "The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
                "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
                "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
                "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
                "This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version.",
                "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
                "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
                "However, the benefits of mixed authority will not truly be seen until an implementation of our communication proxy is integrated into the game.",
                "With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
                "The coding of the different versions of the game was very simple.",
                "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
                "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
                "The server updates each client with the position of all nearby clients.",
                "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
                "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
                "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
                "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
                "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
                "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
                "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
                "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
                "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server.",
                "In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
                "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17].",
                "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
                "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
                "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
                "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
                "Proxy servers are located at various different ISPs.",
                "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
                "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
                "Fidelity based agent architectures have been proposed in [20, 21].",
                "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
                "When an object moves from one portion to another, there is a handoff from one server to another.",
                "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
                "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic authority assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
                "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
                "Second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.",
                "Third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience.",
                "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture.",
                "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
                "We also plan to implement a version of the RPGQuest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near.",
                "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
                "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
                "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
                "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
                "REFERENCES [1] Y. W. Bernier.",
                "<br>latency compensation</br> Methods in Client/Server In-game Protocol Design and Optimization.",
                "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
                "On the impact of delay on real-time multiplayer games.",
                "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
                "ACM Press. [3] G. Armitage.",
                "Sensitivity of Quake3 Players to Network Latency.",
                "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
                "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
                "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
                "The effects of loss and latency on user performance in unreal tournament 2003.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
                "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
                "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
                "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
                "A fair message exchange framework for distributed multi-player games.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
                "ACM Press. [8] T. Barron.",
                "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
                "Prima Techs Game Development Series.",
                "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
                "The fun of using tcp for an mmorpg.",
                "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
                "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
                "Accuracy in dead-reckoning based distributed multi-player games.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
                "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
                "Fairness in dead-reckoning based distributed multi-player games.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
                "ACM Press. [12] Riker, T. et al.",
                "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
                "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
                "How to keep a dead man from shooting.",
                "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
                "Springer-Verlag. [15] Max Skibinsky.",
                "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
                "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
                "Bandwidth requirement and state consistency in three multiplayer game architectures.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
                "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
                "A Generic Proxy Systems for Networked Computer Games.",
                "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
                "A Proxy Server Network Architecture for Real-Time Computer Games.",
                "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
                "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
                "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
                "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
                "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
                "Hierarchical Structuring for Distributed Interactive Simulation.",
                "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
                "Trust and Reputation Model in Peer-to-Peer Networks.",
                "In Third International Conference on Peer-to-Peer Computing, 2003.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Se han propuesto técnicas de \"compensación de latencia\" para aliviar el efecto de la latencia [1, 6, 7], pero es obvio que si los MMOG aumentan la interactividad y la velocidad, se deberán desarrollar más arquitecturas para que aborde la capacidad de respuesta, precisión y consistenciadel gamestate.",
                "Métodos de \"Compensación de latencia\" en el diseño y optimización del protocolo en el juego del cliente/servidor."
            ],
            "translated_text": "",
            "candidates": [
                "compensación de latencia",
                "compensación de latencia",
                "compensación de latencia",
                "Compensación de latencia"
            ],
            "error": []
        },
        "artificial latency": {
            "translated_key": "latencia artificial",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Authority Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and authority assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
                "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
                "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
                "Using this architecture, we propose an authority assignment mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
                "We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest.",
                "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
                "INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
                "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
                "In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
                "Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
                "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
                "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
                "Some types of games can function quite well even in the presence of large delays.",
                "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding <br>artificial latency</br> was 1250ms.",
                "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
                "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
                "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
                "Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
                "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
                "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
                "Second, we propose that assignment of authority in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
                "In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined.",
                "Most currently implemented MMOGs have game servers that have almost absolute authority.",
                "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience.",
                "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
                "In this paper we define what it means to have authority within the context of events and objects in a virtual game space.",
                "We then show the benefits of delegating authority for different actions and game events between the clients and server.",
                "In our model, the game space consists of game clients (representing the players) and objects that they control.",
                "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
                "Depending on who has the authority, that entity will make decisions on the events that happen within a game space.",
                "We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
                "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
                "Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
                "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
                "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
                "The clients decision can always be accurately verified by the server.",
                "In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
                "As networked games become more complex, our architecture will become more applicable.",
                "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
                "We propose that a mixed authority assignment mechanism such as the one outlined above be implemented in high interaction MMOGs.",
                "Our paper has the following contributions.",
                "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
                "A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
                "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
                "These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience.",
                "Second, we propose a mixed authority assignment mechanism as described above that improves game playing experience.",
                "Third, we implement the proposed mixed authority assignment mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs.",
                "In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages.",
                "In Section 3, we provide a generic description of the mixed authority assignment mechanism and discuss how it improves game playing experience.",
                "In Section 4, we show the feasibility of implementing the proposed mixed authority assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest.",
                "Section 5 discusses related work.",
                "In Section 6, we present our conclusions and discuss future work. 2.",
                "PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
                "State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture.",
                "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
                "In other words, the different game regions are hosted by different servers in a distributed fashion.",
                "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
                "The servers communicate with one another to hand off a player or an object from one region to another.",
                "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
                "We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
                "In the proposed architecture, players who are close by geographically join a particular proxy.",
                "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
                "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
                "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
                "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
                "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
                "Figure 1 shows the proposed architecture.",
                "Figure 1: Architecture of the gaming environment.",
                "Note that the communication proxies need not be cognizant of the game.",
                "They host a number of players and inform the servers which players are hosted by the proxy in question.",
                "Also note that the players hosted by a proxy may not be in the same game space.",
                "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
                "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
                "The proxies communicate with one another in a peer-to-peer to fashion.",
                "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority.",
                "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
                "This definitely improves the responsiveness of the game.",
                "However, it ignores consistency that is critical in MMORPGs.",
                "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
                "Figure 2 shows and example of the working principle of the proposed architecture.",
                "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
                "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
                "Figure 2: An example.",
                "There are four communication proxies placed in geographically distant locations.",
                "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
                "Underneath each player, the figure shows which game region the player is located currently.",
                "For example, players a, b, c are in regions 1, 2, 6, respectively.",
                "Therefore, proxy P1 must communicate with servers S1 and S3.",
                "The reader can verify the rest of the links between the proxies and the servers.",
                "Players can move within the region and between regions.",
                "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
                "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
                "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
                "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
                "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
                "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
                "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
                "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
                "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
                "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
                "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
                "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
                "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
                "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
                "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
                "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
                "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
                "We consider this the fast path for movement update.",
                "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
                "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
                "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
                "The servers could perform the same functionality but with more delay.",
                "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
                "The second possibility that should be considered is when players move between regions.",
                "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
                "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
                "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
                "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
                "In the example, assume that player a moves from region 1 to region 4.",
                "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
                "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
                "Server S1 will also initiate a handoff of player a with server S2.",
                "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
                "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
                "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
                "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
                "ASSIGNMENT OF AUTHORITY As a MMOG is played, the players and the game objects that are part of the game, continually change their state.",
                "For example, consider a player who owns a tank in a battlefield game.",
                "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
                "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
                "That is, some decision has to be made on the state of each player and object as the game progresses.",
                "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
                "In a client-server based game, the server controls all the players and the objects.",
                "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
                "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
                "The client subsequently updates the state of the player and renders the player at the new location.",
                "In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
                "Most of the current first person shooter (FPS) games and role playing games (RPG) fall under this category.",
                "In current FPS games, much like in RPG games, the client is not trusted.",
                "All moves and actions that it makes are validated.",
                "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
                "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
                "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
                "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
                "A difference that occurs in some RPGs is that they use very dumb client programs.",
                "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
                "State information is not maintained because the client is not trusted with it.",
                "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
                "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
                "In a peer-to-peer game, each peer controls the player and object that it owns.",
                "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
                "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
                "In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
                "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions.",
                "It was built primarily with LAN play in mind and cheating as an afterthought.",
                "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
                "The server does no sort of validation.",
                "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
                "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority.",
                "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
                "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
                "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
                "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
                "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
                "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
                "Neither tie break nor roll back is a desirable feature of online gaming.",
                "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
                "BzFlag).",
                "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
                "Both players will see on their screen that it is the winner.",
                "This makes the state of the game inconsistent.",
                "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
                "Neither of these two approaches is a pleasing experience for online gaming.",
                "Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
                "We propose to use a hybrid approach to assign the authority dynamically between the client and the server.",
                "That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent.",
                "By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
                "For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
                "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
                "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself.",
                "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
                "We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game.",
                "Fundamentally, the consistent state of the system is the one that is defined by the server.",
                "However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
                "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
                "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
                "In this situation, the client authority must revert to the server and the sever would then make decisions.",
                "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
                "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time.",
                "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
                "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
                "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client.",
                "That is, the shortest distance in our architecture is not through the game server but through the communication proxy.",
                "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
                "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
                "This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
                "Our game architecture does not assume that the client is not to be trusted.",
                "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
                "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
                "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
                "For example, assume that in a game a plane controlled by a client moves in the game space.",
                "It is not possible for the plane to go through a building unharmed.",
                "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
                "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move.",
                "This allows us to distribute authority to make decisions about the clients.",
                "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
                "Our implementation shows the viability of our proposed solution. 4.",
                "IMPLEMENTATION EXPERIENCE We have experimented with the authority assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
                "A screen shot from this game is shown in Figure 3.",
                "The purpose of the implementation is to test its feasibility in a real game.",
                "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
                "Objects are placed within the game world and players gain points for each object that is collected.",
                "The game clients connect to a game server which allows many players to coexist in the same game world.",
                "The basic functionality of this game is representative of current online first person shooter and role playing games.",
                "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
                "In this section we will discuss the three different versions of the game that we experimented with.",
                "Figure 3: The RPGQuest Game.",
                "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
                "Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
                "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
                "There is little lag between the time player hits a wall and the time the server corrects the players position.",
                "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
                "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
                "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
                "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
                "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
                "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
                "In order to get around this problem, we developed a second version of the game, which gives all authority to the client.",
                "The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server.",
                "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
                "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
                "The update does not have to go through any extra processing or validation.",
                "This game model of complete authority given to the client is beneficial with respect to movement.",
                "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
                "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
                "Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
                "The most important of these is consistency.",
                "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
                "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
                "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
                "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
                "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
                "The two players will now both think that they own the object.",
                "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
                "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority.",
                "It is better to place authority on the client for quickly changing actions such as movement.",
                "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
                "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
                "We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary.",
                "To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server.",
                "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
                "The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
                "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
                "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
                "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
                "This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version.",
                "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
                "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
                "However, the benefits of mixed authority will not truly be seen until an implementation of our communication proxy is integrated into the game.",
                "With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
                "The coding of the different versions of the game was very simple.",
                "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
                "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
                "The server updates each client with the position of all nearby clients.",
                "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
                "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
                "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
                "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
                "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
                "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
                "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
                "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
                "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server.",
                "In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
                "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17].",
                "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
                "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
                "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
                "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
                "Proxy servers are located at various different ISPs.",
                "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
                "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
                "Fidelity based agent architectures have been proposed in [20, 21].",
                "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
                "When an object moves from one portion to another, there is a handoff from one server to another.",
                "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
                "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic authority assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
                "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
                "Second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.",
                "Third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience.",
                "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture.",
                "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
                "We also plan to implement a version of the RPGQuest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near.",
                "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
                "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
                "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
                "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
                "REFERENCES [1] Y. W. Bernier.",
                "Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization.",
                "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
                "On the impact of delay on real-time multiplayer games.",
                "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
                "ACM Press. [3] G. Armitage.",
                "Sensitivity of Quake3 Players to Network Latency.",
                "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
                "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
                "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
                "The effects of loss and latency on user performance in unreal tournament 2003.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
                "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
                "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
                "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
                "A fair message exchange framework for distributed multi-player games.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
                "ACM Press. [8] T. Barron.",
                "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
                "Prima Techs Game Development Series.",
                "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
                "The fun of using tcp for an mmorpg.",
                "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
                "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
                "Accuracy in dead-reckoning based distributed multi-player games.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
                "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
                "Fairness in dead-reckoning based distributed multi-player games.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
                "ACM Press. [12] Riker, T. et al.",
                "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
                "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
                "How to keep a dead man from shooting.",
                "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
                "Springer-Verlag. [15] Max Skibinsky.",
                "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
                "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
                "Bandwidth requirement and state consistency in three multiplayer game architectures.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
                "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
                "A Generic Proxy Systems for Networked Computer Games.",
                "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
                "A Proxy Server Network Architecture for Real-Time Computer Games.",
                "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
                "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
                "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
                "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
                "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
                "Hierarchical Structuring for Distributed Interactive Simulation.",
                "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
                "Trust and Reputation Model in Peer-to-Peer Networks.",
                "In Third International Conference on Peer-to-Peer Computing, 2003.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Por ejemplo, [4] muestra que en un juego de rol moderno llamado Everquest 2, el punto de interrupción del juego al agregar \"latencia artificial\" fue de 1250 ms."
            ],
            "translated_text": "",
            "candidates": [
                "latencia artificial",
                "latencia artificial"
            ],
            "error": []
        },
        "proxy-based game architecture": {
            "translated_key": "arquitectura de juego basada en proxy",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Authority Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and authority assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
                "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
                "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
                "Using this architecture, we propose an authority assignment mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
                "We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest.",
                "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
                "INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
                "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
                "In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
                "Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
                "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
                "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
                "Some types of games can function quite well even in the presence of large delays.",
                "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms.",
                "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
                "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
                "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
                "Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
                "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
                "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
                "Second, we propose that assignment of authority in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
                "In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined.",
                "Most currently implemented MMOGs have game servers that have almost absolute authority.",
                "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience.",
                "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
                "In this paper we define what it means to have authority within the context of events and objects in a virtual game space.",
                "We then show the benefits of delegating authority for different actions and game events between the clients and server.",
                "In our model, the game space consists of game clients (representing the players) and objects that they control.",
                "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
                "Depending on who has the authority, that entity will make decisions on the events that happen within a game space.",
                "We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
                "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
                "Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
                "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
                "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
                "The clients decision can always be accurately verified by the server.",
                "In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
                "As networked games become more complex, our architecture will become more applicable.",
                "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
                "We propose that a mixed authority assignment mechanism such as the one outlined above be implemented in high interaction MMOGs.",
                "Our paper has the following contributions.",
                "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
                "A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
                "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
                "These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience.",
                "Second, we propose a mixed authority assignment mechanism as described above that improves game playing experience.",
                "Third, we implement the proposed mixed authority assignment mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs.",
                "In Section 2, we describe the <br>proxy-based game architecture</br> in more detail and illustrate its advantages.",
                "In Section 3, we provide a generic description of the mixed authority assignment mechanism and discuss how it improves game playing experience.",
                "In Section 4, we show the feasibility of implementing the proposed mixed authority assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest.",
                "Section 5 discusses related work.",
                "In Section 6, we present our conclusions and discuss future work. 2.",
                "<br>proxy-based game architecture</br> Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
                "State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture.",
                "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
                "In other words, the different game regions are hosted by different servers in a distributed fashion.",
                "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
                "The servers communicate with one another to hand off a player or an object from one region to another.",
                "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
                "We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
                "In the proposed architecture, players who are close by geographically join a particular proxy.",
                "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
                "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
                "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
                "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
                "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
                "Figure 1 shows the proposed architecture.",
                "Figure 1: Architecture of the gaming environment.",
                "Note that the communication proxies need not be cognizant of the game.",
                "They host a number of players and inform the servers which players are hosted by the proxy in question.",
                "Also note that the players hosted by a proxy may not be in the same game space.",
                "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
                "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
                "The proxies communicate with one another in a peer-to-peer to fashion.",
                "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority.",
                "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
                "This definitely improves the responsiveness of the game.",
                "However, it ignores consistency that is critical in MMORPGs.",
                "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
                "Figure 2 shows and example of the working principle of the proposed architecture.",
                "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
                "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
                "Figure 2: An example.",
                "There are four communication proxies placed in geographically distant locations.",
                "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
                "Underneath each player, the figure shows which game region the player is located currently.",
                "For example, players a, b, c are in regions 1, 2, 6, respectively.",
                "Therefore, proxy P1 must communicate with servers S1 and S3.",
                "The reader can verify the rest of the links between the proxies and the servers.",
                "Players can move within the region and between regions.",
                "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
                "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
                "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
                "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
                "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
                "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
                "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
                "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
                "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
                "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
                "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
                "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
                "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
                "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
                "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
                "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
                "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
                "We consider this the fast path for movement update.",
                "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
                "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
                "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
                "The servers could perform the same functionality but with more delay.",
                "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
                "The second possibility that should be considered is when players move between regions.",
                "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
                "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
                "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
                "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
                "In the example, assume that player a moves from region 1 to region 4.",
                "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
                "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
                "Server S1 will also initiate a handoff of player a with server S2.",
                "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
                "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
                "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
                "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
                "ASSIGNMENT OF AUTHORITY As a MMOG is played, the players and the game objects that are part of the game, continually change their state.",
                "For example, consider a player who owns a tank in a battlefield game.",
                "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
                "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
                "That is, some decision has to be made on the state of each player and object as the game progresses.",
                "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
                "In a client-server based game, the server controls all the players and the objects.",
                "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
                "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
                "The client subsequently updates the state of the player and renders the player at the new location.",
                "In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
                "Most of the current first person shooter (FPS) games and role playing games (RPG) fall under this category.",
                "In current FPS games, much like in RPG games, the client is not trusted.",
                "All moves and actions that it makes are validated.",
                "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
                "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
                "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
                "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
                "A difference that occurs in some RPGs is that they use very dumb client programs.",
                "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
                "State information is not maintained because the client is not trusted with it.",
                "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
                "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
                "In a peer-to-peer game, each peer controls the player and object that it owns.",
                "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
                "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
                "In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
                "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions.",
                "It was built primarily with LAN play in mind and cheating as an afterthought.",
                "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
                "The server does no sort of validation.",
                "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
                "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority.",
                "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
                "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
                "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
                "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
                "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
                "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
                "Neither tie break nor roll back is a desirable feature of online gaming.",
                "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
                "BzFlag).",
                "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
                "Both players will see on their screen that it is the winner.",
                "This makes the state of the game inconsistent.",
                "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
                "Neither of these two approaches is a pleasing experience for online gaming.",
                "Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
                "We propose to use a hybrid approach to assign the authority dynamically between the client and the server.",
                "That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent.",
                "By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
                "For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
                "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
                "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself.",
                "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
                "We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game.",
                "Fundamentally, the consistent state of the system is the one that is defined by the server.",
                "However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
                "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
                "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
                "In this situation, the client authority must revert to the server and the sever would then make decisions.",
                "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
                "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time.",
                "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
                "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
                "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client.",
                "That is, the shortest distance in our architecture is not through the game server but through the communication proxy.",
                "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
                "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
                "This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
                "Our game architecture does not assume that the client is not to be trusted.",
                "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
                "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
                "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
                "For example, assume that in a game a plane controlled by a client moves in the game space.",
                "It is not possible for the plane to go through a building unharmed.",
                "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
                "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move.",
                "This allows us to distribute authority to make decisions about the clients.",
                "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
                "Our implementation shows the viability of our proposed solution. 4.",
                "IMPLEMENTATION EXPERIENCE We have experimented with the authority assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
                "A screen shot from this game is shown in Figure 3.",
                "The purpose of the implementation is to test its feasibility in a real game.",
                "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
                "Objects are placed within the game world and players gain points for each object that is collected.",
                "The game clients connect to a game server which allows many players to coexist in the same game world.",
                "The basic functionality of this game is representative of current online first person shooter and role playing games.",
                "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
                "In this section we will discuss the three different versions of the game that we experimented with.",
                "Figure 3: The RPGQuest Game.",
                "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
                "Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
                "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
                "There is little lag between the time player hits a wall and the time the server corrects the players position.",
                "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
                "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
                "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
                "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
                "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
                "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
                "In order to get around this problem, we developed a second version of the game, which gives all authority to the client.",
                "The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server.",
                "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
                "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
                "The update does not have to go through any extra processing or validation.",
                "This game model of complete authority given to the client is beneficial with respect to movement.",
                "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
                "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
                "Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
                "The most important of these is consistency.",
                "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
                "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
                "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
                "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
                "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
                "The two players will now both think that they own the object.",
                "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
                "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority.",
                "It is better to place authority on the client for quickly changing actions such as movement.",
                "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
                "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
                "We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary.",
                "To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server.",
                "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
                "The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
                "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
                "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
                "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
                "This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version.",
                "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
                "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
                "However, the benefits of mixed authority will not truly be seen until an implementation of our communication proxy is integrated into the game.",
                "With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
                "The coding of the different versions of the game was very simple.",
                "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
                "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
                "The server updates each client with the position of all nearby clients.",
                "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
                "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
                "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
                "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
                "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
                "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
                "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
                "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
                "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server.",
                "In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
                "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17].",
                "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
                "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
                "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
                "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
                "Proxy servers are located at various different ISPs.",
                "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
                "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
                "Fidelity based agent architectures have been proposed in [20, 21].",
                "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
                "When an object moves from one portion to another, there is a handoff from one server to another.",
                "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
                "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic authority assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
                "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
                "Second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.",
                "Third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience.",
                "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture.",
                "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
                "We also plan to implement a version of the RPGQuest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near.",
                "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
                "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
                "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
                "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
                "REFERENCES [1] Y. W. Bernier.",
                "Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization.",
                "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
                "On the impact of delay on real-time multiplayer games.",
                "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
                "ACM Press. [3] G. Armitage.",
                "Sensitivity of Quake3 Players to Network Latency.",
                "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
                "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
                "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
                "The effects of loss and latency on user performance in unreal tournament 2003.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
                "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
                "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
                "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
                "A fair message exchange framework for distributed multi-player games.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
                "ACM Press. [8] T. Barron.",
                "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
                "Prima Techs Game Development Series.",
                "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
                "The fun of using tcp for an mmorpg.",
                "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
                "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
                "Accuracy in dead-reckoning based distributed multi-player games.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
                "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
                "Fairness in dead-reckoning based distributed multi-player games.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
                "ACM Press. [12] Riker, T. et al.",
                "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
                "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
                "How to keep a dead man from shooting.",
                "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
                "Springer-Verlag. [15] Max Skibinsky.",
                "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
                "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
                "Bandwidth requirement and state consistency in three multiplayer game architectures.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
                "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
                "A Generic Proxy Systems for Networked Computer Games.",
                "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
                "A Proxy Server Network Architecture for Real-Time Computer Games.",
                "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
                "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
                "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
                "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
                "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
                "Hierarchical Structuring for Distributed Interactive Simulation.",
                "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
                "Trust and Reputation Model in Peer-to-Peer Networks.",
                "In Third International Conference on Peer-to-Peer Computing, 2003.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En la Sección 2, describimos la \"arquitectura del juego basada en el poder\" con más detalle e ilustramos sus ventajas.",
                "La \"arquitectura de juego basada en el poder\" en masivamente los juegos en línea de múltiples jugadores (MMOG) generalmente consisten en un gran espacio de juego en el que los jugadores y los diferentes objetos de juego residen y se mueven e interactúan con cada uno."
            ],
            "translated_text": "",
            "candidates": [
                "arquitectura de juegos basada en el poder",
                "arquitectura del juego basada en el poder",
                "arquitectura de juegos basada en el poder",
                "arquitectura de juego basada en el poder"
            ],
            "error": []
        },
        "central-server architecture": {
            "translated_key": "arquitectura de servidor central",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Authority Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and authority assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
                "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
                "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
                "Using this architecture, we propose an authority assignment mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
                "We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest.",
                "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
                "INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
                "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
                "In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
                "Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
                "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
                "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
                "Some types of games can function quite well even in the presence of large delays.",
                "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms.",
                "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
                "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
                "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
                "Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
                "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
                "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
                "Second, we propose that assignment of authority in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
                "In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined.",
                "Most currently implemented MMOGs have game servers that have almost absolute authority.",
                "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience.",
                "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
                "In this paper we define what it means to have authority within the context of events and objects in a virtual game space.",
                "We then show the benefits of delegating authority for different actions and game events between the clients and server.",
                "In our model, the game space consists of game clients (representing the players) and objects that they control.",
                "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
                "Depending on who has the authority, that entity will make decisions on the events that happen within a game space.",
                "We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
                "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
                "Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
                "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
                "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
                "The clients decision can always be accurately verified by the server.",
                "In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
                "As networked games become more complex, our architecture will become more applicable.",
                "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
                "We propose that a mixed authority assignment mechanism such as the one outlined above be implemented in high interaction MMOGs.",
                "Our paper has the following contributions.",
                "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
                "A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
                "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
                "These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience.",
                "Second, we propose a mixed authority assignment mechanism as described above that improves game playing experience.",
                "Third, we implement the proposed mixed authority assignment mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs.",
                "In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages.",
                "In Section 3, we provide a generic description of the mixed authority assignment mechanism and discuss how it improves game playing experience.",
                "In Section 4, we show the feasibility of implementing the proposed mixed authority assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest.",
                "Section 5 discusses related work.",
                "In Section 6, we present our conclusions and discuss future work. 2.",
                "PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
                "State information about the whole game space could be kept in a single central server which we would refer to as a <br>central-server architecture</br>.",
                "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
                "In other words, the different game regions are hosted by different servers in a distributed fashion.",
                "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
                "The servers communicate with one another to hand off a player or an object from one region to another.",
                "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
                "We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
                "In the proposed architecture, players who are close by geographically join a particular proxy.",
                "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
                "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
                "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
                "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
                "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
                "Figure 1 shows the proposed architecture.",
                "Figure 1: Architecture of the gaming environment.",
                "Note that the communication proxies need not be cognizant of the game.",
                "They host a number of players and inform the servers which players are hosted by the proxy in question.",
                "Also note that the players hosted by a proxy may not be in the same game space.",
                "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
                "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
                "The proxies communicate with one another in a peer-to-peer to fashion.",
                "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority.",
                "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
                "This definitely improves the responsiveness of the game.",
                "However, it ignores consistency that is critical in MMORPGs.",
                "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
                "Figure 2 shows and example of the working principle of the proposed architecture.",
                "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
                "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
                "Figure 2: An example.",
                "There are four communication proxies placed in geographically distant locations.",
                "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
                "Underneath each player, the figure shows which game region the player is located currently.",
                "For example, players a, b, c are in regions 1, 2, 6, respectively.",
                "Therefore, proxy P1 must communicate with servers S1 and S3.",
                "The reader can verify the rest of the links between the proxies and the servers.",
                "Players can move within the region and between regions.",
                "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
                "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
                "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
                "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
                "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
                "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
                "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
                "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
                "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
                "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
                "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
                "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
                "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
                "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
                "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
                "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
                "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
                "We consider this the fast path for movement update.",
                "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
                "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
                "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
                "The servers could perform the same functionality but with more delay.",
                "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
                "The second possibility that should be considered is when players move between regions.",
                "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
                "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
                "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
                "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
                "In the example, assume that player a moves from region 1 to region 4.",
                "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
                "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
                "Server S1 will also initiate a handoff of player a with server S2.",
                "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
                "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
                "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
                "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
                "ASSIGNMENT OF AUTHORITY As a MMOG is played, the players and the game objects that are part of the game, continually change their state.",
                "For example, consider a player who owns a tank in a battlefield game.",
                "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
                "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
                "That is, some decision has to be made on the state of each player and object as the game progresses.",
                "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
                "In a client-server based game, the server controls all the players and the objects.",
                "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
                "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
                "The client subsequently updates the state of the player and renders the player at the new location.",
                "In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
                "Most of the current first person shooter (FPS) games and role playing games (RPG) fall under this category.",
                "In current FPS games, much like in RPG games, the client is not trusted.",
                "All moves and actions that it makes are validated.",
                "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
                "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
                "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
                "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
                "A difference that occurs in some RPGs is that they use very dumb client programs.",
                "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
                "State information is not maintained because the client is not trusted with it.",
                "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
                "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
                "In a peer-to-peer game, each peer controls the player and object that it owns.",
                "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
                "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
                "In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
                "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions.",
                "It was built primarily with LAN play in mind and cheating as an afterthought.",
                "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
                "The server does no sort of validation.",
                "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
                "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority.",
                "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
                "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
                "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
                "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
                "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
                "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
                "Neither tie break nor roll back is a desirable feature of online gaming.",
                "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
                "BzFlag).",
                "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
                "Both players will see on their screen that it is the winner.",
                "This makes the state of the game inconsistent.",
                "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
                "Neither of these two approaches is a pleasing experience for online gaming.",
                "Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
                "We propose to use a hybrid approach to assign the authority dynamically between the client and the server.",
                "That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent.",
                "By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
                "For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
                "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
                "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself.",
                "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
                "We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game.",
                "Fundamentally, the consistent state of the system is the one that is defined by the server.",
                "However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
                "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
                "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
                "In this situation, the client authority must revert to the server and the sever would then make decisions.",
                "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
                "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time.",
                "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
                "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
                "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client.",
                "That is, the shortest distance in our architecture is not through the game server but through the communication proxy.",
                "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
                "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
                "This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
                "Our game architecture does not assume that the client is not to be trusted.",
                "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
                "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
                "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
                "For example, assume that in a game a plane controlled by a client moves in the game space.",
                "It is not possible for the plane to go through a building unharmed.",
                "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
                "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move.",
                "This allows us to distribute authority to make decisions about the clients.",
                "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
                "Our implementation shows the viability of our proposed solution. 4.",
                "IMPLEMENTATION EXPERIENCE We have experimented with the authority assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
                "A screen shot from this game is shown in Figure 3.",
                "The purpose of the implementation is to test its feasibility in a real game.",
                "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
                "Objects are placed within the game world and players gain points for each object that is collected.",
                "The game clients connect to a game server which allows many players to coexist in the same game world.",
                "The basic functionality of this game is representative of current online first person shooter and role playing games.",
                "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
                "In this section we will discuss the three different versions of the game that we experimented with.",
                "Figure 3: The RPGQuest Game.",
                "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
                "Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
                "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
                "There is little lag between the time player hits a wall and the time the server corrects the players position.",
                "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
                "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
                "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
                "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
                "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
                "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
                "In order to get around this problem, we developed a second version of the game, which gives all authority to the client.",
                "The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server.",
                "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
                "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
                "The update does not have to go through any extra processing or validation.",
                "This game model of complete authority given to the client is beneficial with respect to movement.",
                "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
                "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
                "Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
                "The most important of these is consistency.",
                "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
                "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
                "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
                "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
                "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
                "The two players will now both think that they own the object.",
                "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
                "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority.",
                "It is better to place authority on the client for quickly changing actions such as movement.",
                "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
                "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
                "We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary.",
                "To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server.",
                "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
                "The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
                "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
                "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
                "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
                "This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version.",
                "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
                "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
                "However, the benefits of mixed authority will not truly be seen until an implementation of our communication proxy is integrated into the game.",
                "With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
                "The coding of the different versions of the game was very simple.",
                "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
                "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
                "The server updates each client with the position of all nearby clients.",
                "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
                "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
                "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
                "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
                "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
                "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
                "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
                "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
                "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server.",
                "In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
                "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17].",
                "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
                "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
                "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
                "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
                "Proxy servers are located at various different ISPs.",
                "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
                "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
                "Fidelity based agent architectures have been proposed in [20, 21].",
                "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
                "When an object moves from one portion to another, there is a handoff from one server to another.",
                "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
                "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic authority assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
                "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
                "Second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.",
                "Third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience.",
                "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture.",
                "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
                "We also plan to implement a version of the RPGQuest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near.",
                "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
                "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
                "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
                "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
                "REFERENCES [1] Y. W. Bernier.",
                "Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization.",
                "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
                "On the impact of delay on real-time multiplayer games.",
                "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
                "ACM Press. [3] G. Armitage.",
                "Sensitivity of Quake3 Players to Network Latency.",
                "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
                "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
                "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
                "The effects of loss and latency on user performance in unreal tournament 2003.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
                "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
                "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
                "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
                "A fair message exchange framework for distributed multi-player games.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
                "ACM Press. [8] T. Barron.",
                "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
                "Prima Techs Game Development Series.",
                "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
                "The fun of using tcp for an mmorpg.",
                "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
                "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
                "Accuracy in dead-reckoning based distributed multi-player games.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
                "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
                "Fairness in dead-reckoning based distributed multi-player games.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
                "ACM Press. [12] Riker, T. et al.",
                "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
                "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
                "How to keep a dead man from shooting.",
                "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
                "Springer-Verlag. [15] Max Skibinsky.",
                "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
                "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
                "Bandwidth requirement and state consistency in three multiplayer game architectures.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
                "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
                "A Generic Proxy Systems for Networked Computer Games.",
                "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
                "A Proxy Server Network Architecture for Real-Time Computer Games.",
                "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
                "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
                "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
                "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
                "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
                "Hierarchical Structuring for Distributed Interactive Simulation.",
                "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
                "Trust and Reputation Model in Peer-to-Peer Networks.",
                "In Third International Conference on Peer-to-Peer Computing, 2003.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La información estatal sobre todo el espacio del juego podría mantenerse en un solo servidor central al que nos referiríamos como una \"arquitectura de servidor central\"."
            ],
            "translated_text": "",
            "candidates": [
                "arquitectura de servidor central",
                "arquitectura de servidor central"
            ],
            "error": []
        },
        "assignment of authority": {
            "translated_key": "asignación de autoridad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Authority Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and authority assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
                "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
                "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
                "Using this architecture, we propose an authority assignment mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
                "We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest.",
                "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
                "INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
                "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
                "In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
                "Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
                "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
                "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
                "Some types of games can function quite well even in the presence of large delays.",
                "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms.",
                "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
                "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
                "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
                "Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
                "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
                "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
                "Second, we propose that <br>assignment of authority</br> in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
                "In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined.",
                "Most currently implemented MMOGs have game servers that have almost absolute authority.",
                "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience.",
                "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
                "In this paper we define what it means to have authority within the context of events and objects in a virtual game space.",
                "We then show the benefits of delegating authority for different actions and game events between the clients and server.",
                "In our model, the game space consists of game clients (representing the players) and objects that they control.",
                "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
                "Depending on who has the authority, that entity will make decisions on the events that happen within a game space.",
                "We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
                "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
                "Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
                "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
                "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
                "The clients decision can always be accurately verified by the server.",
                "In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
                "As networked games become more complex, our architecture will become more applicable.",
                "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
                "We propose that a mixed authority assignment mechanism such as the one outlined above be implemented in high interaction MMOGs.",
                "Our paper has the following contributions.",
                "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
                "A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
                "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
                "These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience.",
                "Second, we propose a mixed authority assignment mechanism as described above that improves game playing experience.",
                "Third, we implement the proposed mixed authority assignment mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs.",
                "In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages.",
                "In Section 3, we provide a generic description of the mixed authority assignment mechanism and discuss how it improves game playing experience.",
                "In Section 4, we show the feasibility of implementing the proposed mixed authority assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest.",
                "Section 5 discusses related work.",
                "In Section 6, we present our conclusions and discuss future work. 2.",
                "PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
                "State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture.",
                "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
                "In other words, the different game regions are hosted by different servers in a distributed fashion.",
                "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
                "The servers communicate with one another to hand off a player or an object from one region to another.",
                "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
                "We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
                "In the proposed architecture, players who are close by geographically join a particular proxy.",
                "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
                "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
                "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
                "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
                "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
                "Figure 1 shows the proposed architecture.",
                "Figure 1: Architecture of the gaming environment.",
                "Note that the communication proxies need not be cognizant of the game.",
                "They host a number of players and inform the servers which players are hosted by the proxy in question.",
                "Also note that the players hosted by a proxy may not be in the same game space.",
                "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
                "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
                "The proxies communicate with one another in a peer-to-peer to fashion.",
                "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority.",
                "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
                "This definitely improves the responsiveness of the game.",
                "However, it ignores consistency that is critical in MMORPGs.",
                "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
                "Figure 2 shows and example of the working principle of the proposed architecture.",
                "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
                "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
                "Figure 2: An example.",
                "There are four communication proxies placed in geographically distant locations.",
                "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
                "Underneath each player, the figure shows which game region the player is located currently.",
                "For example, players a, b, c are in regions 1, 2, 6, respectively.",
                "Therefore, proxy P1 must communicate with servers S1 and S3.",
                "The reader can verify the rest of the links between the proxies and the servers.",
                "Players can move within the region and between regions.",
                "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
                "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
                "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
                "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
                "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
                "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
                "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
                "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
                "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
                "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
                "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
                "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
                "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
                "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
                "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
                "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
                "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
                "We consider this the fast path for movement update.",
                "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
                "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
                "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
                "The servers could perform the same functionality but with more delay.",
                "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
                "The second possibility that should be considered is when players move between regions.",
                "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
                "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
                "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
                "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
                "In the example, assume that player a moves from region 1 to region 4.",
                "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
                "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
                "Server S1 will also initiate a handoff of player a with server S2.",
                "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
                "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
                "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
                "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
                "<br>assignment of authority</br> As a MMOG is played, the players and the game objects that are part of the game, continually change their state.",
                "For example, consider a player who owns a tank in a battlefield game.",
                "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
                "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
                "That is, some decision has to be made on the state of each player and object as the game progresses.",
                "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
                "In a client-server based game, the server controls all the players and the objects.",
                "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
                "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
                "The client subsequently updates the state of the player and renders the player at the new location.",
                "In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
                "Most of the current first person shooter (FPS) games and role playing games (RPG) fall under this category.",
                "In current FPS games, much like in RPG games, the client is not trusted.",
                "All moves and actions that it makes are validated.",
                "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
                "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
                "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
                "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
                "A difference that occurs in some RPGs is that they use very dumb client programs.",
                "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
                "State information is not maintained because the client is not trusted with it.",
                "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
                "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
                "In a peer-to-peer game, each peer controls the player and object that it owns.",
                "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
                "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
                "In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
                "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions.",
                "It was built primarily with LAN play in mind and cheating as an afterthought.",
                "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
                "The server does no sort of validation.",
                "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
                "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority.",
                "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
                "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
                "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
                "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
                "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
                "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
                "Neither tie break nor roll back is a desirable feature of online gaming.",
                "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
                "BzFlag).",
                "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
                "Both players will see on their screen that it is the winner.",
                "This makes the state of the game inconsistent.",
                "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
                "Neither of these two approaches is a pleasing experience for online gaming.",
                "Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
                "We propose to use a hybrid approach to assign the authority dynamically between the client and the server.",
                "That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent.",
                "By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
                "For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
                "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
                "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself.",
                "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
                "We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game.",
                "Fundamentally, the consistent state of the system is the one that is defined by the server.",
                "However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
                "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
                "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
                "In this situation, the client authority must revert to the server and the sever would then make decisions.",
                "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
                "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time.",
                "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
                "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
                "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client.",
                "That is, the shortest distance in our architecture is not through the game server but through the communication proxy.",
                "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
                "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
                "This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
                "Our game architecture does not assume that the client is not to be trusted.",
                "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
                "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
                "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
                "For example, assume that in a game a plane controlled by a client moves in the game space.",
                "It is not possible for the plane to go through a building unharmed.",
                "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
                "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move.",
                "This allows us to distribute authority to make decisions about the clients.",
                "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
                "Our implementation shows the viability of our proposed solution. 4.",
                "IMPLEMENTATION EXPERIENCE We have experimented with the authority assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
                "A screen shot from this game is shown in Figure 3.",
                "The purpose of the implementation is to test its feasibility in a real game.",
                "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
                "Objects are placed within the game world and players gain points for each object that is collected.",
                "The game clients connect to a game server which allows many players to coexist in the same game world.",
                "The basic functionality of this game is representative of current online first person shooter and role playing games.",
                "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
                "In this section we will discuss the three different versions of the game that we experimented with.",
                "Figure 3: The RPGQuest Game.",
                "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
                "Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
                "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
                "There is little lag between the time player hits a wall and the time the server corrects the players position.",
                "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
                "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
                "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
                "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
                "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
                "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
                "In order to get around this problem, we developed a second version of the game, which gives all authority to the client.",
                "The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server.",
                "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
                "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
                "The update does not have to go through any extra processing or validation.",
                "This game model of complete authority given to the client is beneficial with respect to movement.",
                "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
                "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
                "Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
                "The most important of these is consistency.",
                "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
                "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
                "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
                "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
                "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
                "The two players will now both think that they own the object.",
                "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
                "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority.",
                "It is better to place authority on the client for quickly changing actions such as movement.",
                "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
                "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
                "We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary.",
                "To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server.",
                "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
                "The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
                "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
                "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
                "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
                "This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version.",
                "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
                "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
                "However, the benefits of mixed authority will not truly be seen until an implementation of our communication proxy is integrated into the game.",
                "With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
                "The coding of the different versions of the game was very simple.",
                "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
                "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
                "The server updates each client with the position of all nearby clients.",
                "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
                "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
                "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
                "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
                "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
                "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
                "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
                "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
                "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server.",
                "In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
                "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17].",
                "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
                "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
                "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
                "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
                "Proxy servers are located at various different ISPs.",
                "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
                "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
                "Fidelity based agent architectures have been proposed in [20, 21].",
                "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
                "When an object moves from one portion to another, there is a handoff from one server to another.",
                "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
                "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic authority assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
                "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
                "Second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.",
                "Third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience.",
                "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture.",
                "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
                "We also plan to implement a version of the RPGQuest game with dynamic <br>assignment of authority</br> to allow players the authority to pickup objects when no other players are near.",
                "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
                "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
                "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
                "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
                "REFERENCES [1] Y. W. Bernier.",
                "Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization.",
                "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
                "On the impact of delay on real-time multiplayer games.",
                "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
                "ACM Press. [3] G. Armitage.",
                "Sensitivity of Quake3 Players to Network Latency.",
                "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
                "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
                "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
                "The effects of loss and latency on user performance in unreal tournament 2003.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
                "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
                "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
                "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
                "A fair message exchange framework for distributed multi-player games.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
                "ACM Press. [8] T. Barron.",
                "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
                "Prima Techs Game Development Series.",
                "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
                "The fun of using tcp for an mmorpg.",
                "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
                "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
                "Accuracy in dead-reckoning based distributed multi-player games.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
                "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
                "Fairness in dead-reckoning based distributed multi-player games.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
                "ACM Press. [12] Riker, T. et al.",
                "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
                "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
                "How to keep a dead man from shooting.",
                "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
                "Springer-Verlag. [15] Max Skibinsky.",
                "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
                "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
                "Bandwidth requirement and state consistency in three multiplayer game architectures.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
                "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
                "A Generic Proxy Systems for Networked Computer Games.",
                "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
                "A Proxy Server Network Architecture for Real-Time Computer Games.",
                "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
                "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
                "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
                "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
                "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
                "Hierarchical Structuring for Distributed Interactive Simulation.",
                "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
                "Trust and Reputation Model in Peer-to-Peer Networks.",
                "In Third International Conference on Peer-to-Peer Computing, 2003.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En segundo lugar, proponemos que la \"asignación de autoridad\" en términos de quién toma la decisión sobre las acciones del cliente, como las recolectas y los golpes de objetos, y las colisiones entre los jugadores, se distribuye entre los clientes y los servidores para distribuir la carga de computación de la carga de la carga de la información.servidor central.",
                "Se juega \"asignación de autoridad\" como MMOG, los jugadores y los objetos del juego que forman parte del juego, cambian continuamente su estado.",
                "También planeamos implementar una versión del juego RPGQuest con \"asignación de autoridad\" dinámica para permitir a los jugadores la autoridad para recoger objetos cuando ningún otro jugador está cerca."
            ],
            "translated_text": "",
            "candidates": [
                "asignación de autoridad",
                "asignación de autoridad",
                "asignación de autoridad",
                "asignación de autoridad",
                "asignación de autoridad",
                "asignación de autoridad"
            ],
            "error": []
        },
        "authority assignment": {
            "translated_key": "asignación de autoridad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>authority assignment</br> in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and <br>authority assignment</br> within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
                "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
                "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
                "Using this architecture, we propose an <br>authority assignment</br> mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
                "We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest.",
                "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
                "INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
                "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
                "In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
                "Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
                "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
                "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
                "Some types of games can function quite well even in the presence of large delays.",
                "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms.",
                "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
                "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
                "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
                "Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
                "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
                "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
                "Second, we propose that assignment of authority in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
                "In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined.",
                "Most currently implemented MMOGs have game servers that have almost absolute authority.",
                "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience.",
                "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
                "In this paper we define what it means to have authority within the context of events and objects in a virtual game space.",
                "We then show the benefits of delegating authority for different actions and game events between the clients and server.",
                "In our model, the game space consists of game clients (representing the players) and objects that they control.",
                "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
                "Depending on who has the authority, that entity will make decisions on the events that happen within a game space.",
                "We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
                "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
                "Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
                "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
                "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
                "The clients decision can always be accurately verified by the server.",
                "In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
                "As networked games become more complex, our architecture will become more applicable.",
                "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
                "We propose that a mixed <br>authority assignment</br> mechanism such as the one outlined above be implemented in high interaction MMOGs.",
                "Our paper has the following contributions.",
                "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
                "A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
                "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
                "These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience.",
                "Second, we propose a mixed <br>authority assignment</br> mechanism as described above that improves game playing experience.",
                "Third, we implement the proposed mixed <br>authority assignment</br> mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs.",
                "In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages.",
                "In Section 3, we provide a generic description of the mixed <br>authority assignment</br> mechanism and discuss how it improves game playing experience.",
                "In Section 4, we show the feasibility of implementing the proposed mixed <br>authority assignment</br> mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest.",
                "Section 5 discusses related work.",
                "In Section 6, we present our conclusions and discuss future work. 2.",
                "PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
                "State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture.",
                "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
                "In other words, the different game regions are hosted by different servers in a distributed fashion.",
                "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
                "The servers communicate with one another to hand off a player or an object from one region to another.",
                "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
                "We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
                "In the proposed architecture, players who are close by geographically join a particular proxy.",
                "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
                "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
                "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
                "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
                "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
                "Figure 1 shows the proposed architecture.",
                "Figure 1: Architecture of the gaming environment.",
                "Note that the communication proxies need not be cognizant of the game.",
                "They host a number of players and inform the servers which players are hosted by the proxy in question.",
                "Also note that the players hosted by a proxy may not be in the same game space.",
                "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
                "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
                "The proxies communicate with one another in a peer-to-peer to fashion.",
                "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority.",
                "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
                "This definitely improves the responsiveness of the game.",
                "However, it ignores consistency that is critical in MMORPGs.",
                "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
                "Figure 2 shows and example of the working principle of the proposed architecture.",
                "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
                "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
                "Figure 2: An example.",
                "There are four communication proxies placed in geographically distant locations.",
                "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
                "Underneath each player, the figure shows which game region the player is located currently.",
                "For example, players a, b, c are in regions 1, 2, 6, respectively.",
                "Therefore, proxy P1 must communicate with servers S1 and S3.",
                "The reader can verify the rest of the links between the proxies and the servers.",
                "Players can move within the region and between regions.",
                "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
                "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
                "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
                "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
                "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
                "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
                "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
                "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
                "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
                "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
                "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
                "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
                "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
                "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
                "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
                "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
                "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
                "We consider this the fast path for movement update.",
                "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
                "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
                "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
                "The servers could perform the same functionality but with more delay.",
                "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
                "The second possibility that should be considered is when players move between regions.",
                "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
                "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
                "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
                "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
                "In the example, assume that player a moves from region 1 to region 4.",
                "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
                "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
                "Server S1 will also initiate a handoff of player a with server S2.",
                "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
                "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
                "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
                "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
                "ASSIGNMENT OF AUTHORITY As a MMOG is played, the players and the game objects that are part of the game, continually change their state.",
                "For example, consider a player who owns a tank in a battlefield game.",
                "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
                "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
                "That is, some decision has to be made on the state of each player and object as the game progresses.",
                "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
                "In a client-server based game, the server controls all the players and the objects.",
                "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
                "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
                "The client subsequently updates the state of the player and renders the player at the new location.",
                "In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
                "Most of the current first person shooter (FPS) games and role playing games (RPG) fall under this category.",
                "In current FPS games, much like in RPG games, the client is not trusted.",
                "All moves and actions that it makes are validated.",
                "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
                "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
                "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
                "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
                "A difference that occurs in some RPGs is that they use very dumb client programs.",
                "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
                "State information is not maintained because the client is not trusted with it.",
                "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
                "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
                "In a peer-to-peer game, each peer controls the player and object that it owns.",
                "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
                "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
                "In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
                "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions.",
                "It was built primarily with LAN play in mind and cheating as an afterthought.",
                "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
                "The server does no sort of validation.",
                "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
                "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority.",
                "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
                "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
                "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
                "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
                "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
                "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
                "Neither tie break nor roll back is a desirable feature of online gaming.",
                "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
                "BzFlag).",
                "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
                "Both players will see on their screen that it is the winner.",
                "This makes the state of the game inconsistent.",
                "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
                "Neither of these two approaches is a pleasing experience for online gaming.",
                "Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
                "We propose to use a hybrid approach to assign the authority dynamically between the client and the server.",
                "That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent.",
                "By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
                "For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
                "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
                "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself.",
                "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
                "We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game.",
                "Fundamentally, the consistent state of the system is the one that is defined by the server.",
                "However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
                "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
                "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
                "In this situation, the client authority must revert to the server and the sever would then make decisions.",
                "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
                "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time.",
                "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
                "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
                "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client.",
                "That is, the shortest distance in our architecture is not through the game server but through the communication proxy.",
                "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
                "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
                "This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
                "Our game architecture does not assume that the client is not to be trusted.",
                "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
                "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
                "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
                "For example, assume that in a game a plane controlled by a client moves in the game space.",
                "It is not possible for the plane to go through a building unharmed.",
                "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
                "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move.",
                "This allows us to distribute authority to make decisions about the clients.",
                "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
                "Our implementation shows the viability of our proposed solution. 4.",
                "IMPLEMENTATION EXPERIENCE We have experimented with the <br>authority assignment</br> mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
                "A screen shot from this game is shown in Figure 3.",
                "The purpose of the implementation is to test its feasibility in a real game.",
                "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
                "Objects are placed within the game world and players gain points for each object that is collected.",
                "The game clients connect to a game server which allows many players to coexist in the same game world.",
                "The basic functionality of this game is representative of current online first person shooter and role playing games.",
                "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
                "In this section we will discuss the three different versions of the game that we experimented with.",
                "Figure 3: The RPGQuest Game.",
                "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
                "Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
                "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
                "There is little lag between the time player hits a wall and the time the server corrects the players position.",
                "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
                "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
                "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
                "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
                "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
                "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
                "In order to get around this problem, we developed a second version of the game, which gives all authority to the client.",
                "The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server.",
                "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
                "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
                "The update does not have to go through any extra processing or validation.",
                "This game model of complete authority given to the client is beneficial with respect to movement.",
                "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
                "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
                "Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
                "The most important of these is consistency.",
                "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
                "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
                "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
                "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
                "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
                "The two players will now both think that they own the object.",
                "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
                "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority.",
                "It is better to place authority on the client for quickly changing actions such as movement.",
                "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
                "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
                "We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary.",
                "To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server.",
                "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
                "The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
                "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
                "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
                "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
                "This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version.",
                "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
                "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
                "However, the benefits of mixed authority will not truly be seen until an implementation of our communication proxy is integrated into the game.",
                "With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
                "The coding of the different versions of the game was very simple.",
                "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
                "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
                "The server updates each client with the position of all nearby clients.",
                "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
                "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
                "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
                "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
                "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
                "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
                "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
                "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
                "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server.",
                "In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
                "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17].",
                "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
                "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
                "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
                "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
                "Proxy servers are located at various different ISPs.",
                "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
                "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
                "Fidelity based agent architectures have been proposed in [20, 21].",
                "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
                "When an object moves from one portion to another, there is a handoff from one server to another.",
                "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
                "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic <br>authority assignment</br> technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
                "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
                "Second, we proposed a mixed <br>authority assignment</br> mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an <br>authority assignment</br> leads to better game playing experience without sacrificing the consistency of the game.",
                "Third, to validate the viability of the mixed <br>authority assignment</br> mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience.",
                "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture.",
                "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
                "We also plan to implement a version of the RPGQuest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near.",
                "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
                "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
                "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
                "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
                "REFERENCES [1] Y. W. Bernier.",
                "Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization.",
                "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
                "On the impact of delay on real-time multiplayer games.",
                "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
                "ACM Press. [3] G. Armitage.",
                "Sensitivity of Quake3 Players to Network Latency.",
                "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
                "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
                "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
                "The effects of loss and latency on user performance in unreal tournament 2003.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
                "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
                "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
                "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
                "A fair message exchange framework for distributed multi-player games.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
                "ACM Press. [8] T. Barron.",
                "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
                "Prima Techs Game Development Series.",
                "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
                "The fun of using tcp for an mmorpg.",
                "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
                "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
                "Accuracy in dead-reckoning based distributed multi-player games.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
                "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
                "Fairness in dead-reckoning based distributed multi-player games.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
                "ACM Press. [12] Riker, T. et al.",
                "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
                "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
                "How to keep a dead man from shooting.",
                "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
                "Springer-Verlag. [15] Max Skibinsky.",
                "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
                "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
                "Bandwidth requirement and state consistency in three multiplayer game architectures.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
                "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
                "A Generic Proxy Systems for Networked Computer Games.",
                "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
                "A Proxy Server Network Architecture for Real-Time Computer Games.",
                "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
                "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
                "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
                "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
                "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
                "Hierarchical Structuring for Distributed Interactive Simulation.",
                "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
                "Trust and Reputation Model in Peer-to-Peer Networks.",
                "In Third International Conference on Peer-to-Peer Computing, 2003.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "\"Asignación de autoridad\" en los juegos distribuidos basados en el juego múltiples Sudhir Aggarwal Justin Christofoli Departamento de Ciencias de la Computación Florida Universidad Estatal de Florida, Tallahassee, FL {Sudhir, Christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan para la networking Bell Laboratories,,Holmdel, NJ {sarit, sampath}@bell-labs.com Resumen Presentamos una arquitectura de juego basada en el poder y una \"tarea de autoridad\" dentro de esta arquitectura que puede conducir a una mejor experiencia de juego en juegos en línea masivamente múltiples.",
                "Usando esta arquitectura, proponemos un mecanismo de \"asignación de autoridad\" que divide la autoridad para decidir el resultado de diferentes acciones/eventos que ocurren dentro del juego entre el cliente y los servidores por acción/evento.",
                "Proponemos que un mecanismo mixto de \"asignación de autoridad\", como el descrito anteriormente, se implementará en MMOG de alta interacción.",
                "En segundo lugar, proponemos un mecanismo mixto de \"asignación de autoridad\" como se describe anteriormente que mejora la experiencia del juego.",
                "En tercer lugar, implementamos el mecanismo mixto de \"asignación de autoridad\" mixta dentro de un MMOG llamado RPGQuest [8] para validar su viabilidad dentro de MMOGS.",
                "En la Sección 3, proporcionamos una descripción genérica del mecanismo mixto de \"tarea de autoridad\" y discutimos cómo mejora la experiencia de juego.",
                "En la Sección 4, mostramos la viabilidad de implementar el mecanismo mixto de \"asignación de autoridad\" mixta dentro de los MMOG existentes describiendo una implementación de prueba de concepto dentro de un MMOG existente llamado RPGQuest.",
                "Experiencia de implementación Hemos experimentado con el mecanismo de \"asignación de autoridad\" descrito en la última sección implementando los mecanismos en un juego llamado RPGQuest.",
                "Nuestro trabajo difiere de los trabajos anteriores discutidos anteriormente al proponer a) una arquitectura distribuida basada en el poder para disminuir los requisitos de ancho de banda en los clientes y los servidores sin requerir que los representantes mantengan información estatal sobre todo el espacio del juego, b) una \"tarea de autoridad dinámica\"\"Técnica para reducir la latencia (realizando verificaciones de consistencia localmente en el cliente siempre que sea posible) dividiendo la autoridad entre los clientes y los servidores por objeto, y c) proponiendo que la detección de trucos se pueda integrar en los proxies.Información sobre el juego específico en lugar de usarlos puramente como proxies de comunicación (aunque esta idea aún no se ha implementado y es parte de nuestro trabajo futuro).6.",
                "En segundo lugar, propusimos un mecanismo mixto de \"asignación de autoridad\" que divide la autoridad para tomar decisiones sobre acciones y eventos dentro del juego entre los clientes y el servidor y argumentamos cómo una \"tarea de autoridad\" lleva a una mejor experiencia en el juego sin sacrificar la consistencia deljuego.",
                "Tercero, para validar la viabilidad del mecanismo mixto de \"asignación de autoridad\", lo implementamos dentro de un MMOG llamado RPGQuest y describimos nuestra experiencia de implementación."
            ],
            "translated_text": "",
            "candidates": [
                "asignación de autoridad",
                "Asignación de autoridad",
                "tarea de autoridad",
                "asignación de autoridad",
                "asignación de autoridad",
                "asignación de autoridad",
                "asignación de autoridad",
                "asignación de autoridad",
                "asignación de autoridad",
                "asignación de autoridad",
                "asignación de autoridad",
                "asignación de autoridad",
                "tarea de autoridad",
                "asignación de autoridad",
                "asignación de autoridad",
                "asignación de autoridad",
                "asignación de autoridad",
                "Asignación de autoridad",
                "tarea de autoridad dinámica",
                "asignación de autoridad",
                "asignación de autoridad",
                "tarea de autoridad",
                "asignación de autoridad",
                "asignación de autoridad"
            ],
            "error": []
        },
        "first person shooter": {
            "translated_key": "tirador en primera persona",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Authority Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and authority assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
                "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
                "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
                "Using this architecture, we propose an authority assignment mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
                "We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest.",
                "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
                "INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
                "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
                "In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
                "Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
                "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
                "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
                "Some types of games can function quite well even in the presence of large delays.",
                "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms.",
                "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
                "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
                "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
                "Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
                "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
                "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
                "Second, we propose that assignment of authority in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
                "In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined.",
                "Most currently implemented MMOGs have game servers that have almost absolute authority.",
                "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience.",
                "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
                "In this paper we define what it means to have authority within the context of events and objects in a virtual game space.",
                "We then show the benefits of delegating authority for different actions and game events between the clients and server.",
                "In our model, the game space consists of game clients (representing the players) and objects that they control.",
                "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
                "Depending on who has the authority, that entity will make decisions on the events that happen within a game space.",
                "We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
                "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
                "Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
                "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
                "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
                "The clients decision can always be accurately verified by the server.",
                "In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
                "As networked games become more complex, our architecture will become more applicable.",
                "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
                "We propose that a mixed authority assignment mechanism such as the one outlined above be implemented in high interaction MMOGs.",
                "Our paper has the following contributions.",
                "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
                "A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
                "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
                "These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience.",
                "Second, we propose a mixed authority assignment mechanism as described above that improves game playing experience.",
                "Third, we implement the proposed mixed authority assignment mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs.",
                "In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages.",
                "In Section 3, we provide a generic description of the mixed authority assignment mechanism and discuss how it improves game playing experience.",
                "In Section 4, we show the feasibility of implementing the proposed mixed authority assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest.",
                "Section 5 discusses related work.",
                "In Section 6, we present our conclusions and discuss future work. 2.",
                "PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
                "State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture.",
                "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
                "In other words, the different game regions are hosted by different servers in a distributed fashion.",
                "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
                "The servers communicate with one another to hand off a player or an object from one region to another.",
                "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
                "We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
                "In the proposed architecture, players who are close by geographically join a particular proxy.",
                "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
                "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
                "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
                "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
                "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
                "Figure 1 shows the proposed architecture.",
                "Figure 1: Architecture of the gaming environment.",
                "Note that the communication proxies need not be cognizant of the game.",
                "They host a number of players and inform the servers which players are hosted by the proxy in question.",
                "Also note that the players hosted by a proxy may not be in the same game space.",
                "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
                "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
                "The proxies communicate with one another in a peer-to-peer to fashion.",
                "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority.",
                "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
                "This definitely improves the responsiveness of the game.",
                "However, it ignores consistency that is critical in MMORPGs.",
                "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
                "Figure 2 shows and example of the working principle of the proposed architecture.",
                "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
                "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
                "Figure 2: An example.",
                "There are four communication proxies placed in geographically distant locations.",
                "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
                "Underneath each player, the figure shows which game region the player is located currently.",
                "For example, players a, b, c are in regions 1, 2, 6, respectively.",
                "Therefore, proxy P1 must communicate with servers S1 and S3.",
                "The reader can verify the rest of the links between the proxies and the servers.",
                "Players can move within the region and between regions.",
                "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
                "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
                "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
                "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
                "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
                "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
                "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
                "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
                "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
                "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
                "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
                "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
                "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
                "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
                "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
                "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
                "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
                "We consider this the fast path for movement update.",
                "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
                "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
                "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
                "The servers could perform the same functionality but with more delay.",
                "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
                "The second possibility that should be considered is when players move between regions.",
                "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
                "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
                "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
                "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
                "In the example, assume that player a moves from region 1 to region 4.",
                "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
                "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
                "Server S1 will also initiate a handoff of player a with server S2.",
                "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
                "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
                "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
                "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
                "ASSIGNMENT OF AUTHORITY As a MMOG is played, the players and the game objects that are part of the game, continually change their state.",
                "For example, consider a player who owns a tank in a battlefield game.",
                "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
                "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
                "That is, some decision has to be made on the state of each player and object as the game progresses.",
                "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
                "In a client-server based game, the server controls all the players and the objects.",
                "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
                "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
                "The client subsequently updates the state of the player and renders the player at the new location.",
                "In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
                "Most of the current <br>first person shooter</br> (FPS) games and role playing games (RPG) fall under this category.",
                "In current FPS games, much like in RPG games, the client is not trusted.",
                "All moves and actions that it makes are validated.",
                "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
                "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
                "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
                "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
                "A difference that occurs in some RPGs is that they use very dumb client programs.",
                "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
                "State information is not maintained because the client is not trusted with it.",
                "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
                "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
                "In a peer-to-peer game, each peer controls the player and object that it owns.",
                "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
                "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
                "In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
                "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions.",
                "It was built primarily with LAN play in mind and cheating as an afterthought.",
                "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
                "The server does no sort of validation.",
                "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
                "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority.",
                "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
                "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
                "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
                "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
                "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
                "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
                "Neither tie break nor roll back is a desirable feature of online gaming.",
                "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
                "BzFlag).",
                "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
                "Both players will see on their screen that it is the winner.",
                "This makes the state of the game inconsistent.",
                "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
                "Neither of these two approaches is a pleasing experience for online gaming.",
                "Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
                "We propose to use a hybrid approach to assign the authority dynamically between the client and the server.",
                "That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent.",
                "By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
                "For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
                "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
                "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself.",
                "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
                "We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game.",
                "Fundamentally, the consistent state of the system is the one that is defined by the server.",
                "However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
                "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
                "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
                "In this situation, the client authority must revert to the server and the sever would then make decisions.",
                "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
                "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time.",
                "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
                "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
                "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client.",
                "That is, the shortest distance in our architecture is not through the game server but through the communication proxy.",
                "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
                "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
                "This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
                "Our game architecture does not assume that the client is not to be trusted.",
                "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
                "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
                "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
                "For example, assume that in a game a plane controlled by a client moves in the game space.",
                "It is not possible for the plane to go through a building unharmed.",
                "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
                "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move.",
                "This allows us to distribute authority to make decisions about the clients.",
                "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
                "Our implementation shows the viability of our proposed solution. 4.",
                "IMPLEMENTATION EXPERIENCE We have experimented with the authority assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
                "A screen shot from this game is shown in Figure 3.",
                "The purpose of the implementation is to test its feasibility in a real game.",
                "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
                "Objects are placed within the game world and players gain points for each object that is collected.",
                "The game clients connect to a game server which allows many players to coexist in the same game world.",
                "The basic functionality of this game is representative of current online <br>first person shooter</br> and role playing games.",
                "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
                "In this section we will discuss the three different versions of the game that we experimented with.",
                "Figure 3: The RPGQuest Game.",
                "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
                "Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
                "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
                "There is little lag between the time player hits a wall and the time the server corrects the players position.",
                "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
                "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
                "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
                "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
                "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
                "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
                "In order to get around this problem, we developed a second version of the game, which gives all authority to the client.",
                "The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server.",
                "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
                "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
                "The update does not have to go through any extra processing or validation.",
                "This game model of complete authority given to the client is beneficial with respect to movement.",
                "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
                "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
                "Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
                "The most important of these is consistency.",
                "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
                "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
                "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
                "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
                "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
                "The two players will now both think that they own the object.",
                "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
                "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority.",
                "It is better to place authority on the client for quickly changing actions such as movement.",
                "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
                "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
                "We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary.",
                "To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server.",
                "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
                "The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
                "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
                "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
                "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
                "This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version.",
                "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
                "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
                "However, the benefits of mixed authority will not truly be seen until an implementation of our communication proxy is integrated into the game.",
                "With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
                "The coding of the different versions of the game was very simple.",
                "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
                "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
                "The server updates each client with the position of all nearby clients.",
                "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
                "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
                "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
                "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
                "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
                "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
                "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
                "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
                "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server.",
                "In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
                "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17].",
                "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
                "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
                "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
                "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
                "Proxy servers are located at various different ISPs.",
                "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
                "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
                "Fidelity based agent architectures have been proposed in [20, 21].",
                "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
                "When an object moves from one portion to another, there is a handoff from one server to another.",
                "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
                "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic authority assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
                "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
                "Second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.",
                "Third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience.",
                "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture.",
                "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
                "We also plan to implement a version of the RPGQuest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near.",
                "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
                "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
                "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
                "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
                "REFERENCES [1] Y. W. Bernier.",
                "Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization.",
                "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
                "On the impact of delay on real-time multiplayer games.",
                "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
                "ACM Press. [3] G. Armitage.",
                "Sensitivity of Quake3 Players to Network Latency.",
                "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
                "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
                "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
                "The effects of loss and latency on user performance in unreal tournament 2003.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
                "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
                "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
                "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
                "A fair message exchange framework for distributed multi-player games.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
                "ACM Press. [8] T. Barron.",
                "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
                "Prima Techs Game Development Series.",
                "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
                "The fun of using tcp for an mmorpg.",
                "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
                "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
                "Accuracy in dead-reckoning based distributed multi-player games.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
                "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
                "Fairness in dead-reckoning based distributed multi-player games.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
                "ACM Press. [12] Riker, T. et al.",
                "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
                "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
                "How to keep a dead man from shooting.",
                "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
                "Springer-Verlag. [15] Max Skibinsky.",
                "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
                "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
                "Bandwidth requirement and state consistency in three multiplayer game architectures.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
                "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
                "A Generic Proxy Systems for Networked Computer Games.",
                "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
                "A Proxy Server Network Architecture for Real-Time Computer Games.",
                "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
                "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
                "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
                "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
                "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
                "Hierarchical Structuring for Distributed Interactive Simulation.",
                "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
                "Trust and Reputation Model in Peer-to-Peer Networks.",
                "In Third International Conference on Peer-to-Peer Computing, 2003.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La mayoría de los juegos actuales de \"First Person Shooter\" (FPS) y juegos de rol (RPG) caen en esta categoría.",
                "La funcionalidad básica de este juego es representativa del actual \"tirador\" en primera persona \"en línea y los juegos de rol."
            ],
            "translated_text": "",
            "candidates": [
                "tirador en primera persona",
                "First Person Shooter",
                "tirador en primera persona",
                "tirador"
            ],
            "error": []
        },
        "role playing game": {
            "translated_key": "juego de rol",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Authority Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and authority assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
                "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
                "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
                "Using this architecture, we propose an authority assignment mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
                "We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest.",
                "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
                "INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
                "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
                "In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
                "Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
                "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
                "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
                "Some types of games can function quite well even in the presence of large delays.",
                "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms.",
                "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
                "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
                "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
                "Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
                "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
                "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
                "Second, we propose that assignment of authority in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
                "In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined.",
                "Most currently implemented MMOGs have game servers that have almost absolute authority.",
                "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience.",
                "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
                "In this paper we define what it means to have authority within the context of events and objects in a virtual game space.",
                "We then show the benefits of delegating authority for different actions and game events between the clients and server.",
                "In our model, the game space consists of game clients (representing the players) and objects that they control.",
                "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
                "Depending on who has the authority, that entity will make decisions on the events that happen within a game space.",
                "We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
                "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
                "Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
                "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
                "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
                "The clients decision can always be accurately verified by the server.",
                "In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
                "As networked games become more complex, our architecture will become more applicable.",
                "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
                "We propose that a mixed authority assignment mechanism such as the one outlined above be implemented in high interaction MMOGs.",
                "Our paper has the following contributions.",
                "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
                "A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
                "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
                "These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience.",
                "Second, we propose a mixed authority assignment mechanism as described above that improves game playing experience.",
                "Third, we implement the proposed mixed authority assignment mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs.",
                "In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages.",
                "In Section 3, we provide a generic description of the mixed authority assignment mechanism and discuss how it improves game playing experience.",
                "In Section 4, we show the feasibility of implementing the proposed mixed authority assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest.",
                "Section 5 discusses related work.",
                "In Section 6, we present our conclusions and discuss future work. 2.",
                "PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
                "State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture.",
                "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
                "In other words, the different game regions are hosted by different servers in a distributed fashion.",
                "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
                "The servers communicate with one another to hand off a player or an object from one region to another.",
                "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
                "We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
                "In the proposed architecture, players who are close by geographically join a particular proxy.",
                "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
                "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
                "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
                "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
                "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
                "Figure 1 shows the proposed architecture.",
                "Figure 1: Architecture of the gaming environment.",
                "Note that the communication proxies need not be cognizant of the game.",
                "They host a number of players and inform the servers which players are hosted by the proxy in question.",
                "Also note that the players hosted by a proxy may not be in the same game space.",
                "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
                "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
                "The proxies communicate with one another in a peer-to-peer to fashion.",
                "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority.",
                "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
                "This definitely improves the responsiveness of the game.",
                "However, it ignores consistency that is critical in MMORPGs.",
                "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
                "Figure 2 shows and example of the working principle of the proposed architecture.",
                "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
                "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
                "Figure 2: An example.",
                "There are four communication proxies placed in geographically distant locations.",
                "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
                "Underneath each player, the figure shows which game region the player is located currently.",
                "For example, players a, b, c are in regions 1, 2, 6, respectively.",
                "Therefore, proxy P1 must communicate with servers S1 and S3.",
                "The reader can verify the rest of the links between the proxies and the servers.",
                "Players can move within the region and between regions.",
                "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
                "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
                "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
                "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
                "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
                "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
                "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
                "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
                "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
                "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
                "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
                "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
                "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
                "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
                "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
                "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
                "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
                "We consider this the fast path for movement update.",
                "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
                "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
                "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
                "The servers could perform the same functionality but with more delay.",
                "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
                "The second possibility that should be considered is when players move between regions.",
                "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
                "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
                "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
                "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
                "In the example, assume that player a moves from region 1 to region 4.",
                "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
                "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
                "Server S1 will also initiate a handoff of player a with server S2.",
                "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
                "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
                "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
                "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
                "ASSIGNMENT OF AUTHORITY As a MMOG is played, the players and the game objects that are part of the game, continually change their state.",
                "For example, consider a player who owns a tank in a battlefield game.",
                "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
                "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
                "That is, some decision has to be made on the state of each player and object as the game progresses.",
                "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
                "In a client-server based game, the server controls all the players and the objects.",
                "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
                "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
                "The client subsequently updates the state of the player and renders the player at the new location.",
                "In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
                "Most of the current first person shooter (FPS) games and <br>role playing game</br>s (RPG) fall under this category.",
                "In current FPS games, much like in RPG games, the client is not trusted.",
                "All moves and actions that it makes are validated.",
                "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
                "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
                "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
                "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
                "A difference that occurs in some RPGs is that they use very dumb client programs.",
                "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
                "State information is not maintained because the client is not trusted with it.",
                "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
                "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
                "In a peer-to-peer game, each peer controls the player and object that it owns.",
                "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
                "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
                "In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
                "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions.",
                "It was built primarily with LAN play in mind and cheating as an afterthought.",
                "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
                "The server does no sort of validation.",
                "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
                "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority.",
                "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
                "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
                "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
                "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
                "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
                "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
                "Neither tie break nor roll back is a desirable feature of online gaming.",
                "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
                "BzFlag).",
                "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
                "Both players will see on their screen that it is the winner.",
                "This makes the state of the game inconsistent.",
                "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
                "Neither of these two approaches is a pleasing experience for online gaming.",
                "Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
                "We propose to use a hybrid approach to assign the authority dynamically between the client and the server.",
                "That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent.",
                "By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
                "For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
                "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
                "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself.",
                "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
                "We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game.",
                "Fundamentally, the consistent state of the system is the one that is defined by the server.",
                "However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
                "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
                "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
                "In this situation, the client authority must revert to the server and the sever would then make decisions.",
                "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
                "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time.",
                "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
                "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
                "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client.",
                "That is, the shortest distance in our architecture is not through the game server but through the communication proxy.",
                "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
                "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
                "This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
                "Our game architecture does not assume that the client is not to be trusted.",
                "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
                "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
                "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
                "For example, assume that in a game a plane controlled by a client moves in the game space.",
                "It is not possible for the plane to go through a building unharmed.",
                "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
                "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move.",
                "This allows us to distribute authority to make decisions about the clients.",
                "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
                "Our implementation shows the viability of our proposed solution. 4.",
                "IMPLEMENTATION EXPERIENCE We have experimented with the authority assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
                "A screen shot from this game is shown in Figure 3.",
                "The purpose of the implementation is to test its feasibility in a real game.",
                "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
                "Objects are placed within the game world and players gain points for each object that is collected.",
                "The game clients connect to a game server which allows many players to coexist in the same game world.",
                "The basic functionality of this game is representative of current online first person shooter and <br>role playing game</br>s.",
                "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
                "In this section we will discuss the three different versions of the game that we experimented with.",
                "Figure 3: The RPGQuest Game.",
                "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
                "Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
                "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
                "There is little lag between the time player hits a wall and the time the server corrects the players position.",
                "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
                "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
                "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
                "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
                "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
                "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
                "In order to get around this problem, we developed a second version of the game, which gives all authority to the client.",
                "The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server.",
                "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
                "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
                "The update does not have to go through any extra processing or validation.",
                "This game model of complete authority given to the client is beneficial with respect to movement.",
                "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
                "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
                "Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
                "The most important of these is consistency.",
                "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
                "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
                "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
                "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
                "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
                "The two players will now both think that they own the object.",
                "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
                "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority.",
                "It is better to place authority on the client for quickly changing actions such as movement.",
                "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
                "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
                "We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary.",
                "To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server.",
                "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
                "The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
                "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
                "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
                "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
                "This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version.",
                "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
                "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
                "However, the benefits of mixed authority will not truly be seen until an implementation of our communication proxy is integrated into the game.",
                "With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
                "The coding of the different versions of the game was very simple.",
                "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
                "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
                "The server updates each client with the position of all nearby clients.",
                "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
                "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
                "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
                "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
                "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
                "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
                "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
                "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
                "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server.",
                "In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
                "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17].",
                "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
                "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
                "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
                "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
                "Proxy servers are located at various different ISPs.",
                "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
                "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
                "Fidelity based agent architectures have been proposed in [20, 21].",
                "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
                "When an object moves from one portion to another, there is a handoff from one server to another.",
                "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
                "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic authority assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
                "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
                "Second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.",
                "Third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience.",
                "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture.",
                "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
                "We also plan to implement a version of the RPGQuest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near.",
                "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
                "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
                "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
                "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
                "REFERENCES [1] Y. W. Bernier.",
                "Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization.",
                "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
                "On the impact of delay on real-time multiplayer games.",
                "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
                "ACM Press. [3] G. Armitage.",
                "Sensitivity of Quake3 Players to Network Latency.",
                "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
                "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
                "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
                "The effects of loss and latency on user performance in unreal tournament 2003.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
                "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
                "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
                "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
                "A fair message exchange framework for distributed multi-player games.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
                "ACM Press. [8] T. Barron.",
                "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
                "Prima Techs Game Development Series.",
                "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
                "The fun of using tcp for an mmorpg.",
                "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
                "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
                "Accuracy in dead-reckoning based distributed multi-player games.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
                "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
                "Fairness in dead-reckoning based distributed multi-player games.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
                "ACM Press. [12] Riker, T. et al.",
                "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
                "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
                "How to keep a dead man from shooting.",
                "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
                "Springer-Verlag. [15] Max Skibinsky.",
                "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
                "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
                "Bandwidth requirement and state consistency in three multiplayer game architectures.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
                "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
                "A Generic Proxy Systems for Networked Computer Games.",
                "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
                "A Proxy Server Network Architecture for Real-Time Computer Games.",
                "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
                "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
                "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
                "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
                "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
                "Hierarchical Structuring for Distributed Interactive Simulation.",
                "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
                "Trust and Reputation Model in Peer-to-Peer Networks.",
                "In Third International Conference on Peer-to-Peer Computing, 2003.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La mayoría de los juegos actuales de Shooter (FPS) de primera persona y el \"juego de juego de roles\" (RPG) caen en esta categoría.",
                "La funcionalidad básica de este juego es representativa del actual tirador en línea en línea y el \"juego de juego de roles\"."
            ],
            "translated_text": "",
            "candidates": [
                "juego de rol",
                "juego de juego de roles",
                "juego de rol",
                "juego de juego de roles"
            ],
            "error": []
        },
        "client authoritative approach": {
            "translated_key": "enfoque autoritario del cliente",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Authority Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and authority assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
                "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
                "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
                "Using this architecture, we propose an authority assignment mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
                "We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest.",
                "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
                "INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
                "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
                "In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
                "Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
                "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
                "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
                "Some types of games can function quite well even in the presence of large delays.",
                "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms.",
                "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
                "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
                "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
                "Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
                "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
                "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
                "Second, we propose that assignment of authority in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
                "In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined.",
                "Most currently implemented MMOGs have game servers that have almost absolute authority.",
                "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience.",
                "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
                "In this paper we define what it means to have authority within the context of events and objects in a virtual game space.",
                "We then show the benefits of delegating authority for different actions and game events between the clients and server.",
                "In our model, the game space consists of game clients (representing the players) and objects that they control.",
                "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
                "Depending on who has the authority, that entity will make decisions on the events that happen within a game space.",
                "We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
                "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
                "Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
                "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
                "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
                "The clients decision can always be accurately verified by the server.",
                "In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
                "As networked games become more complex, our architecture will become more applicable.",
                "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
                "We propose that a mixed authority assignment mechanism such as the one outlined above be implemented in high interaction MMOGs.",
                "Our paper has the following contributions.",
                "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
                "A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
                "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
                "These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience.",
                "Second, we propose a mixed authority assignment mechanism as described above that improves game playing experience.",
                "Third, we implement the proposed mixed authority assignment mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs.",
                "In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages.",
                "In Section 3, we provide a generic description of the mixed authority assignment mechanism and discuss how it improves game playing experience.",
                "In Section 4, we show the feasibility of implementing the proposed mixed authority assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest.",
                "Section 5 discusses related work.",
                "In Section 6, we present our conclusions and discuss future work. 2.",
                "PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
                "State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture.",
                "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
                "In other words, the different game regions are hosted by different servers in a distributed fashion.",
                "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
                "The servers communicate with one another to hand off a player or an object from one region to another.",
                "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
                "We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
                "In the proposed architecture, players who are close by geographically join a particular proxy.",
                "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
                "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
                "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
                "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
                "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
                "Figure 1 shows the proposed architecture.",
                "Figure 1: Architecture of the gaming environment.",
                "Note that the communication proxies need not be cognizant of the game.",
                "They host a number of players and inform the servers which players are hosted by the proxy in question.",
                "Also note that the players hosted by a proxy may not be in the same game space.",
                "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
                "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
                "The proxies communicate with one another in a peer-to-peer to fashion.",
                "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority.",
                "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
                "This definitely improves the responsiveness of the game.",
                "However, it ignores consistency that is critical in MMORPGs.",
                "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
                "Figure 2 shows and example of the working principle of the proposed architecture.",
                "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
                "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
                "Figure 2: An example.",
                "There are four communication proxies placed in geographically distant locations.",
                "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
                "Underneath each player, the figure shows which game region the player is located currently.",
                "For example, players a, b, c are in regions 1, 2, 6, respectively.",
                "Therefore, proxy P1 must communicate with servers S1 and S3.",
                "The reader can verify the rest of the links between the proxies and the servers.",
                "Players can move within the region and between regions.",
                "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
                "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
                "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
                "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
                "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
                "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
                "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
                "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
                "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
                "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
                "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
                "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
                "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
                "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
                "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
                "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
                "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
                "We consider this the fast path for movement update.",
                "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
                "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
                "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
                "The servers could perform the same functionality but with more delay.",
                "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
                "The second possibility that should be considered is when players move between regions.",
                "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
                "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
                "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
                "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
                "In the example, assume that player a moves from region 1 to region 4.",
                "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
                "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
                "Server S1 will also initiate a handoff of player a with server S2.",
                "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
                "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
                "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
                "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
                "ASSIGNMENT OF AUTHORITY As a MMOG is played, the players and the game objects that are part of the game, continually change their state.",
                "For example, consider a player who owns a tank in a battlefield game.",
                "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
                "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
                "That is, some decision has to be made on the state of each player and object as the game progresses.",
                "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
                "In a client-server based game, the server controls all the players and the objects.",
                "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
                "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
                "The client subsequently updates the state of the player and renders the player at the new location.",
                "In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
                "Most of the current first person shooter (FPS) games and role playing games (RPG) fall under this category.",
                "In current FPS games, much like in RPG games, the client is not trusted.",
                "All moves and actions that it makes are validated.",
                "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
                "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
                "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
                "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
                "A difference that occurs in some RPGs is that they use very dumb client programs.",
                "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
                "State information is not maintained because the client is not trusted with it.",
                "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
                "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
                "In a peer-to-peer game, each peer controls the player and object that it owns.",
                "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
                "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
                "In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
                "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions.",
                "It was built primarily with LAN play in mind and cheating as an afterthought.",
                "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
                "The server does no sort of validation.",
                "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
                "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority.",
                "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
                "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
                "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
                "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
                "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
                "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
                "Neither tie break nor roll back is a desirable feature of online gaming.",
                "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
                "BzFlag).",
                "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
                "Both players will see on their screen that it is the winner.",
                "This makes the state of the game inconsistent.",
                "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
                "Neither of these two approaches is a pleasing experience for online gaming.",
                "Another problem with <br>client authoritative approach</br> is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
                "We propose to use a hybrid approach to assign the authority dynamically between the client and the server.",
                "That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent.",
                "By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
                "For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
                "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
                "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself.",
                "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
                "We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game.",
                "Fundamentally, the consistent state of the system is the one that is defined by the server.",
                "However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
                "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
                "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
                "In this situation, the client authority must revert to the server and the sever would then make decisions.",
                "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
                "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time.",
                "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
                "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
                "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client.",
                "That is, the shortest distance in our architecture is not through the game server but through the communication proxy.",
                "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
                "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
                "This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
                "Our game architecture does not assume that the client is not to be trusted.",
                "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
                "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
                "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
                "For example, assume that in a game a plane controlled by a client moves in the game space.",
                "It is not possible for the plane to go through a building unharmed.",
                "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
                "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move.",
                "This allows us to distribute authority to make decisions about the clients.",
                "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
                "Our implementation shows the viability of our proposed solution. 4.",
                "IMPLEMENTATION EXPERIENCE We have experimented with the authority assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
                "A screen shot from this game is shown in Figure 3.",
                "The purpose of the implementation is to test its feasibility in a real game.",
                "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
                "Objects are placed within the game world and players gain points for each object that is collected.",
                "The game clients connect to a game server which allows many players to coexist in the same game world.",
                "The basic functionality of this game is representative of current online first person shooter and role playing games.",
                "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
                "In this section we will discuss the three different versions of the game that we experimented with.",
                "Figure 3: The RPGQuest Game.",
                "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
                "Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
                "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
                "There is little lag between the time player hits a wall and the time the server corrects the players position.",
                "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
                "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
                "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
                "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
                "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
                "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
                "In order to get around this problem, we developed a second version of the game, which gives all authority to the client.",
                "The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server.",
                "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
                "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
                "The update does not have to go through any extra processing or validation.",
                "This game model of complete authority given to the client is beneficial with respect to movement.",
                "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
                "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
                "Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
                "The most important of these is consistency.",
                "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
                "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
                "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
                "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
                "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
                "The two players will now both think that they own the object.",
                "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
                "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority.",
                "It is better to place authority on the client for quickly changing actions such as movement.",
                "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
                "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
                "We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary.",
                "To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server.",
                "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
                "The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
                "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
                "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
                "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
                "This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version.",
                "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
                "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
                "However, the benefits of mixed authority will not truly be seen until an implementation of our communication proxy is integrated into the game.",
                "With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
                "The coding of the different versions of the game was very simple.",
                "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
                "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
                "The server updates each client with the position of all nearby clients.",
                "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
                "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
                "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
                "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
                "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
                "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
                "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
                "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
                "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server.",
                "In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
                "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17].",
                "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
                "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
                "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
                "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
                "Proxy servers are located at various different ISPs.",
                "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
                "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
                "Fidelity based agent architectures have been proposed in [20, 21].",
                "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
                "When an object moves from one portion to another, there is a handoff from one server to another.",
                "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
                "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic authority assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
                "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
                "Second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.",
                "Third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience.",
                "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture.",
                "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
                "We also plan to implement a version of the RPGQuest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near.",
                "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
                "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
                "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
                "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
                "REFERENCES [1] Y. W. Bernier.",
                "Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization.",
                "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
                "On the impact of delay on real-time multiplayer games.",
                "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
                "ACM Press. [3] G. Armitage.",
                "Sensitivity of Quake3 Players to Network Latency.",
                "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
                "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
                "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
                "The effects of loss and latency on user performance in unreal tournament 2003.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
                "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
                "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
                "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
                "A fair message exchange framework for distributed multi-player games.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
                "ACM Press. [8] T. Barron.",
                "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
                "Prima Techs Game Development Series.",
                "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
                "The fun of using tcp for an mmorpg.",
                "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
                "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
                "Accuracy in dead-reckoning based distributed multi-player games.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
                "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
                "Fairness in dead-reckoning based distributed multi-player games.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
                "ACM Press. [12] Riker, T. et al.",
                "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
                "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
                "How to keep a dead man from shooting.",
                "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
                "Springer-Verlag. [15] Max Skibinsky.",
                "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
                "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
                "Bandwidth requirement and state consistency in three multiplayer game architectures.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
                "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
                "A Generic Proxy Systems for Networked Computer Games.",
                "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
                "A Proxy Server Network Architecture for Real-Time Computer Games.",
                "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
                "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
                "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
                "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
                "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
                "Hierarchical Structuring for Distributed Interactive Simulation.",
                "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
                "Trust and Reputation Model in Peer-to-Peer Networks.",
                "In Third International Conference on Peer-to-Peer Computing, 2003.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Otro problema con el \"enfoque autoritario del cliente\" es el de hacer trampa por parte de los clientes, ya que no hay verificación cruzada de la validación de los cambios estatales autorizados por el cliente propietario."
            ],
            "translated_text": "",
            "candidates": [
                "Enfoque autorizado del cliente",
                "enfoque autoritario del cliente"
            ],
            "error": []
        },
        "cheat-proof mechanism": {
            "translated_key": "mecanismo a prueba de trucos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Authority Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and authority assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
                "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
                "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
                "Using this architecture, we propose an authority assignment mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
                "We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest.",
                "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
                "INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
                "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
                "In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
                "Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
                "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
                "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
                "Some types of games can function quite well even in the presence of large delays.",
                "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms.",
                "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
                "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
                "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
                "Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
                "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
                "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
                "Second, we propose that assignment of authority in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
                "In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined.",
                "Most currently implemented MMOGs have game servers that have almost absolute authority.",
                "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience.",
                "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
                "In this paper we define what it means to have authority within the context of events and objects in a virtual game space.",
                "We then show the benefits of delegating authority for different actions and game events between the clients and server.",
                "In our model, the game space consists of game clients (representing the players) and objects that they control.",
                "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
                "Depending on who has the authority, that entity will make decisions on the events that happen within a game space.",
                "We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
                "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
                "Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
                "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
                "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
                "The clients decision can always be accurately verified by the server.",
                "In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
                "As networked games become more complex, our architecture will become more applicable.",
                "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
                "We propose that a mixed authority assignment mechanism such as the one outlined above be implemented in high interaction MMOGs.",
                "Our paper has the following contributions.",
                "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
                "A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
                "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
                "These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience.",
                "Second, we propose a mixed authority assignment mechanism as described above that improves game playing experience.",
                "Third, we implement the proposed mixed authority assignment mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs.",
                "In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages.",
                "In Section 3, we provide a generic description of the mixed authority assignment mechanism and discuss how it improves game playing experience.",
                "In Section 4, we show the feasibility of implementing the proposed mixed authority assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest.",
                "Section 5 discusses related work.",
                "In Section 6, we present our conclusions and discuss future work. 2.",
                "PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
                "State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture.",
                "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
                "In other words, the different game regions are hosted by different servers in a distributed fashion.",
                "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
                "The servers communicate with one another to hand off a player or an object from one region to another.",
                "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
                "We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
                "In the proposed architecture, players who are close by geographically join a particular proxy.",
                "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
                "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
                "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
                "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
                "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
                "Figure 1 shows the proposed architecture.",
                "Figure 1: Architecture of the gaming environment.",
                "Note that the communication proxies need not be cognizant of the game.",
                "They host a number of players and inform the servers which players are hosted by the proxy in question.",
                "Also note that the players hosted by a proxy may not be in the same game space.",
                "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
                "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
                "The proxies communicate with one another in a peer-to-peer to fashion.",
                "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority.",
                "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
                "This definitely improves the responsiveness of the game.",
                "However, it ignores consistency that is critical in MMORPGs.",
                "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
                "Figure 2 shows and example of the working principle of the proposed architecture.",
                "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
                "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
                "Figure 2: An example.",
                "There are four communication proxies placed in geographically distant locations.",
                "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
                "Underneath each player, the figure shows which game region the player is located currently.",
                "For example, players a, b, c are in regions 1, 2, 6, respectively.",
                "Therefore, proxy P1 must communicate with servers S1 and S3.",
                "The reader can verify the rest of the links between the proxies and the servers.",
                "Players can move within the region and between regions.",
                "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
                "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
                "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
                "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
                "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
                "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
                "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
                "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
                "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
                "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
                "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
                "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
                "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
                "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
                "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
                "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
                "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
                "We consider this the fast path for movement update.",
                "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
                "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
                "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
                "The servers could perform the same functionality but with more delay.",
                "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
                "The second possibility that should be considered is when players move between regions.",
                "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
                "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
                "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
                "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
                "In the example, assume that player a moves from region 1 to region 4.",
                "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
                "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
                "Server S1 will also initiate a handoff of player a with server S2.",
                "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
                "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
                "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
                "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
                "ASSIGNMENT OF AUTHORITY As a MMOG is played, the players and the game objects that are part of the game, continually change their state.",
                "For example, consider a player who owns a tank in a battlefield game.",
                "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
                "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
                "That is, some decision has to be made on the state of each player and object as the game progresses.",
                "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
                "In a client-server based game, the server controls all the players and the objects.",
                "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
                "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
                "The client subsequently updates the state of the player and renders the player at the new location.",
                "In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
                "Most of the current first person shooter (FPS) games and role playing games (RPG) fall under this category.",
                "In current FPS games, much like in RPG games, the client is not trusted.",
                "All moves and actions that it makes are validated.",
                "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
                "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
                "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
                "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
                "A difference that occurs in some RPGs is that they use very dumb client programs.",
                "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
                "State information is not maintained because the client is not trusted with it.",
                "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
                "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
                "In a peer-to-peer game, each peer controls the player and object that it owns.",
                "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
                "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
                "In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
                "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions.",
                "It was built primarily with LAN play in mind and cheating as an afterthought.",
                "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
                "The server does no sort of validation.",
                "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
                "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority.",
                "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
                "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
                "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
                "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
                "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
                "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
                "Neither tie break nor roll back is a desirable feature of online gaming.",
                "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
                "BzFlag).",
                "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
                "Both players will see on their screen that it is the winner.",
                "This makes the state of the game inconsistent.",
                "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
                "Neither of these two approaches is a pleasing experience for online gaming.",
                "Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
                "We propose to use a hybrid approach to assign the authority dynamically between the client and the server.",
                "That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent.",
                "By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
                "For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
                "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
                "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself.",
                "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
                "We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game.",
                "Fundamentally, the consistent state of the system is the one that is defined by the server.",
                "However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
                "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
                "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
                "In this situation, the client authority must revert to the server and the sever would then make decisions.",
                "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
                "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time.",
                "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
                "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
                "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client.",
                "That is, the shortest distance in our architecture is not through the game server but through the communication proxy.",
                "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
                "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
                "This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
                "Our game architecture does not assume that the client is not to be trusted.",
                "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
                "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
                "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
                "For example, assume that in a game a plane controlled by a client moves in the game space.",
                "It is not possible for the plane to go through a building unharmed.",
                "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
                "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move.",
                "This allows us to distribute authority to make decisions about the clients.",
                "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
                "Our implementation shows the viability of our proposed solution. 4.",
                "IMPLEMENTATION EXPERIENCE We have experimented with the authority assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
                "A screen shot from this game is shown in Figure 3.",
                "The purpose of the implementation is to test its feasibility in a real game.",
                "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
                "Objects are placed within the game world and players gain points for each object that is collected.",
                "The game clients connect to a game server which allows many players to coexist in the same game world.",
                "The basic functionality of this game is representative of current online first person shooter and role playing games.",
                "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
                "In this section we will discuss the three different versions of the game that we experimented with.",
                "Figure 3: The RPGQuest Game.",
                "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
                "Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
                "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
                "There is little lag between the time player hits a wall and the time the server corrects the players position.",
                "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
                "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
                "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
                "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
                "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
                "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
                "In order to get around this problem, we developed a second version of the game, which gives all authority to the client.",
                "The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server.",
                "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
                "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
                "The update does not have to go through any extra processing or validation.",
                "This game model of complete authority given to the client is beneficial with respect to movement.",
                "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
                "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
                "Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
                "The most important of these is consistency.",
                "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
                "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
                "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
                "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
                "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
                "The two players will now both think that they own the object.",
                "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
                "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority.",
                "It is better to place authority on the client for quickly changing actions such as movement.",
                "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
                "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
                "We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary.",
                "To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server.",
                "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
                "The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
                "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
                "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
                "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
                "This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version.",
                "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
                "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
                "However, the benefits of mixed authority will not truly be seen until an implementation of our communication proxy is integrated into the game.",
                "With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
                "The coding of the different versions of the game was very simple.",
                "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
                "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
                "The server updates each client with the position of all nearby clients.",
                "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
                "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
                "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
                "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
                "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
                "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
                "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
                "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
                "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server.",
                "In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
                "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and <br>cheat-proof mechanism</br>s in distributed multi-player games [17].",
                "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
                "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
                "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
                "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
                "Proxy servers are located at various different ISPs.",
                "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
                "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
                "Fidelity based agent architectures have been proposed in [20, 21].",
                "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
                "When an object moves from one portion to another, there is a handoff from one server to another.",
                "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
                "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic authority assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
                "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
                "Second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.",
                "Third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience.",
                "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture.",
                "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
                "We also plan to implement a version of the RPGQuest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near.",
                "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
                "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
                "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
                "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
                "REFERENCES [1] Y. W. Bernier.",
                "Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization.",
                "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
                "On the impact of delay on real-time multiplayer games.",
                "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
                "ACM Press. [3] G. Armitage.",
                "Sensitivity of Quake3 Players to Network Latency.",
                "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
                "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
                "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
                "The effects of loss and latency on user performance in unreal tournament 2003.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
                "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
                "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
                "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
                "A fair message exchange framework for distributed multi-player games.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
                "ACM Press. [8] T. Barron.",
                "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
                "Prima Techs Game Development Series.",
                "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
                "The fun of using tcp for an mmorpg.",
                "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
                "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
                "Accuracy in dead-reckoning based distributed multi-player games.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
                "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
                "Fairness in dead-reckoning based distributed multi-player games.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
                "ACM Press. [12] Riker, T. et al.",
                "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
                "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
                "How to keep a dead man from shooting.",
                "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
                "Springer-Verlag. [15] Max Skibinsky.",
                "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
                "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
                "Bandwidth requirement and state consistency in three multiplayer game architectures.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
                "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
                "A Generic Proxy Systems for Networked Computer Games.",
                "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
                "A Proxy Server Network Architecture for Real-Time Computer Games.",
                "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
                "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
                "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
                "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
                "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
                "Hierarchical Structuring for Distributed Interactive Simulation.",
                "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
                "Trust and Reputation Model in Peer-to-Peer Networks.",
                "In Third International Conference on Peer-to-Peer Computing, 2003.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "También hay trabajos previos que han sugerido que se utilizarán arquitecturas basadas en el poder para aliviar el problema de latencia y, además, utilizar proxies para proporcionar control de congestión y \"mecanismo a prueba de trampas\" en los juegos distribuidos de múltiples jugadores [17]."
            ],
            "translated_text": "",
            "candidates": [
                "mecanismo a prueba de trucos",
                "mecanismo a prueba de trampas"
            ],
            "error": []
        },
        "mmog": {
            "translated_key": "mmog",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Authority Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and authority assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
                "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
                "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
                "Using this architecture, we propose an authority assignment mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
                "We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest.",
                "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
                "INTRODUCTION In Massively Multi-player On-line Games (<br>mmog</br>), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
                "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
                "In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
                "Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
                "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
                "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
                "Some types of games can function quite well even in the presence of large delays.",
                "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms.",
                "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
                "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
                "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
                "Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
                "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
                "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
                "Second, we propose that assignment of authority in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
                "In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined.",
                "Most currently implemented MMOGs have game servers that have almost absolute authority.",
                "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many <br>mmog</br> players would experience.",
                "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
                "In this paper we define what it means to have authority within the context of events and objects in a virtual game space.",
                "We then show the benefits of delegating authority for different actions and game events between the clients and server.",
                "In our model, the game space consists of game clients (representing the players) and objects that they control.",
                "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
                "Depending on who has the authority, that entity will make decisions on the events that happen within a game space.",
                "We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
                "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
                "Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
                "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
                "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
                "The clients decision can always be accurately verified by the server.",
                "In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
                "As networked games become more complex, our architecture will become more applicable.",
                "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
                "We propose that a mixed authority assignment mechanism such as the one outlined above be implemented in high interaction MMOGs.",
                "Our paper has the following contributions.",
                "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
                "A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
                "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
                "These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience.",
                "Second, we propose a mixed authority assignment mechanism as described above that improves game playing experience.",
                "Third, we implement the proposed mixed authority assignment mechanism within a <br>mmog</br> called RPGQuest [8] to validate its viability within MMOGs.",
                "In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages.",
                "In Section 3, we provide a generic description of the mixed authority assignment mechanism and discuss how it improves game playing experience.",
                "In Section 4, we show the feasibility of implementing the proposed mixed authority assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing <br>mmog</br> called RPGQuest.",
                "Section 5 discusses related work.",
                "In Section 6, we present our conclusions and discuss future work. 2.",
                "PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
                "State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture.",
                "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a <br>mmog</br> is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
                "In other words, the different game regions are hosted by different servers in a distributed fashion.",
                "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
                "The servers communicate with one another to hand off a player or an object from one region to another.",
                "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
                "We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
                "In the proposed architecture, players who are close by geographically join a particular proxy.",
                "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
                "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
                "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
                "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
                "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
                "Figure 1 shows the proposed architecture.",
                "Figure 1: Architecture of the gaming environment.",
                "Note that the communication proxies need not be cognizant of the game.",
                "They host a number of players and inform the servers which players are hosted by the proxy in question.",
                "Also note that the players hosted by a proxy may not be in the same game space.",
                "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
                "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
                "The proxies communicate with one another in a peer-to-peer to fashion.",
                "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority.",
                "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
                "This definitely improves the responsiveness of the game.",
                "However, it ignores consistency that is critical in MMORPGs.",
                "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
                "Figure 2 shows and example of the working principle of the proposed architecture.",
                "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
                "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
                "Figure 2: An example.",
                "There are four communication proxies placed in geographically distant locations.",
                "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
                "Underneath each player, the figure shows which game region the player is located currently.",
                "For example, players a, b, c are in regions 1, 2, 6, respectively.",
                "Therefore, proxy P1 must communicate with servers S1 and S3.",
                "The reader can verify the rest of the links between the proxies and the servers.",
                "Players can move within the region and between regions.",
                "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
                "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
                "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
                "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
                "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
                "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
                "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
                "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
                "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
                "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
                "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
                "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
                "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
                "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
                "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
                "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
                "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
                "We consider this the fast path for movement update.",
                "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
                "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
                "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
                "The servers could perform the same functionality but with more delay.",
                "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
                "The second possibility that should be considered is when players move between regions.",
                "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
                "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
                "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
                "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
                "In the example, assume that player a moves from region 1 to region 4.",
                "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
                "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
                "Server S1 will also initiate a handoff of player a with server S2.",
                "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
                "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
                "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
                "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
                "ASSIGNMENT OF AUTHORITY As a <br>mmog</br> is played, the players and the game objects that are part of the game, continually change their state.",
                "For example, consider a player who owns a tank in a battlefield game.",
                "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
                "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
                "That is, some decision has to be made on the state of each player and object as the game progresses.",
                "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
                "In a client-server based game, the server controls all the players and the objects.",
                "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
                "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
                "The client subsequently updates the state of the player and renders the player at the new location.",
                "In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
                "Most of the current first person shooter (FPS) games and role playing games (RPG) fall under this category.",
                "In current FPS games, much like in RPG games, the client is not trusted.",
                "All moves and actions that it makes are validated.",
                "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
                "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
                "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
                "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
                "A difference that occurs in some RPGs is that they use very dumb client programs.",
                "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
                "State information is not maintained because the client is not trusted with it.",
                "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
                "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
                "In a peer-to-peer game, each peer controls the player and object that it owns.",
                "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
                "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
                "In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
                "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions.",
                "It was built primarily with LAN play in mind and cheating as an afterthought.",
                "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
                "The server does no sort of validation.",
                "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
                "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority.",
                "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
                "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
                "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
                "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
                "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
                "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
                "Neither tie break nor roll back is a desirable feature of online gaming.",
                "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
                "BzFlag).",
                "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
                "Both players will see on their screen that it is the winner.",
                "This makes the state of the game inconsistent.",
                "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
                "Neither of these two approaches is a pleasing experience for online gaming.",
                "Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
                "We propose to use a hybrid approach to assign the authority dynamically between the client and the server.",
                "That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent.",
                "By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
                "For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
                "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
                "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself.",
                "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
                "We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game.",
                "Fundamentally, the consistent state of the system is the one that is defined by the server.",
                "However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
                "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
                "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
                "In this situation, the client authority must revert to the server and the sever would then make decisions.",
                "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
                "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time.",
                "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
                "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
                "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client.",
                "That is, the shortest distance in our architecture is not through the game server but through the communication proxy.",
                "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
                "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
                "This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
                "Our game architecture does not assume that the client is not to be trusted.",
                "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
                "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
                "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
                "For example, assume that in a game a plane controlled by a client moves in the game space.",
                "It is not possible for the plane to go through a building unharmed.",
                "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
                "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move.",
                "This allows us to distribute authority to make decisions about the clients.",
                "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
                "Our implementation shows the viability of our proposed solution. 4.",
                "IMPLEMENTATION EXPERIENCE We have experimented with the authority assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
                "A screen shot from this game is shown in Figure 3.",
                "The purpose of the implementation is to test its feasibility in a real game.",
                "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
                "Objects are placed within the game world and players gain points for each object that is collected.",
                "The game clients connect to a game server which allows many players to coexist in the same game world.",
                "The basic functionality of this game is representative of current online first person shooter and role playing games.",
                "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
                "In this section we will discuss the three different versions of the game that we experimented with.",
                "Figure 3: The RPGQuest Game.",
                "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
                "Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
                "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
                "There is little lag between the time player hits a wall and the time the server corrects the players position.",
                "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
                "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
                "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
                "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
                "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
                "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
                "In order to get around this problem, we developed a second version of the game, which gives all authority to the client.",
                "The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server.",
                "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
                "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
                "The update does not have to go through any extra processing or validation.",
                "This game model of complete authority given to the client is beneficial with respect to movement.",
                "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
                "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
                "Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
                "The most important of these is consistency.",
                "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
                "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
                "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
                "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
                "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
                "The two players will now both think that they own the object.",
                "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
                "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority.",
                "It is better to place authority on the client for quickly changing actions such as movement.",
                "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
                "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
                "We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary.",
                "To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server.",
                "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
                "The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
                "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
                "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
                "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
                "This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version.",
                "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
                "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
                "However, the benefits of mixed authority will not truly be seen until an implementation of our communication proxy is integrated into the game.",
                "With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
                "The coding of the different versions of the game was very simple.",
                "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
                "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
                "The server updates each client with the position of all nearby clients.",
                "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
                "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
                "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
                "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
                "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
                "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
                "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
                "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
                "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server.",
                "In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
                "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17].",
                "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
                "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
                "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
                "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
                "Proxy servers are located at various different ISPs.",
                "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
                "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
                "Fidelity based agent architectures have been proposed in [20, 21].",
                "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
                "When an object moves from one portion to another, there is a handoff from one server to another.",
                "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
                "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic authority assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
                "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
                "Second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.",
                "Third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a <br>mmog</br> called RPGQuest and described our implementation experience.",
                "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture.",
                "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
                "We also plan to implement a version of the RPGQuest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near.",
                "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
                "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
                "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
                "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
                "REFERENCES [1] Y. W. Bernier.",
                "Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization.",
                "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
                "On the impact of delay on real-time multiplayer games.",
                "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
                "ACM Press. [3] G. Armitage.",
                "Sensitivity of Quake3 Players to Network Latency.",
                "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
                "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
                "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
                "The effects of loss and latency on user performance in unreal tournament 2003.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
                "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
                "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
                "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
                "A fair message exchange framework for distributed multi-player games.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
                "ACM Press. [8] T. Barron.",
                "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
                "Prima Techs Game Development Series.",
                "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
                "The fun of using tcp for an mmorpg.",
                "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
                "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
                "Accuracy in dead-reckoning based distributed multi-player games.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
                "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
                "Fairness in dead-reckoning based distributed multi-player games.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
                "ACM Press. [12] Riker, T. et al.",
                "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
                "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
                "How to keep a dead man from shooting.",
                "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
                "Springer-Verlag. [15] Max Skibinsky.",
                "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
                "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
                "Bandwidth requirement and state consistency in three multiplayer game architectures.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
                "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
                "A Generic Proxy Systems for Networked Computer Games.",
                "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
                "A Proxy Server Network Architecture for Real-Time Computer Games.",
                "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
                "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
                "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
                "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
                "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
                "Hierarchical Structuring for Distributed Interactive Simulation.",
                "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
                "Trust and Reputation Model in Peer-to-Peer Networks.",
                "In Third International Conference on Peer-to-Peer Computing, 2003.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Introducción en juegos en línea masivamente múltiples jugadores (\"MMOG\"), clientes de juegos que están posicionados a través de Internet se conectan a un servidor de juegos para interactuar con otros clientes para ser parte del juego.",
                "Argumentamos que no existe una visión consistente del espacio de juegos virtual que se pueda mantener en cualquier componente dentro de una red que tenga una latencia significativa, como la que experimentarían muchos jugadores de \"MMOG\".",
                "Tercero, implementamos el mecanismo de asignación de autoridad mixta propuesta dentro de un \"MMOG\" llamado RPGQuest [8] para validar su viabilidad dentro de MMOGS.",
                "En la Sección 4, mostramos la viabilidad de implementar el mecanismo de asignación de autoridad mixta propuesta dentro de los MMOG existentes describiendo una implementación de prueba de concepto dentro de un \"MMOG\" existente llamado RPGQuest.",
                "Pero para aliviar la gran demanda del procesamiento para manejar la gran población de jugadores y los objetos en el juego en tiempo real, normalmente se implementa un \"MMOG\" utilizando una arquitectura de servidor distribuido donde el espacio del juego se subdivide en regiones, así queque cada región tiene un número relativamente menor de jugadores y objetos que pueden ser manejados por un solo servidor.",
                "Se juega la asignación de autoridad como \"MMOG\", los jugadores y los objetos del juego que forman parte del juego, cambian continuamente su estado.",
                "Tercero, para validar la viabilidad del mecanismo de asignación de autoridad mixta, lo implementamos dentro de un \"MMOG\" llamado RPGQuest y describimos nuestra experiencia de implementación."
            ],
            "translated_text": "",
            "candidates": [
                "mmog",
                "MMOG",
                "mmog",
                "MMOG",
                "mmog",
                "MMOG",
                "mmog",
                "MMOG",
                "mmog",
                "MMOG",
                "mmog",
                "MMOG",
                "mmog",
                "MMOG"
            ],
            "error": []
        },
        "distribute multi-player game": {
            "translated_key": "Distribuir el juego de múltiples jugadores",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Authority Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and authority assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
                "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
                "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
                "Using this architecture, we propose an authority assignment mechanism that divides the authority for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
                "We show that such division of authority leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest.",
                "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
                "INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
                "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
                "In addition, current MMOGs delegate all authority to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
                "Such centralized authority has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
                "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
                "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
                "Some types of games can function quite well even in the presence of large delays.",
                "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms.",
                "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
                "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
                "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
                "Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
                "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
                "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
                "Second, we propose that assignment of authority in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
                "In order to move towards more complex real-time networked games, we believe that definitions of authority must be refined.",
                "Most currently implemented MMOGs have game servers that have almost absolute authority.",
                "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience.",
                "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
                "In this paper we define what it means to have authority within the context of events and objects in a virtual game space.",
                "We then show the benefits of delegating authority for different actions and game events between the clients and server.",
                "In our model, the game space consists of game clients (representing the players) and objects that they control.",
                "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute authority, b) events for which the game server has absolute authority, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
                "Depending on who has the authority, that entity will make decisions on the events that happen within a game space.",
                "We propose that authority for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
                "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
                "Authority for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
                "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
                "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
                "The clients decision can always be accurately verified by the server.",
                "In summary, we argue that while current authority models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
                "As networked games become more complex, our architecture will become more applicable.",
                "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
                "We propose that a mixed authority assignment mechanism such as the one outlined above be implemented in high interaction MMOGs.",
                "Our paper has the following contributions.",
                "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
                "A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
                "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
                "These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience.",
                "Second, we propose a mixed authority assignment mechanism as described above that improves game playing experience.",
                "Third, we implement the proposed mixed authority assignment mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs.",
                "In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages.",
                "In Section 3, we provide a generic description of the mixed authority assignment mechanism and discuss how it improves game playing experience.",
                "In Section 4, we show the feasibility of implementing the proposed mixed authority assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest.",
                "Section 5 discusses related work.",
                "In Section 6, we present our conclusions and discuss future work. 2.",
                "PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
                "State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture.",
                "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
                "In other words, the different game regions are hosted by different servers in a distributed fashion.",
                "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
                "The servers communicate with one another to hand off a player or an object from one region to another.",
                "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
                "We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
                "In the proposed architecture, players who are close by geographically join a particular proxy.",
                "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
                "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
                "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
                "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
                "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
                "Figure 1 shows the proposed architecture.",
                "Figure 1: Architecture of the gaming environment.",
                "Note that the communication proxies need not be cognizant of the game.",
                "They host a number of players and inform the servers which players are hosted by the proxy in question.",
                "Also note that the players hosted by a proxy may not be in the same game space.",
                "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
                "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
                "The proxies communicate with one another in a peer-to-peer to fashion.",
                "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central authority.",
                "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
                "This definitely improves the responsiveness of the game.",
                "However, it ignores consistency that is critical in MMORPGs.",
                "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
                "Figure 2 shows and example of the working principle of the proposed architecture.",
                "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
                "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
                "Figure 2: An example.",
                "There are four communication proxies placed in geographically distant locations.",
                "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
                "Underneath each player, the figure shows which game region the player is located currently.",
                "For example, players a, b, c are in regions 1, 2, 6, respectively.",
                "Therefore, proxy P1 must communicate with servers S1 and S3.",
                "The reader can verify the rest of the links between the proxies and the servers.",
                "Players can move within the region and between regions.",
                "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
                "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
                "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
                "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
                "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
                "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
                "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
                "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
                "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
                "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
                "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
                "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
                "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
                "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
                "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
                "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
                "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
                "We consider this the fast path for movement update.",
                "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
                "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
                "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
                "The servers could perform the same functionality but with more delay.",
                "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
                "The second possibility that should be considered is when players move between regions.",
                "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
                "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
                "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
                "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
                "In the example, assume that player a moves from region 1 to region 4.",
                "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
                "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
                "Server S1 will also initiate a handoff of player a with server S2.",
                "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
                "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
                "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
                "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
                "ASSIGNMENT OF AUTHORITY As a MMOG is played, the players and the game objects that are part of the game, continually change their state.",
                "For example, consider a player who owns a tank in a battlefield game.",
                "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
                "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
                "That is, some decision has to be made on the state of each player and object as the game progresses.",
                "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
                "In a client-server based game, the server controls all the players and the objects.",
                "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
                "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
                "The client subsequently updates the state of the player and renders the player at the new location.",
                "In this case the authority to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
                "Most of the current first person shooter (FPS) games and role playing games (RPG) fall under this category.",
                "In current FPS games, much like in RPG games, the client is not trusted.",
                "All moves and actions that it makes are validated.",
                "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
                "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
                "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
                "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
                "A difference that occurs in some RPGs is that they use very dumb client programs.",
                "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
                "State information is not maintained because the client is not trusted with it.",
                "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
                "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
                "In a peer-to-peer game, each peer controls the player and object that it owns.",
                "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
                "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
                "In this scenario, the authority to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
                "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all authority for making decisions.",
                "It was built primarily with LAN play in mind and cheating as an afterthought.",
                "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
                "The server does no sort of validation.",
                "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
                "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign authority.",
                "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
                "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
                "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
                "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
                "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
                "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
                "Neither tie break nor roll back is a desirable feature of online gaming.",
                "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
                "BzFlag).",
                "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
                "Both players will see on their screen that it is the winner.",
                "This makes the state of the game inconsistent.",
                "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
                "Neither of these two approaches is a pleasing experience for online gaming.",
                "Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
                "We propose to use a hybrid approach to assign the authority dynamically between the client and the server.",
                "That is, we assign the authority to the client to make the game responsive, and use the servers authority only when the clients individual authoritative decisions can make the game state inconsistent.",
                "By moving the authority of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
                "For example, in the flag pickup game, the clients will be given the authority to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
                "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the authority for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
                "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have authority to send movement updates for itself.",
                "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
                "We believe that our notion of authority can be used to develop a globally consistent state model of the evolution of a game.",
                "Fundamentally, the consistent state of the system is the one that is defined by the server.",
                "However, if local authority is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
                "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
                "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
                "In this situation, the client authority must revert to the server and the sever would then make decisions.",
                "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
                "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local authority is possible for significant spans of game time.",
                "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
                "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
                "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client.",
                "That is, the shortest distance in our architecture is not through the game server but through the communication proxy.",
                "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
                "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
                "This proxy and distributed authority architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
                "Our game architecture does not assume that the client is not to be trusted.",
                "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
                "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
                "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
                "For example, assume that in a game a plane controlled by a client moves in the game space.",
                "It is not possible for the plane to go through a building unharmed.",
                "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
                "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the authority and then can block such move.",
                "This allows us to distribute authority to make decisions about the clients.",
                "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
                "Our implementation shows the viability of our proposed solution. 4.",
                "IMPLEMENTATION EXPERIENCE We have experimented with the authority assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
                "A screen shot from this game is shown in Figure 3.",
                "The purpose of the implementation is to test its feasibility in a real game.",
                "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
                "Objects are placed within the game world and players gain points for each object that is collected.",
                "The game clients connect to a game server which allows many players to coexist in the same game world.",
                "The basic functionality of this game is representative of current online first person shooter and role playing games.",
                "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
                "In this section we will discuss the three different versions of the game that we experimented with.",
                "Figure 3: The RPGQuest Game.",
                "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
                "Authority given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
                "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
                "There is little lag between the time player hits a wall and the time the server corrects the players position.",
                "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
                "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
                "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
                "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
                "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
                "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
                "In order to get around this problem, we developed a second version of the game, which gives all authority to the client.",
                "The client was delegated the authority to validate its own movement and the authority to pick up objects without validation from the server.",
                "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
                "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
                "The update does not have to go through any extra processing or validation.",
                "This game model of complete authority given to the client is beneficial with respect to movement.",
                "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
                "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
                "Although game playing experience with respect to responsiveness is improved when the authority for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
                "The most important of these is consistency.",
                "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
                "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
                "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
                "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
                "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
                "The two players will now both think that they own the object.",
                "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
                "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of authority.",
                "It is better to place authority on the client for quickly changing actions such as movement.",
                "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
                "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
                "We believe that as the interactivity of games increases, our architecture of mixed authority that does not rely on server validation will be necessary.",
                "To test the benefits and show the feasibility of our architecture of mixed authority, we developed a third version of the RPGQuest game that distributed authority for different actions between the client and server.",
                "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
                "The client was given full authority to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
                "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
                "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
                "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
                "This version of the RPGQuest game where authority is distributed between the client and server is an improvement from the server authoritative version.",
                "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
                "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
                "However, the benefits of mixed authority will not truly be seen until an implementation of our communication proxy is integrated into the game.",
                "With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
                "The coding of the different versions of the game was very simple.",
                "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
                "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
                "The server updates each client with the position of all nearby clients.",
                "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
                "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
                "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
                "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
                "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
                "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
                "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
                "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
                "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all authority to a central server.",
                "In essence, this paper advocates an authority architecture which is server based even for peerto-peer games, but does not consider division of authority between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
                "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17].",
                "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
                "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
                "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
                "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
                "Proxy servers are located at various different ISPs.",
                "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
                "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
                "Fidelity based agent architectures have been proposed in [20, 21].",
                "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
                "When an object moves from one portion to another, there is a handoff from one server to another.",
                "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
                "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic authority assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the authority between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
                "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
                "Second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.",
                "Third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience.",
                "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed authority mechanism within this architecture.",
                "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
                "We also plan to implement a version of the RPGQuest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near.",
                "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
                "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
                "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
                "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
                "REFERENCES [1] Y. W. Bernier.",
                "Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization.",
                "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
                "On the impact of delay on real-time multiplayer games.",
                "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
                "ACM Press. [3] G. Armitage.",
                "Sensitivity of Quake3 Players to Network Latency.",
                "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
                "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
                "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
                "The effects of loss and latency on user performance in unreal tournament 2003.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
                "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
                "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
                "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
                "A fair message exchange framework for distributed multi-player games.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
                "ACM Press. [8] T. Barron.",
                "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
                "Prima Techs Game Development Series.",
                "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
                "The fun of using tcp for an mmorpg.",
                "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
                "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
                "Accuracy in dead-reckoning based distributed multi-player games.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
                "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
                "Fairness in dead-reckoning based distributed multi-player games.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
                "ACM Press. [12] Riker, T. et al.",
                "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
                "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
                "How to keep a dead man from shooting.",
                "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
                "Springer-Verlag. [15] Max Skibinsky.",
                "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
                "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
                "Bandwidth requirement and state consistency in three multiplayer game architectures.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
                "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
                "A Generic Proxy Systems for Networked Computer Games.",
                "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
                "A Proxy Server Network Architecture for Real-Time Computer Games.",
                "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
                "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
                "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
                "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
                "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
                "Hierarchical Structuring for Distributed Interactive Simulation.",
                "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
                "Trust and Reputation Model in Peer-to-Peer Networks.",
                "In Third International Conference on Peer-to-Peer Computing, 2003.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "authority": {
            "translated_key": "autoridad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>authority</br> Assignment in Distributed Multi-Player Proxy-based Games Sudhir Aggarwal Justin Christofoli Department of Computer Science Florida State University, Tallahassee, FL {sudhir, christof}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan Center for Networking Research Bell Laboratories, Holmdel, NJ {sarit, sampath}@bell-labs.com ABSTRACT We present a proxy-based gaming architecture and <br>authority</br> assignment within this architecture that can lead to better game playing experience in Massively Multi-player Online games.",
                "The proposed game architecture consists of distributed game clients that connect to game proxies (referred to as communication proxies) which forward game related messages from the clients to one or more game servers.",
                "Unlike proxy-based architectures that have been proposed in the literature where the proxies replicate all of the game state, the communication proxies in the proposed architecture support clients that are in proximity to it in the physical network and maintain information about selected portions of the game space that are relevant only to the clients that they support.",
                "Using this architecture, we propose an <br>authority</br> assignment mechanism that divides the <br>authority</br> for deciding the outcome of different actions/events that occur within the game between client and servers on a per action/event basis.",
                "We show that such division of <br>authority</br> leads to a smoother game playing experience by implementing this mechanism in a massively multi-player online game called RPGQuest.",
                "In addition, we argue that cheat detection techniques can be easily implemented at the communication proxies if they are made aware of the game-play mechanics.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication networks]: Distributed Systems-Distributed Applications General Terms Games, Performance 1.",
                "INTRODUCTION In Massively Multi-player On-line Games (MMOG), game clients who are positioned across the Internet connect to a game server to interact with other clients in order to be part of the game.",
                "In current architectures, these interactions are direct in that the game clients and the servers exchange game messages with each other.",
                "In addition, current MMOGs delegate all <br>authority</br> to the game server to make decisions about the results pertaining to the actions that game clients take and also to decide upon the result of other game related events.",
                "Such centralized <br>authority</br> has been implemented with the claim that this improves the security and consistency required in a gaming environment.",
                "A number of works have shown the effect of network latency on distributed multi-player games [1, 2, 3, 4].",
                "It has been shown that network latency has real impact on practical game playing experience [3, 5].",
                "Some types of games can function quite well even in the presence of large delays.",
                "For example, [4] shows that in a modern RPG called Everquest 2, the breakpoint of the game when adding artificial latency was 1250ms.",
                "This is accounted to the fact that the combat system used in Everquest 2 is queueing based and has very low interaction.",
                "For example, a player queues up 4 or 5 spells they wish to cast, each of these spells take 1-2 seconds to actually perform, giving the server plenty of time to validate these actions.",
                "But there are other games such as FPS games that break even in the presence of moderate network latencies [3, 5].",
                "Latency compensation techniques have been proposed to alleviate the effect of latency [1, 6, 7] but it is obvious that if MMOGs are to increase in interactivity and speed, more architectures will have to be developed that address responsiveness, accuracy and consistency of the gamestate.",
                "In this paper, we propose two important features that would make game playing within MMOGs more responsive for movement and scalable.",
                "First, we propose that centralized server-based architectures be made hierarchical through the introduction of communication proxies so that game updates made by clients that are time sensitive, such as movement, can be more efficiently distributed to other players within their game-space.",
                "Second, we propose that assignment of <br>authority</br> in terms of who makes the decision on client actions such as object pickups and hits, and collisions between players, be distributed between the clients and the servers in order to distribute the computing load away from the central server.",
                "In order to move towards more complex real-time networked games, we believe that definitions of <br>authority</br> must be refined.",
                "Most currently implemented MMOGs have game servers that have almost absolute <br>authority</br>.",
                "We argue that there is no single consistent view of the virtual game space that can be maintained on any one component within a network that has significant latency, such as the one that many MMOG players would experience.",
                "We believe that in most cases, the client with the most accurate view of an entity is the best suited to make decisions for that entity when the causality of that action will not immediately affect any other players.",
                "In this paper we define what it means to have <br>authority</br> within the context of events and objects in a virtual game space.",
                "We then show the benefits of delegating <br>authority</br> for different actions and game events between the clients and server.",
                "In our model, the game space consists of game clients (representing the players) and objects that they control.",
                "We divide the client actions and game events (we will collectively refer to these as events) such as collisions, hits etc. into three different categories, a) events for which the game client has absolute <br>authority</br>, b) events for which the game server has absolute <br>authority</br>, and c) events for which the authority changes dynamically from client to the server and vice-versa.",
                "Depending on who has the <br>authority</br>, that entity will make decisions on the events that happen within a game space.",
                "We propose that <br>authority</br> for all decisions that pertain to a single player or object in the game that neither affects the other players or objects, nor are affected by the actions of other players be delegated to that players game client.",
                "These type of decisions would include collision detection with static objects within the virtual game space and hit detection with linear path bullets (whose trajectory is fixed and does not change with time) fired by other players.",
                "<br>authority</br> for decisions that could be affected by two or more players should be delegated to the impartial central server, in some cases, to ensure that no conflicts occur and in other cases can be delegated to the clients responsible for those players.",
                "For example, collision detection of two players that collide with each other and hit detection of non-linear bullets (that changes trajectory with time) should be delegated to the server.",
                "Decision on events such as item pickup (for example, picking up items in a game to accumulate points) should be delegated to a server if there are multiple players within close proximity of an item and any one of the players could succeed in picking the item; for item pick-up contention where the client realizes that no other player, except its own player, is within a certain range of the item, the client could be delegated the responsibility to claim the item.",
                "The clients decision can always be accurately verified by the server.",
                "In summary, we argue that while current <br>authority</br> models that only delegate responsibility to the server to make authoritative decisions on events is more secure than allowing the clients to make the decisions, these types of models add undesirable delays to events that could very well be decided by the clients without any inconsistency being introduced into the game.",
                "As networked games become more complex, our architecture will become more applicable.",
                "This architecture is applicable for massively multiplayer games where the speed and accuracy of game-play are a major concern while consistency between player game-states is still desired.",
                "We propose that a mixed <br>authority</br> assignment mechanism such as the one outlined above be implemented in high interaction MMOGs.",
                "Our paper has the following contributions.",
                "First we propose an architecture that uses communication proxies to enable clients to connect to the game server.",
                "A communication proxy in the proposed architecture maintains information only about portions of the game space that are relevant to clients connected to it and is able to process the movement information of objects and players within these portions.",
                "In addition, it is capable of multicasting this information only to a relevant subset of other communication proxies.",
                "These functionalities of a communication proxy leads to a decrease in latency of event update and subsequently, better game playing experience.",
                "Second, we propose a mixed <br>authority</br> assignment mechanism as described above that improves game playing experience.",
                "Third, we implement the proposed mixed <br>authority</br> assignment mechanism within a MMOG called RPGQuest [8] to validate its viability within MMOGs.",
                "In Section 2, we describe the proxy-based game architecture in more detail and illustrate its advantages.",
                "In Section 3, we provide a generic description of the mixed <br>authority</br> assignment mechanism and discuss how it improves game playing experience.",
                "In Section 4, we show the feasibility of implementing the proposed mixed <br>authority</br> assignment mechanism within existing MMOGs by describing a proof-of-concept implementation within an existing MMOG called RPGQuest.",
                "Section 5 discusses related work.",
                "In Section 6, we present our conclusions and discuss future work. 2.",
                "PROXY-BASED GAME ARCHITECTURE Massively Multi-player Online Games (MMOGs) usually consist of a large game space in which the players and different game objects reside and move around and interact with each-other.",
                "State information about the whole game space could be kept in a single central server which we would refer to as a Central-Server Architecture.",
                "But to alleviate the heavy demand on the processing for handling the large player population and the objects in the game in real-time, a MMOG is normally implemented using a distributed server architecture where the game space is further sub-divided into regions so that each region has relatively smaller number of players and objects that can be handled by a single server.",
                "In other words, the different game regions are hosted by different servers in a distributed fashion.",
                "When a player moves out of one game region to another adjacent one, the player must communicate with a different server (than it was currently communicating with) hosting the new region.",
                "The servers communicate with one another to hand off a player or an object from one region to another.",
                "In this model, the player on the client machine has to establish multiple gaming sessions with different servers so that it can roam in the entire game space.",
                "We propose a communication proxy based architecture where a player connects to a (geographically) nearby proxy instead of connecting to a central server in the case of a centralserver architecture or to one of the servers in case of dis2 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 tributed server architecture.",
                "In the proposed architecture, players who are close by geographically join a particular proxy.",
                "The proxy then connects to one or more game servers, as needed by the set of players that connect to it and maintains persistent transport sessions with these server.",
                "This alleviates the problem of each player having to connect directly to multiple game servers, which can add extra connection setup delay.",
                "Introduction of communication proxies also mitigates the overhead of a large number of transport sessions that must be managed and reduces required network bandwidth [9] and processing at the game servers both with central server and distributed server architectures.",
                "With central server architectures, communication proxies reduce the overhead at the server by not requiring the server to terminate persistent transport sessions from every one of the clients.",
                "With distributed-server architectures, additionally, communication proxies eliminate the need for the clients to maintain persistent transport sessions to every one of the servers.",
                "Figure 1 shows the proposed architecture.",
                "Figure 1: Architecture of the gaming environment.",
                "Note that the communication proxies need not be cognizant of the game.",
                "They host a number of players and inform the servers which players are hosted by the proxy in question.",
                "Also note that the players hosted by a proxy may not be in the same game space.",
                "That is, a proxy hosts players that are geographically close to it, but the players themselves can reside in different parts of the game space.",
                "The proxy communicates with the servers responsible for maintaining the game spaces subscribed by the different players.",
                "The proxies communicate with one another in a peer-to-peer to fashion.",
                "The responsiveness of the game can be improved for updates that do not need to wait on processing at a central <br>authority</br>.",
                "In this way, information about players can be disseminated faster before even the game server gets to know about it.",
                "This definitely improves the responsiveness of the game.",
                "However, it ignores consistency that is critical in MMORPGs.",
                "The notion that an architecture such as this one can still maintain temporal consistency will be discussed in detail in Section 3.",
                "Figure 2 shows and example of the working principle of the proposed architecture.",
                "Assume that the game space is divided into 9 regions and there are three servers responsible for managing the regions.",
                "Server S1 owns regions 1 and 2, S2 manages 4, 5, 7, and 8, and S3 is responsible for 3, 6 and 9.",
                "Figure 2: An example.",
                "There are four communication proxies placed in geographically distant locations.",
                "Players a, b, c join proxy P1, proxy P2 hosts players d, e, f, players g, h are with proxy P3, whereas players i, j, k, l are with proxy P4.",
                "Underneath each player, the figure shows which game region the player is located currently.",
                "For example, players a, b, c are in regions 1, 2, 6, respectively.",
                "Therefore, proxy P1 must communicate with servers S1 and S3.",
                "The reader can verify the rest of the links between the proxies and the servers.",
                "Players can move within the region and between regions.",
                "Player movement within a region will be tracked by the proxy hosting the player and this movement information (for example, the players new coordinates) will be multicast to a subset of other relevant communication proxies directly.",
                "At the same time, this information will be sent to the server responsible for that region with the indication that this movement has already been communicated to all the other relevant communication proxies (so that the server does not have to relay this information to all the proxies).",
                "For example, if player a moves within region 1, this information will be communicated by proxy P1 to server S1 and multicast to proxies P3 and P4.",
                "Note that proxies that do not keep state information about this region at this point in time (because they do not have any clients within that region) such as P2 do not have to receive this movement information.",
                "If a player is at the boundary of a region and moves into a new region, there are two possibilities.",
                "The first possibility is that the proxy hosting the player can identify the region into which the player is moving (based on the trajectory information) because it is also maintaining state information about the new region at that point in time.",
                "In this case, the proxy can update movement information directly at the other relevant communication proxies and also send information to the appropriate server informing of the movement (this may require handoff between servers as we will describe).",
                "Consider the scenario where player a is at the boundary of region 1 and proxy P1 can identify that the player is moving into region 2.",
                "Because proxy P1 is currently keeping state information about region 2, it can inform all The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 3 the other relevant communication proxies (in this example, no other proxy maintains information about region 2 at this point and so no update needs to be sent to any of the other proxies) about this movement and then inform the server independently.",
                "In this particular case, server S1 is responsible for region 2 as well and so no handoff between servers would be needed.",
                "Now consider another scenario where player j moves from region 9 to region 8 and that proxy P4 is able to identify this movement.",
                "Again, because proxy P4 maintains state information about region 8, it can inform any other relevant communication proxies (again, none in this example) about this movement.",
                "But now, regions 9 and 8 are managed by different servers (servers S3 and S2 respectively) and thus a hand-off between these servers is needed.",
                "We propose that in this particular scenario, the handoff be managed by the proxy P4 itself.",
                "When the proxy sends movement update to server S3 (informing the server that the player is moving out of its region), it would also send a message to server S2 informing the server of the presence and location of the player in one of its region.",
                "In the intra-region and inter-region scenarios described above, the proxy is able to manage movement related information, update only the relevant communication proxies about the movement, update the servers with the movement and enable handoff of a player between the servers if needed.",
                "In this way, the proxy performs movement updates without involving the servers in any way in this time-critical function thereby speeding up the game and improving game playing experience for the players.",
                "We consider this the fast path for movement update.",
                "We envision the proxies to be just communication proxies in that they do not know about the workings of specific games.",
                "They merely process movement information of players and objects and communicate this information to the other proxies and the servers.",
                "If the proxies are made more intelligent in that they understand more of the game logic, it is possible for them to quickly check on claims made by the clients and mitigate cheating.",
                "The servers could perform the same functionality but with more delay.",
                "Even without being aware of game logic, the proxies can provide additional functionalities such as timestamping messages to make the game playing experience more accurate [10] and fair [11].",
                "The second possibility that should be considered is when players move between regions.",
                "It is possible that a player moves from one region to another but the proxy that is hosting the player is not able to determine the region into which the player is moving, a) the proxy does not maintain state information about all the regions into which the player could potentially move, or b) the proxy is not able to determine which region the player may move into (even if maintains state information about all these regions).",
                "In this case, we propose that the proxy be not responsible for making the movement decision, but instead communicate the movement indication to the server responsible for the region within which the player is currently located.",
                "The server will then make the movement decision and then a) inform all the proxies including the proxy hosting the player, and b) initiate handoff with another server if the player moves into a region managed by another server.",
                "We consider this the slow path for movement update in that the servers need to be involved in determining the new position of the player.",
                "In the example, assume that player a moves from region 1 to region 4.",
                "Proxy P1 does not maintain state information about region 4 and thus would pass the movement information to server S1.",
                "The server will identify that the player has moved into region 4 and would inform proxy P1 as well as proxy P2 (which is the only other proxy that maintains information about region 4 at this point in time).",
                "Server S1 will also initiate a handoff of player a with server S2.",
                "Proxy P1 will now start maintaining state information about region 4 because one of its hosted players, player a has moved into this region.",
                "It will do so by requesting and receiving the current state information about region 4 from server S2 which is responsible for this region.",
                "Thus, a proxy architecture allows us to make use of faster movement updates through the fast path through a proxy if and when possible as opposed to conventional server-based architectures that always have to use the slow path through the server for movement updates.",
                "By selectively maintaining relevant regional game state information at the proxies, we are able to achieve this capability in our architecture without the need for maintaining the complete game state at every proxy. 3.",
                "ASSIGNMENT OF <br>authority</br> As a MMOG is played, the players and the game objects that are part of the game, continually change their state.",
                "For example, consider a player who owns a tank in a battlefield game.",
                "Based on action of the player, the tank changes its position in the game space, the amount of ammunition the tank contains changes as it fires at other tanks, the tank collects bonus firing power based on successful hits, etc.",
                "Similarly objects in the battlefield, such as flags, buildings etc. change their state when a flag is picked up by a player (i.e. tank) or a building is destroyed by firing at it.",
                "That is, some decision has to be made on the state of each player and object as the game progresses.",
                "Note that the state of a player and/or object can contain several parameters (e.g., position, amount of ammunition, fuel storage, points collected, etc), and if any of the parameters changes, the state of the player/object changes.",
                "In a client-server based game, the server controls all the players and the objects.",
                "When a player at a client machine makes a move, the move is transmitted to the server over the network.",
                "The server then analyzes the move, and if the move is a valid one, changes the state of the player at the server and informs the client of the change.",
                "The client subsequently updates the state of the player and renders the player at the new location.",
                "In this case the <br>authority</br> to change the state of the player resides with the server entirely and the client simply follows what the server instructs it to do.",
                "Most of the current first person shooter (FPS) games and role playing games (RPG) fall under this category.",
                "In current FPS games, much like in RPG games, the client is not trusted.",
                "All moves and actions that it makes are validated.",
                "If a client detects that it has hit another player with a bullet, it proceeds assuming that it is a hit.",
                "Meanwhile, an update is sent to the server and the server will send back a message either affirming or denying that the player was hit.",
                "If the remote player was not hit, then the client will know that it 4 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 did not actually make the shot.",
                "If it did make the hit, an update will also be sent from the server to the other clients informing them that the other player was hit.",
                "A difference that occurs in some RPGs is that they use very dumb client programs.",
                "Some RPGs do not maintain state information at the client and therefore, cannot predict anything such as hits at the client.",
                "State information is not maintained because the client is not trusted with it.",
                "In RPGs, a cheating player with a hacked game client can use state information stored at the client to gain an advantage and find things such as hidden treasure or monsters lurking around the corner.",
                "This is a reason why most MMORPGs do not send a lot of state information to the client and causes the game to be less responsive and have lower interaction game-play than FPS games.",
                "In a peer-to-peer game, each peer controls the player and object that it owns.",
                "When a player makes a move, the peer machine analyzes the move and if it is a valid one, changes the state of the player and places the player in new position.",
                "Afterwards, the owner peer informs all other peers about the new state of the player and the rest of the peers update the state of the player.",
                "In this scenario, the <br>authority</br> to change the state of the player is given to the owning peer and all other peers simply follow the owner.",
                "For example, Battle Zone Flag (BzFlag) [12] is a multiplayer client-server game where the client has all <br>authority</br> for making decisions.",
                "It was built primarily with LAN play in mind and cheating as an afterthought.",
                "Clients in BzFlag are completely authoritative and when they detect that they were hit by a bullet, they send an update to the server which simply forwards the message along to all other players.",
                "The server does no sort of validation.",
                "Each of the above two traditional approaches has its own set of advantages and disadvantages.",
                "The first approach, which we will refer to as server authoritative henceforth, uses a centralized method to assign <br>authority</br>.",
                "While a centralized approach can keep the state of the game (i.e., state of all the players and objects) consistent across any number of client machines, it suffers from delayed response in game-play as any move that a player at the client machine makes must go through one round-trip delay to the server before it can take effect on the clients screen.",
                "In addition to the round-trip delay, there is also queuing delay in processing the state change request at the server.",
                "This can result in additional processing delay, and can also bring in severe scalability problems if there are large number of clients playing the game.",
                "One definite advantage of the server authoritative approach is that it can easily detect if a client is cheating and can take appropriate action to prevent cheating.",
                "The peer-to-peer approach, henceforth referred to as client authoritative, can make games very responsive.",
                "However, it can make the game state inconsistent for a few players and tie break (or roll back) has to be performed to bring the game back to a consistent state.",
                "Neither tie break nor roll back is a desirable feature of online gaming.",
                "For example, assume that for a game, the goal of each player is to collect as many flags as possible from the game space (e.g.",
                "BzFlag).",
                "When two players in proximity try to collect the same flag at the same time, depending on the algorithm used at the client-side, both clients may determine that it is the winner, although in reality only one player can pick the flag up.",
                "Both players will see on their screen that it is the winner.",
                "This makes the state of the game inconsistent.",
                "Ways to recover from this inconsistency are to give the flag to only one player (using some tie break rule) or roll the game back so that the players can try again.",
                "Neither of these two approaches is a pleasing experience for online gaming.",
                "Another problem with client authoritative approach is that of cheating by clients as there is no cross checking of the validation of the state changes authorized by the owner client.",
                "We propose to use a hybrid approach to assign the <br>authority</br> dynamically between the client and the server.",
                "That is, we assign the <br>authority</br> to the client to make the game responsive, and use the servers <br>authority</br> only when the clients individual authoritative decisions can make the game state inconsistent.",
                "By moving the <br>authority</br> of time critical updates to the client, we avoid the added delay caused by requiring the server to validate these updates.",
                "For example, in the flag pickup game, the clients will be given the <br>authority</br> to pickup flags only when other players are not within a range that they could imminently pickup a flag.",
                "Only when two or more players are close by so that more than one player may claim to have picked up a flag, the <br>authority</br> for movement and flag pickup would go to the central server so that the game state does not become inconsistent.",
                "We believe that in a large game-space where a player is often in a very wide open and sparsely populated area such as those often seen in the game Second Life [13], this hybrid architecture would be very beneficial because of the long periods that the client would have <br>authority</br> to send movement updates for itself.",
                "This has two advantages over the centralauthority approach, it distributes the processing load down to the clients for the majority of events and it allows for a more responsive game that does not need to wait on a server for validation.",
                "We believe that our notion of <br>authority</br> can be used to develop a globally consistent state model of the evolution of a game.",
                "Fundamentally, the consistent state of the system is the one that is defined by the server.",
                "However, if local <br>authority</br> is delegated to the client, in this case, the clients state is superimposed on the servers state to determine the correct global state.",
                "For example, if the client is authoritative with respect to movement of a player, then the trajectory of the player is the true trajectory and must replace the servers view of the players trajectory.",
                "Note that this could be problematic and lead to temporal inconsistency only if, for example, two or more entities are moving in the same region and can interact with each other.",
                "In this situation, the client <br>authority</br> must revert to the server and the sever would then make decisions.",
                "Thus, the client is only authoritative in situations where there is no potential to imminently interact with other players.",
                "We believe that in complex MMOGs, when allowing more rapid movement, it will still be the case that local <br>authority</br> is possible for significant spans of game time.",
                "Note that it might also be possible to minimize the occurrences of the Dead Man Shooting problem described in [14].",
                "This could be done by allowing the client to be authoritative for more actions such as its players own death and disallowing other players from making preemptive decisions based on a remote player.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 5 One reason why the client-server based architecture has gained popularity is due to belief that the fastest route to the other clients is through the server.",
                "While this may be true, we aim to create a new architecture where decisions do not always have to be made at the game server and the fastest route to a client is actually through a communication proxy located close to the client.",
                "That is, the shortest distance in our architecture is not through the game server but through the communication proxy.",
                "After a client makes an action such as movement, it will simultaneously distribute it directly to the clients and the game server by way of the communications proxy.",
                "We note that our architecture however is not practical for a game where game players setup their own servers in an ad-hoc fashion and do not have access to proxies at the various ISPs.",
                "This proxy and distributed <br>authority</br> architecture can be used to its full potential only when the proxies can be placed at strategic places within the main ISPs and evenly distributed geographically.",
                "Our game architecture does not assume that the client is not to be trusted.",
                "We are designing our architecture on the fact that there will be sufficient cheat deterring and detection mechanisms present so that it will be both undesirable and very difficult to cheat [15].",
                "In our proposed approach, we can make the games cheat resilient by using the proxybased architecture when client authoritative decisions take place.",
                "In order to achieve this, the proxies have to be game cognizant so that decisions made by a client can be cross checked by a proxy that the client connects to.",
                "For example, assume that in a game a plane controlled by a client moves in the game space.",
                "It is not possible for the plane to go through a building unharmed.",
                "In a client authoritative mode, it is possible for the client to cheat by maneuvering the plane through a building and claiming the plane to be unharmed.",
                "However, when such move is published by the client, the proxy, being aware of the game space that the plane is in, can quickly check that the client has misused the <br>authority</br> and then can block such move.",
                "This allows us to distribute <br>authority</br> to make decisions about the clients.",
                "In the following section we use a multiplayer game called RPGQuest to implement different authoritative schemes and discuss our experience with the implementation.",
                "Our implementation shows the viability of our proposed solution. 4.",
                "IMPLEMENTATION EXPERIENCE We have experimented with the <br>authority</br> assignment mechanism described in the last section by implementing the mechanisms in a game called RPGQuest.",
                "A screen shot from this game is shown in Figure 3.",
                "The purpose of the implementation is to test its feasibility in a real game.",
                "RPGQuest is a basic first person game where the player can move around a three dimensional environment.",
                "Objects are placed within the game world and players gain points for each object that is collected.",
                "The game clients connect to a game server which allows many players to coexist in the same game world.",
                "The basic functionality of this game is representative of current online first person shooter and role playing games.",
                "The game uses the DirectX 8 graphics API and DirectPlay networking API.",
                "In this section we will discuss the three different versions of the game that we experimented with.",
                "Figure 3: The RPGQuest Game.",
                "The first version of the game, which is the original implementation of RPGQuest, was created with a completely authoritative server and a non-authoritative client.",
                "<br>authority</br> given to the server includes decisions of when a player collides with static objects and other players and when a player picks up an object.",
                "This version of the game performs well up to 100ms round-trip latency between the client and the server.",
                "There is little lag between the time player hits a wall and the time the server corrects the players position.",
                "However, as more latency is induced between the client and server, the game becomes increasingly difficult to play.",
                "With the increased latency, the messages coming from the server correcting the player when it runs into a wall are not received fast enough.",
                "This causes the player to pass through the wall for the period that it is waiting for the server to resolve the collision.",
                "When studying the source code of the original version of the RPGQuest game, there is a substantial delay that is unavoidable each time an action must be validated by the server.",
                "Whenever a movement update is sent to the server, the client must then wait whatever the round trip delay is, plus some processing time at the server in order to receive its validated or corrected position.",
                "This is obviously unacceptable in any game where movement or any other rapidly changing state information must be validated and disseminated to the other clients rapidly.",
                "In order to get around this problem, we developed a second version of the game, which gives all <br>authority</br> to the client.",
                "The client was delegated the <br>authority</br> to validate its own movement and the <br>authority</br> to pick up objects without validation from the server.",
                "In this version of the game when a player moves around the game space, the client validates that the players new position does not intersect with any walls or static objects.",
                "A position update is then sent to the server which then immediately forwards the update to the other clients within the region.",
                "The update does not have to go through any extra processing or validation.",
                "This game model of complete <br>authority</br> given to the client is beneficial with respect to movement.",
                "When latencies of 6 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 100ms and up are induced into the link between the client and server, the game is still playable since time critical aspects of the game like movement do not have to wait on a reply from the server.",
                "When a player hits a wall, the collision is processed locally and does not have to wait on the server to resolve the collision.",
                "Although game playing experience with respect to responsiveness is improved when the <br>authority</br> for movement is given to the client, there are still aspects of games that do not benefit from this approach.",
                "The most important of these is consistency.",
                "Although actions such as movement are time critical, other actions are not as time critical, but instead require consistency among the player states.",
                "An example of a game aspect that requires consistency is picking up objects that should only be possessed by a single player.",
                "In our client authoritative version of RPGQuest clients send their own updates to all other players whenever they pick up an object.",
                "From our tests we have realized this is a problem because when there is a realistic amount of latency between the client and server, it is possible for two players to pick up the same object at the same time.",
                "When two players attempt to pick up an object at physical times which are close to each other, the update sent by the player who picked up the object first will not reach the second player in time for it to see that the object has already been claimed.",
                "The two players will now both think that they own the object.",
                "This is why a server is still needed to be authoritative in this situation and maintain consistency throughout the players.",
                "These two versions of the RPGQuest game has showed us why it is necessary to mix the two absolute models of <br>authority</br>.",
                "It is better to place <br>authority</br> on the client for quickly changing actions such as movement.",
                "It is not desirable to have to wait for server validation on a movement that could change before the reply is even received.",
                "It is also sometimes necessary to place consistency over efficiency in aspects of the game that cannot tolerate any inconsistencies such as object ownership.",
                "We believe that as the interactivity of games increases, our architecture of mixed <br>authority</br> that does not rely on server validation will be necessary.",
                "To test the benefits and show the feasibility of our architecture of mixed <br>authority</br>, we developed a third version of the RPGQuest game that distributed <br>authority</br> for different actions between the client and server.",
                "In this version, in the interest of consistency, the server remained authoritative for deciding who picked up an object.",
                "The client was given full <br>authority</br> to send positional updates to other clients and verify its own position without the need to verify its updates with the server.",
                "When the player tries to move their avatar, the client verifies that the move will not cause it to move through a wall.",
                "A positional update is then sent to the server which then simply forwards it to the other clients within the region.",
                "This eliminates any extra processing delay that would occur at the server and is also a more accurate means of verification since the client has a more accurate view of its own state than the server.",
                "This version of the RPGQuest game where <br>authority</br> is distributed between the client and server is an improvement from the server authoritative version.",
                "The client has no delay in waiting for an update for its own position and other clients do not have to wait on the server to verify the update.",
                "The inconsistencies where two clients can pick up the same object in the client authoritative architecture are not present in this version of the client.",
                "However, the benefits of mixed <br>authority</br> will not truly be seen until an implementation of our communication proxy is integrated into the game.",
                "With the addition of the communication proxy, after the client verifies its own positional updates it will be able to send the update to all clients within its region through a low latency link instead of having to first go through the game server which could possibly be in a very remote location.",
                "The coding of the different versions of the game was very simple.",
                "The complexity of the client increased very slightly in the client authoritative and hybrid models.",
                "The original dumb clients of RPGQuest know the position of other players; it is not just sent a screen snapshot from the server.",
                "The server updates each client with the position of all nearby clients.",
                "The dumb clients use client side prediction to fill in the gaps between the updates they receive.",
                "The only extra processing the client has to do in the hybrid architecture is to compare its current position to the positions of all objects (walls, boxes, etc.) in its area.",
                "This obviously means that each client will have to already have downloaded the locations of all static objects within its current region. 5.",
                "RELATED WORK It has been noted that in addition to latency, bandwidth requirements also dictate the type of gaming architecture to be used.",
                "In [16], different types of architectures are studied with respect to bandwidth efficiencies and latency.",
                "It is pointed out that Central Server architectures are not scalable because of bandwidth requirements at the server but the overhead for consistency checks are limited as they are performed at the server.",
                "A Peer-to-Peer architecture, on the other hand, is scalable but there is a significant overhead for consistency checks as this is required at every player.",
                "The paper proposes a hybrid architecture which is Peer-toPeer in terms of message exchange (and thereby is scalable) where a Central Server is used for off-line consistency checks (thereby mitigating consistency check overhead).",
                "The paper provides an implementation example of BZFlag which is a peer-to-peer game which is modified to transfer all <br>authority</br> to a central server.",
                "In essence, this paper advocates an <br>authority</br> architecture which is server based even for peerto-peer games, but does not consider division of <br>authority</br> between a client and a server to minimize latency which could affect game playing experience even with the type of latency found in server based games (where all authority is with the server).",
                "There is also previous work that has suggested that proxy based architectures be used to alleviate the latency problem and in addition use proxies to provide congestion control and cheat-proof mechanisms in distributed multi-player games [17].",
                "In [18], a proxy server-network architecture is presented that is aimed at improving scalability of multiplayer games and lowering latency in server-client data transmission.",
                "The main goal of this work is to improve scalability of First-Person Shooter (FPS) and RPG games.",
                "The further objective is to improve the responsiveness MMOGs by providing low latency communications between the client and The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 7 server.",
                "The architecture uses interconnected proxy servers that each have a full view of the global game state.",
                "Proxy servers are located at various different ISPs.",
                "It is mentioned in this work that dividing the game space among multiple games servers such as the federated model presented in [19] is inefficient for a relatively fast game flow and that the proposed architecture alleviates this problem because users do not have to connect to a different server whenever they cross the server boundary.",
                "This architecture still requires all proxies to be aware of the overall game state over the whole game space unlike our work where we require the proxies to maintain only partial state information about the game space.",
                "Fidelity based agent architectures have been proposed in [20, 21].",
                "These works propose a distributed client-server architecture for distributed interactive simulations where different servers are responsible for different portions of the game space.",
                "When an object moves from one portion to another, there is a handoff from one server to another.",
                "Although these works propose an architecture where different portions of the simulation space are managed by different servers, they do not address the issue of decreasing the bandwidth required through the use of communication proxies.",
                "Our work differs from the above discussed previous works by proposing a) a distributed proxy-based architecture to decrease bandwidth requirements at the clients and the servers without requiring the proxies to keep state information about the whole game space, b) a dynamic <br>authority</br> assignment technique to reduce latency (by performing consistency checks locally at the client whenever possible) by splitting the <br>authority</br> between the clients and servers on a per object basis, and c) proposing that cheat detection can be built into the proxies if they are provided more information about the specific game instead of using them purely as communication proxies (although this idea has not been implemented yet and is part of our future work). 6.",
                "CONCLUSIONS AND FUTURE WORK In this paper, we first proposed a proxy-based architecture for MMOGs that enables MMOGs to scale to a large number of users by mitigating the need for a large number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.",
                "Second, we proposed a mixed <br>authority</br> assignment mechanism that divides <br>authority</br> for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.",
                "Third, to validate the viability of the mixed <br>authority</br> assignment mechanism, we implemented it within a MMOG called RPGQuest and described our implementation experience.",
                "In future work, we propose to implement the communications proxy architecture described in this paper and integrate the mixed <br>authority</br> mechanism within this architecture.",
                "We propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and responsiveness.",
                "We also plan to implement a version of the RPGQuest game with dynamic assignment of <br>authority</br> to allow players the <br>authority</br> to pickup objects when no other players are near.",
                "As discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.",
                "Also, since so much trust is put into the clients of our architecture, it will be necessary to integrate into the architecture many of the cheat detection schemes that have been proposed in the literature.",
                "Software such as Punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.",
                "We further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 7.",
                "REFERENCES [1] Y. W. Bernier.",
                "Latency Compensation Methods in Client/Server In-game Protocol Design and Optimization.",
                "In Proc. of Game Developers Conference01, 2001. [2] Lothar Pantel and Lars C. Wolf.",
                "On the impact of delay on real-time multiplayer games.",
                "In NOSSDAV 02: Proceedings of the 12th international workshop on Network and operating systems support for digital audio and video, pages 23-29, New York, NY, USA, 2002.",
                "ACM Press. [3] G. Armitage.",
                "Sensitivity of Quake3 Players to Network Latency.",
                "In Proc. of IMW2001, Workshop Poster Session, November 2001. http://www.geocities.com/ gj armitage/q3/quake-results.html. [4] Tobias Fritsch, Hartmut Ritter, and Jochen Schiller.",
                "The effect of latency and network limitations on mmorpgs: a field study of everquest2.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-9, New York, NY, USA, 2005.",
                "ACM Press. [5] Tom Beigbeder, Rory Coughlan, Corey Lusher, John Plunkett, Emmanuel Agu, and Mark Claypool.",
                "The effects of loss and latency on user performance in unreal tournament 2003.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 144-151, New York, NY, USA, 2004.",
                "ACM Press. [6] Y. Lin, K. Guo, and S. Paul.",
                "Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player Distributed Games.",
                "In Proc. of 10th IEEE International Conference on Network Protocols (ICNP), Nov 2002. [7] Katherine Guo, Sarit Mukherjee, Sampath Rangarajan, and Sanjoy Paul.",
                "A fair message exchange framework for distributed multi-player games.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 29-41, New York, NY, USA, 2003.",
                "ACM Press. [8] T. Barron.",
                "Multiplayer Game Programming, chapter 16-17, pages 672-731.",
                "Prima Techs Game Development Series.",
                "Prima Publishing, 2001. 8 The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 [9] Carsten Griwodz and P˚al Halvorsen.",
                "The fun of using tcp for an mmorpg.",
                "In NOSSDAV 06: Proceedings of the International Workshop on Network and Operating Systems Support for Digital Audio and VIdeo, New York, NY, USA, 2006.",
                "ACM Press. [10] Sudhir Aggarwal, Hemant Banavar, Amit Khandelwal, Sarit Mukherjee, and Sampath Rangarajan.",
                "Accuracy in dead-reckoning based distributed multi-player games.",
                "In NetGames 04: Proceedings of 3rd ACM SIGCOMM workshop on Network and system support for games, pages 161-165, New York, NY, USA, 2004.",
                "ACM Press. [11] Sudhir Aggarwal, Hemant Banavar, Sarit Mukherjee, and Sampath Rangarajan.",
                "Fairness in dead-reckoning based distributed multi-player games.",
                "In NetGames 05: Proceedings of 4th ACM SIGCOMM workshop on Network and system support for games, pages 1-10, New York, NY, USA, 2005.",
                "ACM Press. [12] Riker, T. et al.",
                "Bzflag. http://www.bzflag.org, 2000-2006. [13] Linden Lab.",
                "Second life. http://secondlife.com, 2003. [14] Martin Mauve.",
                "How to keep a dead man from shooting.",
                "In IDMS 00: Proceedings of the 7th International Workshop on Interactive Distributed Multimedia Systems and Telecommunication Services, pages 199-204, London, UK, 2000.",
                "Springer-Verlag. [15] Max Skibinsky.",
                "Massively Multiplayer Game Development 2, chapter The Quest for Holy ScalePart 2: P2P Continuum, pages 355-373.",
                "Charles River Media, 2005. [16] Joseph D. Pellegrino and Constantinos Dovrolis.",
                "Bandwidth requirement and state consistency in three multiplayer game architectures.",
                "In NetGames 03: Proceedings of the 2nd workshop on Network and system support for games, pages 52-59, New York, NY, USA, 2003.",
                "ACM Press. [17] M. Mauve J. Widmer and S. Fischer.",
                "A Generic Proxy Systems for Networked Computer Games.",
                "In Proc. of the Workshop on Network Games, Netgames 2002, April 2002. [18] S. Gorlatch J. Muller, S. Fischer and M.Mauve.",
                "A Proxy Server Network Architecture for Real-Time Computer Games.",
                "In Euor-Par 2004 Parallel Processing: 10th International EURO-PAR Conference, August-September 2004. [19] H. Hazeyama T. Limura and Y. Kadobayashi.",
                "Zoned Federation of Game Servers: A Peer-to-Peer Approach to Scalable Multiplayer On-line Games.",
                "In Proc. of ACM Workshop on Network Games, Netgames 2004, August-September 2004. [20] B. Kelly and S. Aggarwal.",
                "A Framework for a Fidelity Based Agent Architecture for Distributed Interactive Simulation.",
                "In Proc. 14th Workshop on Standards for Distributed Interactive Simulation, pages 541-546, March 1996. [21] S. Aggarwal and B. Kelly.",
                "Hierarchical Structuring for Distributed Interactive Simulation.",
                "In Proc. 13th Workshop on Standards for Distributed Interactive Simulation, pages 125-132, Sept 1995. [22] Even Balance, Inc. Punkbuster. http://www.evenbalance.com/, 2001-2006. [23] Y. Wang and J. Vassileva.",
                "Trust and Reputation Model in Peer-to-Peer Networks.",
                "In Third International Conference on Peer-to-Peer Computing, 2003.",
                "The 5th Workshop on Network & System Support for Games 2006 - NETGAMES 2006 9"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Asignación de \"autoridad\" en los juegos distribuidos basados en el juego múltiples Sudhir Aggarwal Justin Christofoli Departamento de Ciencias de la Computación Florida Universidad Estatal de Florida, Tallahassee, FL {Sudhir, Christofhth}@cs.fsu.edu Sarit Mukherjee Sampath Rangarajan para la networking Bell Laboratories,,Holmdel, NJ {Sarit, sampath}@bell-labs.com Resumen Presentamos una arquitectura de juego basada en el poder y una tarea de \"autoridad\" dentro de esta arquitectura que puede conducir a una mejor experiencia de juego en juegos en línea masivamente múltiples jugadores.",
                "Usando esta arquitectura, proponemos un mecanismo de asignación de \"autoridad\" que divide la \"autoridad\" para decidir el resultado de diferentes acciones/eventos que ocurren dentro del juego entre el cliente y los servidores por acción/evento.",
                "Mostramos que dicha división de \"autoridad\" conduce a una experiencia de juego más suave al implementar este mecanismo en un juego en línea masivamente multijugador llamado RPGQuest.",
                "Además, los MMOG actuales delegan a toda \"autoridad\" al servidor de juegos para tomar decisiones sobre los resultados relacionados con las acciones que toman los clientes del juego y también para decidir el resultado de otros eventos relacionados con el juego.",
                "Dicha \"autoridad\" centralizada se ha implementado con la afirmación de que esto mejora la seguridad y la consistencia requeridas en un entorno de juego.",
                "En segundo lugar, proponemos que la asignación de \"autoridad\" en términos de quién toma la decisión sobre las acciones del cliente, como las recolectas y los golpes de objetos, y las colisiones entre los jugadores, se distribuyan entre los clientes y los servidores para distribuir la carga informática de losservidor central.",
                "Para avanzar hacia juegos en red en tiempo real más complejos, creemos que las definiciones de \"autoridad\" deben ser refinadas.",
                "La mayoría de los MMOG implementados actualmente tienen servidores de juegos que tienen una \"autoridad\" casi absoluta.",
                "En este artículo definimos lo que significa tener \"autoridad\" dentro del contexto de eventos y objetos en un espacio de juego virtual.",
                "Luego mostramos los beneficios de delegar \"autoridad\" para diferentes acciones y eventos de juego entre los clientes y el servidor.",
                "Dividimos las acciones del cliente y los eventos del juego (nos referiremos colectivamente a estos como eventos) como colisiones, éxitos, etc. en tres categorías diferentes, a) eventos para los cuales el cliente del juego tiene \"autoridad\" absoluta, b) eventos para los cuales los eventos para los cualesEl servidor de juegos tiene eventos absolutos de \"autoridad\" y c) para los cuales la autoridad cambia dinámicamente del cliente al servidor y al viceversa.",
                "Dependiendo de quién tenga la \"autoridad\", esa entidad tomará decisiones sobre los eventos que ocurren dentro de un espacio de juego.",
                "Proponemos que la \"autoridad\" para todas las decisiones que pertenecen a un solo jugador u objeto en el juego que no afecte a los otros jugadores u objetos, ni se ve afectado por las acciones de otros jugadores se delegan al cliente del juego de los jugadores.",
                "La \"autoridad\" para las decisiones que podrían verse afectadas por dos o más jugadores deben delegarse al servidor central imparcial, en algunos casos, para garantizar que no se produzcan conflictos y en otros casos se puedan delegar a los clientes responsables de esos jugadores.",
                "En resumen, argumentamos que si bien los modelos actuales de \"autoridad\" que solo delegan la responsabilidad al servidor para tomar decisiones autorizadas sobre los eventos es más seguro que permitir a los clientes tomar las decisiones, este tipo de modelos agregan demoras indeseables a los eventos que podrían muy bienser decidido por los clientes sin que se introduzca ninguna inconsistencia en el juego.",
                "Proponemos que un mecanismo de asignación de \"autoridad\" mixto, como el descrito anteriormente, se implementará en MMOG de alta interacción.",
                "En segundo lugar, proponemos un mecanismo mixto de asignación de \"autoridad\" como se describe anteriormente que mejora la experiencia del juego.",
                "En tercer lugar, implementamos el mecanismo de asignación mixto de \"autoridad\" mixta dentro de un MMOG llamado RPGQuest [8] para validar su viabilidad dentro de MMOGS.",
                "En la Sección 3, proporcionamos una descripción genérica del mecanismo mixto de asignación de \"autoridad\" y discutimos cómo mejora la experiencia de juego.",
                "En la Sección 4, mostramos la viabilidad de implementar el mecanismo de asignación mixto de \"autoridad\" mixta dentro de los MMOG existentes describiendo una implementación de prueba de concepto dentro de un MMOG existente llamado RPGQuest.",
                "La capacidad de respuesta del juego se puede mejorar para las actualizaciones que no necesitan esperar el procesamiento en una \"autoridad\" central.",
                "Se juega la asignación de \"autoridad\" como MMOG, los jugadores y los objetos del juego que forman parte del juego, cambian continuamente su estado.",
                "En este caso, la \"autoridad\" para cambiar el estado del jugador reside por completo con el servidor y el cliente simplemente sigue lo que el servidor le indica que haga.",
                "En este escenario, la \"autoridad\" para cambiar el estado del jugador se le da al compañero de propiedad y todos los demás pares simplemente siguen al propietario.",
                "Por ejemplo, Battle Zone Flag (BZFlag) [12] es un juego de servidor de cliente multijugador donde el cliente tiene toda \"autoridad\" para tomar decisiones.",
                "El primer enfoque, al que nos referiremos como autoridad del servidor en adelante, utiliza un método centralizado para asignar \"autoridad\".",
                "Proponemos utilizar un enfoque híbrido para asignar la \"autoridad\" dinámicamente entre el cliente y el servidor.",
                "Es decir, asignamos la \"autoridad\" al cliente para que el juego responda, y usamos la \"autoridad\" de los servidores solo cuando las decisiones de autoridad individuales de los clientes pueden hacer que el juego establezca sin inconsistente.",
                "Al mover la \"autoridad\" de las actualizaciones críticas del tiempo al cliente, evitamos el retraso adicional causado al requerir que el servidor valida estas actualizaciones.",
                "Por ejemplo, en el juego de recolección de banderas, a los clientes recibirán la \"autoridad\" para recoger banderas solo cuando otros jugadores no están dentro de un rango de que podrían recoger inminentemente una bandera.",
                "Solo cuando dos o más jugadores están cerca para que más de un jugador pueda afirmar haber recogido una bandera, la \"autoridad\" para el movimiento y la recolección de la bandera irían al servidor central para que el estado del juego no se vuelva inconsistente.",
                "Creemos que en un gran espacio de juego donde un jugador a menudo se encuentra en un área muy abierta y escasamente poblada como las que a menudo se ven en el juego Second Life [13], esta arquitectura híbrida sería muy beneficiosa debido a los largos períodos queEl cliente tendría \"autoridad\" para enviar actualizaciones de movimiento por sí mismo.",
                "Creemos que nuestra noción de \"autoridad\" puede usarse para desarrollar un modelo estatal globalmente consistente de la evolución de un juego.",
                "Sin embargo, si la \"autoridad\" local se delega al cliente, en este caso, el estado del cliente se superpone en el estado de los servidores para determinar el estado global correcto.",
                "En esta situación, la \"autoridad\" del cliente debe volver al servidor y el grave tomaría decisiones.",
                "Creemos que en los MMOG complejos, al permitir un movimiento más rápido, seguirá siendo el caso de que la \"autoridad\" local sea posible para tramos significativos de tiempo de juego.",
                "Esta arquitectura de \"autoridad\" distribuida de proxy y distribuida se puede utilizar a su máximo potencial solo cuando los proxies se pueden colocar en lugares estratégicos dentro de los ISP principales y distribuirse uniformemente geográficamente.",
                "Sin embargo, cuando el cliente publica tal movimiento, el proxy, al tanto del espacio de juego en el que se encuentra el avión, puede verificar rápidamente que el cliente haya utilizado mal la \"autoridad\" y luego puede bloquear dicho movimiento.",
                "Esto nos permite distribuir \"autoridad\" para tomar decisiones sobre los clientes.",
                "Experiencia de implementación Hemos experimentado con el mecanismo de asignación de \"autoridad\" descrito en la última sección mediante la implementación de los mecanismos en un juego llamado RPGQuest.",
                "La \"autoridad\" dada al servidor incluye decisiones de cuándo un jugador choca con objetos estáticos y otros jugadores y cuándo un jugador recoge un objeto.",
                "Para evitar este problema, desarrollamos una segunda versión del juego, que le da toda la \"autoridad\" al cliente.",
                "El cliente fue delegado la \"autoridad\" para validar su propio movimiento y la \"autoridad\" para recoger objetos sin validación del servidor.",
                "Este modelo de juego de \"autoridad\" completa dado al cliente es beneficioso con respecto al movimiento.",
                "Aunque la experiencia de juego con respecto a la capacidad de respuesta se mejora cuando la \"autoridad\" para el movimiento se da al cliente, todavía hay aspectos de los juegos que no se benefician de este enfoque.",
                "Estas dos versiones del juego RPGQuest nos han mostrado por qué es necesario mezclar los dos modelos absolutos de \"autoridad\".",
                "Es mejor colocar la \"autoridad\" en el cliente para cambiar rápidamente las acciones como el movimiento.",
                "Creemos que a medida que aumenta la interactividad de los juegos, nuestra arquitectura de \"autoridad\" mixta que no depende de la validación del servidor será necesaria.",
                "Para probar los beneficios y mostrar la viabilidad de nuestra arquitectura de \"autoridad\" mixta, desarrollamos una tercera versión del juego RPGQuest que distribuyó \"autoridad\" para diferentes acciones entre el cliente y el servidor.",
                "El cliente recibió una \"autoridad\" completa para enviar actualizaciones posicionales a otros clientes y verificar su propia posición sin la necesidad de verificar sus actualizaciones con el servidor.",
                "Esta versión del juego RPGQuest donde se distribuye \"Autoridad\" entre el cliente y el servidor es una mejora de la versión autorizada del servidor.",
                "Sin embargo, los beneficios de la \"autoridad\" mixta no se verán realmente hasta que una implementación de nuestro proxy de comunicación se integre en el juego.",
                "El documento proporciona un ejemplo de implementación de BZFLAG, que es un juego de igual a igual que se modifica para transferir toda la \"autoridad\" a un servidor central.",
                "En esencia, este documento aboga por una arquitectura de \"autoridad\" que se basa en el servidor incluso para los juegos de peerto, pero no considera la división de \"autoridad\" entre un cliente y un servidor para minimizar la latencia que podría afectar la experiencia de juego incluso con el tipode latencia encontrada en juegos basados en servidor (donde toda la autoridad está con el servidor).",
                "Nuestro trabajo difiere de los trabajos anteriores discutidos anteriormente al proponer a) una arquitectura distribuida basada en el poder para disminuir los requisitos de ancho de banda en los clientes y los servidores sin requerir que los proxies mantengan información estatal sobre todo el espacio del juego, b) una \"autoridad\" dinámica \"Técnica de asignación para reducir la latencia (realizando verificaciones de consistencia localmente en el cliente siempre que sea posible) dividiendo la \"autoridad\" entre los clientes y los servidores por objeto, y c) proponiendo que la detección de trucos se pueda integrar en los proxiesproporcionó más información sobre el juego específico en lugar de usarlos puramente como proxies de comunicación (aunque esta idea aún no se ha implementado y es parte de nuestro trabajo futuro).6.",
                "En segundo lugar, propusimos un mecanismo de asignación mixto de \"autoridad\" que divide la \"autoridad\" para tomar decisiones sobre acciones y eventos dentro del juego entre los clientes y el servidor y argumentamos cómo una tarea de autoridad conduce a una mejor experiencia de juego sin sacrificar la consistencia deljuego.",
                "Tercero, para validar la viabilidad del mecanismo de asignación mixta de \"autoridad\", lo implementamos dentro de un MMOG llamado RPGQuest y describimos nuestra experiencia de implementación.",
                "En el trabajo futuro, proponemos implementar la arquitectura proxy de comunicaciones descrita en este documento e integrar el mecanismo mixto de \"autoridad\" dentro de esta arquitectura.",
                "También planeamos implementar una versión del juego RPGQuest con una asignación dinámica de \"autoridad\" para permitir a los jugadores la \"autoridad\" a recoger objetos cuando no hay otros jugadores cerca."
            ],
            "translated_text": "",
            "candidates": [
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "Autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "Autoridad",
                "autoridad",
                "Técnica de asignación para reducir la latencia (realizando verificaciones de consistencia localmente en el cliente siempre que sea posible) dividiendo la ",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad",
                "autoridad"
            ],
            "error": []
        }
    }
}