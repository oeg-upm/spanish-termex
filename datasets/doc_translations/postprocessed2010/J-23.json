{
    "id": "J-23",
    "original_text": "Frugality Ratios And Improved Truthful Mechanisms for Vertex Cover ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT In set-system auctions, there are several overlapping teams of agents, and a task that can be completed by any of these teams. The auctioneers goal is to hire a team and pay as little as possible. Examples of this setting include shortest-path auctions and vertex-cover auctions. Recently, Karlin, Kempe and Tamir introduced a new definition of frugality ratio for this problem. Informally, the frugality ratio is the ratio of the total payment of a mechanism to a desired payment bound. The ratio captures the extent to which the mechanism overpays, relative to perceived fair cost in a truthful auction. In this paper, we propose a new truthful polynomial-time auction for the vertex cover problem and bound its frugality ratio. We show that the solution quality is with a constant factor of optimal and the frugality ratio is within a constant factor of the best possible worst-case bound; this is the first auction for this problem to have these properties. Moreover, we show how to transform any truthful auction into a frugal one while preserving the approximation ratio. Also, we consider two natural modifications of the definition of Karlin et al., and we analyse the properties of the resulting payment bounds, such as monotonicity, computational hardness, and robustness with respect to the draw-resolution rule. We study the relationships between the different payment bounds, both for general set systems and for specific set-system auctions, such as path auctions and vertex-cover auctions. We use these new definitions in the proof of our main result for vertex-cover auctions via a bootstrapping technique, which may be of independent interest. Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1. INTRODUCTION In a set system auction there is a single buyer and many vendors that can provide various services. It is assumed that the buyers requirements can be satisfied by various subsets of the vendors; these subsets are called the feasible sets. A widely-studied class of setsystem auctions is path auctions, where each vendor is able to sell access to a link in a network, and the feasible sets are those sets whose links contain a path from a given source to a given destination; the study of these auctions has been initiated in the seminal paper by Nisan and Ronen [19] (see also [1, 10, 9, 6, 15, 7, 20]). We assume that each vendor has a cost of providing his services, but submits a possibly larger bid to the auctioneer. Based on these bids, the auctioneer selects a feasible subset of vendors, and makes payments to the vendors in this subset. Each selected vendor enjoys a profit of payment minus cost. Vendors want to maximise profit, while the buyer wants to minimise the amount he pays. A natural goal in this setting is to design a truthful auction, in which vendors have an incentive to bid their true cost. This can be achieved by paying each selected vendor a premium above her bid in such a way that the vendor has no incentive to overbid. An interesting question in mechanism design is how much the auctioneer will have to overpay in order to ensure truthful bids. In the context of path auctions this topic was first addressed by Archer and Tardos [1]. They define the frugality ratio of a mechanism as the ratio between its total payment and the cost of the cheapest path disjoint from the path selected by the mechanism. They show that, for a large class of truthful mechanisms for this problem, the frugality ratio is as large as the number of edges in the shortest path. Talwar [21] extends this definition of frugality ratio to general set systems, and studies the frugality ratio of the classical VCG mechanism [22, 4, 14] for many specific set systems, such as minimum spanning trees and set covers. While the definition of frugality ratio proposed by [1] is wellmotivated and has been instrumental in studying truthful mechanisms for set systems, it is not completely satisfactory. Consider, for example, the graph of Figure 1 with the costs cAB = cBC = A B C D Figure 1: The diamond graph 336 cCD = 0, cAC = cBD = 1. This graph is 2-connected and the VCG payment to the winning path ABCD is bounded. However, the graph contains no A-D path that is disjoint from ABCD, and hence the frugality ratio of VCG on this graph remains undefined. At the same time, there is no monopoly, that is, there is no vendor that appears in all feasible sets. In auctions for other types of set systems, the requirement that there exist a feasible solution disjoint from the selected one is even more severe: for example, for vertex-cover auctions (where vendors correspond to the vertices of some underlying graph, and the feasible sets are vertex covers) the requirement means that the graph must be bipartite. To deal with this problem, Karlin et al. [16] suggest a better benchmark, which is defined for any monopoly-free set system. This quantity, which they denote by ν, intuitively corresponds to the value of a cheapest Nash equilibrium. Based on this new definition, the authors construct new mechanisms for the shortest path problem and show that the overpayment of these mechanisms is within a constant factor of optimal. 1.1 Our results Vertex cover auctions We propose a truthful polynomial-time auction for vertex cover that outputs a solution whose cost is within a factor of 2 of optimal, and whose frugality ratio is at most 2Δ, where Δ is the maximum degree of the graph (Theorem 4). We complement this result by proving (Theorem 5) that for any Δ and n, there are graphs of maximum degree Δ and size Θ(n) for which any truthful mechanism has frugality ratio at least Δ/2. This means that the solution quality of our auction is with a factor of 2 of optimal and the frugality ratio is within a factor of 4 of the best possible bound for worst-case inputs. To the best of our knowledge, this is the first auction for this problem that enjoys these properties. Moreover, we show how to transform any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio. Frugality ratios Our vertex cover results naturally suggest two modifications of the definition of ν in [16]. These modifications can be made independently of each other, resulting in four different payment bounds TUmax, TUmin, NTUmax, and NTUmin, where NTUmin is equal to the original payment bound ν of in [16]. All four payment bounds arise as Nash equilibria of certain games (see the full version of this paper [8]); the differences between them can be seen as the price of initiative and the price of cooperation (see Section 3). While our main result about vertex cover auctions (Theorem 4) is with respect to NTUmin = ν, we make use of the new definitions by first comparing the payment of our mechanism to a weaker bound NTUmax, and then bootstrapping from this result to obtain the desired bound. Inspired by this application, we embark on a further study of these payment bounds. Our results here are as follows: 1. We observe (Proposition 1) that the four payment bounds always obey a particular order that is independent of the choice of the set system and the cost vector, namely, TUmin ≤ NTUmin ≤ NTUmax ≤ TUmax. We provide examples (Proposition 5 and Corollaries 1 and 2) showing that for the vertex cover problem any two consecutive bounds can differ by a factor of n − 2, where n is the number of agents. We then show (Theorem 2) that this separation is almost best possible for general set systems by proving that for any set system TUmax/TUmin ≤ n. In contrast, we demonstrate (Theorem 3) that for path auctions TUmax/TUmin ≤ 2. We provide examples (Propositions 2, 3 and 4) showing that this bound is tight. We see this as an argument for the study of vertexcover auctions, as they appear to be more representative of the general team -selection problem than the widely studied path auctions. 2. We show (Theorem 1) that for any set system, if there is a cost vector for which TUmin and NTUmin differ by a factor of α, there is another cost vector that separates NTUmin and NTUmax by the same factor and vice versa; the same is true for the pairs (NTUmin, NTUmax) and (NTUmax, TUmax). This symmetry is quite surprising, since, e.g., TUmin and NTUmax are obtained from NTUmin by two very different transformations. This observation suggests that the four payment bounds should be studied in a unified framework; moreover, it leads us to believe that the bootstrapping technique of Theorem 4 may have other applications. 3. We evaluate the payment bounds introduced here with respect to a checklist of desirable features. In particular, we note that the payment bound ν = NTUmin of [16] exhibits some counterintuitive properties, such as nonmonotonicity with respect to adding a new feasible set (Proposition 7), and is NP-hard to compute (Theorem 6), while some of the other payment bounds do not suffer from these problems. This can be seen as an argument in favour of using weaker but efficiently computable bounds NTUmax and TUmax. Related work Vertex-cover auctions have been studied in the past by Talwar [21] and Calinescu [5]. Both of these papers are based on the definition of frugality ratio used in [1]; as mentioned before, this means that their results only apply to bipartite graphs. Talwar [21] shows that the frugality ratio of VCG is at most Δ. However, since finding the cheapest vertex cover is an NP-hard problem, the VCG mechanism is computationally infeasible. The first (and, to the best of our knowledge, only) paper to investigate polynomial-time truthful mechanisms for vertex cover is [5]. This paper studies an auction that is based on the greedy allocation algorithm, which has an approximation ratio of log n. While the main focus of [5] is the more general set cover problem, the results of [5] imply a frugality ratio of 2Δ2 for vertex cover. Our results improve on those of [21] as our mechanism is polynomial-time computable, as well as on those of [5], as our mechanism has a better approximation ratio, and we prove a stronger bound on the frugality ratio; moreover, this bound also applies to the mechanism of [5]. 2. PRELIMINARIES In most of this paper, we discuss auctions for set systems. A set system is a pair (E, F), where E is the ground set, |E| = n, and F is a collection of feasible sets, which are subsets of E. Two particular types of set systems are of interest to us - shortest path systems, in which the ground set consists of all edges of a network, and the feasible sets are paths between two specified vertices s and t, and vertex cover systems, in which the elements of the ground set are the vertices of a graph, and the feasible sets are vertex covers of this graph. In set system auctions, each element e of the ground set is owned by an independent agent and has an associated non-negative cost ce. The goal of the centre is to select (purchase) a feasible set. Each element e in the selected set incurs a cost of ce. The elements that are not selected incur no costs. The auction proceeds as follows: all elements of the ground set make their bids, the centre selects a feasible set based on the bids and makes payments to the agents. Formally, an auction is defined by an allocation rule A : Rn → F and a payment rule P : Rn → Rn . The allocation rule takes as input a vector of bids and decides which of the sets in F should be selected. The payment rule also takes as input a vector of bids and decides how much to pay to each agent. The standard requirements are individual rationality, i.e., the payment to each agent should be at least as high as his incurred cost (0 for agents not in the selected set and ce for agents in the 337 selected set) and incentive compatibility, or truthfulness, i.e., each agents dominant strategy is to bid his true cost. An allocation rule is monotone if an agent cannot increase his chance of getting selected by raising his bid. Formally, for any bid vector b and any e ∈ E, if e ∈ A(b) then e ∈ A(b1, . . . , be, . . . , bn) for any be > be. Given a monotone allocation rule A and a bid vector b, the threshold bid te of an agent e ∈ A(b) is the highest bid of this agent that still wins the auction, given that the bids of other participants remain the same. Formally, te = sup{be ∈ R | e ∈ A(b1, . . . , be, . . . , bn)}. It is well known (see, e.g. [19, 13]) that any auction that has a monotone allocation rule and pays each agent his threshold bid is truthful; conversely, any truthful auction has a monotone allocation rule. The VCG mechanism is a truthful mechanism that maximises the social welfare and pays 0 to the losing agents. For set system auctions, this simply means picking a cheapest feasible set, paying each agent in the selected set his threshold bid, and paying 0 to all other agents. Note, however, that the VCG mechanism may be difficult to implement, since finding a cheapest feasible set may be intractable. If U is a set of agents, c(U) denotes P w∈U cw. Similarly, b(U) denotes P w∈U bw. 3. FRUGALITY RATIOS We start by reproducing the definition of the quantity ν from [16, Definition 4]. Let (E, F) be a set system and let S be a cheapest feasible set with respect to the true costs ce. Then ν(c, S) is the solution to the following optimisation problem. Minimise B = P e∈S be subject to (1) be ≥ ce for all e ∈ E (2) P e∈S\\T be ≤ P e∈T \\S ce for all T ∈ F (3) for every e ∈ S, there is a Te ∈ F such that e ∈ Te andP e ∈S\\Te be = P e ∈Te\\S ce The bound ν(c, S) can be seen as an outcome of a two-stage process, where first each agent e ∈ S makes a bid be stating how much it wants to be paid, and then the centre decides whether to accept these bids. The behaviour of both parties is affected by the following considerations. From the centres point of view, the set S must remain the most attractive choice, i.e., it must be among the cheapest feasible sets under the new costs ce = ce for e ∈ S, ce = be for e ∈ S (condition (2)). The reason for that is that if (2) is violated for some set T, the centre would prefer T to S. On the other hand, no agent would agree to a payment that does not cover his costs (condition (1)), and moreover, each agent tries to maximise his profit by bidding as high as possible, i.e., none of the agents can increase his bid without violating condition (2) (condition (3)). The centre wants to minimise the total payout, so ν(c, S) corresponds to the best possible outcome from the centres point of view. This definition captures many important aspects of our intuition about fair payments. However, it can be modified in two ways, both of which are still quite natural, but result in different payment bounds. First, we can consider the worst rather than the best possible outcome for the centre. That is, we can consider the maximum total payment that the agents can extract by jointly selecting their bids subject to (1), (2), and (3). Such a bound corresponds to maximising B subject to (1), (2), and (3) rather than minimising it. If it is the agents who make the original bids (rather than the centre), this kind of bidding behaviour is plausible. On the other hand, in a game in which the centre proposes payments to the agents in S and the agents accept them as long as (1), (2) and (3) are satisfied, we would be likely to observe a total payment of ν(c, S). Hence, the difference between these two definitions can be seen as the price of initiative. Second, the agents may be able to make payments to each other. In this case, if they can extract more money from the centre by agreeing on a vector of bids that violates individual rationality (i.e., condition (1)) for some bidders, they might be willing to do so, as the agents who are paid below their costs will be compensated by other members of the group. The bids must still be realistic, i.e., they have to satisfy be ≥ 0. The resulting change in payments can be seen as the price of co-operation and corresponds to replacing condition (1) with the following weaker condition (1∗ ): be ≥ 0 for all e ∈ E. (1∗ ) By considering all possible combinations of these modifications, we obtain four different payment bounds, namely • TUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1∗ ), (2), and (3). • TUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1∗ ), (2), and (3). • NTUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1), (2), and (3). • NTUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1), (2), (3). The abbreviations TU and NTU correspond, respectively, to transferable utility and non-transferable utility, i.e., the agents ability/inability to make payments to each other. For concreteness, we will take TUmin(c) to be TUmin(c, S) where S is the lexicographically least amongst the cheapest feasible sets. We define TUmax(c), NTUmin(c), NTUmax(c) and ν(c) similarly, though we will see in Section 6.3 that, in fact, NTUmin(c, S) and NTUmax(c, S) are independent of the choice of S. Note that the quantity ν(c) from [16] is NTUmin(c). The second modification (transferable utility) is more intuitively appealing in the context of the maximisation problem, as both assume some degree of co-operation between the agents. While the second modification can be made without the first, the resulting payment bound TUmin(c, S) is too strong to be a realistic benchmark, at least for general set systems. In particular, it can be smaller than the total cost of the cheapest feasible set S (see Section 6). Nevertheless, we provide the definition as well as some results about TUmin(c, S) in the paper, both for completeness and because we believe that it may help to understand which properties of the payment bounds are important for our proofs. Another possibility would be to introduce an additional constraint P e∈S be ≥P e∈S ce in the definition of TUmin(c, S) (note that this condition holds automatically for TUmax(c, S), as TUmax(c, S) ≥ NTUmax(c, S)); however, such a definition would have no direct game-theoretic interpretation, and some of our results (in particular, the ones in Section 4) would no longer be true. REMARK 1. For the payment bounds that are derived from maximisation problems, (i.e., TUmax(c, S) and NTUmax(c, S)), constraints of type (3) are redundant and can be dropped. Hence, TUmax(c, S) and NTUmax(c, S) are solutions to linear programs, and therefore can be computed in polynomial time as long as we have a separation oracle for constraints in (2). In contrast, 338 NTUmin(c, S) can be NP-hard to compute even if the size of F is polynomial (see Section 6). The first and third inequalities in the following observation follow from the fact that condition (1∗ ) is strictly weaker than condition (1). PROPOSITION 1. TUmin(c, S) ≤ NTUmin(c, S) ≤ NTUmax(c, S) ≤ TUmax(c, S). Let M be a truthful mechanism for (E, F). Let pM(c) denote the total payments of M when the actual costs are c. A frugality ratio of M with respect to a payment bound is the ratio between the payment of M and this payment bound. In particular, φTUmin(M) = sup c pM(c)/TUmin(c), φTUmax(M) = sup c pM(c)/TUmax(c), φNTUmin(M) = sup c pM(c)/NTUmin(c), φNTUmax(M) = sup c pM(c)/NTUmax(c). We conclude this section by showing that there exist set systems and respective cost vectors for which all four payment bounds are different. In the next section, we quantify this difference, both for general set systems, and for specific types of set systems, such as path auctions or vertex cover auctions. EXAMPLE 1. Consider the shortest-path auction on the graph of Figure 1. The cheapest feasible sets are all paths from A to D. It can be verified, using the reasoning of Propositions 2 and 3 below, that for the cost vector cAB = cCD = 2, cBC = 1, cAC = cBD = 5, we have • TUmax(c) = 10 (with bAB = bCD = 5, bBC = 0), • NTUmax(c) = 9 (with bAB = bCD = 4, bBC = 1), • NTUmin(c) = 7 (with bAB = bCD = 2, bBC = 3), • TUmin(c) = 5 (with bAB = bCD = 0, bBC = 5). 4. COMPARING PAYMENT BOUNDS 4.1 Path auctions We start by showing that for path auctions any two consecutive payment bounds can differ by at least a factor of 2. PROPOSITION 2. There is an instance of the shortest-path problem for which we have NTUmax(c)/NTUmin(c) ≥ 2. PROOF. This construction is due to David Kempe [17]. Consider the graph of Figure 1 with the edge costs cAB = cBC = cCD = 0, cAC = cBD = 1. Under these costs, ABCD is the cheapest path. The inequalities in (2) are bAB + bBC ≤ cAC = 1, bBC + bCD ≤ cBD = 1. By condition (3), both of these inequalities must be tight (the former one is the only inequality involving bAB, and the latter one is the only inequality involving bCD). The inequalities in (1) are bAB ≥ 0, bBC ≥ 0, bCD ≥ 0. Now, if the goal is to maximise bAB + bBC + bCD, the best choice is bAB = bCD = 1, bBC = 0, so NTUmax(c) = 2. On the other hand, if the goal is to minimise bAB + bBC + bCD, one should set bAB = bCD = 0, bBC = 1, so NTUmin(c) = 1. PROPOSITION 3. There is an instance of the shortest-path problem for which we have TUmax(c)/NTUmax(c) ≥ 2. PROOF. Again, consider the graph of Figure 1. Let the edge costs be cAB = cCD = 0, cBC = 1, cAC = cBD = 1. ABCD is the lexicographically-least cheapest path, so we can assume that S = {AB, BC, CD}. The inequalities in (2) are the same as in the previous example, and by the same argument both of them are, in fact, equalities. The inequalities in (1) are bAB ≥ 0, bBC ≥ 1, bCD ≥ 0. Our goal is to maximise bAB + bBC + bCD. If we have to respect the inequalities in (1), we have to set bAB = bCD = 0, bBC = 1, so NTUmax(c) = 1. Otherwise, we can set bAB = bCD = 1, bBC = 0, so TUmax(c) ≥ 2. PROPOSITION 4. There is an instance of the shortest-path problem for which we have NTUmin(c)/TUmin(c) ≥ 2. PROOF. This construction is also based on the graph of Figure 1. The edge costs are cAB = cCD = 1, cBC = 0, cAC = cBD = 1. ABCD is the lexicographically least cheapest path, so we can assume that S = {AB, BC, CD}. Again, the inequalities in (2) are the same, and both are, in fact, equalities. The inequalities in (1) are bAB ≥ 1, bBC ≥ 0, bCD ≥ 1. Our goal is to minimise bAB + bBC +bCD. If we have to respect the inequalities in (1), we have to set bAB = bCD = 1, bBC = 0, so NTUmin(c) = 2. Otherwise, we can set bAB = bCD = 0, bBC = 1, so TUmin(c) ≤ 1. In Section 4.4 (Theorem 3), we show that the separation results in Propositions 2, 3, and 4 are optimal. 4.2 Connections between separation results The separation results for path auctions are obtained on the same graph using very similar cost vectors. It turns out that this is not coincidental. Namely, we can prove the following theorem. THEOREM 1. For any set system (E, F), and any feasible set S, max c TUmax(c, S) NTUmax(c, S) = max c NTUmax(c, S) NTUmin(c, S) , max c NTUmax(c, S) NTUmin(c, S) = max c NTUmin(c, S) TUmin(c, S) , where the maximum is over all cost vectors c for which S is a cheapest feasible set. The proof of the theorem follows directly from the four lemmas proved below; more precisely, the first equality in Theorem 1 is obtained by combining Lemmas 1 and 2, and the second equality is obtained by combining Lemmas 3 and 4. We prove Lemma 1 here; the proofs of Lemmas 2- 4 are similar and can be found in the full version of this paper [8]. LEMMA 1. Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and TUmax(c, S)/NTUmax(c, S) = α. Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α. PROOF. Suppose that TUmax(c, S) = X and NTUmax(c, S) = Y where X/Y = α. Assume without loss of generality that S consists of elements 1, . . . , k, and let b1 = (b1 1, . . . , b1 k) and b2 = (b2 1, . . . , b2 k) be the bid vectors that correspond to TUmax(c, S) and NTUmax(c, S), respectively. Construct the cost vector c by setting ci = ci for i ∈ S, ci = min{ci, b1 i } for i ∈ S. Clearly, S is a cheapest set under c . Moreover, as the costs of elements outside of S remained the same, the right-hand sides of all constraints in (2) did not change, so any bid vector that satisfies (2) and (3) with respect to c, also satisfies them with respect to c . We will construct two bid vectors b3 and b4 that satisfy conditions (1), (2), and (3) for the cost vector c , and 339 X X X X X 0 X 12 3 X 4 5 6 Figure 2: Graph that separates payment bounds for vertex cover, n = 7 have P i∈S b3 i = X, P i∈S b4 i = Y . As NTUmax(c , S) ≥ X and NTUmin(c , S) ≤ Y , this implies the lemma. We can set b3 i = b1 i : this bid vector satisfies conditions (2) and (3) since b1 does, and we have b1 i ≥ min{ci, b1 i } = ci, which means that b3 satisfies condition (1). Furthermore, we can set b4 i = b2 i . Again, b4 satisfies conditions (2) and (3) since b2 does, and since b2 satisfies condition (1), we have b2 i ≥ ci ≥ ci, which means that b4 satisfies condition (1). LEMMA 2. Suppose c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α. Then there is a cost vector c such that S is a cheapest feasible set and TUmax(c , S)/NTUmax(c , S) ≥ α. LEMMA 3. Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α. Then there is a cost vector c such that S is a cheapest feasible set and NTUmin(c , S)/TUmin(c , S) ≥ α. LEMMA 4. Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmin(c, S)/TUmin(c, S) = α. Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α. 4.3 Vertex-cover auctions In contrast to the case of path auctions, for vertex-cover auctions the gap between NTUmin(c) and NTUmax(c) (and hence between NTUmax(c) and TUmax(c), and between TUmin(c) and NTUmin(c)) can be proportional to the size of the graph. PROPOSITION 5. For any n ≥ 3, there is a an n-vertex graph and a cost vector c for which TUmax(c)/NTUmax(c) ≥ n − 2. PROOF. The underlying graph consists of an (n − 1)-clique on the vertices X1, . . . , Xn−1, and an extra vertex X0 adjacent to Xn−1. The costs are cX1 = cX2 = · · · = cXn−2 = 0, cX0 = cXn−1 = 1. We can assume that S = {X0, X1, . . . , Xn−2} (this is the lexicographically first vertex cover of cost 1). For this set system, the constraints in (2) are bXi + bX0 ≤ cXn−1 = 1 for i = 1, . . . , n − 2. Clearly, we can satisfy conditions (2) and (3) by setting bXi = 1 for i = 1, . . . , n − 2, bX0 = 0. Hence, TUmax(c) ≥ n − 2. For NTUmax(c), there is an additional constraint bX0 ≥ 1, so the best we can do is to set bXi = 0 for i = 1, . . . , n − 2, bX0 = 1, which implies NTUmax(c) = 1. Combining Proposition 5 with Lemmas 1 and 3, we derive the following corollaries. COROLLARY 1. For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmax(c)/NTUmin(c) ≥ n − 2. COROLLARY 2. For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmin(c)/TUmin(c) ≥ n − 2. j+2ix ij P \\ P ij+2P \\ P yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 P \\ P Figure 3: Proof of Theorem 3: constraints for ˆPij and ˆPij+2 do not overlap 4.4 Upper bounds It turns out that the lower bound proved in the previous subsection is almost tight. More precisely, the following theorem shows that no two payment bounds can differ by more than a factor of n; moreover, this is the case not just for the vertex cover problem, but for general set systems. We bound the gap between TUmax(c) and TUmin(c). Since TUmin(c) ≤ NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), this bound applies to any pair of payment bounds. THEOREM 2. For any set system (E, F) and any cost vector c, we have TUmax(c)/TUmin(c) ≤ n. PROOF. Assume wlog that the winning set S consists of elements 1, . . . , k. Let c1, . . . , ck be the true costs of elements in S, let b1, . . . , bk be their bids that correspond to TUmin(c), and let b1 , . . . , bk be their bids that correspond to TUmax(c). Consider the conditions (2) and (3) for S. One can pick a subset L of at most k inequalities in (2) so that for each i = 1, . . . , k there is at least one inequality in L that is tight for bi. Suppose that the jth inequality in L is of the form bi1 + · · · + bit ≤ c(Tj \\ S). For bi, all inequalities in L are, in fact, equalities. Hence, by adding up all of them we obtain k P i=1,...,k bi ≥ P j=1,...,k c(Tj \\ S). On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c(Tj \\ S). Combining these two inequalities, we obtain nTUmin(c) ≥ kTUmin(c) ≥ TUmax(c). REMARK 2. The final line of the proof of Theorem 2 shows that, in fact, the upper bound on TUmax(c)/TUmin(c) can be strengthened to the size of the winning set, k. Note that in Proposition 5, as well as in Corollaries 1 and 2, k = n−1, so these results do not contradict each other. For path auctions, this upper bound can be improved to 2, matching the lower bounds of Section 4.1. THEOREM 3. For any instance of the shortest path problem, TUmax(c) ≤ 2 TUmin(c). PROOF. Given a network (G, s, t), assume without loss of generality that the lexicographically-least cheapest s-t path, P, in G is {e1, . . . , ek}, where e1 = (s, v1), e2 = (v1, v2), . . . , ek = (vk−1, t). Let c1, . . . , ck be the true costs of e1, . . . , ek, and let b = (b1, . . . , bk) and b = (b1 , . . . , bk ) be bid vectors that correspond to TUmin(c) and TUmax(c), respectively. For any i = 1, . . . , k, there is a constraint in (2) that is tight for bi with respect to the bid vector b , i.e., an s-t path Pi that avoids ei and satisfies b (P \\Pi) = c(Pi \\P). We can assume without loss of generality that Pi coincides with P up to some vertex xi, then deviates from P to avoid ei, and finally returns to P at a vertex 340 yi and coincides with P from then on (clearly, it might happen that s = xi or t = yi). Indeed, if Pi deviates from P more than once, one of these deviations is not necessary to avoid ei and can be replaced with the respective segment of P without increasing the cost of Pi. Among all paths of this form, let ˆPi be the one with the largest value of yi, i.e., the rightmost one. This path corresponds to an inequality Ii of the form bxi+1 + · · · + byi ≤ c( ˆPi \\ P). As in the proof of Theorem 2, we construct a set of tight constraints L such that every variable bi appears in at least one of these constraints; however, now we have to be more careful about the choice of constraints in L. We construct L inductively as follows. Start by setting L = {I1}. At the jth step, suppose that all variables up to (but not including) bij appear in at least one inequality in L. Add Iij to L. Note that for any j we have yij+1 > yij . This is because the inequalities added to L during the first j steps did not cover bij+1 . See Figure 3. Since yij+2 > yij+1 , we must also have xij+2 > yij : otherwise, ˆPij+1 would not be the rightmost constraint for bij+1 . Therefore, the variables in Iij+2 and Iij do not overlap, and hence no bi can appear in more than two inequalities in L. Now we follow the argument of the proof of Theorem 2 to finish. By adding up all of the (tight) inequalities in L for bi we obtain 2 P i=1,...,k bi ≥ P j=1,...,k c( ˆPj \\ P). On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c( ˆPj \\ P), so TUmax(c) ≤ 2TUmin(c). 5. TRUTHFUL MECHANISMS FOR VERTEX COVER Recall that for a vertex-cover auction on a graph G = (V, E), an allocation rule is an algorithm that takes as input a bid bv for each vertex and returns a vertex cover ˆS of G. As explained in Section 2, we can combine a monotone allocation rule with threshold payments to obtain a truthful auction. Two natural examples of monotone allocation rules are Aopt, i.e., the algorithm that finds an optimal vertex cover, and the greedy algorithm AGR. However, Aopt cannot be guaranteed to run in polynomial time unless P = NP and AGR has approximation ratio of log n. Another approximation algorithm for vertex cover, which has approximation ratio 2, is the local ratio algorithm ALR [2, 3]. This algorithm considers the edges of G one by one. Given an edge e = (u, v), it computes = min{bu, bv} and sets bu = bu − , bv = bv − . After all edges have been processed, ALR returns the set of vertices {v | bv = 0}. It is not hard to check that if the order in which the edges are considered is independent of the bids, then this algorithm is monotone as well. Hence, we can use it to construct a truthful auction that is guaranteed to select a vertex cover whose cost is within a factor of 2 from the optimal. However, while the quality of the solution produced by ALR is much better than that of AGR, we still need to show that its total payment is not too high. In the next subsection, we bound the frugality ratio of ALR (and, more generally, all algorithms that satisfy the condition of local optimality, defined later) by 2Δ, where Δ is the maximum degree of G. We then prove a matching lower bound showing that for some graphs the frugality ratio of any truthful auction is at least Δ/2. 5.1 Upper bound We say that an allocation rule is locally optimal if whenever bv >P w∼v bw, the vertex v is not chosen. Note that for any such rule the threshold bid of v satisfies tv ≤ P w∼v bw. CLAIM 1. The algorithms Aopt, AGR, and ALR are locally optimal. THEOREM 4. Any vertex cover auction M that has a locally optimal and monotone allocation rule and pays each agent his threshold bid has frugality ratio φNTUmin(M) ≤ 2Δ. To prove Theorem 4, we first show that the total payment of any locally optimal mechanism does not exceed Δc(V ). We then demonstrate that NTUmin(c) ≥ c(V )/2. By combining these two results, the theorem follows. LEMMA 5. Consider a graph G = (V, E) with maximum degree Δ. Let M be a vertex-cover auction on G that satisfies the conditions of Theorem 4. Then for any cost vector c, the total payment of M satisfies pM(c) ≤ Δc(V ). PROOF. First note that any such auction is truthful, so we can assume that each agents bid is equal to his cost. Let ˆS be the vertex cover selected by M. Then by local optimality pM(c) = X v∈ ˆS tv ≤ X v∈ ˆS X w∼v cw ≤ X w∈V Δcw = Δc(V ). We now derive a lower bound on TUmax(c); while not essential for the proof of Theorem 4, it helps us build the intuition necessary for that proof. LEMMA 6. For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, TUmax(c, S) ≥ c(V \\ S) PROOF. For a vertex w with at least one neighbour in S, let d(w) denote the number of neighbours that w has in S. Consider the bid vector b in which, for each v ∈ S, bv = P w∼v,w∈S cw d(w) . Then P v∈S bv = P v∈S P w∼v,w∈S cw/d(w) = P w /∈S cw = c(V \\ S). To finish we want to show that b is feasible in the sense that it satisfies (2). Consider a vertex cover T, and extend the bid vector b by assigning bv = cv for v /∈ S. Then b(T) = c(T \\S)+b(S∩T) ≥ c(T \\S)+ X v∈S∩T X w∈S∩T :w∼v cw d(w) , and since all edges between S ∩ T and S go to S ∩ T, the righthand-side is equal to c(T \\S)+ X w∈S∩T cw = c(T \\S)+c(S ∩T) = c(V \\S) = b(S). Next, we prove a lower bound on NTUmax(c, S); we will then use it to obtain a lower bound on NTUmin(c). LEMMA 7. For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmax(c, S) ≥ c(V \\ S) PROOF. If c(S) ≥ c(V \\ S), by condition (1) we are done. Therefore, for the rest of the proof we assume that c(S) < c(V \\ S). We show how to construct a bid vector (be)e∈S that satisfies conditions (1) and (2) such that b(S) ≥ c(V \\ S); clearly, this implies NTUmax(c, S) ≥ c(V \\ S). Recall that a network flow problem is described by a directed graph Γ = (VΓ, EΓ), a source node s ∈ VΓ, a sink node t ∈ VΓ, and a vector of capacity constraints ae, e ∈ EΓ. Consider a network (VΓ, EΓ) such that VΓ = V ∪{s, t}, EΓ = E1 ∪E2 ∪E3, where E1 = {(s, v) | v ∈ S}, E2 = {(v, w) | v ∈ S, w ∈ 341 V \\ S, (v, w) ∈ E}, E3 = {(w, t) | w ∈ V \\ S}. Since S is a vertex cover for G, no edge of E can have both of its endpoints in V \\ S, and by construction, E2 contains no edges with both endpoints in S. Therefore, the graph (V, E2) is bipartite with parts (S, V \\ S). Set the capacity constraints for e ∈ EΓ as follows: a(s,v) = cv, a(w,t) = cw, a(v,w) = +∞ for all v ∈ S, w ∈ V \\ S. Recall that a cut is a partition of the vertices in VΓ into two sets C1 and C2 so that s ∈ C1, t ∈ C2; we denote such a cut by C = (C1, C2). Abusing notation, we write e = (u, v) ∈ C if u ∈ C1, v ∈ C2 or u ∈ C2, v ∈ C1, and say that such an edge e = (u, v) crosses the cut C. The capacity of a cut C is computed as cap(C) = P (v,w)∈C a(v,w). We have cap(s, V ∪{t}) = c(S), cap({s} ∪ V, t) = c(V \\ S). Let Cmin = ({s} ∪ S ∪ W , {t} ∪ S ∪ W ) be a minimum cut in Γ, where S , S ⊆ S, W , W ⊆ V \\ S. See Figure 4. As cap(Cmin) ≤ cap(s, V ∪ {t}) = c(S) < +∞, and any edge in E2 has infinite capacity, no edge (u, v) ∈ E2 crosses Cmin. Consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }. Clearly, C = ({s} ∪ S ∪ W , {t}) is a minimum cut in Γ (otherwise, there would exist a smaller cut for Γ). As cap(C ) = c(W ), we have c(S ) ≥ c(W ). Now, consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }. Similarly, C = ({s}, S ∪ W ∪ {t}) is a minimum cut in Γ , cap(C ) = c(S ). As the size of a maximum flow from s to t is equal to the capacity of a minimum cut separating s and t, there exists a flow F = (fe)e∈EΓ of size c(S ). This flow has to saturate all edges between s and S , i.e., f(s,v) = cv for all v ∈ S . Now, increase the capacities of all edges between s and S to +∞. In the modified network, the capacity of a minimum cut (and hence the size of a maximum flow) is c(W ), and a maximum flow F = (fe)e∈EΓ can be constructed by greedily augmenting F. Set bv = cv for all v ∈ S , bv = f(s,v) for all v ∈ S . As F is constructed by augmenting F, we have bv ≥ cv for all v ∈ S, i.e., condition (1) is satisfied. Now, let us check that no vertex cover T ⊆ V can violate condition (2). Set T1 = T ∩ S , T2 = T ∩ S , T3 = T ∩ W , T4 = T ∩ W ; our goal is to show that b(S \\ T1) + b(S \\ T2) ≤ c(T3)+c(T4). Consider all edges (u, v) ∈ E such that u ∈ S \\T1. If (u, v) ∈ E2 then v ∈ T3 (no edge in E2 can cross the cut), and if u, v ∈ S then v ∈ T1∪T2. Hence, T1∪T3∪S is a vertex cover for G, and therefore c(T1)+ c(T3)+ c(S ) ≥ c(S) = c(T1)+ c(S \\ T1) + c(S ). Consequently, c(T3) ≥ c(S \\ T1) = b(S \\ T1). Now, consider the vertices in S \\T2. Any edge in E2 that starts in one of these vertices has to end in T4 (this edge has to be covered by T, and it cannot go across the cut). Therefore, the total flow out of S \\T2 is at most the total flow out of T4, i.e., b(S \\T2) ≤ c(T4). Hence, b(S \\ T1) + b(S \\ T2) ≤ c(T3) + c(T4). Finally, we derive a lower bound on the payment bound that is of interest to us, namely, NTUmin(c). LEMMA 8. For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmin(c, S) ≥ c(V \\ S) PROOF. Suppose for contradiction that c is a cost vector with minimum-cost vertex cover S and NTUmin(c, S) < c(V \\S). Let b be the corresponding bid vector and let c be a new cost vector with cv = bv for v ∈ S and cv = cv for v ∈ S. Condition (2) guarantees that S is an optimal solution to the cost vector c . Now compute a bid vector b corresponding to NTUmax(c , S). We S W S W s t T1 T3 T2 T4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 00 11 11 0 00 1 11 0 00 1 11 0 00 1 11 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00000 0000000000 0000000000 00000 0000000000 0000000000 00000 0000000000 11111 1111111111 1111111111 11111 1111111111 1111111111 11111 1111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 Figure 4: Proof of Lemma 7. Dashed lines correspond to edges in E \\ E2 claim that bv = cv for any v ∈ S. Indeed, suppose that bv > cv for some v ∈ S (bv = cv for v ∈ S by construction). As b satisfies conditions (1)-(3), among the inequalities in (2) there is one that is tight for v and the bid vector b. That is, b(S \\ T) = c(T \\ S). By the construction of c , c (S \\ T) = c (T \\ S). Now since bw ≥ cw for all w ∈ S, bv > cv implies b (S \\T) > c (S \\T) = c (T \\S). But this violates (2). So we now know b = c . Hence, we have NTUmax(c , S) = P v∈S bv = NTUmin(c, S) < c(V \\ S), giving a contradiction to the fact that NTUmax(c , S) ≥ c (V \\S) which we proved in Lemma 7. As NTUmin(c, S) satisfies condition (1), it follows that we have NTUmin(c, S) ≥ c(S). Together will Lemma 8, this implies NTUmin(c, S) ≥ max{c(V \\ S), c(S)} ≥ c(V )/2. Combined with Lemma 5, this completes the proof of Theorem 4. REMARK 3. As NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), our bound of 2Δ extends to the smaller frugality ratios that we consider, i.e., φNTUmax(M) and φTUmax(M). It is not clear whether it extends to the larger frugality ratio φTUmin(M). However, the frugality ratio φTUmin(M) is not realistic because the payment bound TUmin(c) is inappropriately low - we show in Section 6 that TUmin(c) can be significantly smaller than the total cost of a cheapest vertex cover. Extensions We can also apply our results to monotone vertex-cover algorithms that do not necessarily output locally-optimal solutions. To do so, we simply take the vertex cover produced by any such algorithm and transform it into a locally-optimal one, considering the vertices in lexicographic order and replacing a vertex v with its neighbours whenever bv > P u∼v bu. Note that if a vertex u has been added to the vertex cover during this process, it means that it has a neighbour whose bid is higher than bu, so after one pass all vertices in the vertex cover satisfy bv ≤ P u∼v bu. This procedure is monotone in bids, and it can only decrease the cost of the vertex cover. Therefore, using it on top of a monotone allocation rule with approx342 imation ratio α, we obtain a monotone locally-optimal allocation rule with approximation ratio α. Combining it with threshold payments, we get an auction with φNTUmin ≤ 2Δ. Since any truthful auction has a monotone allocation rule, this procedure transforms any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio. 5.2 Lower bound In this subsection, we prove that the upper bound of Theorem 4 is essentially optimal. Our proof uses the techniques of [9], where the authors prove a similar result for shortest-path auctions. THEOREM 5. For any Δ > 0 and any n, there exist a graph G of maximum degree Δ and size N > n such that for any truthful mechanism M on G we have φNTUmin(M) ≥ Δ/2. PROOF. Given n and Δ, set k = n/2Δ . Let G be the graph that consists of k blocks B1, . . . , Bk of size 2Δ each, where each Bi is a complete bipartite graph with parts Li and Ri, |Li| = |Ri| = Δ. We will consider two families of cost vectors for G. Under a cost vector x ∈ X, each block Bi has one vertex of cost 1; all other vertices cost 0. Under a cost vector y ∈ Y , there is one block that has two vertices of cost 1, one in each part, all other blocks have one vertex of cost 1, and all other vertices cost 0. Clearly, |X| = (2Δ)k , |Y | = k(2Δ)k−1 Δ2 . We will now construct a bipartite graph W with the vertex set X ∪ Y as follows. Consider a cost vector y ∈ Y that has two vertices of cost 1 in Bi; let these vertices be vl ∈ Li and vr ∈ Ri. By changing the cost of either of these vertices to 0, we obtain a cost vector in X. Let xl and xr be the cost vectors obtained by changing the cost of vl and vr, respectively. The vertex cover chosen by M(y) must either contain all vertices in Li or it must contain all vertices in Ri. In the former case, we put in W an edge from y to xl and in the latter case we put in W an edge from y to xr (if the vertex cover includes all of Bi, W contains both of these edges). The graph W has at least k(2Δ)k−1 Δ2 edges, so there must exist an x ∈ X of degree at least kΔ/2. Let y1, . . . , ykΔ/2 be the other endpoints of the edges incident to x, and for each i = 1, . . . , kΔ/2, let vi be the vertex whose cost is different under x and yi; note that all vi are distinct. It is not hard to see that NTUmin(x) ≤ k: the cheapest vertex cover contains the all-0 part of each block, and we can satisfy conditions (1)-(3) by letting one of the vertices in the all-0 part of each block to bid 1, while all other the vertices in the cheapest set bid 0. On the other hand, by monotonicity of M we have vi ∈ M(x) for i = 1, . . . , kΔ/2 (vi is in the winning set under yi, and x is obtained from yi by decreasing the cost of vi), and moreover, the threshold bid of each vi is at least 1, so the total payment of M on x is at least kΔ/2. Hence, φNTUmin(M) ≥ M(x)/NTUmin(x) ≥ Δ/2. REMARK 4. The lower bound of Theorem 5 can be generalised to randomised mechanisms, where a randomised mechanism is considered to be truthful if it can be represented as a probability distribution over truthful mechanisms. In this case, instead of choosing the vertex x ∈ X with the highest degree, we put both (y, xl) and (y, xr) into W , label each edge with the probability that the respective part of the block is chosen, and pick x ∈ X with the highest weighted degree. The argument can be further extended to a more permissive definition of truthfulness for randomised mechanisms, but this discussion is beyond the scope of this paper. 6. PROPERTIES OF PAYMENT BOUNDS In this section we consider several desirable properties of payment bounds and evaluate the four payment bounds proposed in this paper with respect to them. The particular properties that we are interested in are independence of the choice of S (Section 6.3), monotonicity (Section 6.4.1), computational hardness (Section 6.4.2), and the relationship with other reasonable bounds, such as the total cost of the cheapest set (Section 6.1), or the total VCG payment (Section 6.2). 6.1 Comparison with total cost Our first requirement is that a payment bound should not be less than the total cost of the selected set. Payment bounds are used to evaluate the performance of set-system auctions. The latter have to satisfy individual rationality, i.e., the payment to each agent must be at least as large as his incurred costs; it is only reasonable to require the payment bound to satisfy the same requirement. Clearly, NTUmax(c) and NTUmin(c) satisfy this requirement due to condition (1), and so does TUmax(c), since TUmax(c) ≥ NTUmax(c). However, TUmin(c) fails this test. The example of Proposition 4 shows that for path auctions, TUmin(c) can be smaller than the total cost by a factor of 2. Moreover, there are set systems and cost vectors for which TUmin(c) is smaller than the cost of the cheapest set S by a factor of Ω(n). Consider, for example, the vertex-cover auction for the graph of Proposition 5 with the costs cX1 = · · · = cXn−2 = cXn−1 = 1, cX0 = 0. The cost of a cheapest vertex cover is n − 2, and the lexicographically first vertex cover of cost n−2 is {X0, X1, . . . , Xn−2}. The constraints in (2) are bXi + bX0 ≤ cXn−1 = 1. Clearly, we can satisfy conditions (2) and (3) by setting bX1 = · · · = bXn−2 = 0, bX0 = 1, which means that TUmin(c) ≤ 1. This observation suggests that the payment bound TUmin(c) is too strong to be realistic, since it can be substantially lower than the cost of the cheapest feasible set. Nevertheless, some of the positive results that were proved in [16] for NTUmin(c) go through for TUmin(c) as well. In particular, one can show that if the feasible sets are the bases of a monopolyfree matroid, then φTUmin(VCG) = 1. To show that φTUmin(VCG) is at most 1, one must prove that the VCG payment is at most TUmin(c). This is shown for NTUmin(c) in the first paragraph of the proof of Theorem 5 in [16]. Their argument does not use condition (1) at all, so it also applies to TUmin(c). On the other hand, φTUmin(VCG) ≥ 1 since φTUmin(VCG) ≥ φNTUmin(VCG) and φNTUmin(VCG) ≥ 1 by Proposition 7 of [16] (and also by Proposition 6 below). 6.2 Comparison with VCG payments Another measure of suitability for payment bounds is that they should not result in frugality ratios that are less then 1 for wellknown truthful mechanisms. If this is indeed the case, the payment bound may be too weak, as it becomes too easy to design mechanisms that perform well with respect to it. It particular, a reasonable requirement is that a payment bound should not exceed the total payment of the classical VCG mechanism. The following proposition shows that NTUmax(c), and therefore also NTUmin(c) and TUmin(c), do not exceed the VCG payment pVCG(c). The proof essentially follows the argument of Proposition 7 of [16] and can be found in the full version of this paper [8]. PROPOSITION 6. φNTUmax(VCG) ≥ 1. Proposition 6 shows that none of the payment bounds TUmin(c), NTUmin(c) and NTUmax(c) exceeds the payment of VCG. However, the payment bound TUmax(c) can be larger that the total 343 VCG payment. In particular, for the instance in Proposition 5, the VCG payment is smaller than TUmax(c) by a factor of n − 2. We have already seen that TUmax(c) ≥ n − 2. On the other hand, under VCG, the threshold bid of any Xi, i = 1, . . . , n − 2, is 0: if any such vertex bids above 0, it is deleted from the winning set together with X0 and replaced with Xn−1. Similarly, the threshold bid of X0 is 1, because if X0 bids above 1, it can be replaced with Xn−1. So the VCG payment is 1. This result is not surprising: the definition of TUmax(c) implicitly assumes there is co-operation between the agents, while the computation of VCG payments does not take into account any interaction between them. Indeed, co-operation enables the agents to extract higher payments under VCG. That is, VCG is not groupstrategyproof. This suggests that as a payment bound, TUmax(c) may be too liberal, at least in a context where there is little or no co-operation between agents. Perhaps TUmax(c) can be a good benchmark for measuring the performance of mechanisms designed for agents that can form coalitions or make side payments to each other, in particular, group-strategyproof mechanisms. Another setting in which bounding φTUmax is still of some interest is when, for the underlying problem, the optimal allocation and VCG payments are NP-hard to compute. In this case, finding a polynomial-time computable mechanism with good frugality ratio with respect to TUmax(c) is a non-trivial task, while bounding the frugality ratio with respect to more challenging payment bounds could be too difficult. To illustrate this point, compare the proofs of Lemma 6 and Lemma 7: both require some effort, but the latter is much more difficult than the former. 6.3 The choice of S All payment bounds defined in this paper correspond to the total bid of all elements in the cheapest feasible set, where ties are broken lexicographically. While this definition ensures that our payment bounds are well-defined, the particular choice of the drawresolution rule appears arbitrary, and one might wonder if our payment bounds are sufficiently robust to be independent of this choice. It turns out that is indeed the case for NTUmin(c) and NTUmax(c), i.e., these bounds do not depend on the draw-resolution rule. To see this, suppose that two feasible sets S1 and S2 have the same cost. In the computation of NTUmin(c, S1), all vertices in S1 \\S2 would have to bid their true cost, since otherwise S2 would become cheaper than S1. Hence, any bid vector for S1 can only have be = ce for e ∈ S1 ∩ S2, and hence constitutes a valid bid vector for S2 and vice versa. A similar argument applies to NTUmax(c). However, for TUmin(c) and TUmax(c) this is not the case. For example, consider the set system E = {e1, e2, e3, e4, e5}, F = {S1 = {e1, e2}, S2 = {e2, e3, e4}, S3 = {e4, e5}} with the costs c1 = 2, c2 = c3 = c4 = 1, c5 = 3. The cheapest sets are S1 and S2. Now TUmax(c, S1) ≤ 4, as the total bid of the elements in S1 cannot exceed the total cost of S3. On the other hand, TUmax(c, S2) ≥ 5, as we can set b2 = 3, b3 = 0, b4 = 2. Similarly, TUmin(c, S1) = 4, because the inequalities in (2) are b1 ≤ 2 and b1 + b2 ≤ 4. But TUmin(c, S2) ≤ 3 as we can set b2 = 1, b3 = 2, b4 = 0. 6.4 Negative results for NTUmin(c) and TUmin(c) The results in [16] and our vertex cover results are proved for the frugality ratio φNTUmin. Indeed, it can be argued that φNTUmin is the best definition of frugality ratio, because among all reasonable payment bounds (i.e., ones that are at least as large as the cost of the cheapest feasible set), it is most demanding of the algorithm. However, NTUmin(c) is not always the easiest or the most natural payment bound to work with. In this subsection, we discuss several disadvantages of NTUmin(c) (and also TUmin(c)) as compared to NTUmax(c) and TUmax(c). 6.4.1 Nonmonotonicity The first problem with NTUmin(c) is that it is not monotone with respect to F, i.e., it may increase when one adds a feasible set to F. (It is, however, monotone in the sense that a losing agent cannot become a winner by raising his cost.) Intuitively, a good payment bound should satisfy this monotonicity requirement, as adding a feasible set increases the competition, so it should drive the prices down. Note that this indeed the case for NTUmax(c) and TUmax(c) since a new feasible set adds a constraint in (2), thus limiting the solution space for the respective linear program. PROPOSITION 7. Adding a feasible set to F can increase the value of NTUmin(c) by a factor of Ω(n). PROOF. Let E = {x, xx, y1, . . . , yn, z1, . . . , zn}. Set Y = {y1, . . . , yn}, S = Y ∪ {x}, Ti = Y \\ {yi} ∪ {zi}, i = 1, . . . , n, and suppose that F = {S, T1, . . . , Tn}. The costs are cx = 0, cxx = 0, cyi = 0, czi = 1 for i = 1, . . . , n. Note that S is the cheapest feasible set. Let F = F ∪ {T0}, where T0 = Y ∪ {xx}. For F, the bid vector by1 = · · · = byn = 0, bx = 1 satisfies (1), (2), and (3), so NTUmin(c) ≤ 1. For F , S is still the lexicographically-least cheapest set. Any optimal solution has bx = 0 (by constraint in (2) with T0). Condition (3) for yi implies bx + byi = czi = 1, so byi = 1 and NTUmin(c) = n. For path auctions, it has been shown [18] that NTUmin(c) is non-monotone in a slightly different sense, i.e., with respect to adding a new edge (agent) rather than a new feasible set (a team of existing agents). REMARK 5. We can also show that NTUmin(c) is non-monotone for vertex cover. In this case, adding a new feasible set corresponds to deleting edges from the graph. It turns out that deleting a single edge can increase NTUmin(c) by a factor of n − 2; the construction is similar to that of Proposition 5. 6.4.2 NP-Hardness Another problem with NTUmin(c, S) is that it is NP-hard to compute even if the number of feasible sets is polynomial in n. Again, this puts it at a disadvantage compared to NTUmax(c, S) and TUmax(c, S) (see Remark 1). THEOREM 6. Computing NTUmin(c) is NP-hard, even when the lexicographically-least feasible set S is given in the input. PROOF. We reduce EXACT COVER BY 3-SETS(X3C) to our problem. An instance of X3C is given by a universe G = {g1, . . . , gn} and a collection of subsets C1, . . . , Cm, Ci ⊂ G, |Ci| = 3, where the goal is to decide whether one can cover G by n/3 of these sets. Observe that if this is indeed the case, each element of G is contained in exactly one set of the cover. LEMMA 9. Consider a minimisation problem P of the following form: Minimise P i=1,...,n bi under conditions (1) bi ≥ 0 for all i = 1, . . . , n; (2) for any j = 1, . . . , k we have P bi∈Sj bi ≤ aj, where Sj ⊆ {b1, . . . , bn}; (3) for each bj , one of the constraints in (2) involving it is tight. For any such P, one can construct a set system S and a vector of costs c such that NTUmin(c) is the optimal solution to P. PROOF. The construction is straightforward: there is an element of cost 0 for each bi, an element of cost aj for each aj, the feasible solutions are {b1, . . . , bn}, or any set obtained from {b1, . . . , bn} by replacing the elements in Sj by aj. 344 By this lemma, all we have to do to prove Theorem 6 is to show how to solve X3C by using the solution to a minimisation problem of the form given in Lemma 9. We do this as follows. For each Ci, we introduce 4 variables xi, ¯xi, ai, and bi. Also, for each element gj of G there is a variable dj. We use the following set of constraints: • In (1), we have constraints xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 for all i = 1, . . . , m, j = 1, . . . , n. • In (2), for all i = 1, . . . , m, we have the following 5 constraints: xi + ¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi + bi ≤ 1. Also, for all j = 1, . . . , n we have a constraint of the form xi1 + · · · + xik + dj ≤ 1, where Ci1 , . . . , Cik are the sets that contain gj. The goal is to minimize z = P i(xi + ¯xi + ai + bi) + P j dj. Observe that for each j, there is only one constraint involving dj , so by condition (3) it must be tight. Consider the two constraints involving ai. One of them must be tight, and therefore xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1. Hence, for any feasible solution to (1)-(3) we have z ≥ m. Now, suppose that there is an exact set cover. Set dj = 0 for j = 1, . . . , n. Also, if Ci is included in this cover, set xi = 1, ¯xi = ai = bi = 0, otherwise set ¯xi = 1, xi = ai = bi = 0. Clearly, all inequalities in (2) are satisfied (we use the fact that each element is covered exactly once), and for each variable, one of the constraints involving it is tight. This assignment results in z = m. Conversely, suppose there is a feasible solution with z = m. As each addend of the form xi + ¯xi + ai + bi contributes at least 1, we have xi + ¯xi + ai + bi = 1 for all i, dj = 0 for all j. We will now show that for each i, either xi = 1 and ¯xi = 0, or xi = 0 and ¯xi = 1. For the sake of contradiction, suppose that xi = δ < 1, ¯xi = δ < 1. As one of the constraints involving ai must be tight, we have ai ≥ min{1 − δ, 1 − δ }. Similarly, bi ≥ min{1 − δ, 1 − δ }. Hence, xi + ¯xi + ai + bi = 1 = δ +δ +2 min{1−δ, 1−δ } > 1. To finish the proof, note that for each j = 1, . . . , m we have xi1 + · · · + xik + dj = 1 and dj = 0, so the subsets that correspond to xi = 1 constitute a set cover. REMARK 6. In the proofs of Proposition 7 and Theorem 6 all constraints in (1) are of the form be ≥ 0. Hence, the same results are true for TUmin(c). REMARK 7. For shortest-path auctions, the size of F can be superpolynomial. However, there is a polynomial-time separation oracle for constraints in (2) (to construct one, use any algorithm for finding shortest paths), so one can compute NTUmax(c) and TUmax(c) in polynomial time. On the other hand, recently and independently it was shown [18] that computing NTUmin(c) for shortest-path auctions is NP-hard. 7. REFERENCES [1] A. Archer and E. Tardos, Frugal path mechanisms. In Proceedings of the 13th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 991-999, 2002 [2] R. Bar-Yehuda, K. Bendel, A. Freund, and D. Rawitz, Local ratio: A unified framework for approximation algorithms. In Memoriam: Shimon Even 1935-2004. ACM Comput. Surv., 36(4):422-463, 2004 [3] R. Bar-Yehuda and S. Even, A local-ratio theorem for approximating the weighted vertex cover problem. Annals of Discrete Mathematics, 25:27-46, 1985 [4] E. Clarke, Multipart pricing of public goods. Public Choice, 8:17-33, 1971 [5] G. Calinescu, Bounding the payment of approximate truthful mechanisms. In Proceedings of the 15th International Symposium on Algorithms and Computation, pages 221-233, 2004 [6] A. Czumaj and A. Ronen, On the expected payment of mechanisms for task allocation. In Proceedings of the 5th ACM Conference on Electronic Commerce (EC04), 2004 [7] E. Elkind, True costs of cheap labor are hard to measure: edge deletion and VCG payments in graphs. In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [8] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Frugality ratios and improved truthful mechanisms for vertex cover. Available from http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai, and K. Steiglitz, Frugality in path auctions. In Proceedings of the 15th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 694-702, 2004 [10] J. Feigenbaum, C. H. Papadimitriou, R. Sami, and S. Shenker, A BGP-based mechanism for lowest-cost routing. In Proceedings of the 21st Symposium on Principles of Distributed Computing, pages 173-182, 2002 [11] A. Fiat, A. Goldberg, J. Hartline, and A. Karlin, Competitive generalized auctions. In Proceedings of the 34th Annual ACM Symposium on Theory of Computation, pages 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra and A. Verma, Coalitional games on graphs: core structures, substitutes and frugality. In Proceedings of the 4th ACM Conference on Electronic Commerce (EC03), 2005 [13] A. Goldberg, J. Hartline, and A. Wright, Competitive auctions and digital goods. In Proceedings of the 12th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2001 [14] T. Groves, Incentives in teams. Econometrica, 41(4):617-631, 1973 [15] N. Immorlica, D. Karger, E. Nikolova, and R. Sami, First-price path auctions. In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [16] A. R. Karlin, D. Kempe, and T. Tamir, Beyond VCG: frugality of truthful mechanisms. In Proceedings of the 46th Annual IEEE Symposium on Foundations of Computer Science, pages 615-626, 2005 [17] D. Kempe, Personal communication, 2006 [18] N. Chen, A. R. Karlin, Cheap labor can be expensive, In Proceedings of the 18th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2007 [19] N. Nisan and A. Ronen, Algorithmic mechanism design. In Proceedings of the 31st Annual ACM Symposium on Theory of Computation, pages 129-140, 1999 [20] A. Ronen and R. Talisman, Towards generic low payment mechanisms for decentralized task allocation. In Proceedings of the 7th International IEEE Conference on E-Commerce Technology, 2005 [21] K. Talwar, The price of truth: frugality in truthful mechanisms. In Proceedings of 20th International Symposium on Theoretical Aspects of Computer Science, 2003 [22] W. Vickrey, Counterspeculation, auctions, and competitive sealed tenders. Journal of Finance, 16:8-37, 1961 345",
    "original_translation": "Ratios de frugalidad y mecanismos veraces mejorados para la cobertura de vértices ∗ Edith Elkind Hebreos Universidad de Jerusalén, Israel y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido Leslie Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool 3BX, 3BX, 3bx,Resumen del Reino Unido En las subastas del sistema establecido, hay varios equipos superpuestos de agentes y una tarea que cualquiera de estos equipos puede completar. El objetivo de los subastadores es contratar un equipo y pagar lo menos posible. Los ejemplos de este entorno incluyen subastas de ruta corta y subastas de cobertura de vértices. Recientemente, Karlin, Kempe y Tamir introdujeron una nueva definición de relación de frugalidad para este problema. Informalmente, la relación de frugalidad es la relación del pago total de un mecanismo a un pago deseado. La proporción captura la medida en que el mecanismo supera sobreviven, en relación con el costo justo percibido en una subasta veraz. En este artículo, proponemos una nueva subasta de tiempo polinomial sincero para el problema de cobertura del vértice y vinculamos su relación de frugalidad. Mostramos que la calidad de la solución es con un factor constante de óptima y la relación de frugalidad está dentro de un factor constante del mejor peor límite posible;Esta es la primera subasta para que este problema tenga estas propiedades. Además, mostramos cómo transformar cualquier subasta veraz en una frugal mientras preservamos la relación de aproximación. Además, consideramos dos modificaciones naturales de la definición de Karlin et al., Y analizamos las propiedades de los límites de pago resultantes, como la monotonicidad, la dureza computacional y la robustez con respecto a la regla de resolución de dibujo. Estudiamos las relaciones entre los diferentes límites de pago, tanto para sistemas de conjunto general como para subastas específicas del sistema de conjunto, como subastas de ruta y subastas de cubierta de vértices. Utilizamos estas nuevas definiciones en la prueba de nuestro resultado principal para las subastas de cobertura de vértice a través de una técnica de arranque, que puede ser de interés independiente. Categorías y descriptores de sujetos F.2 [Teoría de la computación]: Análisis de algoritmos y complejidad del problema;J.4 [Aplicaciones informáticas]: Ciencias sociales y conductuales-economía Algoritmos de términos generales, Economía, Teoría 1. Introducción En una subasta del sistema establecido, hay un solo comprador y muchos proveedores que pueden proporcionar diversos servicios. Se supone que los requisitos de los compradores pueden ser satisfechos por varios subconjuntos de los proveedores;Estos subconjuntos se llaman los conjuntos factibles. Una clase ampliamente estudiada de subastas de SetSystem son las subastas de ruta, donde cada proveedor puede vender acceso a un enlace en una red, y los conjuntos factibles son aquellos conjuntos cuyos enlaces contienen una ruta desde una fuente determinada a un destino dado;El estudio de estas subastas ha sido iniciado en el documento seminal por Nisan y Ronen [19] (ver también [1, 10, 9, 6, 15, 7, 20]). Suponemos que cada proveedor tiene el costo de proporcionar sus servicios, pero presenta una oferta posiblemente mayor al subastador. Según estas ofertas, el subastador selecciona un subconjunto factible de proveedores y realiza pagos a los proveedores en este subconjunto. Cada proveedor seleccionado disfruta de una ganancia de pago menos costo. Los proveedores quieren maximizar las ganancias, mientras que el comprador quiere minimizar la cantidad que paga. Un objetivo natural en este entorno es diseñar una subasta veraz, en la que los proveedores tienen un incentivo para ofertar su verdadero costo. Esto se puede lograr pagando a cada proveedor seleccionado una prima por encima de su oferta de tal manera que el proveedor no tenga ningún incentivo para superar. Una pregunta interesante en el diseño del mecanismo es cuánto tendrá que pagar de más el subastador para garantizar las ofertas veraz. En el contexto de las subastas de ruta, Archer y Tardos abordaron por primera vez este tema [1]. Definen la relación de frugalidad de un mecanismo como la relación entre su pago total y el costo de la ruta más barata de la ruta seleccionada por el mecanismo. Muestran que, para una gran clase de mecanismos veraces para este problema, la relación de frugalidad es tan grande como el número de bordes en el camino más corto. Talwar [21] extiende esta definición de relación de frugalidad a los sistemas de conjuntos generales, y estudia la relación de frugalidad del mecanismo VCG clásico [22, 4, 14] para muchos sistemas de conjuntos específicos, como árboles mínimos y cubiertas de establecimiento. Si bien la definición de relación de frugalidad propuesta por [1] está bien modificada y ha sido fundamental para estudiar mecanismos veraces para los sistemas establecidos, no es completamente satisfactorio. Considere, por ejemplo, el gráfico de la Figura 1 con Costos CAB = CBC = A B C D Figura 1: El gráfico de diamantes 336 CCD = 0, CAC = CBD = 1. Este gráfico está conectado 2 y el pago de VCG a la ruta ganadora ABCD está limitado. Sin embargo, el gráfico no contiene una ruta A-D que sea disjunta de ABCD y, por lo tanto, la relación de frugalidad de VCG en este gráfico permanece indefinida. Al mismo tiempo, no hay monopolio, es decir, no hay un proveedor que aparezca en todos los conjuntos factibles. En las subastas para otros tipos de sistemas SET, el requisito de que exista una solución factible disjunta de la seleccionada es aún más severa: por ejemplo, para subastas de cobertura de vértice (donde los proveedores corresponden a los vértices de algún gráfico subyacente y el factibleLos conjuntos son cubiertas de vértice) el requisito significa que el gráfico debe ser bipartito. Para lidiar con este problema, Karlin et al.[16] sugieren un mejor punto de referencia, que se define para cualquier sistema de conjunto sin monopolio. Esta cantidad, que denotan por ν, se corresponde intuitivamente al valor de un equilibrio de Nash más barato. Según esta nueva definición, los autores construyen nuevos mecanismos para el problema de ruta más corto y muestran que el pago excesivo de estos mecanismos está dentro de un factor constante de óptimo.1.1 Nuestros resultados Subastas de cubierta de vértice Proponemos una subasta de tiempo polinómico sincero para la cobertura de vértice que genera una solución cuyo costo está dentro de un factor de 2 de óptimo, y cuya relación de frugalidad es como máximo 2Δ, donde δ es el máximo grado de gráfico(Teorema 4). Complementamos este resultado probando (Teorema 5) que para cualquier δ y N, hay gráficos de grado máximo δ y tamaño θ (n) para los cuales cualquier mecanismo veraz tiene una relación de frugalidad al menos δ/2. Esto significa que la calidad de la solución de nuestra subasta es con un factor de 2 de la relación óptima y la frugalidad está dentro de un factor de 4 de los mejores límites posibles para las entradas en el peor de los casos. Hasta donde sabemos, esta es la primera subasta para este problema que disfruta de estas propiedades. Además, mostramos cómo transformar cualquier mecanismo veraz para el problema de cobertura de vértice en uno frugal mientras preservamos la relación de aproximación. Ratios de frugalidad Nuestros resultados de la cubierta de vértice sugieren dos modificaciones de la definición de ν en [16]. Estas modificaciones se pueden hacer independientemente entre sí, lo que resulta en cuatro límites de pago diferentes tumax, tumin, ntumax y ntumin, donde ntumin es igual al pago original unido ν de en [16]. Los cuatro límites de pago surgen como equilibrios Nash de ciertos juegos (ver la versión completa de este documento [8]);Las diferencias entre ellos pueden verse como el precio de la iniciativa y el precio de la cooperación (ver Sección 3). Si bien nuestro resultado principal sobre las subastas de cobertura del vértice (Teorema 4) es con respecto a ntumin = ν, hacemos uso de las nuevas definiciones comparando primero el pago de nuestro mecanismo con un NTUMAX más débil, y luego arrancando de este resultado para obtener el resultado para obtener el resultado.deseado límite. Inspirados en esta aplicación, nos embarcamos en un estudio adicional de estos límites de pago. Nuestros resultados aquí son los siguientes: 1. Observamos (Proposición 1) que los cuatro límites de pago siempre obedecen un orden particular que es independiente de la elección del sistema establecido y el vector de costos, a saber, tumin ≤ ntumin ≤ ntumax ≤ tumax. Proporcionamos ejemplos (Proposición 5 y Corolarios 1 y 2) que demuestren que para el problema de la cubierta del vértice cualquiera de los dos límites consecutivos puede diferir en un factor de N - 2, donde n es el número de agentes. Luego mostramos (Teorema 2) que esta separación es casi mejor posible para los sistemas de conjunto general al demostrar que para cualquier sistema establecido tumax/tumin ≤ n.Por el contrario, demostramos (Teorema 3) que para las subastas de ruta Tumax/Tumin ≤ 2. Proporcionamos ejemplos (proposiciones 2, 3 y 4) que muestran que este límite es apretado. Vemos esto como un argumento para el estudio de las subastas de VertexCover, ya que parecen ser más representativos del problema del equipo general -selección que las subastas de ruta ampliamente estudiadas.2. Mostramos (Teorema 1) que para cualquier sistema establecido, si hay un vector de costo para el cual el tumin y la ntumin difieren en un factor de α, hay otro vector de costo que separa Ntumin y Ntumax por el mismo factor y viceversa;Lo mismo es cierto para los pares (Ntumin, NTUMAX) y (NTUMAX, TUMAX). Esta simetría es bastante sorprendente, ya que, por ejemplo, Tumin y Ntumax se obtienen de Ntumin por dos transformaciones muy diferentes. Esta observación sugiere que los cuatro límites de pago deben estudiarse en un marco unificado;Además, nos lleva a creer que la técnica de arranque del Teorema 4 puede tener otras aplicaciones.3. Evaluamos los límites de pago introducidos aquí con respecto a una lista de verificación de características deseables. En particular, observamos que el pago unido ν = ntumin de [16] exhibe algunas propiedades contradictorias, como la no monotonicidad con respecto a agregar un nuevo conjunto factible (Proposición 7), y es np-Hard para calcular (Teorema 6), mientras queAlgunos de los otros límites de pago no sufren de estos problemas. Esto puede verse como un argumento a favor del uso de límites más débiles pero eficientemente computables ntumax y tumax. Trabajo relacionado Las subastas de cobertura de vértices han sido estudiadas en el pasado por Talwar [21] y Calinescu [5]. Ambos documentos se basan en la definición de relación de frugalidad utilizada en [1];Como se mencionó anteriormente, esto significa que sus resultados solo se aplican a gráficos bipartitos. Talwar [21] muestra que la relación de frugalidad de VCG es como máximo δ. Sin embargo, dado que encontrar la cobertura de vértice más barata es un problema NP-Hard, el mecanismo VCG es computacionalmente inviable. El primero (y, según nuestro conocimiento, solo) documento para investigar los mecanismos veraz de tiempo polinomial para la cobertura de vértices es [5]. Este artículo estudia una subasta basada en el algoritmo de asignación codiciosa, que tiene una relación de aproximación de log n.Si bien el enfoque principal de [5] es el problema de la cubierta del conjunto más general, los resultados de [5] implican una relación de frugalidad de 2Δ2 para la cubierta del vértice. Nuestros resultados mejoran en los de [21] ya que nuestro mecanismo es computable en tiempo polinómico, así como en los de [5], ya que nuestro mecanismo tiene una mejor relación de aproximación, y demostramos un límite más fuerte en la relación de frugalidad;Además, este límite también se aplica al mecanismo de [5].2. Preliminares En la mayor parte de este documento, discutimos las subastas para los sistemas SET. Un sistema establecido es un par (E, F), donde E es el conjunto de tierra, | E |= n, y F es una colección de conjuntos factibles, que son subconjuntos de E. Dos tipos particulares de sistemas de conjuntos son de interés para nosotros, los sistemas de ruta más cortos, en los que el conjunto de tierra consta de todos los bordes de una red, y los factiblesLos conjuntos son rutas entre dos vértices especificados S y T, y los sistemas de cubierta de vértices, en los que los elementos del conjunto de tierra son los vértices de un gráfico, y los conjuntos factibles son cubiertas de vértice de este gráfico. En las subastas del sistema establecidas, cada elemento E del conjunto de tierra es propiedad de un agente independiente y tiene un costo no negativo asociado. El objetivo del centro es seleccionar (comprar) un conjunto factible. Cada elemento E en el conjunto seleccionado incurre en un costo de CE. Los elementos que no se seleccionan no incurren en costos. La subasta se realiza de la siguiente manera: todos los elementos del conjunto de terrenos hacen que sus ofertas, el Centro seleccione un conjunto factible basado en las ofertas y realice pagos a los agentes. Formalmente, una subasta se define mediante una regla de asignación A: Rn → F y una regla de pago P: RN → RN. La regla de asignación toma como entrada un vector de ofertas y decide cuáles de los conjuntos en F deben ser seleccionados. La regla de pago también toma como entrada un vector de ofertas y decide cuánto pagar a cada agente. Los requisitos estándar son la racionalidad individual, es decir, el pago a cada agente debe ser al menos tan alto como su costo incurrido (0 para agentes que no están en el conjunto seleccionado y CE para agentes en el conjunto 337 seleccionado) y la compatibilidad de incentivos, o la veracidad,es decir, la estrategia dominante de cada agente es ofertar su verdadero costo. Una regla de asignación es monótona si un agente no puede aumentar sus posibilidades de ser seleccionado al aumentar su oferta. Formalmente, para cualquier vector de oferta B y cualquier e ∈ E, si e ∈ A (b) entonces e ∈ A (b1, ..., be, ..., bn) para cualquier be> be. Dada una regla de asignación monótona A y un vector de oferta B, la oferta umbral de un agente e ∈ A (b) es la oferta más alta de este agente que todavía gana la subasta, dado que las ofertas de otros participantes siguen siendo las mismas. Formalmente, te = sup {be ∈ R |e ∈ A (B1, ..., Be, ..., Bn)}. Es bien sabido (ver, por ejemplo, [19, 13]) que cualquier subasta que tenga una regla de asignación monótona y paga a cada agente su oferta umbral es sincera;Por el contrario, cualquier subasta veraz tiene una regla de asignación monótona. El mecanismo VCG es un mecanismo veraz que maximiza el bienestar social y paga 0 a los agentes perdedores. Para las subastas del sistema establecidas, esto simplemente significa elegir un conjunto factible más barato, pagar a cada agente en el Set su oferta de umbral seleccionada y pagar 0 a todos los demás agentes. Sin embargo, tenga en cuenta que el mecanismo VCG puede ser difícil de implementar, ya que encontrar un conjunto factible más barato puede ser intratable. Si U es un conjunto de agentes, C (U) denota P W∈U CW. Del mismo modo, B (U) denota P W∈U BW.3. Ratios de frugalidad comenzamos reproduciendo la definición de la cantidad ν de [16, definición 4]. Sea (e, f) un sistema establecido y sea un conjunto más barato factible con respecto a los costos verdaderos CE. Entonces ν (C, S) es la solución al siguiente problema de optimización. Minimizar b = p e∈S estar sujeto a (1) ser ≥ ce para todos e ∈ E (2) p e∈S \\ t be ≤ p e∈T \\ s ce para todos t ∈ F (3) para cada e∈ S, hay un te ∈ F tal que e ∈ Te andp e ∈S \\ te be = p e ∈Te \\ s ce el límite ν (c, s) puede verse como un resultado de un proceso de dos etapas,donde primero cada agente e ∈ S hace una oferta indicando cuánto quiere pagar, y luego el centro decide si aceptar estas ofertas. El comportamiento de ambas partes se ve afectado por las siguientes consideraciones. Desde el punto de vista de los centros, el conjunto S debe seguir siendo la opción más atractiva, es decir, debe estar entre los conjuntos factibles más baratos bajo los nuevos costos Ce = Ce para e ∈ S, Ce = Be para e ∈ S (condición (2)). La razón de esto es que si (2) se viole para algún conjunto T, el Centro preferiría T a S. Por otro lado, ningún agente estaría de acuerdo con un pago que no cubra sus costos (condición (1)),Y además, cada agente intenta maximizar sus ganancias al ofertar lo más alto posible, es decir, ninguno de los agentes puede aumentar su oferta sin violar la condición (2) (condición (3)). El Centro quiere minimizar el pago total, por lo que ν (c, s) corresponde al mejor resultado posible desde el punto de vista de los centros. Esta definición captura muchos aspectos importantes de nuestra intuición sobre los pagos justos. Sin embargo, se puede modificar de dos maneras, las cuales siguen siendo bastante naturales, pero dan como resultado diferentes límites de pago. Primero, podemos considerar lo peor en lugar del mejor resultado posible para el centro. Es decir, podemos considerar el pago total máximo que los agentes pueden extraer seleccionando conjuntamente sus ofertas sujetas a (1), (2) y (3). Tal límite corresponde a maximizar B sujeto a (1), (2) y (3) en lugar de minimizarlo. Si son los agentes los que hacen las ofertas originales (en lugar del centro), este tipo de comportamiento de licitación es plausible. Por otro lado, en un juego en el que el centro propone pagos a los agentes de S y los agentes los aceptan siempre que (1), (2) y (3) estén satisfechos, es probable que observemos un pago totalde ν (c, s). Por lo tanto, la diferencia entre estas dos definiciones puede verse como el precio de la iniciativa. En segundo lugar, los agentes pueden hacer pagos entre sí. En este caso, si pueden extraer más dinero del centro al acordar un vector de ofertas que viole la racionalidad individual (es decir, condición (1)) para algunos postores, podrían estar dispuestos a hacerlo, ya que los agentes que se les pagaPor debajo de sus costos serán compensados por otros miembros del grupo. Las ofertas aún deben ser realistas, es decir, tienen que satisfacer ser ≥ 0. El cambio resultante en los pagos puede verse como el precio de la cooperación y corresponde a la condición de reemplazo (1) con la siguiente condición más débil (1 ∗): ser ≥ 0 para todos e ∈ E. (1 ∗) considerando todo lo posibleCombinaciones de estas modificaciones, obtenemos cuatro límites de pago diferentes, a saber, el tumin (C, S), que es la solución al problema de optimización, B sujeto a (1 ∗), (2) y (3).• Tumax (C, S), que es la solución al problema de optimización, maximice B sujeto a (1 ∗), (2) y (3).• Ntumin (C, S), que es la solución al problema de optimización, minimiza B sujeto a (1), (2) y (3).• NTUMAX (C, S), que es la solución al problema de optimización Maximizar B sujeto a (1), (2), (3). Las abreviaturas TU y NTU corresponden, respectivamente, a la utilidad transferible y la utilidad no transferible, es decir, la capacidad/incapacidad de los agentes para hacer pagos entre sí. Para la concreción, tomaremos el tumin (C) para que sea tumin (C, S) donde S es el lexicográficamente menos entre los conjuntos factibles más baratos. Definimos tumax (c), ntumin (c), ntumax (c) y ν (c) de manera similar, aunque veremos en la sección 6.3 que, de hecho, ntumin (c, s) y ntumax (c, s) son independientesde la elección de S. Tenga en cuenta que la cantidad ν (c) de [16] es ntumin (c). La segunda modificación (utilidad transferible) es más atractiva en el contexto del problema de maximización, ya que ambos asumen cierto grado de cooperación entre los agentes. Si bien la segunda modificación se puede hacer sin la primera, el tumin de pago (C, S) de pago resultante es demasiado fuerte para ser un punto de referencia realista, al menos para los sistemas de conjunto general. En particular, puede ser más pequeño que el costo total del conjunto más barato de Set S (ver Sección 6). Sin embargo, proporcionamos la definición, así como algunos resultados sobre el tumin (C, S) en el documento, tanto para la integridad como porque creemos que puede ayudar a comprender qué propiedades de los límites de pago son importantes para nuestras pruebas. Otra posibilidad sería introducir una restricción adicional P e∈S ser ≥P e∈S ce en la definición de tumin (c, s) (tenga en cuenta que esta condición se mantiene automáticamente para tumax (c, s), como tumax (c,S) ≥ ntumax (c, s));Sin embargo, dicha definición no tendría una interpretación teórica directa del juego, y algunos de nuestros resultados (en particular, los de la Sección 4) ya no serían ciertos. Observación 1. Para los límites de pago que se derivan de los problemas de maximización, (es decir, Tumax (C, S) y NTUMAX (C, S)), las restricciones de tipo (3) son redundantes y se pueden eliminar. Por lo tanto, Tumax (C, S) y Ntumax (C, S) son soluciones a los programas lineales y, por lo tanto, se pueden calcular en el tiempo polinomial siempre que tengamos un oráculo de separación para las restricciones en (2). En contraste, 338 Ntumin (C, S) pueden ser np-hard para calcular incluso si el tamaño de F es polinomial (ver Sección 6). La primera y tercera desigualdades en la siguiente observación se deducen del hecho de que la condición (1 ∗) es estrictamente más débil que la condición (1). Proposición 1. Tumin (c, s) ≤ ntumin (c, s) ≤ ntumax (c, s) ≤ tumax (c, s). Sea m un mecanismo veraz para (e, f). Deje que PM (c) denote los pagos totales de M cuando los costos reales son c.Una relación de frugalidad de M con respecto a un pago límite es la relación entre el pago de M y este pago limitado. En particular, φtumin (m) = sup c pm (c)/tumin (c), φtumax (m) = sup c pm (c)/tumax (c), φntumin (m) = sup c pm (c)/ntumin(c), φntumax (m) = sup c pm (c)/ntumax (c). Concluimos esta sección mostrando que existen sistemas establecidos y vectores de costos respectivos para los cuales los cuatro límites de pago son diferentes. En la siguiente sección, cuantificamos esta diferencia, tanto para los sistemas de establecimiento general como para los tipos específicos de sistemas establecidos, como subastas de ruta o subastas de cobertura de vértices. EJEMPLO 1. Considere la subasta de ruta más corta en el gráfico de la Figura 1. Los conjuntos factibles más baratos son todas las rutas de A a D. Se puede verificar, utilizando el razonamiento de las proposiciones 2 y 3 a continuación, que para el costo Vector Cab = CCD = 2, CBC = 1, CAC = CBD = 5, tenemos• tumax (c) = 10 (con bab = bcd = 5, bbc = 0), • ntumax (c) = 9 (con bab = bcd = 4, bbc = 1), • ntumin (c) = 7 (BAB= bcd = 2, bbc = 3), • tumin (c) = 5 (con bab = bcd = 0, bbc = 5).4. Comparación de límites de pago 4.1 Subastas de ruta Comenzamos mostrando que para las subastas de ruta cualquiera de los dos límites de pago consecutivos puede diferir en al menos un factor de 2. Proposición 2. Hay una instancia del problema de ruta más corta para el cual tenemos NTUMAX (C)/NTUMN (C) ≥ 2. PRUEBA. Esta construcción se debe a David Kempe [17]. Considere el gráfico de la Figura 1 con los costos de borde CAB = CBC = CCD = 0, CAC = CBD = 1. Bajo estos costos, ABCD es el camino más barato. Las desigualdades en (2) son BAB + BBC ≤ CAC = 1, BBC + BCD ≤ CBD = 1. Por condición (3), ambas desigualdades deben ser apretadas (la primera es la única desigualdad que involucra a BAB, y la segunda es la única desigualdad que involucra BCD). Las desigualdades en (1) son BAB ≥ 0, BBC ≥ 0, BCD ≥ 0. Ahora, si el objetivo es maximizar BAB + BBC + BCD, la mejor opción es BAB = BCD = 1, BBC = 0, entonces NTUMAX (C) = 2. Por otro lado, si el objetivo es minimizar BAB + BBC + BCD, uno debería establecer BAB = BCD = 0, BBC = 1, entonces Ntumin (C) = 1. Proposición 3. Hay una instancia del problema de ruta más corta para el cual tenemos tumax (c)/ntumax (c) ≥ 2. PRUEBA. Nuevamente, considere el gráfico de la Figura 1. Deje que los costos de borde sean CAB = CCD = 0, CBC = 1, CAC = CBD = 1. ABCD es la ruta lexicográficamente más barata, por lo que podemos suponer que s = {ab, bc, cd}. Las desigualdades en (2) son las mismas que en el ejemplo anterior, y por el mismo argumento, ambos son, de hecho, igualdades. Las desigualdades en (1) son BAB ≥ 0, BBC ≥ 1, BCD ≥ 0. Nuestro objetivo es maximizar BAB + BBC + BCD. Si tenemos que respetar las desigualdades en (1), tenemos que establecer BAB = BCD = 0, BBC = 1, entonces NTUMAX (C) = 1. De lo contrario, podemos establecer BAB = BCD = 1, BBC = 0, por lo que tumax (c) ≥ 2. Proposición 4. Hay una instancia del problema de ruta más corta para el cual tenemos Ntumin (c)/tumin (c) ≥ 2. PRUEBA. Esta construcción también se basa en el gráfico de la Figura 1. Los costos de borde son CAB = CCD = 1, CBC = 0, CAC = CBD = 1. ABCD es la ruta lexicográficamente menos barata, por lo que podemos suponer que s = {ab, bc, cd}. Nuevamente, las desigualdades en (2) son las mismas, y ambas son, de hecho, igualdades. Las desigualdades en (1) son BAB ≥ 1, BBC ≥ 0, BCD ≥ 1. Nuestro objetivo es minimizar BAB + BBC + BCD. Si tenemos que respetar las desigualdades en (1), tenemos que establecer BAB = BCD = 1, BBC = 0, entonces Ntumin (C) = 2. De lo contrario, podemos establecer bab = bcd = 0, bbc = 1, entonces tumin (c) ≤ 1. En la Sección 4.4 (Teorema 3), mostramos que los resultados de la separación en las proposiciones 2, 3 y 4 son óptimos.4.2 Conexiones entre resultados de separación Los resultados de separación para las subastas de ruta se obtienen en el mismo gráfico utilizando vectores de costo muy similares. Resulta que esto no es una coincidencia. A saber, podemos probar el siguiente teorema. Teorema 1. Para cualquier sistema establecido (E, F), y cualquier conjunto factible S, Max C Tumax (C, S) Ntumax (C, S) = Max C Ntumax (C, S) Ntumin (C, S), Max C Ntumax (c, s) ntumin (c, s) = max c ntumin (c, s) tumin (c, s), donde el máximo es sobre todos los vectores de costos c para los cuales s es un conjunto más barato factible. La prueba del teorema sigue directamente de los cuatro lemas probados a continuación;Más precisamente, la primera igualdad en el Teorema 1 se obtiene combinando Lemmas 1 y 2, y la segunda igualdad se obtiene combinando Lemmas 3 y 4. Probamos Lema 1 aquí;Las pruebas de Lemmas 2-4 son similares y se pueden encontrar en la versión completa de este documento [8]. Lema 1. Suponga que C es un vector de costo para (E, F) de modo que S es un conjunto más barato y tumax (C, S)/Ntumax (C, S) = α. Luego hay un vector de costo C de tal manera que S es un conjunto más barato y factible y ntumax (C, S)/Ntumin (C, S) ≥ α. PRUEBA. Suponga que tumax (c, s) = x y ntumax (c, s) = y donde x/y = α. Suponga sin pérdida de generalidad que S consiste en elementos 1 ,..., k, y dejar b1 = (b1 1, ..., b1 k) y b2 = (b2 1, ..., b2 k) ser los vectores de oferta que corresponden a tumax (c, s) y ntumax (c,S), respectivamente. Construya el vector de costo c configurando Ci = ci para i ∈ S, ci = min {ci, b1 i} para i ∈ S. claramente, s es un conjunto más barato bajo c. Además, a medida que los costos de los elementos fuera de S permanecieron igual, los lados de la derecha de todas las restricciones en (2) no cambiaron, por lo que cualquier vector de oferta que satisfaga (2) y (3) con respecto a C, también satisfaceellos con respecto a c. Construiremos dos vectores de oferta B3 y B4 que satisfagan las condiciones (1), (2) y (3) para el vector de costo C, y 339 x x x x x 0 x 12 3 x 4 5 6 Figura 2: Gráfico que separa los límites de pago paracubierta de vértice, n = 7 tienen p i∈S b3 i = x, p i∈S b4 i = y. Como ntumax (c, s) ≥ x y ntumin (c, s) ≤ y, esto implica el lema. Podemos establecer B3 I = B1 I: este vector de oferta satisface las condiciones (2) y (3) ya que B1 lo hace, y tenemos B1 I ≥ min {ci, b1 i} = ci, lo que significa que B3 satisface la condición (1). Además, podemos establecer b4 i = b2 i. Nuevamente, B4 satisface las condiciones (2) y (3) ya que B2 lo hace, y dado que B2 satisface la condición (1), tenemos B2 I ≥ Ci ≥ IC, lo que significa que B4 satisface la condición (1). Lema 2. Supongamos que C es un vector de costo para (E, F) de tal manera que S es un conjunto más barato y factible y ntumax (C, S)/Ntumin (C, S) = α. Luego hay un vector de costo C de tal manera que S es un conjunto más barato y Tumax (C, S)/Ntumax (C, S) ≥ α.Lema 3. Suponga que C es un vector de costo para (E, F) de tal manera que S es un conjunto más barato y NTUMAX (C, S)/Ntumin (C, S) = α. Luego hay un vector de costos C de tal manera que S es un conjunto más barato y de Ntumin (C, S)/Tumin (C, S) ≥ α.Lema 4. Suponga que C es un vector de costo para (E, F) de tal manera que S es un conjunto y ntumin más barato (C, S)/Tumin (C, S) = α. Luego hay un vector de costo C de tal manera que S es un conjunto más barato y factible y ntumax (C, S)/Ntumin (C, S) ≥ α.4.3 Subastas de cobertura de vértice en contraste con el caso de las subastas de ruta, para subastas de cubierta de vértice la brecha entre ntumin (c) y ntumax (c) (y por lo tanto entre ntumax (c) y tumax (c), y entre tumin (c) (c) (c)) y ntumin (c)) pueden ser proporcionales al tamaño del gráfico. Proposición 5. Para cualquier n ≥ 3, hay un gráfico N-vértice y un vector de costo C para el cual tumax (c)/ntumax (c) ≥ n-2. PRUEBA. El gráfico subyacente consiste en una clique (n-1) en los vértices x1 ,..., Xn - 1, y un vértice adicional x0 adyacente a xn - 1. Los costos son CX1 = CX2 = · · · = CXN - 2 = 0, CX0 = CXN - 1 = 1. Podemos suponer que s = {x0, x1 ,..., Xn - 2} (esta es la primera cubierta de vértice lexicográficamente del costo 1). Para este sistema establecido, las restricciones en (2) son Bxi + Bx0 ≤ Cxn - 1 = 1 para i = 1 ,..., n - 2. Claramente, podemos satisfacer las condiciones (2) y (3) estableciendo bxi = 1 para i = 1 ,..., n - 2, bx0 = 0. Por lo tanto, tumax (c) ≥ n - 2. Para NTUMAX (c), hay una restricción adicional BX0 ≥ 1, por lo que lo mejor que podemos hacer es establecer bxi = 0 para i = 1 ,..., n - 2, bx0 = 1, lo que implica ntumax (c) = 1. Combinando la Proposición 5 con Lemmas 1 y 3, derivamos los siguientes corolarios. Corolario 1. Para cualquier n ≥ 3, podemos construir una instancia del problema de la cubierta del vértice en un gráfico de tamaño N que satisface NTumax (C)/Ntumin (C) ≥ N - 2. Corolario 2. Para cualquier n ≥ 3, podemos construir una instancia del problema de la cubierta del vértice en un gráfico de tamaño n que satisface ntumin (c)/tumin (c) ≥ n - 2. j+2ix ij p \\ p ij+2p \\ p ij+2p \\ pYijixix J J+1 I J+2IJ+1 Y Y I I J+2IE J E J+1 E IJ+1 P \\ P Figura 3: Prueba del teorema 3: Restricciones para ˆPij y ˆPij+2 No se superponga 4.4 Límites superiores, apareceque el límite inferior probado en la subsección anterior es casi apretado. Más precisamente, el siguiente teorema muestra que ningún límite de pago puede diferir en más de un factor de N;Además, este es el caso no solo para el problema de la cubierta del vértice, sino para los sistemas de configuración general. Limitamos la brecha entre Tumax (C) y el tumin (C). Dado que el tumin (c) ≤ ntumin (c) ≤ ntumax (c) ≤ tumax (c), este límite se aplica a cualquier par de límites de pago. Teorema 2. Para cualquier sistema establecido (E, F) y cualquier vector de costo C, tenemos tumax (c)/tumin (c) ≤ n.PRUEBA. Suponga que wlog que el conjunto ganador consta de elementos 1 ,..., k.Deje C1 ,..., CK será los verdaderos costos de los elementos en S, Let B1 ,..., BK será sus ofertas que corresponden al tumin (c), y Let B1 ,..., BK será sus ofertas que corresponden a Tumax (c). Considere las condiciones (2) y (3) para S. uno puede elegir un subconjunto L de la mayoría de las desigualdades de K en (2) de modo que para cada i = 1 ,..., k Hay al menos una desigualdad en L que es apretada para BI. Suponga que la desigualdad JTH en L es de la forma bi1 + · · · + bit ≤ c (tj \\ s). Para BI, todas las desigualdades en L son, de hecho, igualdades. Por lo tanto, al agregarlos a todos, obtenemos k p i = 1, ..., k bi ≥ p j = 1, ..., k c (tj \\ s). Por otro lado, todas estas desigualdades aparecen en la condición (2), por lo que deben mantener para BI, es decir, p i = 1, ..., k bi ≤ p j = 1, ..., k c (tj \\ s). Combinando estas dos desigualdades, obtenemos ntumin (c) ≥ ktumin (c) ≥ tumax (c). Observación 2. La línea final de la prueba del teorema 2 muestra que, de hecho, el límite superior en tumax (c)/tumin (c) puede fortalecerse al tamaño del conjunto ganador, k.Tenga en cuenta que en la Proposición 5, así como en los corolarios 1 y 2, K = N - 1, por lo que estos resultados no se contradicen entre sí. Para las subastas de ruta, este límite superior se puede mejorar a 2, coincidiendo con los límites inferiores de la Sección 4.1. Teorema 3. Para cualquier caso del problema de ruta más corto, tumax (c) ≤ 2 tumin (c). PRUEBA. Dada una red (g, s, t), suponga sin pérdida de generalidad que la ruta S-T más barata, p, p, en g es {e1 ,..., ek}, donde e1 = (s, v1), e2 = (v1, v2) ,..., ek = (vk - 1, t). Deje C1 ,..., ck será los verdaderos costos de E1 ,..., ek, y dejar b = (b1, ..., bk) y b = (b1, ..., bk) ser vectores de oferta que corresponden al tumin (c) y tumax (c), respectivamente. Para cualquier i = 1 ,..., k, hay una restricción en (2) que es apretada para BI con respecto al vector B de BID, es decir, una ruta S-T Pi que evita EI y satisface B (P \\ Pi) = C (Pi \\ P). Podemos asumir sin pérdida de generalidad que Pi coincide con P hasta algún vértice XI, luego se desvía de P para evitar EI, y finalmente regresa a P en un vértice 340 yi y coincide con P a partir de entonces (claramente, podría suceder esos = xi o t = yi). De hecho, si Pi se desvía de P más de una vez, una de estas desviaciones no es necesaria para evitar la IE y puede ser reemplazado por el segmento respectivo de P sin aumentar el costo de PI. Entre todos los caminos de esta forma, sea ˆpi el que tenga el mayor valor de yi, es decir, el más derecho. Esta ruta corresponde a una desigualdad II de la forma BXI + 1 + · · · + BYI ≤ C (ˆPI \\ P). Como en la prueba del Teorema 2, construimos un conjunto de restricciones estrechas l de tal manera que cada bi variable aparece en al menos una de estas restricciones;Sin embargo, ahora tenemos que tener más cuidado con la elección de restricciones en L. Construimos inductivamente de la siguiente manera. Comience por configurar l = {i1}. En el paso JTH, suponga que todas las variables hasta (pero no incluyen) BIJ aparecen en al menos una desigualdad en L. Agregue IIJ a L. Tenga en cuenta que para cualquier J tenemos yij+1> yij. Esto se debe a que las desigualdades agregadas a L durante los primeros pasos J no cubrieron BIJ+1. Ver Figura 3. Dado que yij+2> yij+1, también debemos tener xij+2> yij: de lo contrario, ˆpij+1 no sería la restricción más adecuada para BIJ+1. Por lo tanto, las variables en IJ+2 y IIJ no se superponen, y por lo tanto, ninguna BI puede aparecer en más de dos desigualdades en L. Ahora seguimos el argumento de la prueba del teorema 2 para terminar. Al agregar todas las desigualdades (apretadas) en L para B para BI obtenemos 2 P i = 1, ..., k bi ≥ p j = 1, ..., k c (ˆpj \\ p). Por otro lado, todas estas desigualdades aparecen en la condición (2), por lo que deben mantener para BI, es decir, p i = 1, ..., k bi ≤ p j = 1, ..., k c (ˆpj \\ p), entonces tumax (c) ≤ 2tumin (c).5. Los mecanismos veraces para la cubierta del vértice recuerdan que para una subasta de cobertura de vértice en un gráfico g = (v, e), una regla de asignación es un algoritmo que toma como entrada una oferta BV para cada vértice y devuelve una cubierta de vértice de G. comoExplicado en la Sección 2, podemos combinar una regla de asignación monótona con pagos de umbral para obtener una subasta veraz. Dos ejemplos naturales de reglas de asignación monótona son AOPT, es decir, el algoritmo que encuentra una cubierta de vértice óptima y el algoritmo codicioso Agr. Sin embargo, no se puede garantizar que AOPT se ejecute en tiempo polinomial a menos que P = NP y AGR tengan una relación de aproximación de log n.Otro algoritmo de aproximación para la cubierta del vértice, que tiene la relación de aproximación 2, es el algoritmo de relación local ALR [2, 3]. Este algoritmo considera los bordes de G uno por uno. Dado un borde e = (u, v), calcula = min {bu, bv} y establece bu = bu -, bv = bv -. Después de que se han procesado todos los bordes, ALR devuelve el conjunto de vértices {V |bv = 0}. No es difícil verificar que si el orden en el que se consideran los bordes es independiente de las ofertas, entonces este algoritmo también es monótono. Por lo tanto, podemos usarlo para construir una subasta veraz que garantice seleccionar una cubierta de vértice cuyo costo esté dentro de un factor de 2 desde lo óptimo. Sin embargo, si bien la calidad de la solución producida por ALR es mucho mejor que la de AGR, aún necesitamos demostrar que su pago total no es demasiado alto. En la siguiente subsección, vinculamos la relación de frugalidad de ALR (y, en general, en general, todos los algoritmos que satisfacen la condición de optimización local, definida más adelante) en 2Δ, donde δ es el grado máximo de G., demostramos un límite inferior inferior inferior inferior.Mostrar que para algunos gráficos la relación de frugalidad de cualquier subasta veraz es al menos δ/2.5.1 Bound superior Decimos que una regla de asignación es localmente óptima si cada vez que bv> p w∼v bw, el vértice V no se elige. Tenga en cuenta que para cualquier regla de este tipo, la oferta umbral de V satisface la televisión ≤ p w∼v bw. Reclamación 1. Los algoritmos AOPT, AGR y ALR son localmente óptimos. Teorema 4. Cualquier subasta de cobertura de vértice M que tenga una regla de asignación localmente óptima y monótona y paga a cada agente su oferta umbral tiene una relación de frugalidad φnumin (m) ≤ 2δ. Para probar el Teorema 4, primero mostramos que el pago total de cualquier mecanismo óptimo localmente no excede ΔC (v). Luego demostramos que ntumin (c) ≥ c (v)/2. Al combinar estos dos resultados, el teorema sigue. Lema 5. Considere un gráfico G = (V, E) con el máximo grado δ. Sea M una subasta de cobertura de vértice en G que satisface las condiciones del Teorema 4. Luego, para cualquier vector de costo C, el pago total de M satisface PM (c) ≤ ΔC (v). PRUEBA. Primero tenga en cuenta que cualquier subasta es veraz, por lo que podemos suponer que cada oferta de agentes es igual a su costo. Sea ˆS la cubierta de vértice seleccionada por M. Entonces por optimización local PM (c) = x v∈ ˆS TV ≤ x v∈ ˆS x w∼v cw ≤ x w∈V ΔCW = ΔC (v). Ahora derivamos un límite inferior en Tumax (C);Si bien no es esencial para la prueba del Teorema 4, nos ayuda a construir la intuición necesaria para esa prueba. Lema 6. Para una cubierta de vértice, instancia G = (v, e) en la que S es una cubierta mínima de vértice, tumax (c, s) ≥ c (v \\ s) prueba. Para un vértice W con al menos un vecino en S, D (W) denota el número de vecinos que W tiene en S. Considere el vector de oferta B en el que, para cada v ∈ S, bv = P w∼v, w∈S CW D (W). Entonces p v∈S bv = p v∈S p wvilv, w∈S cw /d (w) = p w /∈S cw = c (v \\ s). Para terminar, queremos mostrar que B es factible en el sentido de que satisface (2). Considere una cubierta de vértice t y extienda el vector de oferta B asignando bv = cv para v /∈ S. entonces b (t) = c (t \\ s)+b (s∩t) ≥ c (t \\ s)++X v∈S∩t x w∈S∩t: w∼v cw d (w), y dado que todos los bordes entre s ∩ t y s van a s ∩ t, el lado derecho es igual a c (t \\ s)+ X w∈S∩t cw = c (t \\ s)+ c (s ∩t) = c (v \\ s) = b (s). A continuación, demostramos un límite inferior en NTUMAX (C, S);Luego lo usaremos para obtener un límite inferior en Ntumin (C). Lema 7. Para una instancia de cubierta de vértice G = (V, E) en la que S es una cubierta mínima de vértice, NTUMAX (C, S) ≥ C (V \\ S) prueba. Si c (s) ≥ c (v \\ s), por condición (1) hemos terminado. Por lo tanto, para el resto de la prueba, suponemos que c (s) <c (v \\ s). Mostramos cómo construir un vector de oferta (be) e∈S que satisface las condiciones (1) y (2) tal que b (s) ≥ c (v \\ s);Claramente, esto implica NTUMAX (C, S) ≥ C (V \\ S). Recuerde que un problema de flujo de red se describe mediante un gráfico dirigido γ = (Vγ, Eγ), un nodo fuente s ∈ Vγ, un nodo de sumidero t ∈ Vγ y un vector de restricciones de capacidad AE, E ∈ Eγ. Considere una red (Vγ, Eγ) tal que Vγ = V ∪ {S, T}, Eγ = E1 ∪e2 ∪e3, donde E1 = {(S, V) |v ∈ S}, e2 = {(v, w) |v ∈ S, w ∈ 341 v \\ s, (v, w) ∈ E}, e3 = {(w, t) |w ∈ V \\ s}. Dado que S es una cubierta de vértice para G, ningún borde de E puede tener ambos puntos finales en V \\ s, y por construcción, E2 no contiene bordes con ambos puntos finales en S. Por lo tanto, el gráfico (V, E2) es bipartito conPartes (s, v \\ s). Establezca las restricciones de capacidad para e ∈ Eγ de la siguiente manera: a (s, v) = cv, a (w, t) = cw, a (v, w) = +∞ para todos v ∈ S, w ∈ V \\ S.Recuerde que un corte es una partición de los vértices en Vγ en dos conjuntos C1 y C2, de modo que S ∈ C1, t ∈ C2;Denotamos tal corte por C = (C1, C2). Abusando de la notación, escribimos e = (u, v) ∈ C si u ∈ C1, v ∈ C2 o u ∈ C2, v ∈ C1, y decimos que tal borde e = (u, v) cruza el corte C.La capacidad de un corte C se calcula como CAP (C) = P (V, W) ∈C A (V, W). Tenemos cap (s, v ∪ {t}) = c (s), cap ({s} ∪ v, t) = c (v \\ s). Sea cmin = ({s} ∪ s ∪ w, {t} ∪ s ∪ w) sea un corte mínimo en γ, donde s, s ⊆ s, w, w ⊆ v \\ S. ver Figura 4. Como cap (cmin) ≤ cap (s, v ∪ {t}) = c (s) < +∞, y cualquier borde en e2 tiene capacidad infinita, sin borde (u, v) ∈ E2 cruza cmin. Considere la red γ = (Vγ, Eγ), donde vγ = {s} ∪ s ∪ w ∪ {t}, eγ = {(u, v) ∈ Eγ |u, v ∈ Vγ}. Claramente, C = ({S} ∪ S ∪ W, {T}) es un corte mínimo en γ (de lo contrario, existiría un corte más pequeño para γ). Como cap (c) = c (w), tenemos c (s) ≥ c (w). Ahora, considere la red γ = (Vγ, Eγ), donde vγ = {s} ∪ s ∪ w ∪ {t}, eγ = {(u, v) ∈ Eγ |u, v ∈ Vγ}. Del mismo modo, C = ({S}, S ∪ W ∪ {t}) es un corte mínimo en γ, cap (c) = c (s). Como el tamaño de un flujo máximo de S a T es igual a la capacidad de un corte mínimo que separa S y T, existe un flujo F = (Fe) e∈Eγ de tamaño C (s). Este flujo tiene que saturar todos los bordes entre S y S, es decir, F (S, V) = CV para todos v ∈ S. Ahora, aumente las capacidades de todos los bordes entre S y S a +∞. En la red modificada, la capacidad de un corte mínimo (y, por lo tanto, el tamaño de un flujo máximo) es C (W), y un flujo máximo F = (Fe) e∈Eγ puede construirse mediante el aumento de F. Establecer BV = BV =CV para todos v ∈ S, bv = f (s, v) para todos v ∈ S. Como F se construye aumentando F, tenemos BV ≥ CV para todos los v ∈ S, es decir, la condición (1) se satisface. Ahora, verifiquemos que ninguna cubierta de vértice T ⊆ V puede violar la condición (2). Establecer t1 = t ∩ s, t2 = t ∩ s, t3 = t ∩ w, t4 = t ∩ w;Nuestro objetivo es mostrar que B (S \\ T1) + B (S \\ T2) ≤ C (T3) + C (T4). Considere todos los bordes (u, v) ∈ E tal que u ∈ S \\ t1. If (u, v) ∈ E2, entonces v ∈ T3 (ningún borde en E2 puede cruzar el corte), y si u, v ∈ S entonces v ∈ T1∪t2. Por lo tanto, T1∪T3∪s es una cubierta de vértice para G y, por lo tanto, C (T1)+ C (T3)+ C (S) ≥ C (S) = C (T1)+ C (S \\ T1)+ C (S ). En consecuencia, C (T3) ≥ C (S \\ T1) = B (S \\ T1). Ahora, considere los vértices en S \\ T2. Cualquier borde en E2 que comience en uno de estos vértices tiene que terminar en T4 (este borde debe estar cubierto por T y no puede atravesar el corte). Por lo tanto, el flujo total de S \\ T2 es como máximo el flujo total de T4, es decir, B (S \\ T2) ≤ C (T4). Por lo tanto, B (S \\ T1) + B (S \\ T2) ≤ C (T3) + C (T4). Finalmente, obtenemos un límite inferior en el límite de pago que nos interesa, a saber, ntumin (c). Lema 8. Para una instancia de cubierta de vértice G = (V, E) en la que S es una cubierta mínima de vértice, Ntumin (C, S) ≥ C (V \\ S) prueba. Supongamos que la contradicción es un vector de costo con cubiertas de vértices de costo mínimo y ntumin (c, s) <c (v \\ s). Sea B el vector de oferta correspondiente y sea C un nuevo vector de costo con CV = BV para V ∈ S y CV = CV para V ∈ S. Condición (2) garantiza que S es una solución óptima para el vector de costo c. Ahora calcule un vector de oferta B correspondiente a NTUMAX (C, S). Somos s w s t t1 t3 t2 t2 t4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 0000 11 1111 0000 11 1111 0000 0000 11 1111 0000 0000 11 1111 0000 11 1111 00 1111 0 00 1 11 0 00 1 11 0 00 1 11 0000000 0000000000000000 0000000000000000 0000000 00000000000000 000000000000 0000000 00000000000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 dirily11111111111111111111111111111111111111111111111111111111111111 000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 00000000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 0000 0000 0000 00 0000 11 1111 1111 1111 1111 1111 1111 00000 0000000000 00000000000000 00000 00000000000000000000000000 00000 0000000000 1111111111111111111111111111111111111111111111111111 diril11111111111111111111111111111111111111111111111111111111itil diramentque.1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 11111111111111111111111111111111111111111111111111111111 000000000000000000000000000000000000000000000000000000000000000000000000000000000000S00000000SE000000000000S000000S000000SES0000000000SES00000000SETOR 000000000000 111111 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111.000000 00000000000000 000000000000 000000 00000000000011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111. 1111 111 111111 111111 111 111111 111111 111 111111 Figura 4: Prueba de lema 7. Las líneas discontinuas corresponden a los bordes en E \\ E2 afirman que bv = cv para cualquier v ∈ S. De hecho, suponga que bv> cv para algunos v ∈ S (bv = cv para v ∈ S por construcción). Como B satisface las condiciones (1)-(3), entre las desigualdades en (2) hay una que es apretada para V y el vector de oferta b. Es decir, b (s \\ t) = c (t \\ s). Por la construcción de C, C (S \\ T) = C (T \\ S). Ahora, dado que bw ≥ cw para todos w ∈ S, bv> cv implica b (s \\ t)> c (s \\ t) = c (t \\ s). Pero esto viola (2). Entonces ahora sabemos b = c. Por lo tanto, tenemos ntumax (c, s) = p v∈S bv = ntumin (c, s) <c (v \\ s), dando una contradicción al hecho de que ntumax (c, s) ≥ c (v \\ s) que probamos en Lemma 7. Como Ntumin (C, S) satisface la condición (1), se deduce que tenemos Ntumin (C, S) ≥ C (S). Juntos lemma 8, esto implica ntumin (c, s) ≥ max {c (v \\ s), c (s)} ≥ c (v)/2. Combinado con Lemma 5, esto completa la prueba del teorema 4. Observación 3. Como ntumin (c) ≤ ntumax (c) ≤ tumax (c), nuestro límite de 2Δ se extiende a las relaciones de frugalidad más pequeñas que consideramos, es decir, φnTumax (m) y φtumax (m). No está claro si se extiende a la relación de frugalidad más grande φtumin (M). Sin embargo, la relación de frugalidad φtumin (M) no es realista porque el tumin atado al pago (C) es inapropiadamente bajo: mostramos en la Sección 6 que el tumin (c) puede ser significativamente menor que el costo total de una cubierta de vértice más barata. Extensiones También podemos aplicar nuestros resultados a los algoritmos monótonos de cobertura de vértices que no necesariamente producen soluciones localmente óptimas. Para hacerlo, simplemente tomamos la cubierta de vértice producida por cualquier algoritmo de este tipo y la transformamos en una localmente óptima, considerando los vértices en orden lexicográfico y reemplazando un vértice V con sus vecinos cuando sea que bv> p u∼v bu. Tenga en cuenta que si se ha agregado un vértice U a la cubierta del vértice durante este proceso, significa que tiene un vecino cuya oferta es más alta que BU, por lo que después de un pase todos los vértices en la cubierta del vértice satisfacen bv ≤ p u∼v bu. Este procedimiento es monótono en ofertas, y solo puede disminuir el costo de la cubierta del vértice. Por lo tanto, utilizándolo en la parte superior de una regla de asignación monótona con relación de imación de aproximadamente 342 α, obtenemos una regla de asignación localmente óptima monótona con relación de aproximación α. Combinándolo con pagos de umbral, obtenemos una subasta con φnumin ≤ 2Δ. Dado que cualquier subasta veraz tiene una regla de asignación monótona, este procedimiento transforma cualquier mecanismo veraz para el problema de cobertura de vértices en una frugal mientras preserva la relación de aproximación.5.2 Límite inferior en esta subsección, demostramos que el límite superior del teorema 4 es esencialmente óptimo. Nuestra prueba utiliza las técnicas de [9], donde los autores demuestran un resultado similar para las subastas de ruta más corta. Teorema 5. Para cualquier Δ> 0 y cualquier n, existen un gráfico G de grado máximo δ y tamaño n> n de tal manera que para cualquier mecanismo veraz m en g tenemos φnumin (m) ≥ δ/2. PRUEBA. Dados n y δ, establecer k = n/2Δ. Sea G el gráfico que consiste en K Blocks B1 ,..., Bk de tamaño 2Δ cada uno, donde cada bi es un gráfico bipartito completo con partes li y ri, | li |= | Ri |= Δ. Consideraremos dos familias de vectores de costos para G. bajo un vector de costo x ∈ X, cada bloque Bi tiene un vértice de costo 1;Todos los demás vértices cuestan 0. Bajo un vector de costo y ∈ Y, hay un bloque que tiene dos vértices de costo 1, uno en cada parte, todos los demás bloques tienen un vértice de costo 1, y todos los demás vértices cuestan 0. Claramente, | x |= (2δ) k, | y |= K (2δ) K - 1 Δ2. Ahora construiremos un gráfico bipartito W con el conjunto de vértices X ∪ y como sigue. Considere un vector de costo y ∈ Y que tiene dos vértices de costo 1 en BI;Deje que estos vértices sean vl ∈ Li y vr ∈ Ri. Al cambiar el costo de cualquiera de estos vértices a 0, obtenemos un vector de costo en X. Sea XL y XR los vectores de costos obtenidos cambiando el costo de VL y VR, respectivamente. La cubierta del vértice elegida por M (y) debe contener todos los vértices en Li o debe contener todos los vértices en RI. En el primer caso, pusimos una ventaja de Y a XL y en el último caso pusimos en W un borde de Y a XR (si la cubierta del vértice incluye todo BI, W contiene ambos bordes). El gráfico W tiene al menos k (2δ) bordes K - 1 Δ2, por lo que debe existir una x ∈ X de grado al menos kδ/2. Sea Y1 ,..., ykδ/2 ser los otros puntos finales de los bordes incidentes a x, y para cada i = 1 ,..., kδ/2, que Vi sea el vértice cuyo costo es diferente bajo x e yi;Tenga en cuenta que todos los VI son distintos. No es difícil ver que ntumin (x) ≤ k: la cubierta de vértice más barata contiene la parte All-0 de cada bloque, y podemos satisfacer las condiciones (1)-(3) dejando que uno de los vértices en el All-0 parte de cada bloque a la oferta 1, mientras que todos los vértices en el conjunto más barato Bid 0. Por otro lado, por monotonicidad de m tenemos vi ∈ M (x) para i = 1 ,..., Kδ/2 (VI está en el conjunto ganador bajo Yi, y X se obtiene de Yi disminuyendo el costo de VI), y además, la oferta umbral de cada VI es al menos 1, por lo que el pago total de M en Xes al menos kδ/2. Por lo tanto, φnumin (m) ≥ m (x)/ntumin (x) ≥ δ/2. Observación 4. El límite inferior del teorema 5 puede generalizarse a mecanismos aleatorios, donde se considera que un mecanismo aleatorizado es veraz si puede representarse como una distribución de probabilidad sobre los mecanismos veraces. En este caso, en lugar de elegir el vértice x ∈ X con el más alto grado, colocamos (y, xl) y (y, xr) en w, etiquetar cada borde con la probabilidad de que se elige la parte respectiva del bloque,y elige x ∈ X con el grado más alto ponderado. El argumento puede extenderse aún más a una definición más permisiva de veracidad para los mecanismos aleatorios, pero esta discusión está más allá del alcance de este documento.6. Propiedades de los límites de pago en esta sección Consideramos varias propiedades deseables de los límites de pago y evaluamos los cuatro límites de pago propuestos en este documento con respecto a ellos. Las propiedades particulares en las que nos interesan son la independencia de la elección de S (Sección 6.3), Monotonicidad (Sección 6.4.1), Dureza computacional (Sección 6.4.2) y la relación con otros límites razonables, como el costo totaldel conjunto más barato (Sección 6.1), o el pago total de VCG (Sección 6.2).6.1 Comparación con el costo total Nuestro primer requisito es que un pago límite no debe ser menor que el costo total del conjunto seleccionado. Los límites de pago se utilizan para evaluar el rendimiento de las subastas de sistema establecidos. Este último tiene que satisfacer la racionalidad individual, es decir, el pago a cada agente debe ser al menos tan grande como sus costos incurridos;Solo es razonable exigir que el pago sea obligado a satisfacer el mismo requisito. Claramente, Ntumax (C) y Ntumin (c) satisfacen este requisito debido a la condición (1), y también Tumax (C), ya que tumax (c) ≥ ntumax (c). Sin embargo, el tumin (c) falla esta prueba. El ejemplo de la Proposición 4 muestra que para las subastas de ruta, el tumin (C) puede ser menor que el costo total en un factor de 2. Además, existen sistemas establecidos y vectores de costos para los cuales el tumin (c) es menor que el costo de los conjuntos más baratos por un factor de Ω (n). Considere, por ejemplo, la subasta de cubierta de vértice para la gráfica de la Proposición 5 con los costos CX1 = · · · = CXN-2 = CXN-1 = 1, CX0 = 0. El costo de una cubierta de vértice más barata es n - 2, y la primera cubierta de vértice lexicográficamente del costo n - 2 es {x0, x1 ,..., Xn - 2}. Las restricciones en (2) son Bxi + Bx0 ≤ Cxn - 1 = 1. Claramente, podemos satisfacer las condiciones (2) y (3) configurando Bx1 = · · · = Bxn - 2 = 0, Bx0 = 1, lo que significa que el tumin (c) ≤ 1. Esta observación sugiere que el tumin con un límite de pago (C) es demasiado fuerte para ser realista, ya que puede ser sustancialmente más bajo que el costo del conjunto factible más barato. Sin embargo, algunos de los resultados positivos que se demostraron en [16] para Ntumin (c) también pasan por el tumin (C). En particular, uno puede mostrar que si los conjuntos factibles son la base de un matroid sin monopolio, entonces φtumin (VCG) = 1. Para mostrar que φtumin (VCG) es como máximo 1, uno debe demostrar que el pago de VCG es como máximo tumin (C). Esto se muestra para Ntumin (c) en el primer párrafo de la prueba del teorema 5 en [16]. Su argumento no usa la condición (1) en absoluto, por lo que también se aplica al tumin (c). Por otro lado, φtumin (VCG) ≥ 1 ya que φtumin (VCG) ≥ φntumin (VCG) y φntumin (VCG) ≥ 1 por la Proposición 7 de [16] (y también por la Proposición 6 a continuación).6.2 Comparación con los pagos de VCG Otra medida de idoneidad para los límites de pago es que no deberían dar como resultado relaciones de frugalidad que son menos de 1 para mecanismos veraces bien conocidos. Si este es realmente el caso, el límite de pago puede ser demasiado débil, ya que se vuelve demasiado fácil diseñar mecanismos que funcionan bien con respecto a él. En particular, un requisito razonable es que un pago límite no debe exceder el pago total del mecanismo clásico de VCG. La siguiente proposición muestra que NTUMAX (C), y por lo tanto también Ntumin (C) y Tumin (C), no excede el PVCG de pago VCG (C). La prueba esencialmente sigue el argumento de la Proposición 7 de [16] y se puede encontrar en la versión completa de este documento [8]. Proposición 6. φntumax (VCG) ≥ 1. La Proposición 6 muestra que ninguno de los límites de pago tumin (c), ntumin (c) y ntumax (c) excede el pago de VCG. Sin embargo, el pago unido a Tumax (c) puede ser mayor que el total de 343 VCG de 343. En particular, para el caso en la Propuesta 5, el pago de VCG es menor que Tumax (C) por un factor de N - 2. Ya hemos visto que Tumax (C) ≥ N - 2. Por otro lado, bajo VCG, la oferta umbral de cualquier Xi, i = 1 ,..., n - 2, es 0: si dicha vértice ofrece por encima de 0, se elimina del conjunto ganador junto con x0 y se reemplaza con xn - 1. Del mismo modo, la oferta umbral de x0 es 1, porque si X0 ofertas por encima de 1, se puede reemplazar con Xn - 1. Entonces el pago de VCG es 1. Este resultado no es sorprendente: la definición de Tumax (c) supone implícitamente que existe una cooperación entre los agentes, mientras que el cálculo de los pagos de VCG no tiene en cuenta ninguna interacción entre ellos. De hecho, la cooperación permite a los agentes extraer pagos más altos bajo VCG. Es decir, VCG no es a prueba de grupos. Esto sugiere que, como un pago, Tumax (c) puede ser demasiado liberal, al menos en un contexto donde hay poca o ninguna cooperación entre los agentes. Quizás Tumax (c) puede ser un buen punto de referencia para medir el rendimiento de los mecanismos diseñados para agentes que pueden formar coaliciones o hacer pagos secundarios entre sí, en particular, mecanismos a prueba de estrategias grupales. Otra configuración en la que la limitación φtumax aún es de cierto interés es cuando, para el problema subyacente, la asignación óptima y los pagos de VCG son NP-Hard para calcular. En este caso, encontrar un mecanismo computable en tiempo polinómico con una buena relación de frugalidad con respecto a Tumax (c) es una tarea no trivial, mientras limita la relación de frugalidad con respecto a los límites de pago más desafiantes podría ser demasiado difícil. Para ilustrar este punto, compare las pruebas de Lemma 6 y Lemma 7: ambos requieren algo de esfuerzo, pero este último es mucho más difícil que el primero.6.3 La elección de S Todos los límites de pago definidos en este documento corresponden a la oferta total de todos los elementos en el conjunto factible más barato, donde los lazos se rompen lexicográficamente. Si bien esta definición garantiza que nuestros límites de pago estén bien definidos, la elección particular de la regla de resolución de dibujo parece arbitraria, y uno podría preguntarse si nuestros límites de pago son suficientemente robustos como para ser independientes de esta elección. Resulta que ese es el caso de Ntumin (C) y Ntumax (C), es decir, estos límites no dependen de la regla de resolución de dibujo. Para ver esto, suponga que dos conjuntos factibles S1 y S2 tienen el mismo costo. En el cálculo de Ntumin (C, S1), todos los vértices en S1 \\ S2 tendrían que ofertar su verdadero costo, ya que de lo contrario S2 se volvería más barato que S1. Por lo tanto, cualquier vector de oferta para S1 solo puede ser = CE para e ∈ S1 ∩ S2, y por lo tanto, constituye un vector de oferta válido para S2 y viceversa. Un argumento similar se aplica a NTUMAX (c). Sin embargo, para el tumin (c) y tumax (c) este no es el caso. Por ejemplo, considere el sistema SET E = {E1, E2, E3, E4, E5}, F = {S1 = {E1, E2}, S2 = {E2, E3, E4}, S3 = {E4, E5}}Con los costos C1 = 2, C2 = C3 = C4 = 1, C5 = 3. Los conjuntos más baratos son S1 y S2. Ahora Tumax (C, S1) ≤ 4, ya que la oferta total de los elementos en S1 no puede exceder el costo total de S3. Por otro lado, Tumax (C, S2) ≥ 5, como podemos establecer B2 = 3, B3 = 0, B4 = 2. Del mismo modo, el tumin (C, S1) = 4, porque las desigualdades en (2) son B1 ≤ 2 y B1 + B2 ≤ 4. Pero tumin (c, s2) ≤ 3 como podemos establecer b2 = 1, b3 = 2, b4 = 0. 6.4 Resultados negativos para ntumin (c) y tumin (c) Los resultados en [16] y los resultados de nuestra cubierta de vértice sonProbado para la relación de frugalidad φnumin. De hecho, se puede argumentar que φntumin es la mejor definición de relación de frugalidad, porque entre todos los límites de pago razonables (es decir, los que son al menos tan grandes como el costo del conjunto factible más barato), es más exigente del algoritmo. Sin embargo, Ntumin (C) no siempre es el pago más fácil o más natural con el que trabajar. En esta subsección, discutimos varias desventajas de Ntumin (C) (y también tumin (C)) en comparación con NTUMAX (C) y Tumax (C).6.4.1 No monotonicidad El primer problema con Ntumin (c) es que no es monótono con respecto a F, es decir, puede aumentar cuando uno agrega un conjunto factible a F. (Sin embargo, es monótono en el sentido de que una pérdida de la pérdidaEl agente no puede convertirse en un ganador aumentando su costo). Intuitivamente, un buen pago de pago debe satisfacer este requisito de monotonicidad, ya que agregar un conjunto factible aumenta la competencia, por lo que debería reducir los precios. Tenga en cuenta que este es el caso de NTUMAX (C) y Tumax (c) ya que un nuevo conjunto factible agrega una restricción en (2), lo que limita el espacio de la solución para el programa lineal respectivo. Proposición 7. Agregar un conjunto factible a F puede aumentar el valor de Ntumin (c) en un factor de ω (n). PRUEBA. Sea e = {x, xx, y1 ,..., yn, z1 ,..., Zn}. Establecer y = {y1 ,..., yn}, s = y ∪ {x}, ti = y \\ {yi} ∪ {zi}, i = 1 ,..., n, y suponga que F = {S, T1 ,..., Tn}. Los costos son CX = 0, CXX = 0, CYI = 0, CZI = 1 para i = 1 ,..., n.Tenga en cuenta que S es el conjunto más barato factible. Sea f = f ∪ {t0}, donde t0 = y ∪ {xx}. Para F, el vector de oferta por 1 = · · · = por = 0, bx = 1 satisface (1), (2) y (3), entonces ntumin (c) ≤ 1. Para F, S sigue siendo el conjunto lexicográficamente más barato. Cualquier solución óptima tiene Bx = 0 (por restricción en (2) con T0). Condición (3) para yi implica bx + byi = czi = 1, entonces byi = 1 y ntumin (c) = n.Para las subastas de ruta, se ha demostrado [18] que Ntumin (c) no es monótono en un sentido ligeramente diferente, es decir, con respecto a agregar una nueva ventaja (agente) en lugar de un nuevo conjunto factible (un equipo de agentes existentes). Observación 5. También podemos mostrar que Ntumin (C) no es monótono para la cubierta de vértice. En este caso, agregar un nuevo conjunto factible corresponde a la eliminación de bordes del gráfico. Resulta que eliminar un solo borde puede aumentar ntumin (c) por un factor de n - 2;La construcción es similar a la de la Proposición 5. 6.4.2 NP-Hardness Otro problema con Ntumin (C, S) es que es NP-Hard calcular incluso si el número de conjuntos factibles es polinomio en n.Nuevamente, esto lo pone en desventaja en comparación con NTUMAX (C, S) y Tumax (C, S) (ver Observación 1). Teorema 6. La calculación de Ntumin (C) es NP-HARD, incluso cuando el conjunto de Secible Léxicográficamente más al menos se da en la entrada. PRUEBA. Reducimos la cubierta exacta en 3 conjuntos (x3c) a nuestro problema. Una instancia de x3c viene dada por un universo g = {g1 ,..., Gn} y una colección de subconjuntos C1 ,..., CM, CI ⊂ G, | CI |= 3, donde el objetivo es decidir si uno puede cubrir G por N/3 de estos conjuntos. Observe que si este es realmente el caso, cada elemento de G está contenido exactamente en un conjunto de la cubierta. Lema 9. Considere un problema de minimización p de la siguiente forma: minimice p i = 1, ..., n bi en condiciones (1) bi ≥ 0 para todos i = 1 ,..., n;(2) Para cualquier j = 1 ,..., k tenemos p bi∈Sj bi ≤ aj, donde sj ⊆ {b1 ,..., bn};(3) Para cada BJ, una de las limitaciones en (2) que lo involucra es apretado. Para cualquier p de este tipo, se puede construir un sistema establecido y un vector de costos C de tal manera que Ntumin (c) es la solución óptima para P. prueba. La construcción es sencilla: hay un elemento de costo 0 para cada bi, un elemento de costo AJ para cada AJ, las soluciones factibles son {B1 ,..., Bn}, o cualquier conjunto obtenido de {B1 ,..., Bn} reemplazando los elementos en SJ por AJ.344 Por este lema, todo lo que tenemos que hacer para probar el Teorema 6 es mostrar cómo resolver X3C utilizando la solución a un problema de minimización de la forma dada en Lemma 9. Hacemos esto de la siguiente manera. Para cada CI, presentamos 4 variables xi, ¯xi, ai y bi. Además, para cada elemento GJ de G hay una variable DJ. Usamos el siguiente conjunto de restricciones: • En (1), tenemos restricciones xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 para todos i = 1 ,..., M, J = 1 ,..., n.• En (2), para todos i = 1 ,..., M, tenemos las siguientes 5 restricciones: xi +¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi +bi ≤ 1. Además, para todos J = 1 ,..., n tenemos una restricción de la forma xi1 + · · · + xik + dj ≤ 1, donde Ci1 ,..., CIK son los conjuntos que contienen GJ. El objetivo es minimizar z = p i (xi + ¯xi + ai + bi) + p j dj. Observe que para cada j, solo hay una restricción que involucra a DJ, por lo que por condición (3) debe ser apretado. Considere las dos restricciones que involucran IA. Uno de ellos debe ser apretado y, por lo tanto, xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1. Por lo tanto, para cualquier solución factible a (1)-(3) tenemos z ≥ m.Ahora, suponga que hay una cubierta establecida exacta. Establecer dj = 0 para j = 1 ,..., n.Además, si CI se incluye en esta cubierta, establece xi = 1, ¯xi = ai = bi = 0, de lo contrario, establecido ¯xi = 1, xi = ai = bi = 0. Claramente, se satisfacen todas las desigualdades en (2) (usamos el hecho de que cada elemento está cubierto exactamente una vez), y para cada variable, una de las limitaciones que lo involucran es apretada. Esta tarea da como resultado z = m.Por el contrario, suponga que hay una solución factible con z = m.Como cada adicional de la forma xi + ¯xi + ai + bi contribuye al menos 1, tenemos xi + ¯xi + ai + bi = 1 para todos i, dj = 0 para todos j. Ahora mostraremos que para cada i, Xi = 1 y ¯xi = 0, o xi = 0 y ¯xi = 1. En aras de la contradicción, suponga que xi = Δ <1, ¯xi = Δ <1. Como una de las restricciones que involucran AI deben ser apretadas, tenemos Ai ≥ min {1 - δ, 1 - Δ}. Del mismo modo, BI ≥ min {1 - δ, 1 - δ}. Por lo tanto, xi + ¯xi + ai + bi = 1 = Δ + Δ +2 min {1 --Δ, 1 --Δ}> 1. Para terminar la prueba, tenga en cuenta que para cada j = 1 ,..., M tenemos xi1 + · · · + xik + dj = 1 y dj = 0, por lo que los subconjuntos que corresponden a xi = 1 constituyen una cubierta establecida. Observación 6. En las pruebas de la Proposición 7 y el Teorema 6, todas las restricciones en (1) son de la forma ≥ 0. Por lo tanto, los mismos resultados son verdaderos para el tumin (C). Observación 7. Para subastas de ruta más corta, el tamaño de F puede ser superpolinomio. Sin embargo, existe un oráculo de separación de tiempo polinómico para restricciones en (2) (para construir uno, use cualquier algoritmo para encontrar rutas más cortas), para que uno pueda calcular NTumax (C) y Tumax (C) en el tiempo polinomial. Por otro lado, recientemente e independientemente se demostró [18] que la computación de Ntumin (C) para subastas de ruta más corta es NP-HARD.7. Referencias [1] A. Archer y E. Tardos, mecanismos de ruta frugal. En Actas del 13º Simposio ACM-SIAM anual sobre algoritmos discretos, páginas 991-999, 2002 [2] R. Bar-Yehuda, K. Bendel, A. Freund y D. Rawitz, Relación local: un marco unificado para la aproximaciónalgoritmos. En Memoriam: Shimon incluso 1935-2004. ACM Comput. Surv., 36 (4): 422-463, 2004 [3] R. Bar-Yehuda y S. incluso, un teorema de relación local para aproximar el problema de la cubierta del vértice ponderado. Annals of Discrety Mathematics, 25: 27-46, 1985 [4] E. Clarke, precio multipart de bienes públicos. Public Choice, 8: 17-33, 1971 [5] G. Calinescu, limitando el pago de mecanismos de veraz aproximados. En Actas del 15º Simposio Internacional sobre Algoritmos y Computación, páginas 221-233, 2004 [6] A. Czumaj y A. Ronen, sobre el pago esperado de los mecanismos para la asignación de tareas. En Actas de la 5ª Conferencia ACM sobre Comercio Electrónico (EC04), 2004 [7] E. Elkind, los costos verdaderos de la mano de obra barata son difíciles de medir: la eliminación de bordes y los pagos de VCG en gráficos. En Actas de la 6ta Conferencia ACM sobre Comercio Electrónico (EC05), 2005 [8] E. Elkind, L. A. Goldberg y P. W. Goldberg, Ratios de frugalidad y mecanismos veraces mejorados para la cobertura del vértice. Disponible en http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai y K. Steiglitz, Frugalidad en las subastas de ruta. En Actas del 15º Simposio ACM-SIAM anual sobre algoritmos discretos, páginas 694-702, 2004 [10] J. Feigenbaum, C. H. Papadimitriou, R. Sami y S. Shenker, un mecanismo basado en BGP para la ruta más bajo de costo. En Actas del Simposio 21 sobre principios de computación distribuida, páginas 173-182, 2002 [11] A. Fiat, A. Goldberg, J. Hartline y A. Karlin, Subastas Generalizadas Competitivas. En Actas del 34º Simposio ACM anual sobre Teoría de la Computación, páginas 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra y A. Verma, Juegos de Coalición sobre Gráficos: estructuras centrales, sustitutos y frugalidad. En Actas de la 4ta Conferencia ACM sobre Comercio Electrónico (EC03), 2005 [13] A. Goldberg, J. Hartline y A. Wright, Subastas competitivas y bienes digitales. En Actas del 12º Simposio ACM-SIAM anual sobre algoritmos discretos, páginas 735-744, 2001 [14] T. Groves, incentivos en equipos. Econometrica, 41 (4): 617-631, 1973 [15] N. Immorlica, D. Karger, E. Nikolova y R. Sami, subastas de ruta de primer precio. En Actas de la 6ª Conferencia ACM sobre Comercio Electrónico (EC05), 2005 [16] A. R. Karlin, D. Kempe y T. Tamir, más allá de VCG: frugalidad de mecanismos veraces. En Actas del 46º Simposio anual de IEEE sobre fundamentos de la informática, páginas 615-626, 2005 [17] D. Kempe, Comunicación personal, 2006 [18] N. Chen, A. R. Karlin, la mano de obra barata puede ser costosa, en procedimientos deEl 18º Simposio ACM-SIAM anual sobre algoritmos discretos, páginas 735-744, 2007 [19] N. Nisan y A. Ronen, diseño de mecanismo algorítmico. En Actas del 31º Simposio ACM anual sobre teoría de la cálculo, páginas 129-140, 1999 [20] A. Ronen y R. talismano, hacia mecanismos genéricos de pago bajo para la asignación de tareas descentralizadas. En Actas de la 7ª Conferencia Internacional de IEEE sobre tecnología de comercio electrónico, 2005 [21] K. Talwar, El precio de la verdad: frugalidad en mecanismos veraces. En Actas del 20º Simposio Internacional sobre Aspectos Teóricos de la Informática, 2003 [22] W. Vickrey, Contadores, subastas y licitaciones selladas competitivas. Journal of Finance, 16: 8-37, 1961 345",
    "original_sentences": [
        "Frugality Ratios And Improved Truthful Mechanisms for Vertex Cover ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT In set-system auctions, there are several overlapping teams of agents, and a task that can be completed by any of these teams.",
        "The auctioneers goal is to hire a team and pay as little as possible.",
        "Examples of this setting include shortest-path auctions and vertex-cover auctions.",
        "Recently, Karlin, Kempe and Tamir introduced a new definition of frugality ratio for this problem.",
        "Informally, the frugality ratio is the ratio of the total payment of a mechanism to a desired payment bound.",
        "The ratio captures the extent to which the mechanism overpays, relative to perceived fair cost in a truthful auction.",
        "In this paper, we propose a new truthful polynomial-time auction for the vertex cover problem and bound its frugality ratio.",
        "We show that the solution quality is with a constant factor of optimal and the frugality ratio is within a constant factor of the best possible worst-case bound; this is the first auction for this problem to have these properties.",
        "Moreover, we show how to transform any truthful auction into a frugal one while preserving the approximation ratio.",
        "Also, we consider two natural modifications of the definition of Karlin et al., and we analyse the properties of the resulting payment bounds, such as monotonicity, computational hardness, and robustness with respect to the draw-resolution rule.",
        "We study the relationships between the different payment bounds, both for general set systems and for specific set-system auctions, such as path auctions and vertex-cover auctions.",
        "We use these new definitions in the proof of our main result for vertex-cover auctions via a bootstrapping technique, which may be of independent interest.",
        "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
        "INTRODUCTION In a set system auction there is a single buyer and many vendors that can provide various services.",
        "It is assumed that the buyers requirements can be satisfied by various subsets of the vendors; these subsets are called the feasible sets.",
        "A widely-studied class of setsystem auctions is path auctions, where each vendor is able to sell access to a link in a network, and the feasible sets are those sets whose links contain a path from a given source to a given destination; the study of these auctions has been initiated in the seminal paper by Nisan and Ronen [19] (see also [1, 10, 9, 6, 15, 7, 20]).",
        "We assume that each vendor has a cost of providing his services, but submits a possibly larger bid to the auctioneer.",
        "Based on these bids, the auctioneer selects a feasible subset of vendors, and makes payments to the vendors in this subset.",
        "Each selected vendor enjoys a profit of payment minus cost.",
        "Vendors want to maximise profit, while the buyer wants to minimise the amount he pays.",
        "A natural goal in this setting is to design a truthful auction, in which vendors have an incentive to bid their true cost.",
        "This can be achieved by paying each selected vendor a premium above her bid in such a way that the vendor has no incentive to overbid.",
        "An interesting question in mechanism design is how much the auctioneer will have to overpay in order to ensure truthful bids.",
        "In the context of path auctions this topic was first addressed by Archer and Tardos [1].",
        "They define the frugality ratio of a mechanism as the ratio between its total payment and the cost of the cheapest path disjoint from the path selected by the mechanism.",
        "They show that, for a large class of truthful mechanisms for this problem, the frugality ratio is as large as the number of edges in the shortest path.",
        "Talwar [21] extends this definition of frugality ratio to general set systems, and studies the frugality ratio of the classical VCG mechanism [22, 4, 14] for many specific set systems, such as minimum spanning trees and set covers.",
        "While the definition of frugality ratio proposed by [1] is wellmotivated and has been instrumental in studying truthful mechanisms for set systems, it is not completely satisfactory.",
        "Consider, for example, the graph of Figure 1 with the costs cAB = cBC = A B C D Figure 1: The diamond graph 336 cCD = 0, cAC = cBD = 1.",
        "This graph is 2-connected and the VCG payment to the winning path ABCD is bounded.",
        "However, the graph contains no A-D path that is disjoint from ABCD, and hence the frugality ratio of VCG on this graph remains undefined.",
        "At the same time, there is no monopoly, that is, there is no vendor that appears in all feasible sets.",
        "In auctions for other types of set systems, the requirement that there exist a feasible solution disjoint from the selected one is even more severe: for example, for vertex-cover auctions (where vendors correspond to the vertices of some underlying graph, and the feasible sets are vertex covers) the requirement means that the graph must be bipartite.",
        "To deal with this problem, Karlin et al. [16] suggest a better benchmark, which is defined for any monopoly-free set system.",
        "This quantity, which they denote by ν, intuitively corresponds to the value of a cheapest Nash equilibrium.",
        "Based on this new definition, the authors construct new mechanisms for the shortest path problem and show that the overpayment of these mechanisms is within a constant factor of optimal. 1.1 Our results Vertex cover auctions We propose a truthful polynomial-time auction for vertex cover that outputs a solution whose cost is within a factor of 2 of optimal, and whose frugality ratio is at most 2Δ, where Δ is the maximum degree of the graph (Theorem 4).",
        "We complement this result by proving (Theorem 5) that for any Δ and n, there are graphs of maximum degree Δ and size Θ(n) for which any truthful mechanism has frugality ratio at least Δ/2.",
        "This means that the solution quality of our auction is with a factor of 2 of optimal and the frugality ratio is within a factor of 4 of the best possible bound for worst-case inputs.",
        "To the best of our knowledge, this is the first auction for this problem that enjoys these properties.",
        "Moreover, we show how to transform any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio.",
        "Frugality ratios Our vertex cover results naturally suggest two modifications of the definition of ν in [16].",
        "These modifications can be made independently of each other, resulting in four different payment bounds TUmax, TUmin, NTUmax, and NTUmin, where NTUmin is equal to the original payment bound ν of in [16].",
        "All four payment bounds arise as Nash equilibria of certain games (see the full version of this paper [8]); the differences between them can be seen as the price of initiative and the price of cooperation (see Section 3).",
        "While our main result about vertex cover auctions (Theorem 4) is with respect to NTUmin = ν, we make use of the new definitions by first comparing the payment of our mechanism to a weaker bound NTUmax, and then bootstrapping from this result to obtain the desired bound.",
        "Inspired by this application, we embark on a further study of these payment bounds.",
        "Our results here are as follows: 1.",
        "We observe (Proposition 1) that the four payment bounds always obey a particular order that is independent of the choice of the set system and the cost vector, namely, TUmin ≤ NTUmin ≤ NTUmax ≤ TUmax.",
        "We provide examples (Proposition 5 and Corollaries 1 and 2) showing that for the vertex cover problem any two consecutive bounds can differ by a factor of n − 2, where n is the number of agents.",
        "We then show (Theorem 2) that this separation is almost best possible for general set systems by proving that for any set system TUmax/TUmin ≤ n. In contrast, we demonstrate (Theorem 3) that for path auctions TUmax/TUmin ≤ 2.",
        "We provide examples (Propositions 2, 3 and 4) showing that this bound is tight.",
        "We see this as an argument for the study of vertexcover auctions, as they appear to be more representative of the general team -selection problem than the widely studied path auctions. 2.",
        "We show (Theorem 1) that for any set system, if there is a cost vector for which TUmin and NTUmin differ by a factor of α, there is another cost vector that separates NTUmin and NTUmax by the same factor and vice versa; the same is true for the pairs (NTUmin, NTUmax) and (NTUmax, TUmax).",
        "This symmetry is quite surprising, since, e.g., TUmin and NTUmax are obtained from NTUmin by two very different transformations.",
        "This observation suggests that the four payment bounds should be studied in a unified framework; moreover, it leads us to believe that the bootstrapping technique of Theorem 4 may have other applications. 3.",
        "We evaluate the payment bounds introduced here with respect to a checklist of desirable features.",
        "In particular, we note that the payment bound ν = NTUmin of [16] exhibits some counterintuitive properties, such as nonmonotonicity with respect to adding a new feasible set (Proposition 7), and is NP-hard to compute (Theorem 6), while some of the other payment bounds do not suffer from these problems.",
        "This can be seen as an argument in favour of using weaker but efficiently computable bounds NTUmax and TUmax.",
        "Related work Vertex-cover auctions have been studied in the past by Talwar [21] and Calinescu [5].",
        "Both of these papers are based on the definition of frugality ratio used in [1]; as mentioned before, this means that their results only apply to bipartite graphs.",
        "Talwar [21] shows that the frugality ratio of VCG is at most Δ.",
        "However, since finding the cheapest vertex cover is an NP-hard problem, the VCG mechanism is computationally infeasible.",
        "The first (and, to the best of our knowledge, only) paper to investigate polynomial-time truthful mechanisms for vertex cover is [5].",
        "This paper studies an auction that is based on the greedy allocation algorithm, which has an approximation ratio of log n. While the main focus of [5] is the more general set cover problem, the results of [5] imply a frugality ratio of 2Δ2 for vertex cover.",
        "Our results improve on those of [21] as our mechanism is polynomial-time computable, as well as on those of [5], as our mechanism has a better approximation ratio, and we prove a stronger bound on the frugality ratio; moreover, this bound also applies to the mechanism of [5]. 2.",
        "PRELIMINARIES In most of this paper, we discuss auctions for set systems.",
        "A set system is a pair (E, F), where E is the ground set, |E| = n, and F is a collection of feasible sets, which are subsets of E. Two particular types of set systems are of interest to us - shortest path systems, in which the ground set consists of all edges of a network, and the feasible sets are paths between two specified vertices s and t, and vertex cover systems, in which the elements of the ground set are the vertices of a graph, and the feasible sets are vertex covers of this graph.",
        "In set system auctions, each element e of the ground set is owned by an independent agent and has an associated non-negative cost ce.",
        "The goal of the centre is to select (purchase) a feasible set.",
        "Each element e in the selected set incurs a cost of ce.",
        "The elements that are not selected incur no costs.",
        "The auction proceeds as follows: all elements of the ground set make their bids, the centre selects a feasible set based on the bids and makes payments to the agents.",
        "Formally, an auction is defined by an allocation rule A : Rn → F and a payment rule P : Rn → Rn .",
        "The allocation rule takes as input a vector of bids and decides which of the sets in F should be selected.",
        "The payment rule also takes as input a vector of bids and decides how much to pay to each agent.",
        "The standard requirements are individual rationality, i.e., the payment to each agent should be at least as high as his incurred cost (0 for agents not in the selected set and ce for agents in the 337 selected set) and incentive compatibility, or truthfulness, i.e., each agents dominant strategy is to bid his true cost.",
        "An allocation rule is monotone if an agent cannot increase his chance of getting selected by raising his bid.",
        "Formally, for any bid vector b and any e ∈ E, if e ∈ A(b) then e ∈ A(b1, . . . , be, . . . , bn) for any be > be.",
        "Given a monotone allocation rule A and a bid vector b, the threshold bid te of an agent e ∈ A(b) is the highest bid of this agent that still wins the auction, given that the bids of other participants remain the same.",
        "Formally, te = sup{be ∈ R | e ∈ A(b1, . . . , be, . . . , bn)}.",
        "It is well known (see, e.g. [19, 13]) that any auction that has a monotone allocation rule and pays each agent his threshold bid is truthful; conversely, any truthful auction has a monotone allocation rule.",
        "The VCG mechanism is a truthful mechanism that maximises the social welfare and pays 0 to the losing agents.",
        "For set system auctions, this simply means picking a cheapest feasible set, paying each agent in the selected set his threshold bid, and paying 0 to all other agents.",
        "Note, however, that the VCG mechanism may be difficult to implement, since finding a cheapest feasible set may be intractable.",
        "If U is a set of agents, c(U) denotes P w∈U cw.",
        "Similarly, b(U) denotes P w∈U bw. 3.",
        "FRUGALITY RATIOS We start by reproducing the definition of the quantity ν from [16, Definition 4].",
        "Let (E, F) be a set system and let S be a cheapest feasible set with respect to the true costs ce.",
        "Then ν(c, S) is the solution to the following optimisation problem.",
        "Minimise B = P e∈S be subject to (1) be ≥ ce for all e ∈ E (2) P e∈S\\T be ≤ P e∈T \\S ce for all T ∈ F (3) for every e ∈ S, there is a Te ∈ F such that e ∈ Te andP e ∈S\\Te be = P e ∈Te\\S ce The bound ν(c, S) can be seen as an outcome of a two-stage process, where first each agent e ∈ S makes a bid be stating how much it wants to be paid, and then the centre decides whether to accept these bids.",
        "The behaviour of both parties is affected by the following considerations.",
        "From the centres point of view, the set S must remain the most attractive choice, i.e., it must be among the cheapest feasible sets under the new costs ce = ce for e ∈ S, ce = be for e ∈ S (condition (2)).",
        "The reason for that is that if (2) is violated for some set T, the centre would prefer T to S. On the other hand, no agent would agree to a payment that does not cover his costs (condition (1)), and moreover, each agent tries to maximise his profit by bidding as high as possible, i.e., none of the agents can increase his bid without violating condition (2) (condition (3)).",
        "The centre wants to minimise the total payout, so ν(c, S) corresponds to the best possible outcome from the centres point of view.",
        "This definition captures many important aspects of our intuition about fair payments.",
        "However, it can be modified in two ways, both of which are still quite natural, but result in different payment bounds.",
        "First, we can consider the worst rather than the best possible outcome for the centre.",
        "That is, we can consider the maximum total payment that the agents can extract by jointly selecting their bids subject to (1), (2), and (3).",
        "Such a bound corresponds to maximising B subject to (1), (2), and (3) rather than minimising it.",
        "If it is the agents who make the original bids (rather than the centre), this kind of bidding behaviour is plausible.",
        "On the other hand, in a game in which the centre proposes payments to the agents in S and the agents accept them as long as (1), (2) and (3) are satisfied, we would be likely to observe a total payment of ν(c, S).",
        "Hence, the difference between these two definitions can be seen as the price of initiative.",
        "Second, the agents may be able to make payments to each other.",
        "In this case, if they can extract more money from the centre by agreeing on a vector of bids that violates individual rationality (i.e., condition (1)) for some bidders, they might be willing to do so, as the agents who are paid below their costs will be compensated by other members of the group.",
        "The bids must still be realistic, i.e., they have to satisfy be ≥ 0.",
        "The resulting change in payments can be seen as the price of co-operation and corresponds to replacing condition (1) with the following weaker condition (1∗ ): be ≥ 0 for all e ∈ E. (1∗ ) By considering all possible combinations of these modifications, we obtain four different payment bounds, namely • TUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1∗ ), (2), and (3). • TUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1∗ ), (2), and (3). • NTUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1), (2), and (3). • NTUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1), (2), (3).",
        "The abbreviations TU and NTU correspond, respectively, to transferable utility and non-transferable utility, i.e., the agents ability/inability to make payments to each other.",
        "For concreteness, we will take TUmin(c) to be TUmin(c, S) where S is the lexicographically least amongst the cheapest feasible sets.",
        "We define TUmax(c), NTUmin(c), NTUmax(c) and ν(c) similarly, though we will see in Section 6.3 that, in fact, NTUmin(c, S) and NTUmax(c, S) are independent of the choice of S. Note that the quantity ν(c) from [16] is NTUmin(c).",
        "The second modification (transferable utility) is more intuitively appealing in the context of the maximisation problem, as both assume some degree of co-operation between the agents.",
        "While the second modification can be made without the first, the resulting payment bound TUmin(c, S) is too strong to be a realistic benchmark, at least for general set systems.",
        "In particular, it can be smaller than the total cost of the cheapest feasible set S (see Section 6).",
        "Nevertheless, we provide the definition as well as some results about TUmin(c, S) in the paper, both for completeness and because we believe that it may help to understand which properties of the payment bounds are important for our proofs.",
        "Another possibility would be to introduce an additional constraint P e∈S be ≥P e∈S ce in the definition of TUmin(c, S) (note that this condition holds automatically for TUmax(c, S), as TUmax(c, S) ≥ NTUmax(c, S)); however, such a definition would have no direct game-theoretic interpretation, and some of our results (in particular, the ones in Section 4) would no longer be true.",
        "REMARK 1.",
        "For the payment bounds that are derived from maximisation problems, (i.e., TUmax(c, S) and NTUmax(c, S)), constraints of type (3) are redundant and can be dropped.",
        "Hence, TUmax(c, S) and NTUmax(c, S) are solutions to linear programs, and therefore can be computed in polynomial time as long as we have a separation oracle for constraints in (2).",
        "In contrast, 338 NTUmin(c, S) can be NP-hard to compute even if the size of F is polynomial (see Section 6).",
        "The first and third inequalities in the following observation follow from the fact that condition (1∗ ) is strictly weaker than condition (1).",
        "PROPOSITION 1.",
        "TUmin(c, S) ≤ NTUmin(c, S) ≤ NTUmax(c, S) ≤ TUmax(c, S).",
        "Let M be a truthful mechanism for (E, F).",
        "Let pM(c) denote the total payments of M when the actual costs are c. A frugality ratio of M with respect to a payment bound is the ratio between the payment of M and this payment bound.",
        "In particular, φTUmin(M) = sup c pM(c)/TUmin(c), φTUmax(M) = sup c pM(c)/TUmax(c), φNTUmin(M) = sup c pM(c)/NTUmin(c), φNTUmax(M) = sup c pM(c)/NTUmax(c).",
        "We conclude this section by showing that there exist set systems and respective cost vectors for which all four payment bounds are different.",
        "In the next section, we quantify this difference, both for general set systems, and for specific types of set systems, such as path auctions or vertex cover auctions.",
        "EXAMPLE 1.",
        "Consider the shortest-path auction on the graph of Figure 1.",
        "The cheapest feasible sets are all paths from A to D. It can be verified, using the reasoning of Propositions 2 and 3 below, that for the cost vector cAB = cCD = 2, cBC = 1, cAC = cBD = 5, we have • TUmax(c) = 10 (with bAB = bCD = 5, bBC = 0), • NTUmax(c) = 9 (with bAB = bCD = 4, bBC = 1), • NTUmin(c) = 7 (with bAB = bCD = 2, bBC = 3), • TUmin(c) = 5 (with bAB = bCD = 0, bBC = 5). 4.",
        "COMPARING PAYMENT BOUNDS 4.1 Path auctions We start by showing that for path auctions any two consecutive payment bounds can differ by at least a factor of 2.",
        "PROPOSITION 2.",
        "There is an instance of the shortest-path problem for which we have NTUmax(c)/NTUmin(c) ≥ 2.",
        "PROOF.",
        "This construction is due to David Kempe [17].",
        "Consider the graph of Figure 1 with the edge costs cAB = cBC = cCD = 0, cAC = cBD = 1.",
        "Under these costs, ABCD is the cheapest path.",
        "The inequalities in (2) are bAB + bBC ≤ cAC = 1, bBC + bCD ≤ cBD = 1.",
        "By condition (3), both of these inequalities must be tight (the former one is the only inequality involving bAB, and the latter one is the only inequality involving bCD).",
        "The inequalities in (1) are bAB ≥ 0, bBC ≥ 0, bCD ≥ 0.",
        "Now, if the goal is to maximise bAB + bBC + bCD, the best choice is bAB = bCD = 1, bBC = 0, so NTUmax(c) = 2.",
        "On the other hand, if the goal is to minimise bAB + bBC + bCD, one should set bAB = bCD = 0, bBC = 1, so NTUmin(c) = 1.",
        "PROPOSITION 3.",
        "There is an instance of the shortest-path problem for which we have TUmax(c)/NTUmax(c) ≥ 2.",
        "PROOF.",
        "Again, consider the graph of Figure 1.",
        "Let the edge costs be cAB = cCD = 0, cBC = 1, cAC = cBD = 1.",
        "ABCD is the lexicographically-least cheapest path, so we can assume that S = {AB, BC, CD}.",
        "The inequalities in (2) are the same as in the previous example, and by the same argument both of them are, in fact, equalities.",
        "The inequalities in (1) are bAB ≥ 0, bBC ≥ 1, bCD ≥ 0.",
        "Our goal is to maximise bAB + bBC + bCD.",
        "If we have to respect the inequalities in (1), we have to set bAB = bCD = 0, bBC = 1, so NTUmax(c) = 1.",
        "Otherwise, we can set bAB = bCD = 1, bBC = 0, so TUmax(c) ≥ 2.",
        "PROPOSITION 4.",
        "There is an instance of the shortest-path problem for which we have NTUmin(c)/TUmin(c) ≥ 2.",
        "PROOF.",
        "This construction is also based on the graph of Figure 1.",
        "The edge costs are cAB = cCD = 1, cBC = 0, cAC = cBD = 1.",
        "ABCD is the lexicographically least cheapest path, so we can assume that S = {AB, BC, CD}.",
        "Again, the inequalities in (2) are the same, and both are, in fact, equalities.",
        "The inequalities in (1) are bAB ≥ 1, bBC ≥ 0, bCD ≥ 1.",
        "Our goal is to minimise bAB + bBC +bCD.",
        "If we have to respect the inequalities in (1), we have to set bAB = bCD = 1, bBC = 0, so NTUmin(c) = 2.",
        "Otherwise, we can set bAB = bCD = 0, bBC = 1, so TUmin(c) ≤ 1.",
        "In Section 4.4 (Theorem 3), we show that the separation results in Propositions 2, 3, and 4 are optimal. 4.2 Connections between separation results The separation results for path auctions are obtained on the same graph using very similar cost vectors.",
        "It turns out that this is not coincidental.",
        "Namely, we can prove the following theorem.",
        "THEOREM 1.",
        "For any set system (E, F), and any feasible set S, max c TUmax(c, S) NTUmax(c, S) = max c NTUmax(c, S) NTUmin(c, S) , max c NTUmax(c, S) NTUmin(c, S) = max c NTUmin(c, S) TUmin(c, S) , where the maximum is over all cost vectors c for which S is a cheapest feasible set.",
        "The proof of the theorem follows directly from the four lemmas proved below; more precisely, the first equality in Theorem 1 is obtained by combining Lemmas 1 and 2, and the second equality is obtained by combining Lemmas 3 and 4.",
        "We prove Lemma 1 here; the proofs of Lemmas 2- 4 are similar and can be found in the full version of this paper [8].",
        "LEMMA 1.",
        "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and TUmax(c, S)/NTUmax(c, S) = α.",
        "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α.",
        "PROOF.",
        "Suppose that TUmax(c, S) = X and NTUmax(c, S) = Y where X/Y = α.",
        "Assume without loss of generality that S consists of elements 1, . . . , k, and let b1 = (b1 1, . . . , b1 k) and b2 = (b2 1, . . . , b2 k) be the bid vectors that correspond to TUmax(c, S) and NTUmax(c, S), respectively.",
        "Construct the cost vector c by setting ci = ci for i ∈ S, ci = min{ci, b1 i } for i ∈ S. Clearly, S is a cheapest set under c .",
        "Moreover, as the costs of elements outside of S remained the same, the right-hand sides of all constraints in (2) did not change, so any bid vector that satisfies (2) and (3) with respect to c, also satisfies them with respect to c .",
        "We will construct two bid vectors b3 and b4 that satisfy conditions (1), (2), and (3) for the cost vector c , and 339 X X X X X 0 X 12 3 X 4 5 6 Figure 2: Graph that separates payment bounds for vertex cover, n = 7 have P i∈S b3 i = X, P i∈S b4 i = Y .",
        "As NTUmax(c , S) ≥ X and NTUmin(c , S) ≤ Y , this implies the lemma.",
        "We can set b3 i = b1 i : this bid vector satisfies conditions (2) and (3) since b1 does, and we have b1 i ≥ min{ci, b1 i } = ci, which means that b3 satisfies condition (1).",
        "Furthermore, we can set b4 i = b2 i .",
        "Again, b4 satisfies conditions (2) and (3) since b2 does, and since b2 satisfies condition (1), we have b2 i ≥ ci ≥ ci, which means that b4 satisfies condition (1).",
        "LEMMA 2.",
        "Suppose c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
        "Then there is a cost vector c such that S is a cheapest feasible set and TUmax(c , S)/NTUmax(c , S) ≥ α. LEMMA 3.",
        "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
        "Then there is a cost vector c such that S is a cheapest feasible set and NTUmin(c , S)/TUmin(c , S) ≥ α. LEMMA 4.",
        "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmin(c, S)/TUmin(c, S) = α.",
        "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α. 4.3 Vertex-cover auctions In contrast to the case of path auctions, for vertex-cover auctions the gap between NTUmin(c) and NTUmax(c) (and hence between NTUmax(c) and TUmax(c), and between TUmin(c) and NTUmin(c)) can be proportional to the size of the graph.",
        "PROPOSITION 5.",
        "For any n ≥ 3, there is a an n-vertex graph and a cost vector c for which TUmax(c)/NTUmax(c) ≥ n − 2.",
        "PROOF.",
        "The underlying graph consists of an (n − 1)-clique on the vertices X1, . . . , Xn−1, and an extra vertex X0 adjacent to Xn−1.",
        "The costs are cX1 = cX2 = · · · = cXn−2 = 0, cX0 = cXn−1 = 1.",
        "We can assume that S = {X0, X1, . . . , Xn−2} (this is the lexicographically first vertex cover of cost 1).",
        "For this set system, the constraints in (2) are bXi + bX0 ≤ cXn−1 = 1 for i = 1, . . . , n − 2.",
        "Clearly, we can satisfy conditions (2) and (3) by setting bXi = 1 for i = 1, . . . , n − 2, bX0 = 0.",
        "Hence, TUmax(c) ≥ n − 2.",
        "For NTUmax(c), there is an additional constraint bX0 ≥ 1, so the best we can do is to set bXi = 0 for i = 1, . . . , n − 2, bX0 = 1, which implies NTUmax(c) = 1.",
        "Combining Proposition 5 with Lemmas 1 and 3, we derive the following corollaries.",
        "COROLLARY 1.",
        "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmax(c)/NTUmin(c) ≥ n − 2.",
        "COROLLARY 2.",
        "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmin(c)/TUmin(c) ≥ n − 2. j+2ix ij P \\ P ij+2P \\ P yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 P \\ P Figure 3: Proof of Theorem 3: constraints for ˆPij and ˆPij+2 do not overlap 4.4 Upper bounds It turns out that the lower bound proved in the previous subsection is almost tight.",
        "More precisely, the following theorem shows that no two payment bounds can differ by more than a factor of n; moreover, this is the case not just for the vertex cover problem, but for general set systems.",
        "We bound the gap between TUmax(c) and TUmin(c).",
        "Since TUmin(c) ≤ NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), this bound applies to any pair of payment bounds.",
        "THEOREM 2.",
        "For any set system (E, F) and any cost vector c, we have TUmax(c)/TUmin(c) ≤ n. PROOF.",
        "Assume wlog that the winning set S consists of elements 1, . . . , k. Let c1, . . . , ck be the true costs of elements in S, let b1, . . . , bk be their bids that correspond to TUmin(c), and let b1 , . . . , bk be their bids that correspond to TUmax(c).",
        "Consider the conditions (2) and (3) for S. One can pick a subset L of at most k inequalities in (2) so that for each i = 1, . . . , k there is at least one inequality in L that is tight for bi.",
        "Suppose that the jth inequality in L is of the form bi1 + · · · + bit ≤ c(Tj \\ S).",
        "For bi, all inequalities in L are, in fact, equalities.",
        "Hence, by adding up all of them we obtain k P i=1,...,k bi ≥ P j=1,...,k c(Tj \\ S).",
        "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c(Tj \\ S).",
        "Combining these two inequalities, we obtain nTUmin(c) ≥ kTUmin(c) ≥ TUmax(c).",
        "REMARK 2.",
        "The final line of the proof of Theorem 2 shows that, in fact, the upper bound on TUmax(c)/TUmin(c) can be strengthened to the size of the winning set, k. Note that in Proposition 5, as well as in Corollaries 1 and 2, k = n−1, so these results do not contradict each other.",
        "For path auctions, this upper bound can be improved to 2, matching the lower bounds of Section 4.1.",
        "THEOREM 3.",
        "For any instance of the shortest path problem, TUmax(c) ≤ 2 TUmin(c).",
        "PROOF.",
        "Given a network (G, s, t), assume without loss of generality that the lexicographically-least cheapest s-t path, P, in G is {e1, . . . , ek}, where e1 = (s, v1), e2 = (v1, v2), . . . , ek = (vk−1, t).",
        "Let c1, . . . , ck be the true costs of e1, . . . , ek, and let b = (b1, . . . , bk) and b = (b1 , . . . , bk ) be bid vectors that correspond to TUmin(c) and TUmax(c), respectively.",
        "For any i = 1, . . . , k, there is a constraint in (2) that is tight for bi with respect to the bid vector b , i.e., an s-t path Pi that avoids ei and satisfies b (P \\Pi) = c(Pi \\P).",
        "We can assume without loss of generality that Pi coincides with P up to some vertex xi, then deviates from P to avoid ei, and finally returns to P at a vertex 340 yi and coincides with P from then on (clearly, it might happen that s = xi or t = yi).",
        "Indeed, if Pi deviates from P more than once, one of these deviations is not necessary to avoid ei and can be replaced with the respective segment of P without increasing the cost of Pi.",
        "Among all paths of this form, let ˆPi be the one with the largest value of yi, i.e., the rightmost one.",
        "This path corresponds to an inequality Ii of the form bxi+1 + · · · + byi ≤ c( ˆPi \\ P).",
        "As in the proof of Theorem 2, we construct a set of tight constraints L such that every variable bi appears in at least one of these constraints; however, now we have to be more careful about the choice of constraints in L. We construct L inductively as follows.",
        "Start by setting L = {I1}.",
        "At the jth step, suppose that all variables up to (but not including) bij appear in at least one inequality in L. Add Iij to L. Note that for any j we have yij+1 > yij .",
        "This is because the inequalities added to L during the first j steps did not cover bij+1 .",
        "See Figure 3.",
        "Since yij+2 > yij+1 , we must also have xij+2 > yij : otherwise, ˆPij+1 would not be the rightmost constraint for bij+1 .",
        "Therefore, the variables in Iij+2 and Iij do not overlap, and hence no bi can appear in more than two inequalities in L. Now we follow the argument of the proof of Theorem 2 to finish.",
        "By adding up all of the (tight) inequalities in L for bi we obtain 2 P i=1,...,k bi ≥ P j=1,...,k c( ˆPj \\ P).",
        "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c( ˆPj \\ P), so TUmax(c) ≤ 2TUmin(c). 5.",
        "TRUTHFUL MECHANISMS FOR VERTEX COVER Recall that for a vertex-cover auction on a graph G = (V, E), an allocation rule is an algorithm that takes as input a bid bv for each vertex and returns a vertex cover ˆS of G. As explained in Section 2, we can combine a monotone allocation rule with threshold payments to obtain a truthful auction.",
        "Two natural examples of monotone allocation rules are Aopt, i.e., the algorithm that finds an optimal vertex cover, and the greedy algorithm AGR.",
        "However, Aopt cannot be guaranteed to run in polynomial time unless P = NP and AGR has approximation ratio of log n. Another approximation algorithm for vertex cover, which has approximation ratio 2, is the local ratio algorithm ALR [2, 3].",
        "This algorithm considers the edges of G one by one.",
        "Given an edge e = (u, v), it computes = min{bu, bv} and sets bu = bu − , bv = bv − .",
        "After all edges have been processed, ALR returns the set of vertices {v | bv = 0}.",
        "It is not hard to check that if the order in which the edges are considered is independent of the bids, then this algorithm is monotone as well.",
        "Hence, we can use it to construct a truthful auction that is guaranteed to select a vertex cover whose cost is within a factor of 2 from the optimal.",
        "However, while the quality of the solution produced by ALR is much better than that of AGR, we still need to show that its total payment is not too high.",
        "In the next subsection, we bound the frugality ratio of ALR (and, more generally, all algorithms that satisfy the condition of local optimality, defined later) by 2Δ, where Δ is the maximum degree of G. We then prove a matching lower bound showing that for some graphs the frugality ratio of any truthful auction is at least Δ/2. 5.1 Upper bound We say that an allocation rule is locally optimal if whenever bv >P w∼v bw, the vertex v is not chosen.",
        "Note that for any such rule the threshold bid of v satisfies tv ≤ P w∼v bw.",
        "CLAIM 1.",
        "The algorithms Aopt, AGR, and ALR are locally optimal.",
        "THEOREM 4.",
        "Any vertex cover auction M that has a locally optimal and monotone allocation rule and pays each agent his threshold bid has frugality ratio φNTUmin(M) ≤ 2Δ.",
        "To prove Theorem 4, we first show that the total payment of any locally optimal mechanism does not exceed Δc(V ).",
        "We then demonstrate that NTUmin(c) ≥ c(V )/2.",
        "By combining these two results, the theorem follows.",
        "LEMMA 5.",
        "Consider a graph G = (V, E) with maximum degree Δ.",
        "Let M be a vertex-cover auction on G that satisfies the conditions of Theorem 4.",
        "Then for any cost vector c, the total payment of M satisfies pM(c) ≤ Δc(V ).",
        "PROOF.",
        "First note that any such auction is truthful, so we can assume that each agents bid is equal to his cost.",
        "Let ˆS be the vertex cover selected by M. Then by local optimality pM(c) = X v∈ ˆS tv ≤ X v∈ ˆS X w∼v cw ≤ X w∈V Δcw = Δc(V ).",
        "We now derive a lower bound on TUmax(c); while not essential for the proof of Theorem 4, it helps us build the intuition necessary for that proof.",
        "LEMMA 6.",
        "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, TUmax(c, S) ≥ c(V \\ S) PROOF.",
        "For a vertex w with at least one neighbour in S, let d(w) denote the number of neighbours that w has in S. Consider the bid vector b in which, for each v ∈ S, bv = P w∼v,w∈S cw d(w) .",
        "Then P v∈S bv = P v∈S P w∼v,w∈S cw/d(w) = P w /∈S cw = c(V \\ S).",
        "To finish we want to show that b is feasible in the sense that it satisfies (2).",
        "Consider a vertex cover T, and extend the bid vector b by assigning bv = cv for v /∈ S. Then b(T) = c(T \\S)+b(S∩T) ≥ c(T \\S)+ X v∈S∩T X w∈S∩T :w∼v cw d(w) , and since all edges between S ∩ T and S go to S ∩ T, the righthand-side is equal to c(T \\S)+ X w∈S∩T cw = c(T \\S)+c(S ∩T) = c(V \\S) = b(S).",
        "Next, we prove a lower bound on NTUmax(c, S); we will then use it to obtain a lower bound on NTUmin(c).",
        "LEMMA 7.",
        "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmax(c, S) ≥ c(V \\ S) PROOF.",
        "If c(S) ≥ c(V \\ S), by condition (1) we are done.",
        "Therefore, for the rest of the proof we assume that c(S) < c(V \\ S).",
        "We show how to construct a bid vector (be)e∈S that satisfies conditions (1) and (2) such that b(S) ≥ c(V \\ S); clearly, this implies NTUmax(c, S) ≥ c(V \\ S).",
        "Recall that a network flow problem is described by a directed graph Γ = (VΓ, EΓ), a source node s ∈ VΓ, a sink node t ∈ VΓ, and a vector of capacity constraints ae, e ∈ EΓ.",
        "Consider a network (VΓ, EΓ) such that VΓ = V ∪{s, t}, EΓ = E1 ∪E2 ∪E3, where E1 = {(s, v) | v ∈ S}, E2 = {(v, w) | v ∈ S, w ∈ 341 V \\ S, (v, w) ∈ E}, E3 = {(w, t) | w ∈ V \\ S}.",
        "Since S is a vertex cover for G, no edge of E can have both of its endpoints in V \\ S, and by construction, E2 contains no edges with both endpoints in S. Therefore, the graph (V, E2) is bipartite with parts (S, V \\ S).",
        "Set the capacity constraints for e ∈ EΓ as follows: a(s,v) = cv, a(w,t) = cw, a(v,w) = +∞ for all v ∈ S, w ∈ V \\ S. Recall that a cut is a partition of the vertices in VΓ into two sets C1 and C2 so that s ∈ C1, t ∈ C2; we denote such a cut by C = (C1, C2).",
        "Abusing notation, we write e = (u, v) ∈ C if u ∈ C1, v ∈ C2 or u ∈ C2, v ∈ C1, and say that such an edge e = (u, v) crosses the cut C. The capacity of a cut C is computed as cap(C) = P (v,w)∈C a(v,w).",
        "We have cap(s, V ∪{t}) = c(S), cap({s} ∪ V, t) = c(V \\ S).",
        "Let Cmin = ({s} ∪ S ∪ W , {t} ∪ S ∪ W ) be a minimum cut in Γ, where S , S ⊆ S, W , W ⊆ V \\ S. See Figure 4.",
        "As cap(Cmin) ≤ cap(s, V ∪ {t}) = c(S) < +∞, and any edge in E2 has infinite capacity, no edge (u, v) ∈ E2 crosses Cmin.",
        "Consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
        "Clearly, C = ({s} ∪ S ∪ W , {t}) is a minimum cut in Γ (otherwise, there would exist a smaller cut for Γ).",
        "As cap(C ) = c(W ), we have c(S ) ≥ c(W ).",
        "Now, consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
        "Similarly, C = ({s}, S ∪ W ∪ {t}) is a minimum cut in Γ , cap(C ) = c(S ).",
        "As the size of a maximum flow from s to t is equal to the capacity of a minimum cut separating s and t, there exists a flow F = (fe)e∈EΓ of size c(S ).",
        "This flow has to saturate all edges between s and S , i.e., f(s,v) = cv for all v ∈ S .",
        "Now, increase the capacities of all edges between s and S to +∞.",
        "In the modified network, the capacity of a minimum cut (and hence the size of a maximum flow) is c(W ), and a maximum flow F = (fe)e∈EΓ can be constructed by greedily augmenting F. Set bv = cv for all v ∈ S , bv = f(s,v) for all v ∈ S .",
        "As F is constructed by augmenting F, we have bv ≥ cv for all v ∈ S, i.e., condition (1) is satisfied.",
        "Now, let us check that no vertex cover T ⊆ V can violate condition (2).",
        "Set T1 = T ∩ S , T2 = T ∩ S , T3 = T ∩ W , T4 = T ∩ W ; our goal is to show that b(S \\ T1) + b(S \\ T2) ≤ c(T3)+c(T4).",
        "Consider all edges (u, v) ∈ E such that u ∈ S \\T1.",
        "If (u, v) ∈ E2 then v ∈ T3 (no edge in E2 can cross the cut), and if u, v ∈ S then v ∈ T1∪T2.",
        "Hence, T1∪T3∪S is a vertex cover for G, and therefore c(T1)+ c(T3)+ c(S ) ≥ c(S) = c(T1)+ c(S \\ T1) + c(S ).",
        "Consequently, c(T3) ≥ c(S \\ T1) = b(S \\ T1).",
        "Now, consider the vertices in S \\T2.",
        "Any edge in E2 that starts in one of these vertices has to end in T4 (this edge has to be covered by T, and it cannot go across the cut).",
        "Therefore, the total flow out of S \\T2 is at most the total flow out of T4, i.e., b(S \\T2) ≤ c(T4).",
        "Hence, b(S \\ T1) + b(S \\ T2) ≤ c(T3) + c(T4).",
        "Finally, we derive a lower bound on the payment bound that is of interest to us, namely, NTUmin(c).",
        "LEMMA 8.",
        "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmin(c, S) ≥ c(V \\ S) PROOF.",
        "Suppose for contradiction that c is a cost vector with minimum-cost vertex cover S and NTUmin(c, S) < c(V \\S).",
        "Let b be the corresponding bid vector and let c be a new cost vector with cv = bv for v ∈ S and cv = cv for v ∈ S. Condition (2) guarantees that S is an optimal solution to the cost vector c .",
        "Now compute a bid vector b corresponding to NTUmax(c , S).",
        "We S W S W s t T1 T3 T2 T4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 00 11 11 0 00 1 11 0 00 1 11 0 00 1 11 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00000 0000000000 0000000000 00000 0000000000 0000000000 00000 0000000000 11111 1111111111 1111111111 11111 1111111111 1111111111 11111 1111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 Figure 4: Proof of Lemma 7.",
        "Dashed lines correspond to edges in E \\ E2 claim that bv = cv for any v ∈ S. Indeed, suppose that bv > cv for some v ∈ S (bv = cv for v ∈ S by construction).",
        "As b satisfies conditions (1)-(3), among the inequalities in (2) there is one that is tight for v and the bid vector b.",
        "That is, b(S \\ T) = c(T \\ S).",
        "By the construction of c , c (S \\ T) = c (T \\ S).",
        "Now since bw ≥ cw for all w ∈ S, bv > cv implies b (S \\T) > c (S \\T) = c (T \\S).",
        "But this violates (2).",
        "So we now know b = c .",
        "Hence, we have NTUmax(c , S) = P v∈S bv = NTUmin(c, S) < c(V \\ S), giving a contradiction to the fact that NTUmax(c , S) ≥ c (V \\S) which we proved in Lemma 7.",
        "As NTUmin(c, S) satisfies condition (1), it follows that we have NTUmin(c, S) ≥ c(S).",
        "Together will Lemma 8, this implies NTUmin(c, S) ≥ max{c(V \\ S), c(S)} ≥ c(V )/2.",
        "Combined with Lemma 5, this completes the proof of Theorem 4.",
        "REMARK 3.",
        "As NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), our bound of 2Δ extends to the smaller frugality ratios that we consider, i.e., φNTUmax(M) and φTUmax(M).",
        "It is not clear whether it extends to the larger frugality ratio φTUmin(M).",
        "However, the frugality ratio φTUmin(M) is not realistic because the payment bound TUmin(c) is inappropriately low - we show in Section 6 that TUmin(c) can be significantly smaller than the total cost of a cheapest vertex cover.",
        "Extensions We can also apply our results to monotone vertex-cover algorithms that do not necessarily output locally-optimal solutions.",
        "To do so, we simply take the vertex cover produced by any such algorithm and transform it into a locally-optimal one, considering the vertices in lexicographic order and replacing a vertex v with its neighbours whenever bv > P u∼v bu.",
        "Note that if a vertex u has been added to the vertex cover during this process, it means that it has a neighbour whose bid is higher than bu, so after one pass all vertices in the vertex cover satisfy bv ≤ P u∼v bu.",
        "This procedure is monotone in bids, and it can only decrease the cost of the vertex cover.",
        "Therefore, using it on top of a monotone allocation rule with approx342 imation ratio α, we obtain a monotone locally-optimal allocation rule with approximation ratio α.",
        "Combining it with threshold payments, we get an auction with φNTUmin ≤ 2Δ.",
        "Since any truthful auction has a monotone allocation rule, this procedure transforms any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio. 5.2 Lower bound In this subsection, we prove that the upper bound of Theorem 4 is essentially optimal.",
        "Our proof uses the techniques of [9], where the authors prove a similar result for shortest-path auctions.",
        "THEOREM 5.",
        "For any Δ > 0 and any n, there exist a graph G of maximum degree Δ and size N > n such that for any truthful mechanism M on G we have φNTUmin(M) ≥ Δ/2.",
        "PROOF.",
        "Given n and Δ, set k = n/2Δ .",
        "Let G be the graph that consists of k blocks B1, . . . , Bk of size 2Δ each, where each Bi is a complete bipartite graph with parts Li and Ri, |Li| = |Ri| = Δ.",
        "We will consider two families of cost vectors for G. Under a cost vector x ∈ X, each block Bi has one vertex of cost 1; all other vertices cost 0.",
        "Under a cost vector y ∈ Y , there is one block that has two vertices of cost 1, one in each part, all other blocks have one vertex of cost 1, and all other vertices cost 0.",
        "Clearly, |X| = (2Δ)k , |Y | = k(2Δ)k−1 Δ2 .",
        "We will now construct a bipartite graph W with the vertex set X ∪ Y as follows.",
        "Consider a cost vector y ∈ Y that has two vertices of cost 1 in Bi; let these vertices be vl ∈ Li and vr ∈ Ri.",
        "By changing the cost of either of these vertices to 0, we obtain a cost vector in X.",
        "Let xl and xr be the cost vectors obtained by changing the cost of vl and vr, respectively.",
        "The vertex cover chosen by M(y) must either contain all vertices in Li or it must contain all vertices in Ri.",
        "In the former case, we put in W an edge from y to xl and in the latter case we put in W an edge from y to xr (if the vertex cover includes all of Bi, W contains both of these edges).",
        "The graph W has at least k(2Δ)k−1 Δ2 edges, so there must exist an x ∈ X of degree at least kΔ/2.",
        "Let y1, . . . , ykΔ/2 be the other endpoints of the edges incident to x, and for each i = 1, . . . , kΔ/2, let vi be the vertex whose cost is different under x and yi; note that all vi are distinct.",
        "It is not hard to see that NTUmin(x) ≤ k: the cheapest vertex cover contains the all-0 part of each block, and we can satisfy conditions (1)-(3) by letting one of the vertices in the all-0 part of each block to bid 1, while all other the vertices in the cheapest set bid 0.",
        "On the other hand, by monotonicity of M we have vi ∈ M(x) for i = 1, . . . , kΔ/2 (vi is in the winning set under yi, and x is obtained from yi by decreasing the cost of vi), and moreover, the threshold bid of each vi is at least 1, so the total payment of M on x is at least kΔ/2.",
        "Hence, φNTUmin(M) ≥ M(x)/NTUmin(x) ≥ Δ/2.",
        "REMARK 4.",
        "The lower bound of Theorem 5 can be generalised to randomised mechanisms, where a randomised mechanism is considered to be truthful if it can be represented as a probability distribution over truthful mechanisms.",
        "In this case, instead of choosing the vertex x ∈ X with the highest degree, we put both (y, xl) and (y, xr) into W , label each edge with the probability that the respective part of the block is chosen, and pick x ∈ X with the highest weighted degree.",
        "The argument can be further extended to a more permissive definition of truthfulness for randomised mechanisms, but this discussion is beyond the scope of this paper. 6.",
        "PROPERTIES OF PAYMENT BOUNDS In this section we consider several desirable properties of payment bounds and evaluate the four payment bounds proposed in this paper with respect to them.",
        "The particular properties that we are interested in are independence of the choice of S (Section 6.3), monotonicity (Section 6.4.1), computational hardness (Section 6.4.2), and the relationship with other reasonable bounds, such as the total cost of the cheapest set (Section 6.1), or the total VCG payment (Section 6.2). 6.1 Comparison with total cost Our first requirement is that a payment bound should not be less than the total cost of the selected set.",
        "Payment bounds are used to evaluate the performance of set-system auctions.",
        "The latter have to satisfy individual rationality, i.e., the payment to each agent must be at least as large as his incurred costs; it is only reasonable to require the payment bound to satisfy the same requirement.",
        "Clearly, NTUmax(c) and NTUmin(c) satisfy this requirement due to condition (1), and so does TUmax(c), since TUmax(c) ≥ NTUmax(c).",
        "However, TUmin(c) fails this test.",
        "The example of Proposition 4 shows that for path auctions, TUmin(c) can be smaller than the total cost by a factor of 2.",
        "Moreover, there are set systems and cost vectors for which TUmin(c) is smaller than the cost of the cheapest set S by a factor of Ω(n).",
        "Consider, for example, the vertex-cover auction for the graph of Proposition 5 with the costs cX1 = · · · = cXn−2 = cXn−1 = 1, cX0 = 0.",
        "The cost of a cheapest vertex cover is n − 2, and the lexicographically first vertex cover of cost n−2 is {X0, X1, . . . , Xn−2}.",
        "The constraints in (2) are bXi + bX0 ≤ cXn−1 = 1.",
        "Clearly, we can satisfy conditions (2) and (3) by setting bX1 = · · · = bXn−2 = 0, bX0 = 1, which means that TUmin(c) ≤ 1.",
        "This observation suggests that the payment bound TUmin(c) is too strong to be realistic, since it can be substantially lower than the cost of the cheapest feasible set.",
        "Nevertheless, some of the positive results that were proved in [16] for NTUmin(c) go through for TUmin(c) as well.",
        "In particular, one can show that if the feasible sets are the bases of a monopolyfree matroid, then φTUmin(VCG) = 1.",
        "To show that φTUmin(VCG) is at most 1, one must prove that the VCG payment is at most TUmin(c).",
        "This is shown for NTUmin(c) in the first paragraph of the proof of Theorem 5 in [16].",
        "Their argument does not use condition (1) at all, so it also applies to TUmin(c).",
        "On the other hand, φTUmin(VCG) ≥ 1 since φTUmin(VCG) ≥ φNTUmin(VCG) and φNTUmin(VCG) ≥ 1 by Proposition 7 of [16] (and also by Proposition 6 below). 6.2 Comparison with VCG payments Another measure of suitability for payment bounds is that they should not result in frugality ratios that are less then 1 for wellknown truthful mechanisms.",
        "If this is indeed the case, the payment bound may be too weak, as it becomes too easy to design mechanisms that perform well with respect to it.",
        "It particular, a reasonable requirement is that a payment bound should not exceed the total payment of the classical VCG mechanism.",
        "The following proposition shows that NTUmax(c), and therefore also NTUmin(c) and TUmin(c), do not exceed the VCG payment pVCG(c).",
        "The proof essentially follows the argument of Proposition 7 of [16] and can be found in the full version of this paper [8].",
        "PROPOSITION 6. φNTUmax(VCG) ≥ 1.",
        "Proposition 6 shows that none of the payment bounds TUmin(c), NTUmin(c) and NTUmax(c) exceeds the payment of VCG.",
        "However, the payment bound TUmax(c) can be larger that the total 343 VCG payment.",
        "In particular, for the instance in Proposition 5, the VCG payment is smaller than TUmax(c) by a factor of n − 2.",
        "We have already seen that TUmax(c) ≥ n − 2.",
        "On the other hand, under VCG, the threshold bid of any Xi, i = 1, . . . , n − 2, is 0: if any such vertex bids above 0, it is deleted from the winning set together with X0 and replaced with Xn−1.",
        "Similarly, the threshold bid of X0 is 1, because if X0 bids above 1, it can be replaced with Xn−1.",
        "So the VCG payment is 1.",
        "This result is not surprising: the definition of TUmax(c) implicitly assumes there is co-operation between the agents, while the computation of VCG payments does not take into account any interaction between them.",
        "Indeed, co-operation enables the agents to extract higher payments under VCG.",
        "That is, VCG is not groupstrategyproof.",
        "This suggests that as a payment bound, TUmax(c) may be too liberal, at least in a context where there is little or no co-operation between agents.",
        "Perhaps TUmax(c) can be a good benchmark for measuring the performance of mechanisms designed for agents that can form coalitions or make side payments to each other, in particular, group-strategyproof mechanisms.",
        "Another setting in which bounding φTUmax is still of some interest is when, for the underlying problem, the optimal allocation and VCG payments are NP-hard to compute.",
        "In this case, finding a polynomial-time computable mechanism with good frugality ratio with respect to TUmax(c) is a non-trivial task, while bounding the frugality ratio with respect to more challenging payment bounds could be too difficult.",
        "To illustrate this point, compare the proofs of Lemma 6 and Lemma 7: both require some effort, but the latter is much more difficult than the former. 6.3 The choice of S All payment bounds defined in this paper correspond to the total bid of all elements in the cheapest feasible set, where ties are broken lexicographically.",
        "While this definition ensures that our payment bounds are well-defined, the particular choice of the drawresolution rule appears arbitrary, and one might wonder if our payment bounds are sufficiently robust to be independent of this choice.",
        "It turns out that is indeed the case for NTUmin(c) and NTUmax(c), i.e., these bounds do not depend on the draw-resolution rule.",
        "To see this, suppose that two feasible sets S1 and S2 have the same cost.",
        "In the computation of NTUmin(c, S1), all vertices in S1 \\S2 would have to bid their true cost, since otherwise S2 would become cheaper than S1.",
        "Hence, any bid vector for S1 can only have be = ce for e ∈ S1 ∩ S2, and hence constitutes a valid bid vector for S2 and vice versa.",
        "A similar argument applies to NTUmax(c).",
        "However, for TUmin(c) and TUmax(c) this is not the case.",
        "For example, consider the set system E = {e1, e2, e3, e4, e5}, F = {S1 = {e1, e2}, S2 = {e2, e3, e4}, S3 = {e4, e5}} with the costs c1 = 2, c2 = c3 = c4 = 1, c5 = 3.",
        "The cheapest sets are S1 and S2.",
        "Now TUmax(c, S1) ≤ 4, as the total bid of the elements in S1 cannot exceed the total cost of S3.",
        "On the other hand, TUmax(c, S2) ≥ 5, as we can set b2 = 3, b3 = 0, b4 = 2.",
        "Similarly, TUmin(c, S1) = 4, because the inequalities in (2) are b1 ≤ 2 and b1 + b2 ≤ 4.",
        "But TUmin(c, S2) ≤ 3 as we can set b2 = 1, b3 = 2, b4 = 0. 6.4 Negative results for NTUmin(c) and TUmin(c) The results in [16] and our vertex cover results are proved for the frugality ratio φNTUmin.",
        "Indeed, it can be argued that φNTUmin is the best definition of frugality ratio, because among all reasonable payment bounds (i.e., ones that are at least as large as the cost of the cheapest feasible set), it is most demanding of the algorithm.",
        "However, NTUmin(c) is not always the easiest or the most natural payment bound to work with.",
        "In this subsection, we discuss several disadvantages of NTUmin(c) (and also TUmin(c)) as compared to NTUmax(c) and TUmax(c). 6.4.1 Nonmonotonicity The first problem with NTUmin(c) is that it is not monotone with respect to F, i.e., it may increase when one adds a feasible set to F. (It is, however, monotone in the sense that a losing agent cannot become a winner by raising his cost.)",
        "Intuitively, a good payment bound should satisfy this monotonicity requirement, as adding a feasible set increases the competition, so it should drive the prices down.",
        "Note that this indeed the case for NTUmax(c) and TUmax(c) since a new feasible set adds a constraint in (2), thus limiting the solution space for the respective linear program.",
        "PROPOSITION 7.",
        "Adding a feasible set to F can increase the value of NTUmin(c) by a factor of Ω(n).",
        "PROOF.",
        "Let E = {x, xx, y1, . . . , yn, z1, . . . , zn}.",
        "Set Y = {y1, . . . , yn}, S = Y ∪ {x}, Ti = Y \\ {yi} ∪ {zi}, i = 1, . . . , n, and suppose that F = {S, T1, . . . , Tn}.",
        "The costs are cx = 0, cxx = 0, cyi = 0, czi = 1 for i = 1, . . . , n. Note that S is the cheapest feasible set.",
        "Let F = F ∪ {T0}, where T0 = Y ∪ {xx}.",
        "For F, the bid vector by1 = · · · = byn = 0, bx = 1 satisfies (1), (2), and (3), so NTUmin(c) ≤ 1.",
        "For F , S is still the lexicographically-least cheapest set.",
        "Any optimal solution has bx = 0 (by constraint in (2) with T0).",
        "Condition (3) for yi implies bx + byi = czi = 1, so byi = 1 and NTUmin(c) = n. For path auctions, it has been shown [18] that NTUmin(c) is non-monotone in a slightly different sense, i.e., with respect to adding a new edge (agent) rather than a new feasible set (a team of existing agents).",
        "REMARK 5.",
        "We can also show that NTUmin(c) is non-monotone for vertex cover.",
        "In this case, adding a new feasible set corresponds to deleting edges from the graph.",
        "It turns out that deleting a single edge can increase NTUmin(c) by a factor of n − 2; the construction is similar to that of Proposition 5. 6.4.2 NP-Hardness Another problem with NTUmin(c, S) is that it is NP-hard to compute even if the number of feasible sets is polynomial in n. Again, this puts it at a disadvantage compared to NTUmax(c, S) and TUmax(c, S) (see Remark 1).",
        "THEOREM 6.",
        "Computing NTUmin(c) is NP-hard, even when the lexicographically-least feasible set S is given in the input.",
        "PROOF.",
        "We reduce EXACT COVER BY 3-SETS(X3C) to our problem.",
        "An instance of X3C is given by a universe G = {g1, . . . , gn} and a collection of subsets C1, . . . , Cm, Ci ⊂ G, |Ci| = 3, where the goal is to decide whether one can cover G by n/3 of these sets.",
        "Observe that if this is indeed the case, each element of G is contained in exactly one set of the cover.",
        "LEMMA 9.",
        "Consider a minimisation problem P of the following form: Minimise P i=1,...,n bi under conditions (1) bi ≥ 0 for all i = 1, . . . , n; (2) for any j = 1, . . . , k we have P bi∈Sj bi ≤ aj, where Sj ⊆ {b1, . . . , bn}; (3) for each bj , one of the constraints in (2) involving it is tight.",
        "For any such P, one can construct a set system S and a vector of costs c such that NTUmin(c) is the optimal solution to P. PROOF.",
        "The construction is straightforward: there is an element of cost 0 for each bi, an element of cost aj for each aj, the feasible solutions are {b1, . . . , bn}, or any set obtained from {b1, . . . , bn} by replacing the elements in Sj by aj. 344 By this lemma, all we have to do to prove Theorem 6 is to show how to solve X3C by using the solution to a minimisation problem of the form given in Lemma 9.",
        "We do this as follows.",
        "For each Ci, we introduce 4 variables xi, ¯xi, ai, and bi.",
        "Also, for each element gj of G there is a variable dj.",
        "We use the following set of constraints: • In (1), we have constraints xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 for all i = 1, . . . , m, j = 1, . . . , n. • In (2), for all i = 1, . . . , m, we have the following 5 constraints: xi + ¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi + bi ≤ 1.",
        "Also, for all j = 1, . . . , n we have a constraint of the form xi1 + · · · + xik + dj ≤ 1, where Ci1 , . . . , Cik are the sets that contain gj.",
        "The goal is to minimize z = P i(xi + ¯xi + ai + bi) + P j dj.",
        "Observe that for each j, there is only one constraint involving dj , so by condition (3) it must be tight.",
        "Consider the two constraints involving ai.",
        "One of them must be tight, and therefore xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1.",
        "Hence, for any feasible solution to (1)-(3) we have z ≥ m. Now, suppose that there is an exact set cover.",
        "Set dj = 0 for j = 1, . . . , n. Also, if Ci is included in this cover, set xi = 1, ¯xi = ai = bi = 0, otherwise set ¯xi = 1, xi = ai = bi = 0.",
        "Clearly, all inequalities in (2) are satisfied (we use the fact that each element is covered exactly once), and for each variable, one of the constraints involving it is tight.",
        "This assignment results in z = m. Conversely, suppose there is a feasible solution with z = m. As each addend of the form xi + ¯xi + ai + bi contributes at least 1, we have xi + ¯xi + ai + bi = 1 for all i, dj = 0 for all j.",
        "We will now show that for each i, either xi = 1 and ¯xi = 0, or xi = 0 and ¯xi = 1.",
        "For the sake of contradiction, suppose that xi = δ < 1, ¯xi = δ < 1.",
        "As one of the constraints involving ai must be tight, we have ai ≥ min{1 − δ, 1 − δ }.",
        "Similarly, bi ≥ min{1 − δ, 1 − δ }.",
        "Hence, xi + ¯xi + ai + bi = 1 = δ +δ +2 min{1−δ, 1−δ } > 1.",
        "To finish the proof, note that for each j = 1, . . . , m we have xi1 + · · · + xik + dj = 1 and dj = 0, so the subsets that correspond to xi = 1 constitute a set cover.",
        "REMARK 6.",
        "In the proofs of Proposition 7 and Theorem 6 all constraints in (1) are of the form be ≥ 0.",
        "Hence, the same results are true for TUmin(c).",
        "REMARK 7.",
        "For shortest-path auctions, the size of F can be superpolynomial.",
        "However, there is a polynomial-time separation oracle for constraints in (2) (to construct one, use any algorithm for finding shortest paths), so one can compute NTUmax(c) and TUmax(c) in polynomial time.",
        "On the other hand, recently and independently it was shown [18] that computing NTUmin(c) for shortest-path auctions is NP-hard. 7.",
        "REFERENCES [1] A. Archer and E. Tardos, Frugal path mechanisms.",
        "In Proceedings of the 13th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 991-999, 2002 [2] R. Bar-Yehuda, K. Bendel, A. Freund, and D. Rawitz, Local ratio: A unified framework for approximation algorithms.",
        "In Memoriam: Shimon Even 1935-2004.",
        "ACM Comput.",
        "Surv., 36(4):422-463, 2004 [3] R. Bar-Yehuda and S. Even, A local-ratio theorem for approximating the weighted vertex cover problem.",
        "Annals of Discrete Mathematics, 25:27-46, 1985 [4] E. Clarke, Multipart pricing of public goods.",
        "Public Choice, 8:17-33, 1971 [5] G. Calinescu, Bounding the payment of approximate truthful mechanisms.",
        "In Proceedings of the 15th International Symposium on Algorithms and Computation, pages 221-233, 2004 [6] A. Czumaj and A. Ronen, On the expected payment of mechanisms for task allocation.",
        "In Proceedings of the 5th ACM Conference on Electronic Commerce (EC04), 2004 [7] E. Elkind, True costs of cheap labor are hard to measure: edge deletion and VCG payments in graphs.",
        "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [8] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Frugality ratios and improved truthful mechanisms for vertex cover.",
        "Available from http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai, and K. Steiglitz, Frugality in path auctions.",
        "In Proceedings of the 15th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 694-702, 2004 [10] J. Feigenbaum, C. H. Papadimitriou, R. Sami, and S. Shenker, A BGP-based mechanism for lowest-cost routing.",
        "In Proceedings of the 21st Symposium on Principles of Distributed Computing, pages 173-182, 2002 [11] A. Fiat, A. Goldberg, J. Hartline, and A. Karlin, Competitive generalized auctions.",
        "In Proceedings of the 34th Annual ACM Symposium on Theory of Computation, pages 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra and A. Verma, Coalitional games on graphs: core structures, substitutes and frugality.",
        "In Proceedings of the 4th ACM Conference on Electronic Commerce (EC03), 2005 [13] A. Goldberg, J. Hartline, and A. Wright, Competitive auctions and digital goods.",
        "In Proceedings of the 12th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2001 [14] T. Groves, Incentives in teams.",
        "Econometrica, 41(4):617-631, 1973 [15] N. Immorlica, D. Karger, E. Nikolova, and R. Sami, First-price path auctions.",
        "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [16] A. R. Karlin, D. Kempe, and T. Tamir, Beyond VCG: frugality of truthful mechanisms.",
        "In Proceedings of the 46th Annual IEEE Symposium on Foundations of Computer Science, pages 615-626, 2005 [17] D. Kempe, Personal communication, 2006 [18] N. Chen, A. R. Karlin, Cheap labor can be expensive, In Proceedings of the 18th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2007 [19] N. Nisan and A. Ronen, Algorithmic mechanism design.",
        "In Proceedings of the 31st Annual ACM Symposium on Theory of Computation, pages 129-140, 1999 [20] A. Ronen and R. Talisman, Towards generic low payment mechanisms for decentralized task allocation.",
        "In Proceedings of the 7th International IEEE Conference on E-Commerce Technology, 2005 [21] K. Talwar, The price of truth: frugality in truthful mechanisms.",
        "In Proceedings of 20th International Symposium on Theoretical Aspects of Computer Science, 2003 [22] W. Vickrey, Counterspeculation, auctions, and competitive sealed tenders.",
        "Journal of Finance, 16:8-37, 1961 345"
    ],
    "error_count": 0,
    "keys": {
        "frugality ratio": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Frugality Ratios And Improved Truthful Mechanisms for Vertex Cover ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT In set-system auctions, there are several overlapping teams of agents, and a task that can be completed by any of these teams.",
                "The auctioneers goal is to hire a team and pay as little as possible.",
                "Examples of this setting include shortest-path auctions and vertex-cover auctions.",
                "Recently, Karlin, Kempe and Tamir introduced a new definition of <br>frugality ratio</br> for this problem.",
                "Informally, the <br>frugality ratio</br> is the ratio of the total payment of a mechanism to a desired payment bound.",
                "The ratio captures the extent to which the mechanism overpays, relative to perceived fair cost in a truthful auction.",
                "In this paper, we propose a new truthful polynomial-time auction for the vertex cover problem and bound its <br>frugality ratio</br>.",
                "We show that the solution quality is with a constant factor of optimal and the <br>frugality ratio</br> is within a constant factor of the best possible worst-case bound; this is the first auction for this problem to have these properties.",
                "Moreover, we show how to transform any truthful auction into a frugal one while preserving the approximation ratio.",
                "Also, we consider two natural modifications of the definition of Karlin et al., and we analyse the properties of the resulting payment bounds, such as monotonicity, computational hardness, and robustness with respect to the draw-resolution rule.",
                "We study the relationships between the different payment bounds, both for general set systems and for specific set-system auctions, such as path auctions and vertex-cover auctions.",
                "We use these new definitions in the proof of our main result for vertex-cover auctions via a bootstrapping technique, which may be of independent interest.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a set system auction there is a single buyer and many vendors that can provide various services.",
                "It is assumed that the buyers requirements can be satisfied by various subsets of the vendors; these subsets are called the feasible sets.",
                "A widely-studied class of setsystem auctions is path auctions, where each vendor is able to sell access to a link in a network, and the feasible sets are those sets whose links contain a path from a given source to a given destination; the study of these auctions has been initiated in the seminal paper by Nisan and Ronen [19] (see also [1, 10, 9, 6, 15, 7, 20]).",
                "We assume that each vendor has a cost of providing his services, but submits a possibly larger bid to the auctioneer.",
                "Based on these bids, the auctioneer selects a feasible subset of vendors, and makes payments to the vendors in this subset.",
                "Each selected vendor enjoys a profit of payment minus cost.",
                "Vendors want to maximise profit, while the buyer wants to minimise the amount he pays.",
                "A natural goal in this setting is to design a truthful auction, in which vendors have an incentive to bid their true cost.",
                "This can be achieved by paying each selected vendor a premium above her bid in such a way that the vendor has no incentive to overbid.",
                "An interesting question in mechanism design is how much the auctioneer will have to overpay in order to ensure truthful bids.",
                "In the context of path auctions this topic was first addressed by Archer and Tardos [1].",
                "They define the <br>frugality ratio</br> of a mechanism as the ratio between its total payment and the cost of the cheapest path disjoint from the path selected by the mechanism.",
                "They show that, for a large class of truthful mechanisms for this problem, the <br>frugality ratio</br> is as large as the number of edges in the shortest path.",
                "Talwar [21] extends this definition of <br>frugality ratio</br> to general set systems, and studies the <br>frugality ratio</br> of the classical VCG mechanism [22, 4, 14] for many specific set systems, such as minimum spanning trees and set covers.",
                "While the definition of <br>frugality ratio</br> proposed by [1] is wellmotivated and has been instrumental in studying truthful mechanisms for set systems, it is not completely satisfactory.",
                "Consider, for example, the graph of Figure 1 with the costs cAB = cBC = A B C D Figure 1: The diamond graph 336 cCD = 0, cAC = cBD = 1.",
                "This graph is 2-connected and the VCG payment to the winning path ABCD is bounded.",
                "However, the graph contains no A-D path that is disjoint from ABCD, and hence the <br>frugality ratio</br> of VCG on this graph remains undefined.",
                "At the same time, there is no monopoly, that is, there is no vendor that appears in all feasible sets.",
                "In auctions for other types of set systems, the requirement that there exist a feasible solution disjoint from the selected one is even more severe: for example, for vertex-cover auctions (where vendors correspond to the vertices of some underlying graph, and the feasible sets are vertex covers) the requirement means that the graph must be bipartite.",
                "To deal with this problem, Karlin et al. [16] suggest a better benchmark, which is defined for any monopoly-free set system.",
                "This quantity, which they denote by ν, intuitively corresponds to the value of a cheapest Nash equilibrium.",
                "Based on this new definition, the authors construct new mechanisms for the shortest path problem and show that the overpayment of these mechanisms is within a constant factor of optimal. 1.1 Our results Vertex cover auctions We propose a truthful polynomial-time auction for vertex cover that outputs a solution whose cost is within a factor of 2 of optimal, and whose <br>frugality ratio</br> is at most 2Δ, where Δ is the maximum degree of the graph (Theorem 4).",
                "We complement this result by proving (Theorem 5) that for any Δ and n, there are graphs of maximum degree Δ and size Θ(n) for which any truthful mechanism has <br>frugality ratio</br> at least Δ/2.",
                "This means that the solution quality of our auction is with a factor of 2 of optimal and the <br>frugality ratio</br> is within a factor of 4 of the best possible bound for worst-case inputs.",
                "To the best of our knowledge, this is the first auction for this problem that enjoys these properties.",
                "Moreover, we show how to transform any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio.",
                "Frugality ratios Our vertex cover results naturally suggest two modifications of the definition of ν in [16].",
                "These modifications can be made independently of each other, resulting in four different payment bounds TUmax, TUmin, NTUmax, and NTUmin, where NTUmin is equal to the original payment bound ν of in [16].",
                "All four payment bounds arise as Nash equilibria of certain games (see the full version of this paper [8]); the differences between them can be seen as the price of initiative and the price of cooperation (see Section 3).",
                "While our main result about vertex cover auctions (Theorem 4) is with respect to NTUmin = ν, we make use of the new definitions by first comparing the payment of our mechanism to a weaker bound NTUmax, and then bootstrapping from this result to obtain the desired bound.",
                "Inspired by this application, we embark on a further study of these payment bounds.",
                "Our results here are as follows: 1.",
                "We observe (Proposition 1) that the four payment bounds always obey a particular order that is independent of the choice of the set system and the cost vector, namely, TUmin ≤ NTUmin ≤ NTUmax ≤ TUmax.",
                "We provide examples (Proposition 5 and Corollaries 1 and 2) showing that for the vertex cover problem any two consecutive bounds can differ by a factor of n − 2, where n is the number of agents.",
                "We then show (Theorem 2) that this separation is almost best possible for general set systems by proving that for any set system TUmax/TUmin ≤ n. In contrast, we demonstrate (Theorem 3) that for path auctions TUmax/TUmin ≤ 2.",
                "We provide examples (Propositions 2, 3 and 4) showing that this bound is tight.",
                "We see this as an argument for the study of vertexcover auctions, as they appear to be more representative of the general team -selection problem than the widely studied path auctions. 2.",
                "We show (Theorem 1) that for any set system, if there is a cost vector for which TUmin and NTUmin differ by a factor of α, there is another cost vector that separates NTUmin and NTUmax by the same factor and vice versa; the same is true for the pairs (NTUmin, NTUmax) and (NTUmax, TUmax).",
                "This symmetry is quite surprising, since, e.g., TUmin and NTUmax are obtained from NTUmin by two very different transformations.",
                "This observation suggests that the four payment bounds should be studied in a unified framework; moreover, it leads us to believe that the bootstrapping technique of Theorem 4 may have other applications. 3.",
                "We evaluate the payment bounds introduced here with respect to a checklist of desirable features.",
                "In particular, we note that the payment bound ν = NTUmin of [16] exhibits some counterintuitive properties, such as nonmonotonicity with respect to adding a new feasible set (Proposition 7), and is NP-hard to compute (Theorem 6), while some of the other payment bounds do not suffer from these problems.",
                "This can be seen as an argument in favour of using weaker but efficiently computable bounds NTUmax and TUmax.",
                "Related work Vertex-cover auctions have been studied in the past by Talwar [21] and Calinescu [5].",
                "Both of these papers are based on the definition of <br>frugality ratio</br> used in [1]; as mentioned before, this means that their results only apply to bipartite graphs.",
                "Talwar [21] shows that the <br>frugality ratio</br> of VCG is at most Δ.",
                "However, since finding the cheapest vertex cover is an NP-hard problem, the VCG mechanism is computationally infeasible.",
                "The first (and, to the best of our knowledge, only) paper to investigate polynomial-time truthful mechanisms for vertex cover is [5].",
                "This paper studies an auction that is based on the greedy allocation algorithm, which has an approximation ratio of log n. While the main focus of [5] is the more general set cover problem, the results of [5] imply a <br>frugality ratio</br> of 2Δ2 for vertex cover.",
                "Our results improve on those of [21] as our mechanism is polynomial-time computable, as well as on those of [5], as our mechanism has a better approximation ratio, and we prove a stronger bound on the <br>frugality ratio</br>; moreover, this bound also applies to the mechanism of [5]. 2.",
                "PRELIMINARIES In most of this paper, we discuss auctions for set systems.",
                "A set system is a pair (E, F), where E is the ground set, |E| = n, and F is a collection of feasible sets, which are subsets of E. Two particular types of set systems are of interest to us - shortest path systems, in which the ground set consists of all edges of a network, and the feasible sets are paths between two specified vertices s and t, and vertex cover systems, in which the elements of the ground set are the vertices of a graph, and the feasible sets are vertex covers of this graph.",
                "In set system auctions, each element e of the ground set is owned by an independent agent and has an associated non-negative cost ce.",
                "The goal of the centre is to select (purchase) a feasible set.",
                "Each element e in the selected set incurs a cost of ce.",
                "The elements that are not selected incur no costs.",
                "The auction proceeds as follows: all elements of the ground set make their bids, the centre selects a feasible set based on the bids and makes payments to the agents.",
                "Formally, an auction is defined by an allocation rule A : Rn → F and a payment rule P : Rn → Rn .",
                "The allocation rule takes as input a vector of bids and decides which of the sets in F should be selected.",
                "The payment rule also takes as input a vector of bids and decides how much to pay to each agent.",
                "The standard requirements are individual rationality, i.e., the payment to each agent should be at least as high as his incurred cost (0 for agents not in the selected set and ce for agents in the 337 selected set) and incentive compatibility, or truthfulness, i.e., each agents dominant strategy is to bid his true cost.",
                "An allocation rule is monotone if an agent cannot increase his chance of getting selected by raising his bid.",
                "Formally, for any bid vector b and any e ∈ E, if e ∈ A(b) then e ∈ A(b1, . . . , be, . . . , bn) for any be > be.",
                "Given a monotone allocation rule A and a bid vector b, the threshold bid te of an agent e ∈ A(b) is the highest bid of this agent that still wins the auction, given that the bids of other participants remain the same.",
                "Formally, te = sup{be ∈ R | e ∈ A(b1, . . . , be, . . . , bn)}.",
                "It is well known (see, e.g. [19, 13]) that any auction that has a monotone allocation rule and pays each agent his threshold bid is truthful; conversely, any truthful auction has a monotone allocation rule.",
                "The VCG mechanism is a truthful mechanism that maximises the social welfare and pays 0 to the losing agents.",
                "For set system auctions, this simply means picking a cheapest feasible set, paying each agent in the selected set his threshold bid, and paying 0 to all other agents.",
                "Note, however, that the VCG mechanism may be difficult to implement, since finding a cheapest feasible set may be intractable.",
                "If U is a set of agents, c(U) denotes P w∈U cw.",
                "Similarly, b(U) denotes P w∈U bw. 3.",
                "FRUGALITY RATIOS We start by reproducing the definition of the quantity ν from [16, Definition 4].",
                "Let (E, F) be a set system and let S be a cheapest feasible set with respect to the true costs ce.",
                "Then ν(c, S) is the solution to the following optimisation problem.",
                "Minimise B = P e∈S be subject to (1) be ≥ ce for all e ∈ E (2) P e∈S\\T be ≤ P e∈T \\S ce for all T ∈ F (3) for every e ∈ S, there is a Te ∈ F such that e ∈ Te andP e ∈S\\Te be = P e ∈Te\\S ce The bound ν(c, S) can be seen as an outcome of a two-stage process, where first each agent e ∈ S makes a bid be stating how much it wants to be paid, and then the centre decides whether to accept these bids.",
                "The behaviour of both parties is affected by the following considerations.",
                "From the centres point of view, the set S must remain the most attractive choice, i.e., it must be among the cheapest feasible sets under the new costs ce = ce for e ∈ S, ce = be for e ∈ S (condition (2)).",
                "The reason for that is that if (2) is violated for some set T, the centre would prefer T to S. On the other hand, no agent would agree to a payment that does not cover his costs (condition (1)), and moreover, each agent tries to maximise his profit by bidding as high as possible, i.e., none of the agents can increase his bid without violating condition (2) (condition (3)).",
                "The centre wants to minimise the total payout, so ν(c, S) corresponds to the best possible outcome from the centres point of view.",
                "This definition captures many important aspects of our intuition about fair payments.",
                "However, it can be modified in two ways, both of which are still quite natural, but result in different payment bounds.",
                "First, we can consider the worst rather than the best possible outcome for the centre.",
                "That is, we can consider the maximum total payment that the agents can extract by jointly selecting their bids subject to (1), (2), and (3).",
                "Such a bound corresponds to maximising B subject to (1), (2), and (3) rather than minimising it.",
                "If it is the agents who make the original bids (rather than the centre), this kind of bidding behaviour is plausible.",
                "On the other hand, in a game in which the centre proposes payments to the agents in S and the agents accept them as long as (1), (2) and (3) are satisfied, we would be likely to observe a total payment of ν(c, S).",
                "Hence, the difference between these two definitions can be seen as the price of initiative.",
                "Second, the agents may be able to make payments to each other.",
                "In this case, if they can extract more money from the centre by agreeing on a vector of bids that violates individual rationality (i.e., condition (1)) for some bidders, they might be willing to do so, as the agents who are paid below their costs will be compensated by other members of the group.",
                "The bids must still be realistic, i.e., they have to satisfy be ≥ 0.",
                "The resulting change in payments can be seen as the price of co-operation and corresponds to replacing condition (1) with the following weaker condition (1∗ ): be ≥ 0 for all e ∈ E. (1∗ ) By considering all possible combinations of these modifications, we obtain four different payment bounds, namely • TUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1∗ ), (2), and (3). • TUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1∗ ), (2), and (3). • NTUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1), (2), and (3). • NTUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1), (2), (3).",
                "The abbreviations TU and NTU correspond, respectively, to transferable utility and non-transferable utility, i.e., the agents ability/inability to make payments to each other.",
                "For concreteness, we will take TUmin(c) to be TUmin(c, S) where S is the lexicographically least amongst the cheapest feasible sets.",
                "We define TUmax(c), NTUmin(c), NTUmax(c) and ν(c) similarly, though we will see in Section 6.3 that, in fact, NTUmin(c, S) and NTUmax(c, S) are independent of the choice of S. Note that the quantity ν(c) from [16] is NTUmin(c).",
                "The second modification (transferable utility) is more intuitively appealing in the context of the maximisation problem, as both assume some degree of co-operation between the agents.",
                "While the second modification can be made without the first, the resulting payment bound TUmin(c, S) is too strong to be a realistic benchmark, at least for general set systems.",
                "In particular, it can be smaller than the total cost of the cheapest feasible set S (see Section 6).",
                "Nevertheless, we provide the definition as well as some results about TUmin(c, S) in the paper, both for completeness and because we believe that it may help to understand which properties of the payment bounds are important for our proofs.",
                "Another possibility would be to introduce an additional constraint P e∈S be ≥P e∈S ce in the definition of TUmin(c, S) (note that this condition holds automatically for TUmax(c, S), as TUmax(c, S) ≥ NTUmax(c, S)); however, such a definition would have no direct game-theoretic interpretation, and some of our results (in particular, the ones in Section 4) would no longer be true.",
                "REMARK 1.",
                "For the payment bounds that are derived from maximisation problems, (i.e., TUmax(c, S) and NTUmax(c, S)), constraints of type (3) are redundant and can be dropped.",
                "Hence, TUmax(c, S) and NTUmax(c, S) are solutions to linear programs, and therefore can be computed in polynomial time as long as we have a separation oracle for constraints in (2).",
                "In contrast, 338 NTUmin(c, S) can be NP-hard to compute even if the size of F is polynomial (see Section 6).",
                "The first and third inequalities in the following observation follow from the fact that condition (1∗ ) is strictly weaker than condition (1).",
                "PROPOSITION 1.",
                "TUmin(c, S) ≤ NTUmin(c, S) ≤ NTUmax(c, S) ≤ TUmax(c, S).",
                "Let M be a truthful mechanism for (E, F).",
                "Let pM(c) denote the total payments of M when the actual costs are c. A <br>frugality ratio</br> of M with respect to a payment bound is the ratio between the payment of M and this payment bound.",
                "In particular, φTUmin(M) = sup c pM(c)/TUmin(c), φTUmax(M) = sup c pM(c)/TUmax(c), φNTUmin(M) = sup c pM(c)/NTUmin(c), φNTUmax(M) = sup c pM(c)/NTUmax(c).",
                "We conclude this section by showing that there exist set systems and respective cost vectors for which all four payment bounds are different.",
                "In the next section, we quantify this difference, both for general set systems, and for specific types of set systems, such as path auctions or vertex cover auctions.",
                "EXAMPLE 1.",
                "Consider the shortest-path auction on the graph of Figure 1.",
                "The cheapest feasible sets are all paths from A to D. It can be verified, using the reasoning of Propositions 2 and 3 below, that for the cost vector cAB = cCD = 2, cBC = 1, cAC = cBD = 5, we have • TUmax(c) = 10 (with bAB = bCD = 5, bBC = 0), • NTUmax(c) = 9 (with bAB = bCD = 4, bBC = 1), • NTUmin(c) = 7 (with bAB = bCD = 2, bBC = 3), • TUmin(c) = 5 (with bAB = bCD = 0, bBC = 5). 4.",
                "COMPARING PAYMENT BOUNDS 4.1 Path auctions We start by showing that for path auctions any two consecutive payment bounds can differ by at least a factor of 2.",
                "PROPOSITION 2.",
                "There is an instance of the shortest-path problem for which we have NTUmax(c)/NTUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is due to David Kempe [17].",
                "Consider the graph of Figure 1 with the edge costs cAB = cBC = cCD = 0, cAC = cBD = 1.",
                "Under these costs, ABCD is the cheapest path.",
                "The inequalities in (2) are bAB + bBC ≤ cAC = 1, bBC + bCD ≤ cBD = 1.",
                "By condition (3), both of these inequalities must be tight (the former one is the only inequality involving bAB, and the latter one is the only inequality involving bCD).",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 0, bCD ≥ 0.",
                "Now, if the goal is to maximise bAB + bBC + bCD, the best choice is bAB = bCD = 1, bBC = 0, so NTUmax(c) = 2.",
                "On the other hand, if the goal is to minimise bAB + bBC + bCD, one should set bAB = bCD = 0, bBC = 1, so NTUmin(c) = 1.",
                "PROPOSITION 3.",
                "There is an instance of the shortest-path problem for which we have TUmax(c)/NTUmax(c) ≥ 2.",
                "PROOF.",
                "Again, consider the graph of Figure 1.",
                "Let the edge costs be cAB = cCD = 0, cBC = 1, cAC = cBD = 1.",
                "ABCD is the lexicographically-least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "The inequalities in (2) are the same as in the previous example, and by the same argument both of them are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 1, bCD ≥ 0.",
                "Our goal is to maximise bAB + bBC + bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 0, bBC = 1, so NTUmax(c) = 1.",
                "Otherwise, we can set bAB = bCD = 1, bBC = 0, so TUmax(c) ≥ 2.",
                "PROPOSITION 4.",
                "There is an instance of the shortest-path problem for which we have NTUmin(c)/TUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is also based on the graph of Figure 1.",
                "The edge costs are cAB = cCD = 1, cBC = 0, cAC = cBD = 1.",
                "ABCD is the lexicographically least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "Again, the inequalities in (2) are the same, and both are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 1, bBC ≥ 0, bCD ≥ 1.",
                "Our goal is to minimise bAB + bBC +bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 1, bBC = 0, so NTUmin(c) = 2.",
                "Otherwise, we can set bAB = bCD = 0, bBC = 1, so TUmin(c) ≤ 1.",
                "In Section 4.4 (Theorem 3), we show that the separation results in Propositions 2, 3, and 4 are optimal. 4.2 Connections between separation results The separation results for path auctions are obtained on the same graph using very similar cost vectors.",
                "It turns out that this is not coincidental.",
                "Namely, we can prove the following theorem.",
                "THEOREM 1.",
                "For any set system (E, F), and any feasible set S, max c TUmax(c, S) NTUmax(c, S) = max c NTUmax(c, S) NTUmin(c, S) , max c NTUmax(c, S) NTUmin(c, S) = max c NTUmin(c, S) TUmin(c, S) , where the maximum is over all cost vectors c for which S is a cheapest feasible set.",
                "The proof of the theorem follows directly from the four lemmas proved below; more precisely, the first equality in Theorem 1 is obtained by combining Lemmas 1 and 2, and the second equality is obtained by combining Lemmas 3 and 4.",
                "We prove Lemma 1 here; the proofs of Lemmas 2- 4 are similar and can be found in the full version of this paper [8].",
                "LEMMA 1.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and TUmax(c, S)/NTUmax(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α.",
                "PROOF.",
                "Suppose that TUmax(c, S) = X and NTUmax(c, S) = Y where X/Y = α.",
                "Assume without loss of generality that S consists of elements 1, . . . , k, and let b1 = (b1 1, . . . , b1 k) and b2 = (b2 1, . . . , b2 k) be the bid vectors that correspond to TUmax(c, S) and NTUmax(c, S), respectively.",
                "Construct the cost vector c by setting ci = ci for i ∈ S, ci = min{ci, b1 i } for i ∈ S. Clearly, S is a cheapest set under c .",
                "Moreover, as the costs of elements outside of S remained the same, the right-hand sides of all constraints in (2) did not change, so any bid vector that satisfies (2) and (3) with respect to c, also satisfies them with respect to c .",
                "We will construct two bid vectors b3 and b4 that satisfy conditions (1), (2), and (3) for the cost vector c , and 339 X X X X X 0 X 12 3 X 4 5 6 Figure 2: Graph that separates payment bounds for vertex cover, n = 7 have P i∈S b3 i = X, P i∈S b4 i = Y .",
                "As NTUmax(c , S) ≥ X and NTUmin(c , S) ≤ Y , this implies the lemma.",
                "We can set b3 i = b1 i : this bid vector satisfies conditions (2) and (3) since b1 does, and we have b1 i ≥ min{ci, b1 i } = ci, which means that b3 satisfies condition (1).",
                "Furthermore, we can set b4 i = b2 i .",
                "Again, b4 satisfies conditions (2) and (3) since b2 does, and since b2 satisfies condition (1), we have b2 i ≥ ci ≥ ci, which means that b4 satisfies condition (1).",
                "LEMMA 2.",
                "Suppose c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and TUmax(c , S)/NTUmax(c , S) ≥ α. LEMMA 3.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmin(c , S)/TUmin(c , S) ≥ α. LEMMA 4.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmin(c, S)/TUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α. 4.3 Vertex-cover auctions In contrast to the case of path auctions, for vertex-cover auctions the gap between NTUmin(c) and NTUmax(c) (and hence between NTUmax(c) and TUmax(c), and between TUmin(c) and NTUmin(c)) can be proportional to the size of the graph.",
                "PROPOSITION 5.",
                "For any n ≥ 3, there is a an n-vertex graph and a cost vector c for which TUmax(c)/NTUmax(c) ≥ n − 2.",
                "PROOF.",
                "The underlying graph consists of an (n − 1)-clique on the vertices X1, . . . , Xn−1, and an extra vertex X0 adjacent to Xn−1.",
                "The costs are cX1 = cX2 = · · · = cXn−2 = 0, cX0 = cXn−1 = 1.",
                "We can assume that S = {X0, X1, . . . , Xn−2} (this is the lexicographically first vertex cover of cost 1).",
                "For this set system, the constraints in (2) are bXi + bX0 ≤ cXn−1 = 1 for i = 1, . . . , n − 2.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bXi = 1 for i = 1, . . . , n − 2, bX0 = 0.",
                "Hence, TUmax(c) ≥ n − 2.",
                "For NTUmax(c), there is an additional constraint bX0 ≥ 1, so the best we can do is to set bXi = 0 for i = 1, . . . , n − 2, bX0 = 1, which implies NTUmax(c) = 1.",
                "Combining Proposition 5 with Lemmas 1 and 3, we derive the following corollaries.",
                "COROLLARY 1.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmax(c)/NTUmin(c) ≥ n − 2.",
                "COROLLARY 2.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmin(c)/TUmin(c) ≥ n − 2. j+2ix ij P \\ P ij+2P \\ P yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 P \\ P Figure 3: Proof of Theorem 3: constraints for ˆPij and ˆPij+2 do not overlap 4.4 Upper bounds It turns out that the lower bound proved in the previous subsection is almost tight.",
                "More precisely, the following theorem shows that no two payment bounds can differ by more than a factor of n; moreover, this is the case not just for the vertex cover problem, but for general set systems.",
                "We bound the gap between TUmax(c) and TUmin(c).",
                "Since TUmin(c) ≤ NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), this bound applies to any pair of payment bounds.",
                "THEOREM 2.",
                "For any set system (E, F) and any cost vector c, we have TUmax(c)/TUmin(c) ≤ n. PROOF.",
                "Assume wlog that the winning set S consists of elements 1, . . . , k. Let c1, . . . , ck be the true costs of elements in S, let b1, . . . , bk be their bids that correspond to TUmin(c), and let b1 , . . . , bk be their bids that correspond to TUmax(c).",
                "Consider the conditions (2) and (3) for S. One can pick a subset L of at most k inequalities in (2) so that for each i = 1, . . . , k there is at least one inequality in L that is tight for bi.",
                "Suppose that the jth inequality in L is of the form bi1 + · · · + bit ≤ c(Tj \\ S).",
                "For bi, all inequalities in L are, in fact, equalities.",
                "Hence, by adding up all of them we obtain k P i=1,...,k bi ≥ P j=1,...,k c(Tj \\ S).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c(Tj \\ S).",
                "Combining these two inequalities, we obtain nTUmin(c) ≥ kTUmin(c) ≥ TUmax(c).",
                "REMARK 2.",
                "The final line of the proof of Theorem 2 shows that, in fact, the upper bound on TUmax(c)/TUmin(c) can be strengthened to the size of the winning set, k. Note that in Proposition 5, as well as in Corollaries 1 and 2, k = n−1, so these results do not contradict each other.",
                "For path auctions, this upper bound can be improved to 2, matching the lower bounds of Section 4.1.",
                "THEOREM 3.",
                "For any instance of the shortest path problem, TUmax(c) ≤ 2 TUmin(c).",
                "PROOF.",
                "Given a network (G, s, t), assume without loss of generality that the lexicographically-least cheapest s-t path, P, in G is {e1, . . . , ek}, where e1 = (s, v1), e2 = (v1, v2), . . . , ek = (vk−1, t).",
                "Let c1, . . . , ck be the true costs of e1, . . . , ek, and let b = (b1, . . . , bk) and b = (b1 , . . . , bk ) be bid vectors that correspond to TUmin(c) and TUmax(c), respectively.",
                "For any i = 1, . . . , k, there is a constraint in (2) that is tight for bi with respect to the bid vector b , i.e., an s-t path Pi that avoids ei and satisfies b (P \\Pi) = c(Pi \\P).",
                "We can assume without loss of generality that Pi coincides with P up to some vertex xi, then deviates from P to avoid ei, and finally returns to P at a vertex 340 yi and coincides with P from then on (clearly, it might happen that s = xi or t = yi).",
                "Indeed, if Pi deviates from P more than once, one of these deviations is not necessary to avoid ei and can be replaced with the respective segment of P without increasing the cost of Pi.",
                "Among all paths of this form, let ˆPi be the one with the largest value of yi, i.e., the rightmost one.",
                "This path corresponds to an inequality Ii of the form bxi+1 + · · · + byi ≤ c( ˆPi \\ P).",
                "As in the proof of Theorem 2, we construct a set of tight constraints L such that every variable bi appears in at least one of these constraints; however, now we have to be more careful about the choice of constraints in L. We construct L inductively as follows.",
                "Start by setting L = {I1}.",
                "At the jth step, suppose that all variables up to (but not including) bij appear in at least one inequality in L. Add Iij to L. Note that for any j we have yij+1 > yij .",
                "This is because the inequalities added to L during the first j steps did not cover bij+1 .",
                "See Figure 3.",
                "Since yij+2 > yij+1 , we must also have xij+2 > yij : otherwise, ˆPij+1 would not be the rightmost constraint for bij+1 .",
                "Therefore, the variables in Iij+2 and Iij do not overlap, and hence no bi can appear in more than two inequalities in L. Now we follow the argument of the proof of Theorem 2 to finish.",
                "By adding up all of the (tight) inequalities in L for bi we obtain 2 P i=1,...,k bi ≥ P j=1,...,k c( ˆPj \\ P).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c( ˆPj \\ P), so TUmax(c) ≤ 2TUmin(c). 5.",
                "TRUTHFUL MECHANISMS FOR VERTEX COVER Recall that for a vertex-cover auction on a graph G = (V, E), an allocation rule is an algorithm that takes as input a bid bv for each vertex and returns a vertex cover ˆS of G. As explained in Section 2, we can combine a monotone allocation rule with threshold payments to obtain a truthful auction.",
                "Two natural examples of monotone allocation rules are Aopt, i.e., the algorithm that finds an optimal vertex cover, and the greedy algorithm AGR.",
                "However, Aopt cannot be guaranteed to run in polynomial time unless P = NP and AGR has approximation ratio of log n. Another approximation algorithm for vertex cover, which has approximation ratio 2, is the local ratio algorithm ALR [2, 3].",
                "This algorithm considers the edges of G one by one.",
                "Given an edge e = (u, v), it computes = min{bu, bv} and sets bu = bu − , bv = bv − .",
                "After all edges have been processed, ALR returns the set of vertices {v | bv = 0}.",
                "It is not hard to check that if the order in which the edges are considered is independent of the bids, then this algorithm is monotone as well.",
                "Hence, we can use it to construct a truthful auction that is guaranteed to select a vertex cover whose cost is within a factor of 2 from the optimal.",
                "However, while the quality of the solution produced by ALR is much better than that of AGR, we still need to show that its total payment is not too high.",
                "In the next subsection, we bound the <br>frugality ratio</br> of ALR (and, more generally, all algorithms that satisfy the condition of local optimality, defined later) by 2Δ, where Δ is the maximum degree of G. We then prove a matching lower bound showing that for some graphs the <br>frugality ratio</br> of any truthful auction is at least Δ/2. 5.1 Upper bound We say that an allocation rule is locally optimal if whenever bv >P w∼v bw, the vertex v is not chosen.",
                "Note that for any such rule the threshold bid of v satisfies tv ≤ P w∼v bw.",
                "CLAIM 1.",
                "The algorithms Aopt, AGR, and ALR are locally optimal.",
                "THEOREM 4.",
                "Any vertex cover auction M that has a locally optimal and monotone allocation rule and pays each agent his threshold bid has <br>frugality ratio</br> φNTUmin(M) ≤ 2Δ.",
                "To prove Theorem 4, we first show that the total payment of any locally optimal mechanism does not exceed Δc(V ).",
                "We then demonstrate that NTUmin(c) ≥ c(V )/2.",
                "By combining these two results, the theorem follows.",
                "LEMMA 5.",
                "Consider a graph G = (V, E) with maximum degree Δ.",
                "Let M be a vertex-cover auction on G that satisfies the conditions of Theorem 4.",
                "Then for any cost vector c, the total payment of M satisfies pM(c) ≤ Δc(V ).",
                "PROOF.",
                "First note that any such auction is truthful, so we can assume that each agents bid is equal to his cost.",
                "Let ˆS be the vertex cover selected by M. Then by local optimality pM(c) = X v∈ ˆS tv ≤ X v∈ ˆS X w∼v cw ≤ X w∈V Δcw = Δc(V ).",
                "We now derive a lower bound on TUmax(c); while not essential for the proof of Theorem 4, it helps us build the intuition necessary for that proof.",
                "LEMMA 6.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, TUmax(c, S) ≥ c(V \\ S) PROOF.",
                "For a vertex w with at least one neighbour in S, let d(w) denote the number of neighbours that w has in S. Consider the bid vector b in which, for each v ∈ S, bv = P w∼v,w∈S cw d(w) .",
                "Then P v∈S bv = P v∈S P w∼v,w∈S cw/d(w) = P w /∈S cw = c(V \\ S).",
                "To finish we want to show that b is feasible in the sense that it satisfies (2).",
                "Consider a vertex cover T, and extend the bid vector b by assigning bv = cv for v /∈ S. Then b(T) = c(T \\S)+b(S∩T) ≥ c(T \\S)+ X v∈S∩T X w∈S∩T :w∼v cw d(w) , and since all edges between S ∩ T and S go to S ∩ T, the righthand-side is equal to c(T \\S)+ X w∈S∩T cw = c(T \\S)+c(S ∩T) = c(V \\S) = b(S).",
                "Next, we prove a lower bound on NTUmax(c, S); we will then use it to obtain a lower bound on NTUmin(c).",
                "LEMMA 7.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmax(c, S) ≥ c(V \\ S) PROOF.",
                "If c(S) ≥ c(V \\ S), by condition (1) we are done.",
                "Therefore, for the rest of the proof we assume that c(S) < c(V \\ S).",
                "We show how to construct a bid vector (be)e∈S that satisfies conditions (1) and (2) such that b(S) ≥ c(V \\ S); clearly, this implies NTUmax(c, S) ≥ c(V \\ S).",
                "Recall that a network flow problem is described by a directed graph Γ = (VΓ, EΓ), a source node s ∈ VΓ, a sink node t ∈ VΓ, and a vector of capacity constraints ae, e ∈ EΓ.",
                "Consider a network (VΓ, EΓ) such that VΓ = V ∪{s, t}, EΓ = E1 ∪E2 ∪E3, where E1 = {(s, v) | v ∈ S}, E2 = {(v, w) | v ∈ S, w ∈ 341 V \\ S, (v, w) ∈ E}, E3 = {(w, t) | w ∈ V \\ S}.",
                "Since S is a vertex cover for G, no edge of E can have both of its endpoints in V \\ S, and by construction, E2 contains no edges with both endpoints in S. Therefore, the graph (V, E2) is bipartite with parts (S, V \\ S).",
                "Set the capacity constraints for e ∈ EΓ as follows: a(s,v) = cv, a(w,t) = cw, a(v,w) = +∞ for all v ∈ S, w ∈ V \\ S. Recall that a cut is a partition of the vertices in VΓ into two sets C1 and C2 so that s ∈ C1, t ∈ C2; we denote such a cut by C = (C1, C2).",
                "Abusing notation, we write e = (u, v) ∈ C if u ∈ C1, v ∈ C2 or u ∈ C2, v ∈ C1, and say that such an edge e = (u, v) crosses the cut C. The capacity of a cut C is computed as cap(C) = P (v,w)∈C a(v,w).",
                "We have cap(s, V ∪{t}) = c(S), cap({s} ∪ V, t) = c(V \\ S).",
                "Let Cmin = ({s} ∪ S ∪ W , {t} ∪ S ∪ W ) be a minimum cut in Γ, where S , S ⊆ S, W , W ⊆ V \\ S. See Figure 4.",
                "As cap(Cmin) ≤ cap(s, V ∪ {t}) = c(S) < +∞, and any edge in E2 has infinite capacity, no edge (u, v) ∈ E2 crosses Cmin.",
                "Consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Clearly, C = ({s} ∪ S ∪ W , {t}) is a minimum cut in Γ (otherwise, there would exist a smaller cut for Γ).",
                "As cap(C ) = c(W ), we have c(S ) ≥ c(W ).",
                "Now, consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Similarly, C = ({s}, S ∪ W ∪ {t}) is a minimum cut in Γ , cap(C ) = c(S ).",
                "As the size of a maximum flow from s to t is equal to the capacity of a minimum cut separating s and t, there exists a flow F = (fe)e∈EΓ of size c(S ).",
                "This flow has to saturate all edges between s and S , i.e., f(s,v) = cv for all v ∈ S .",
                "Now, increase the capacities of all edges between s and S to +∞.",
                "In the modified network, the capacity of a minimum cut (and hence the size of a maximum flow) is c(W ), and a maximum flow F = (fe)e∈EΓ can be constructed by greedily augmenting F. Set bv = cv for all v ∈ S , bv = f(s,v) for all v ∈ S .",
                "As F is constructed by augmenting F, we have bv ≥ cv for all v ∈ S, i.e., condition (1) is satisfied.",
                "Now, let us check that no vertex cover T ⊆ V can violate condition (2).",
                "Set T1 = T ∩ S , T2 = T ∩ S , T3 = T ∩ W , T4 = T ∩ W ; our goal is to show that b(S \\ T1) + b(S \\ T2) ≤ c(T3)+c(T4).",
                "Consider all edges (u, v) ∈ E such that u ∈ S \\T1.",
                "If (u, v) ∈ E2 then v ∈ T3 (no edge in E2 can cross the cut), and if u, v ∈ S then v ∈ T1∪T2.",
                "Hence, T1∪T3∪S is a vertex cover for G, and therefore c(T1)+ c(T3)+ c(S ) ≥ c(S) = c(T1)+ c(S \\ T1) + c(S ).",
                "Consequently, c(T3) ≥ c(S \\ T1) = b(S \\ T1).",
                "Now, consider the vertices in S \\T2.",
                "Any edge in E2 that starts in one of these vertices has to end in T4 (this edge has to be covered by T, and it cannot go across the cut).",
                "Therefore, the total flow out of S \\T2 is at most the total flow out of T4, i.e., b(S \\T2) ≤ c(T4).",
                "Hence, b(S \\ T1) + b(S \\ T2) ≤ c(T3) + c(T4).",
                "Finally, we derive a lower bound on the payment bound that is of interest to us, namely, NTUmin(c).",
                "LEMMA 8.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmin(c, S) ≥ c(V \\ S) PROOF.",
                "Suppose for contradiction that c is a cost vector with minimum-cost vertex cover S and NTUmin(c, S) < c(V \\S).",
                "Let b be the corresponding bid vector and let c be a new cost vector with cv = bv for v ∈ S and cv = cv for v ∈ S. Condition (2) guarantees that S is an optimal solution to the cost vector c .",
                "Now compute a bid vector b corresponding to NTUmax(c , S).",
                "We S W S W s t T1 T3 T2 T4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 00 11 11 0 00 1 11 0 00 1 11 0 00 1 11 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00000 0000000000 0000000000 00000 0000000000 0000000000 00000 0000000000 11111 1111111111 1111111111 11111 1111111111 1111111111 11111 1111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 Figure 4: Proof of Lemma 7.",
                "Dashed lines correspond to edges in E \\ E2 claim that bv = cv for any v ∈ S. Indeed, suppose that bv > cv for some v ∈ S (bv = cv for v ∈ S by construction).",
                "As b satisfies conditions (1)-(3), among the inequalities in (2) there is one that is tight for v and the bid vector b.",
                "That is, b(S \\ T) = c(T \\ S).",
                "By the construction of c , c (S \\ T) = c (T \\ S).",
                "Now since bw ≥ cw for all w ∈ S, bv > cv implies b (S \\T) > c (S \\T) = c (T \\S).",
                "But this violates (2).",
                "So we now know b = c .",
                "Hence, we have NTUmax(c , S) = P v∈S bv = NTUmin(c, S) < c(V \\ S), giving a contradiction to the fact that NTUmax(c , S) ≥ c (V \\S) which we proved in Lemma 7.",
                "As NTUmin(c, S) satisfies condition (1), it follows that we have NTUmin(c, S) ≥ c(S).",
                "Together will Lemma 8, this implies NTUmin(c, S) ≥ max{c(V \\ S), c(S)} ≥ c(V )/2.",
                "Combined with Lemma 5, this completes the proof of Theorem 4.",
                "REMARK 3.",
                "As NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), our bound of 2Δ extends to the smaller frugality ratios that we consider, i.e., φNTUmax(M) and φTUmax(M).",
                "It is not clear whether it extends to the larger <br>frugality ratio</br> φTUmin(M).",
                "However, the <br>frugality ratio</br> φTUmin(M) is not realistic because the payment bound TUmin(c) is inappropriately low - we show in Section 6 that TUmin(c) can be significantly smaller than the total cost of a cheapest vertex cover.",
                "Extensions We can also apply our results to monotone vertex-cover algorithms that do not necessarily output locally-optimal solutions.",
                "To do so, we simply take the vertex cover produced by any such algorithm and transform it into a locally-optimal one, considering the vertices in lexicographic order and replacing a vertex v with its neighbours whenever bv > P u∼v bu.",
                "Note that if a vertex u has been added to the vertex cover during this process, it means that it has a neighbour whose bid is higher than bu, so after one pass all vertices in the vertex cover satisfy bv ≤ P u∼v bu.",
                "This procedure is monotone in bids, and it can only decrease the cost of the vertex cover.",
                "Therefore, using it on top of a monotone allocation rule with approx342 imation ratio α, we obtain a monotone locally-optimal allocation rule with approximation ratio α.",
                "Combining it with threshold payments, we get an auction with φNTUmin ≤ 2Δ.",
                "Since any truthful auction has a monotone allocation rule, this procedure transforms any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio. 5.2 Lower bound In this subsection, we prove that the upper bound of Theorem 4 is essentially optimal.",
                "Our proof uses the techniques of [9], where the authors prove a similar result for shortest-path auctions.",
                "THEOREM 5.",
                "For any Δ > 0 and any n, there exist a graph G of maximum degree Δ and size N > n such that for any truthful mechanism M on G we have φNTUmin(M) ≥ Δ/2.",
                "PROOF.",
                "Given n and Δ, set k = n/2Δ .",
                "Let G be the graph that consists of k blocks B1, . . . , Bk of size 2Δ each, where each Bi is a complete bipartite graph with parts Li and Ri, |Li| = |Ri| = Δ.",
                "We will consider two families of cost vectors for G. Under a cost vector x ∈ X, each block Bi has one vertex of cost 1; all other vertices cost 0.",
                "Under a cost vector y ∈ Y , there is one block that has two vertices of cost 1, one in each part, all other blocks have one vertex of cost 1, and all other vertices cost 0.",
                "Clearly, |X| = (2Δ)k , |Y | = k(2Δ)k−1 Δ2 .",
                "We will now construct a bipartite graph W with the vertex set X ∪ Y as follows.",
                "Consider a cost vector y ∈ Y that has two vertices of cost 1 in Bi; let these vertices be vl ∈ Li and vr ∈ Ri.",
                "By changing the cost of either of these vertices to 0, we obtain a cost vector in X.",
                "Let xl and xr be the cost vectors obtained by changing the cost of vl and vr, respectively.",
                "The vertex cover chosen by M(y) must either contain all vertices in Li or it must contain all vertices in Ri.",
                "In the former case, we put in W an edge from y to xl and in the latter case we put in W an edge from y to xr (if the vertex cover includes all of Bi, W contains both of these edges).",
                "The graph W has at least k(2Δ)k−1 Δ2 edges, so there must exist an x ∈ X of degree at least kΔ/2.",
                "Let y1, . . . , ykΔ/2 be the other endpoints of the edges incident to x, and for each i = 1, . . . , kΔ/2, let vi be the vertex whose cost is different under x and yi; note that all vi are distinct.",
                "It is not hard to see that NTUmin(x) ≤ k: the cheapest vertex cover contains the all-0 part of each block, and we can satisfy conditions (1)-(3) by letting one of the vertices in the all-0 part of each block to bid 1, while all other the vertices in the cheapest set bid 0.",
                "On the other hand, by monotonicity of M we have vi ∈ M(x) for i = 1, . . . , kΔ/2 (vi is in the winning set under yi, and x is obtained from yi by decreasing the cost of vi), and moreover, the threshold bid of each vi is at least 1, so the total payment of M on x is at least kΔ/2.",
                "Hence, φNTUmin(M) ≥ M(x)/NTUmin(x) ≥ Δ/2.",
                "REMARK 4.",
                "The lower bound of Theorem 5 can be generalised to randomised mechanisms, where a randomised mechanism is considered to be truthful if it can be represented as a probability distribution over truthful mechanisms.",
                "In this case, instead of choosing the vertex x ∈ X with the highest degree, we put both (y, xl) and (y, xr) into W , label each edge with the probability that the respective part of the block is chosen, and pick x ∈ X with the highest weighted degree.",
                "The argument can be further extended to a more permissive definition of truthfulness for randomised mechanisms, but this discussion is beyond the scope of this paper. 6.",
                "PROPERTIES OF PAYMENT BOUNDS In this section we consider several desirable properties of payment bounds and evaluate the four payment bounds proposed in this paper with respect to them.",
                "The particular properties that we are interested in are independence of the choice of S (Section 6.3), monotonicity (Section 6.4.1), computational hardness (Section 6.4.2), and the relationship with other reasonable bounds, such as the total cost of the cheapest set (Section 6.1), or the total VCG payment (Section 6.2). 6.1 Comparison with total cost Our first requirement is that a payment bound should not be less than the total cost of the selected set.",
                "Payment bounds are used to evaluate the performance of set-system auctions.",
                "The latter have to satisfy individual rationality, i.e., the payment to each agent must be at least as large as his incurred costs; it is only reasonable to require the payment bound to satisfy the same requirement.",
                "Clearly, NTUmax(c) and NTUmin(c) satisfy this requirement due to condition (1), and so does TUmax(c), since TUmax(c) ≥ NTUmax(c).",
                "However, TUmin(c) fails this test.",
                "The example of Proposition 4 shows that for path auctions, TUmin(c) can be smaller than the total cost by a factor of 2.",
                "Moreover, there are set systems and cost vectors for which TUmin(c) is smaller than the cost of the cheapest set S by a factor of Ω(n).",
                "Consider, for example, the vertex-cover auction for the graph of Proposition 5 with the costs cX1 = · · · = cXn−2 = cXn−1 = 1, cX0 = 0.",
                "The cost of a cheapest vertex cover is n − 2, and the lexicographically first vertex cover of cost n−2 is {X0, X1, . . . , Xn−2}.",
                "The constraints in (2) are bXi + bX0 ≤ cXn−1 = 1.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bX1 = · · · = bXn−2 = 0, bX0 = 1, which means that TUmin(c) ≤ 1.",
                "This observation suggests that the payment bound TUmin(c) is too strong to be realistic, since it can be substantially lower than the cost of the cheapest feasible set.",
                "Nevertheless, some of the positive results that were proved in [16] for NTUmin(c) go through for TUmin(c) as well.",
                "In particular, one can show that if the feasible sets are the bases of a monopolyfree matroid, then φTUmin(VCG) = 1.",
                "To show that φTUmin(VCG) is at most 1, one must prove that the VCG payment is at most TUmin(c).",
                "This is shown for NTUmin(c) in the first paragraph of the proof of Theorem 5 in [16].",
                "Their argument does not use condition (1) at all, so it also applies to TUmin(c).",
                "On the other hand, φTUmin(VCG) ≥ 1 since φTUmin(VCG) ≥ φNTUmin(VCG) and φNTUmin(VCG) ≥ 1 by Proposition 7 of [16] (and also by Proposition 6 below). 6.2 Comparison with VCG payments Another measure of suitability for payment bounds is that they should not result in frugality ratios that are less then 1 for wellknown truthful mechanisms.",
                "If this is indeed the case, the payment bound may be too weak, as it becomes too easy to design mechanisms that perform well with respect to it.",
                "It particular, a reasonable requirement is that a payment bound should not exceed the total payment of the classical VCG mechanism.",
                "The following proposition shows that NTUmax(c), and therefore also NTUmin(c) and TUmin(c), do not exceed the VCG payment pVCG(c).",
                "The proof essentially follows the argument of Proposition 7 of [16] and can be found in the full version of this paper [8].",
                "PROPOSITION 6. φNTUmax(VCG) ≥ 1.",
                "Proposition 6 shows that none of the payment bounds TUmin(c), NTUmin(c) and NTUmax(c) exceeds the payment of VCG.",
                "However, the payment bound TUmax(c) can be larger that the total 343 VCG payment.",
                "In particular, for the instance in Proposition 5, the VCG payment is smaller than TUmax(c) by a factor of n − 2.",
                "We have already seen that TUmax(c) ≥ n − 2.",
                "On the other hand, under VCG, the threshold bid of any Xi, i = 1, . . . , n − 2, is 0: if any such vertex bids above 0, it is deleted from the winning set together with X0 and replaced with Xn−1.",
                "Similarly, the threshold bid of X0 is 1, because if X0 bids above 1, it can be replaced with Xn−1.",
                "So the VCG payment is 1.",
                "This result is not surprising: the definition of TUmax(c) implicitly assumes there is co-operation between the agents, while the computation of VCG payments does not take into account any interaction between them.",
                "Indeed, co-operation enables the agents to extract higher payments under VCG.",
                "That is, VCG is not groupstrategyproof.",
                "This suggests that as a payment bound, TUmax(c) may be too liberal, at least in a context where there is little or no co-operation between agents.",
                "Perhaps TUmax(c) can be a good benchmark for measuring the performance of mechanisms designed for agents that can form coalitions or make side payments to each other, in particular, group-strategyproof mechanisms.",
                "Another setting in which bounding φTUmax is still of some interest is when, for the underlying problem, the optimal allocation and VCG payments are NP-hard to compute.",
                "In this case, finding a polynomial-time computable mechanism with good <br>frugality ratio</br> with respect to TUmax(c) is a non-trivial task, while bounding the <br>frugality ratio</br> with respect to more challenging payment bounds could be too difficult.",
                "To illustrate this point, compare the proofs of Lemma 6 and Lemma 7: both require some effort, but the latter is much more difficult than the former. 6.3 The choice of S All payment bounds defined in this paper correspond to the total bid of all elements in the cheapest feasible set, where ties are broken lexicographically.",
                "While this definition ensures that our payment bounds are well-defined, the particular choice of the drawresolution rule appears arbitrary, and one might wonder if our payment bounds are sufficiently robust to be independent of this choice.",
                "It turns out that is indeed the case for NTUmin(c) and NTUmax(c), i.e., these bounds do not depend on the draw-resolution rule.",
                "To see this, suppose that two feasible sets S1 and S2 have the same cost.",
                "In the computation of NTUmin(c, S1), all vertices in S1 \\S2 would have to bid their true cost, since otherwise S2 would become cheaper than S1.",
                "Hence, any bid vector for S1 can only have be = ce for e ∈ S1 ∩ S2, and hence constitutes a valid bid vector for S2 and vice versa.",
                "A similar argument applies to NTUmax(c).",
                "However, for TUmin(c) and TUmax(c) this is not the case.",
                "For example, consider the set system E = {e1, e2, e3, e4, e5}, F = {S1 = {e1, e2}, S2 = {e2, e3, e4}, S3 = {e4, e5}} with the costs c1 = 2, c2 = c3 = c4 = 1, c5 = 3.",
                "The cheapest sets are S1 and S2.",
                "Now TUmax(c, S1) ≤ 4, as the total bid of the elements in S1 cannot exceed the total cost of S3.",
                "On the other hand, TUmax(c, S2) ≥ 5, as we can set b2 = 3, b3 = 0, b4 = 2.",
                "Similarly, TUmin(c, S1) = 4, because the inequalities in (2) are b1 ≤ 2 and b1 + b2 ≤ 4.",
                "But TUmin(c, S2) ≤ 3 as we can set b2 = 1, b3 = 2, b4 = 0. 6.4 Negative results for NTUmin(c) and TUmin(c) The results in [16] and our vertex cover results are proved for the <br>frugality ratio</br> φNTUmin.",
                "Indeed, it can be argued that φNTUmin is the best definition of <br>frugality ratio</br>, because among all reasonable payment bounds (i.e., ones that are at least as large as the cost of the cheapest feasible set), it is most demanding of the algorithm.",
                "However, NTUmin(c) is not always the easiest or the most natural payment bound to work with.",
                "In this subsection, we discuss several disadvantages of NTUmin(c) (and also TUmin(c)) as compared to NTUmax(c) and TUmax(c). 6.4.1 Nonmonotonicity The first problem with NTUmin(c) is that it is not monotone with respect to F, i.e., it may increase when one adds a feasible set to F. (It is, however, monotone in the sense that a losing agent cannot become a winner by raising his cost.)",
                "Intuitively, a good payment bound should satisfy this monotonicity requirement, as adding a feasible set increases the competition, so it should drive the prices down.",
                "Note that this indeed the case for NTUmax(c) and TUmax(c) since a new feasible set adds a constraint in (2), thus limiting the solution space for the respective linear program.",
                "PROPOSITION 7.",
                "Adding a feasible set to F can increase the value of NTUmin(c) by a factor of Ω(n).",
                "PROOF.",
                "Let E = {x, xx, y1, . . . , yn, z1, . . . , zn}.",
                "Set Y = {y1, . . . , yn}, S = Y ∪ {x}, Ti = Y \\ {yi} ∪ {zi}, i = 1, . . . , n, and suppose that F = {S, T1, . . . , Tn}.",
                "The costs are cx = 0, cxx = 0, cyi = 0, czi = 1 for i = 1, . . . , n. Note that S is the cheapest feasible set.",
                "Let F = F ∪ {T0}, where T0 = Y ∪ {xx}.",
                "For F, the bid vector by1 = · · · = byn = 0, bx = 1 satisfies (1), (2), and (3), so NTUmin(c) ≤ 1.",
                "For F , S is still the lexicographically-least cheapest set.",
                "Any optimal solution has bx = 0 (by constraint in (2) with T0).",
                "Condition (3) for yi implies bx + byi = czi = 1, so byi = 1 and NTUmin(c) = n. For path auctions, it has been shown [18] that NTUmin(c) is non-monotone in a slightly different sense, i.e., with respect to adding a new edge (agent) rather than a new feasible set (a team of existing agents).",
                "REMARK 5.",
                "We can also show that NTUmin(c) is non-monotone for vertex cover.",
                "In this case, adding a new feasible set corresponds to deleting edges from the graph.",
                "It turns out that deleting a single edge can increase NTUmin(c) by a factor of n − 2; the construction is similar to that of Proposition 5. 6.4.2 NP-Hardness Another problem with NTUmin(c, S) is that it is NP-hard to compute even if the number of feasible sets is polynomial in n. Again, this puts it at a disadvantage compared to NTUmax(c, S) and TUmax(c, S) (see Remark 1).",
                "THEOREM 6.",
                "Computing NTUmin(c) is NP-hard, even when the lexicographically-least feasible set S is given in the input.",
                "PROOF.",
                "We reduce EXACT COVER BY 3-SETS(X3C) to our problem.",
                "An instance of X3C is given by a universe G = {g1, . . . , gn} and a collection of subsets C1, . . . , Cm, Ci ⊂ G, |Ci| = 3, where the goal is to decide whether one can cover G by n/3 of these sets.",
                "Observe that if this is indeed the case, each element of G is contained in exactly one set of the cover.",
                "LEMMA 9.",
                "Consider a minimisation problem P of the following form: Minimise P i=1,...,n bi under conditions (1) bi ≥ 0 for all i = 1, . . . , n; (2) for any j = 1, . . . , k we have P bi∈Sj bi ≤ aj, where Sj ⊆ {b1, . . . , bn}; (3) for each bj , one of the constraints in (2) involving it is tight.",
                "For any such P, one can construct a set system S and a vector of costs c such that NTUmin(c) is the optimal solution to P. PROOF.",
                "The construction is straightforward: there is an element of cost 0 for each bi, an element of cost aj for each aj, the feasible solutions are {b1, . . . , bn}, or any set obtained from {b1, . . . , bn} by replacing the elements in Sj by aj. 344 By this lemma, all we have to do to prove Theorem 6 is to show how to solve X3C by using the solution to a minimisation problem of the form given in Lemma 9.",
                "We do this as follows.",
                "For each Ci, we introduce 4 variables xi, ¯xi, ai, and bi.",
                "Also, for each element gj of G there is a variable dj.",
                "We use the following set of constraints: • In (1), we have constraints xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 for all i = 1, . . . , m, j = 1, . . . , n. • In (2), for all i = 1, . . . , m, we have the following 5 constraints: xi + ¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi + bi ≤ 1.",
                "Also, for all j = 1, . . . , n we have a constraint of the form xi1 + · · · + xik + dj ≤ 1, where Ci1 , . . . , Cik are the sets that contain gj.",
                "The goal is to minimize z = P i(xi + ¯xi + ai + bi) + P j dj.",
                "Observe that for each j, there is only one constraint involving dj , so by condition (3) it must be tight.",
                "Consider the two constraints involving ai.",
                "One of them must be tight, and therefore xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1.",
                "Hence, for any feasible solution to (1)-(3) we have z ≥ m. Now, suppose that there is an exact set cover.",
                "Set dj = 0 for j = 1, . . . , n. Also, if Ci is included in this cover, set xi = 1, ¯xi = ai = bi = 0, otherwise set ¯xi = 1, xi = ai = bi = 0.",
                "Clearly, all inequalities in (2) are satisfied (we use the fact that each element is covered exactly once), and for each variable, one of the constraints involving it is tight.",
                "This assignment results in z = m. Conversely, suppose there is a feasible solution with z = m. As each addend of the form xi + ¯xi + ai + bi contributes at least 1, we have xi + ¯xi + ai + bi = 1 for all i, dj = 0 for all j.",
                "We will now show that for each i, either xi = 1 and ¯xi = 0, or xi = 0 and ¯xi = 1.",
                "For the sake of contradiction, suppose that xi = δ < 1, ¯xi = δ < 1.",
                "As one of the constraints involving ai must be tight, we have ai ≥ min{1 − δ, 1 − δ }.",
                "Similarly, bi ≥ min{1 − δ, 1 − δ }.",
                "Hence, xi + ¯xi + ai + bi = 1 = δ +δ +2 min{1−δ, 1−δ } > 1.",
                "To finish the proof, note that for each j = 1, . . . , m we have xi1 + · · · + xik + dj = 1 and dj = 0, so the subsets that correspond to xi = 1 constitute a set cover.",
                "REMARK 6.",
                "In the proofs of Proposition 7 and Theorem 6 all constraints in (1) are of the form be ≥ 0.",
                "Hence, the same results are true for TUmin(c).",
                "REMARK 7.",
                "For shortest-path auctions, the size of F can be superpolynomial.",
                "However, there is a polynomial-time separation oracle for constraints in (2) (to construct one, use any algorithm for finding shortest paths), so one can compute NTUmax(c) and TUmax(c) in polynomial time.",
                "On the other hand, recently and independently it was shown [18] that computing NTUmin(c) for shortest-path auctions is NP-hard. 7.",
                "REFERENCES [1] A. Archer and E. Tardos, Frugal path mechanisms.",
                "In Proceedings of the 13th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 991-999, 2002 [2] R. Bar-Yehuda, K. Bendel, A. Freund, and D. Rawitz, Local ratio: A unified framework for approximation algorithms.",
                "In Memoriam: Shimon Even 1935-2004.",
                "ACM Comput.",
                "Surv., 36(4):422-463, 2004 [3] R. Bar-Yehuda and S. Even, A local-ratio theorem for approximating the weighted vertex cover problem.",
                "Annals of Discrete Mathematics, 25:27-46, 1985 [4] E. Clarke, Multipart pricing of public goods.",
                "Public Choice, 8:17-33, 1971 [5] G. Calinescu, Bounding the payment of approximate truthful mechanisms.",
                "In Proceedings of the 15th International Symposium on Algorithms and Computation, pages 221-233, 2004 [6] A. Czumaj and A. Ronen, On the expected payment of mechanisms for task allocation.",
                "In Proceedings of the 5th ACM Conference on Electronic Commerce (EC04), 2004 [7] E. Elkind, True costs of cheap labor are hard to measure: edge deletion and VCG payments in graphs.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [8] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Frugality ratios and improved truthful mechanisms for vertex cover.",
                "Available from http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai, and K. Steiglitz, Frugality in path auctions.",
                "In Proceedings of the 15th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 694-702, 2004 [10] J. Feigenbaum, C. H. Papadimitriou, R. Sami, and S. Shenker, A BGP-based mechanism for lowest-cost routing.",
                "In Proceedings of the 21st Symposium on Principles of Distributed Computing, pages 173-182, 2002 [11] A. Fiat, A. Goldberg, J. Hartline, and A. Karlin, Competitive generalized auctions.",
                "In Proceedings of the 34th Annual ACM Symposium on Theory of Computation, pages 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra and A. Verma, Coalitional games on graphs: core structures, substitutes and frugality.",
                "In Proceedings of the 4th ACM Conference on Electronic Commerce (EC03), 2005 [13] A. Goldberg, J. Hartline, and A. Wright, Competitive auctions and digital goods.",
                "In Proceedings of the 12th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2001 [14] T. Groves, Incentives in teams.",
                "Econometrica, 41(4):617-631, 1973 [15] N. Immorlica, D. Karger, E. Nikolova, and R. Sami, First-price path auctions.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [16] A. R. Karlin, D. Kempe, and T. Tamir, Beyond VCG: frugality of truthful mechanisms.",
                "In Proceedings of the 46th Annual IEEE Symposium on Foundations of Computer Science, pages 615-626, 2005 [17] D. Kempe, Personal communication, 2006 [18] N. Chen, A. R. Karlin, Cheap labor can be expensive, In Proceedings of the 18th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2007 [19] N. Nisan and A. Ronen, Algorithmic mechanism design.",
                "In Proceedings of the 31st Annual ACM Symposium on Theory of Computation, pages 129-140, 1999 [20] A. Ronen and R. Talisman, Towards generic low payment mechanisms for decentralized task allocation.",
                "In Proceedings of the 7th International IEEE Conference on E-Commerce Technology, 2005 [21] K. Talwar, The price of truth: frugality in truthful mechanisms.",
                "In Proceedings of 20th International Symposium on Theoretical Aspects of Computer Science, 2003 [22] W. Vickrey, Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961 345"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Recientemente, Karlin, Kempe y Tamir introdujeron una nueva definición de \"relación de frugalidad\" para este problema.",
                "Informalmente, la \"relación de frugalidad\" es la relación del pago total de un mecanismo a un pago deseado.",
                "En este artículo, proponemos una nueva subasta veraz de tiempo polinómico para el problema de la cubierta del vértice y vinculamos su \"relación de frugalidad\".",
                "Mostramos que la calidad de la solución es con un factor constante de óptimo y la \"relación de frugalidad\" está dentro de un factor constante del mejor límite del peor de los casos;Esta es la primera subasta para que este problema tenga estas propiedades.",
                "Definen la \"relación de frugalidad\" de un mecanismo como la relación entre su pago total y el costo de la ruta más barata de la ruta seleccionada por el mecanismo.",
                "Muestran que, para una gran clase de mecanismos veraces para este problema, la \"relación de frugalidad\" es tan grande como el número de bordes en el camino más corto.",
                "Talwar [21] extiende esta definición de \"relación de frugalidad\" a los sistemas de conjunto general, y estudia la \"relación de frugalidad\" del mecanismo de VCG clásico [22, 4, 14] para muchos sistemas de conjuntos específicos, como árboles mínimos y cubiertas de establecimiento.",
                "Si bien la definición de \"relación de frugalidad\" propuesta por [1] está bien mootivada y ha sido fundamental para estudiar mecanismos veraces para sistemas establecidos, no es completamente satisfactorio.",
                "Sin embargo, el gráfico no contiene una ruta A-D que sea disjunta de ABCD, y por lo tanto, la \"relación de frugalidad\" de VCG en este gráfico permanece indefinida.",
                "Según esta nueva definición, los autores construyen nuevos mecanismos para el problema de ruta más corto y muestran que el pago excesivo de estos mecanismos está dentro de un factor constante de óptimo.1.1 Nuestros resultados Subastas de cobertura de vértices Proponemos una subasta de tiempo polinomial sincero para la cubierta de vértice que genera una solución cuyo costo está dentro de un factor de 2 de óptimo, y cuya \"relación de frugalidad\" es como máximo 2δ, donde δ es el grado máximo de grado deEl gráfico (Teorema 4).",
                "Complementamos este resultado probando (Teorema 5) que para cualquier δ y N, hay gráficos de grado máximo δ y tamaño θ (n) para los cuales cualquier mecanismo veraz tiene \"relación de frugalidad\" al menos δ/2.",
                "Esto significa que la calidad de la solución de nuestra subasta es con un factor de 2 de óptimo y la \"relación de frugalidad\" está dentro de un factor de 4 de los mejores límites posibles para las entradas en el peor de los casos.",
                "Ambos documentos se basan en la definición de \"relación de frugalidad\" utilizada en [1];Como se mencionó anteriormente, esto significa que sus resultados solo se aplican a gráficos bipartitos.",
                "Talwar [21] muestra que la \"relación de frugalidad\" de VCG es como máximo δ.",
                "Este artículo estudia una subasta basada en el algoritmo de asignación codiciosa, que tiene una relación de aproximación de log n.Si bien el enfoque principal de [5] es el problema de la cubierta del conjunto más general, los resultados de [5] implican una \"relación de frugalidad\" de 2Δ2 para la cubierta del vértice.",
                "Nuestros resultados mejoran en los de [21] ya que nuestro mecanismo es computable en tiempo polinómico, así como en los de [5], ya que nuestro mecanismo tiene una mejor relación de aproximación, y demostramos un límite más fuerte en la \"relación de frugalidad\";Además, este límite también se aplica al mecanismo de [5].2.",
                "Deje que PM (c) denote los pagos totales de M cuando los costos reales son c.Una \"relación de frugalidad\" de M con respecto a un pago límite es la relación entre el pago de M y este pago limitado.",
                "En la siguiente subsección, vinculamos la \"relación de frugalidad\" de ALR (y, en general, en general, todos los algoritmos que satisfacen la condición de optimización local, definida más adelante) en 2Δ, donde δ es el grado máximo de G. Luego demostramos una coincidencia de una coincidenciaUn límite inferior que muestra que para algunos gráficos la \"relación de frugalidad\" de cualquier subasta veraz es al menos δ/2.5.1 Bound superior Decimos que una regla de asignación es localmente óptima si cada vez que bv> p w∼v bw, el vértice V no se elige.",
                "Cualquier subasta de cobertura de vértice M que tenga una regla de asignación localmente óptima y monótona y paga a cada agente su oferta umbral tiene \"relación de frugalidad\" φnumin (M) ≤ 2Δ.",
                "No está claro si se extiende a la mayor \"relación de frugalidad\" φtumin (M).",
                "Sin embargo, la \"relación de frugalidad\" φtumin (M) no es realista porque el tumin atado al pago (C) es inapropiadamente bajo: mostramos en la Sección 6 que el tumin (C) puede ser significativamente menor que el costo total de una cubierta de vértice más barata.",
                "En este caso, encontrar un mecanismo computable en tiempo polinómico con una buena \"relación de frugalidad\" con respecto a Tumax (c) es una tarea no trivial, mientras que limita la \"relación de frugalidad\" con respecto a los límites de pago más desafiantes podría ser demasiado difícil.",
                "Pero tumin (c, s2) ≤ 3 como podemos establecer b2 = 1, b3 = 2, b4 = 0. 6.4 Resultados negativos para ntumin (c) y tumin (c) Los resultados en [16] y los resultados de nuestra cubierta de vértice sonProbado para la \"relación de frugalidad\" φnumin.",
                "De hecho, se puede argumentar que φntumin es la mejor definición de \"relación de frugalidad\", porque entre todos los límites de pago razonables (es decir, los que son al menos tan grandes como el costo del conjunto factible más barato), es muy exigente de losalgoritmo."
            ],
            "translated_text": "",
            "candidates": [
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "Relación de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad",
                "ratio de frugalidad",
                "relación de frugalidad"
            ],
            "error": []
        },
        "bootstrapping technique": {
            "translated_key": "técnica de arranque",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Frugality Ratios And Improved Truthful Mechanisms for Vertex Cover ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT In set-system auctions, there are several overlapping teams of agents, and a task that can be completed by any of these teams.",
                "The auctioneers goal is to hire a team and pay as little as possible.",
                "Examples of this setting include shortest-path auctions and vertex-cover auctions.",
                "Recently, Karlin, Kempe and Tamir introduced a new definition of frugality ratio for this problem.",
                "Informally, the frugality ratio is the ratio of the total payment of a mechanism to a desired payment bound.",
                "The ratio captures the extent to which the mechanism overpays, relative to perceived fair cost in a truthful auction.",
                "In this paper, we propose a new truthful polynomial-time auction for the vertex cover problem and bound its frugality ratio.",
                "We show that the solution quality is with a constant factor of optimal and the frugality ratio is within a constant factor of the best possible worst-case bound; this is the first auction for this problem to have these properties.",
                "Moreover, we show how to transform any truthful auction into a frugal one while preserving the approximation ratio.",
                "Also, we consider two natural modifications of the definition of Karlin et al., and we analyse the properties of the resulting payment bounds, such as monotonicity, computational hardness, and robustness with respect to the draw-resolution rule.",
                "We study the relationships between the different payment bounds, both for general set systems and for specific set-system auctions, such as path auctions and vertex-cover auctions.",
                "We use these new definitions in the proof of our main result for vertex-cover auctions via a <br>bootstrapping technique</br>, which may be of independent interest.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a set system auction there is a single buyer and many vendors that can provide various services.",
                "It is assumed that the buyers requirements can be satisfied by various subsets of the vendors; these subsets are called the feasible sets.",
                "A widely-studied class of setsystem auctions is path auctions, where each vendor is able to sell access to a link in a network, and the feasible sets are those sets whose links contain a path from a given source to a given destination; the study of these auctions has been initiated in the seminal paper by Nisan and Ronen [19] (see also [1, 10, 9, 6, 15, 7, 20]).",
                "We assume that each vendor has a cost of providing his services, but submits a possibly larger bid to the auctioneer.",
                "Based on these bids, the auctioneer selects a feasible subset of vendors, and makes payments to the vendors in this subset.",
                "Each selected vendor enjoys a profit of payment minus cost.",
                "Vendors want to maximise profit, while the buyer wants to minimise the amount he pays.",
                "A natural goal in this setting is to design a truthful auction, in which vendors have an incentive to bid their true cost.",
                "This can be achieved by paying each selected vendor a premium above her bid in such a way that the vendor has no incentive to overbid.",
                "An interesting question in mechanism design is how much the auctioneer will have to overpay in order to ensure truthful bids.",
                "In the context of path auctions this topic was first addressed by Archer and Tardos [1].",
                "They define the frugality ratio of a mechanism as the ratio between its total payment and the cost of the cheapest path disjoint from the path selected by the mechanism.",
                "They show that, for a large class of truthful mechanisms for this problem, the frugality ratio is as large as the number of edges in the shortest path.",
                "Talwar [21] extends this definition of frugality ratio to general set systems, and studies the frugality ratio of the classical VCG mechanism [22, 4, 14] for many specific set systems, such as minimum spanning trees and set covers.",
                "While the definition of frugality ratio proposed by [1] is wellmotivated and has been instrumental in studying truthful mechanisms for set systems, it is not completely satisfactory.",
                "Consider, for example, the graph of Figure 1 with the costs cAB = cBC = A B C D Figure 1: The diamond graph 336 cCD = 0, cAC = cBD = 1.",
                "This graph is 2-connected and the VCG payment to the winning path ABCD is bounded.",
                "However, the graph contains no A-D path that is disjoint from ABCD, and hence the frugality ratio of VCG on this graph remains undefined.",
                "At the same time, there is no monopoly, that is, there is no vendor that appears in all feasible sets.",
                "In auctions for other types of set systems, the requirement that there exist a feasible solution disjoint from the selected one is even more severe: for example, for vertex-cover auctions (where vendors correspond to the vertices of some underlying graph, and the feasible sets are vertex covers) the requirement means that the graph must be bipartite.",
                "To deal with this problem, Karlin et al. [16] suggest a better benchmark, which is defined for any monopoly-free set system.",
                "This quantity, which they denote by ν, intuitively corresponds to the value of a cheapest Nash equilibrium.",
                "Based on this new definition, the authors construct new mechanisms for the shortest path problem and show that the overpayment of these mechanisms is within a constant factor of optimal. 1.1 Our results Vertex cover auctions We propose a truthful polynomial-time auction for vertex cover that outputs a solution whose cost is within a factor of 2 of optimal, and whose frugality ratio is at most 2Δ, where Δ is the maximum degree of the graph (Theorem 4).",
                "We complement this result by proving (Theorem 5) that for any Δ and n, there are graphs of maximum degree Δ and size Θ(n) for which any truthful mechanism has frugality ratio at least Δ/2.",
                "This means that the solution quality of our auction is with a factor of 2 of optimal and the frugality ratio is within a factor of 4 of the best possible bound for worst-case inputs.",
                "To the best of our knowledge, this is the first auction for this problem that enjoys these properties.",
                "Moreover, we show how to transform any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio.",
                "Frugality ratios Our vertex cover results naturally suggest two modifications of the definition of ν in [16].",
                "These modifications can be made independently of each other, resulting in four different payment bounds TUmax, TUmin, NTUmax, and NTUmin, where NTUmin is equal to the original payment bound ν of in [16].",
                "All four payment bounds arise as Nash equilibria of certain games (see the full version of this paper [8]); the differences between them can be seen as the price of initiative and the price of cooperation (see Section 3).",
                "While our main result about vertex cover auctions (Theorem 4) is with respect to NTUmin = ν, we make use of the new definitions by first comparing the payment of our mechanism to a weaker bound NTUmax, and then bootstrapping from this result to obtain the desired bound.",
                "Inspired by this application, we embark on a further study of these payment bounds.",
                "Our results here are as follows: 1.",
                "We observe (Proposition 1) that the four payment bounds always obey a particular order that is independent of the choice of the set system and the cost vector, namely, TUmin ≤ NTUmin ≤ NTUmax ≤ TUmax.",
                "We provide examples (Proposition 5 and Corollaries 1 and 2) showing that for the vertex cover problem any two consecutive bounds can differ by a factor of n − 2, where n is the number of agents.",
                "We then show (Theorem 2) that this separation is almost best possible for general set systems by proving that for any set system TUmax/TUmin ≤ n. In contrast, we demonstrate (Theorem 3) that for path auctions TUmax/TUmin ≤ 2.",
                "We provide examples (Propositions 2, 3 and 4) showing that this bound is tight.",
                "We see this as an argument for the study of vertexcover auctions, as they appear to be more representative of the general team -selection problem than the widely studied path auctions. 2.",
                "We show (Theorem 1) that for any set system, if there is a cost vector for which TUmin and NTUmin differ by a factor of α, there is another cost vector that separates NTUmin and NTUmax by the same factor and vice versa; the same is true for the pairs (NTUmin, NTUmax) and (NTUmax, TUmax).",
                "This symmetry is quite surprising, since, e.g., TUmin and NTUmax are obtained from NTUmin by two very different transformations.",
                "This observation suggests that the four payment bounds should be studied in a unified framework; moreover, it leads us to believe that the <br>bootstrapping technique</br> of Theorem 4 may have other applications. 3.",
                "We evaluate the payment bounds introduced here with respect to a checklist of desirable features.",
                "In particular, we note that the payment bound ν = NTUmin of [16] exhibits some counterintuitive properties, such as nonmonotonicity with respect to adding a new feasible set (Proposition 7), and is NP-hard to compute (Theorem 6), while some of the other payment bounds do not suffer from these problems.",
                "This can be seen as an argument in favour of using weaker but efficiently computable bounds NTUmax and TUmax.",
                "Related work Vertex-cover auctions have been studied in the past by Talwar [21] and Calinescu [5].",
                "Both of these papers are based on the definition of frugality ratio used in [1]; as mentioned before, this means that their results only apply to bipartite graphs.",
                "Talwar [21] shows that the frugality ratio of VCG is at most Δ.",
                "However, since finding the cheapest vertex cover is an NP-hard problem, the VCG mechanism is computationally infeasible.",
                "The first (and, to the best of our knowledge, only) paper to investigate polynomial-time truthful mechanisms for vertex cover is [5].",
                "This paper studies an auction that is based on the greedy allocation algorithm, which has an approximation ratio of log n. While the main focus of [5] is the more general set cover problem, the results of [5] imply a frugality ratio of 2Δ2 for vertex cover.",
                "Our results improve on those of [21] as our mechanism is polynomial-time computable, as well as on those of [5], as our mechanism has a better approximation ratio, and we prove a stronger bound on the frugality ratio; moreover, this bound also applies to the mechanism of [5]. 2.",
                "PRELIMINARIES In most of this paper, we discuss auctions for set systems.",
                "A set system is a pair (E, F), where E is the ground set, |E| = n, and F is a collection of feasible sets, which are subsets of E. Two particular types of set systems are of interest to us - shortest path systems, in which the ground set consists of all edges of a network, and the feasible sets are paths between two specified vertices s and t, and vertex cover systems, in which the elements of the ground set are the vertices of a graph, and the feasible sets are vertex covers of this graph.",
                "In set system auctions, each element e of the ground set is owned by an independent agent and has an associated non-negative cost ce.",
                "The goal of the centre is to select (purchase) a feasible set.",
                "Each element e in the selected set incurs a cost of ce.",
                "The elements that are not selected incur no costs.",
                "The auction proceeds as follows: all elements of the ground set make their bids, the centre selects a feasible set based on the bids and makes payments to the agents.",
                "Formally, an auction is defined by an allocation rule A : Rn → F and a payment rule P : Rn → Rn .",
                "The allocation rule takes as input a vector of bids and decides which of the sets in F should be selected.",
                "The payment rule also takes as input a vector of bids and decides how much to pay to each agent.",
                "The standard requirements are individual rationality, i.e., the payment to each agent should be at least as high as his incurred cost (0 for agents not in the selected set and ce for agents in the 337 selected set) and incentive compatibility, or truthfulness, i.e., each agents dominant strategy is to bid his true cost.",
                "An allocation rule is monotone if an agent cannot increase his chance of getting selected by raising his bid.",
                "Formally, for any bid vector b and any e ∈ E, if e ∈ A(b) then e ∈ A(b1, . . . , be, . . . , bn) for any be > be.",
                "Given a monotone allocation rule A and a bid vector b, the threshold bid te of an agent e ∈ A(b) is the highest bid of this agent that still wins the auction, given that the bids of other participants remain the same.",
                "Formally, te = sup{be ∈ R | e ∈ A(b1, . . . , be, . . . , bn)}.",
                "It is well known (see, e.g. [19, 13]) that any auction that has a monotone allocation rule and pays each agent his threshold bid is truthful; conversely, any truthful auction has a monotone allocation rule.",
                "The VCG mechanism is a truthful mechanism that maximises the social welfare and pays 0 to the losing agents.",
                "For set system auctions, this simply means picking a cheapest feasible set, paying each agent in the selected set his threshold bid, and paying 0 to all other agents.",
                "Note, however, that the VCG mechanism may be difficult to implement, since finding a cheapest feasible set may be intractable.",
                "If U is a set of agents, c(U) denotes P w∈U cw.",
                "Similarly, b(U) denotes P w∈U bw. 3.",
                "FRUGALITY RATIOS We start by reproducing the definition of the quantity ν from [16, Definition 4].",
                "Let (E, F) be a set system and let S be a cheapest feasible set with respect to the true costs ce.",
                "Then ν(c, S) is the solution to the following optimisation problem.",
                "Minimise B = P e∈S be subject to (1) be ≥ ce for all e ∈ E (2) P e∈S\\T be ≤ P e∈T \\S ce for all T ∈ F (3) for every e ∈ S, there is a Te ∈ F such that e ∈ Te andP e ∈S\\Te be = P e ∈Te\\S ce The bound ν(c, S) can be seen as an outcome of a two-stage process, where first each agent e ∈ S makes a bid be stating how much it wants to be paid, and then the centre decides whether to accept these bids.",
                "The behaviour of both parties is affected by the following considerations.",
                "From the centres point of view, the set S must remain the most attractive choice, i.e., it must be among the cheapest feasible sets under the new costs ce = ce for e ∈ S, ce = be for e ∈ S (condition (2)).",
                "The reason for that is that if (2) is violated for some set T, the centre would prefer T to S. On the other hand, no agent would agree to a payment that does not cover his costs (condition (1)), and moreover, each agent tries to maximise his profit by bidding as high as possible, i.e., none of the agents can increase his bid without violating condition (2) (condition (3)).",
                "The centre wants to minimise the total payout, so ν(c, S) corresponds to the best possible outcome from the centres point of view.",
                "This definition captures many important aspects of our intuition about fair payments.",
                "However, it can be modified in two ways, both of which are still quite natural, but result in different payment bounds.",
                "First, we can consider the worst rather than the best possible outcome for the centre.",
                "That is, we can consider the maximum total payment that the agents can extract by jointly selecting their bids subject to (1), (2), and (3).",
                "Such a bound corresponds to maximising B subject to (1), (2), and (3) rather than minimising it.",
                "If it is the agents who make the original bids (rather than the centre), this kind of bidding behaviour is plausible.",
                "On the other hand, in a game in which the centre proposes payments to the agents in S and the agents accept them as long as (1), (2) and (3) are satisfied, we would be likely to observe a total payment of ν(c, S).",
                "Hence, the difference between these two definitions can be seen as the price of initiative.",
                "Second, the agents may be able to make payments to each other.",
                "In this case, if they can extract more money from the centre by agreeing on a vector of bids that violates individual rationality (i.e., condition (1)) for some bidders, they might be willing to do so, as the agents who are paid below their costs will be compensated by other members of the group.",
                "The bids must still be realistic, i.e., they have to satisfy be ≥ 0.",
                "The resulting change in payments can be seen as the price of co-operation and corresponds to replacing condition (1) with the following weaker condition (1∗ ): be ≥ 0 for all e ∈ E. (1∗ ) By considering all possible combinations of these modifications, we obtain four different payment bounds, namely • TUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1∗ ), (2), and (3). • TUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1∗ ), (2), and (3). • NTUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1), (2), and (3). • NTUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1), (2), (3).",
                "The abbreviations TU and NTU correspond, respectively, to transferable utility and non-transferable utility, i.e., the agents ability/inability to make payments to each other.",
                "For concreteness, we will take TUmin(c) to be TUmin(c, S) where S is the lexicographically least amongst the cheapest feasible sets.",
                "We define TUmax(c), NTUmin(c), NTUmax(c) and ν(c) similarly, though we will see in Section 6.3 that, in fact, NTUmin(c, S) and NTUmax(c, S) are independent of the choice of S. Note that the quantity ν(c) from [16] is NTUmin(c).",
                "The second modification (transferable utility) is more intuitively appealing in the context of the maximisation problem, as both assume some degree of co-operation between the agents.",
                "While the second modification can be made without the first, the resulting payment bound TUmin(c, S) is too strong to be a realistic benchmark, at least for general set systems.",
                "In particular, it can be smaller than the total cost of the cheapest feasible set S (see Section 6).",
                "Nevertheless, we provide the definition as well as some results about TUmin(c, S) in the paper, both for completeness and because we believe that it may help to understand which properties of the payment bounds are important for our proofs.",
                "Another possibility would be to introduce an additional constraint P e∈S be ≥P e∈S ce in the definition of TUmin(c, S) (note that this condition holds automatically for TUmax(c, S), as TUmax(c, S) ≥ NTUmax(c, S)); however, such a definition would have no direct game-theoretic interpretation, and some of our results (in particular, the ones in Section 4) would no longer be true.",
                "REMARK 1.",
                "For the payment bounds that are derived from maximisation problems, (i.e., TUmax(c, S) and NTUmax(c, S)), constraints of type (3) are redundant and can be dropped.",
                "Hence, TUmax(c, S) and NTUmax(c, S) are solutions to linear programs, and therefore can be computed in polynomial time as long as we have a separation oracle for constraints in (2).",
                "In contrast, 338 NTUmin(c, S) can be NP-hard to compute even if the size of F is polynomial (see Section 6).",
                "The first and third inequalities in the following observation follow from the fact that condition (1∗ ) is strictly weaker than condition (1).",
                "PROPOSITION 1.",
                "TUmin(c, S) ≤ NTUmin(c, S) ≤ NTUmax(c, S) ≤ TUmax(c, S).",
                "Let M be a truthful mechanism for (E, F).",
                "Let pM(c) denote the total payments of M when the actual costs are c. A frugality ratio of M with respect to a payment bound is the ratio between the payment of M and this payment bound.",
                "In particular, φTUmin(M) = sup c pM(c)/TUmin(c), φTUmax(M) = sup c pM(c)/TUmax(c), φNTUmin(M) = sup c pM(c)/NTUmin(c), φNTUmax(M) = sup c pM(c)/NTUmax(c).",
                "We conclude this section by showing that there exist set systems and respective cost vectors for which all four payment bounds are different.",
                "In the next section, we quantify this difference, both for general set systems, and for specific types of set systems, such as path auctions or vertex cover auctions.",
                "EXAMPLE 1.",
                "Consider the shortest-path auction on the graph of Figure 1.",
                "The cheapest feasible sets are all paths from A to D. It can be verified, using the reasoning of Propositions 2 and 3 below, that for the cost vector cAB = cCD = 2, cBC = 1, cAC = cBD = 5, we have • TUmax(c) = 10 (with bAB = bCD = 5, bBC = 0), • NTUmax(c) = 9 (with bAB = bCD = 4, bBC = 1), • NTUmin(c) = 7 (with bAB = bCD = 2, bBC = 3), • TUmin(c) = 5 (with bAB = bCD = 0, bBC = 5). 4.",
                "COMPARING PAYMENT BOUNDS 4.1 Path auctions We start by showing that for path auctions any two consecutive payment bounds can differ by at least a factor of 2.",
                "PROPOSITION 2.",
                "There is an instance of the shortest-path problem for which we have NTUmax(c)/NTUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is due to David Kempe [17].",
                "Consider the graph of Figure 1 with the edge costs cAB = cBC = cCD = 0, cAC = cBD = 1.",
                "Under these costs, ABCD is the cheapest path.",
                "The inequalities in (2) are bAB + bBC ≤ cAC = 1, bBC + bCD ≤ cBD = 1.",
                "By condition (3), both of these inequalities must be tight (the former one is the only inequality involving bAB, and the latter one is the only inequality involving bCD).",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 0, bCD ≥ 0.",
                "Now, if the goal is to maximise bAB + bBC + bCD, the best choice is bAB = bCD = 1, bBC = 0, so NTUmax(c) = 2.",
                "On the other hand, if the goal is to minimise bAB + bBC + bCD, one should set bAB = bCD = 0, bBC = 1, so NTUmin(c) = 1.",
                "PROPOSITION 3.",
                "There is an instance of the shortest-path problem for which we have TUmax(c)/NTUmax(c) ≥ 2.",
                "PROOF.",
                "Again, consider the graph of Figure 1.",
                "Let the edge costs be cAB = cCD = 0, cBC = 1, cAC = cBD = 1.",
                "ABCD is the lexicographically-least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "The inequalities in (2) are the same as in the previous example, and by the same argument both of them are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 1, bCD ≥ 0.",
                "Our goal is to maximise bAB + bBC + bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 0, bBC = 1, so NTUmax(c) = 1.",
                "Otherwise, we can set bAB = bCD = 1, bBC = 0, so TUmax(c) ≥ 2.",
                "PROPOSITION 4.",
                "There is an instance of the shortest-path problem for which we have NTUmin(c)/TUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is also based on the graph of Figure 1.",
                "The edge costs are cAB = cCD = 1, cBC = 0, cAC = cBD = 1.",
                "ABCD is the lexicographically least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "Again, the inequalities in (2) are the same, and both are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 1, bBC ≥ 0, bCD ≥ 1.",
                "Our goal is to minimise bAB + bBC +bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 1, bBC = 0, so NTUmin(c) = 2.",
                "Otherwise, we can set bAB = bCD = 0, bBC = 1, so TUmin(c) ≤ 1.",
                "In Section 4.4 (Theorem 3), we show that the separation results in Propositions 2, 3, and 4 are optimal. 4.2 Connections between separation results The separation results for path auctions are obtained on the same graph using very similar cost vectors.",
                "It turns out that this is not coincidental.",
                "Namely, we can prove the following theorem.",
                "THEOREM 1.",
                "For any set system (E, F), and any feasible set S, max c TUmax(c, S) NTUmax(c, S) = max c NTUmax(c, S) NTUmin(c, S) , max c NTUmax(c, S) NTUmin(c, S) = max c NTUmin(c, S) TUmin(c, S) , where the maximum is over all cost vectors c for which S is a cheapest feasible set.",
                "The proof of the theorem follows directly from the four lemmas proved below; more precisely, the first equality in Theorem 1 is obtained by combining Lemmas 1 and 2, and the second equality is obtained by combining Lemmas 3 and 4.",
                "We prove Lemma 1 here; the proofs of Lemmas 2- 4 are similar and can be found in the full version of this paper [8].",
                "LEMMA 1.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and TUmax(c, S)/NTUmax(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α.",
                "PROOF.",
                "Suppose that TUmax(c, S) = X and NTUmax(c, S) = Y where X/Y = α.",
                "Assume without loss of generality that S consists of elements 1, . . . , k, and let b1 = (b1 1, . . . , b1 k) and b2 = (b2 1, . . . , b2 k) be the bid vectors that correspond to TUmax(c, S) and NTUmax(c, S), respectively.",
                "Construct the cost vector c by setting ci = ci for i ∈ S, ci = min{ci, b1 i } for i ∈ S. Clearly, S is a cheapest set under c .",
                "Moreover, as the costs of elements outside of S remained the same, the right-hand sides of all constraints in (2) did not change, so any bid vector that satisfies (2) and (3) with respect to c, also satisfies them with respect to c .",
                "We will construct two bid vectors b3 and b4 that satisfy conditions (1), (2), and (3) for the cost vector c , and 339 X X X X X 0 X 12 3 X 4 5 6 Figure 2: Graph that separates payment bounds for vertex cover, n = 7 have P i∈S b3 i = X, P i∈S b4 i = Y .",
                "As NTUmax(c , S) ≥ X and NTUmin(c , S) ≤ Y , this implies the lemma.",
                "We can set b3 i = b1 i : this bid vector satisfies conditions (2) and (3) since b1 does, and we have b1 i ≥ min{ci, b1 i } = ci, which means that b3 satisfies condition (1).",
                "Furthermore, we can set b4 i = b2 i .",
                "Again, b4 satisfies conditions (2) and (3) since b2 does, and since b2 satisfies condition (1), we have b2 i ≥ ci ≥ ci, which means that b4 satisfies condition (1).",
                "LEMMA 2.",
                "Suppose c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and TUmax(c , S)/NTUmax(c , S) ≥ α. LEMMA 3.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmin(c , S)/TUmin(c , S) ≥ α. LEMMA 4.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmin(c, S)/TUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α. 4.3 Vertex-cover auctions In contrast to the case of path auctions, for vertex-cover auctions the gap between NTUmin(c) and NTUmax(c) (and hence between NTUmax(c) and TUmax(c), and between TUmin(c) and NTUmin(c)) can be proportional to the size of the graph.",
                "PROPOSITION 5.",
                "For any n ≥ 3, there is a an n-vertex graph and a cost vector c for which TUmax(c)/NTUmax(c) ≥ n − 2.",
                "PROOF.",
                "The underlying graph consists of an (n − 1)-clique on the vertices X1, . . . , Xn−1, and an extra vertex X0 adjacent to Xn−1.",
                "The costs are cX1 = cX2 = · · · = cXn−2 = 0, cX0 = cXn−1 = 1.",
                "We can assume that S = {X0, X1, . . . , Xn−2} (this is the lexicographically first vertex cover of cost 1).",
                "For this set system, the constraints in (2) are bXi + bX0 ≤ cXn−1 = 1 for i = 1, . . . , n − 2.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bXi = 1 for i = 1, . . . , n − 2, bX0 = 0.",
                "Hence, TUmax(c) ≥ n − 2.",
                "For NTUmax(c), there is an additional constraint bX0 ≥ 1, so the best we can do is to set bXi = 0 for i = 1, . . . , n − 2, bX0 = 1, which implies NTUmax(c) = 1.",
                "Combining Proposition 5 with Lemmas 1 and 3, we derive the following corollaries.",
                "COROLLARY 1.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmax(c)/NTUmin(c) ≥ n − 2.",
                "COROLLARY 2.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmin(c)/TUmin(c) ≥ n − 2. j+2ix ij P \\ P ij+2P \\ P yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 P \\ P Figure 3: Proof of Theorem 3: constraints for ˆPij and ˆPij+2 do not overlap 4.4 Upper bounds It turns out that the lower bound proved in the previous subsection is almost tight.",
                "More precisely, the following theorem shows that no two payment bounds can differ by more than a factor of n; moreover, this is the case not just for the vertex cover problem, but for general set systems.",
                "We bound the gap between TUmax(c) and TUmin(c).",
                "Since TUmin(c) ≤ NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), this bound applies to any pair of payment bounds.",
                "THEOREM 2.",
                "For any set system (E, F) and any cost vector c, we have TUmax(c)/TUmin(c) ≤ n. PROOF.",
                "Assume wlog that the winning set S consists of elements 1, . . . , k. Let c1, . . . , ck be the true costs of elements in S, let b1, . . . , bk be their bids that correspond to TUmin(c), and let b1 , . . . , bk be their bids that correspond to TUmax(c).",
                "Consider the conditions (2) and (3) for S. One can pick a subset L of at most k inequalities in (2) so that for each i = 1, . . . , k there is at least one inequality in L that is tight for bi.",
                "Suppose that the jth inequality in L is of the form bi1 + · · · + bit ≤ c(Tj \\ S).",
                "For bi, all inequalities in L are, in fact, equalities.",
                "Hence, by adding up all of them we obtain k P i=1,...,k bi ≥ P j=1,...,k c(Tj \\ S).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c(Tj \\ S).",
                "Combining these two inequalities, we obtain nTUmin(c) ≥ kTUmin(c) ≥ TUmax(c).",
                "REMARK 2.",
                "The final line of the proof of Theorem 2 shows that, in fact, the upper bound on TUmax(c)/TUmin(c) can be strengthened to the size of the winning set, k. Note that in Proposition 5, as well as in Corollaries 1 and 2, k = n−1, so these results do not contradict each other.",
                "For path auctions, this upper bound can be improved to 2, matching the lower bounds of Section 4.1.",
                "THEOREM 3.",
                "For any instance of the shortest path problem, TUmax(c) ≤ 2 TUmin(c).",
                "PROOF.",
                "Given a network (G, s, t), assume without loss of generality that the lexicographically-least cheapest s-t path, P, in G is {e1, . . . , ek}, where e1 = (s, v1), e2 = (v1, v2), . . . , ek = (vk−1, t).",
                "Let c1, . . . , ck be the true costs of e1, . . . , ek, and let b = (b1, . . . , bk) and b = (b1 , . . . , bk ) be bid vectors that correspond to TUmin(c) and TUmax(c), respectively.",
                "For any i = 1, . . . , k, there is a constraint in (2) that is tight for bi with respect to the bid vector b , i.e., an s-t path Pi that avoids ei and satisfies b (P \\Pi) = c(Pi \\P).",
                "We can assume without loss of generality that Pi coincides with P up to some vertex xi, then deviates from P to avoid ei, and finally returns to P at a vertex 340 yi and coincides with P from then on (clearly, it might happen that s = xi or t = yi).",
                "Indeed, if Pi deviates from P more than once, one of these deviations is not necessary to avoid ei and can be replaced with the respective segment of P without increasing the cost of Pi.",
                "Among all paths of this form, let ˆPi be the one with the largest value of yi, i.e., the rightmost one.",
                "This path corresponds to an inequality Ii of the form bxi+1 + · · · + byi ≤ c( ˆPi \\ P).",
                "As in the proof of Theorem 2, we construct a set of tight constraints L such that every variable bi appears in at least one of these constraints; however, now we have to be more careful about the choice of constraints in L. We construct L inductively as follows.",
                "Start by setting L = {I1}.",
                "At the jth step, suppose that all variables up to (but not including) bij appear in at least one inequality in L. Add Iij to L. Note that for any j we have yij+1 > yij .",
                "This is because the inequalities added to L during the first j steps did not cover bij+1 .",
                "See Figure 3.",
                "Since yij+2 > yij+1 , we must also have xij+2 > yij : otherwise, ˆPij+1 would not be the rightmost constraint for bij+1 .",
                "Therefore, the variables in Iij+2 and Iij do not overlap, and hence no bi can appear in more than two inequalities in L. Now we follow the argument of the proof of Theorem 2 to finish.",
                "By adding up all of the (tight) inequalities in L for bi we obtain 2 P i=1,...,k bi ≥ P j=1,...,k c( ˆPj \\ P).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c( ˆPj \\ P), so TUmax(c) ≤ 2TUmin(c). 5.",
                "TRUTHFUL MECHANISMS FOR VERTEX COVER Recall that for a vertex-cover auction on a graph G = (V, E), an allocation rule is an algorithm that takes as input a bid bv for each vertex and returns a vertex cover ˆS of G. As explained in Section 2, we can combine a monotone allocation rule with threshold payments to obtain a truthful auction.",
                "Two natural examples of monotone allocation rules are Aopt, i.e., the algorithm that finds an optimal vertex cover, and the greedy algorithm AGR.",
                "However, Aopt cannot be guaranteed to run in polynomial time unless P = NP and AGR has approximation ratio of log n. Another approximation algorithm for vertex cover, which has approximation ratio 2, is the local ratio algorithm ALR [2, 3].",
                "This algorithm considers the edges of G one by one.",
                "Given an edge e = (u, v), it computes = min{bu, bv} and sets bu = bu − , bv = bv − .",
                "After all edges have been processed, ALR returns the set of vertices {v | bv = 0}.",
                "It is not hard to check that if the order in which the edges are considered is independent of the bids, then this algorithm is monotone as well.",
                "Hence, we can use it to construct a truthful auction that is guaranteed to select a vertex cover whose cost is within a factor of 2 from the optimal.",
                "However, while the quality of the solution produced by ALR is much better than that of AGR, we still need to show that its total payment is not too high.",
                "In the next subsection, we bound the frugality ratio of ALR (and, more generally, all algorithms that satisfy the condition of local optimality, defined later) by 2Δ, where Δ is the maximum degree of G. We then prove a matching lower bound showing that for some graphs the frugality ratio of any truthful auction is at least Δ/2. 5.1 Upper bound We say that an allocation rule is locally optimal if whenever bv >P w∼v bw, the vertex v is not chosen.",
                "Note that for any such rule the threshold bid of v satisfies tv ≤ P w∼v bw.",
                "CLAIM 1.",
                "The algorithms Aopt, AGR, and ALR are locally optimal.",
                "THEOREM 4.",
                "Any vertex cover auction M that has a locally optimal and monotone allocation rule and pays each agent his threshold bid has frugality ratio φNTUmin(M) ≤ 2Δ.",
                "To prove Theorem 4, we first show that the total payment of any locally optimal mechanism does not exceed Δc(V ).",
                "We then demonstrate that NTUmin(c) ≥ c(V )/2.",
                "By combining these two results, the theorem follows.",
                "LEMMA 5.",
                "Consider a graph G = (V, E) with maximum degree Δ.",
                "Let M be a vertex-cover auction on G that satisfies the conditions of Theorem 4.",
                "Then for any cost vector c, the total payment of M satisfies pM(c) ≤ Δc(V ).",
                "PROOF.",
                "First note that any such auction is truthful, so we can assume that each agents bid is equal to his cost.",
                "Let ˆS be the vertex cover selected by M. Then by local optimality pM(c) = X v∈ ˆS tv ≤ X v∈ ˆS X w∼v cw ≤ X w∈V Δcw = Δc(V ).",
                "We now derive a lower bound on TUmax(c); while not essential for the proof of Theorem 4, it helps us build the intuition necessary for that proof.",
                "LEMMA 6.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, TUmax(c, S) ≥ c(V \\ S) PROOF.",
                "For a vertex w with at least one neighbour in S, let d(w) denote the number of neighbours that w has in S. Consider the bid vector b in which, for each v ∈ S, bv = P w∼v,w∈S cw d(w) .",
                "Then P v∈S bv = P v∈S P w∼v,w∈S cw/d(w) = P w /∈S cw = c(V \\ S).",
                "To finish we want to show that b is feasible in the sense that it satisfies (2).",
                "Consider a vertex cover T, and extend the bid vector b by assigning bv = cv for v /∈ S. Then b(T) = c(T \\S)+b(S∩T) ≥ c(T \\S)+ X v∈S∩T X w∈S∩T :w∼v cw d(w) , and since all edges between S ∩ T and S go to S ∩ T, the righthand-side is equal to c(T \\S)+ X w∈S∩T cw = c(T \\S)+c(S ∩T) = c(V \\S) = b(S).",
                "Next, we prove a lower bound on NTUmax(c, S); we will then use it to obtain a lower bound on NTUmin(c).",
                "LEMMA 7.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmax(c, S) ≥ c(V \\ S) PROOF.",
                "If c(S) ≥ c(V \\ S), by condition (1) we are done.",
                "Therefore, for the rest of the proof we assume that c(S) < c(V \\ S).",
                "We show how to construct a bid vector (be)e∈S that satisfies conditions (1) and (2) such that b(S) ≥ c(V \\ S); clearly, this implies NTUmax(c, S) ≥ c(V \\ S).",
                "Recall that a network flow problem is described by a directed graph Γ = (VΓ, EΓ), a source node s ∈ VΓ, a sink node t ∈ VΓ, and a vector of capacity constraints ae, e ∈ EΓ.",
                "Consider a network (VΓ, EΓ) such that VΓ = V ∪{s, t}, EΓ = E1 ∪E2 ∪E3, where E1 = {(s, v) | v ∈ S}, E2 = {(v, w) | v ∈ S, w ∈ 341 V \\ S, (v, w) ∈ E}, E3 = {(w, t) | w ∈ V \\ S}.",
                "Since S is a vertex cover for G, no edge of E can have both of its endpoints in V \\ S, and by construction, E2 contains no edges with both endpoints in S. Therefore, the graph (V, E2) is bipartite with parts (S, V \\ S).",
                "Set the capacity constraints for e ∈ EΓ as follows: a(s,v) = cv, a(w,t) = cw, a(v,w) = +∞ for all v ∈ S, w ∈ V \\ S. Recall that a cut is a partition of the vertices in VΓ into two sets C1 and C2 so that s ∈ C1, t ∈ C2; we denote such a cut by C = (C1, C2).",
                "Abusing notation, we write e = (u, v) ∈ C if u ∈ C1, v ∈ C2 or u ∈ C2, v ∈ C1, and say that such an edge e = (u, v) crosses the cut C. The capacity of a cut C is computed as cap(C) = P (v,w)∈C a(v,w).",
                "We have cap(s, V ∪{t}) = c(S), cap({s} ∪ V, t) = c(V \\ S).",
                "Let Cmin = ({s} ∪ S ∪ W , {t} ∪ S ∪ W ) be a minimum cut in Γ, where S , S ⊆ S, W , W ⊆ V \\ S. See Figure 4.",
                "As cap(Cmin) ≤ cap(s, V ∪ {t}) = c(S) < +∞, and any edge in E2 has infinite capacity, no edge (u, v) ∈ E2 crosses Cmin.",
                "Consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Clearly, C = ({s} ∪ S ∪ W , {t}) is a minimum cut in Γ (otherwise, there would exist a smaller cut for Γ).",
                "As cap(C ) = c(W ), we have c(S ) ≥ c(W ).",
                "Now, consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Similarly, C = ({s}, S ∪ W ∪ {t}) is a minimum cut in Γ , cap(C ) = c(S ).",
                "As the size of a maximum flow from s to t is equal to the capacity of a minimum cut separating s and t, there exists a flow F = (fe)e∈EΓ of size c(S ).",
                "This flow has to saturate all edges between s and S , i.e., f(s,v) = cv for all v ∈ S .",
                "Now, increase the capacities of all edges between s and S to +∞.",
                "In the modified network, the capacity of a minimum cut (and hence the size of a maximum flow) is c(W ), and a maximum flow F = (fe)e∈EΓ can be constructed by greedily augmenting F. Set bv = cv for all v ∈ S , bv = f(s,v) for all v ∈ S .",
                "As F is constructed by augmenting F, we have bv ≥ cv for all v ∈ S, i.e., condition (1) is satisfied.",
                "Now, let us check that no vertex cover T ⊆ V can violate condition (2).",
                "Set T1 = T ∩ S , T2 = T ∩ S , T3 = T ∩ W , T4 = T ∩ W ; our goal is to show that b(S \\ T1) + b(S \\ T2) ≤ c(T3)+c(T4).",
                "Consider all edges (u, v) ∈ E such that u ∈ S \\T1.",
                "If (u, v) ∈ E2 then v ∈ T3 (no edge in E2 can cross the cut), and if u, v ∈ S then v ∈ T1∪T2.",
                "Hence, T1∪T3∪S is a vertex cover for G, and therefore c(T1)+ c(T3)+ c(S ) ≥ c(S) = c(T1)+ c(S \\ T1) + c(S ).",
                "Consequently, c(T3) ≥ c(S \\ T1) = b(S \\ T1).",
                "Now, consider the vertices in S \\T2.",
                "Any edge in E2 that starts in one of these vertices has to end in T4 (this edge has to be covered by T, and it cannot go across the cut).",
                "Therefore, the total flow out of S \\T2 is at most the total flow out of T4, i.e., b(S \\T2) ≤ c(T4).",
                "Hence, b(S \\ T1) + b(S \\ T2) ≤ c(T3) + c(T4).",
                "Finally, we derive a lower bound on the payment bound that is of interest to us, namely, NTUmin(c).",
                "LEMMA 8.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmin(c, S) ≥ c(V \\ S) PROOF.",
                "Suppose for contradiction that c is a cost vector with minimum-cost vertex cover S and NTUmin(c, S) < c(V \\S).",
                "Let b be the corresponding bid vector and let c be a new cost vector with cv = bv for v ∈ S and cv = cv for v ∈ S. Condition (2) guarantees that S is an optimal solution to the cost vector c .",
                "Now compute a bid vector b corresponding to NTUmax(c , S).",
                "We S W S W s t T1 T3 T2 T4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 00 11 11 0 00 1 11 0 00 1 11 0 00 1 11 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00000 0000000000 0000000000 00000 0000000000 0000000000 00000 0000000000 11111 1111111111 1111111111 11111 1111111111 1111111111 11111 1111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 Figure 4: Proof of Lemma 7.",
                "Dashed lines correspond to edges in E \\ E2 claim that bv = cv for any v ∈ S. Indeed, suppose that bv > cv for some v ∈ S (bv = cv for v ∈ S by construction).",
                "As b satisfies conditions (1)-(3), among the inequalities in (2) there is one that is tight for v and the bid vector b.",
                "That is, b(S \\ T) = c(T \\ S).",
                "By the construction of c , c (S \\ T) = c (T \\ S).",
                "Now since bw ≥ cw for all w ∈ S, bv > cv implies b (S \\T) > c (S \\T) = c (T \\S).",
                "But this violates (2).",
                "So we now know b = c .",
                "Hence, we have NTUmax(c , S) = P v∈S bv = NTUmin(c, S) < c(V \\ S), giving a contradiction to the fact that NTUmax(c , S) ≥ c (V \\S) which we proved in Lemma 7.",
                "As NTUmin(c, S) satisfies condition (1), it follows that we have NTUmin(c, S) ≥ c(S).",
                "Together will Lemma 8, this implies NTUmin(c, S) ≥ max{c(V \\ S), c(S)} ≥ c(V )/2.",
                "Combined with Lemma 5, this completes the proof of Theorem 4.",
                "REMARK 3.",
                "As NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), our bound of 2Δ extends to the smaller frugality ratios that we consider, i.e., φNTUmax(M) and φTUmax(M).",
                "It is not clear whether it extends to the larger frugality ratio φTUmin(M).",
                "However, the frugality ratio φTUmin(M) is not realistic because the payment bound TUmin(c) is inappropriately low - we show in Section 6 that TUmin(c) can be significantly smaller than the total cost of a cheapest vertex cover.",
                "Extensions We can also apply our results to monotone vertex-cover algorithms that do not necessarily output locally-optimal solutions.",
                "To do so, we simply take the vertex cover produced by any such algorithm and transform it into a locally-optimal one, considering the vertices in lexicographic order and replacing a vertex v with its neighbours whenever bv > P u∼v bu.",
                "Note that if a vertex u has been added to the vertex cover during this process, it means that it has a neighbour whose bid is higher than bu, so after one pass all vertices in the vertex cover satisfy bv ≤ P u∼v bu.",
                "This procedure is monotone in bids, and it can only decrease the cost of the vertex cover.",
                "Therefore, using it on top of a monotone allocation rule with approx342 imation ratio α, we obtain a monotone locally-optimal allocation rule with approximation ratio α.",
                "Combining it with threshold payments, we get an auction with φNTUmin ≤ 2Δ.",
                "Since any truthful auction has a monotone allocation rule, this procedure transforms any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio. 5.2 Lower bound In this subsection, we prove that the upper bound of Theorem 4 is essentially optimal.",
                "Our proof uses the techniques of [9], where the authors prove a similar result for shortest-path auctions.",
                "THEOREM 5.",
                "For any Δ > 0 and any n, there exist a graph G of maximum degree Δ and size N > n such that for any truthful mechanism M on G we have φNTUmin(M) ≥ Δ/2.",
                "PROOF.",
                "Given n and Δ, set k = n/2Δ .",
                "Let G be the graph that consists of k blocks B1, . . . , Bk of size 2Δ each, where each Bi is a complete bipartite graph with parts Li and Ri, |Li| = |Ri| = Δ.",
                "We will consider two families of cost vectors for G. Under a cost vector x ∈ X, each block Bi has one vertex of cost 1; all other vertices cost 0.",
                "Under a cost vector y ∈ Y , there is one block that has two vertices of cost 1, one in each part, all other blocks have one vertex of cost 1, and all other vertices cost 0.",
                "Clearly, |X| = (2Δ)k , |Y | = k(2Δ)k−1 Δ2 .",
                "We will now construct a bipartite graph W with the vertex set X ∪ Y as follows.",
                "Consider a cost vector y ∈ Y that has two vertices of cost 1 in Bi; let these vertices be vl ∈ Li and vr ∈ Ri.",
                "By changing the cost of either of these vertices to 0, we obtain a cost vector in X.",
                "Let xl and xr be the cost vectors obtained by changing the cost of vl and vr, respectively.",
                "The vertex cover chosen by M(y) must either contain all vertices in Li or it must contain all vertices in Ri.",
                "In the former case, we put in W an edge from y to xl and in the latter case we put in W an edge from y to xr (if the vertex cover includes all of Bi, W contains both of these edges).",
                "The graph W has at least k(2Δ)k−1 Δ2 edges, so there must exist an x ∈ X of degree at least kΔ/2.",
                "Let y1, . . . , ykΔ/2 be the other endpoints of the edges incident to x, and for each i = 1, . . . , kΔ/2, let vi be the vertex whose cost is different under x and yi; note that all vi are distinct.",
                "It is not hard to see that NTUmin(x) ≤ k: the cheapest vertex cover contains the all-0 part of each block, and we can satisfy conditions (1)-(3) by letting one of the vertices in the all-0 part of each block to bid 1, while all other the vertices in the cheapest set bid 0.",
                "On the other hand, by monotonicity of M we have vi ∈ M(x) for i = 1, . . . , kΔ/2 (vi is in the winning set under yi, and x is obtained from yi by decreasing the cost of vi), and moreover, the threshold bid of each vi is at least 1, so the total payment of M on x is at least kΔ/2.",
                "Hence, φNTUmin(M) ≥ M(x)/NTUmin(x) ≥ Δ/2.",
                "REMARK 4.",
                "The lower bound of Theorem 5 can be generalised to randomised mechanisms, where a randomised mechanism is considered to be truthful if it can be represented as a probability distribution over truthful mechanisms.",
                "In this case, instead of choosing the vertex x ∈ X with the highest degree, we put both (y, xl) and (y, xr) into W , label each edge with the probability that the respective part of the block is chosen, and pick x ∈ X with the highest weighted degree.",
                "The argument can be further extended to a more permissive definition of truthfulness for randomised mechanisms, but this discussion is beyond the scope of this paper. 6.",
                "PROPERTIES OF PAYMENT BOUNDS In this section we consider several desirable properties of payment bounds and evaluate the four payment bounds proposed in this paper with respect to them.",
                "The particular properties that we are interested in are independence of the choice of S (Section 6.3), monotonicity (Section 6.4.1), computational hardness (Section 6.4.2), and the relationship with other reasonable bounds, such as the total cost of the cheapest set (Section 6.1), or the total VCG payment (Section 6.2). 6.1 Comparison with total cost Our first requirement is that a payment bound should not be less than the total cost of the selected set.",
                "Payment bounds are used to evaluate the performance of set-system auctions.",
                "The latter have to satisfy individual rationality, i.e., the payment to each agent must be at least as large as his incurred costs; it is only reasonable to require the payment bound to satisfy the same requirement.",
                "Clearly, NTUmax(c) and NTUmin(c) satisfy this requirement due to condition (1), and so does TUmax(c), since TUmax(c) ≥ NTUmax(c).",
                "However, TUmin(c) fails this test.",
                "The example of Proposition 4 shows that for path auctions, TUmin(c) can be smaller than the total cost by a factor of 2.",
                "Moreover, there are set systems and cost vectors for which TUmin(c) is smaller than the cost of the cheapest set S by a factor of Ω(n).",
                "Consider, for example, the vertex-cover auction for the graph of Proposition 5 with the costs cX1 = · · · = cXn−2 = cXn−1 = 1, cX0 = 0.",
                "The cost of a cheapest vertex cover is n − 2, and the lexicographically first vertex cover of cost n−2 is {X0, X1, . . . , Xn−2}.",
                "The constraints in (2) are bXi + bX0 ≤ cXn−1 = 1.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bX1 = · · · = bXn−2 = 0, bX0 = 1, which means that TUmin(c) ≤ 1.",
                "This observation suggests that the payment bound TUmin(c) is too strong to be realistic, since it can be substantially lower than the cost of the cheapest feasible set.",
                "Nevertheless, some of the positive results that were proved in [16] for NTUmin(c) go through for TUmin(c) as well.",
                "In particular, one can show that if the feasible sets are the bases of a monopolyfree matroid, then φTUmin(VCG) = 1.",
                "To show that φTUmin(VCG) is at most 1, one must prove that the VCG payment is at most TUmin(c).",
                "This is shown for NTUmin(c) in the first paragraph of the proof of Theorem 5 in [16].",
                "Their argument does not use condition (1) at all, so it also applies to TUmin(c).",
                "On the other hand, φTUmin(VCG) ≥ 1 since φTUmin(VCG) ≥ φNTUmin(VCG) and φNTUmin(VCG) ≥ 1 by Proposition 7 of [16] (and also by Proposition 6 below). 6.2 Comparison with VCG payments Another measure of suitability for payment bounds is that they should not result in frugality ratios that are less then 1 for wellknown truthful mechanisms.",
                "If this is indeed the case, the payment bound may be too weak, as it becomes too easy to design mechanisms that perform well with respect to it.",
                "It particular, a reasonable requirement is that a payment bound should not exceed the total payment of the classical VCG mechanism.",
                "The following proposition shows that NTUmax(c), and therefore also NTUmin(c) and TUmin(c), do not exceed the VCG payment pVCG(c).",
                "The proof essentially follows the argument of Proposition 7 of [16] and can be found in the full version of this paper [8].",
                "PROPOSITION 6. φNTUmax(VCG) ≥ 1.",
                "Proposition 6 shows that none of the payment bounds TUmin(c), NTUmin(c) and NTUmax(c) exceeds the payment of VCG.",
                "However, the payment bound TUmax(c) can be larger that the total 343 VCG payment.",
                "In particular, for the instance in Proposition 5, the VCG payment is smaller than TUmax(c) by a factor of n − 2.",
                "We have already seen that TUmax(c) ≥ n − 2.",
                "On the other hand, under VCG, the threshold bid of any Xi, i = 1, . . . , n − 2, is 0: if any such vertex bids above 0, it is deleted from the winning set together with X0 and replaced with Xn−1.",
                "Similarly, the threshold bid of X0 is 1, because if X0 bids above 1, it can be replaced with Xn−1.",
                "So the VCG payment is 1.",
                "This result is not surprising: the definition of TUmax(c) implicitly assumes there is co-operation between the agents, while the computation of VCG payments does not take into account any interaction between them.",
                "Indeed, co-operation enables the agents to extract higher payments under VCG.",
                "That is, VCG is not groupstrategyproof.",
                "This suggests that as a payment bound, TUmax(c) may be too liberal, at least in a context where there is little or no co-operation between agents.",
                "Perhaps TUmax(c) can be a good benchmark for measuring the performance of mechanisms designed for agents that can form coalitions or make side payments to each other, in particular, group-strategyproof mechanisms.",
                "Another setting in which bounding φTUmax is still of some interest is when, for the underlying problem, the optimal allocation and VCG payments are NP-hard to compute.",
                "In this case, finding a polynomial-time computable mechanism with good frugality ratio with respect to TUmax(c) is a non-trivial task, while bounding the frugality ratio with respect to more challenging payment bounds could be too difficult.",
                "To illustrate this point, compare the proofs of Lemma 6 and Lemma 7: both require some effort, but the latter is much more difficult than the former. 6.3 The choice of S All payment bounds defined in this paper correspond to the total bid of all elements in the cheapest feasible set, where ties are broken lexicographically.",
                "While this definition ensures that our payment bounds are well-defined, the particular choice of the drawresolution rule appears arbitrary, and one might wonder if our payment bounds are sufficiently robust to be independent of this choice.",
                "It turns out that is indeed the case for NTUmin(c) and NTUmax(c), i.e., these bounds do not depend on the draw-resolution rule.",
                "To see this, suppose that two feasible sets S1 and S2 have the same cost.",
                "In the computation of NTUmin(c, S1), all vertices in S1 \\S2 would have to bid their true cost, since otherwise S2 would become cheaper than S1.",
                "Hence, any bid vector for S1 can only have be = ce for e ∈ S1 ∩ S2, and hence constitutes a valid bid vector for S2 and vice versa.",
                "A similar argument applies to NTUmax(c).",
                "However, for TUmin(c) and TUmax(c) this is not the case.",
                "For example, consider the set system E = {e1, e2, e3, e4, e5}, F = {S1 = {e1, e2}, S2 = {e2, e3, e4}, S3 = {e4, e5}} with the costs c1 = 2, c2 = c3 = c4 = 1, c5 = 3.",
                "The cheapest sets are S1 and S2.",
                "Now TUmax(c, S1) ≤ 4, as the total bid of the elements in S1 cannot exceed the total cost of S3.",
                "On the other hand, TUmax(c, S2) ≥ 5, as we can set b2 = 3, b3 = 0, b4 = 2.",
                "Similarly, TUmin(c, S1) = 4, because the inequalities in (2) are b1 ≤ 2 and b1 + b2 ≤ 4.",
                "But TUmin(c, S2) ≤ 3 as we can set b2 = 1, b3 = 2, b4 = 0. 6.4 Negative results for NTUmin(c) and TUmin(c) The results in [16] and our vertex cover results are proved for the frugality ratio φNTUmin.",
                "Indeed, it can be argued that φNTUmin is the best definition of frugality ratio, because among all reasonable payment bounds (i.e., ones that are at least as large as the cost of the cheapest feasible set), it is most demanding of the algorithm.",
                "However, NTUmin(c) is not always the easiest or the most natural payment bound to work with.",
                "In this subsection, we discuss several disadvantages of NTUmin(c) (and also TUmin(c)) as compared to NTUmax(c) and TUmax(c). 6.4.1 Nonmonotonicity The first problem with NTUmin(c) is that it is not monotone with respect to F, i.e., it may increase when one adds a feasible set to F. (It is, however, monotone in the sense that a losing agent cannot become a winner by raising his cost.)",
                "Intuitively, a good payment bound should satisfy this monotonicity requirement, as adding a feasible set increases the competition, so it should drive the prices down.",
                "Note that this indeed the case for NTUmax(c) and TUmax(c) since a new feasible set adds a constraint in (2), thus limiting the solution space for the respective linear program.",
                "PROPOSITION 7.",
                "Adding a feasible set to F can increase the value of NTUmin(c) by a factor of Ω(n).",
                "PROOF.",
                "Let E = {x, xx, y1, . . . , yn, z1, . . . , zn}.",
                "Set Y = {y1, . . . , yn}, S = Y ∪ {x}, Ti = Y \\ {yi} ∪ {zi}, i = 1, . . . , n, and suppose that F = {S, T1, . . . , Tn}.",
                "The costs are cx = 0, cxx = 0, cyi = 0, czi = 1 for i = 1, . . . , n. Note that S is the cheapest feasible set.",
                "Let F = F ∪ {T0}, where T0 = Y ∪ {xx}.",
                "For F, the bid vector by1 = · · · = byn = 0, bx = 1 satisfies (1), (2), and (3), so NTUmin(c) ≤ 1.",
                "For F , S is still the lexicographically-least cheapest set.",
                "Any optimal solution has bx = 0 (by constraint in (2) with T0).",
                "Condition (3) for yi implies bx + byi = czi = 1, so byi = 1 and NTUmin(c) = n. For path auctions, it has been shown [18] that NTUmin(c) is non-monotone in a slightly different sense, i.e., with respect to adding a new edge (agent) rather than a new feasible set (a team of existing agents).",
                "REMARK 5.",
                "We can also show that NTUmin(c) is non-monotone for vertex cover.",
                "In this case, adding a new feasible set corresponds to deleting edges from the graph.",
                "It turns out that deleting a single edge can increase NTUmin(c) by a factor of n − 2; the construction is similar to that of Proposition 5. 6.4.2 NP-Hardness Another problem with NTUmin(c, S) is that it is NP-hard to compute even if the number of feasible sets is polynomial in n. Again, this puts it at a disadvantage compared to NTUmax(c, S) and TUmax(c, S) (see Remark 1).",
                "THEOREM 6.",
                "Computing NTUmin(c) is NP-hard, even when the lexicographically-least feasible set S is given in the input.",
                "PROOF.",
                "We reduce EXACT COVER BY 3-SETS(X3C) to our problem.",
                "An instance of X3C is given by a universe G = {g1, . . . , gn} and a collection of subsets C1, . . . , Cm, Ci ⊂ G, |Ci| = 3, where the goal is to decide whether one can cover G by n/3 of these sets.",
                "Observe that if this is indeed the case, each element of G is contained in exactly one set of the cover.",
                "LEMMA 9.",
                "Consider a minimisation problem P of the following form: Minimise P i=1,...,n bi under conditions (1) bi ≥ 0 for all i = 1, . . . , n; (2) for any j = 1, . . . , k we have P bi∈Sj bi ≤ aj, where Sj ⊆ {b1, . . . , bn}; (3) for each bj , one of the constraints in (2) involving it is tight.",
                "For any such P, one can construct a set system S and a vector of costs c such that NTUmin(c) is the optimal solution to P. PROOF.",
                "The construction is straightforward: there is an element of cost 0 for each bi, an element of cost aj for each aj, the feasible solutions are {b1, . . . , bn}, or any set obtained from {b1, . . . , bn} by replacing the elements in Sj by aj. 344 By this lemma, all we have to do to prove Theorem 6 is to show how to solve X3C by using the solution to a minimisation problem of the form given in Lemma 9.",
                "We do this as follows.",
                "For each Ci, we introduce 4 variables xi, ¯xi, ai, and bi.",
                "Also, for each element gj of G there is a variable dj.",
                "We use the following set of constraints: • In (1), we have constraints xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 for all i = 1, . . . , m, j = 1, . . . , n. • In (2), for all i = 1, . . . , m, we have the following 5 constraints: xi + ¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi + bi ≤ 1.",
                "Also, for all j = 1, . . . , n we have a constraint of the form xi1 + · · · + xik + dj ≤ 1, where Ci1 , . . . , Cik are the sets that contain gj.",
                "The goal is to minimize z = P i(xi + ¯xi + ai + bi) + P j dj.",
                "Observe that for each j, there is only one constraint involving dj , so by condition (3) it must be tight.",
                "Consider the two constraints involving ai.",
                "One of them must be tight, and therefore xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1.",
                "Hence, for any feasible solution to (1)-(3) we have z ≥ m. Now, suppose that there is an exact set cover.",
                "Set dj = 0 for j = 1, . . . , n. Also, if Ci is included in this cover, set xi = 1, ¯xi = ai = bi = 0, otherwise set ¯xi = 1, xi = ai = bi = 0.",
                "Clearly, all inequalities in (2) are satisfied (we use the fact that each element is covered exactly once), and for each variable, one of the constraints involving it is tight.",
                "This assignment results in z = m. Conversely, suppose there is a feasible solution with z = m. As each addend of the form xi + ¯xi + ai + bi contributes at least 1, we have xi + ¯xi + ai + bi = 1 for all i, dj = 0 for all j.",
                "We will now show that for each i, either xi = 1 and ¯xi = 0, or xi = 0 and ¯xi = 1.",
                "For the sake of contradiction, suppose that xi = δ < 1, ¯xi = δ < 1.",
                "As one of the constraints involving ai must be tight, we have ai ≥ min{1 − δ, 1 − δ }.",
                "Similarly, bi ≥ min{1 − δ, 1 − δ }.",
                "Hence, xi + ¯xi + ai + bi = 1 = δ +δ +2 min{1−δ, 1−δ } > 1.",
                "To finish the proof, note that for each j = 1, . . . , m we have xi1 + · · · + xik + dj = 1 and dj = 0, so the subsets that correspond to xi = 1 constitute a set cover.",
                "REMARK 6.",
                "In the proofs of Proposition 7 and Theorem 6 all constraints in (1) are of the form be ≥ 0.",
                "Hence, the same results are true for TUmin(c).",
                "REMARK 7.",
                "For shortest-path auctions, the size of F can be superpolynomial.",
                "However, there is a polynomial-time separation oracle for constraints in (2) (to construct one, use any algorithm for finding shortest paths), so one can compute NTUmax(c) and TUmax(c) in polynomial time.",
                "On the other hand, recently and independently it was shown [18] that computing NTUmin(c) for shortest-path auctions is NP-hard. 7.",
                "REFERENCES [1] A. Archer and E. Tardos, Frugal path mechanisms.",
                "In Proceedings of the 13th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 991-999, 2002 [2] R. Bar-Yehuda, K. Bendel, A. Freund, and D. Rawitz, Local ratio: A unified framework for approximation algorithms.",
                "In Memoriam: Shimon Even 1935-2004.",
                "ACM Comput.",
                "Surv., 36(4):422-463, 2004 [3] R. Bar-Yehuda and S. Even, A local-ratio theorem for approximating the weighted vertex cover problem.",
                "Annals of Discrete Mathematics, 25:27-46, 1985 [4] E. Clarke, Multipart pricing of public goods.",
                "Public Choice, 8:17-33, 1971 [5] G. Calinescu, Bounding the payment of approximate truthful mechanisms.",
                "In Proceedings of the 15th International Symposium on Algorithms and Computation, pages 221-233, 2004 [6] A. Czumaj and A. Ronen, On the expected payment of mechanisms for task allocation.",
                "In Proceedings of the 5th ACM Conference on Electronic Commerce (EC04), 2004 [7] E. Elkind, True costs of cheap labor are hard to measure: edge deletion and VCG payments in graphs.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [8] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Frugality ratios and improved truthful mechanisms for vertex cover.",
                "Available from http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai, and K. Steiglitz, Frugality in path auctions.",
                "In Proceedings of the 15th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 694-702, 2004 [10] J. Feigenbaum, C. H. Papadimitriou, R. Sami, and S. Shenker, A BGP-based mechanism for lowest-cost routing.",
                "In Proceedings of the 21st Symposium on Principles of Distributed Computing, pages 173-182, 2002 [11] A. Fiat, A. Goldberg, J. Hartline, and A. Karlin, Competitive generalized auctions.",
                "In Proceedings of the 34th Annual ACM Symposium on Theory of Computation, pages 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra and A. Verma, Coalitional games on graphs: core structures, substitutes and frugality.",
                "In Proceedings of the 4th ACM Conference on Electronic Commerce (EC03), 2005 [13] A. Goldberg, J. Hartline, and A. Wright, Competitive auctions and digital goods.",
                "In Proceedings of the 12th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2001 [14] T. Groves, Incentives in teams.",
                "Econometrica, 41(4):617-631, 1973 [15] N. Immorlica, D. Karger, E. Nikolova, and R. Sami, First-price path auctions.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [16] A. R. Karlin, D. Kempe, and T. Tamir, Beyond VCG: frugality of truthful mechanisms.",
                "In Proceedings of the 46th Annual IEEE Symposium on Foundations of Computer Science, pages 615-626, 2005 [17] D. Kempe, Personal communication, 2006 [18] N. Chen, A. R. Karlin, Cheap labor can be expensive, In Proceedings of the 18th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2007 [19] N. Nisan and A. Ronen, Algorithmic mechanism design.",
                "In Proceedings of the 31st Annual ACM Symposium on Theory of Computation, pages 129-140, 1999 [20] A. Ronen and R. Talisman, Towards generic low payment mechanisms for decentralized task allocation.",
                "In Proceedings of the 7th International IEEE Conference on E-Commerce Technology, 2005 [21] K. Talwar, The price of truth: frugality in truthful mechanisms.",
                "In Proceedings of 20th International Symposium on Theoretical Aspects of Computer Science, 2003 [22] W. Vickrey, Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961 345"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Utilizamos estas nuevas definiciones en la prueba de nuestro resultado principal para las subastas de cobertura de vértice a través de una \"técnica de arranque\", que puede ser de interés independiente.",
                "Esta observación sugiere que los cuatro límites de pago deben estudiarse en un marco unificado;Además, nos lleva a creer que la \"técnica de arranque\" del Teorema 4 puede tener otras aplicaciones.3."
            ],
            "translated_text": "",
            "candidates": [
                "técnica de arranque",
                "técnica de arranque",
                "Técnica de arranque",
                "técnica de arranque"
            ],
            "error": []
        },
        "vertex-cover auction": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Frugality Ratios And Improved Truthful Mechanisms for Vertex Cover ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT In set-system auctions, there are several overlapping teams of agents, and a task that can be completed by any of these teams.",
                "The auctioneers goal is to hire a team and pay as little as possible.",
                "Examples of this setting include shortest-path auctions and vertex-cover auctions.",
                "Recently, Karlin, Kempe and Tamir introduced a new definition of frugality ratio for this problem.",
                "Informally, the frugality ratio is the ratio of the total payment of a mechanism to a desired payment bound.",
                "The ratio captures the extent to which the mechanism overpays, relative to perceived fair cost in a truthful auction.",
                "In this paper, we propose a new truthful polynomial-time auction for the vertex cover problem and bound its frugality ratio.",
                "We show that the solution quality is with a constant factor of optimal and the frugality ratio is within a constant factor of the best possible worst-case bound; this is the first auction for this problem to have these properties.",
                "Moreover, we show how to transform any truthful auction into a frugal one while preserving the approximation ratio.",
                "Also, we consider two natural modifications of the definition of Karlin et al., and we analyse the properties of the resulting payment bounds, such as monotonicity, computational hardness, and robustness with respect to the draw-resolution rule.",
                "We study the relationships between the different payment bounds, both for general set systems and for specific set-system auctions, such as path auctions and vertex-cover auctions.",
                "We use these new definitions in the proof of our main result for vertex-cover auctions via a bootstrapping technique, which may be of independent interest.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a set system auction there is a single buyer and many vendors that can provide various services.",
                "It is assumed that the buyers requirements can be satisfied by various subsets of the vendors; these subsets are called the feasible sets.",
                "A widely-studied class of setsystem auctions is path auctions, where each vendor is able to sell access to a link in a network, and the feasible sets are those sets whose links contain a path from a given source to a given destination; the study of these auctions has been initiated in the seminal paper by Nisan and Ronen [19] (see also [1, 10, 9, 6, 15, 7, 20]).",
                "We assume that each vendor has a cost of providing his services, but submits a possibly larger bid to the auctioneer.",
                "Based on these bids, the auctioneer selects a feasible subset of vendors, and makes payments to the vendors in this subset.",
                "Each selected vendor enjoys a profit of payment minus cost.",
                "Vendors want to maximise profit, while the buyer wants to minimise the amount he pays.",
                "A natural goal in this setting is to design a truthful auction, in which vendors have an incentive to bid their true cost.",
                "This can be achieved by paying each selected vendor a premium above her bid in such a way that the vendor has no incentive to overbid.",
                "An interesting question in mechanism design is how much the auctioneer will have to overpay in order to ensure truthful bids.",
                "In the context of path auctions this topic was first addressed by Archer and Tardos [1].",
                "They define the frugality ratio of a mechanism as the ratio between its total payment and the cost of the cheapest path disjoint from the path selected by the mechanism.",
                "They show that, for a large class of truthful mechanisms for this problem, the frugality ratio is as large as the number of edges in the shortest path.",
                "Talwar [21] extends this definition of frugality ratio to general set systems, and studies the frugality ratio of the classical VCG mechanism [22, 4, 14] for many specific set systems, such as minimum spanning trees and set covers.",
                "While the definition of frugality ratio proposed by [1] is wellmotivated and has been instrumental in studying truthful mechanisms for set systems, it is not completely satisfactory.",
                "Consider, for example, the graph of Figure 1 with the costs cAB = cBC = A B C D Figure 1: The diamond graph 336 cCD = 0, cAC = cBD = 1.",
                "This graph is 2-connected and the VCG payment to the winning path ABCD is bounded.",
                "However, the graph contains no A-D path that is disjoint from ABCD, and hence the frugality ratio of VCG on this graph remains undefined.",
                "At the same time, there is no monopoly, that is, there is no vendor that appears in all feasible sets.",
                "In auctions for other types of set systems, the requirement that there exist a feasible solution disjoint from the selected one is even more severe: for example, for vertex-cover auctions (where vendors correspond to the vertices of some underlying graph, and the feasible sets are vertex covers) the requirement means that the graph must be bipartite.",
                "To deal with this problem, Karlin et al. [16] suggest a better benchmark, which is defined for any monopoly-free set system.",
                "This quantity, which they denote by ν, intuitively corresponds to the value of a cheapest Nash equilibrium.",
                "Based on this new definition, the authors construct new mechanisms for the shortest path problem and show that the overpayment of these mechanisms is within a constant factor of optimal. 1.1 Our results Vertex cover auctions We propose a truthful polynomial-time auction for vertex cover that outputs a solution whose cost is within a factor of 2 of optimal, and whose frugality ratio is at most 2Δ, where Δ is the maximum degree of the graph (Theorem 4).",
                "We complement this result by proving (Theorem 5) that for any Δ and n, there are graphs of maximum degree Δ and size Θ(n) for which any truthful mechanism has frugality ratio at least Δ/2.",
                "This means that the solution quality of our auction is with a factor of 2 of optimal and the frugality ratio is within a factor of 4 of the best possible bound for worst-case inputs.",
                "To the best of our knowledge, this is the first auction for this problem that enjoys these properties.",
                "Moreover, we show how to transform any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio.",
                "Frugality ratios Our vertex cover results naturally suggest two modifications of the definition of ν in [16].",
                "These modifications can be made independently of each other, resulting in four different payment bounds TUmax, TUmin, NTUmax, and NTUmin, where NTUmin is equal to the original payment bound ν of in [16].",
                "All four payment bounds arise as Nash equilibria of certain games (see the full version of this paper [8]); the differences between them can be seen as the price of initiative and the price of cooperation (see Section 3).",
                "While our main result about vertex cover auctions (Theorem 4) is with respect to NTUmin = ν, we make use of the new definitions by first comparing the payment of our mechanism to a weaker bound NTUmax, and then bootstrapping from this result to obtain the desired bound.",
                "Inspired by this application, we embark on a further study of these payment bounds.",
                "Our results here are as follows: 1.",
                "We observe (Proposition 1) that the four payment bounds always obey a particular order that is independent of the choice of the set system and the cost vector, namely, TUmin ≤ NTUmin ≤ NTUmax ≤ TUmax.",
                "We provide examples (Proposition 5 and Corollaries 1 and 2) showing that for the vertex cover problem any two consecutive bounds can differ by a factor of n − 2, where n is the number of agents.",
                "We then show (Theorem 2) that this separation is almost best possible for general set systems by proving that for any set system TUmax/TUmin ≤ n. In contrast, we demonstrate (Theorem 3) that for path auctions TUmax/TUmin ≤ 2.",
                "We provide examples (Propositions 2, 3 and 4) showing that this bound is tight.",
                "We see this as an argument for the study of vertexcover auctions, as they appear to be more representative of the general team -selection problem than the widely studied path auctions. 2.",
                "We show (Theorem 1) that for any set system, if there is a cost vector for which TUmin and NTUmin differ by a factor of α, there is another cost vector that separates NTUmin and NTUmax by the same factor and vice versa; the same is true for the pairs (NTUmin, NTUmax) and (NTUmax, TUmax).",
                "This symmetry is quite surprising, since, e.g., TUmin and NTUmax are obtained from NTUmin by two very different transformations.",
                "This observation suggests that the four payment bounds should be studied in a unified framework; moreover, it leads us to believe that the bootstrapping technique of Theorem 4 may have other applications. 3.",
                "We evaluate the payment bounds introduced here with respect to a checklist of desirable features.",
                "In particular, we note that the payment bound ν = NTUmin of [16] exhibits some counterintuitive properties, such as nonmonotonicity with respect to adding a new feasible set (Proposition 7), and is NP-hard to compute (Theorem 6), while some of the other payment bounds do not suffer from these problems.",
                "This can be seen as an argument in favour of using weaker but efficiently computable bounds NTUmax and TUmax.",
                "Related work Vertex-cover auctions have been studied in the past by Talwar [21] and Calinescu [5].",
                "Both of these papers are based on the definition of frugality ratio used in [1]; as mentioned before, this means that their results only apply to bipartite graphs.",
                "Talwar [21] shows that the frugality ratio of VCG is at most Δ.",
                "However, since finding the cheapest vertex cover is an NP-hard problem, the VCG mechanism is computationally infeasible.",
                "The first (and, to the best of our knowledge, only) paper to investigate polynomial-time truthful mechanisms for vertex cover is [5].",
                "This paper studies an auction that is based on the greedy allocation algorithm, which has an approximation ratio of log n. While the main focus of [5] is the more general set cover problem, the results of [5] imply a frugality ratio of 2Δ2 for vertex cover.",
                "Our results improve on those of [21] as our mechanism is polynomial-time computable, as well as on those of [5], as our mechanism has a better approximation ratio, and we prove a stronger bound on the frugality ratio; moreover, this bound also applies to the mechanism of [5]. 2.",
                "PRELIMINARIES In most of this paper, we discuss auctions for set systems.",
                "A set system is a pair (E, F), where E is the ground set, |E| = n, and F is a collection of feasible sets, which are subsets of E. Two particular types of set systems are of interest to us - shortest path systems, in which the ground set consists of all edges of a network, and the feasible sets are paths between two specified vertices s and t, and vertex cover systems, in which the elements of the ground set are the vertices of a graph, and the feasible sets are vertex covers of this graph.",
                "In set system auctions, each element e of the ground set is owned by an independent agent and has an associated non-negative cost ce.",
                "The goal of the centre is to select (purchase) a feasible set.",
                "Each element e in the selected set incurs a cost of ce.",
                "The elements that are not selected incur no costs.",
                "The auction proceeds as follows: all elements of the ground set make their bids, the centre selects a feasible set based on the bids and makes payments to the agents.",
                "Formally, an auction is defined by an allocation rule A : Rn → F and a payment rule P : Rn → Rn .",
                "The allocation rule takes as input a vector of bids and decides which of the sets in F should be selected.",
                "The payment rule also takes as input a vector of bids and decides how much to pay to each agent.",
                "The standard requirements are individual rationality, i.e., the payment to each agent should be at least as high as his incurred cost (0 for agents not in the selected set and ce for agents in the 337 selected set) and incentive compatibility, or truthfulness, i.e., each agents dominant strategy is to bid his true cost.",
                "An allocation rule is monotone if an agent cannot increase his chance of getting selected by raising his bid.",
                "Formally, for any bid vector b and any e ∈ E, if e ∈ A(b) then e ∈ A(b1, . . . , be, . . . , bn) for any be > be.",
                "Given a monotone allocation rule A and a bid vector b, the threshold bid te of an agent e ∈ A(b) is the highest bid of this agent that still wins the auction, given that the bids of other participants remain the same.",
                "Formally, te = sup{be ∈ R | e ∈ A(b1, . . . , be, . . . , bn)}.",
                "It is well known (see, e.g. [19, 13]) that any auction that has a monotone allocation rule and pays each agent his threshold bid is truthful; conversely, any truthful auction has a monotone allocation rule.",
                "The VCG mechanism is a truthful mechanism that maximises the social welfare and pays 0 to the losing agents.",
                "For set system auctions, this simply means picking a cheapest feasible set, paying each agent in the selected set his threshold bid, and paying 0 to all other agents.",
                "Note, however, that the VCG mechanism may be difficult to implement, since finding a cheapest feasible set may be intractable.",
                "If U is a set of agents, c(U) denotes P w∈U cw.",
                "Similarly, b(U) denotes P w∈U bw. 3.",
                "FRUGALITY RATIOS We start by reproducing the definition of the quantity ν from [16, Definition 4].",
                "Let (E, F) be a set system and let S be a cheapest feasible set with respect to the true costs ce.",
                "Then ν(c, S) is the solution to the following optimisation problem.",
                "Minimise B = P e∈S be subject to (1) be ≥ ce for all e ∈ E (2) P e∈S\\T be ≤ P e∈T \\S ce for all T ∈ F (3) for every e ∈ S, there is a Te ∈ F such that e ∈ Te andP e ∈S\\Te be = P e ∈Te\\S ce The bound ν(c, S) can be seen as an outcome of a two-stage process, where first each agent e ∈ S makes a bid be stating how much it wants to be paid, and then the centre decides whether to accept these bids.",
                "The behaviour of both parties is affected by the following considerations.",
                "From the centres point of view, the set S must remain the most attractive choice, i.e., it must be among the cheapest feasible sets under the new costs ce = ce for e ∈ S, ce = be for e ∈ S (condition (2)).",
                "The reason for that is that if (2) is violated for some set T, the centre would prefer T to S. On the other hand, no agent would agree to a payment that does not cover his costs (condition (1)), and moreover, each agent tries to maximise his profit by bidding as high as possible, i.e., none of the agents can increase his bid without violating condition (2) (condition (3)).",
                "The centre wants to minimise the total payout, so ν(c, S) corresponds to the best possible outcome from the centres point of view.",
                "This definition captures many important aspects of our intuition about fair payments.",
                "However, it can be modified in two ways, both of which are still quite natural, but result in different payment bounds.",
                "First, we can consider the worst rather than the best possible outcome for the centre.",
                "That is, we can consider the maximum total payment that the agents can extract by jointly selecting their bids subject to (1), (2), and (3).",
                "Such a bound corresponds to maximising B subject to (1), (2), and (3) rather than minimising it.",
                "If it is the agents who make the original bids (rather than the centre), this kind of bidding behaviour is plausible.",
                "On the other hand, in a game in which the centre proposes payments to the agents in S and the agents accept them as long as (1), (2) and (3) are satisfied, we would be likely to observe a total payment of ν(c, S).",
                "Hence, the difference between these two definitions can be seen as the price of initiative.",
                "Second, the agents may be able to make payments to each other.",
                "In this case, if they can extract more money from the centre by agreeing on a vector of bids that violates individual rationality (i.e., condition (1)) for some bidders, they might be willing to do so, as the agents who are paid below their costs will be compensated by other members of the group.",
                "The bids must still be realistic, i.e., they have to satisfy be ≥ 0.",
                "The resulting change in payments can be seen as the price of co-operation and corresponds to replacing condition (1) with the following weaker condition (1∗ ): be ≥ 0 for all e ∈ E. (1∗ ) By considering all possible combinations of these modifications, we obtain four different payment bounds, namely • TUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1∗ ), (2), and (3). • TUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1∗ ), (2), and (3). • NTUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1), (2), and (3). • NTUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1), (2), (3).",
                "The abbreviations TU and NTU correspond, respectively, to transferable utility and non-transferable utility, i.e., the agents ability/inability to make payments to each other.",
                "For concreteness, we will take TUmin(c) to be TUmin(c, S) where S is the lexicographically least amongst the cheapest feasible sets.",
                "We define TUmax(c), NTUmin(c), NTUmax(c) and ν(c) similarly, though we will see in Section 6.3 that, in fact, NTUmin(c, S) and NTUmax(c, S) are independent of the choice of S. Note that the quantity ν(c) from [16] is NTUmin(c).",
                "The second modification (transferable utility) is more intuitively appealing in the context of the maximisation problem, as both assume some degree of co-operation between the agents.",
                "While the second modification can be made without the first, the resulting payment bound TUmin(c, S) is too strong to be a realistic benchmark, at least for general set systems.",
                "In particular, it can be smaller than the total cost of the cheapest feasible set S (see Section 6).",
                "Nevertheless, we provide the definition as well as some results about TUmin(c, S) in the paper, both for completeness and because we believe that it may help to understand which properties of the payment bounds are important for our proofs.",
                "Another possibility would be to introduce an additional constraint P e∈S be ≥P e∈S ce in the definition of TUmin(c, S) (note that this condition holds automatically for TUmax(c, S), as TUmax(c, S) ≥ NTUmax(c, S)); however, such a definition would have no direct game-theoretic interpretation, and some of our results (in particular, the ones in Section 4) would no longer be true.",
                "REMARK 1.",
                "For the payment bounds that are derived from maximisation problems, (i.e., TUmax(c, S) and NTUmax(c, S)), constraints of type (3) are redundant and can be dropped.",
                "Hence, TUmax(c, S) and NTUmax(c, S) are solutions to linear programs, and therefore can be computed in polynomial time as long as we have a separation oracle for constraints in (2).",
                "In contrast, 338 NTUmin(c, S) can be NP-hard to compute even if the size of F is polynomial (see Section 6).",
                "The first and third inequalities in the following observation follow from the fact that condition (1∗ ) is strictly weaker than condition (1).",
                "PROPOSITION 1.",
                "TUmin(c, S) ≤ NTUmin(c, S) ≤ NTUmax(c, S) ≤ TUmax(c, S).",
                "Let M be a truthful mechanism for (E, F).",
                "Let pM(c) denote the total payments of M when the actual costs are c. A frugality ratio of M with respect to a payment bound is the ratio between the payment of M and this payment bound.",
                "In particular, φTUmin(M) = sup c pM(c)/TUmin(c), φTUmax(M) = sup c pM(c)/TUmax(c), φNTUmin(M) = sup c pM(c)/NTUmin(c), φNTUmax(M) = sup c pM(c)/NTUmax(c).",
                "We conclude this section by showing that there exist set systems and respective cost vectors for which all four payment bounds are different.",
                "In the next section, we quantify this difference, both for general set systems, and for specific types of set systems, such as path auctions or vertex cover auctions.",
                "EXAMPLE 1.",
                "Consider the shortest-path auction on the graph of Figure 1.",
                "The cheapest feasible sets are all paths from A to D. It can be verified, using the reasoning of Propositions 2 and 3 below, that for the cost vector cAB = cCD = 2, cBC = 1, cAC = cBD = 5, we have • TUmax(c) = 10 (with bAB = bCD = 5, bBC = 0), • NTUmax(c) = 9 (with bAB = bCD = 4, bBC = 1), • NTUmin(c) = 7 (with bAB = bCD = 2, bBC = 3), • TUmin(c) = 5 (with bAB = bCD = 0, bBC = 5). 4.",
                "COMPARING PAYMENT BOUNDS 4.1 Path auctions We start by showing that for path auctions any two consecutive payment bounds can differ by at least a factor of 2.",
                "PROPOSITION 2.",
                "There is an instance of the shortest-path problem for which we have NTUmax(c)/NTUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is due to David Kempe [17].",
                "Consider the graph of Figure 1 with the edge costs cAB = cBC = cCD = 0, cAC = cBD = 1.",
                "Under these costs, ABCD is the cheapest path.",
                "The inequalities in (2) are bAB + bBC ≤ cAC = 1, bBC + bCD ≤ cBD = 1.",
                "By condition (3), both of these inequalities must be tight (the former one is the only inequality involving bAB, and the latter one is the only inequality involving bCD).",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 0, bCD ≥ 0.",
                "Now, if the goal is to maximise bAB + bBC + bCD, the best choice is bAB = bCD = 1, bBC = 0, so NTUmax(c) = 2.",
                "On the other hand, if the goal is to minimise bAB + bBC + bCD, one should set bAB = bCD = 0, bBC = 1, so NTUmin(c) = 1.",
                "PROPOSITION 3.",
                "There is an instance of the shortest-path problem for which we have TUmax(c)/NTUmax(c) ≥ 2.",
                "PROOF.",
                "Again, consider the graph of Figure 1.",
                "Let the edge costs be cAB = cCD = 0, cBC = 1, cAC = cBD = 1.",
                "ABCD is the lexicographically-least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "The inequalities in (2) are the same as in the previous example, and by the same argument both of them are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 1, bCD ≥ 0.",
                "Our goal is to maximise bAB + bBC + bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 0, bBC = 1, so NTUmax(c) = 1.",
                "Otherwise, we can set bAB = bCD = 1, bBC = 0, so TUmax(c) ≥ 2.",
                "PROPOSITION 4.",
                "There is an instance of the shortest-path problem for which we have NTUmin(c)/TUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is also based on the graph of Figure 1.",
                "The edge costs are cAB = cCD = 1, cBC = 0, cAC = cBD = 1.",
                "ABCD is the lexicographically least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "Again, the inequalities in (2) are the same, and both are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 1, bBC ≥ 0, bCD ≥ 1.",
                "Our goal is to minimise bAB + bBC +bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 1, bBC = 0, so NTUmin(c) = 2.",
                "Otherwise, we can set bAB = bCD = 0, bBC = 1, so TUmin(c) ≤ 1.",
                "In Section 4.4 (Theorem 3), we show that the separation results in Propositions 2, 3, and 4 are optimal. 4.2 Connections between separation results The separation results for path auctions are obtained on the same graph using very similar cost vectors.",
                "It turns out that this is not coincidental.",
                "Namely, we can prove the following theorem.",
                "THEOREM 1.",
                "For any set system (E, F), and any feasible set S, max c TUmax(c, S) NTUmax(c, S) = max c NTUmax(c, S) NTUmin(c, S) , max c NTUmax(c, S) NTUmin(c, S) = max c NTUmin(c, S) TUmin(c, S) , where the maximum is over all cost vectors c for which S is a cheapest feasible set.",
                "The proof of the theorem follows directly from the four lemmas proved below; more precisely, the first equality in Theorem 1 is obtained by combining Lemmas 1 and 2, and the second equality is obtained by combining Lemmas 3 and 4.",
                "We prove Lemma 1 here; the proofs of Lemmas 2- 4 are similar and can be found in the full version of this paper [8].",
                "LEMMA 1.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and TUmax(c, S)/NTUmax(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α.",
                "PROOF.",
                "Suppose that TUmax(c, S) = X and NTUmax(c, S) = Y where X/Y = α.",
                "Assume without loss of generality that S consists of elements 1, . . . , k, and let b1 = (b1 1, . . . , b1 k) and b2 = (b2 1, . . . , b2 k) be the bid vectors that correspond to TUmax(c, S) and NTUmax(c, S), respectively.",
                "Construct the cost vector c by setting ci = ci for i ∈ S, ci = min{ci, b1 i } for i ∈ S. Clearly, S is a cheapest set under c .",
                "Moreover, as the costs of elements outside of S remained the same, the right-hand sides of all constraints in (2) did not change, so any bid vector that satisfies (2) and (3) with respect to c, also satisfies them with respect to c .",
                "We will construct two bid vectors b3 and b4 that satisfy conditions (1), (2), and (3) for the cost vector c , and 339 X X X X X 0 X 12 3 X 4 5 6 Figure 2: Graph that separates payment bounds for vertex cover, n = 7 have P i∈S b3 i = X, P i∈S b4 i = Y .",
                "As NTUmax(c , S) ≥ X and NTUmin(c , S) ≤ Y , this implies the lemma.",
                "We can set b3 i = b1 i : this bid vector satisfies conditions (2) and (3) since b1 does, and we have b1 i ≥ min{ci, b1 i } = ci, which means that b3 satisfies condition (1).",
                "Furthermore, we can set b4 i = b2 i .",
                "Again, b4 satisfies conditions (2) and (3) since b2 does, and since b2 satisfies condition (1), we have b2 i ≥ ci ≥ ci, which means that b4 satisfies condition (1).",
                "LEMMA 2.",
                "Suppose c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and TUmax(c , S)/NTUmax(c , S) ≥ α. LEMMA 3.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmin(c , S)/TUmin(c , S) ≥ α. LEMMA 4.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmin(c, S)/TUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α. 4.3 Vertex-cover auctions In contrast to the case of path auctions, for vertex-cover auctions the gap between NTUmin(c) and NTUmax(c) (and hence between NTUmax(c) and TUmax(c), and between TUmin(c) and NTUmin(c)) can be proportional to the size of the graph.",
                "PROPOSITION 5.",
                "For any n ≥ 3, there is a an n-vertex graph and a cost vector c for which TUmax(c)/NTUmax(c) ≥ n − 2.",
                "PROOF.",
                "The underlying graph consists of an (n − 1)-clique on the vertices X1, . . . , Xn−1, and an extra vertex X0 adjacent to Xn−1.",
                "The costs are cX1 = cX2 = · · · = cXn−2 = 0, cX0 = cXn−1 = 1.",
                "We can assume that S = {X0, X1, . . . , Xn−2} (this is the lexicographically first vertex cover of cost 1).",
                "For this set system, the constraints in (2) are bXi + bX0 ≤ cXn−1 = 1 for i = 1, . . . , n − 2.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bXi = 1 for i = 1, . . . , n − 2, bX0 = 0.",
                "Hence, TUmax(c) ≥ n − 2.",
                "For NTUmax(c), there is an additional constraint bX0 ≥ 1, so the best we can do is to set bXi = 0 for i = 1, . . . , n − 2, bX0 = 1, which implies NTUmax(c) = 1.",
                "Combining Proposition 5 with Lemmas 1 and 3, we derive the following corollaries.",
                "COROLLARY 1.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmax(c)/NTUmin(c) ≥ n − 2.",
                "COROLLARY 2.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmin(c)/TUmin(c) ≥ n − 2. j+2ix ij P \\ P ij+2P \\ P yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 P \\ P Figure 3: Proof of Theorem 3: constraints for ˆPij and ˆPij+2 do not overlap 4.4 Upper bounds It turns out that the lower bound proved in the previous subsection is almost tight.",
                "More precisely, the following theorem shows that no two payment bounds can differ by more than a factor of n; moreover, this is the case not just for the vertex cover problem, but for general set systems.",
                "We bound the gap between TUmax(c) and TUmin(c).",
                "Since TUmin(c) ≤ NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), this bound applies to any pair of payment bounds.",
                "THEOREM 2.",
                "For any set system (E, F) and any cost vector c, we have TUmax(c)/TUmin(c) ≤ n. PROOF.",
                "Assume wlog that the winning set S consists of elements 1, . . . , k. Let c1, . . . , ck be the true costs of elements in S, let b1, . . . , bk be their bids that correspond to TUmin(c), and let b1 , . . . , bk be their bids that correspond to TUmax(c).",
                "Consider the conditions (2) and (3) for S. One can pick a subset L of at most k inequalities in (2) so that for each i = 1, . . . , k there is at least one inequality in L that is tight for bi.",
                "Suppose that the jth inequality in L is of the form bi1 + · · · + bit ≤ c(Tj \\ S).",
                "For bi, all inequalities in L are, in fact, equalities.",
                "Hence, by adding up all of them we obtain k P i=1,...,k bi ≥ P j=1,...,k c(Tj \\ S).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c(Tj \\ S).",
                "Combining these two inequalities, we obtain nTUmin(c) ≥ kTUmin(c) ≥ TUmax(c).",
                "REMARK 2.",
                "The final line of the proof of Theorem 2 shows that, in fact, the upper bound on TUmax(c)/TUmin(c) can be strengthened to the size of the winning set, k. Note that in Proposition 5, as well as in Corollaries 1 and 2, k = n−1, so these results do not contradict each other.",
                "For path auctions, this upper bound can be improved to 2, matching the lower bounds of Section 4.1.",
                "THEOREM 3.",
                "For any instance of the shortest path problem, TUmax(c) ≤ 2 TUmin(c).",
                "PROOF.",
                "Given a network (G, s, t), assume without loss of generality that the lexicographically-least cheapest s-t path, P, in G is {e1, . . . , ek}, where e1 = (s, v1), e2 = (v1, v2), . . . , ek = (vk−1, t).",
                "Let c1, . . . , ck be the true costs of e1, . . . , ek, and let b = (b1, . . . , bk) and b = (b1 , . . . , bk ) be bid vectors that correspond to TUmin(c) and TUmax(c), respectively.",
                "For any i = 1, . . . , k, there is a constraint in (2) that is tight for bi with respect to the bid vector b , i.e., an s-t path Pi that avoids ei and satisfies b (P \\Pi) = c(Pi \\P).",
                "We can assume without loss of generality that Pi coincides with P up to some vertex xi, then deviates from P to avoid ei, and finally returns to P at a vertex 340 yi and coincides with P from then on (clearly, it might happen that s = xi or t = yi).",
                "Indeed, if Pi deviates from P more than once, one of these deviations is not necessary to avoid ei and can be replaced with the respective segment of P without increasing the cost of Pi.",
                "Among all paths of this form, let ˆPi be the one with the largest value of yi, i.e., the rightmost one.",
                "This path corresponds to an inequality Ii of the form bxi+1 + · · · + byi ≤ c( ˆPi \\ P).",
                "As in the proof of Theorem 2, we construct a set of tight constraints L such that every variable bi appears in at least one of these constraints; however, now we have to be more careful about the choice of constraints in L. We construct L inductively as follows.",
                "Start by setting L = {I1}.",
                "At the jth step, suppose that all variables up to (but not including) bij appear in at least one inequality in L. Add Iij to L. Note that for any j we have yij+1 > yij .",
                "This is because the inequalities added to L during the first j steps did not cover bij+1 .",
                "See Figure 3.",
                "Since yij+2 > yij+1 , we must also have xij+2 > yij : otherwise, ˆPij+1 would not be the rightmost constraint for bij+1 .",
                "Therefore, the variables in Iij+2 and Iij do not overlap, and hence no bi can appear in more than two inequalities in L. Now we follow the argument of the proof of Theorem 2 to finish.",
                "By adding up all of the (tight) inequalities in L for bi we obtain 2 P i=1,...,k bi ≥ P j=1,...,k c( ˆPj \\ P).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c( ˆPj \\ P), so TUmax(c) ≤ 2TUmin(c). 5.",
                "TRUTHFUL MECHANISMS FOR VERTEX COVER Recall that for a <br>vertex-cover auction</br> on a graph G = (V, E), an allocation rule is an algorithm that takes as input a bid bv for each vertex and returns a vertex cover ˆS of G. As explained in Section 2, we can combine a monotone allocation rule with threshold payments to obtain a truthful auction.",
                "Two natural examples of monotone allocation rules are Aopt, i.e., the algorithm that finds an optimal vertex cover, and the greedy algorithm AGR.",
                "However, Aopt cannot be guaranteed to run in polynomial time unless P = NP and AGR has approximation ratio of log n. Another approximation algorithm for vertex cover, which has approximation ratio 2, is the local ratio algorithm ALR [2, 3].",
                "This algorithm considers the edges of G one by one.",
                "Given an edge e = (u, v), it computes = min{bu, bv} and sets bu = bu − , bv = bv − .",
                "After all edges have been processed, ALR returns the set of vertices {v | bv = 0}.",
                "It is not hard to check that if the order in which the edges are considered is independent of the bids, then this algorithm is monotone as well.",
                "Hence, we can use it to construct a truthful auction that is guaranteed to select a vertex cover whose cost is within a factor of 2 from the optimal.",
                "However, while the quality of the solution produced by ALR is much better than that of AGR, we still need to show that its total payment is not too high.",
                "In the next subsection, we bound the frugality ratio of ALR (and, more generally, all algorithms that satisfy the condition of local optimality, defined later) by 2Δ, where Δ is the maximum degree of G. We then prove a matching lower bound showing that for some graphs the frugality ratio of any truthful auction is at least Δ/2. 5.1 Upper bound We say that an allocation rule is locally optimal if whenever bv >P w∼v bw, the vertex v is not chosen.",
                "Note that for any such rule the threshold bid of v satisfies tv ≤ P w∼v bw.",
                "CLAIM 1.",
                "The algorithms Aopt, AGR, and ALR are locally optimal.",
                "THEOREM 4.",
                "Any vertex cover auction M that has a locally optimal and monotone allocation rule and pays each agent his threshold bid has frugality ratio φNTUmin(M) ≤ 2Δ.",
                "To prove Theorem 4, we first show that the total payment of any locally optimal mechanism does not exceed Δc(V ).",
                "We then demonstrate that NTUmin(c) ≥ c(V )/2.",
                "By combining these two results, the theorem follows.",
                "LEMMA 5.",
                "Consider a graph G = (V, E) with maximum degree Δ.",
                "Let M be a <br>vertex-cover auction</br> on G that satisfies the conditions of Theorem 4.",
                "Then for any cost vector c, the total payment of M satisfies pM(c) ≤ Δc(V ).",
                "PROOF.",
                "First note that any such auction is truthful, so we can assume that each agents bid is equal to his cost.",
                "Let ˆS be the vertex cover selected by M. Then by local optimality pM(c) = X v∈ ˆS tv ≤ X v∈ ˆS X w∼v cw ≤ X w∈V Δcw = Δc(V ).",
                "We now derive a lower bound on TUmax(c); while not essential for the proof of Theorem 4, it helps us build the intuition necessary for that proof.",
                "LEMMA 6.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, TUmax(c, S) ≥ c(V \\ S) PROOF.",
                "For a vertex w with at least one neighbour in S, let d(w) denote the number of neighbours that w has in S. Consider the bid vector b in which, for each v ∈ S, bv = P w∼v,w∈S cw d(w) .",
                "Then P v∈S bv = P v∈S P w∼v,w∈S cw/d(w) = P w /∈S cw = c(V \\ S).",
                "To finish we want to show that b is feasible in the sense that it satisfies (2).",
                "Consider a vertex cover T, and extend the bid vector b by assigning bv = cv for v /∈ S. Then b(T) = c(T \\S)+b(S∩T) ≥ c(T \\S)+ X v∈S∩T X w∈S∩T :w∼v cw d(w) , and since all edges between S ∩ T and S go to S ∩ T, the righthand-side is equal to c(T \\S)+ X w∈S∩T cw = c(T \\S)+c(S ∩T) = c(V \\S) = b(S).",
                "Next, we prove a lower bound on NTUmax(c, S); we will then use it to obtain a lower bound on NTUmin(c).",
                "LEMMA 7.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmax(c, S) ≥ c(V \\ S) PROOF.",
                "If c(S) ≥ c(V \\ S), by condition (1) we are done.",
                "Therefore, for the rest of the proof we assume that c(S) < c(V \\ S).",
                "We show how to construct a bid vector (be)e∈S that satisfies conditions (1) and (2) such that b(S) ≥ c(V \\ S); clearly, this implies NTUmax(c, S) ≥ c(V \\ S).",
                "Recall that a network flow problem is described by a directed graph Γ = (VΓ, EΓ), a source node s ∈ VΓ, a sink node t ∈ VΓ, and a vector of capacity constraints ae, e ∈ EΓ.",
                "Consider a network (VΓ, EΓ) such that VΓ = V ∪{s, t}, EΓ = E1 ∪E2 ∪E3, where E1 = {(s, v) | v ∈ S}, E2 = {(v, w) | v ∈ S, w ∈ 341 V \\ S, (v, w) ∈ E}, E3 = {(w, t) | w ∈ V \\ S}.",
                "Since S is a vertex cover for G, no edge of E can have both of its endpoints in V \\ S, and by construction, E2 contains no edges with both endpoints in S. Therefore, the graph (V, E2) is bipartite with parts (S, V \\ S).",
                "Set the capacity constraints for e ∈ EΓ as follows: a(s,v) = cv, a(w,t) = cw, a(v,w) = +∞ for all v ∈ S, w ∈ V \\ S. Recall that a cut is a partition of the vertices in VΓ into two sets C1 and C2 so that s ∈ C1, t ∈ C2; we denote such a cut by C = (C1, C2).",
                "Abusing notation, we write e = (u, v) ∈ C if u ∈ C1, v ∈ C2 or u ∈ C2, v ∈ C1, and say that such an edge e = (u, v) crosses the cut C. The capacity of a cut C is computed as cap(C) = P (v,w)∈C a(v,w).",
                "We have cap(s, V ∪{t}) = c(S), cap({s} ∪ V, t) = c(V \\ S).",
                "Let Cmin = ({s} ∪ S ∪ W , {t} ∪ S ∪ W ) be a minimum cut in Γ, where S , S ⊆ S, W , W ⊆ V \\ S. See Figure 4.",
                "As cap(Cmin) ≤ cap(s, V ∪ {t}) = c(S) < +∞, and any edge in E2 has infinite capacity, no edge (u, v) ∈ E2 crosses Cmin.",
                "Consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Clearly, C = ({s} ∪ S ∪ W , {t}) is a minimum cut in Γ (otherwise, there would exist a smaller cut for Γ).",
                "As cap(C ) = c(W ), we have c(S ) ≥ c(W ).",
                "Now, consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Similarly, C = ({s}, S ∪ W ∪ {t}) is a minimum cut in Γ , cap(C ) = c(S ).",
                "As the size of a maximum flow from s to t is equal to the capacity of a minimum cut separating s and t, there exists a flow F = (fe)e∈EΓ of size c(S ).",
                "This flow has to saturate all edges between s and S , i.e., f(s,v) = cv for all v ∈ S .",
                "Now, increase the capacities of all edges between s and S to +∞.",
                "In the modified network, the capacity of a minimum cut (and hence the size of a maximum flow) is c(W ), and a maximum flow F = (fe)e∈EΓ can be constructed by greedily augmenting F. Set bv = cv for all v ∈ S , bv = f(s,v) for all v ∈ S .",
                "As F is constructed by augmenting F, we have bv ≥ cv for all v ∈ S, i.e., condition (1) is satisfied.",
                "Now, let us check that no vertex cover T ⊆ V can violate condition (2).",
                "Set T1 = T ∩ S , T2 = T ∩ S , T3 = T ∩ W , T4 = T ∩ W ; our goal is to show that b(S \\ T1) + b(S \\ T2) ≤ c(T3)+c(T4).",
                "Consider all edges (u, v) ∈ E such that u ∈ S \\T1.",
                "If (u, v) ∈ E2 then v ∈ T3 (no edge in E2 can cross the cut), and if u, v ∈ S then v ∈ T1∪T2.",
                "Hence, T1∪T3∪S is a vertex cover for G, and therefore c(T1)+ c(T3)+ c(S ) ≥ c(S) = c(T1)+ c(S \\ T1) + c(S ).",
                "Consequently, c(T3) ≥ c(S \\ T1) = b(S \\ T1).",
                "Now, consider the vertices in S \\T2.",
                "Any edge in E2 that starts in one of these vertices has to end in T4 (this edge has to be covered by T, and it cannot go across the cut).",
                "Therefore, the total flow out of S \\T2 is at most the total flow out of T4, i.e., b(S \\T2) ≤ c(T4).",
                "Hence, b(S \\ T1) + b(S \\ T2) ≤ c(T3) + c(T4).",
                "Finally, we derive a lower bound on the payment bound that is of interest to us, namely, NTUmin(c).",
                "LEMMA 8.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmin(c, S) ≥ c(V \\ S) PROOF.",
                "Suppose for contradiction that c is a cost vector with minimum-cost vertex cover S and NTUmin(c, S) < c(V \\S).",
                "Let b be the corresponding bid vector and let c be a new cost vector with cv = bv for v ∈ S and cv = cv for v ∈ S. Condition (2) guarantees that S is an optimal solution to the cost vector c .",
                "Now compute a bid vector b corresponding to NTUmax(c , S).",
                "We S W S W s t T1 T3 T2 T4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 00 11 11 0 00 1 11 0 00 1 11 0 00 1 11 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00000 0000000000 0000000000 00000 0000000000 0000000000 00000 0000000000 11111 1111111111 1111111111 11111 1111111111 1111111111 11111 1111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 Figure 4: Proof of Lemma 7.",
                "Dashed lines correspond to edges in E \\ E2 claim that bv = cv for any v ∈ S. Indeed, suppose that bv > cv for some v ∈ S (bv = cv for v ∈ S by construction).",
                "As b satisfies conditions (1)-(3), among the inequalities in (2) there is one that is tight for v and the bid vector b.",
                "That is, b(S \\ T) = c(T \\ S).",
                "By the construction of c , c (S \\ T) = c (T \\ S).",
                "Now since bw ≥ cw for all w ∈ S, bv > cv implies b (S \\T) > c (S \\T) = c (T \\S).",
                "But this violates (2).",
                "So we now know b = c .",
                "Hence, we have NTUmax(c , S) = P v∈S bv = NTUmin(c, S) < c(V \\ S), giving a contradiction to the fact that NTUmax(c , S) ≥ c (V \\S) which we proved in Lemma 7.",
                "As NTUmin(c, S) satisfies condition (1), it follows that we have NTUmin(c, S) ≥ c(S).",
                "Together will Lemma 8, this implies NTUmin(c, S) ≥ max{c(V \\ S), c(S)} ≥ c(V )/2.",
                "Combined with Lemma 5, this completes the proof of Theorem 4.",
                "REMARK 3.",
                "As NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), our bound of 2Δ extends to the smaller frugality ratios that we consider, i.e., φNTUmax(M) and φTUmax(M).",
                "It is not clear whether it extends to the larger frugality ratio φTUmin(M).",
                "However, the frugality ratio φTUmin(M) is not realistic because the payment bound TUmin(c) is inappropriately low - we show in Section 6 that TUmin(c) can be significantly smaller than the total cost of a cheapest vertex cover.",
                "Extensions We can also apply our results to monotone vertex-cover algorithms that do not necessarily output locally-optimal solutions.",
                "To do so, we simply take the vertex cover produced by any such algorithm and transform it into a locally-optimal one, considering the vertices in lexicographic order and replacing a vertex v with its neighbours whenever bv > P u∼v bu.",
                "Note that if a vertex u has been added to the vertex cover during this process, it means that it has a neighbour whose bid is higher than bu, so after one pass all vertices in the vertex cover satisfy bv ≤ P u∼v bu.",
                "This procedure is monotone in bids, and it can only decrease the cost of the vertex cover.",
                "Therefore, using it on top of a monotone allocation rule with approx342 imation ratio α, we obtain a monotone locally-optimal allocation rule with approximation ratio α.",
                "Combining it with threshold payments, we get an auction with φNTUmin ≤ 2Δ.",
                "Since any truthful auction has a monotone allocation rule, this procedure transforms any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio. 5.2 Lower bound In this subsection, we prove that the upper bound of Theorem 4 is essentially optimal.",
                "Our proof uses the techniques of [9], where the authors prove a similar result for shortest-path auctions.",
                "THEOREM 5.",
                "For any Δ > 0 and any n, there exist a graph G of maximum degree Δ and size N > n such that for any truthful mechanism M on G we have φNTUmin(M) ≥ Δ/2.",
                "PROOF.",
                "Given n and Δ, set k = n/2Δ .",
                "Let G be the graph that consists of k blocks B1, . . . , Bk of size 2Δ each, where each Bi is a complete bipartite graph with parts Li and Ri, |Li| = |Ri| = Δ.",
                "We will consider two families of cost vectors for G. Under a cost vector x ∈ X, each block Bi has one vertex of cost 1; all other vertices cost 0.",
                "Under a cost vector y ∈ Y , there is one block that has two vertices of cost 1, one in each part, all other blocks have one vertex of cost 1, and all other vertices cost 0.",
                "Clearly, |X| = (2Δ)k , |Y | = k(2Δ)k−1 Δ2 .",
                "We will now construct a bipartite graph W with the vertex set X ∪ Y as follows.",
                "Consider a cost vector y ∈ Y that has two vertices of cost 1 in Bi; let these vertices be vl ∈ Li and vr ∈ Ri.",
                "By changing the cost of either of these vertices to 0, we obtain a cost vector in X.",
                "Let xl and xr be the cost vectors obtained by changing the cost of vl and vr, respectively.",
                "The vertex cover chosen by M(y) must either contain all vertices in Li or it must contain all vertices in Ri.",
                "In the former case, we put in W an edge from y to xl and in the latter case we put in W an edge from y to xr (if the vertex cover includes all of Bi, W contains both of these edges).",
                "The graph W has at least k(2Δ)k−1 Δ2 edges, so there must exist an x ∈ X of degree at least kΔ/2.",
                "Let y1, . . . , ykΔ/2 be the other endpoints of the edges incident to x, and for each i = 1, . . . , kΔ/2, let vi be the vertex whose cost is different under x and yi; note that all vi are distinct.",
                "It is not hard to see that NTUmin(x) ≤ k: the cheapest vertex cover contains the all-0 part of each block, and we can satisfy conditions (1)-(3) by letting one of the vertices in the all-0 part of each block to bid 1, while all other the vertices in the cheapest set bid 0.",
                "On the other hand, by monotonicity of M we have vi ∈ M(x) for i = 1, . . . , kΔ/2 (vi is in the winning set under yi, and x is obtained from yi by decreasing the cost of vi), and moreover, the threshold bid of each vi is at least 1, so the total payment of M on x is at least kΔ/2.",
                "Hence, φNTUmin(M) ≥ M(x)/NTUmin(x) ≥ Δ/2.",
                "REMARK 4.",
                "The lower bound of Theorem 5 can be generalised to randomised mechanisms, where a randomised mechanism is considered to be truthful if it can be represented as a probability distribution over truthful mechanisms.",
                "In this case, instead of choosing the vertex x ∈ X with the highest degree, we put both (y, xl) and (y, xr) into W , label each edge with the probability that the respective part of the block is chosen, and pick x ∈ X with the highest weighted degree.",
                "The argument can be further extended to a more permissive definition of truthfulness for randomised mechanisms, but this discussion is beyond the scope of this paper. 6.",
                "PROPERTIES OF PAYMENT BOUNDS In this section we consider several desirable properties of payment bounds and evaluate the four payment bounds proposed in this paper with respect to them.",
                "The particular properties that we are interested in are independence of the choice of S (Section 6.3), monotonicity (Section 6.4.1), computational hardness (Section 6.4.2), and the relationship with other reasonable bounds, such as the total cost of the cheapest set (Section 6.1), or the total VCG payment (Section 6.2). 6.1 Comparison with total cost Our first requirement is that a payment bound should not be less than the total cost of the selected set.",
                "Payment bounds are used to evaluate the performance of set-system auctions.",
                "The latter have to satisfy individual rationality, i.e., the payment to each agent must be at least as large as his incurred costs; it is only reasonable to require the payment bound to satisfy the same requirement.",
                "Clearly, NTUmax(c) and NTUmin(c) satisfy this requirement due to condition (1), and so does TUmax(c), since TUmax(c) ≥ NTUmax(c).",
                "However, TUmin(c) fails this test.",
                "The example of Proposition 4 shows that for path auctions, TUmin(c) can be smaller than the total cost by a factor of 2.",
                "Moreover, there are set systems and cost vectors for which TUmin(c) is smaller than the cost of the cheapest set S by a factor of Ω(n).",
                "Consider, for example, the <br>vertex-cover auction</br> for the graph of Proposition 5 with the costs cX1 = · · · = cXn−2 = cXn−1 = 1, cX0 = 0.",
                "The cost of a cheapest vertex cover is n − 2, and the lexicographically first vertex cover of cost n−2 is {X0, X1, . . . , Xn−2}.",
                "The constraints in (2) are bXi + bX0 ≤ cXn−1 = 1.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bX1 = · · · = bXn−2 = 0, bX0 = 1, which means that TUmin(c) ≤ 1.",
                "This observation suggests that the payment bound TUmin(c) is too strong to be realistic, since it can be substantially lower than the cost of the cheapest feasible set.",
                "Nevertheless, some of the positive results that were proved in [16] for NTUmin(c) go through for TUmin(c) as well.",
                "In particular, one can show that if the feasible sets are the bases of a monopolyfree matroid, then φTUmin(VCG) = 1.",
                "To show that φTUmin(VCG) is at most 1, one must prove that the VCG payment is at most TUmin(c).",
                "This is shown for NTUmin(c) in the first paragraph of the proof of Theorem 5 in [16].",
                "Their argument does not use condition (1) at all, so it also applies to TUmin(c).",
                "On the other hand, φTUmin(VCG) ≥ 1 since φTUmin(VCG) ≥ φNTUmin(VCG) and φNTUmin(VCG) ≥ 1 by Proposition 7 of [16] (and also by Proposition 6 below). 6.2 Comparison with VCG payments Another measure of suitability for payment bounds is that they should not result in frugality ratios that are less then 1 for wellknown truthful mechanisms.",
                "If this is indeed the case, the payment bound may be too weak, as it becomes too easy to design mechanisms that perform well with respect to it.",
                "It particular, a reasonable requirement is that a payment bound should not exceed the total payment of the classical VCG mechanism.",
                "The following proposition shows that NTUmax(c), and therefore also NTUmin(c) and TUmin(c), do not exceed the VCG payment pVCG(c).",
                "The proof essentially follows the argument of Proposition 7 of [16] and can be found in the full version of this paper [8].",
                "PROPOSITION 6. φNTUmax(VCG) ≥ 1.",
                "Proposition 6 shows that none of the payment bounds TUmin(c), NTUmin(c) and NTUmax(c) exceeds the payment of VCG.",
                "However, the payment bound TUmax(c) can be larger that the total 343 VCG payment.",
                "In particular, for the instance in Proposition 5, the VCG payment is smaller than TUmax(c) by a factor of n − 2.",
                "We have already seen that TUmax(c) ≥ n − 2.",
                "On the other hand, under VCG, the threshold bid of any Xi, i = 1, . . . , n − 2, is 0: if any such vertex bids above 0, it is deleted from the winning set together with X0 and replaced with Xn−1.",
                "Similarly, the threshold bid of X0 is 1, because if X0 bids above 1, it can be replaced with Xn−1.",
                "So the VCG payment is 1.",
                "This result is not surprising: the definition of TUmax(c) implicitly assumes there is co-operation between the agents, while the computation of VCG payments does not take into account any interaction between them.",
                "Indeed, co-operation enables the agents to extract higher payments under VCG.",
                "That is, VCG is not groupstrategyproof.",
                "This suggests that as a payment bound, TUmax(c) may be too liberal, at least in a context where there is little or no co-operation between agents.",
                "Perhaps TUmax(c) can be a good benchmark for measuring the performance of mechanisms designed for agents that can form coalitions or make side payments to each other, in particular, group-strategyproof mechanisms.",
                "Another setting in which bounding φTUmax is still of some interest is when, for the underlying problem, the optimal allocation and VCG payments are NP-hard to compute.",
                "In this case, finding a polynomial-time computable mechanism with good frugality ratio with respect to TUmax(c) is a non-trivial task, while bounding the frugality ratio with respect to more challenging payment bounds could be too difficult.",
                "To illustrate this point, compare the proofs of Lemma 6 and Lemma 7: both require some effort, but the latter is much more difficult than the former. 6.3 The choice of S All payment bounds defined in this paper correspond to the total bid of all elements in the cheapest feasible set, where ties are broken lexicographically.",
                "While this definition ensures that our payment bounds are well-defined, the particular choice of the drawresolution rule appears arbitrary, and one might wonder if our payment bounds are sufficiently robust to be independent of this choice.",
                "It turns out that is indeed the case for NTUmin(c) and NTUmax(c), i.e., these bounds do not depend on the draw-resolution rule.",
                "To see this, suppose that two feasible sets S1 and S2 have the same cost.",
                "In the computation of NTUmin(c, S1), all vertices in S1 \\S2 would have to bid their true cost, since otherwise S2 would become cheaper than S1.",
                "Hence, any bid vector for S1 can only have be = ce for e ∈ S1 ∩ S2, and hence constitutes a valid bid vector for S2 and vice versa.",
                "A similar argument applies to NTUmax(c).",
                "However, for TUmin(c) and TUmax(c) this is not the case.",
                "For example, consider the set system E = {e1, e2, e3, e4, e5}, F = {S1 = {e1, e2}, S2 = {e2, e3, e4}, S3 = {e4, e5}} with the costs c1 = 2, c2 = c3 = c4 = 1, c5 = 3.",
                "The cheapest sets are S1 and S2.",
                "Now TUmax(c, S1) ≤ 4, as the total bid of the elements in S1 cannot exceed the total cost of S3.",
                "On the other hand, TUmax(c, S2) ≥ 5, as we can set b2 = 3, b3 = 0, b4 = 2.",
                "Similarly, TUmin(c, S1) = 4, because the inequalities in (2) are b1 ≤ 2 and b1 + b2 ≤ 4.",
                "But TUmin(c, S2) ≤ 3 as we can set b2 = 1, b3 = 2, b4 = 0. 6.4 Negative results for NTUmin(c) and TUmin(c) The results in [16] and our vertex cover results are proved for the frugality ratio φNTUmin.",
                "Indeed, it can be argued that φNTUmin is the best definition of frugality ratio, because among all reasonable payment bounds (i.e., ones that are at least as large as the cost of the cheapest feasible set), it is most demanding of the algorithm.",
                "However, NTUmin(c) is not always the easiest or the most natural payment bound to work with.",
                "In this subsection, we discuss several disadvantages of NTUmin(c) (and also TUmin(c)) as compared to NTUmax(c) and TUmax(c). 6.4.1 Nonmonotonicity The first problem with NTUmin(c) is that it is not monotone with respect to F, i.e., it may increase when one adds a feasible set to F. (It is, however, monotone in the sense that a losing agent cannot become a winner by raising his cost.)",
                "Intuitively, a good payment bound should satisfy this monotonicity requirement, as adding a feasible set increases the competition, so it should drive the prices down.",
                "Note that this indeed the case for NTUmax(c) and TUmax(c) since a new feasible set adds a constraint in (2), thus limiting the solution space for the respective linear program.",
                "PROPOSITION 7.",
                "Adding a feasible set to F can increase the value of NTUmin(c) by a factor of Ω(n).",
                "PROOF.",
                "Let E = {x, xx, y1, . . . , yn, z1, . . . , zn}.",
                "Set Y = {y1, . . . , yn}, S = Y ∪ {x}, Ti = Y \\ {yi} ∪ {zi}, i = 1, . . . , n, and suppose that F = {S, T1, . . . , Tn}.",
                "The costs are cx = 0, cxx = 0, cyi = 0, czi = 1 for i = 1, . . . , n. Note that S is the cheapest feasible set.",
                "Let F = F ∪ {T0}, where T0 = Y ∪ {xx}.",
                "For F, the bid vector by1 = · · · = byn = 0, bx = 1 satisfies (1), (2), and (3), so NTUmin(c) ≤ 1.",
                "For F , S is still the lexicographically-least cheapest set.",
                "Any optimal solution has bx = 0 (by constraint in (2) with T0).",
                "Condition (3) for yi implies bx + byi = czi = 1, so byi = 1 and NTUmin(c) = n. For path auctions, it has been shown [18] that NTUmin(c) is non-monotone in a slightly different sense, i.e., with respect to adding a new edge (agent) rather than a new feasible set (a team of existing agents).",
                "REMARK 5.",
                "We can also show that NTUmin(c) is non-monotone for vertex cover.",
                "In this case, adding a new feasible set corresponds to deleting edges from the graph.",
                "It turns out that deleting a single edge can increase NTUmin(c) by a factor of n − 2; the construction is similar to that of Proposition 5. 6.4.2 NP-Hardness Another problem with NTUmin(c, S) is that it is NP-hard to compute even if the number of feasible sets is polynomial in n. Again, this puts it at a disadvantage compared to NTUmax(c, S) and TUmax(c, S) (see Remark 1).",
                "THEOREM 6.",
                "Computing NTUmin(c) is NP-hard, even when the lexicographically-least feasible set S is given in the input.",
                "PROOF.",
                "We reduce EXACT COVER BY 3-SETS(X3C) to our problem.",
                "An instance of X3C is given by a universe G = {g1, . . . , gn} and a collection of subsets C1, . . . , Cm, Ci ⊂ G, |Ci| = 3, where the goal is to decide whether one can cover G by n/3 of these sets.",
                "Observe that if this is indeed the case, each element of G is contained in exactly one set of the cover.",
                "LEMMA 9.",
                "Consider a minimisation problem P of the following form: Minimise P i=1,...,n bi under conditions (1) bi ≥ 0 for all i = 1, . . . , n; (2) for any j = 1, . . . , k we have P bi∈Sj bi ≤ aj, where Sj ⊆ {b1, . . . , bn}; (3) for each bj , one of the constraints in (2) involving it is tight.",
                "For any such P, one can construct a set system S and a vector of costs c such that NTUmin(c) is the optimal solution to P. PROOF.",
                "The construction is straightforward: there is an element of cost 0 for each bi, an element of cost aj for each aj, the feasible solutions are {b1, . . . , bn}, or any set obtained from {b1, . . . , bn} by replacing the elements in Sj by aj. 344 By this lemma, all we have to do to prove Theorem 6 is to show how to solve X3C by using the solution to a minimisation problem of the form given in Lemma 9.",
                "We do this as follows.",
                "For each Ci, we introduce 4 variables xi, ¯xi, ai, and bi.",
                "Also, for each element gj of G there is a variable dj.",
                "We use the following set of constraints: • In (1), we have constraints xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 for all i = 1, . . . , m, j = 1, . . . , n. • In (2), for all i = 1, . . . , m, we have the following 5 constraints: xi + ¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi + bi ≤ 1.",
                "Also, for all j = 1, . . . , n we have a constraint of the form xi1 + · · · + xik + dj ≤ 1, where Ci1 , . . . , Cik are the sets that contain gj.",
                "The goal is to minimize z = P i(xi + ¯xi + ai + bi) + P j dj.",
                "Observe that for each j, there is only one constraint involving dj , so by condition (3) it must be tight.",
                "Consider the two constraints involving ai.",
                "One of them must be tight, and therefore xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1.",
                "Hence, for any feasible solution to (1)-(3) we have z ≥ m. Now, suppose that there is an exact set cover.",
                "Set dj = 0 for j = 1, . . . , n. Also, if Ci is included in this cover, set xi = 1, ¯xi = ai = bi = 0, otherwise set ¯xi = 1, xi = ai = bi = 0.",
                "Clearly, all inequalities in (2) are satisfied (we use the fact that each element is covered exactly once), and for each variable, one of the constraints involving it is tight.",
                "This assignment results in z = m. Conversely, suppose there is a feasible solution with z = m. As each addend of the form xi + ¯xi + ai + bi contributes at least 1, we have xi + ¯xi + ai + bi = 1 for all i, dj = 0 for all j.",
                "We will now show that for each i, either xi = 1 and ¯xi = 0, or xi = 0 and ¯xi = 1.",
                "For the sake of contradiction, suppose that xi = δ < 1, ¯xi = δ < 1.",
                "As one of the constraints involving ai must be tight, we have ai ≥ min{1 − δ, 1 − δ }.",
                "Similarly, bi ≥ min{1 − δ, 1 − δ }.",
                "Hence, xi + ¯xi + ai + bi = 1 = δ +δ +2 min{1−δ, 1−δ } > 1.",
                "To finish the proof, note that for each j = 1, . . . , m we have xi1 + · · · + xik + dj = 1 and dj = 0, so the subsets that correspond to xi = 1 constitute a set cover.",
                "REMARK 6.",
                "In the proofs of Proposition 7 and Theorem 6 all constraints in (1) are of the form be ≥ 0.",
                "Hence, the same results are true for TUmin(c).",
                "REMARK 7.",
                "For shortest-path auctions, the size of F can be superpolynomial.",
                "However, there is a polynomial-time separation oracle for constraints in (2) (to construct one, use any algorithm for finding shortest paths), so one can compute NTUmax(c) and TUmax(c) in polynomial time.",
                "On the other hand, recently and independently it was shown [18] that computing NTUmin(c) for shortest-path auctions is NP-hard. 7.",
                "REFERENCES [1] A. Archer and E. Tardos, Frugal path mechanisms.",
                "In Proceedings of the 13th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 991-999, 2002 [2] R. Bar-Yehuda, K. Bendel, A. Freund, and D. Rawitz, Local ratio: A unified framework for approximation algorithms.",
                "In Memoriam: Shimon Even 1935-2004.",
                "ACM Comput.",
                "Surv., 36(4):422-463, 2004 [3] R. Bar-Yehuda and S. Even, A local-ratio theorem for approximating the weighted vertex cover problem.",
                "Annals of Discrete Mathematics, 25:27-46, 1985 [4] E. Clarke, Multipart pricing of public goods.",
                "Public Choice, 8:17-33, 1971 [5] G. Calinescu, Bounding the payment of approximate truthful mechanisms.",
                "In Proceedings of the 15th International Symposium on Algorithms and Computation, pages 221-233, 2004 [6] A. Czumaj and A. Ronen, On the expected payment of mechanisms for task allocation.",
                "In Proceedings of the 5th ACM Conference on Electronic Commerce (EC04), 2004 [7] E. Elkind, True costs of cheap labor are hard to measure: edge deletion and VCG payments in graphs.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [8] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Frugality ratios and improved truthful mechanisms for vertex cover.",
                "Available from http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai, and K. Steiglitz, Frugality in path auctions.",
                "In Proceedings of the 15th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 694-702, 2004 [10] J. Feigenbaum, C. H. Papadimitriou, R. Sami, and S. Shenker, A BGP-based mechanism for lowest-cost routing.",
                "In Proceedings of the 21st Symposium on Principles of Distributed Computing, pages 173-182, 2002 [11] A. Fiat, A. Goldberg, J. Hartline, and A. Karlin, Competitive generalized auctions.",
                "In Proceedings of the 34th Annual ACM Symposium on Theory of Computation, pages 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra and A. Verma, Coalitional games on graphs: core structures, substitutes and frugality.",
                "In Proceedings of the 4th ACM Conference on Electronic Commerce (EC03), 2005 [13] A. Goldberg, J. Hartline, and A. Wright, Competitive auctions and digital goods.",
                "In Proceedings of the 12th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2001 [14] T. Groves, Incentives in teams.",
                "Econometrica, 41(4):617-631, 1973 [15] N. Immorlica, D. Karger, E. Nikolova, and R. Sami, First-price path auctions.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [16] A. R. Karlin, D. Kempe, and T. Tamir, Beyond VCG: frugality of truthful mechanisms.",
                "In Proceedings of the 46th Annual IEEE Symposium on Foundations of Computer Science, pages 615-626, 2005 [17] D. Kempe, Personal communication, 2006 [18] N. Chen, A. R. Karlin, Cheap labor can be expensive, In Proceedings of the 18th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2007 [19] N. Nisan and A. Ronen, Algorithmic mechanism design.",
                "In Proceedings of the 31st Annual ACM Symposium on Theory of Computation, pages 129-140, 1999 [20] A. Ronen and R. Talisman, Towards generic low payment mechanisms for decentralized task allocation.",
                "In Proceedings of the 7th International IEEE Conference on E-Commerce Technology, 2005 [21] K. Talwar, The price of truth: frugality in truthful mechanisms.",
                "In Proceedings of 20th International Symposium on Theoretical Aspects of Computer Science, 2003 [22] W. Vickrey, Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961 345"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Los mecanismos veraces para la cobertura de vértice recuerdan que para una \"subasta de cobertura de vértice\" en un gráfico g = (v, e), una regla de asignación es un algoritmo que toma como entrada una oferta BV para cada vértice y devuelve una cubierta de vértice de g. Como se explica en la Sección 2, podemos combinar una regla de asignación monótona con pagos umbral para obtener una subasta veraz.",
                "Sea M una \"subasta de cobertura de vértice\" en g que satisface las condiciones del teorema 4.",
                "Considere, por ejemplo, la \"Subasta de cobertura de vértice\" para la gráfica de la Proposición 5 con los costos CX1 = · · · = CXN-2 = CXN-1 = 1, CX0 = 0."
            ],
            "translated_text": "",
            "candidates": [
                "subasta de cubierta de vértices",
                "subasta de cobertura de vértice",
                "Subasta de tope de vértice",
                "subasta de cobertura de vértice",
                "Subasta de cubierta de vértice",
                "Subasta de cobertura de vértice"
            ],
            "error": []
        },
        "transferable utility": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Frugality Ratios And Improved Truthful Mechanisms for Vertex Cover ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT In set-system auctions, there are several overlapping teams of agents, and a task that can be completed by any of these teams.",
                "The auctioneers goal is to hire a team and pay as little as possible.",
                "Examples of this setting include shortest-path auctions and vertex-cover auctions.",
                "Recently, Karlin, Kempe and Tamir introduced a new definition of frugality ratio for this problem.",
                "Informally, the frugality ratio is the ratio of the total payment of a mechanism to a desired payment bound.",
                "The ratio captures the extent to which the mechanism overpays, relative to perceived fair cost in a truthful auction.",
                "In this paper, we propose a new truthful polynomial-time auction for the vertex cover problem and bound its frugality ratio.",
                "We show that the solution quality is with a constant factor of optimal and the frugality ratio is within a constant factor of the best possible worst-case bound; this is the first auction for this problem to have these properties.",
                "Moreover, we show how to transform any truthful auction into a frugal one while preserving the approximation ratio.",
                "Also, we consider two natural modifications of the definition of Karlin et al., and we analyse the properties of the resulting payment bounds, such as monotonicity, computational hardness, and robustness with respect to the draw-resolution rule.",
                "We study the relationships between the different payment bounds, both for general set systems and for specific set-system auctions, such as path auctions and vertex-cover auctions.",
                "We use these new definitions in the proof of our main result for vertex-cover auctions via a bootstrapping technique, which may be of independent interest.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a set system auction there is a single buyer and many vendors that can provide various services.",
                "It is assumed that the buyers requirements can be satisfied by various subsets of the vendors; these subsets are called the feasible sets.",
                "A widely-studied class of setsystem auctions is path auctions, where each vendor is able to sell access to a link in a network, and the feasible sets are those sets whose links contain a path from a given source to a given destination; the study of these auctions has been initiated in the seminal paper by Nisan and Ronen [19] (see also [1, 10, 9, 6, 15, 7, 20]).",
                "We assume that each vendor has a cost of providing his services, but submits a possibly larger bid to the auctioneer.",
                "Based on these bids, the auctioneer selects a feasible subset of vendors, and makes payments to the vendors in this subset.",
                "Each selected vendor enjoys a profit of payment minus cost.",
                "Vendors want to maximise profit, while the buyer wants to minimise the amount he pays.",
                "A natural goal in this setting is to design a truthful auction, in which vendors have an incentive to bid their true cost.",
                "This can be achieved by paying each selected vendor a premium above her bid in such a way that the vendor has no incentive to overbid.",
                "An interesting question in mechanism design is how much the auctioneer will have to overpay in order to ensure truthful bids.",
                "In the context of path auctions this topic was first addressed by Archer and Tardos [1].",
                "They define the frugality ratio of a mechanism as the ratio between its total payment and the cost of the cheapest path disjoint from the path selected by the mechanism.",
                "They show that, for a large class of truthful mechanisms for this problem, the frugality ratio is as large as the number of edges in the shortest path.",
                "Talwar [21] extends this definition of frugality ratio to general set systems, and studies the frugality ratio of the classical VCG mechanism [22, 4, 14] for many specific set systems, such as minimum spanning trees and set covers.",
                "While the definition of frugality ratio proposed by [1] is wellmotivated and has been instrumental in studying truthful mechanisms for set systems, it is not completely satisfactory.",
                "Consider, for example, the graph of Figure 1 with the costs cAB = cBC = A B C D Figure 1: The diamond graph 336 cCD = 0, cAC = cBD = 1.",
                "This graph is 2-connected and the VCG payment to the winning path ABCD is bounded.",
                "However, the graph contains no A-D path that is disjoint from ABCD, and hence the frugality ratio of VCG on this graph remains undefined.",
                "At the same time, there is no monopoly, that is, there is no vendor that appears in all feasible sets.",
                "In auctions for other types of set systems, the requirement that there exist a feasible solution disjoint from the selected one is even more severe: for example, for vertex-cover auctions (where vendors correspond to the vertices of some underlying graph, and the feasible sets are vertex covers) the requirement means that the graph must be bipartite.",
                "To deal with this problem, Karlin et al. [16] suggest a better benchmark, which is defined for any monopoly-free set system.",
                "This quantity, which they denote by ν, intuitively corresponds to the value of a cheapest Nash equilibrium.",
                "Based on this new definition, the authors construct new mechanisms for the shortest path problem and show that the overpayment of these mechanisms is within a constant factor of optimal. 1.1 Our results Vertex cover auctions We propose a truthful polynomial-time auction for vertex cover that outputs a solution whose cost is within a factor of 2 of optimal, and whose frugality ratio is at most 2Δ, where Δ is the maximum degree of the graph (Theorem 4).",
                "We complement this result by proving (Theorem 5) that for any Δ and n, there are graphs of maximum degree Δ and size Θ(n) for which any truthful mechanism has frugality ratio at least Δ/2.",
                "This means that the solution quality of our auction is with a factor of 2 of optimal and the frugality ratio is within a factor of 4 of the best possible bound for worst-case inputs.",
                "To the best of our knowledge, this is the first auction for this problem that enjoys these properties.",
                "Moreover, we show how to transform any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio.",
                "Frugality ratios Our vertex cover results naturally suggest two modifications of the definition of ν in [16].",
                "These modifications can be made independently of each other, resulting in four different payment bounds TUmax, TUmin, NTUmax, and NTUmin, where NTUmin is equal to the original payment bound ν of in [16].",
                "All four payment bounds arise as Nash equilibria of certain games (see the full version of this paper [8]); the differences between them can be seen as the price of initiative and the price of cooperation (see Section 3).",
                "While our main result about vertex cover auctions (Theorem 4) is with respect to NTUmin = ν, we make use of the new definitions by first comparing the payment of our mechanism to a weaker bound NTUmax, and then bootstrapping from this result to obtain the desired bound.",
                "Inspired by this application, we embark on a further study of these payment bounds.",
                "Our results here are as follows: 1.",
                "We observe (Proposition 1) that the four payment bounds always obey a particular order that is independent of the choice of the set system and the cost vector, namely, TUmin ≤ NTUmin ≤ NTUmax ≤ TUmax.",
                "We provide examples (Proposition 5 and Corollaries 1 and 2) showing that for the vertex cover problem any two consecutive bounds can differ by a factor of n − 2, where n is the number of agents.",
                "We then show (Theorem 2) that this separation is almost best possible for general set systems by proving that for any set system TUmax/TUmin ≤ n. In contrast, we demonstrate (Theorem 3) that for path auctions TUmax/TUmin ≤ 2.",
                "We provide examples (Propositions 2, 3 and 4) showing that this bound is tight.",
                "We see this as an argument for the study of vertexcover auctions, as they appear to be more representative of the general team -selection problem than the widely studied path auctions. 2.",
                "We show (Theorem 1) that for any set system, if there is a cost vector for which TUmin and NTUmin differ by a factor of α, there is another cost vector that separates NTUmin and NTUmax by the same factor and vice versa; the same is true for the pairs (NTUmin, NTUmax) and (NTUmax, TUmax).",
                "This symmetry is quite surprising, since, e.g., TUmin and NTUmax are obtained from NTUmin by two very different transformations.",
                "This observation suggests that the four payment bounds should be studied in a unified framework; moreover, it leads us to believe that the bootstrapping technique of Theorem 4 may have other applications. 3.",
                "We evaluate the payment bounds introduced here with respect to a checklist of desirable features.",
                "In particular, we note that the payment bound ν = NTUmin of [16] exhibits some counterintuitive properties, such as nonmonotonicity with respect to adding a new feasible set (Proposition 7), and is NP-hard to compute (Theorem 6), while some of the other payment bounds do not suffer from these problems.",
                "This can be seen as an argument in favour of using weaker but efficiently computable bounds NTUmax and TUmax.",
                "Related work Vertex-cover auctions have been studied in the past by Talwar [21] and Calinescu [5].",
                "Both of these papers are based on the definition of frugality ratio used in [1]; as mentioned before, this means that their results only apply to bipartite graphs.",
                "Talwar [21] shows that the frugality ratio of VCG is at most Δ.",
                "However, since finding the cheapest vertex cover is an NP-hard problem, the VCG mechanism is computationally infeasible.",
                "The first (and, to the best of our knowledge, only) paper to investigate polynomial-time truthful mechanisms for vertex cover is [5].",
                "This paper studies an auction that is based on the greedy allocation algorithm, which has an approximation ratio of log n. While the main focus of [5] is the more general set cover problem, the results of [5] imply a frugality ratio of 2Δ2 for vertex cover.",
                "Our results improve on those of [21] as our mechanism is polynomial-time computable, as well as on those of [5], as our mechanism has a better approximation ratio, and we prove a stronger bound on the frugality ratio; moreover, this bound also applies to the mechanism of [5]. 2.",
                "PRELIMINARIES In most of this paper, we discuss auctions for set systems.",
                "A set system is a pair (E, F), where E is the ground set, |E| = n, and F is a collection of feasible sets, which are subsets of E. Two particular types of set systems are of interest to us - shortest path systems, in which the ground set consists of all edges of a network, and the feasible sets are paths between two specified vertices s and t, and vertex cover systems, in which the elements of the ground set are the vertices of a graph, and the feasible sets are vertex covers of this graph.",
                "In set system auctions, each element e of the ground set is owned by an independent agent and has an associated non-negative cost ce.",
                "The goal of the centre is to select (purchase) a feasible set.",
                "Each element e in the selected set incurs a cost of ce.",
                "The elements that are not selected incur no costs.",
                "The auction proceeds as follows: all elements of the ground set make their bids, the centre selects a feasible set based on the bids and makes payments to the agents.",
                "Formally, an auction is defined by an allocation rule A : Rn → F and a payment rule P : Rn → Rn .",
                "The allocation rule takes as input a vector of bids and decides which of the sets in F should be selected.",
                "The payment rule also takes as input a vector of bids and decides how much to pay to each agent.",
                "The standard requirements are individual rationality, i.e., the payment to each agent should be at least as high as his incurred cost (0 for agents not in the selected set and ce for agents in the 337 selected set) and incentive compatibility, or truthfulness, i.e., each agents dominant strategy is to bid his true cost.",
                "An allocation rule is monotone if an agent cannot increase his chance of getting selected by raising his bid.",
                "Formally, for any bid vector b and any e ∈ E, if e ∈ A(b) then e ∈ A(b1, . . . , be, . . . , bn) for any be > be.",
                "Given a monotone allocation rule A and a bid vector b, the threshold bid te of an agent e ∈ A(b) is the highest bid of this agent that still wins the auction, given that the bids of other participants remain the same.",
                "Formally, te = sup{be ∈ R | e ∈ A(b1, . . . , be, . . . , bn)}.",
                "It is well known (see, e.g. [19, 13]) that any auction that has a monotone allocation rule and pays each agent his threshold bid is truthful; conversely, any truthful auction has a monotone allocation rule.",
                "The VCG mechanism is a truthful mechanism that maximises the social welfare and pays 0 to the losing agents.",
                "For set system auctions, this simply means picking a cheapest feasible set, paying each agent in the selected set his threshold bid, and paying 0 to all other agents.",
                "Note, however, that the VCG mechanism may be difficult to implement, since finding a cheapest feasible set may be intractable.",
                "If U is a set of agents, c(U) denotes P w∈U cw.",
                "Similarly, b(U) denotes P w∈U bw. 3.",
                "FRUGALITY RATIOS We start by reproducing the definition of the quantity ν from [16, Definition 4].",
                "Let (E, F) be a set system and let S be a cheapest feasible set with respect to the true costs ce.",
                "Then ν(c, S) is the solution to the following optimisation problem.",
                "Minimise B = P e∈S be subject to (1) be ≥ ce for all e ∈ E (2) P e∈S\\T be ≤ P e∈T \\S ce for all T ∈ F (3) for every e ∈ S, there is a Te ∈ F such that e ∈ Te andP e ∈S\\Te be = P e ∈Te\\S ce The bound ν(c, S) can be seen as an outcome of a two-stage process, where first each agent e ∈ S makes a bid be stating how much it wants to be paid, and then the centre decides whether to accept these bids.",
                "The behaviour of both parties is affected by the following considerations.",
                "From the centres point of view, the set S must remain the most attractive choice, i.e., it must be among the cheapest feasible sets under the new costs ce = ce for e ∈ S, ce = be for e ∈ S (condition (2)).",
                "The reason for that is that if (2) is violated for some set T, the centre would prefer T to S. On the other hand, no agent would agree to a payment that does not cover his costs (condition (1)), and moreover, each agent tries to maximise his profit by bidding as high as possible, i.e., none of the agents can increase his bid without violating condition (2) (condition (3)).",
                "The centre wants to minimise the total payout, so ν(c, S) corresponds to the best possible outcome from the centres point of view.",
                "This definition captures many important aspects of our intuition about fair payments.",
                "However, it can be modified in two ways, both of which are still quite natural, but result in different payment bounds.",
                "First, we can consider the worst rather than the best possible outcome for the centre.",
                "That is, we can consider the maximum total payment that the agents can extract by jointly selecting their bids subject to (1), (2), and (3).",
                "Such a bound corresponds to maximising B subject to (1), (2), and (3) rather than minimising it.",
                "If it is the agents who make the original bids (rather than the centre), this kind of bidding behaviour is plausible.",
                "On the other hand, in a game in which the centre proposes payments to the agents in S and the agents accept them as long as (1), (2) and (3) are satisfied, we would be likely to observe a total payment of ν(c, S).",
                "Hence, the difference between these two definitions can be seen as the price of initiative.",
                "Second, the agents may be able to make payments to each other.",
                "In this case, if they can extract more money from the centre by agreeing on a vector of bids that violates individual rationality (i.e., condition (1)) for some bidders, they might be willing to do so, as the agents who are paid below their costs will be compensated by other members of the group.",
                "The bids must still be realistic, i.e., they have to satisfy be ≥ 0.",
                "The resulting change in payments can be seen as the price of co-operation and corresponds to replacing condition (1) with the following weaker condition (1∗ ): be ≥ 0 for all e ∈ E. (1∗ ) By considering all possible combinations of these modifications, we obtain four different payment bounds, namely • TUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1∗ ), (2), and (3). • TUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1∗ ), (2), and (3). • NTUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1), (2), and (3). • NTUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1), (2), (3).",
                "The abbreviations TU and NTU correspond, respectively, to <br>transferable utility</br> and non-<br>transferable utility</br>, i.e., the agents ability/inability to make payments to each other.",
                "For concreteness, we will take TUmin(c) to be TUmin(c, S) where S is the lexicographically least amongst the cheapest feasible sets.",
                "We define TUmax(c), NTUmin(c), NTUmax(c) and ν(c) similarly, though we will see in Section 6.3 that, in fact, NTUmin(c, S) and NTUmax(c, S) are independent of the choice of S. Note that the quantity ν(c) from [16] is NTUmin(c).",
                "The second modification (<br>transferable utility</br>) is more intuitively appealing in the context of the maximisation problem, as both assume some degree of co-operation between the agents.",
                "While the second modification can be made without the first, the resulting payment bound TUmin(c, S) is too strong to be a realistic benchmark, at least for general set systems.",
                "In particular, it can be smaller than the total cost of the cheapest feasible set S (see Section 6).",
                "Nevertheless, we provide the definition as well as some results about TUmin(c, S) in the paper, both for completeness and because we believe that it may help to understand which properties of the payment bounds are important for our proofs.",
                "Another possibility would be to introduce an additional constraint P e∈S be ≥P e∈S ce in the definition of TUmin(c, S) (note that this condition holds automatically for TUmax(c, S), as TUmax(c, S) ≥ NTUmax(c, S)); however, such a definition would have no direct game-theoretic interpretation, and some of our results (in particular, the ones in Section 4) would no longer be true.",
                "REMARK 1.",
                "For the payment bounds that are derived from maximisation problems, (i.e., TUmax(c, S) and NTUmax(c, S)), constraints of type (3) are redundant and can be dropped.",
                "Hence, TUmax(c, S) and NTUmax(c, S) are solutions to linear programs, and therefore can be computed in polynomial time as long as we have a separation oracle for constraints in (2).",
                "In contrast, 338 NTUmin(c, S) can be NP-hard to compute even if the size of F is polynomial (see Section 6).",
                "The first and third inequalities in the following observation follow from the fact that condition (1∗ ) is strictly weaker than condition (1).",
                "PROPOSITION 1.",
                "TUmin(c, S) ≤ NTUmin(c, S) ≤ NTUmax(c, S) ≤ TUmax(c, S).",
                "Let M be a truthful mechanism for (E, F).",
                "Let pM(c) denote the total payments of M when the actual costs are c. A frugality ratio of M with respect to a payment bound is the ratio between the payment of M and this payment bound.",
                "In particular, φTUmin(M) = sup c pM(c)/TUmin(c), φTUmax(M) = sup c pM(c)/TUmax(c), φNTUmin(M) = sup c pM(c)/NTUmin(c), φNTUmax(M) = sup c pM(c)/NTUmax(c).",
                "We conclude this section by showing that there exist set systems and respective cost vectors for which all four payment bounds are different.",
                "In the next section, we quantify this difference, both for general set systems, and for specific types of set systems, such as path auctions or vertex cover auctions.",
                "EXAMPLE 1.",
                "Consider the shortest-path auction on the graph of Figure 1.",
                "The cheapest feasible sets are all paths from A to D. It can be verified, using the reasoning of Propositions 2 and 3 below, that for the cost vector cAB = cCD = 2, cBC = 1, cAC = cBD = 5, we have • TUmax(c) = 10 (with bAB = bCD = 5, bBC = 0), • NTUmax(c) = 9 (with bAB = bCD = 4, bBC = 1), • NTUmin(c) = 7 (with bAB = bCD = 2, bBC = 3), • TUmin(c) = 5 (with bAB = bCD = 0, bBC = 5). 4.",
                "COMPARING PAYMENT BOUNDS 4.1 Path auctions We start by showing that for path auctions any two consecutive payment bounds can differ by at least a factor of 2.",
                "PROPOSITION 2.",
                "There is an instance of the shortest-path problem for which we have NTUmax(c)/NTUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is due to David Kempe [17].",
                "Consider the graph of Figure 1 with the edge costs cAB = cBC = cCD = 0, cAC = cBD = 1.",
                "Under these costs, ABCD is the cheapest path.",
                "The inequalities in (2) are bAB + bBC ≤ cAC = 1, bBC + bCD ≤ cBD = 1.",
                "By condition (3), both of these inequalities must be tight (the former one is the only inequality involving bAB, and the latter one is the only inequality involving bCD).",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 0, bCD ≥ 0.",
                "Now, if the goal is to maximise bAB + bBC + bCD, the best choice is bAB = bCD = 1, bBC = 0, so NTUmax(c) = 2.",
                "On the other hand, if the goal is to minimise bAB + bBC + bCD, one should set bAB = bCD = 0, bBC = 1, so NTUmin(c) = 1.",
                "PROPOSITION 3.",
                "There is an instance of the shortest-path problem for which we have TUmax(c)/NTUmax(c) ≥ 2.",
                "PROOF.",
                "Again, consider the graph of Figure 1.",
                "Let the edge costs be cAB = cCD = 0, cBC = 1, cAC = cBD = 1.",
                "ABCD is the lexicographically-least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "The inequalities in (2) are the same as in the previous example, and by the same argument both of them are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 1, bCD ≥ 0.",
                "Our goal is to maximise bAB + bBC + bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 0, bBC = 1, so NTUmax(c) = 1.",
                "Otherwise, we can set bAB = bCD = 1, bBC = 0, so TUmax(c) ≥ 2.",
                "PROPOSITION 4.",
                "There is an instance of the shortest-path problem for which we have NTUmin(c)/TUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is also based on the graph of Figure 1.",
                "The edge costs are cAB = cCD = 1, cBC = 0, cAC = cBD = 1.",
                "ABCD is the lexicographically least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "Again, the inequalities in (2) are the same, and both are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 1, bBC ≥ 0, bCD ≥ 1.",
                "Our goal is to minimise bAB + bBC +bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 1, bBC = 0, so NTUmin(c) = 2.",
                "Otherwise, we can set bAB = bCD = 0, bBC = 1, so TUmin(c) ≤ 1.",
                "In Section 4.4 (Theorem 3), we show that the separation results in Propositions 2, 3, and 4 are optimal. 4.2 Connections between separation results The separation results for path auctions are obtained on the same graph using very similar cost vectors.",
                "It turns out that this is not coincidental.",
                "Namely, we can prove the following theorem.",
                "THEOREM 1.",
                "For any set system (E, F), and any feasible set S, max c TUmax(c, S) NTUmax(c, S) = max c NTUmax(c, S) NTUmin(c, S) , max c NTUmax(c, S) NTUmin(c, S) = max c NTUmin(c, S) TUmin(c, S) , where the maximum is over all cost vectors c for which S is a cheapest feasible set.",
                "The proof of the theorem follows directly from the four lemmas proved below; more precisely, the first equality in Theorem 1 is obtained by combining Lemmas 1 and 2, and the second equality is obtained by combining Lemmas 3 and 4.",
                "We prove Lemma 1 here; the proofs of Lemmas 2- 4 are similar and can be found in the full version of this paper [8].",
                "LEMMA 1.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and TUmax(c, S)/NTUmax(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α.",
                "PROOF.",
                "Suppose that TUmax(c, S) = X and NTUmax(c, S) = Y where X/Y = α.",
                "Assume without loss of generality that S consists of elements 1, . . . , k, and let b1 = (b1 1, . . . , b1 k) and b2 = (b2 1, . . . , b2 k) be the bid vectors that correspond to TUmax(c, S) and NTUmax(c, S), respectively.",
                "Construct the cost vector c by setting ci = ci for i ∈ S, ci = min{ci, b1 i } for i ∈ S. Clearly, S is a cheapest set under c .",
                "Moreover, as the costs of elements outside of S remained the same, the right-hand sides of all constraints in (2) did not change, so any bid vector that satisfies (2) and (3) with respect to c, also satisfies them with respect to c .",
                "We will construct two bid vectors b3 and b4 that satisfy conditions (1), (2), and (3) for the cost vector c , and 339 X X X X X 0 X 12 3 X 4 5 6 Figure 2: Graph that separates payment bounds for vertex cover, n = 7 have P i∈S b3 i = X, P i∈S b4 i = Y .",
                "As NTUmax(c , S) ≥ X and NTUmin(c , S) ≤ Y , this implies the lemma.",
                "We can set b3 i = b1 i : this bid vector satisfies conditions (2) and (3) since b1 does, and we have b1 i ≥ min{ci, b1 i } = ci, which means that b3 satisfies condition (1).",
                "Furthermore, we can set b4 i = b2 i .",
                "Again, b4 satisfies conditions (2) and (3) since b2 does, and since b2 satisfies condition (1), we have b2 i ≥ ci ≥ ci, which means that b4 satisfies condition (1).",
                "LEMMA 2.",
                "Suppose c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and TUmax(c , S)/NTUmax(c , S) ≥ α. LEMMA 3.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmin(c , S)/TUmin(c , S) ≥ α. LEMMA 4.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmin(c, S)/TUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α. 4.3 Vertex-cover auctions In contrast to the case of path auctions, for vertex-cover auctions the gap between NTUmin(c) and NTUmax(c) (and hence between NTUmax(c) and TUmax(c), and between TUmin(c) and NTUmin(c)) can be proportional to the size of the graph.",
                "PROPOSITION 5.",
                "For any n ≥ 3, there is a an n-vertex graph and a cost vector c for which TUmax(c)/NTUmax(c) ≥ n − 2.",
                "PROOF.",
                "The underlying graph consists of an (n − 1)-clique on the vertices X1, . . . , Xn−1, and an extra vertex X0 adjacent to Xn−1.",
                "The costs are cX1 = cX2 = · · · = cXn−2 = 0, cX0 = cXn−1 = 1.",
                "We can assume that S = {X0, X1, . . . , Xn−2} (this is the lexicographically first vertex cover of cost 1).",
                "For this set system, the constraints in (2) are bXi + bX0 ≤ cXn−1 = 1 for i = 1, . . . , n − 2.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bXi = 1 for i = 1, . . . , n − 2, bX0 = 0.",
                "Hence, TUmax(c) ≥ n − 2.",
                "For NTUmax(c), there is an additional constraint bX0 ≥ 1, so the best we can do is to set bXi = 0 for i = 1, . . . , n − 2, bX0 = 1, which implies NTUmax(c) = 1.",
                "Combining Proposition 5 with Lemmas 1 and 3, we derive the following corollaries.",
                "COROLLARY 1.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmax(c)/NTUmin(c) ≥ n − 2.",
                "COROLLARY 2.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmin(c)/TUmin(c) ≥ n − 2. j+2ix ij P \\ P ij+2P \\ P yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 P \\ P Figure 3: Proof of Theorem 3: constraints for ˆPij and ˆPij+2 do not overlap 4.4 Upper bounds It turns out that the lower bound proved in the previous subsection is almost tight.",
                "More precisely, the following theorem shows that no two payment bounds can differ by more than a factor of n; moreover, this is the case not just for the vertex cover problem, but for general set systems.",
                "We bound the gap between TUmax(c) and TUmin(c).",
                "Since TUmin(c) ≤ NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), this bound applies to any pair of payment bounds.",
                "THEOREM 2.",
                "For any set system (E, F) and any cost vector c, we have TUmax(c)/TUmin(c) ≤ n. PROOF.",
                "Assume wlog that the winning set S consists of elements 1, . . . , k. Let c1, . . . , ck be the true costs of elements in S, let b1, . . . , bk be their bids that correspond to TUmin(c), and let b1 , . . . , bk be their bids that correspond to TUmax(c).",
                "Consider the conditions (2) and (3) for S. One can pick a subset L of at most k inequalities in (2) so that for each i = 1, . . . , k there is at least one inequality in L that is tight for bi.",
                "Suppose that the jth inequality in L is of the form bi1 + · · · + bit ≤ c(Tj \\ S).",
                "For bi, all inequalities in L are, in fact, equalities.",
                "Hence, by adding up all of them we obtain k P i=1,...,k bi ≥ P j=1,...,k c(Tj \\ S).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c(Tj \\ S).",
                "Combining these two inequalities, we obtain nTUmin(c) ≥ kTUmin(c) ≥ TUmax(c).",
                "REMARK 2.",
                "The final line of the proof of Theorem 2 shows that, in fact, the upper bound on TUmax(c)/TUmin(c) can be strengthened to the size of the winning set, k. Note that in Proposition 5, as well as in Corollaries 1 and 2, k = n−1, so these results do not contradict each other.",
                "For path auctions, this upper bound can be improved to 2, matching the lower bounds of Section 4.1.",
                "THEOREM 3.",
                "For any instance of the shortest path problem, TUmax(c) ≤ 2 TUmin(c).",
                "PROOF.",
                "Given a network (G, s, t), assume without loss of generality that the lexicographically-least cheapest s-t path, P, in G is {e1, . . . , ek}, where e1 = (s, v1), e2 = (v1, v2), . . . , ek = (vk−1, t).",
                "Let c1, . . . , ck be the true costs of e1, . . . , ek, and let b = (b1, . . . , bk) and b = (b1 , . . . , bk ) be bid vectors that correspond to TUmin(c) and TUmax(c), respectively.",
                "For any i = 1, . . . , k, there is a constraint in (2) that is tight for bi with respect to the bid vector b , i.e., an s-t path Pi that avoids ei and satisfies b (P \\Pi) = c(Pi \\P).",
                "We can assume without loss of generality that Pi coincides with P up to some vertex xi, then deviates from P to avoid ei, and finally returns to P at a vertex 340 yi and coincides with P from then on (clearly, it might happen that s = xi or t = yi).",
                "Indeed, if Pi deviates from P more than once, one of these deviations is not necessary to avoid ei and can be replaced with the respective segment of P without increasing the cost of Pi.",
                "Among all paths of this form, let ˆPi be the one with the largest value of yi, i.e., the rightmost one.",
                "This path corresponds to an inequality Ii of the form bxi+1 + · · · + byi ≤ c( ˆPi \\ P).",
                "As in the proof of Theorem 2, we construct a set of tight constraints L such that every variable bi appears in at least one of these constraints; however, now we have to be more careful about the choice of constraints in L. We construct L inductively as follows.",
                "Start by setting L = {I1}.",
                "At the jth step, suppose that all variables up to (but not including) bij appear in at least one inequality in L. Add Iij to L. Note that for any j we have yij+1 > yij .",
                "This is because the inequalities added to L during the first j steps did not cover bij+1 .",
                "See Figure 3.",
                "Since yij+2 > yij+1 , we must also have xij+2 > yij : otherwise, ˆPij+1 would not be the rightmost constraint for bij+1 .",
                "Therefore, the variables in Iij+2 and Iij do not overlap, and hence no bi can appear in more than two inequalities in L. Now we follow the argument of the proof of Theorem 2 to finish.",
                "By adding up all of the (tight) inequalities in L for bi we obtain 2 P i=1,...,k bi ≥ P j=1,...,k c( ˆPj \\ P).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c( ˆPj \\ P), so TUmax(c) ≤ 2TUmin(c). 5.",
                "TRUTHFUL MECHANISMS FOR VERTEX COVER Recall that for a vertex-cover auction on a graph G = (V, E), an allocation rule is an algorithm that takes as input a bid bv for each vertex and returns a vertex cover ˆS of G. As explained in Section 2, we can combine a monotone allocation rule with threshold payments to obtain a truthful auction.",
                "Two natural examples of monotone allocation rules are Aopt, i.e., the algorithm that finds an optimal vertex cover, and the greedy algorithm AGR.",
                "However, Aopt cannot be guaranteed to run in polynomial time unless P = NP and AGR has approximation ratio of log n. Another approximation algorithm for vertex cover, which has approximation ratio 2, is the local ratio algorithm ALR [2, 3].",
                "This algorithm considers the edges of G one by one.",
                "Given an edge e = (u, v), it computes = min{bu, bv} and sets bu = bu − , bv = bv − .",
                "After all edges have been processed, ALR returns the set of vertices {v | bv = 0}.",
                "It is not hard to check that if the order in which the edges are considered is independent of the bids, then this algorithm is monotone as well.",
                "Hence, we can use it to construct a truthful auction that is guaranteed to select a vertex cover whose cost is within a factor of 2 from the optimal.",
                "However, while the quality of the solution produced by ALR is much better than that of AGR, we still need to show that its total payment is not too high.",
                "In the next subsection, we bound the frugality ratio of ALR (and, more generally, all algorithms that satisfy the condition of local optimality, defined later) by 2Δ, where Δ is the maximum degree of G. We then prove a matching lower bound showing that for some graphs the frugality ratio of any truthful auction is at least Δ/2. 5.1 Upper bound We say that an allocation rule is locally optimal if whenever bv >P w∼v bw, the vertex v is not chosen.",
                "Note that for any such rule the threshold bid of v satisfies tv ≤ P w∼v bw.",
                "CLAIM 1.",
                "The algorithms Aopt, AGR, and ALR are locally optimal.",
                "THEOREM 4.",
                "Any vertex cover auction M that has a locally optimal and monotone allocation rule and pays each agent his threshold bid has frugality ratio φNTUmin(M) ≤ 2Δ.",
                "To prove Theorem 4, we first show that the total payment of any locally optimal mechanism does not exceed Δc(V ).",
                "We then demonstrate that NTUmin(c) ≥ c(V )/2.",
                "By combining these two results, the theorem follows.",
                "LEMMA 5.",
                "Consider a graph G = (V, E) with maximum degree Δ.",
                "Let M be a vertex-cover auction on G that satisfies the conditions of Theorem 4.",
                "Then for any cost vector c, the total payment of M satisfies pM(c) ≤ Δc(V ).",
                "PROOF.",
                "First note that any such auction is truthful, so we can assume that each agents bid is equal to his cost.",
                "Let ˆS be the vertex cover selected by M. Then by local optimality pM(c) = X v∈ ˆS tv ≤ X v∈ ˆS X w∼v cw ≤ X w∈V Δcw = Δc(V ).",
                "We now derive a lower bound on TUmax(c); while not essential for the proof of Theorem 4, it helps us build the intuition necessary for that proof.",
                "LEMMA 6.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, TUmax(c, S) ≥ c(V \\ S) PROOF.",
                "For a vertex w with at least one neighbour in S, let d(w) denote the number of neighbours that w has in S. Consider the bid vector b in which, for each v ∈ S, bv = P w∼v,w∈S cw d(w) .",
                "Then P v∈S bv = P v∈S P w∼v,w∈S cw/d(w) = P w /∈S cw = c(V \\ S).",
                "To finish we want to show that b is feasible in the sense that it satisfies (2).",
                "Consider a vertex cover T, and extend the bid vector b by assigning bv = cv for v /∈ S. Then b(T) = c(T \\S)+b(S∩T) ≥ c(T \\S)+ X v∈S∩T X w∈S∩T :w∼v cw d(w) , and since all edges between S ∩ T and S go to S ∩ T, the righthand-side is equal to c(T \\S)+ X w∈S∩T cw = c(T \\S)+c(S ∩T) = c(V \\S) = b(S).",
                "Next, we prove a lower bound on NTUmax(c, S); we will then use it to obtain a lower bound on NTUmin(c).",
                "LEMMA 7.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmax(c, S) ≥ c(V \\ S) PROOF.",
                "If c(S) ≥ c(V \\ S), by condition (1) we are done.",
                "Therefore, for the rest of the proof we assume that c(S) < c(V \\ S).",
                "We show how to construct a bid vector (be)e∈S that satisfies conditions (1) and (2) such that b(S) ≥ c(V \\ S); clearly, this implies NTUmax(c, S) ≥ c(V \\ S).",
                "Recall that a network flow problem is described by a directed graph Γ = (VΓ, EΓ), a source node s ∈ VΓ, a sink node t ∈ VΓ, and a vector of capacity constraints ae, e ∈ EΓ.",
                "Consider a network (VΓ, EΓ) such that VΓ = V ∪{s, t}, EΓ = E1 ∪E2 ∪E3, where E1 = {(s, v) | v ∈ S}, E2 = {(v, w) | v ∈ S, w ∈ 341 V \\ S, (v, w) ∈ E}, E3 = {(w, t) | w ∈ V \\ S}.",
                "Since S is a vertex cover for G, no edge of E can have both of its endpoints in V \\ S, and by construction, E2 contains no edges with both endpoints in S. Therefore, the graph (V, E2) is bipartite with parts (S, V \\ S).",
                "Set the capacity constraints for e ∈ EΓ as follows: a(s,v) = cv, a(w,t) = cw, a(v,w) = +∞ for all v ∈ S, w ∈ V \\ S. Recall that a cut is a partition of the vertices in VΓ into two sets C1 and C2 so that s ∈ C1, t ∈ C2; we denote such a cut by C = (C1, C2).",
                "Abusing notation, we write e = (u, v) ∈ C if u ∈ C1, v ∈ C2 or u ∈ C2, v ∈ C1, and say that such an edge e = (u, v) crosses the cut C. The capacity of a cut C is computed as cap(C) = P (v,w)∈C a(v,w).",
                "We have cap(s, V ∪{t}) = c(S), cap({s} ∪ V, t) = c(V \\ S).",
                "Let Cmin = ({s} ∪ S ∪ W , {t} ∪ S ∪ W ) be a minimum cut in Γ, where S , S ⊆ S, W , W ⊆ V \\ S. See Figure 4.",
                "As cap(Cmin) ≤ cap(s, V ∪ {t}) = c(S) < +∞, and any edge in E2 has infinite capacity, no edge (u, v) ∈ E2 crosses Cmin.",
                "Consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Clearly, C = ({s} ∪ S ∪ W , {t}) is a minimum cut in Γ (otherwise, there would exist a smaller cut for Γ).",
                "As cap(C ) = c(W ), we have c(S ) ≥ c(W ).",
                "Now, consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Similarly, C = ({s}, S ∪ W ∪ {t}) is a minimum cut in Γ , cap(C ) = c(S ).",
                "As the size of a maximum flow from s to t is equal to the capacity of a minimum cut separating s and t, there exists a flow F = (fe)e∈EΓ of size c(S ).",
                "This flow has to saturate all edges between s and S , i.e., f(s,v) = cv for all v ∈ S .",
                "Now, increase the capacities of all edges between s and S to +∞.",
                "In the modified network, the capacity of a minimum cut (and hence the size of a maximum flow) is c(W ), and a maximum flow F = (fe)e∈EΓ can be constructed by greedily augmenting F. Set bv = cv for all v ∈ S , bv = f(s,v) for all v ∈ S .",
                "As F is constructed by augmenting F, we have bv ≥ cv for all v ∈ S, i.e., condition (1) is satisfied.",
                "Now, let us check that no vertex cover T ⊆ V can violate condition (2).",
                "Set T1 = T ∩ S , T2 = T ∩ S , T3 = T ∩ W , T4 = T ∩ W ; our goal is to show that b(S \\ T1) + b(S \\ T2) ≤ c(T3)+c(T4).",
                "Consider all edges (u, v) ∈ E such that u ∈ S \\T1.",
                "If (u, v) ∈ E2 then v ∈ T3 (no edge in E2 can cross the cut), and if u, v ∈ S then v ∈ T1∪T2.",
                "Hence, T1∪T3∪S is a vertex cover for G, and therefore c(T1)+ c(T3)+ c(S ) ≥ c(S) = c(T1)+ c(S \\ T1) + c(S ).",
                "Consequently, c(T3) ≥ c(S \\ T1) = b(S \\ T1).",
                "Now, consider the vertices in S \\T2.",
                "Any edge in E2 that starts in one of these vertices has to end in T4 (this edge has to be covered by T, and it cannot go across the cut).",
                "Therefore, the total flow out of S \\T2 is at most the total flow out of T4, i.e., b(S \\T2) ≤ c(T4).",
                "Hence, b(S \\ T1) + b(S \\ T2) ≤ c(T3) + c(T4).",
                "Finally, we derive a lower bound on the payment bound that is of interest to us, namely, NTUmin(c).",
                "LEMMA 8.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmin(c, S) ≥ c(V \\ S) PROOF.",
                "Suppose for contradiction that c is a cost vector with minimum-cost vertex cover S and NTUmin(c, S) < c(V \\S).",
                "Let b be the corresponding bid vector and let c be a new cost vector with cv = bv for v ∈ S and cv = cv for v ∈ S. Condition (2) guarantees that S is an optimal solution to the cost vector c .",
                "Now compute a bid vector b corresponding to NTUmax(c , S).",
                "We S W S W s t T1 T3 T2 T4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 00 11 11 0 00 1 11 0 00 1 11 0 00 1 11 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00000 0000000000 0000000000 00000 0000000000 0000000000 00000 0000000000 11111 1111111111 1111111111 11111 1111111111 1111111111 11111 1111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 Figure 4: Proof of Lemma 7.",
                "Dashed lines correspond to edges in E \\ E2 claim that bv = cv for any v ∈ S. Indeed, suppose that bv > cv for some v ∈ S (bv = cv for v ∈ S by construction).",
                "As b satisfies conditions (1)-(3), among the inequalities in (2) there is one that is tight for v and the bid vector b.",
                "That is, b(S \\ T) = c(T \\ S).",
                "By the construction of c , c (S \\ T) = c (T \\ S).",
                "Now since bw ≥ cw for all w ∈ S, bv > cv implies b (S \\T) > c (S \\T) = c (T \\S).",
                "But this violates (2).",
                "So we now know b = c .",
                "Hence, we have NTUmax(c , S) = P v∈S bv = NTUmin(c, S) < c(V \\ S), giving a contradiction to the fact that NTUmax(c , S) ≥ c (V \\S) which we proved in Lemma 7.",
                "As NTUmin(c, S) satisfies condition (1), it follows that we have NTUmin(c, S) ≥ c(S).",
                "Together will Lemma 8, this implies NTUmin(c, S) ≥ max{c(V \\ S), c(S)} ≥ c(V )/2.",
                "Combined with Lemma 5, this completes the proof of Theorem 4.",
                "REMARK 3.",
                "As NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), our bound of 2Δ extends to the smaller frugality ratios that we consider, i.e., φNTUmax(M) and φTUmax(M).",
                "It is not clear whether it extends to the larger frugality ratio φTUmin(M).",
                "However, the frugality ratio φTUmin(M) is not realistic because the payment bound TUmin(c) is inappropriately low - we show in Section 6 that TUmin(c) can be significantly smaller than the total cost of a cheapest vertex cover.",
                "Extensions We can also apply our results to monotone vertex-cover algorithms that do not necessarily output locally-optimal solutions.",
                "To do so, we simply take the vertex cover produced by any such algorithm and transform it into a locally-optimal one, considering the vertices in lexicographic order and replacing a vertex v with its neighbours whenever bv > P u∼v bu.",
                "Note that if a vertex u has been added to the vertex cover during this process, it means that it has a neighbour whose bid is higher than bu, so after one pass all vertices in the vertex cover satisfy bv ≤ P u∼v bu.",
                "This procedure is monotone in bids, and it can only decrease the cost of the vertex cover.",
                "Therefore, using it on top of a monotone allocation rule with approx342 imation ratio α, we obtain a monotone locally-optimal allocation rule with approximation ratio α.",
                "Combining it with threshold payments, we get an auction with φNTUmin ≤ 2Δ.",
                "Since any truthful auction has a monotone allocation rule, this procedure transforms any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio. 5.2 Lower bound In this subsection, we prove that the upper bound of Theorem 4 is essentially optimal.",
                "Our proof uses the techniques of [9], where the authors prove a similar result for shortest-path auctions.",
                "THEOREM 5.",
                "For any Δ > 0 and any n, there exist a graph G of maximum degree Δ and size N > n such that for any truthful mechanism M on G we have φNTUmin(M) ≥ Δ/2.",
                "PROOF.",
                "Given n and Δ, set k = n/2Δ .",
                "Let G be the graph that consists of k blocks B1, . . . , Bk of size 2Δ each, where each Bi is a complete bipartite graph with parts Li and Ri, |Li| = |Ri| = Δ.",
                "We will consider two families of cost vectors for G. Under a cost vector x ∈ X, each block Bi has one vertex of cost 1; all other vertices cost 0.",
                "Under a cost vector y ∈ Y , there is one block that has two vertices of cost 1, one in each part, all other blocks have one vertex of cost 1, and all other vertices cost 0.",
                "Clearly, |X| = (2Δ)k , |Y | = k(2Δ)k−1 Δ2 .",
                "We will now construct a bipartite graph W with the vertex set X ∪ Y as follows.",
                "Consider a cost vector y ∈ Y that has two vertices of cost 1 in Bi; let these vertices be vl ∈ Li and vr ∈ Ri.",
                "By changing the cost of either of these vertices to 0, we obtain a cost vector in X.",
                "Let xl and xr be the cost vectors obtained by changing the cost of vl and vr, respectively.",
                "The vertex cover chosen by M(y) must either contain all vertices in Li or it must contain all vertices in Ri.",
                "In the former case, we put in W an edge from y to xl and in the latter case we put in W an edge from y to xr (if the vertex cover includes all of Bi, W contains both of these edges).",
                "The graph W has at least k(2Δ)k−1 Δ2 edges, so there must exist an x ∈ X of degree at least kΔ/2.",
                "Let y1, . . . , ykΔ/2 be the other endpoints of the edges incident to x, and for each i = 1, . . . , kΔ/2, let vi be the vertex whose cost is different under x and yi; note that all vi are distinct.",
                "It is not hard to see that NTUmin(x) ≤ k: the cheapest vertex cover contains the all-0 part of each block, and we can satisfy conditions (1)-(3) by letting one of the vertices in the all-0 part of each block to bid 1, while all other the vertices in the cheapest set bid 0.",
                "On the other hand, by monotonicity of M we have vi ∈ M(x) for i = 1, . . . , kΔ/2 (vi is in the winning set under yi, and x is obtained from yi by decreasing the cost of vi), and moreover, the threshold bid of each vi is at least 1, so the total payment of M on x is at least kΔ/2.",
                "Hence, φNTUmin(M) ≥ M(x)/NTUmin(x) ≥ Δ/2.",
                "REMARK 4.",
                "The lower bound of Theorem 5 can be generalised to randomised mechanisms, where a randomised mechanism is considered to be truthful if it can be represented as a probability distribution over truthful mechanisms.",
                "In this case, instead of choosing the vertex x ∈ X with the highest degree, we put both (y, xl) and (y, xr) into W , label each edge with the probability that the respective part of the block is chosen, and pick x ∈ X with the highest weighted degree.",
                "The argument can be further extended to a more permissive definition of truthfulness for randomised mechanisms, but this discussion is beyond the scope of this paper. 6.",
                "PROPERTIES OF PAYMENT BOUNDS In this section we consider several desirable properties of payment bounds and evaluate the four payment bounds proposed in this paper with respect to them.",
                "The particular properties that we are interested in are independence of the choice of S (Section 6.3), monotonicity (Section 6.4.1), computational hardness (Section 6.4.2), and the relationship with other reasonable bounds, such as the total cost of the cheapest set (Section 6.1), or the total VCG payment (Section 6.2). 6.1 Comparison with total cost Our first requirement is that a payment bound should not be less than the total cost of the selected set.",
                "Payment bounds are used to evaluate the performance of set-system auctions.",
                "The latter have to satisfy individual rationality, i.e., the payment to each agent must be at least as large as his incurred costs; it is only reasonable to require the payment bound to satisfy the same requirement.",
                "Clearly, NTUmax(c) and NTUmin(c) satisfy this requirement due to condition (1), and so does TUmax(c), since TUmax(c) ≥ NTUmax(c).",
                "However, TUmin(c) fails this test.",
                "The example of Proposition 4 shows that for path auctions, TUmin(c) can be smaller than the total cost by a factor of 2.",
                "Moreover, there are set systems and cost vectors for which TUmin(c) is smaller than the cost of the cheapest set S by a factor of Ω(n).",
                "Consider, for example, the vertex-cover auction for the graph of Proposition 5 with the costs cX1 = · · · = cXn−2 = cXn−1 = 1, cX0 = 0.",
                "The cost of a cheapest vertex cover is n − 2, and the lexicographically first vertex cover of cost n−2 is {X0, X1, . . . , Xn−2}.",
                "The constraints in (2) are bXi + bX0 ≤ cXn−1 = 1.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bX1 = · · · = bXn−2 = 0, bX0 = 1, which means that TUmin(c) ≤ 1.",
                "This observation suggests that the payment bound TUmin(c) is too strong to be realistic, since it can be substantially lower than the cost of the cheapest feasible set.",
                "Nevertheless, some of the positive results that were proved in [16] for NTUmin(c) go through for TUmin(c) as well.",
                "In particular, one can show that if the feasible sets are the bases of a monopolyfree matroid, then φTUmin(VCG) = 1.",
                "To show that φTUmin(VCG) is at most 1, one must prove that the VCG payment is at most TUmin(c).",
                "This is shown for NTUmin(c) in the first paragraph of the proof of Theorem 5 in [16].",
                "Their argument does not use condition (1) at all, so it also applies to TUmin(c).",
                "On the other hand, φTUmin(VCG) ≥ 1 since φTUmin(VCG) ≥ φNTUmin(VCG) and φNTUmin(VCG) ≥ 1 by Proposition 7 of [16] (and also by Proposition 6 below). 6.2 Comparison with VCG payments Another measure of suitability for payment bounds is that they should not result in frugality ratios that are less then 1 for wellknown truthful mechanisms.",
                "If this is indeed the case, the payment bound may be too weak, as it becomes too easy to design mechanisms that perform well with respect to it.",
                "It particular, a reasonable requirement is that a payment bound should not exceed the total payment of the classical VCG mechanism.",
                "The following proposition shows that NTUmax(c), and therefore also NTUmin(c) and TUmin(c), do not exceed the VCG payment pVCG(c).",
                "The proof essentially follows the argument of Proposition 7 of [16] and can be found in the full version of this paper [8].",
                "PROPOSITION 6. φNTUmax(VCG) ≥ 1.",
                "Proposition 6 shows that none of the payment bounds TUmin(c), NTUmin(c) and NTUmax(c) exceeds the payment of VCG.",
                "However, the payment bound TUmax(c) can be larger that the total 343 VCG payment.",
                "In particular, for the instance in Proposition 5, the VCG payment is smaller than TUmax(c) by a factor of n − 2.",
                "We have already seen that TUmax(c) ≥ n − 2.",
                "On the other hand, under VCG, the threshold bid of any Xi, i = 1, . . . , n − 2, is 0: if any such vertex bids above 0, it is deleted from the winning set together with X0 and replaced with Xn−1.",
                "Similarly, the threshold bid of X0 is 1, because if X0 bids above 1, it can be replaced with Xn−1.",
                "So the VCG payment is 1.",
                "This result is not surprising: the definition of TUmax(c) implicitly assumes there is co-operation between the agents, while the computation of VCG payments does not take into account any interaction between them.",
                "Indeed, co-operation enables the agents to extract higher payments under VCG.",
                "That is, VCG is not groupstrategyproof.",
                "This suggests that as a payment bound, TUmax(c) may be too liberal, at least in a context where there is little or no co-operation between agents.",
                "Perhaps TUmax(c) can be a good benchmark for measuring the performance of mechanisms designed for agents that can form coalitions or make side payments to each other, in particular, group-strategyproof mechanisms.",
                "Another setting in which bounding φTUmax is still of some interest is when, for the underlying problem, the optimal allocation and VCG payments are NP-hard to compute.",
                "In this case, finding a polynomial-time computable mechanism with good frugality ratio with respect to TUmax(c) is a non-trivial task, while bounding the frugality ratio with respect to more challenging payment bounds could be too difficult.",
                "To illustrate this point, compare the proofs of Lemma 6 and Lemma 7: both require some effort, but the latter is much more difficult than the former. 6.3 The choice of S All payment bounds defined in this paper correspond to the total bid of all elements in the cheapest feasible set, where ties are broken lexicographically.",
                "While this definition ensures that our payment bounds are well-defined, the particular choice of the drawresolution rule appears arbitrary, and one might wonder if our payment bounds are sufficiently robust to be independent of this choice.",
                "It turns out that is indeed the case for NTUmin(c) and NTUmax(c), i.e., these bounds do not depend on the draw-resolution rule.",
                "To see this, suppose that two feasible sets S1 and S2 have the same cost.",
                "In the computation of NTUmin(c, S1), all vertices in S1 \\S2 would have to bid their true cost, since otherwise S2 would become cheaper than S1.",
                "Hence, any bid vector for S1 can only have be = ce for e ∈ S1 ∩ S2, and hence constitutes a valid bid vector for S2 and vice versa.",
                "A similar argument applies to NTUmax(c).",
                "However, for TUmin(c) and TUmax(c) this is not the case.",
                "For example, consider the set system E = {e1, e2, e3, e4, e5}, F = {S1 = {e1, e2}, S2 = {e2, e3, e4}, S3 = {e4, e5}} with the costs c1 = 2, c2 = c3 = c4 = 1, c5 = 3.",
                "The cheapest sets are S1 and S2.",
                "Now TUmax(c, S1) ≤ 4, as the total bid of the elements in S1 cannot exceed the total cost of S3.",
                "On the other hand, TUmax(c, S2) ≥ 5, as we can set b2 = 3, b3 = 0, b4 = 2.",
                "Similarly, TUmin(c, S1) = 4, because the inequalities in (2) are b1 ≤ 2 and b1 + b2 ≤ 4.",
                "But TUmin(c, S2) ≤ 3 as we can set b2 = 1, b3 = 2, b4 = 0. 6.4 Negative results for NTUmin(c) and TUmin(c) The results in [16] and our vertex cover results are proved for the frugality ratio φNTUmin.",
                "Indeed, it can be argued that φNTUmin is the best definition of frugality ratio, because among all reasonable payment bounds (i.e., ones that are at least as large as the cost of the cheapest feasible set), it is most demanding of the algorithm.",
                "However, NTUmin(c) is not always the easiest or the most natural payment bound to work with.",
                "In this subsection, we discuss several disadvantages of NTUmin(c) (and also TUmin(c)) as compared to NTUmax(c) and TUmax(c). 6.4.1 Nonmonotonicity The first problem with NTUmin(c) is that it is not monotone with respect to F, i.e., it may increase when one adds a feasible set to F. (It is, however, monotone in the sense that a losing agent cannot become a winner by raising his cost.)",
                "Intuitively, a good payment bound should satisfy this monotonicity requirement, as adding a feasible set increases the competition, so it should drive the prices down.",
                "Note that this indeed the case for NTUmax(c) and TUmax(c) since a new feasible set adds a constraint in (2), thus limiting the solution space for the respective linear program.",
                "PROPOSITION 7.",
                "Adding a feasible set to F can increase the value of NTUmin(c) by a factor of Ω(n).",
                "PROOF.",
                "Let E = {x, xx, y1, . . . , yn, z1, . . . , zn}.",
                "Set Y = {y1, . . . , yn}, S = Y ∪ {x}, Ti = Y \\ {yi} ∪ {zi}, i = 1, . . . , n, and suppose that F = {S, T1, . . . , Tn}.",
                "The costs are cx = 0, cxx = 0, cyi = 0, czi = 1 for i = 1, . . . , n. Note that S is the cheapest feasible set.",
                "Let F = F ∪ {T0}, where T0 = Y ∪ {xx}.",
                "For F, the bid vector by1 = · · · = byn = 0, bx = 1 satisfies (1), (2), and (3), so NTUmin(c) ≤ 1.",
                "For F , S is still the lexicographically-least cheapest set.",
                "Any optimal solution has bx = 0 (by constraint in (2) with T0).",
                "Condition (3) for yi implies bx + byi = czi = 1, so byi = 1 and NTUmin(c) = n. For path auctions, it has been shown [18] that NTUmin(c) is non-monotone in a slightly different sense, i.e., with respect to adding a new edge (agent) rather than a new feasible set (a team of existing agents).",
                "REMARK 5.",
                "We can also show that NTUmin(c) is non-monotone for vertex cover.",
                "In this case, adding a new feasible set corresponds to deleting edges from the graph.",
                "It turns out that deleting a single edge can increase NTUmin(c) by a factor of n − 2; the construction is similar to that of Proposition 5. 6.4.2 NP-Hardness Another problem with NTUmin(c, S) is that it is NP-hard to compute even if the number of feasible sets is polynomial in n. Again, this puts it at a disadvantage compared to NTUmax(c, S) and TUmax(c, S) (see Remark 1).",
                "THEOREM 6.",
                "Computing NTUmin(c) is NP-hard, even when the lexicographically-least feasible set S is given in the input.",
                "PROOF.",
                "We reduce EXACT COVER BY 3-SETS(X3C) to our problem.",
                "An instance of X3C is given by a universe G = {g1, . . . , gn} and a collection of subsets C1, . . . , Cm, Ci ⊂ G, |Ci| = 3, where the goal is to decide whether one can cover G by n/3 of these sets.",
                "Observe that if this is indeed the case, each element of G is contained in exactly one set of the cover.",
                "LEMMA 9.",
                "Consider a minimisation problem P of the following form: Minimise P i=1,...,n bi under conditions (1) bi ≥ 0 for all i = 1, . . . , n; (2) for any j = 1, . . . , k we have P bi∈Sj bi ≤ aj, where Sj ⊆ {b1, . . . , bn}; (3) for each bj , one of the constraints in (2) involving it is tight.",
                "For any such P, one can construct a set system S and a vector of costs c such that NTUmin(c) is the optimal solution to P. PROOF.",
                "The construction is straightforward: there is an element of cost 0 for each bi, an element of cost aj for each aj, the feasible solutions are {b1, . . . , bn}, or any set obtained from {b1, . . . , bn} by replacing the elements in Sj by aj. 344 By this lemma, all we have to do to prove Theorem 6 is to show how to solve X3C by using the solution to a minimisation problem of the form given in Lemma 9.",
                "We do this as follows.",
                "For each Ci, we introduce 4 variables xi, ¯xi, ai, and bi.",
                "Also, for each element gj of G there is a variable dj.",
                "We use the following set of constraints: • In (1), we have constraints xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 for all i = 1, . . . , m, j = 1, . . . , n. • In (2), for all i = 1, . . . , m, we have the following 5 constraints: xi + ¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi + bi ≤ 1.",
                "Also, for all j = 1, . . . , n we have a constraint of the form xi1 + · · · + xik + dj ≤ 1, where Ci1 , . . . , Cik are the sets that contain gj.",
                "The goal is to minimize z = P i(xi + ¯xi + ai + bi) + P j dj.",
                "Observe that for each j, there is only one constraint involving dj , so by condition (3) it must be tight.",
                "Consider the two constraints involving ai.",
                "One of them must be tight, and therefore xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1.",
                "Hence, for any feasible solution to (1)-(3) we have z ≥ m. Now, suppose that there is an exact set cover.",
                "Set dj = 0 for j = 1, . . . , n. Also, if Ci is included in this cover, set xi = 1, ¯xi = ai = bi = 0, otherwise set ¯xi = 1, xi = ai = bi = 0.",
                "Clearly, all inequalities in (2) are satisfied (we use the fact that each element is covered exactly once), and for each variable, one of the constraints involving it is tight.",
                "This assignment results in z = m. Conversely, suppose there is a feasible solution with z = m. As each addend of the form xi + ¯xi + ai + bi contributes at least 1, we have xi + ¯xi + ai + bi = 1 for all i, dj = 0 for all j.",
                "We will now show that for each i, either xi = 1 and ¯xi = 0, or xi = 0 and ¯xi = 1.",
                "For the sake of contradiction, suppose that xi = δ < 1, ¯xi = δ < 1.",
                "As one of the constraints involving ai must be tight, we have ai ≥ min{1 − δ, 1 − δ }.",
                "Similarly, bi ≥ min{1 − δ, 1 − δ }.",
                "Hence, xi + ¯xi + ai + bi = 1 = δ +δ +2 min{1−δ, 1−δ } > 1.",
                "To finish the proof, note that for each j = 1, . . . , m we have xi1 + · · · + xik + dj = 1 and dj = 0, so the subsets that correspond to xi = 1 constitute a set cover.",
                "REMARK 6.",
                "In the proofs of Proposition 7 and Theorem 6 all constraints in (1) are of the form be ≥ 0.",
                "Hence, the same results are true for TUmin(c).",
                "REMARK 7.",
                "For shortest-path auctions, the size of F can be superpolynomial.",
                "However, there is a polynomial-time separation oracle for constraints in (2) (to construct one, use any algorithm for finding shortest paths), so one can compute NTUmax(c) and TUmax(c) in polynomial time.",
                "On the other hand, recently and independently it was shown [18] that computing NTUmin(c) for shortest-path auctions is NP-hard. 7.",
                "REFERENCES [1] A. Archer and E. Tardos, Frugal path mechanisms.",
                "In Proceedings of the 13th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 991-999, 2002 [2] R. Bar-Yehuda, K. Bendel, A. Freund, and D. Rawitz, Local ratio: A unified framework for approximation algorithms.",
                "In Memoriam: Shimon Even 1935-2004.",
                "ACM Comput.",
                "Surv., 36(4):422-463, 2004 [3] R. Bar-Yehuda and S. Even, A local-ratio theorem for approximating the weighted vertex cover problem.",
                "Annals of Discrete Mathematics, 25:27-46, 1985 [4] E. Clarke, Multipart pricing of public goods.",
                "Public Choice, 8:17-33, 1971 [5] G. Calinescu, Bounding the payment of approximate truthful mechanisms.",
                "In Proceedings of the 15th International Symposium on Algorithms and Computation, pages 221-233, 2004 [6] A. Czumaj and A. Ronen, On the expected payment of mechanisms for task allocation.",
                "In Proceedings of the 5th ACM Conference on Electronic Commerce (EC04), 2004 [7] E. Elkind, True costs of cheap labor are hard to measure: edge deletion and VCG payments in graphs.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [8] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Frugality ratios and improved truthful mechanisms for vertex cover.",
                "Available from http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai, and K. Steiglitz, Frugality in path auctions.",
                "In Proceedings of the 15th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 694-702, 2004 [10] J. Feigenbaum, C. H. Papadimitriou, R. Sami, and S. Shenker, A BGP-based mechanism for lowest-cost routing.",
                "In Proceedings of the 21st Symposium on Principles of Distributed Computing, pages 173-182, 2002 [11] A. Fiat, A. Goldberg, J. Hartline, and A. Karlin, Competitive generalized auctions.",
                "In Proceedings of the 34th Annual ACM Symposium on Theory of Computation, pages 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra and A. Verma, Coalitional games on graphs: core structures, substitutes and frugality.",
                "In Proceedings of the 4th ACM Conference on Electronic Commerce (EC03), 2005 [13] A. Goldberg, J. Hartline, and A. Wright, Competitive auctions and digital goods.",
                "In Proceedings of the 12th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2001 [14] T. Groves, Incentives in teams.",
                "Econometrica, 41(4):617-631, 1973 [15] N. Immorlica, D. Karger, E. Nikolova, and R. Sami, First-price path auctions.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [16] A. R. Karlin, D. Kempe, and T. Tamir, Beyond VCG: frugality of truthful mechanisms.",
                "In Proceedings of the 46th Annual IEEE Symposium on Foundations of Computer Science, pages 615-626, 2005 [17] D. Kempe, Personal communication, 2006 [18] N. Chen, A. R. Karlin, Cheap labor can be expensive, In Proceedings of the 18th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2007 [19] N. Nisan and A. Ronen, Algorithmic mechanism design.",
                "In Proceedings of the 31st Annual ACM Symposium on Theory of Computation, pages 129-140, 1999 [20] A. Ronen and R. Talisman, Towards generic low payment mechanisms for decentralized task allocation.",
                "In Proceedings of the 7th International IEEE Conference on E-Commerce Technology, 2005 [21] K. Talwar, The price of truth: frugality in truthful mechanisms.",
                "In Proceedings of 20th International Symposium on Theoretical Aspects of Computer Science, 2003 [22] W. Vickrey, Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961 345"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Las abreviaturas TU y NTU corresponden, respectivamente, a una \"utilidad transferible\" y una utilidad no \"transferible\", es decir, la capacidad/incapacidad de los agentes para hacer pagos entre sí.",
                "La segunda modificación (\"utilidad transferible\") es más atractiva en el contexto del problema de maximización, ya que ambos asumen cierto grado de cooperación entre los agentes."
            ],
            "translated_text": "",
            "candidates": [
                "utilidad transferible",
                "utilidad transferible",
                "transferible",
                "utilidad transferible",
                "utilidad transferible"
            ],
            "error": []
        },
        "consecutive payment bound": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Frugality Ratios And Improved Truthful Mechanisms for Vertex Cover ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT In set-system auctions, there are several overlapping teams of agents, and a task that can be completed by any of these teams.",
                "The auctioneers goal is to hire a team and pay as little as possible.",
                "Examples of this setting include shortest-path auctions and vertex-cover auctions.",
                "Recently, Karlin, Kempe and Tamir introduced a new definition of frugality ratio for this problem.",
                "Informally, the frugality ratio is the ratio of the total payment of a mechanism to a desired payment bound.",
                "The ratio captures the extent to which the mechanism overpays, relative to perceived fair cost in a truthful auction.",
                "In this paper, we propose a new truthful polynomial-time auction for the vertex cover problem and bound its frugality ratio.",
                "We show that the solution quality is with a constant factor of optimal and the frugality ratio is within a constant factor of the best possible worst-case bound; this is the first auction for this problem to have these properties.",
                "Moreover, we show how to transform any truthful auction into a frugal one while preserving the approximation ratio.",
                "Also, we consider two natural modifications of the definition of Karlin et al., and we analyse the properties of the resulting payment bounds, such as monotonicity, computational hardness, and robustness with respect to the draw-resolution rule.",
                "We study the relationships between the different payment bounds, both for general set systems and for specific set-system auctions, such as path auctions and vertex-cover auctions.",
                "We use these new definitions in the proof of our main result for vertex-cover auctions via a bootstrapping technique, which may be of independent interest.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a set system auction there is a single buyer and many vendors that can provide various services.",
                "It is assumed that the buyers requirements can be satisfied by various subsets of the vendors; these subsets are called the feasible sets.",
                "A widely-studied class of setsystem auctions is path auctions, where each vendor is able to sell access to a link in a network, and the feasible sets are those sets whose links contain a path from a given source to a given destination; the study of these auctions has been initiated in the seminal paper by Nisan and Ronen [19] (see also [1, 10, 9, 6, 15, 7, 20]).",
                "We assume that each vendor has a cost of providing his services, but submits a possibly larger bid to the auctioneer.",
                "Based on these bids, the auctioneer selects a feasible subset of vendors, and makes payments to the vendors in this subset.",
                "Each selected vendor enjoys a profit of payment minus cost.",
                "Vendors want to maximise profit, while the buyer wants to minimise the amount he pays.",
                "A natural goal in this setting is to design a truthful auction, in which vendors have an incentive to bid their true cost.",
                "This can be achieved by paying each selected vendor a premium above her bid in such a way that the vendor has no incentive to overbid.",
                "An interesting question in mechanism design is how much the auctioneer will have to overpay in order to ensure truthful bids.",
                "In the context of path auctions this topic was first addressed by Archer and Tardos [1].",
                "They define the frugality ratio of a mechanism as the ratio between its total payment and the cost of the cheapest path disjoint from the path selected by the mechanism.",
                "They show that, for a large class of truthful mechanisms for this problem, the frugality ratio is as large as the number of edges in the shortest path.",
                "Talwar [21] extends this definition of frugality ratio to general set systems, and studies the frugality ratio of the classical VCG mechanism [22, 4, 14] for many specific set systems, such as minimum spanning trees and set covers.",
                "While the definition of frugality ratio proposed by [1] is wellmotivated and has been instrumental in studying truthful mechanisms for set systems, it is not completely satisfactory.",
                "Consider, for example, the graph of Figure 1 with the costs cAB = cBC = A B C D Figure 1: The diamond graph 336 cCD = 0, cAC = cBD = 1.",
                "This graph is 2-connected and the VCG payment to the winning path ABCD is bounded.",
                "However, the graph contains no A-D path that is disjoint from ABCD, and hence the frugality ratio of VCG on this graph remains undefined.",
                "At the same time, there is no monopoly, that is, there is no vendor that appears in all feasible sets.",
                "In auctions for other types of set systems, the requirement that there exist a feasible solution disjoint from the selected one is even more severe: for example, for vertex-cover auctions (where vendors correspond to the vertices of some underlying graph, and the feasible sets are vertex covers) the requirement means that the graph must be bipartite.",
                "To deal with this problem, Karlin et al. [16] suggest a better benchmark, which is defined for any monopoly-free set system.",
                "This quantity, which they denote by ν, intuitively corresponds to the value of a cheapest Nash equilibrium.",
                "Based on this new definition, the authors construct new mechanisms for the shortest path problem and show that the overpayment of these mechanisms is within a constant factor of optimal. 1.1 Our results Vertex cover auctions We propose a truthful polynomial-time auction for vertex cover that outputs a solution whose cost is within a factor of 2 of optimal, and whose frugality ratio is at most 2Δ, where Δ is the maximum degree of the graph (Theorem 4).",
                "We complement this result by proving (Theorem 5) that for any Δ and n, there are graphs of maximum degree Δ and size Θ(n) for which any truthful mechanism has frugality ratio at least Δ/2.",
                "This means that the solution quality of our auction is with a factor of 2 of optimal and the frugality ratio is within a factor of 4 of the best possible bound for worst-case inputs.",
                "To the best of our knowledge, this is the first auction for this problem that enjoys these properties.",
                "Moreover, we show how to transform any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio.",
                "Frugality ratios Our vertex cover results naturally suggest two modifications of the definition of ν in [16].",
                "These modifications can be made independently of each other, resulting in four different payment bounds TUmax, TUmin, NTUmax, and NTUmin, where NTUmin is equal to the original payment bound ν of in [16].",
                "All four payment bounds arise as Nash equilibria of certain games (see the full version of this paper [8]); the differences between them can be seen as the price of initiative and the price of cooperation (see Section 3).",
                "While our main result about vertex cover auctions (Theorem 4) is with respect to NTUmin = ν, we make use of the new definitions by first comparing the payment of our mechanism to a weaker bound NTUmax, and then bootstrapping from this result to obtain the desired bound.",
                "Inspired by this application, we embark on a further study of these payment bounds.",
                "Our results here are as follows: 1.",
                "We observe (Proposition 1) that the four payment bounds always obey a particular order that is independent of the choice of the set system and the cost vector, namely, TUmin ≤ NTUmin ≤ NTUmax ≤ TUmax.",
                "We provide examples (Proposition 5 and Corollaries 1 and 2) showing that for the vertex cover problem any two consecutive bounds can differ by a factor of n − 2, where n is the number of agents.",
                "We then show (Theorem 2) that this separation is almost best possible for general set systems by proving that for any set system TUmax/TUmin ≤ n. In contrast, we demonstrate (Theorem 3) that for path auctions TUmax/TUmin ≤ 2.",
                "We provide examples (Propositions 2, 3 and 4) showing that this bound is tight.",
                "We see this as an argument for the study of vertexcover auctions, as they appear to be more representative of the general team -selection problem than the widely studied path auctions. 2.",
                "We show (Theorem 1) that for any set system, if there is a cost vector for which TUmin and NTUmin differ by a factor of α, there is another cost vector that separates NTUmin and NTUmax by the same factor and vice versa; the same is true for the pairs (NTUmin, NTUmax) and (NTUmax, TUmax).",
                "This symmetry is quite surprising, since, e.g., TUmin and NTUmax are obtained from NTUmin by two very different transformations.",
                "This observation suggests that the four payment bounds should be studied in a unified framework; moreover, it leads us to believe that the bootstrapping technique of Theorem 4 may have other applications. 3.",
                "We evaluate the payment bounds introduced here with respect to a checklist of desirable features.",
                "In particular, we note that the payment bound ν = NTUmin of [16] exhibits some counterintuitive properties, such as nonmonotonicity with respect to adding a new feasible set (Proposition 7), and is NP-hard to compute (Theorem 6), while some of the other payment bounds do not suffer from these problems.",
                "This can be seen as an argument in favour of using weaker but efficiently computable bounds NTUmax and TUmax.",
                "Related work Vertex-cover auctions have been studied in the past by Talwar [21] and Calinescu [5].",
                "Both of these papers are based on the definition of frugality ratio used in [1]; as mentioned before, this means that their results only apply to bipartite graphs.",
                "Talwar [21] shows that the frugality ratio of VCG is at most Δ.",
                "However, since finding the cheapest vertex cover is an NP-hard problem, the VCG mechanism is computationally infeasible.",
                "The first (and, to the best of our knowledge, only) paper to investigate polynomial-time truthful mechanisms for vertex cover is [5].",
                "This paper studies an auction that is based on the greedy allocation algorithm, which has an approximation ratio of log n. While the main focus of [5] is the more general set cover problem, the results of [5] imply a frugality ratio of 2Δ2 for vertex cover.",
                "Our results improve on those of [21] as our mechanism is polynomial-time computable, as well as on those of [5], as our mechanism has a better approximation ratio, and we prove a stronger bound on the frugality ratio; moreover, this bound also applies to the mechanism of [5]. 2.",
                "PRELIMINARIES In most of this paper, we discuss auctions for set systems.",
                "A set system is a pair (E, F), where E is the ground set, |E| = n, and F is a collection of feasible sets, which are subsets of E. Two particular types of set systems are of interest to us - shortest path systems, in which the ground set consists of all edges of a network, and the feasible sets are paths between two specified vertices s and t, and vertex cover systems, in which the elements of the ground set are the vertices of a graph, and the feasible sets are vertex covers of this graph.",
                "In set system auctions, each element e of the ground set is owned by an independent agent and has an associated non-negative cost ce.",
                "The goal of the centre is to select (purchase) a feasible set.",
                "Each element e in the selected set incurs a cost of ce.",
                "The elements that are not selected incur no costs.",
                "The auction proceeds as follows: all elements of the ground set make their bids, the centre selects a feasible set based on the bids and makes payments to the agents.",
                "Formally, an auction is defined by an allocation rule A : Rn → F and a payment rule P : Rn → Rn .",
                "The allocation rule takes as input a vector of bids and decides which of the sets in F should be selected.",
                "The payment rule also takes as input a vector of bids and decides how much to pay to each agent.",
                "The standard requirements are individual rationality, i.e., the payment to each agent should be at least as high as his incurred cost (0 for agents not in the selected set and ce for agents in the 337 selected set) and incentive compatibility, or truthfulness, i.e., each agents dominant strategy is to bid his true cost.",
                "An allocation rule is monotone if an agent cannot increase his chance of getting selected by raising his bid.",
                "Formally, for any bid vector b and any e ∈ E, if e ∈ A(b) then e ∈ A(b1, . . . , be, . . . , bn) for any be > be.",
                "Given a monotone allocation rule A and a bid vector b, the threshold bid te of an agent e ∈ A(b) is the highest bid of this agent that still wins the auction, given that the bids of other participants remain the same.",
                "Formally, te = sup{be ∈ R | e ∈ A(b1, . . . , be, . . . , bn)}.",
                "It is well known (see, e.g. [19, 13]) that any auction that has a monotone allocation rule and pays each agent his threshold bid is truthful; conversely, any truthful auction has a monotone allocation rule.",
                "The VCG mechanism is a truthful mechanism that maximises the social welfare and pays 0 to the losing agents.",
                "For set system auctions, this simply means picking a cheapest feasible set, paying each agent in the selected set his threshold bid, and paying 0 to all other agents.",
                "Note, however, that the VCG mechanism may be difficult to implement, since finding a cheapest feasible set may be intractable.",
                "If U is a set of agents, c(U) denotes P w∈U cw.",
                "Similarly, b(U) denotes P w∈U bw. 3.",
                "FRUGALITY RATIOS We start by reproducing the definition of the quantity ν from [16, Definition 4].",
                "Let (E, F) be a set system and let S be a cheapest feasible set with respect to the true costs ce.",
                "Then ν(c, S) is the solution to the following optimisation problem.",
                "Minimise B = P e∈S be subject to (1) be ≥ ce for all e ∈ E (2) P e∈S\\T be ≤ P e∈T \\S ce for all T ∈ F (3) for every e ∈ S, there is a Te ∈ F such that e ∈ Te andP e ∈S\\Te be = P e ∈Te\\S ce The bound ν(c, S) can be seen as an outcome of a two-stage process, where first each agent e ∈ S makes a bid be stating how much it wants to be paid, and then the centre decides whether to accept these bids.",
                "The behaviour of both parties is affected by the following considerations.",
                "From the centres point of view, the set S must remain the most attractive choice, i.e., it must be among the cheapest feasible sets under the new costs ce = ce for e ∈ S, ce = be for e ∈ S (condition (2)).",
                "The reason for that is that if (2) is violated for some set T, the centre would prefer T to S. On the other hand, no agent would agree to a payment that does not cover his costs (condition (1)), and moreover, each agent tries to maximise his profit by bidding as high as possible, i.e., none of the agents can increase his bid without violating condition (2) (condition (3)).",
                "The centre wants to minimise the total payout, so ν(c, S) corresponds to the best possible outcome from the centres point of view.",
                "This definition captures many important aspects of our intuition about fair payments.",
                "However, it can be modified in two ways, both of which are still quite natural, but result in different payment bounds.",
                "First, we can consider the worst rather than the best possible outcome for the centre.",
                "That is, we can consider the maximum total payment that the agents can extract by jointly selecting their bids subject to (1), (2), and (3).",
                "Such a bound corresponds to maximising B subject to (1), (2), and (3) rather than minimising it.",
                "If it is the agents who make the original bids (rather than the centre), this kind of bidding behaviour is plausible.",
                "On the other hand, in a game in which the centre proposes payments to the agents in S and the agents accept them as long as (1), (2) and (3) are satisfied, we would be likely to observe a total payment of ν(c, S).",
                "Hence, the difference between these two definitions can be seen as the price of initiative.",
                "Second, the agents may be able to make payments to each other.",
                "In this case, if they can extract more money from the centre by agreeing on a vector of bids that violates individual rationality (i.e., condition (1)) for some bidders, they might be willing to do so, as the agents who are paid below their costs will be compensated by other members of the group.",
                "The bids must still be realistic, i.e., they have to satisfy be ≥ 0.",
                "The resulting change in payments can be seen as the price of co-operation and corresponds to replacing condition (1) with the following weaker condition (1∗ ): be ≥ 0 for all e ∈ E. (1∗ ) By considering all possible combinations of these modifications, we obtain four different payment bounds, namely • TUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1∗ ), (2), and (3). • TUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1∗ ), (2), and (3). • NTUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1), (2), and (3). • NTUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1), (2), (3).",
                "The abbreviations TU and NTU correspond, respectively, to transferable utility and non-transferable utility, i.e., the agents ability/inability to make payments to each other.",
                "For concreteness, we will take TUmin(c) to be TUmin(c, S) where S is the lexicographically least amongst the cheapest feasible sets.",
                "We define TUmax(c), NTUmin(c), NTUmax(c) and ν(c) similarly, though we will see in Section 6.3 that, in fact, NTUmin(c, S) and NTUmax(c, S) are independent of the choice of S. Note that the quantity ν(c) from [16] is NTUmin(c).",
                "The second modification (transferable utility) is more intuitively appealing in the context of the maximisation problem, as both assume some degree of co-operation between the agents.",
                "While the second modification can be made without the first, the resulting payment bound TUmin(c, S) is too strong to be a realistic benchmark, at least for general set systems.",
                "In particular, it can be smaller than the total cost of the cheapest feasible set S (see Section 6).",
                "Nevertheless, we provide the definition as well as some results about TUmin(c, S) in the paper, both for completeness and because we believe that it may help to understand which properties of the payment bounds are important for our proofs.",
                "Another possibility would be to introduce an additional constraint P e∈S be ≥P e∈S ce in the definition of TUmin(c, S) (note that this condition holds automatically for TUmax(c, S), as TUmax(c, S) ≥ NTUmax(c, S)); however, such a definition would have no direct game-theoretic interpretation, and some of our results (in particular, the ones in Section 4) would no longer be true.",
                "REMARK 1.",
                "For the payment bounds that are derived from maximisation problems, (i.e., TUmax(c, S) and NTUmax(c, S)), constraints of type (3) are redundant and can be dropped.",
                "Hence, TUmax(c, S) and NTUmax(c, S) are solutions to linear programs, and therefore can be computed in polynomial time as long as we have a separation oracle for constraints in (2).",
                "In contrast, 338 NTUmin(c, S) can be NP-hard to compute even if the size of F is polynomial (see Section 6).",
                "The first and third inequalities in the following observation follow from the fact that condition (1∗ ) is strictly weaker than condition (1).",
                "PROPOSITION 1.",
                "TUmin(c, S) ≤ NTUmin(c, S) ≤ NTUmax(c, S) ≤ TUmax(c, S).",
                "Let M be a truthful mechanism for (E, F).",
                "Let pM(c) denote the total payments of M when the actual costs are c. A frugality ratio of M with respect to a payment bound is the ratio between the payment of M and this payment bound.",
                "In particular, φTUmin(M) = sup c pM(c)/TUmin(c), φTUmax(M) = sup c pM(c)/TUmax(c), φNTUmin(M) = sup c pM(c)/NTUmin(c), φNTUmax(M) = sup c pM(c)/NTUmax(c).",
                "We conclude this section by showing that there exist set systems and respective cost vectors for which all four payment bounds are different.",
                "In the next section, we quantify this difference, both for general set systems, and for specific types of set systems, such as path auctions or vertex cover auctions.",
                "EXAMPLE 1.",
                "Consider the shortest-path auction on the graph of Figure 1.",
                "The cheapest feasible sets are all paths from A to D. It can be verified, using the reasoning of Propositions 2 and 3 below, that for the cost vector cAB = cCD = 2, cBC = 1, cAC = cBD = 5, we have • TUmax(c) = 10 (with bAB = bCD = 5, bBC = 0), • NTUmax(c) = 9 (with bAB = bCD = 4, bBC = 1), • NTUmin(c) = 7 (with bAB = bCD = 2, bBC = 3), • TUmin(c) = 5 (with bAB = bCD = 0, bBC = 5). 4.",
                "COMPARING PAYMENT BOUNDS 4.1 Path auctions We start by showing that for path auctions any two <br>consecutive payment bound</br>s can differ by at least a factor of 2.",
                "PROPOSITION 2.",
                "There is an instance of the shortest-path problem for which we have NTUmax(c)/NTUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is due to David Kempe [17].",
                "Consider the graph of Figure 1 with the edge costs cAB = cBC = cCD = 0, cAC = cBD = 1.",
                "Under these costs, ABCD is the cheapest path.",
                "The inequalities in (2) are bAB + bBC ≤ cAC = 1, bBC + bCD ≤ cBD = 1.",
                "By condition (3), both of these inequalities must be tight (the former one is the only inequality involving bAB, and the latter one is the only inequality involving bCD).",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 0, bCD ≥ 0.",
                "Now, if the goal is to maximise bAB + bBC + bCD, the best choice is bAB = bCD = 1, bBC = 0, so NTUmax(c) = 2.",
                "On the other hand, if the goal is to minimise bAB + bBC + bCD, one should set bAB = bCD = 0, bBC = 1, so NTUmin(c) = 1.",
                "PROPOSITION 3.",
                "There is an instance of the shortest-path problem for which we have TUmax(c)/NTUmax(c) ≥ 2.",
                "PROOF.",
                "Again, consider the graph of Figure 1.",
                "Let the edge costs be cAB = cCD = 0, cBC = 1, cAC = cBD = 1.",
                "ABCD is the lexicographically-least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "The inequalities in (2) are the same as in the previous example, and by the same argument both of them are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 1, bCD ≥ 0.",
                "Our goal is to maximise bAB + bBC + bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 0, bBC = 1, so NTUmax(c) = 1.",
                "Otherwise, we can set bAB = bCD = 1, bBC = 0, so TUmax(c) ≥ 2.",
                "PROPOSITION 4.",
                "There is an instance of the shortest-path problem for which we have NTUmin(c)/TUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is also based on the graph of Figure 1.",
                "The edge costs are cAB = cCD = 1, cBC = 0, cAC = cBD = 1.",
                "ABCD is the lexicographically least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "Again, the inequalities in (2) are the same, and both are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 1, bBC ≥ 0, bCD ≥ 1.",
                "Our goal is to minimise bAB + bBC +bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 1, bBC = 0, so NTUmin(c) = 2.",
                "Otherwise, we can set bAB = bCD = 0, bBC = 1, so TUmin(c) ≤ 1.",
                "In Section 4.4 (Theorem 3), we show that the separation results in Propositions 2, 3, and 4 are optimal. 4.2 Connections between separation results The separation results for path auctions are obtained on the same graph using very similar cost vectors.",
                "It turns out that this is not coincidental.",
                "Namely, we can prove the following theorem.",
                "THEOREM 1.",
                "For any set system (E, F), and any feasible set S, max c TUmax(c, S) NTUmax(c, S) = max c NTUmax(c, S) NTUmin(c, S) , max c NTUmax(c, S) NTUmin(c, S) = max c NTUmin(c, S) TUmin(c, S) , where the maximum is over all cost vectors c for which S is a cheapest feasible set.",
                "The proof of the theorem follows directly from the four lemmas proved below; more precisely, the first equality in Theorem 1 is obtained by combining Lemmas 1 and 2, and the second equality is obtained by combining Lemmas 3 and 4.",
                "We prove Lemma 1 here; the proofs of Lemmas 2- 4 are similar and can be found in the full version of this paper [8].",
                "LEMMA 1.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and TUmax(c, S)/NTUmax(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α.",
                "PROOF.",
                "Suppose that TUmax(c, S) = X and NTUmax(c, S) = Y where X/Y = α.",
                "Assume without loss of generality that S consists of elements 1, . . . , k, and let b1 = (b1 1, . . . , b1 k) and b2 = (b2 1, . . . , b2 k) be the bid vectors that correspond to TUmax(c, S) and NTUmax(c, S), respectively.",
                "Construct the cost vector c by setting ci = ci for i ∈ S, ci = min{ci, b1 i } for i ∈ S. Clearly, S is a cheapest set under c .",
                "Moreover, as the costs of elements outside of S remained the same, the right-hand sides of all constraints in (2) did not change, so any bid vector that satisfies (2) and (3) with respect to c, also satisfies them with respect to c .",
                "We will construct two bid vectors b3 and b4 that satisfy conditions (1), (2), and (3) for the cost vector c , and 339 X X X X X 0 X 12 3 X 4 5 6 Figure 2: Graph that separates payment bounds for vertex cover, n = 7 have P i∈S b3 i = X, P i∈S b4 i = Y .",
                "As NTUmax(c , S) ≥ X and NTUmin(c , S) ≤ Y , this implies the lemma.",
                "We can set b3 i = b1 i : this bid vector satisfies conditions (2) and (3) since b1 does, and we have b1 i ≥ min{ci, b1 i } = ci, which means that b3 satisfies condition (1).",
                "Furthermore, we can set b4 i = b2 i .",
                "Again, b4 satisfies conditions (2) and (3) since b2 does, and since b2 satisfies condition (1), we have b2 i ≥ ci ≥ ci, which means that b4 satisfies condition (1).",
                "LEMMA 2.",
                "Suppose c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and TUmax(c , S)/NTUmax(c , S) ≥ α. LEMMA 3.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmin(c , S)/TUmin(c , S) ≥ α. LEMMA 4.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmin(c, S)/TUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α. 4.3 Vertex-cover auctions In contrast to the case of path auctions, for vertex-cover auctions the gap between NTUmin(c) and NTUmax(c) (and hence between NTUmax(c) and TUmax(c), and between TUmin(c) and NTUmin(c)) can be proportional to the size of the graph.",
                "PROPOSITION 5.",
                "For any n ≥ 3, there is a an n-vertex graph and a cost vector c for which TUmax(c)/NTUmax(c) ≥ n − 2.",
                "PROOF.",
                "The underlying graph consists of an (n − 1)-clique on the vertices X1, . . . , Xn−1, and an extra vertex X0 adjacent to Xn−1.",
                "The costs are cX1 = cX2 = · · · = cXn−2 = 0, cX0 = cXn−1 = 1.",
                "We can assume that S = {X0, X1, . . . , Xn−2} (this is the lexicographically first vertex cover of cost 1).",
                "For this set system, the constraints in (2) are bXi + bX0 ≤ cXn−1 = 1 for i = 1, . . . , n − 2.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bXi = 1 for i = 1, . . . , n − 2, bX0 = 0.",
                "Hence, TUmax(c) ≥ n − 2.",
                "For NTUmax(c), there is an additional constraint bX0 ≥ 1, so the best we can do is to set bXi = 0 for i = 1, . . . , n − 2, bX0 = 1, which implies NTUmax(c) = 1.",
                "Combining Proposition 5 with Lemmas 1 and 3, we derive the following corollaries.",
                "COROLLARY 1.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmax(c)/NTUmin(c) ≥ n − 2.",
                "COROLLARY 2.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmin(c)/TUmin(c) ≥ n − 2. j+2ix ij P \\ P ij+2P \\ P yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 P \\ P Figure 3: Proof of Theorem 3: constraints for ˆPij and ˆPij+2 do not overlap 4.4 Upper bounds It turns out that the lower bound proved in the previous subsection is almost tight.",
                "More precisely, the following theorem shows that no two payment bounds can differ by more than a factor of n; moreover, this is the case not just for the vertex cover problem, but for general set systems.",
                "We bound the gap between TUmax(c) and TUmin(c).",
                "Since TUmin(c) ≤ NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), this bound applies to any pair of payment bounds.",
                "THEOREM 2.",
                "For any set system (E, F) and any cost vector c, we have TUmax(c)/TUmin(c) ≤ n. PROOF.",
                "Assume wlog that the winning set S consists of elements 1, . . . , k. Let c1, . . . , ck be the true costs of elements in S, let b1, . . . , bk be their bids that correspond to TUmin(c), and let b1 , . . . , bk be their bids that correspond to TUmax(c).",
                "Consider the conditions (2) and (3) for S. One can pick a subset L of at most k inequalities in (2) so that for each i = 1, . . . , k there is at least one inequality in L that is tight for bi.",
                "Suppose that the jth inequality in L is of the form bi1 + · · · + bit ≤ c(Tj \\ S).",
                "For bi, all inequalities in L are, in fact, equalities.",
                "Hence, by adding up all of them we obtain k P i=1,...,k bi ≥ P j=1,...,k c(Tj \\ S).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c(Tj \\ S).",
                "Combining these two inequalities, we obtain nTUmin(c) ≥ kTUmin(c) ≥ TUmax(c).",
                "REMARK 2.",
                "The final line of the proof of Theorem 2 shows that, in fact, the upper bound on TUmax(c)/TUmin(c) can be strengthened to the size of the winning set, k. Note that in Proposition 5, as well as in Corollaries 1 and 2, k = n−1, so these results do not contradict each other.",
                "For path auctions, this upper bound can be improved to 2, matching the lower bounds of Section 4.1.",
                "THEOREM 3.",
                "For any instance of the shortest path problem, TUmax(c) ≤ 2 TUmin(c).",
                "PROOF.",
                "Given a network (G, s, t), assume without loss of generality that the lexicographically-least cheapest s-t path, P, in G is {e1, . . . , ek}, where e1 = (s, v1), e2 = (v1, v2), . . . , ek = (vk−1, t).",
                "Let c1, . . . , ck be the true costs of e1, . . . , ek, and let b = (b1, . . . , bk) and b = (b1 , . . . , bk ) be bid vectors that correspond to TUmin(c) and TUmax(c), respectively.",
                "For any i = 1, . . . , k, there is a constraint in (2) that is tight for bi with respect to the bid vector b , i.e., an s-t path Pi that avoids ei and satisfies b (P \\Pi) = c(Pi \\P).",
                "We can assume without loss of generality that Pi coincides with P up to some vertex xi, then deviates from P to avoid ei, and finally returns to P at a vertex 340 yi and coincides with P from then on (clearly, it might happen that s = xi or t = yi).",
                "Indeed, if Pi deviates from P more than once, one of these deviations is not necessary to avoid ei and can be replaced with the respective segment of P without increasing the cost of Pi.",
                "Among all paths of this form, let ˆPi be the one with the largest value of yi, i.e., the rightmost one.",
                "This path corresponds to an inequality Ii of the form bxi+1 + · · · + byi ≤ c( ˆPi \\ P).",
                "As in the proof of Theorem 2, we construct a set of tight constraints L such that every variable bi appears in at least one of these constraints; however, now we have to be more careful about the choice of constraints in L. We construct L inductively as follows.",
                "Start by setting L = {I1}.",
                "At the jth step, suppose that all variables up to (but not including) bij appear in at least one inequality in L. Add Iij to L. Note that for any j we have yij+1 > yij .",
                "This is because the inequalities added to L during the first j steps did not cover bij+1 .",
                "See Figure 3.",
                "Since yij+2 > yij+1 , we must also have xij+2 > yij : otherwise, ˆPij+1 would not be the rightmost constraint for bij+1 .",
                "Therefore, the variables in Iij+2 and Iij do not overlap, and hence no bi can appear in more than two inequalities in L. Now we follow the argument of the proof of Theorem 2 to finish.",
                "By adding up all of the (tight) inequalities in L for bi we obtain 2 P i=1,...,k bi ≥ P j=1,...,k c( ˆPj \\ P).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c( ˆPj \\ P), so TUmax(c) ≤ 2TUmin(c). 5.",
                "TRUTHFUL MECHANISMS FOR VERTEX COVER Recall that for a vertex-cover auction on a graph G = (V, E), an allocation rule is an algorithm that takes as input a bid bv for each vertex and returns a vertex cover ˆS of G. As explained in Section 2, we can combine a monotone allocation rule with threshold payments to obtain a truthful auction.",
                "Two natural examples of monotone allocation rules are Aopt, i.e., the algorithm that finds an optimal vertex cover, and the greedy algorithm AGR.",
                "However, Aopt cannot be guaranteed to run in polynomial time unless P = NP and AGR has approximation ratio of log n. Another approximation algorithm for vertex cover, which has approximation ratio 2, is the local ratio algorithm ALR [2, 3].",
                "This algorithm considers the edges of G one by one.",
                "Given an edge e = (u, v), it computes = min{bu, bv} and sets bu = bu − , bv = bv − .",
                "After all edges have been processed, ALR returns the set of vertices {v | bv = 0}.",
                "It is not hard to check that if the order in which the edges are considered is independent of the bids, then this algorithm is monotone as well.",
                "Hence, we can use it to construct a truthful auction that is guaranteed to select a vertex cover whose cost is within a factor of 2 from the optimal.",
                "However, while the quality of the solution produced by ALR is much better than that of AGR, we still need to show that its total payment is not too high.",
                "In the next subsection, we bound the frugality ratio of ALR (and, more generally, all algorithms that satisfy the condition of local optimality, defined later) by 2Δ, where Δ is the maximum degree of G. We then prove a matching lower bound showing that for some graphs the frugality ratio of any truthful auction is at least Δ/2. 5.1 Upper bound We say that an allocation rule is locally optimal if whenever bv >P w∼v bw, the vertex v is not chosen.",
                "Note that for any such rule the threshold bid of v satisfies tv ≤ P w∼v bw.",
                "CLAIM 1.",
                "The algorithms Aopt, AGR, and ALR are locally optimal.",
                "THEOREM 4.",
                "Any vertex cover auction M that has a locally optimal and monotone allocation rule and pays each agent his threshold bid has frugality ratio φNTUmin(M) ≤ 2Δ.",
                "To prove Theorem 4, we first show that the total payment of any locally optimal mechanism does not exceed Δc(V ).",
                "We then demonstrate that NTUmin(c) ≥ c(V )/2.",
                "By combining these two results, the theorem follows.",
                "LEMMA 5.",
                "Consider a graph G = (V, E) with maximum degree Δ.",
                "Let M be a vertex-cover auction on G that satisfies the conditions of Theorem 4.",
                "Then for any cost vector c, the total payment of M satisfies pM(c) ≤ Δc(V ).",
                "PROOF.",
                "First note that any such auction is truthful, so we can assume that each agents bid is equal to his cost.",
                "Let ˆS be the vertex cover selected by M. Then by local optimality pM(c) = X v∈ ˆS tv ≤ X v∈ ˆS X w∼v cw ≤ X w∈V Δcw = Δc(V ).",
                "We now derive a lower bound on TUmax(c); while not essential for the proof of Theorem 4, it helps us build the intuition necessary for that proof.",
                "LEMMA 6.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, TUmax(c, S) ≥ c(V \\ S) PROOF.",
                "For a vertex w with at least one neighbour in S, let d(w) denote the number of neighbours that w has in S. Consider the bid vector b in which, for each v ∈ S, bv = P w∼v,w∈S cw d(w) .",
                "Then P v∈S bv = P v∈S P w∼v,w∈S cw/d(w) = P w /∈S cw = c(V \\ S).",
                "To finish we want to show that b is feasible in the sense that it satisfies (2).",
                "Consider a vertex cover T, and extend the bid vector b by assigning bv = cv for v /∈ S. Then b(T) = c(T \\S)+b(S∩T) ≥ c(T \\S)+ X v∈S∩T X w∈S∩T :w∼v cw d(w) , and since all edges between S ∩ T and S go to S ∩ T, the righthand-side is equal to c(T \\S)+ X w∈S∩T cw = c(T \\S)+c(S ∩T) = c(V \\S) = b(S).",
                "Next, we prove a lower bound on NTUmax(c, S); we will then use it to obtain a lower bound on NTUmin(c).",
                "LEMMA 7.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmax(c, S) ≥ c(V \\ S) PROOF.",
                "If c(S) ≥ c(V \\ S), by condition (1) we are done.",
                "Therefore, for the rest of the proof we assume that c(S) < c(V \\ S).",
                "We show how to construct a bid vector (be)e∈S that satisfies conditions (1) and (2) such that b(S) ≥ c(V \\ S); clearly, this implies NTUmax(c, S) ≥ c(V \\ S).",
                "Recall that a network flow problem is described by a directed graph Γ = (VΓ, EΓ), a source node s ∈ VΓ, a sink node t ∈ VΓ, and a vector of capacity constraints ae, e ∈ EΓ.",
                "Consider a network (VΓ, EΓ) such that VΓ = V ∪{s, t}, EΓ = E1 ∪E2 ∪E3, where E1 = {(s, v) | v ∈ S}, E2 = {(v, w) | v ∈ S, w ∈ 341 V \\ S, (v, w) ∈ E}, E3 = {(w, t) | w ∈ V \\ S}.",
                "Since S is a vertex cover for G, no edge of E can have both of its endpoints in V \\ S, and by construction, E2 contains no edges with both endpoints in S. Therefore, the graph (V, E2) is bipartite with parts (S, V \\ S).",
                "Set the capacity constraints for e ∈ EΓ as follows: a(s,v) = cv, a(w,t) = cw, a(v,w) = +∞ for all v ∈ S, w ∈ V \\ S. Recall that a cut is a partition of the vertices in VΓ into two sets C1 and C2 so that s ∈ C1, t ∈ C2; we denote such a cut by C = (C1, C2).",
                "Abusing notation, we write e = (u, v) ∈ C if u ∈ C1, v ∈ C2 or u ∈ C2, v ∈ C1, and say that such an edge e = (u, v) crosses the cut C. The capacity of a cut C is computed as cap(C) = P (v,w)∈C a(v,w).",
                "We have cap(s, V ∪{t}) = c(S), cap({s} ∪ V, t) = c(V \\ S).",
                "Let Cmin = ({s} ∪ S ∪ W , {t} ∪ S ∪ W ) be a minimum cut in Γ, where S , S ⊆ S, W , W ⊆ V \\ S. See Figure 4.",
                "As cap(Cmin) ≤ cap(s, V ∪ {t}) = c(S) < +∞, and any edge in E2 has infinite capacity, no edge (u, v) ∈ E2 crosses Cmin.",
                "Consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Clearly, C = ({s} ∪ S ∪ W , {t}) is a minimum cut in Γ (otherwise, there would exist a smaller cut for Γ).",
                "As cap(C ) = c(W ), we have c(S ) ≥ c(W ).",
                "Now, consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Similarly, C = ({s}, S ∪ W ∪ {t}) is a minimum cut in Γ , cap(C ) = c(S ).",
                "As the size of a maximum flow from s to t is equal to the capacity of a minimum cut separating s and t, there exists a flow F = (fe)e∈EΓ of size c(S ).",
                "This flow has to saturate all edges between s and S , i.e., f(s,v) = cv for all v ∈ S .",
                "Now, increase the capacities of all edges between s and S to +∞.",
                "In the modified network, the capacity of a minimum cut (and hence the size of a maximum flow) is c(W ), and a maximum flow F = (fe)e∈EΓ can be constructed by greedily augmenting F. Set bv = cv for all v ∈ S , bv = f(s,v) for all v ∈ S .",
                "As F is constructed by augmenting F, we have bv ≥ cv for all v ∈ S, i.e., condition (1) is satisfied.",
                "Now, let us check that no vertex cover T ⊆ V can violate condition (2).",
                "Set T1 = T ∩ S , T2 = T ∩ S , T3 = T ∩ W , T4 = T ∩ W ; our goal is to show that b(S \\ T1) + b(S \\ T2) ≤ c(T3)+c(T4).",
                "Consider all edges (u, v) ∈ E such that u ∈ S \\T1.",
                "If (u, v) ∈ E2 then v ∈ T3 (no edge in E2 can cross the cut), and if u, v ∈ S then v ∈ T1∪T2.",
                "Hence, T1∪T3∪S is a vertex cover for G, and therefore c(T1)+ c(T3)+ c(S ) ≥ c(S) = c(T1)+ c(S \\ T1) + c(S ).",
                "Consequently, c(T3) ≥ c(S \\ T1) = b(S \\ T1).",
                "Now, consider the vertices in S \\T2.",
                "Any edge in E2 that starts in one of these vertices has to end in T4 (this edge has to be covered by T, and it cannot go across the cut).",
                "Therefore, the total flow out of S \\T2 is at most the total flow out of T4, i.e., b(S \\T2) ≤ c(T4).",
                "Hence, b(S \\ T1) + b(S \\ T2) ≤ c(T3) + c(T4).",
                "Finally, we derive a lower bound on the payment bound that is of interest to us, namely, NTUmin(c).",
                "LEMMA 8.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmin(c, S) ≥ c(V \\ S) PROOF.",
                "Suppose for contradiction that c is a cost vector with minimum-cost vertex cover S and NTUmin(c, S) < c(V \\S).",
                "Let b be the corresponding bid vector and let c be a new cost vector with cv = bv for v ∈ S and cv = cv for v ∈ S. Condition (2) guarantees that S is an optimal solution to the cost vector c .",
                "Now compute a bid vector b corresponding to NTUmax(c , S).",
                "We S W S W s t T1 T3 T2 T4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 00 11 11 0 00 1 11 0 00 1 11 0 00 1 11 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00000 0000000000 0000000000 00000 0000000000 0000000000 00000 0000000000 11111 1111111111 1111111111 11111 1111111111 1111111111 11111 1111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 Figure 4: Proof of Lemma 7.",
                "Dashed lines correspond to edges in E \\ E2 claim that bv = cv for any v ∈ S. Indeed, suppose that bv > cv for some v ∈ S (bv = cv for v ∈ S by construction).",
                "As b satisfies conditions (1)-(3), among the inequalities in (2) there is one that is tight for v and the bid vector b.",
                "That is, b(S \\ T) = c(T \\ S).",
                "By the construction of c , c (S \\ T) = c (T \\ S).",
                "Now since bw ≥ cw for all w ∈ S, bv > cv implies b (S \\T) > c (S \\T) = c (T \\S).",
                "But this violates (2).",
                "So we now know b = c .",
                "Hence, we have NTUmax(c , S) = P v∈S bv = NTUmin(c, S) < c(V \\ S), giving a contradiction to the fact that NTUmax(c , S) ≥ c (V \\S) which we proved in Lemma 7.",
                "As NTUmin(c, S) satisfies condition (1), it follows that we have NTUmin(c, S) ≥ c(S).",
                "Together will Lemma 8, this implies NTUmin(c, S) ≥ max{c(V \\ S), c(S)} ≥ c(V )/2.",
                "Combined with Lemma 5, this completes the proof of Theorem 4.",
                "REMARK 3.",
                "As NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), our bound of 2Δ extends to the smaller frugality ratios that we consider, i.e., φNTUmax(M) and φTUmax(M).",
                "It is not clear whether it extends to the larger frugality ratio φTUmin(M).",
                "However, the frugality ratio φTUmin(M) is not realistic because the payment bound TUmin(c) is inappropriately low - we show in Section 6 that TUmin(c) can be significantly smaller than the total cost of a cheapest vertex cover.",
                "Extensions We can also apply our results to monotone vertex-cover algorithms that do not necessarily output locally-optimal solutions.",
                "To do so, we simply take the vertex cover produced by any such algorithm and transform it into a locally-optimal one, considering the vertices in lexicographic order and replacing a vertex v with its neighbours whenever bv > P u∼v bu.",
                "Note that if a vertex u has been added to the vertex cover during this process, it means that it has a neighbour whose bid is higher than bu, so after one pass all vertices in the vertex cover satisfy bv ≤ P u∼v bu.",
                "This procedure is monotone in bids, and it can only decrease the cost of the vertex cover.",
                "Therefore, using it on top of a monotone allocation rule with approx342 imation ratio α, we obtain a monotone locally-optimal allocation rule with approximation ratio α.",
                "Combining it with threshold payments, we get an auction with φNTUmin ≤ 2Δ.",
                "Since any truthful auction has a monotone allocation rule, this procedure transforms any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio. 5.2 Lower bound In this subsection, we prove that the upper bound of Theorem 4 is essentially optimal.",
                "Our proof uses the techniques of [9], where the authors prove a similar result for shortest-path auctions.",
                "THEOREM 5.",
                "For any Δ > 0 and any n, there exist a graph G of maximum degree Δ and size N > n such that for any truthful mechanism M on G we have φNTUmin(M) ≥ Δ/2.",
                "PROOF.",
                "Given n and Δ, set k = n/2Δ .",
                "Let G be the graph that consists of k blocks B1, . . . , Bk of size 2Δ each, where each Bi is a complete bipartite graph with parts Li and Ri, |Li| = |Ri| = Δ.",
                "We will consider two families of cost vectors for G. Under a cost vector x ∈ X, each block Bi has one vertex of cost 1; all other vertices cost 0.",
                "Under a cost vector y ∈ Y , there is one block that has two vertices of cost 1, one in each part, all other blocks have one vertex of cost 1, and all other vertices cost 0.",
                "Clearly, |X| = (2Δ)k , |Y | = k(2Δ)k−1 Δ2 .",
                "We will now construct a bipartite graph W with the vertex set X ∪ Y as follows.",
                "Consider a cost vector y ∈ Y that has two vertices of cost 1 in Bi; let these vertices be vl ∈ Li and vr ∈ Ri.",
                "By changing the cost of either of these vertices to 0, we obtain a cost vector in X.",
                "Let xl and xr be the cost vectors obtained by changing the cost of vl and vr, respectively.",
                "The vertex cover chosen by M(y) must either contain all vertices in Li or it must contain all vertices in Ri.",
                "In the former case, we put in W an edge from y to xl and in the latter case we put in W an edge from y to xr (if the vertex cover includes all of Bi, W contains both of these edges).",
                "The graph W has at least k(2Δ)k−1 Δ2 edges, so there must exist an x ∈ X of degree at least kΔ/2.",
                "Let y1, . . . , ykΔ/2 be the other endpoints of the edges incident to x, and for each i = 1, . . . , kΔ/2, let vi be the vertex whose cost is different under x and yi; note that all vi are distinct.",
                "It is not hard to see that NTUmin(x) ≤ k: the cheapest vertex cover contains the all-0 part of each block, and we can satisfy conditions (1)-(3) by letting one of the vertices in the all-0 part of each block to bid 1, while all other the vertices in the cheapest set bid 0.",
                "On the other hand, by monotonicity of M we have vi ∈ M(x) for i = 1, . . . , kΔ/2 (vi is in the winning set under yi, and x is obtained from yi by decreasing the cost of vi), and moreover, the threshold bid of each vi is at least 1, so the total payment of M on x is at least kΔ/2.",
                "Hence, φNTUmin(M) ≥ M(x)/NTUmin(x) ≥ Δ/2.",
                "REMARK 4.",
                "The lower bound of Theorem 5 can be generalised to randomised mechanisms, where a randomised mechanism is considered to be truthful if it can be represented as a probability distribution over truthful mechanisms.",
                "In this case, instead of choosing the vertex x ∈ X with the highest degree, we put both (y, xl) and (y, xr) into W , label each edge with the probability that the respective part of the block is chosen, and pick x ∈ X with the highest weighted degree.",
                "The argument can be further extended to a more permissive definition of truthfulness for randomised mechanisms, but this discussion is beyond the scope of this paper. 6.",
                "PROPERTIES OF PAYMENT BOUNDS In this section we consider several desirable properties of payment bounds and evaluate the four payment bounds proposed in this paper with respect to them.",
                "The particular properties that we are interested in are independence of the choice of S (Section 6.3), monotonicity (Section 6.4.1), computational hardness (Section 6.4.2), and the relationship with other reasonable bounds, such as the total cost of the cheapest set (Section 6.1), or the total VCG payment (Section 6.2). 6.1 Comparison with total cost Our first requirement is that a payment bound should not be less than the total cost of the selected set.",
                "Payment bounds are used to evaluate the performance of set-system auctions.",
                "The latter have to satisfy individual rationality, i.e., the payment to each agent must be at least as large as his incurred costs; it is only reasonable to require the payment bound to satisfy the same requirement.",
                "Clearly, NTUmax(c) and NTUmin(c) satisfy this requirement due to condition (1), and so does TUmax(c), since TUmax(c) ≥ NTUmax(c).",
                "However, TUmin(c) fails this test.",
                "The example of Proposition 4 shows that for path auctions, TUmin(c) can be smaller than the total cost by a factor of 2.",
                "Moreover, there are set systems and cost vectors for which TUmin(c) is smaller than the cost of the cheapest set S by a factor of Ω(n).",
                "Consider, for example, the vertex-cover auction for the graph of Proposition 5 with the costs cX1 = · · · = cXn−2 = cXn−1 = 1, cX0 = 0.",
                "The cost of a cheapest vertex cover is n − 2, and the lexicographically first vertex cover of cost n−2 is {X0, X1, . . . , Xn−2}.",
                "The constraints in (2) are bXi + bX0 ≤ cXn−1 = 1.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bX1 = · · · = bXn−2 = 0, bX0 = 1, which means that TUmin(c) ≤ 1.",
                "This observation suggests that the payment bound TUmin(c) is too strong to be realistic, since it can be substantially lower than the cost of the cheapest feasible set.",
                "Nevertheless, some of the positive results that were proved in [16] for NTUmin(c) go through for TUmin(c) as well.",
                "In particular, one can show that if the feasible sets are the bases of a monopolyfree matroid, then φTUmin(VCG) = 1.",
                "To show that φTUmin(VCG) is at most 1, one must prove that the VCG payment is at most TUmin(c).",
                "This is shown for NTUmin(c) in the first paragraph of the proof of Theorem 5 in [16].",
                "Their argument does not use condition (1) at all, so it also applies to TUmin(c).",
                "On the other hand, φTUmin(VCG) ≥ 1 since φTUmin(VCG) ≥ φNTUmin(VCG) and φNTUmin(VCG) ≥ 1 by Proposition 7 of [16] (and also by Proposition 6 below). 6.2 Comparison with VCG payments Another measure of suitability for payment bounds is that they should not result in frugality ratios that are less then 1 for wellknown truthful mechanisms.",
                "If this is indeed the case, the payment bound may be too weak, as it becomes too easy to design mechanisms that perform well with respect to it.",
                "It particular, a reasonable requirement is that a payment bound should not exceed the total payment of the classical VCG mechanism.",
                "The following proposition shows that NTUmax(c), and therefore also NTUmin(c) and TUmin(c), do not exceed the VCG payment pVCG(c).",
                "The proof essentially follows the argument of Proposition 7 of [16] and can be found in the full version of this paper [8].",
                "PROPOSITION 6. φNTUmax(VCG) ≥ 1.",
                "Proposition 6 shows that none of the payment bounds TUmin(c), NTUmin(c) and NTUmax(c) exceeds the payment of VCG.",
                "However, the payment bound TUmax(c) can be larger that the total 343 VCG payment.",
                "In particular, for the instance in Proposition 5, the VCG payment is smaller than TUmax(c) by a factor of n − 2.",
                "We have already seen that TUmax(c) ≥ n − 2.",
                "On the other hand, under VCG, the threshold bid of any Xi, i = 1, . . . , n − 2, is 0: if any such vertex bids above 0, it is deleted from the winning set together with X0 and replaced with Xn−1.",
                "Similarly, the threshold bid of X0 is 1, because if X0 bids above 1, it can be replaced with Xn−1.",
                "So the VCG payment is 1.",
                "This result is not surprising: the definition of TUmax(c) implicitly assumes there is co-operation between the agents, while the computation of VCG payments does not take into account any interaction between them.",
                "Indeed, co-operation enables the agents to extract higher payments under VCG.",
                "That is, VCG is not groupstrategyproof.",
                "This suggests that as a payment bound, TUmax(c) may be too liberal, at least in a context where there is little or no co-operation between agents.",
                "Perhaps TUmax(c) can be a good benchmark for measuring the performance of mechanisms designed for agents that can form coalitions or make side payments to each other, in particular, group-strategyproof mechanisms.",
                "Another setting in which bounding φTUmax is still of some interest is when, for the underlying problem, the optimal allocation and VCG payments are NP-hard to compute.",
                "In this case, finding a polynomial-time computable mechanism with good frugality ratio with respect to TUmax(c) is a non-trivial task, while bounding the frugality ratio with respect to more challenging payment bounds could be too difficult.",
                "To illustrate this point, compare the proofs of Lemma 6 and Lemma 7: both require some effort, but the latter is much more difficult than the former. 6.3 The choice of S All payment bounds defined in this paper correspond to the total bid of all elements in the cheapest feasible set, where ties are broken lexicographically.",
                "While this definition ensures that our payment bounds are well-defined, the particular choice of the drawresolution rule appears arbitrary, and one might wonder if our payment bounds are sufficiently robust to be independent of this choice.",
                "It turns out that is indeed the case for NTUmin(c) and NTUmax(c), i.e., these bounds do not depend on the draw-resolution rule.",
                "To see this, suppose that two feasible sets S1 and S2 have the same cost.",
                "In the computation of NTUmin(c, S1), all vertices in S1 \\S2 would have to bid their true cost, since otherwise S2 would become cheaper than S1.",
                "Hence, any bid vector for S1 can only have be = ce for e ∈ S1 ∩ S2, and hence constitutes a valid bid vector for S2 and vice versa.",
                "A similar argument applies to NTUmax(c).",
                "However, for TUmin(c) and TUmax(c) this is not the case.",
                "For example, consider the set system E = {e1, e2, e3, e4, e5}, F = {S1 = {e1, e2}, S2 = {e2, e3, e4}, S3 = {e4, e5}} with the costs c1 = 2, c2 = c3 = c4 = 1, c5 = 3.",
                "The cheapest sets are S1 and S2.",
                "Now TUmax(c, S1) ≤ 4, as the total bid of the elements in S1 cannot exceed the total cost of S3.",
                "On the other hand, TUmax(c, S2) ≥ 5, as we can set b2 = 3, b3 = 0, b4 = 2.",
                "Similarly, TUmin(c, S1) = 4, because the inequalities in (2) are b1 ≤ 2 and b1 + b2 ≤ 4.",
                "But TUmin(c, S2) ≤ 3 as we can set b2 = 1, b3 = 2, b4 = 0. 6.4 Negative results for NTUmin(c) and TUmin(c) The results in [16] and our vertex cover results are proved for the frugality ratio φNTUmin.",
                "Indeed, it can be argued that φNTUmin is the best definition of frugality ratio, because among all reasonable payment bounds (i.e., ones that are at least as large as the cost of the cheapest feasible set), it is most demanding of the algorithm.",
                "However, NTUmin(c) is not always the easiest or the most natural payment bound to work with.",
                "In this subsection, we discuss several disadvantages of NTUmin(c) (and also TUmin(c)) as compared to NTUmax(c) and TUmax(c). 6.4.1 Nonmonotonicity The first problem with NTUmin(c) is that it is not monotone with respect to F, i.e., it may increase when one adds a feasible set to F. (It is, however, monotone in the sense that a losing agent cannot become a winner by raising his cost.)",
                "Intuitively, a good payment bound should satisfy this monotonicity requirement, as adding a feasible set increases the competition, so it should drive the prices down.",
                "Note that this indeed the case for NTUmax(c) and TUmax(c) since a new feasible set adds a constraint in (2), thus limiting the solution space for the respective linear program.",
                "PROPOSITION 7.",
                "Adding a feasible set to F can increase the value of NTUmin(c) by a factor of Ω(n).",
                "PROOF.",
                "Let E = {x, xx, y1, . . . , yn, z1, . . . , zn}.",
                "Set Y = {y1, . . . , yn}, S = Y ∪ {x}, Ti = Y \\ {yi} ∪ {zi}, i = 1, . . . , n, and suppose that F = {S, T1, . . . , Tn}.",
                "The costs are cx = 0, cxx = 0, cyi = 0, czi = 1 for i = 1, . . . , n. Note that S is the cheapest feasible set.",
                "Let F = F ∪ {T0}, where T0 = Y ∪ {xx}.",
                "For F, the bid vector by1 = · · · = byn = 0, bx = 1 satisfies (1), (2), and (3), so NTUmin(c) ≤ 1.",
                "For F , S is still the lexicographically-least cheapest set.",
                "Any optimal solution has bx = 0 (by constraint in (2) with T0).",
                "Condition (3) for yi implies bx + byi = czi = 1, so byi = 1 and NTUmin(c) = n. For path auctions, it has been shown [18] that NTUmin(c) is non-monotone in a slightly different sense, i.e., with respect to adding a new edge (agent) rather than a new feasible set (a team of existing agents).",
                "REMARK 5.",
                "We can also show that NTUmin(c) is non-monotone for vertex cover.",
                "In this case, adding a new feasible set corresponds to deleting edges from the graph.",
                "It turns out that deleting a single edge can increase NTUmin(c) by a factor of n − 2; the construction is similar to that of Proposition 5. 6.4.2 NP-Hardness Another problem with NTUmin(c, S) is that it is NP-hard to compute even if the number of feasible sets is polynomial in n. Again, this puts it at a disadvantage compared to NTUmax(c, S) and TUmax(c, S) (see Remark 1).",
                "THEOREM 6.",
                "Computing NTUmin(c) is NP-hard, even when the lexicographically-least feasible set S is given in the input.",
                "PROOF.",
                "We reduce EXACT COVER BY 3-SETS(X3C) to our problem.",
                "An instance of X3C is given by a universe G = {g1, . . . , gn} and a collection of subsets C1, . . . , Cm, Ci ⊂ G, |Ci| = 3, where the goal is to decide whether one can cover G by n/3 of these sets.",
                "Observe that if this is indeed the case, each element of G is contained in exactly one set of the cover.",
                "LEMMA 9.",
                "Consider a minimisation problem P of the following form: Minimise P i=1,...,n bi under conditions (1) bi ≥ 0 for all i = 1, . . . , n; (2) for any j = 1, . . . , k we have P bi∈Sj bi ≤ aj, where Sj ⊆ {b1, . . . , bn}; (3) for each bj , one of the constraints in (2) involving it is tight.",
                "For any such P, one can construct a set system S and a vector of costs c such that NTUmin(c) is the optimal solution to P. PROOF.",
                "The construction is straightforward: there is an element of cost 0 for each bi, an element of cost aj for each aj, the feasible solutions are {b1, . . . , bn}, or any set obtained from {b1, . . . , bn} by replacing the elements in Sj by aj. 344 By this lemma, all we have to do to prove Theorem 6 is to show how to solve X3C by using the solution to a minimisation problem of the form given in Lemma 9.",
                "We do this as follows.",
                "For each Ci, we introduce 4 variables xi, ¯xi, ai, and bi.",
                "Also, for each element gj of G there is a variable dj.",
                "We use the following set of constraints: • In (1), we have constraints xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 for all i = 1, . . . , m, j = 1, . . . , n. • In (2), for all i = 1, . . . , m, we have the following 5 constraints: xi + ¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi + bi ≤ 1.",
                "Also, for all j = 1, . . . , n we have a constraint of the form xi1 + · · · + xik + dj ≤ 1, where Ci1 , . . . , Cik are the sets that contain gj.",
                "The goal is to minimize z = P i(xi + ¯xi + ai + bi) + P j dj.",
                "Observe that for each j, there is only one constraint involving dj , so by condition (3) it must be tight.",
                "Consider the two constraints involving ai.",
                "One of them must be tight, and therefore xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1.",
                "Hence, for any feasible solution to (1)-(3) we have z ≥ m. Now, suppose that there is an exact set cover.",
                "Set dj = 0 for j = 1, . . . , n. Also, if Ci is included in this cover, set xi = 1, ¯xi = ai = bi = 0, otherwise set ¯xi = 1, xi = ai = bi = 0.",
                "Clearly, all inequalities in (2) are satisfied (we use the fact that each element is covered exactly once), and for each variable, one of the constraints involving it is tight.",
                "This assignment results in z = m. Conversely, suppose there is a feasible solution with z = m. As each addend of the form xi + ¯xi + ai + bi contributes at least 1, we have xi + ¯xi + ai + bi = 1 for all i, dj = 0 for all j.",
                "We will now show that for each i, either xi = 1 and ¯xi = 0, or xi = 0 and ¯xi = 1.",
                "For the sake of contradiction, suppose that xi = δ < 1, ¯xi = δ < 1.",
                "As one of the constraints involving ai must be tight, we have ai ≥ min{1 − δ, 1 − δ }.",
                "Similarly, bi ≥ min{1 − δ, 1 − δ }.",
                "Hence, xi + ¯xi + ai + bi = 1 = δ +δ +2 min{1−δ, 1−δ } > 1.",
                "To finish the proof, note that for each j = 1, . . . , m we have xi1 + · · · + xik + dj = 1 and dj = 0, so the subsets that correspond to xi = 1 constitute a set cover.",
                "REMARK 6.",
                "In the proofs of Proposition 7 and Theorem 6 all constraints in (1) are of the form be ≥ 0.",
                "Hence, the same results are true for TUmin(c).",
                "REMARK 7.",
                "For shortest-path auctions, the size of F can be superpolynomial.",
                "However, there is a polynomial-time separation oracle for constraints in (2) (to construct one, use any algorithm for finding shortest paths), so one can compute NTUmax(c) and TUmax(c) in polynomial time.",
                "On the other hand, recently and independently it was shown [18] that computing NTUmin(c) for shortest-path auctions is NP-hard. 7.",
                "REFERENCES [1] A. Archer and E. Tardos, Frugal path mechanisms.",
                "In Proceedings of the 13th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 991-999, 2002 [2] R. Bar-Yehuda, K. Bendel, A. Freund, and D. Rawitz, Local ratio: A unified framework for approximation algorithms.",
                "In Memoriam: Shimon Even 1935-2004.",
                "ACM Comput.",
                "Surv., 36(4):422-463, 2004 [3] R. Bar-Yehuda and S. Even, A local-ratio theorem for approximating the weighted vertex cover problem.",
                "Annals of Discrete Mathematics, 25:27-46, 1985 [4] E. Clarke, Multipart pricing of public goods.",
                "Public Choice, 8:17-33, 1971 [5] G. Calinescu, Bounding the payment of approximate truthful mechanisms.",
                "In Proceedings of the 15th International Symposium on Algorithms and Computation, pages 221-233, 2004 [6] A. Czumaj and A. Ronen, On the expected payment of mechanisms for task allocation.",
                "In Proceedings of the 5th ACM Conference on Electronic Commerce (EC04), 2004 [7] E. Elkind, True costs of cheap labor are hard to measure: edge deletion and VCG payments in graphs.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [8] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Frugality ratios and improved truthful mechanisms for vertex cover.",
                "Available from http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai, and K. Steiglitz, Frugality in path auctions.",
                "In Proceedings of the 15th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 694-702, 2004 [10] J. Feigenbaum, C. H. Papadimitriou, R. Sami, and S. Shenker, A BGP-based mechanism for lowest-cost routing.",
                "In Proceedings of the 21st Symposium on Principles of Distributed Computing, pages 173-182, 2002 [11] A. Fiat, A. Goldberg, J. Hartline, and A. Karlin, Competitive generalized auctions.",
                "In Proceedings of the 34th Annual ACM Symposium on Theory of Computation, pages 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra and A. Verma, Coalitional games on graphs: core structures, substitutes and frugality.",
                "In Proceedings of the 4th ACM Conference on Electronic Commerce (EC03), 2005 [13] A. Goldberg, J. Hartline, and A. Wright, Competitive auctions and digital goods.",
                "In Proceedings of the 12th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2001 [14] T. Groves, Incentives in teams.",
                "Econometrica, 41(4):617-631, 1973 [15] N. Immorlica, D. Karger, E. Nikolova, and R. Sami, First-price path auctions.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [16] A. R. Karlin, D. Kempe, and T. Tamir, Beyond VCG: frugality of truthful mechanisms.",
                "In Proceedings of the 46th Annual IEEE Symposium on Foundations of Computer Science, pages 615-626, 2005 [17] D. Kempe, Personal communication, 2006 [18] N. Chen, A. R. Karlin, Cheap labor can be expensive, In Proceedings of the 18th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2007 [19] N. Nisan and A. Ronen, Algorithmic mechanism design.",
                "In Proceedings of the 31st Annual ACM Symposium on Theory of Computation, pages 129-140, 1999 [20] A. Ronen and R. Talisman, Towards generic low payment mechanisms for decentralized task allocation.",
                "In Proceedings of the 7th International IEEE Conference on E-Commerce Technology, 2005 [21] K. Talwar, The price of truth: frugality in truthful mechanisms.",
                "In Proceedings of 20th International Symposium on Theoretical Aspects of Computer Science, 2003 [22] W. Vickrey, Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961 345"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Comparación de los límites de pago 4.1 Subastas de ruta Comenzamos mostrando que para las subastas de ruta cualquiera de los dos \"pagos consecutivos\", s \"simados\", puede diferir en al menos un factor de 2."
            ],
            "translated_text": "",
            "candidates": [
                "Pague consecutivo vinculado",
                "pagos consecutivos",
                "simados"
            ],
            "error": []
        },
        "monotone allocation rule": {
            "translated_key": "regla de asignación monótona",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Frugality Ratios And Improved Truthful Mechanisms for Vertex Cover ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT In set-system auctions, there are several overlapping teams of agents, and a task that can be completed by any of these teams.",
                "The auctioneers goal is to hire a team and pay as little as possible.",
                "Examples of this setting include shortest-path auctions and vertex-cover auctions.",
                "Recently, Karlin, Kempe and Tamir introduced a new definition of frugality ratio for this problem.",
                "Informally, the frugality ratio is the ratio of the total payment of a mechanism to a desired payment bound.",
                "The ratio captures the extent to which the mechanism overpays, relative to perceived fair cost in a truthful auction.",
                "In this paper, we propose a new truthful polynomial-time auction for the vertex cover problem and bound its frugality ratio.",
                "We show that the solution quality is with a constant factor of optimal and the frugality ratio is within a constant factor of the best possible worst-case bound; this is the first auction for this problem to have these properties.",
                "Moreover, we show how to transform any truthful auction into a frugal one while preserving the approximation ratio.",
                "Also, we consider two natural modifications of the definition of Karlin et al., and we analyse the properties of the resulting payment bounds, such as monotonicity, computational hardness, and robustness with respect to the draw-resolution rule.",
                "We study the relationships between the different payment bounds, both for general set systems and for specific set-system auctions, such as path auctions and vertex-cover auctions.",
                "We use these new definitions in the proof of our main result for vertex-cover auctions via a bootstrapping technique, which may be of independent interest.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a set system auction there is a single buyer and many vendors that can provide various services.",
                "It is assumed that the buyers requirements can be satisfied by various subsets of the vendors; these subsets are called the feasible sets.",
                "A widely-studied class of setsystem auctions is path auctions, where each vendor is able to sell access to a link in a network, and the feasible sets are those sets whose links contain a path from a given source to a given destination; the study of these auctions has been initiated in the seminal paper by Nisan and Ronen [19] (see also [1, 10, 9, 6, 15, 7, 20]).",
                "We assume that each vendor has a cost of providing his services, but submits a possibly larger bid to the auctioneer.",
                "Based on these bids, the auctioneer selects a feasible subset of vendors, and makes payments to the vendors in this subset.",
                "Each selected vendor enjoys a profit of payment minus cost.",
                "Vendors want to maximise profit, while the buyer wants to minimise the amount he pays.",
                "A natural goal in this setting is to design a truthful auction, in which vendors have an incentive to bid their true cost.",
                "This can be achieved by paying each selected vendor a premium above her bid in such a way that the vendor has no incentive to overbid.",
                "An interesting question in mechanism design is how much the auctioneer will have to overpay in order to ensure truthful bids.",
                "In the context of path auctions this topic was first addressed by Archer and Tardos [1].",
                "They define the frugality ratio of a mechanism as the ratio between its total payment and the cost of the cheapest path disjoint from the path selected by the mechanism.",
                "They show that, for a large class of truthful mechanisms for this problem, the frugality ratio is as large as the number of edges in the shortest path.",
                "Talwar [21] extends this definition of frugality ratio to general set systems, and studies the frugality ratio of the classical VCG mechanism [22, 4, 14] for many specific set systems, such as minimum spanning trees and set covers.",
                "While the definition of frugality ratio proposed by [1] is wellmotivated and has been instrumental in studying truthful mechanisms for set systems, it is not completely satisfactory.",
                "Consider, for example, the graph of Figure 1 with the costs cAB = cBC = A B C D Figure 1: The diamond graph 336 cCD = 0, cAC = cBD = 1.",
                "This graph is 2-connected and the VCG payment to the winning path ABCD is bounded.",
                "However, the graph contains no A-D path that is disjoint from ABCD, and hence the frugality ratio of VCG on this graph remains undefined.",
                "At the same time, there is no monopoly, that is, there is no vendor that appears in all feasible sets.",
                "In auctions for other types of set systems, the requirement that there exist a feasible solution disjoint from the selected one is even more severe: for example, for vertex-cover auctions (where vendors correspond to the vertices of some underlying graph, and the feasible sets are vertex covers) the requirement means that the graph must be bipartite.",
                "To deal with this problem, Karlin et al. [16] suggest a better benchmark, which is defined for any monopoly-free set system.",
                "This quantity, which they denote by ν, intuitively corresponds to the value of a cheapest Nash equilibrium.",
                "Based on this new definition, the authors construct new mechanisms for the shortest path problem and show that the overpayment of these mechanisms is within a constant factor of optimal. 1.1 Our results Vertex cover auctions We propose a truthful polynomial-time auction for vertex cover that outputs a solution whose cost is within a factor of 2 of optimal, and whose frugality ratio is at most 2Δ, where Δ is the maximum degree of the graph (Theorem 4).",
                "We complement this result by proving (Theorem 5) that for any Δ and n, there are graphs of maximum degree Δ and size Θ(n) for which any truthful mechanism has frugality ratio at least Δ/2.",
                "This means that the solution quality of our auction is with a factor of 2 of optimal and the frugality ratio is within a factor of 4 of the best possible bound for worst-case inputs.",
                "To the best of our knowledge, this is the first auction for this problem that enjoys these properties.",
                "Moreover, we show how to transform any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio.",
                "Frugality ratios Our vertex cover results naturally suggest two modifications of the definition of ν in [16].",
                "These modifications can be made independently of each other, resulting in four different payment bounds TUmax, TUmin, NTUmax, and NTUmin, where NTUmin is equal to the original payment bound ν of in [16].",
                "All four payment bounds arise as Nash equilibria of certain games (see the full version of this paper [8]); the differences between them can be seen as the price of initiative and the price of cooperation (see Section 3).",
                "While our main result about vertex cover auctions (Theorem 4) is with respect to NTUmin = ν, we make use of the new definitions by first comparing the payment of our mechanism to a weaker bound NTUmax, and then bootstrapping from this result to obtain the desired bound.",
                "Inspired by this application, we embark on a further study of these payment bounds.",
                "Our results here are as follows: 1.",
                "We observe (Proposition 1) that the four payment bounds always obey a particular order that is independent of the choice of the set system and the cost vector, namely, TUmin ≤ NTUmin ≤ NTUmax ≤ TUmax.",
                "We provide examples (Proposition 5 and Corollaries 1 and 2) showing that for the vertex cover problem any two consecutive bounds can differ by a factor of n − 2, where n is the number of agents.",
                "We then show (Theorem 2) that this separation is almost best possible for general set systems by proving that for any set system TUmax/TUmin ≤ n. In contrast, we demonstrate (Theorem 3) that for path auctions TUmax/TUmin ≤ 2.",
                "We provide examples (Propositions 2, 3 and 4) showing that this bound is tight.",
                "We see this as an argument for the study of vertexcover auctions, as they appear to be more representative of the general team -selection problem than the widely studied path auctions. 2.",
                "We show (Theorem 1) that for any set system, if there is a cost vector for which TUmin and NTUmin differ by a factor of α, there is another cost vector that separates NTUmin and NTUmax by the same factor and vice versa; the same is true for the pairs (NTUmin, NTUmax) and (NTUmax, TUmax).",
                "This symmetry is quite surprising, since, e.g., TUmin and NTUmax are obtained from NTUmin by two very different transformations.",
                "This observation suggests that the four payment bounds should be studied in a unified framework; moreover, it leads us to believe that the bootstrapping technique of Theorem 4 may have other applications. 3.",
                "We evaluate the payment bounds introduced here with respect to a checklist of desirable features.",
                "In particular, we note that the payment bound ν = NTUmin of [16] exhibits some counterintuitive properties, such as nonmonotonicity with respect to adding a new feasible set (Proposition 7), and is NP-hard to compute (Theorem 6), while some of the other payment bounds do not suffer from these problems.",
                "This can be seen as an argument in favour of using weaker but efficiently computable bounds NTUmax and TUmax.",
                "Related work Vertex-cover auctions have been studied in the past by Talwar [21] and Calinescu [5].",
                "Both of these papers are based on the definition of frugality ratio used in [1]; as mentioned before, this means that their results only apply to bipartite graphs.",
                "Talwar [21] shows that the frugality ratio of VCG is at most Δ.",
                "However, since finding the cheapest vertex cover is an NP-hard problem, the VCG mechanism is computationally infeasible.",
                "The first (and, to the best of our knowledge, only) paper to investigate polynomial-time truthful mechanisms for vertex cover is [5].",
                "This paper studies an auction that is based on the greedy allocation algorithm, which has an approximation ratio of log n. While the main focus of [5] is the more general set cover problem, the results of [5] imply a frugality ratio of 2Δ2 for vertex cover.",
                "Our results improve on those of [21] as our mechanism is polynomial-time computable, as well as on those of [5], as our mechanism has a better approximation ratio, and we prove a stronger bound on the frugality ratio; moreover, this bound also applies to the mechanism of [5]. 2.",
                "PRELIMINARIES In most of this paper, we discuss auctions for set systems.",
                "A set system is a pair (E, F), where E is the ground set, |E| = n, and F is a collection of feasible sets, which are subsets of E. Two particular types of set systems are of interest to us - shortest path systems, in which the ground set consists of all edges of a network, and the feasible sets are paths between two specified vertices s and t, and vertex cover systems, in which the elements of the ground set are the vertices of a graph, and the feasible sets are vertex covers of this graph.",
                "In set system auctions, each element e of the ground set is owned by an independent agent and has an associated non-negative cost ce.",
                "The goal of the centre is to select (purchase) a feasible set.",
                "Each element e in the selected set incurs a cost of ce.",
                "The elements that are not selected incur no costs.",
                "The auction proceeds as follows: all elements of the ground set make their bids, the centre selects a feasible set based on the bids and makes payments to the agents.",
                "Formally, an auction is defined by an allocation rule A : Rn → F and a payment rule P : Rn → Rn .",
                "The allocation rule takes as input a vector of bids and decides which of the sets in F should be selected.",
                "The payment rule also takes as input a vector of bids and decides how much to pay to each agent.",
                "The standard requirements are individual rationality, i.e., the payment to each agent should be at least as high as his incurred cost (0 for agents not in the selected set and ce for agents in the 337 selected set) and incentive compatibility, or truthfulness, i.e., each agents dominant strategy is to bid his true cost.",
                "An allocation rule is monotone if an agent cannot increase his chance of getting selected by raising his bid.",
                "Formally, for any bid vector b and any e ∈ E, if e ∈ A(b) then e ∈ A(b1, . . . , be, . . . , bn) for any be > be.",
                "Given a <br>monotone allocation rule</br> A and a bid vector b, the threshold bid te of an agent e ∈ A(b) is the highest bid of this agent that still wins the auction, given that the bids of other participants remain the same.",
                "Formally, te = sup{be ∈ R | e ∈ A(b1, . . . , be, . . . , bn)}.",
                "It is well known (see, e.g. [19, 13]) that any auction that has a <br>monotone allocation rule</br> and pays each agent his threshold bid is truthful; conversely, any truthful auction has a <br>monotone allocation rule</br>.",
                "The VCG mechanism is a truthful mechanism that maximises the social welfare and pays 0 to the losing agents.",
                "For set system auctions, this simply means picking a cheapest feasible set, paying each agent in the selected set his threshold bid, and paying 0 to all other agents.",
                "Note, however, that the VCG mechanism may be difficult to implement, since finding a cheapest feasible set may be intractable.",
                "If U is a set of agents, c(U) denotes P w∈U cw.",
                "Similarly, b(U) denotes P w∈U bw. 3.",
                "FRUGALITY RATIOS We start by reproducing the definition of the quantity ν from [16, Definition 4].",
                "Let (E, F) be a set system and let S be a cheapest feasible set with respect to the true costs ce.",
                "Then ν(c, S) is the solution to the following optimisation problem.",
                "Minimise B = P e∈S be subject to (1) be ≥ ce for all e ∈ E (2) P e∈S\\T be ≤ P e∈T \\S ce for all T ∈ F (3) for every e ∈ S, there is a Te ∈ F such that e ∈ Te andP e ∈S\\Te be = P e ∈Te\\S ce The bound ν(c, S) can be seen as an outcome of a two-stage process, where first each agent e ∈ S makes a bid be stating how much it wants to be paid, and then the centre decides whether to accept these bids.",
                "The behaviour of both parties is affected by the following considerations.",
                "From the centres point of view, the set S must remain the most attractive choice, i.e., it must be among the cheapest feasible sets under the new costs ce = ce for e ∈ S, ce = be for e ∈ S (condition (2)).",
                "The reason for that is that if (2) is violated for some set T, the centre would prefer T to S. On the other hand, no agent would agree to a payment that does not cover his costs (condition (1)), and moreover, each agent tries to maximise his profit by bidding as high as possible, i.e., none of the agents can increase his bid without violating condition (2) (condition (3)).",
                "The centre wants to minimise the total payout, so ν(c, S) corresponds to the best possible outcome from the centres point of view.",
                "This definition captures many important aspects of our intuition about fair payments.",
                "However, it can be modified in two ways, both of which are still quite natural, but result in different payment bounds.",
                "First, we can consider the worst rather than the best possible outcome for the centre.",
                "That is, we can consider the maximum total payment that the agents can extract by jointly selecting their bids subject to (1), (2), and (3).",
                "Such a bound corresponds to maximising B subject to (1), (2), and (3) rather than minimising it.",
                "If it is the agents who make the original bids (rather than the centre), this kind of bidding behaviour is plausible.",
                "On the other hand, in a game in which the centre proposes payments to the agents in S and the agents accept them as long as (1), (2) and (3) are satisfied, we would be likely to observe a total payment of ν(c, S).",
                "Hence, the difference between these two definitions can be seen as the price of initiative.",
                "Second, the agents may be able to make payments to each other.",
                "In this case, if they can extract more money from the centre by agreeing on a vector of bids that violates individual rationality (i.e., condition (1)) for some bidders, they might be willing to do so, as the agents who are paid below their costs will be compensated by other members of the group.",
                "The bids must still be realistic, i.e., they have to satisfy be ≥ 0.",
                "The resulting change in payments can be seen as the price of co-operation and corresponds to replacing condition (1) with the following weaker condition (1∗ ): be ≥ 0 for all e ∈ E. (1∗ ) By considering all possible combinations of these modifications, we obtain four different payment bounds, namely • TUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1∗ ), (2), and (3). • TUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1∗ ), (2), and (3). • NTUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1), (2), and (3). • NTUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1), (2), (3).",
                "The abbreviations TU and NTU correspond, respectively, to transferable utility and non-transferable utility, i.e., the agents ability/inability to make payments to each other.",
                "For concreteness, we will take TUmin(c) to be TUmin(c, S) where S is the lexicographically least amongst the cheapest feasible sets.",
                "We define TUmax(c), NTUmin(c), NTUmax(c) and ν(c) similarly, though we will see in Section 6.3 that, in fact, NTUmin(c, S) and NTUmax(c, S) are independent of the choice of S. Note that the quantity ν(c) from [16] is NTUmin(c).",
                "The second modification (transferable utility) is more intuitively appealing in the context of the maximisation problem, as both assume some degree of co-operation between the agents.",
                "While the second modification can be made without the first, the resulting payment bound TUmin(c, S) is too strong to be a realistic benchmark, at least for general set systems.",
                "In particular, it can be smaller than the total cost of the cheapest feasible set S (see Section 6).",
                "Nevertheless, we provide the definition as well as some results about TUmin(c, S) in the paper, both for completeness and because we believe that it may help to understand which properties of the payment bounds are important for our proofs.",
                "Another possibility would be to introduce an additional constraint P e∈S be ≥P e∈S ce in the definition of TUmin(c, S) (note that this condition holds automatically for TUmax(c, S), as TUmax(c, S) ≥ NTUmax(c, S)); however, such a definition would have no direct game-theoretic interpretation, and some of our results (in particular, the ones in Section 4) would no longer be true.",
                "REMARK 1.",
                "For the payment bounds that are derived from maximisation problems, (i.e., TUmax(c, S) and NTUmax(c, S)), constraints of type (3) are redundant and can be dropped.",
                "Hence, TUmax(c, S) and NTUmax(c, S) are solutions to linear programs, and therefore can be computed in polynomial time as long as we have a separation oracle for constraints in (2).",
                "In contrast, 338 NTUmin(c, S) can be NP-hard to compute even if the size of F is polynomial (see Section 6).",
                "The first and third inequalities in the following observation follow from the fact that condition (1∗ ) is strictly weaker than condition (1).",
                "PROPOSITION 1.",
                "TUmin(c, S) ≤ NTUmin(c, S) ≤ NTUmax(c, S) ≤ TUmax(c, S).",
                "Let M be a truthful mechanism for (E, F).",
                "Let pM(c) denote the total payments of M when the actual costs are c. A frugality ratio of M with respect to a payment bound is the ratio between the payment of M and this payment bound.",
                "In particular, φTUmin(M) = sup c pM(c)/TUmin(c), φTUmax(M) = sup c pM(c)/TUmax(c), φNTUmin(M) = sup c pM(c)/NTUmin(c), φNTUmax(M) = sup c pM(c)/NTUmax(c).",
                "We conclude this section by showing that there exist set systems and respective cost vectors for which all four payment bounds are different.",
                "In the next section, we quantify this difference, both for general set systems, and for specific types of set systems, such as path auctions or vertex cover auctions.",
                "EXAMPLE 1.",
                "Consider the shortest-path auction on the graph of Figure 1.",
                "The cheapest feasible sets are all paths from A to D. It can be verified, using the reasoning of Propositions 2 and 3 below, that for the cost vector cAB = cCD = 2, cBC = 1, cAC = cBD = 5, we have • TUmax(c) = 10 (with bAB = bCD = 5, bBC = 0), • NTUmax(c) = 9 (with bAB = bCD = 4, bBC = 1), • NTUmin(c) = 7 (with bAB = bCD = 2, bBC = 3), • TUmin(c) = 5 (with bAB = bCD = 0, bBC = 5). 4.",
                "COMPARING PAYMENT BOUNDS 4.1 Path auctions We start by showing that for path auctions any two consecutive payment bounds can differ by at least a factor of 2.",
                "PROPOSITION 2.",
                "There is an instance of the shortest-path problem for which we have NTUmax(c)/NTUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is due to David Kempe [17].",
                "Consider the graph of Figure 1 with the edge costs cAB = cBC = cCD = 0, cAC = cBD = 1.",
                "Under these costs, ABCD is the cheapest path.",
                "The inequalities in (2) are bAB + bBC ≤ cAC = 1, bBC + bCD ≤ cBD = 1.",
                "By condition (3), both of these inequalities must be tight (the former one is the only inequality involving bAB, and the latter one is the only inequality involving bCD).",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 0, bCD ≥ 0.",
                "Now, if the goal is to maximise bAB + bBC + bCD, the best choice is bAB = bCD = 1, bBC = 0, so NTUmax(c) = 2.",
                "On the other hand, if the goal is to minimise bAB + bBC + bCD, one should set bAB = bCD = 0, bBC = 1, so NTUmin(c) = 1.",
                "PROPOSITION 3.",
                "There is an instance of the shortest-path problem for which we have TUmax(c)/NTUmax(c) ≥ 2.",
                "PROOF.",
                "Again, consider the graph of Figure 1.",
                "Let the edge costs be cAB = cCD = 0, cBC = 1, cAC = cBD = 1.",
                "ABCD is the lexicographically-least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "The inequalities in (2) are the same as in the previous example, and by the same argument both of them are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 1, bCD ≥ 0.",
                "Our goal is to maximise bAB + bBC + bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 0, bBC = 1, so NTUmax(c) = 1.",
                "Otherwise, we can set bAB = bCD = 1, bBC = 0, so TUmax(c) ≥ 2.",
                "PROPOSITION 4.",
                "There is an instance of the shortest-path problem for which we have NTUmin(c)/TUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is also based on the graph of Figure 1.",
                "The edge costs are cAB = cCD = 1, cBC = 0, cAC = cBD = 1.",
                "ABCD is the lexicographically least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "Again, the inequalities in (2) are the same, and both are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 1, bBC ≥ 0, bCD ≥ 1.",
                "Our goal is to minimise bAB + bBC +bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 1, bBC = 0, so NTUmin(c) = 2.",
                "Otherwise, we can set bAB = bCD = 0, bBC = 1, so TUmin(c) ≤ 1.",
                "In Section 4.4 (Theorem 3), we show that the separation results in Propositions 2, 3, and 4 are optimal. 4.2 Connections between separation results The separation results for path auctions are obtained on the same graph using very similar cost vectors.",
                "It turns out that this is not coincidental.",
                "Namely, we can prove the following theorem.",
                "THEOREM 1.",
                "For any set system (E, F), and any feasible set S, max c TUmax(c, S) NTUmax(c, S) = max c NTUmax(c, S) NTUmin(c, S) , max c NTUmax(c, S) NTUmin(c, S) = max c NTUmin(c, S) TUmin(c, S) , where the maximum is over all cost vectors c for which S is a cheapest feasible set.",
                "The proof of the theorem follows directly from the four lemmas proved below; more precisely, the first equality in Theorem 1 is obtained by combining Lemmas 1 and 2, and the second equality is obtained by combining Lemmas 3 and 4.",
                "We prove Lemma 1 here; the proofs of Lemmas 2- 4 are similar and can be found in the full version of this paper [8].",
                "LEMMA 1.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and TUmax(c, S)/NTUmax(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α.",
                "PROOF.",
                "Suppose that TUmax(c, S) = X and NTUmax(c, S) = Y where X/Y = α.",
                "Assume without loss of generality that S consists of elements 1, . . . , k, and let b1 = (b1 1, . . . , b1 k) and b2 = (b2 1, . . . , b2 k) be the bid vectors that correspond to TUmax(c, S) and NTUmax(c, S), respectively.",
                "Construct the cost vector c by setting ci = ci for i ∈ S, ci = min{ci, b1 i } for i ∈ S. Clearly, S is a cheapest set under c .",
                "Moreover, as the costs of elements outside of S remained the same, the right-hand sides of all constraints in (2) did not change, so any bid vector that satisfies (2) and (3) with respect to c, also satisfies them with respect to c .",
                "We will construct two bid vectors b3 and b4 that satisfy conditions (1), (2), and (3) for the cost vector c , and 339 X X X X X 0 X 12 3 X 4 5 6 Figure 2: Graph that separates payment bounds for vertex cover, n = 7 have P i∈S b3 i = X, P i∈S b4 i = Y .",
                "As NTUmax(c , S) ≥ X and NTUmin(c , S) ≤ Y , this implies the lemma.",
                "We can set b3 i = b1 i : this bid vector satisfies conditions (2) and (3) since b1 does, and we have b1 i ≥ min{ci, b1 i } = ci, which means that b3 satisfies condition (1).",
                "Furthermore, we can set b4 i = b2 i .",
                "Again, b4 satisfies conditions (2) and (3) since b2 does, and since b2 satisfies condition (1), we have b2 i ≥ ci ≥ ci, which means that b4 satisfies condition (1).",
                "LEMMA 2.",
                "Suppose c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and TUmax(c , S)/NTUmax(c , S) ≥ α. LEMMA 3.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmin(c , S)/TUmin(c , S) ≥ α. LEMMA 4.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmin(c, S)/TUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α. 4.3 Vertex-cover auctions In contrast to the case of path auctions, for vertex-cover auctions the gap between NTUmin(c) and NTUmax(c) (and hence between NTUmax(c) and TUmax(c), and between TUmin(c) and NTUmin(c)) can be proportional to the size of the graph.",
                "PROPOSITION 5.",
                "For any n ≥ 3, there is a an n-vertex graph and a cost vector c for which TUmax(c)/NTUmax(c) ≥ n − 2.",
                "PROOF.",
                "The underlying graph consists of an (n − 1)-clique on the vertices X1, . . . , Xn−1, and an extra vertex X0 adjacent to Xn−1.",
                "The costs are cX1 = cX2 = · · · = cXn−2 = 0, cX0 = cXn−1 = 1.",
                "We can assume that S = {X0, X1, . . . , Xn−2} (this is the lexicographically first vertex cover of cost 1).",
                "For this set system, the constraints in (2) are bXi + bX0 ≤ cXn−1 = 1 for i = 1, . . . , n − 2.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bXi = 1 for i = 1, . . . , n − 2, bX0 = 0.",
                "Hence, TUmax(c) ≥ n − 2.",
                "For NTUmax(c), there is an additional constraint bX0 ≥ 1, so the best we can do is to set bXi = 0 for i = 1, . . . , n − 2, bX0 = 1, which implies NTUmax(c) = 1.",
                "Combining Proposition 5 with Lemmas 1 and 3, we derive the following corollaries.",
                "COROLLARY 1.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmax(c)/NTUmin(c) ≥ n − 2.",
                "COROLLARY 2.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmin(c)/TUmin(c) ≥ n − 2. j+2ix ij P \\ P ij+2P \\ P yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 P \\ P Figure 3: Proof of Theorem 3: constraints for ˆPij and ˆPij+2 do not overlap 4.4 Upper bounds It turns out that the lower bound proved in the previous subsection is almost tight.",
                "More precisely, the following theorem shows that no two payment bounds can differ by more than a factor of n; moreover, this is the case not just for the vertex cover problem, but for general set systems.",
                "We bound the gap between TUmax(c) and TUmin(c).",
                "Since TUmin(c) ≤ NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), this bound applies to any pair of payment bounds.",
                "THEOREM 2.",
                "For any set system (E, F) and any cost vector c, we have TUmax(c)/TUmin(c) ≤ n. PROOF.",
                "Assume wlog that the winning set S consists of elements 1, . . . , k. Let c1, . . . , ck be the true costs of elements in S, let b1, . . . , bk be their bids that correspond to TUmin(c), and let b1 , . . . , bk be their bids that correspond to TUmax(c).",
                "Consider the conditions (2) and (3) for S. One can pick a subset L of at most k inequalities in (2) so that for each i = 1, . . . , k there is at least one inequality in L that is tight for bi.",
                "Suppose that the jth inequality in L is of the form bi1 + · · · + bit ≤ c(Tj \\ S).",
                "For bi, all inequalities in L are, in fact, equalities.",
                "Hence, by adding up all of them we obtain k P i=1,...,k bi ≥ P j=1,...,k c(Tj \\ S).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c(Tj \\ S).",
                "Combining these two inequalities, we obtain nTUmin(c) ≥ kTUmin(c) ≥ TUmax(c).",
                "REMARK 2.",
                "The final line of the proof of Theorem 2 shows that, in fact, the upper bound on TUmax(c)/TUmin(c) can be strengthened to the size of the winning set, k. Note that in Proposition 5, as well as in Corollaries 1 and 2, k = n−1, so these results do not contradict each other.",
                "For path auctions, this upper bound can be improved to 2, matching the lower bounds of Section 4.1.",
                "THEOREM 3.",
                "For any instance of the shortest path problem, TUmax(c) ≤ 2 TUmin(c).",
                "PROOF.",
                "Given a network (G, s, t), assume without loss of generality that the lexicographically-least cheapest s-t path, P, in G is {e1, . . . , ek}, where e1 = (s, v1), e2 = (v1, v2), . . . , ek = (vk−1, t).",
                "Let c1, . . . , ck be the true costs of e1, . . . , ek, and let b = (b1, . . . , bk) and b = (b1 , . . . , bk ) be bid vectors that correspond to TUmin(c) and TUmax(c), respectively.",
                "For any i = 1, . . . , k, there is a constraint in (2) that is tight for bi with respect to the bid vector b , i.e., an s-t path Pi that avoids ei and satisfies b (P \\Pi) = c(Pi \\P).",
                "We can assume without loss of generality that Pi coincides with P up to some vertex xi, then deviates from P to avoid ei, and finally returns to P at a vertex 340 yi and coincides with P from then on (clearly, it might happen that s = xi or t = yi).",
                "Indeed, if Pi deviates from P more than once, one of these deviations is not necessary to avoid ei and can be replaced with the respective segment of P without increasing the cost of Pi.",
                "Among all paths of this form, let ˆPi be the one with the largest value of yi, i.e., the rightmost one.",
                "This path corresponds to an inequality Ii of the form bxi+1 + · · · + byi ≤ c( ˆPi \\ P).",
                "As in the proof of Theorem 2, we construct a set of tight constraints L such that every variable bi appears in at least one of these constraints; however, now we have to be more careful about the choice of constraints in L. We construct L inductively as follows.",
                "Start by setting L = {I1}.",
                "At the jth step, suppose that all variables up to (but not including) bij appear in at least one inequality in L. Add Iij to L. Note that for any j we have yij+1 > yij .",
                "This is because the inequalities added to L during the first j steps did not cover bij+1 .",
                "See Figure 3.",
                "Since yij+2 > yij+1 , we must also have xij+2 > yij : otherwise, ˆPij+1 would not be the rightmost constraint for bij+1 .",
                "Therefore, the variables in Iij+2 and Iij do not overlap, and hence no bi can appear in more than two inequalities in L. Now we follow the argument of the proof of Theorem 2 to finish.",
                "By adding up all of the (tight) inequalities in L for bi we obtain 2 P i=1,...,k bi ≥ P j=1,...,k c( ˆPj \\ P).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c( ˆPj \\ P), so TUmax(c) ≤ 2TUmin(c). 5.",
                "TRUTHFUL MECHANISMS FOR VERTEX COVER Recall that for a vertex-cover auction on a graph G = (V, E), an allocation rule is an algorithm that takes as input a bid bv for each vertex and returns a vertex cover ˆS of G. As explained in Section 2, we can combine a <br>monotone allocation rule</br> with threshold payments to obtain a truthful auction.",
                "Two natural examples of monotone allocation rules are Aopt, i.e., the algorithm that finds an optimal vertex cover, and the greedy algorithm AGR.",
                "However, Aopt cannot be guaranteed to run in polynomial time unless P = NP and AGR has approximation ratio of log n. Another approximation algorithm for vertex cover, which has approximation ratio 2, is the local ratio algorithm ALR [2, 3].",
                "This algorithm considers the edges of G one by one.",
                "Given an edge e = (u, v), it computes = min{bu, bv} and sets bu = bu − , bv = bv − .",
                "After all edges have been processed, ALR returns the set of vertices {v | bv = 0}.",
                "It is not hard to check that if the order in which the edges are considered is independent of the bids, then this algorithm is monotone as well.",
                "Hence, we can use it to construct a truthful auction that is guaranteed to select a vertex cover whose cost is within a factor of 2 from the optimal.",
                "However, while the quality of the solution produced by ALR is much better than that of AGR, we still need to show that its total payment is not too high.",
                "In the next subsection, we bound the frugality ratio of ALR (and, more generally, all algorithms that satisfy the condition of local optimality, defined later) by 2Δ, where Δ is the maximum degree of G. We then prove a matching lower bound showing that for some graphs the frugality ratio of any truthful auction is at least Δ/2. 5.1 Upper bound We say that an allocation rule is locally optimal if whenever bv >P w∼v bw, the vertex v is not chosen.",
                "Note that for any such rule the threshold bid of v satisfies tv ≤ P w∼v bw.",
                "CLAIM 1.",
                "The algorithms Aopt, AGR, and ALR are locally optimal.",
                "THEOREM 4.",
                "Any vertex cover auction M that has a locally optimal and <br>monotone allocation rule</br> and pays each agent his threshold bid has frugality ratio φNTUmin(M) ≤ 2Δ.",
                "To prove Theorem 4, we first show that the total payment of any locally optimal mechanism does not exceed Δc(V ).",
                "We then demonstrate that NTUmin(c) ≥ c(V )/2.",
                "By combining these two results, the theorem follows.",
                "LEMMA 5.",
                "Consider a graph G = (V, E) with maximum degree Δ.",
                "Let M be a vertex-cover auction on G that satisfies the conditions of Theorem 4.",
                "Then for any cost vector c, the total payment of M satisfies pM(c) ≤ Δc(V ).",
                "PROOF.",
                "First note that any such auction is truthful, so we can assume that each agents bid is equal to his cost.",
                "Let ˆS be the vertex cover selected by M. Then by local optimality pM(c) = X v∈ ˆS tv ≤ X v∈ ˆS X w∼v cw ≤ X w∈V Δcw = Δc(V ).",
                "We now derive a lower bound on TUmax(c); while not essential for the proof of Theorem 4, it helps us build the intuition necessary for that proof.",
                "LEMMA 6.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, TUmax(c, S) ≥ c(V \\ S) PROOF.",
                "For a vertex w with at least one neighbour in S, let d(w) denote the number of neighbours that w has in S. Consider the bid vector b in which, for each v ∈ S, bv = P w∼v,w∈S cw d(w) .",
                "Then P v∈S bv = P v∈S P w∼v,w∈S cw/d(w) = P w /∈S cw = c(V \\ S).",
                "To finish we want to show that b is feasible in the sense that it satisfies (2).",
                "Consider a vertex cover T, and extend the bid vector b by assigning bv = cv for v /∈ S. Then b(T) = c(T \\S)+b(S∩T) ≥ c(T \\S)+ X v∈S∩T X w∈S∩T :w∼v cw d(w) , and since all edges between S ∩ T and S go to S ∩ T, the righthand-side is equal to c(T \\S)+ X w∈S∩T cw = c(T \\S)+c(S ∩T) = c(V \\S) = b(S).",
                "Next, we prove a lower bound on NTUmax(c, S); we will then use it to obtain a lower bound on NTUmin(c).",
                "LEMMA 7.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmax(c, S) ≥ c(V \\ S) PROOF.",
                "If c(S) ≥ c(V \\ S), by condition (1) we are done.",
                "Therefore, for the rest of the proof we assume that c(S) < c(V \\ S).",
                "We show how to construct a bid vector (be)e∈S that satisfies conditions (1) and (2) such that b(S) ≥ c(V \\ S); clearly, this implies NTUmax(c, S) ≥ c(V \\ S).",
                "Recall that a network flow problem is described by a directed graph Γ = (VΓ, EΓ), a source node s ∈ VΓ, a sink node t ∈ VΓ, and a vector of capacity constraints ae, e ∈ EΓ.",
                "Consider a network (VΓ, EΓ) such that VΓ = V ∪{s, t}, EΓ = E1 ∪E2 ∪E3, where E1 = {(s, v) | v ∈ S}, E2 = {(v, w) | v ∈ S, w ∈ 341 V \\ S, (v, w) ∈ E}, E3 = {(w, t) | w ∈ V \\ S}.",
                "Since S is a vertex cover for G, no edge of E can have both of its endpoints in V \\ S, and by construction, E2 contains no edges with both endpoints in S. Therefore, the graph (V, E2) is bipartite with parts (S, V \\ S).",
                "Set the capacity constraints for e ∈ EΓ as follows: a(s,v) = cv, a(w,t) = cw, a(v,w) = +∞ for all v ∈ S, w ∈ V \\ S. Recall that a cut is a partition of the vertices in VΓ into two sets C1 and C2 so that s ∈ C1, t ∈ C2; we denote such a cut by C = (C1, C2).",
                "Abusing notation, we write e = (u, v) ∈ C if u ∈ C1, v ∈ C2 or u ∈ C2, v ∈ C1, and say that such an edge e = (u, v) crosses the cut C. The capacity of a cut C is computed as cap(C) = P (v,w)∈C a(v,w).",
                "We have cap(s, V ∪{t}) = c(S), cap({s} ∪ V, t) = c(V \\ S).",
                "Let Cmin = ({s} ∪ S ∪ W , {t} ∪ S ∪ W ) be a minimum cut in Γ, where S , S ⊆ S, W , W ⊆ V \\ S. See Figure 4.",
                "As cap(Cmin) ≤ cap(s, V ∪ {t}) = c(S) < +∞, and any edge in E2 has infinite capacity, no edge (u, v) ∈ E2 crosses Cmin.",
                "Consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Clearly, C = ({s} ∪ S ∪ W , {t}) is a minimum cut in Γ (otherwise, there would exist a smaller cut for Γ).",
                "As cap(C ) = c(W ), we have c(S ) ≥ c(W ).",
                "Now, consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Similarly, C = ({s}, S ∪ W ∪ {t}) is a minimum cut in Γ , cap(C ) = c(S ).",
                "As the size of a maximum flow from s to t is equal to the capacity of a minimum cut separating s and t, there exists a flow F = (fe)e∈EΓ of size c(S ).",
                "This flow has to saturate all edges between s and S , i.e., f(s,v) = cv for all v ∈ S .",
                "Now, increase the capacities of all edges between s and S to +∞.",
                "In the modified network, the capacity of a minimum cut (and hence the size of a maximum flow) is c(W ), and a maximum flow F = (fe)e∈EΓ can be constructed by greedily augmenting F. Set bv = cv for all v ∈ S , bv = f(s,v) for all v ∈ S .",
                "As F is constructed by augmenting F, we have bv ≥ cv for all v ∈ S, i.e., condition (1) is satisfied.",
                "Now, let us check that no vertex cover T ⊆ V can violate condition (2).",
                "Set T1 = T ∩ S , T2 = T ∩ S , T3 = T ∩ W , T4 = T ∩ W ; our goal is to show that b(S \\ T1) + b(S \\ T2) ≤ c(T3)+c(T4).",
                "Consider all edges (u, v) ∈ E such that u ∈ S \\T1.",
                "If (u, v) ∈ E2 then v ∈ T3 (no edge in E2 can cross the cut), and if u, v ∈ S then v ∈ T1∪T2.",
                "Hence, T1∪T3∪S is a vertex cover for G, and therefore c(T1)+ c(T3)+ c(S ) ≥ c(S) = c(T1)+ c(S \\ T1) + c(S ).",
                "Consequently, c(T3) ≥ c(S \\ T1) = b(S \\ T1).",
                "Now, consider the vertices in S \\T2.",
                "Any edge in E2 that starts in one of these vertices has to end in T4 (this edge has to be covered by T, and it cannot go across the cut).",
                "Therefore, the total flow out of S \\T2 is at most the total flow out of T4, i.e., b(S \\T2) ≤ c(T4).",
                "Hence, b(S \\ T1) + b(S \\ T2) ≤ c(T3) + c(T4).",
                "Finally, we derive a lower bound on the payment bound that is of interest to us, namely, NTUmin(c).",
                "LEMMA 8.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmin(c, S) ≥ c(V \\ S) PROOF.",
                "Suppose for contradiction that c is a cost vector with minimum-cost vertex cover S and NTUmin(c, S) < c(V \\S).",
                "Let b be the corresponding bid vector and let c be a new cost vector with cv = bv for v ∈ S and cv = cv for v ∈ S. Condition (2) guarantees that S is an optimal solution to the cost vector c .",
                "Now compute a bid vector b corresponding to NTUmax(c , S).",
                "We S W S W s t T1 T3 T2 T4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 00 11 11 0 00 1 11 0 00 1 11 0 00 1 11 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00000 0000000000 0000000000 00000 0000000000 0000000000 00000 0000000000 11111 1111111111 1111111111 11111 1111111111 1111111111 11111 1111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 Figure 4: Proof of Lemma 7.",
                "Dashed lines correspond to edges in E \\ E2 claim that bv = cv for any v ∈ S. Indeed, suppose that bv > cv for some v ∈ S (bv = cv for v ∈ S by construction).",
                "As b satisfies conditions (1)-(3), among the inequalities in (2) there is one that is tight for v and the bid vector b.",
                "That is, b(S \\ T) = c(T \\ S).",
                "By the construction of c , c (S \\ T) = c (T \\ S).",
                "Now since bw ≥ cw for all w ∈ S, bv > cv implies b (S \\T) > c (S \\T) = c (T \\S).",
                "But this violates (2).",
                "So we now know b = c .",
                "Hence, we have NTUmax(c , S) = P v∈S bv = NTUmin(c, S) < c(V \\ S), giving a contradiction to the fact that NTUmax(c , S) ≥ c (V \\S) which we proved in Lemma 7.",
                "As NTUmin(c, S) satisfies condition (1), it follows that we have NTUmin(c, S) ≥ c(S).",
                "Together will Lemma 8, this implies NTUmin(c, S) ≥ max{c(V \\ S), c(S)} ≥ c(V )/2.",
                "Combined with Lemma 5, this completes the proof of Theorem 4.",
                "REMARK 3.",
                "As NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), our bound of 2Δ extends to the smaller frugality ratios that we consider, i.e., φNTUmax(M) and φTUmax(M).",
                "It is not clear whether it extends to the larger frugality ratio φTUmin(M).",
                "However, the frugality ratio φTUmin(M) is not realistic because the payment bound TUmin(c) is inappropriately low - we show in Section 6 that TUmin(c) can be significantly smaller than the total cost of a cheapest vertex cover.",
                "Extensions We can also apply our results to monotone vertex-cover algorithms that do not necessarily output locally-optimal solutions.",
                "To do so, we simply take the vertex cover produced by any such algorithm and transform it into a locally-optimal one, considering the vertices in lexicographic order and replacing a vertex v with its neighbours whenever bv > P u∼v bu.",
                "Note that if a vertex u has been added to the vertex cover during this process, it means that it has a neighbour whose bid is higher than bu, so after one pass all vertices in the vertex cover satisfy bv ≤ P u∼v bu.",
                "This procedure is monotone in bids, and it can only decrease the cost of the vertex cover.",
                "Therefore, using it on top of a <br>monotone allocation rule</br> with approx342 imation ratio α, we obtain a monotone locally-optimal allocation rule with approximation ratio α.",
                "Combining it with threshold payments, we get an auction with φNTUmin ≤ 2Δ.",
                "Since any truthful auction has a <br>monotone allocation rule</br>, this procedure transforms any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio. 5.2 Lower bound In this subsection, we prove that the upper bound of Theorem 4 is essentially optimal.",
                "Our proof uses the techniques of [9], where the authors prove a similar result for shortest-path auctions.",
                "THEOREM 5.",
                "For any Δ > 0 and any n, there exist a graph G of maximum degree Δ and size N > n such that for any truthful mechanism M on G we have φNTUmin(M) ≥ Δ/2.",
                "PROOF.",
                "Given n and Δ, set k = n/2Δ .",
                "Let G be the graph that consists of k blocks B1, . . . , Bk of size 2Δ each, where each Bi is a complete bipartite graph with parts Li and Ri, |Li| = |Ri| = Δ.",
                "We will consider two families of cost vectors for G. Under a cost vector x ∈ X, each block Bi has one vertex of cost 1; all other vertices cost 0.",
                "Under a cost vector y ∈ Y , there is one block that has two vertices of cost 1, one in each part, all other blocks have one vertex of cost 1, and all other vertices cost 0.",
                "Clearly, |X| = (2Δ)k , |Y | = k(2Δ)k−1 Δ2 .",
                "We will now construct a bipartite graph W with the vertex set X ∪ Y as follows.",
                "Consider a cost vector y ∈ Y that has two vertices of cost 1 in Bi; let these vertices be vl ∈ Li and vr ∈ Ri.",
                "By changing the cost of either of these vertices to 0, we obtain a cost vector in X.",
                "Let xl and xr be the cost vectors obtained by changing the cost of vl and vr, respectively.",
                "The vertex cover chosen by M(y) must either contain all vertices in Li or it must contain all vertices in Ri.",
                "In the former case, we put in W an edge from y to xl and in the latter case we put in W an edge from y to xr (if the vertex cover includes all of Bi, W contains both of these edges).",
                "The graph W has at least k(2Δ)k−1 Δ2 edges, so there must exist an x ∈ X of degree at least kΔ/2.",
                "Let y1, . . . , ykΔ/2 be the other endpoints of the edges incident to x, and for each i = 1, . . . , kΔ/2, let vi be the vertex whose cost is different under x and yi; note that all vi are distinct.",
                "It is not hard to see that NTUmin(x) ≤ k: the cheapest vertex cover contains the all-0 part of each block, and we can satisfy conditions (1)-(3) by letting one of the vertices in the all-0 part of each block to bid 1, while all other the vertices in the cheapest set bid 0.",
                "On the other hand, by monotonicity of M we have vi ∈ M(x) for i = 1, . . . , kΔ/2 (vi is in the winning set under yi, and x is obtained from yi by decreasing the cost of vi), and moreover, the threshold bid of each vi is at least 1, so the total payment of M on x is at least kΔ/2.",
                "Hence, φNTUmin(M) ≥ M(x)/NTUmin(x) ≥ Δ/2.",
                "REMARK 4.",
                "The lower bound of Theorem 5 can be generalised to randomised mechanisms, where a randomised mechanism is considered to be truthful if it can be represented as a probability distribution over truthful mechanisms.",
                "In this case, instead of choosing the vertex x ∈ X with the highest degree, we put both (y, xl) and (y, xr) into W , label each edge with the probability that the respective part of the block is chosen, and pick x ∈ X with the highest weighted degree.",
                "The argument can be further extended to a more permissive definition of truthfulness for randomised mechanisms, but this discussion is beyond the scope of this paper. 6.",
                "PROPERTIES OF PAYMENT BOUNDS In this section we consider several desirable properties of payment bounds and evaluate the four payment bounds proposed in this paper with respect to them.",
                "The particular properties that we are interested in are independence of the choice of S (Section 6.3), monotonicity (Section 6.4.1), computational hardness (Section 6.4.2), and the relationship with other reasonable bounds, such as the total cost of the cheapest set (Section 6.1), or the total VCG payment (Section 6.2). 6.1 Comparison with total cost Our first requirement is that a payment bound should not be less than the total cost of the selected set.",
                "Payment bounds are used to evaluate the performance of set-system auctions.",
                "The latter have to satisfy individual rationality, i.e., the payment to each agent must be at least as large as his incurred costs; it is only reasonable to require the payment bound to satisfy the same requirement.",
                "Clearly, NTUmax(c) and NTUmin(c) satisfy this requirement due to condition (1), and so does TUmax(c), since TUmax(c) ≥ NTUmax(c).",
                "However, TUmin(c) fails this test.",
                "The example of Proposition 4 shows that for path auctions, TUmin(c) can be smaller than the total cost by a factor of 2.",
                "Moreover, there are set systems and cost vectors for which TUmin(c) is smaller than the cost of the cheapest set S by a factor of Ω(n).",
                "Consider, for example, the vertex-cover auction for the graph of Proposition 5 with the costs cX1 = · · · = cXn−2 = cXn−1 = 1, cX0 = 0.",
                "The cost of a cheapest vertex cover is n − 2, and the lexicographically first vertex cover of cost n−2 is {X0, X1, . . . , Xn−2}.",
                "The constraints in (2) are bXi + bX0 ≤ cXn−1 = 1.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bX1 = · · · = bXn−2 = 0, bX0 = 1, which means that TUmin(c) ≤ 1.",
                "This observation suggests that the payment bound TUmin(c) is too strong to be realistic, since it can be substantially lower than the cost of the cheapest feasible set.",
                "Nevertheless, some of the positive results that were proved in [16] for NTUmin(c) go through for TUmin(c) as well.",
                "In particular, one can show that if the feasible sets are the bases of a monopolyfree matroid, then φTUmin(VCG) = 1.",
                "To show that φTUmin(VCG) is at most 1, one must prove that the VCG payment is at most TUmin(c).",
                "This is shown for NTUmin(c) in the first paragraph of the proof of Theorem 5 in [16].",
                "Their argument does not use condition (1) at all, so it also applies to TUmin(c).",
                "On the other hand, φTUmin(VCG) ≥ 1 since φTUmin(VCG) ≥ φNTUmin(VCG) and φNTUmin(VCG) ≥ 1 by Proposition 7 of [16] (and also by Proposition 6 below). 6.2 Comparison with VCG payments Another measure of suitability for payment bounds is that they should not result in frugality ratios that are less then 1 for wellknown truthful mechanisms.",
                "If this is indeed the case, the payment bound may be too weak, as it becomes too easy to design mechanisms that perform well with respect to it.",
                "It particular, a reasonable requirement is that a payment bound should not exceed the total payment of the classical VCG mechanism.",
                "The following proposition shows that NTUmax(c), and therefore also NTUmin(c) and TUmin(c), do not exceed the VCG payment pVCG(c).",
                "The proof essentially follows the argument of Proposition 7 of [16] and can be found in the full version of this paper [8].",
                "PROPOSITION 6. φNTUmax(VCG) ≥ 1.",
                "Proposition 6 shows that none of the payment bounds TUmin(c), NTUmin(c) and NTUmax(c) exceeds the payment of VCG.",
                "However, the payment bound TUmax(c) can be larger that the total 343 VCG payment.",
                "In particular, for the instance in Proposition 5, the VCG payment is smaller than TUmax(c) by a factor of n − 2.",
                "We have already seen that TUmax(c) ≥ n − 2.",
                "On the other hand, under VCG, the threshold bid of any Xi, i = 1, . . . , n − 2, is 0: if any such vertex bids above 0, it is deleted from the winning set together with X0 and replaced with Xn−1.",
                "Similarly, the threshold bid of X0 is 1, because if X0 bids above 1, it can be replaced with Xn−1.",
                "So the VCG payment is 1.",
                "This result is not surprising: the definition of TUmax(c) implicitly assumes there is co-operation between the agents, while the computation of VCG payments does not take into account any interaction between them.",
                "Indeed, co-operation enables the agents to extract higher payments under VCG.",
                "That is, VCG is not groupstrategyproof.",
                "This suggests that as a payment bound, TUmax(c) may be too liberal, at least in a context where there is little or no co-operation between agents.",
                "Perhaps TUmax(c) can be a good benchmark for measuring the performance of mechanisms designed for agents that can form coalitions or make side payments to each other, in particular, group-strategyproof mechanisms.",
                "Another setting in which bounding φTUmax is still of some interest is when, for the underlying problem, the optimal allocation and VCG payments are NP-hard to compute.",
                "In this case, finding a polynomial-time computable mechanism with good frugality ratio with respect to TUmax(c) is a non-trivial task, while bounding the frugality ratio with respect to more challenging payment bounds could be too difficult.",
                "To illustrate this point, compare the proofs of Lemma 6 and Lemma 7: both require some effort, but the latter is much more difficult than the former. 6.3 The choice of S All payment bounds defined in this paper correspond to the total bid of all elements in the cheapest feasible set, where ties are broken lexicographically.",
                "While this definition ensures that our payment bounds are well-defined, the particular choice of the drawresolution rule appears arbitrary, and one might wonder if our payment bounds are sufficiently robust to be independent of this choice.",
                "It turns out that is indeed the case for NTUmin(c) and NTUmax(c), i.e., these bounds do not depend on the draw-resolution rule.",
                "To see this, suppose that two feasible sets S1 and S2 have the same cost.",
                "In the computation of NTUmin(c, S1), all vertices in S1 \\S2 would have to bid their true cost, since otherwise S2 would become cheaper than S1.",
                "Hence, any bid vector for S1 can only have be = ce for e ∈ S1 ∩ S2, and hence constitutes a valid bid vector for S2 and vice versa.",
                "A similar argument applies to NTUmax(c).",
                "However, for TUmin(c) and TUmax(c) this is not the case.",
                "For example, consider the set system E = {e1, e2, e3, e4, e5}, F = {S1 = {e1, e2}, S2 = {e2, e3, e4}, S3 = {e4, e5}} with the costs c1 = 2, c2 = c3 = c4 = 1, c5 = 3.",
                "The cheapest sets are S1 and S2.",
                "Now TUmax(c, S1) ≤ 4, as the total bid of the elements in S1 cannot exceed the total cost of S3.",
                "On the other hand, TUmax(c, S2) ≥ 5, as we can set b2 = 3, b3 = 0, b4 = 2.",
                "Similarly, TUmin(c, S1) = 4, because the inequalities in (2) are b1 ≤ 2 and b1 + b2 ≤ 4.",
                "But TUmin(c, S2) ≤ 3 as we can set b2 = 1, b3 = 2, b4 = 0. 6.4 Negative results for NTUmin(c) and TUmin(c) The results in [16] and our vertex cover results are proved for the frugality ratio φNTUmin.",
                "Indeed, it can be argued that φNTUmin is the best definition of frugality ratio, because among all reasonable payment bounds (i.e., ones that are at least as large as the cost of the cheapest feasible set), it is most demanding of the algorithm.",
                "However, NTUmin(c) is not always the easiest or the most natural payment bound to work with.",
                "In this subsection, we discuss several disadvantages of NTUmin(c) (and also TUmin(c)) as compared to NTUmax(c) and TUmax(c). 6.4.1 Nonmonotonicity The first problem with NTUmin(c) is that it is not monotone with respect to F, i.e., it may increase when one adds a feasible set to F. (It is, however, monotone in the sense that a losing agent cannot become a winner by raising his cost.)",
                "Intuitively, a good payment bound should satisfy this monotonicity requirement, as adding a feasible set increases the competition, so it should drive the prices down.",
                "Note that this indeed the case for NTUmax(c) and TUmax(c) since a new feasible set adds a constraint in (2), thus limiting the solution space for the respective linear program.",
                "PROPOSITION 7.",
                "Adding a feasible set to F can increase the value of NTUmin(c) by a factor of Ω(n).",
                "PROOF.",
                "Let E = {x, xx, y1, . . . , yn, z1, . . . , zn}.",
                "Set Y = {y1, . . . , yn}, S = Y ∪ {x}, Ti = Y \\ {yi} ∪ {zi}, i = 1, . . . , n, and suppose that F = {S, T1, . . . , Tn}.",
                "The costs are cx = 0, cxx = 0, cyi = 0, czi = 1 for i = 1, . . . , n. Note that S is the cheapest feasible set.",
                "Let F = F ∪ {T0}, where T0 = Y ∪ {xx}.",
                "For F, the bid vector by1 = · · · = byn = 0, bx = 1 satisfies (1), (2), and (3), so NTUmin(c) ≤ 1.",
                "For F , S is still the lexicographically-least cheapest set.",
                "Any optimal solution has bx = 0 (by constraint in (2) with T0).",
                "Condition (3) for yi implies bx + byi = czi = 1, so byi = 1 and NTUmin(c) = n. For path auctions, it has been shown [18] that NTUmin(c) is non-monotone in a slightly different sense, i.e., with respect to adding a new edge (agent) rather than a new feasible set (a team of existing agents).",
                "REMARK 5.",
                "We can also show that NTUmin(c) is non-monotone for vertex cover.",
                "In this case, adding a new feasible set corresponds to deleting edges from the graph.",
                "It turns out that deleting a single edge can increase NTUmin(c) by a factor of n − 2; the construction is similar to that of Proposition 5. 6.4.2 NP-Hardness Another problem with NTUmin(c, S) is that it is NP-hard to compute even if the number of feasible sets is polynomial in n. Again, this puts it at a disadvantage compared to NTUmax(c, S) and TUmax(c, S) (see Remark 1).",
                "THEOREM 6.",
                "Computing NTUmin(c) is NP-hard, even when the lexicographically-least feasible set S is given in the input.",
                "PROOF.",
                "We reduce EXACT COVER BY 3-SETS(X3C) to our problem.",
                "An instance of X3C is given by a universe G = {g1, . . . , gn} and a collection of subsets C1, . . . , Cm, Ci ⊂ G, |Ci| = 3, where the goal is to decide whether one can cover G by n/3 of these sets.",
                "Observe that if this is indeed the case, each element of G is contained in exactly one set of the cover.",
                "LEMMA 9.",
                "Consider a minimisation problem P of the following form: Minimise P i=1,...,n bi under conditions (1) bi ≥ 0 for all i = 1, . . . , n; (2) for any j = 1, . . . , k we have P bi∈Sj bi ≤ aj, where Sj ⊆ {b1, . . . , bn}; (3) for each bj , one of the constraints in (2) involving it is tight.",
                "For any such P, one can construct a set system S and a vector of costs c such that NTUmin(c) is the optimal solution to P. PROOF.",
                "The construction is straightforward: there is an element of cost 0 for each bi, an element of cost aj for each aj, the feasible solutions are {b1, . . . , bn}, or any set obtained from {b1, . . . , bn} by replacing the elements in Sj by aj. 344 By this lemma, all we have to do to prove Theorem 6 is to show how to solve X3C by using the solution to a minimisation problem of the form given in Lemma 9.",
                "We do this as follows.",
                "For each Ci, we introduce 4 variables xi, ¯xi, ai, and bi.",
                "Also, for each element gj of G there is a variable dj.",
                "We use the following set of constraints: • In (1), we have constraints xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 for all i = 1, . . . , m, j = 1, . . . , n. • In (2), for all i = 1, . . . , m, we have the following 5 constraints: xi + ¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi + bi ≤ 1.",
                "Also, for all j = 1, . . . , n we have a constraint of the form xi1 + · · · + xik + dj ≤ 1, where Ci1 , . . . , Cik are the sets that contain gj.",
                "The goal is to minimize z = P i(xi + ¯xi + ai + bi) + P j dj.",
                "Observe that for each j, there is only one constraint involving dj , so by condition (3) it must be tight.",
                "Consider the two constraints involving ai.",
                "One of them must be tight, and therefore xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1.",
                "Hence, for any feasible solution to (1)-(3) we have z ≥ m. Now, suppose that there is an exact set cover.",
                "Set dj = 0 for j = 1, . . . , n. Also, if Ci is included in this cover, set xi = 1, ¯xi = ai = bi = 0, otherwise set ¯xi = 1, xi = ai = bi = 0.",
                "Clearly, all inequalities in (2) are satisfied (we use the fact that each element is covered exactly once), and for each variable, one of the constraints involving it is tight.",
                "This assignment results in z = m. Conversely, suppose there is a feasible solution with z = m. As each addend of the form xi + ¯xi + ai + bi contributes at least 1, we have xi + ¯xi + ai + bi = 1 for all i, dj = 0 for all j.",
                "We will now show that for each i, either xi = 1 and ¯xi = 0, or xi = 0 and ¯xi = 1.",
                "For the sake of contradiction, suppose that xi = δ < 1, ¯xi = δ < 1.",
                "As one of the constraints involving ai must be tight, we have ai ≥ min{1 − δ, 1 − δ }.",
                "Similarly, bi ≥ min{1 − δ, 1 − δ }.",
                "Hence, xi + ¯xi + ai + bi = 1 = δ +δ +2 min{1−δ, 1−δ } > 1.",
                "To finish the proof, note that for each j = 1, . . . , m we have xi1 + · · · + xik + dj = 1 and dj = 0, so the subsets that correspond to xi = 1 constitute a set cover.",
                "REMARK 6.",
                "In the proofs of Proposition 7 and Theorem 6 all constraints in (1) are of the form be ≥ 0.",
                "Hence, the same results are true for TUmin(c).",
                "REMARK 7.",
                "For shortest-path auctions, the size of F can be superpolynomial.",
                "However, there is a polynomial-time separation oracle for constraints in (2) (to construct one, use any algorithm for finding shortest paths), so one can compute NTUmax(c) and TUmax(c) in polynomial time.",
                "On the other hand, recently and independently it was shown [18] that computing NTUmin(c) for shortest-path auctions is NP-hard. 7.",
                "REFERENCES [1] A. Archer and E. Tardos, Frugal path mechanisms.",
                "In Proceedings of the 13th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 991-999, 2002 [2] R. Bar-Yehuda, K. Bendel, A. Freund, and D. Rawitz, Local ratio: A unified framework for approximation algorithms.",
                "In Memoriam: Shimon Even 1935-2004.",
                "ACM Comput.",
                "Surv., 36(4):422-463, 2004 [3] R. Bar-Yehuda and S. Even, A local-ratio theorem for approximating the weighted vertex cover problem.",
                "Annals of Discrete Mathematics, 25:27-46, 1985 [4] E. Clarke, Multipart pricing of public goods.",
                "Public Choice, 8:17-33, 1971 [5] G. Calinescu, Bounding the payment of approximate truthful mechanisms.",
                "In Proceedings of the 15th International Symposium on Algorithms and Computation, pages 221-233, 2004 [6] A. Czumaj and A. Ronen, On the expected payment of mechanisms for task allocation.",
                "In Proceedings of the 5th ACM Conference on Electronic Commerce (EC04), 2004 [7] E. Elkind, True costs of cheap labor are hard to measure: edge deletion and VCG payments in graphs.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [8] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Frugality ratios and improved truthful mechanisms for vertex cover.",
                "Available from http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai, and K. Steiglitz, Frugality in path auctions.",
                "In Proceedings of the 15th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 694-702, 2004 [10] J. Feigenbaum, C. H. Papadimitriou, R. Sami, and S. Shenker, A BGP-based mechanism for lowest-cost routing.",
                "In Proceedings of the 21st Symposium on Principles of Distributed Computing, pages 173-182, 2002 [11] A. Fiat, A. Goldberg, J. Hartline, and A. Karlin, Competitive generalized auctions.",
                "In Proceedings of the 34th Annual ACM Symposium on Theory of Computation, pages 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra and A. Verma, Coalitional games on graphs: core structures, substitutes and frugality.",
                "In Proceedings of the 4th ACM Conference on Electronic Commerce (EC03), 2005 [13] A. Goldberg, J. Hartline, and A. Wright, Competitive auctions and digital goods.",
                "In Proceedings of the 12th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2001 [14] T. Groves, Incentives in teams.",
                "Econometrica, 41(4):617-631, 1973 [15] N. Immorlica, D. Karger, E. Nikolova, and R. Sami, First-price path auctions.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [16] A. R. Karlin, D. Kempe, and T. Tamir, Beyond VCG: frugality of truthful mechanisms.",
                "In Proceedings of the 46th Annual IEEE Symposium on Foundations of Computer Science, pages 615-626, 2005 [17] D. Kempe, Personal communication, 2006 [18] N. Chen, A. R. Karlin, Cheap labor can be expensive, In Proceedings of the 18th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2007 [19] N. Nisan and A. Ronen, Algorithmic mechanism design.",
                "In Proceedings of the 31st Annual ACM Symposium on Theory of Computation, pages 129-140, 1999 [20] A. Ronen and R. Talisman, Towards generic low payment mechanisms for decentralized task allocation.",
                "In Proceedings of the 7th International IEEE Conference on E-Commerce Technology, 2005 [21] K. Talwar, The price of truth: frugality in truthful mechanisms.",
                "In Proceedings of 20th International Symposium on Theoretical Aspects of Computer Science, 2003 [22] W. Vickrey, Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961 345"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Dada una \"regla de asignación monótona\" A y un vector de oferta B, la oferta umbral de un agente e ∈ A (b) es la oferta más alta de este agente que aún gana la subasta, dado que las ofertas de otros participantes siguen siendo las mismas.",
                "Es bien sabido (ver, por ejemplo, [19, 13]) que cualquier subasta que tenga una \"regla de asignación monótona\" y paga a cada agente su oferta de umbral es veraz;Por el contrario, cualquier subasta veraz tiene una \"regla de asignación monótona\".",
                "Los mecanismos veraces para la cubierta del vértice recuerdan que para una subasta de cobertura de vértice en un gráfico g = (v, e), una regla de asignación es un algoritmo que toma como entrada una oferta BV para cada vértice y devuelve una cubierta de vértice de G. comoExplicado en la Sección 2, podemos combinar una \"regla de asignación monótona\" con pagos umbral para obtener una subasta veraz.",
                "Cualquier subasta de cobertura de vértice M que tenga una regla de asignación localmente óptima y monótona \"y paga a cada agente su oferta de umbral tiene una relación de frugalidad φnumin (M) ≤ 2δ.",
                "Por lo tanto, al usarlo en la parte superior de una \"regla de asignación monótona\" con aproximadamente 342 relación de imación α, obtenemos una regla de asignación localmente óptima monótona con relación de aproximación α.",
                "Dado que cualquier subasta veraz tiene una \"regla de asignación monótona\", este procedimiento transforma cualquier mecanismo veraz para el problema de cobertura de vértices en una frugal mientras preserva la relación de aproximación.5.2 Límite inferior en esta subsección, demostramos que el límite superior del teorema 4 es esencialmente óptimo."
            ],
            "translated_text": "",
            "candidates": [
                "regla de asignación monótona",
                "regla de asignación monótona",
                "regla de asignación monótona",
                "regla de asignación monótona",
                "regla de asignación monótona",
                "regla de asignación monótona",
                "regla de asignación monótona",
                "regla de asignación monótona",
                "regla de asignación monótona",
                "regla de asignación monótona",
                "regla de asignación monótona",
                "regla de asignación monótona"
            ],
            "error": []
        },
        "co-operation": {
            "translated_key": "cooperación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Frugality Ratios And Improved Truthful Mechanisms for Vertex Cover ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT In set-system auctions, there are several overlapping teams of agents, and a task that can be completed by any of these teams.",
                "The auctioneers goal is to hire a team and pay as little as possible.",
                "Examples of this setting include shortest-path auctions and vertex-cover auctions.",
                "Recently, Karlin, Kempe and Tamir introduced a new definition of frugality ratio for this problem.",
                "Informally, the frugality ratio is the ratio of the total payment of a mechanism to a desired payment bound.",
                "The ratio captures the extent to which the mechanism overpays, relative to perceived fair cost in a truthful auction.",
                "In this paper, we propose a new truthful polynomial-time auction for the vertex cover problem and bound its frugality ratio.",
                "We show that the solution quality is with a constant factor of optimal and the frugality ratio is within a constant factor of the best possible worst-case bound; this is the first auction for this problem to have these properties.",
                "Moreover, we show how to transform any truthful auction into a frugal one while preserving the approximation ratio.",
                "Also, we consider two natural modifications of the definition of Karlin et al., and we analyse the properties of the resulting payment bounds, such as monotonicity, computational hardness, and robustness with respect to the draw-resolution rule.",
                "We study the relationships between the different payment bounds, both for general set systems and for specific set-system auctions, such as path auctions and vertex-cover auctions.",
                "We use these new definitions in the proof of our main result for vertex-cover auctions via a bootstrapping technique, which may be of independent interest.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a set system auction there is a single buyer and many vendors that can provide various services.",
                "It is assumed that the buyers requirements can be satisfied by various subsets of the vendors; these subsets are called the feasible sets.",
                "A widely-studied class of setsystem auctions is path auctions, where each vendor is able to sell access to a link in a network, and the feasible sets are those sets whose links contain a path from a given source to a given destination; the study of these auctions has been initiated in the seminal paper by Nisan and Ronen [19] (see also [1, 10, 9, 6, 15, 7, 20]).",
                "We assume that each vendor has a cost of providing his services, but submits a possibly larger bid to the auctioneer.",
                "Based on these bids, the auctioneer selects a feasible subset of vendors, and makes payments to the vendors in this subset.",
                "Each selected vendor enjoys a profit of payment minus cost.",
                "Vendors want to maximise profit, while the buyer wants to minimise the amount he pays.",
                "A natural goal in this setting is to design a truthful auction, in which vendors have an incentive to bid their true cost.",
                "This can be achieved by paying each selected vendor a premium above her bid in such a way that the vendor has no incentive to overbid.",
                "An interesting question in mechanism design is how much the auctioneer will have to overpay in order to ensure truthful bids.",
                "In the context of path auctions this topic was first addressed by Archer and Tardos [1].",
                "They define the frugality ratio of a mechanism as the ratio between its total payment and the cost of the cheapest path disjoint from the path selected by the mechanism.",
                "They show that, for a large class of truthful mechanisms for this problem, the frugality ratio is as large as the number of edges in the shortest path.",
                "Talwar [21] extends this definition of frugality ratio to general set systems, and studies the frugality ratio of the classical VCG mechanism [22, 4, 14] for many specific set systems, such as minimum spanning trees and set covers.",
                "While the definition of frugality ratio proposed by [1] is wellmotivated and has been instrumental in studying truthful mechanisms for set systems, it is not completely satisfactory.",
                "Consider, for example, the graph of Figure 1 with the costs cAB = cBC = A B C D Figure 1: The diamond graph 336 cCD = 0, cAC = cBD = 1.",
                "This graph is 2-connected and the VCG payment to the winning path ABCD is bounded.",
                "However, the graph contains no A-D path that is disjoint from ABCD, and hence the frugality ratio of VCG on this graph remains undefined.",
                "At the same time, there is no monopoly, that is, there is no vendor that appears in all feasible sets.",
                "In auctions for other types of set systems, the requirement that there exist a feasible solution disjoint from the selected one is even more severe: for example, for vertex-cover auctions (where vendors correspond to the vertices of some underlying graph, and the feasible sets are vertex covers) the requirement means that the graph must be bipartite.",
                "To deal with this problem, Karlin et al. [16] suggest a better benchmark, which is defined for any monopoly-free set system.",
                "This quantity, which they denote by ν, intuitively corresponds to the value of a cheapest Nash equilibrium.",
                "Based on this new definition, the authors construct new mechanisms for the shortest path problem and show that the overpayment of these mechanisms is within a constant factor of optimal. 1.1 Our results Vertex cover auctions We propose a truthful polynomial-time auction for vertex cover that outputs a solution whose cost is within a factor of 2 of optimal, and whose frugality ratio is at most 2Δ, where Δ is the maximum degree of the graph (Theorem 4).",
                "We complement this result by proving (Theorem 5) that for any Δ and n, there are graphs of maximum degree Δ and size Θ(n) for which any truthful mechanism has frugality ratio at least Δ/2.",
                "This means that the solution quality of our auction is with a factor of 2 of optimal and the frugality ratio is within a factor of 4 of the best possible bound for worst-case inputs.",
                "To the best of our knowledge, this is the first auction for this problem that enjoys these properties.",
                "Moreover, we show how to transform any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio.",
                "Frugality ratios Our vertex cover results naturally suggest two modifications of the definition of ν in [16].",
                "These modifications can be made independently of each other, resulting in four different payment bounds TUmax, TUmin, NTUmax, and NTUmin, where NTUmin is equal to the original payment bound ν of in [16].",
                "All four payment bounds arise as Nash equilibria of certain games (see the full version of this paper [8]); the differences between them can be seen as the price of initiative and the price of cooperation (see Section 3).",
                "While our main result about vertex cover auctions (Theorem 4) is with respect to NTUmin = ν, we make use of the new definitions by first comparing the payment of our mechanism to a weaker bound NTUmax, and then bootstrapping from this result to obtain the desired bound.",
                "Inspired by this application, we embark on a further study of these payment bounds.",
                "Our results here are as follows: 1.",
                "We observe (Proposition 1) that the four payment bounds always obey a particular order that is independent of the choice of the set system and the cost vector, namely, TUmin ≤ NTUmin ≤ NTUmax ≤ TUmax.",
                "We provide examples (Proposition 5 and Corollaries 1 and 2) showing that for the vertex cover problem any two consecutive bounds can differ by a factor of n − 2, where n is the number of agents.",
                "We then show (Theorem 2) that this separation is almost best possible for general set systems by proving that for any set system TUmax/TUmin ≤ n. In contrast, we demonstrate (Theorem 3) that for path auctions TUmax/TUmin ≤ 2.",
                "We provide examples (Propositions 2, 3 and 4) showing that this bound is tight.",
                "We see this as an argument for the study of vertexcover auctions, as they appear to be more representative of the general team -selection problem than the widely studied path auctions. 2.",
                "We show (Theorem 1) that for any set system, if there is a cost vector for which TUmin and NTUmin differ by a factor of α, there is another cost vector that separates NTUmin and NTUmax by the same factor and vice versa; the same is true for the pairs (NTUmin, NTUmax) and (NTUmax, TUmax).",
                "This symmetry is quite surprising, since, e.g., TUmin and NTUmax are obtained from NTUmin by two very different transformations.",
                "This observation suggests that the four payment bounds should be studied in a unified framework; moreover, it leads us to believe that the bootstrapping technique of Theorem 4 may have other applications. 3.",
                "We evaluate the payment bounds introduced here with respect to a checklist of desirable features.",
                "In particular, we note that the payment bound ν = NTUmin of [16] exhibits some counterintuitive properties, such as nonmonotonicity with respect to adding a new feasible set (Proposition 7), and is NP-hard to compute (Theorem 6), while some of the other payment bounds do not suffer from these problems.",
                "This can be seen as an argument in favour of using weaker but efficiently computable bounds NTUmax and TUmax.",
                "Related work Vertex-cover auctions have been studied in the past by Talwar [21] and Calinescu [5].",
                "Both of these papers are based on the definition of frugality ratio used in [1]; as mentioned before, this means that their results only apply to bipartite graphs.",
                "Talwar [21] shows that the frugality ratio of VCG is at most Δ.",
                "However, since finding the cheapest vertex cover is an NP-hard problem, the VCG mechanism is computationally infeasible.",
                "The first (and, to the best of our knowledge, only) paper to investigate polynomial-time truthful mechanisms for vertex cover is [5].",
                "This paper studies an auction that is based on the greedy allocation algorithm, which has an approximation ratio of log n. While the main focus of [5] is the more general set cover problem, the results of [5] imply a frugality ratio of 2Δ2 for vertex cover.",
                "Our results improve on those of [21] as our mechanism is polynomial-time computable, as well as on those of [5], as our mechanism has a better approximation ratio, and we prove a stronger bound on the frugality ratio; moreover, this bound also applies to the mechanism of [5]. 2.",
                "PRELIMINARIES In most of this paper, we discuss auctions for set systems.",
                "A set system is a pair (E, F), where E is the ground set, |E| = n, and F is a collection of feasible sets, which are subsets of E. Two particular types of set systems are of interest to us - shortest path systems, in which the ground set consists of all edges of a network, and the feasible sets are paths between two specified vertices s and t, and vertex cover systems, in which the elements of the ground set are the vertices of a graph, and the feasible sets are vertex covers of this graph.",
                "In set system auctions, each element e of the ground set is owned by an independent agent and has an associated non-negative cost ce.",
                "The goal of the centre is to select (purchase) a feasible set.",
                "Each element e in the selected set incurs a cost of ce.",
                "The elements that are not selected incur no costs.",
                "The auction proceeds as follows: all elements of the ground set make their bids, the centre selects a feasible set based on the bids and makes payments to the agents.",
                "Formally, an auction is defined by an allocation rule A : Rn → F and a payment rule P : Rn → Rn .",
                "The allocation rule takes as input a vector of bids and decides which of the sets in F should be selected.",
                "The payment rule also takes as input a vector of bids and decides how much to pay to each agent.",
                "The standard requirements are individual rationality, i.e., the payment to each agent should be at least as high as his incurred cost (0 for agents not in the selected set and ce for agents in the 337 selected set) and incentive compatibility, or truthfulness, i.e., each agents dominant strategy is to bid his true cost.",
                "An allocation rule is monotone if an agent cannot increase his chance of getting selected by raising his bid.",
                "Formally, for any bid vector b and any e ∈ E, if e ∈ A(b) then e ∈ A(b1, . . . , be, . . . , bn) for any be > be.",
                "Given a monotone allocation rule A and a bid vector b, the threshold bid te of an agent e ∈ A(b) is the highest bid of this agent that still wins the auction, given that the bids of other participants remain the same.",
                "Formally, te = sup{be ∈ R | e ∈ A(b1, . . . , be, . . . , bn)}.",
                "It is well known (see, e.g. [19, 13]) that any auction that has a monotone allocation rule and pays each agent his threshold bid is truthful; conversely, any truthful auction has a monotone allocation rule.",
                "The VCG mechanism is a truthful mechanism that maximises the social welfare and pays 0 to the losing agents.",
                "For set system auctions, this simply means picking a cheapest feasible set, paying each agent in the selected set his threshold bid, and paying 0 to all other agents.",
                "Note, however, that the VCG mechanism may be difficult to implement, since finding a cheapest feasible set may be intractable.",
                "If U is a set of agents, c(U) denotes P w∈U cw.",
                "Similarly, b(U) denotes P w∈U bw. 3.",
                "FRUGALITY RATIOS We start by reproducing the definition of the quantity ν from [16, Definition 4].",
                "Let (E, F) be a set system and let S be a cheapest feasible set with respect to the true costs ce.",
                "Then ν(c, S) is the solution to the following optimisation problem.",
                "Minimise B = P e∈S be subject to (1) be ≥ ce for all e ∈ E (2) P e∈S\\T be ≤ P e∈T \\S ce for all T ∈ F (3) for every e ∈ S, there is a Te ∈ F such that e ∈ Te andP e ∈S\\Te be = P e ∈Te\\S ce The bound ν(c, S) can be seen as an outcome of a two-stage process, where first each agent e ∈ S makes a bid be stating how much it wants to be paid, and then the centre decides whether to accept these bids.",
                "The behaviour of both parties is affected by the following considerations.",
                "From the centres point of view, the set S must remain the most attractive choice, i.e., it must be among the cheapest feasible sets under the new costs ce = ce for e ∈ S, ce = be for e ∈ S (condition (2)).",
                "The reason for that is that if (2) is violated for some set T, the centre would prefer T to S. On the other hand, no agent would agree to a payment that does not cover his costs (condition (1)), and moreover, each agent tries to maximise his profit by bidding as high as possible, i.e., none of the agents can increase his bid without violating condition (2) (condition (3)).",
                "The centre wants to minimise the total payout, so ν(c, S) corresponds to the best possible outcome from the centres point of view.",
                "This definition captures many important aspects of our intuition about fair payments.",
                "However, it can be modified in two ways, both of which are still quite natural, but result in different payment bounds.",
                "First, we can consider the worst rather than the best possible outcome for the centre.",
                "That is, we can consider the maximum total payment that the agents can extract by jointly selecting their bids subject to (1), (2), and (3).",
                "Such a bound corresponds to maximising B subject to (1), (2), and (3) rather than minimising it.",
                "If it is the agents who make the original bids (rather than the centre), this kind of bidding behaviour is plausible.",
                "On the other hand, in a game in which the centre proposes payments to the agents in S and the agents accept them as long as (1), (2) and (3) are satisfied, we would be likely to observe a total payment of ν(c, S).",
                "Hence, the difference between these two definitions can be seen as the price of initiative.",
                "Second, the agents may be able to make payments to each other.",
                "In this case, if they can extract more money from the centre by agreeing on a vector of bids that violates individual rationality (i.e., condition (1)) for some bidders, they might be willing to do so, as the agents who are paid below their costs will be compensated by other members of the group.",
                "The bids must still be realistic, i.e., they have to satisfy be ≥ 0.",
                "The resulting change in payments can be seen as the price of <br>co-operation</br> and corresponds to replacing condition (1) with the following weaker condition (1∗ ): be ≥ 0 for all e ∈ E. (1∗ ) By considering all possible combinations of these modifications, we obtain four different payment bounds, namely • TUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1∗ ), (2), and (3). • TUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1∗ ), (2), and (3). • NTUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1), (2), and (3). • NTUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1), (2), (3).",
                "The abbreviations TU and NTU correspond, respectively, to transferable utility and non-transferable utility, i.e., the agents ability/inability to make payments to each other.",
                "For concreteness, we will take TUmin(c) to be TUmin(c, S) where S is the lexicographically least amongst the cheapest feasible sets.",
                "We define TUmax(c), NTUmin(c), NTUmax(c) and ν(c) similarly, though we will see in Section 6.3 that, in fact, NTUmin(c, S) and NTUmax(c, S) are independent of the choice of S. Note that the quantity ν(c) from [16] is NTUmin(c).",
                "The second modification (transferable utility) is more intuitively appealing in the context of the maximisation problem, as both assume some degree of <br>co-operation</br> between the agents.",
                "While the second modification can be made without the first, the resulting payment bound TUmin(c, S) is too strong to be a realistic benchmark, at least for general set systems.",
                "In particular, it can be smaller than the total cost of the cheapest feasible set S (see Section 6).",
                "Nevertheless, we provide the definition as well as some results about TUmin(c, S) in the paper, both for completeness and because we believe that it may help to understand which properties of the payment bounds are important for our proofs.",
                "Another possibility would be to introduce an additional constraint P e∈S be ≥P e∈S ce in the definition of TUmin(c, S) (note that this condition holds automatically for TUmax(c, S), as TUmax(c, S) ≥ NTUmax(c, S)); however, such a definition would have no direct game-theoretic interpretation, and some of our results (in particular, the ones in Section 4) would no longer be true.",
                "REMARK 1.",
                "For the payment bounds that are derived from maximisation problems, (i.e., TUmax(c, S) and NTUmax(c, S)), constraints of type (3) are redundant and can be dropped.",
                "Hence, TUmax(c, S) and NTUmax(c, S) are solutions to linear programs, and therefore can be computed in polynomial time as long as we have a separation oracle for constraints in (2).",
                "In contrast, 338 NTUmin(c, S) can be NP-hard to compute even if the size of F is polynomial (see Section 6).",
                "The first and third inequalities in the following observation follow from the fact that condition (1∗ ) is strictly weaker than condition (1).",
                "PROPOSITION 1.",
                "TUmin(c, S) ≤ NTUmin(c, S) ≤ NTUmax(c, S) ≤ TUmax(c, S).",
                "Let M be a truthful mechanism for (E, F).",
                "Let pM(c) denote the total payments of M when the actual costs are c. A frugality ratio of M with respect to a payment bound is the ratio between the payment of M and this payment bound.",
                "In particular, φTUmin(M) = sup c pM(c)/TUmin(c), φTUmax(M) = sup c pM(c)/TUmax(c), φNTUmin(M) = sup c pM(c)/NTUmin(c), φNTUmax(M) = sup c pM(c)/NTUmax(c).",
                "We conclude this section by showing that there exist set systems and respective cost vectors for which all four payment bounds are different.",
                "In the next section, we quantify this difference, both for general set systems, and for specific types of set systems, such as path auctions or vertex cover auctions.",
                "EXAMPLE 1.",
                "Consider the shortest-path auction on the graph of Figure 1.",
                "The cheapest feasible sets are all paths from A to D. It can be verified, using the reasoning of Propositions 2 and 3 below, that for the cost vector cAB = cCD = 2, cBC = 1, cAC = cBD = 5, we have • TUmax(c) = 10 (with bAB = bCD = 5, bBC = 0), • NTUmax(c) = 9 (with bAB = bCD = 4, bBC = 1), • NTUmin(c) = 7 (with bAB = bCD = 2, bBC = 3), • TUmin(c) = 5 (with bAB = bCD = 0, bBC = 5). 4.",
                "COMPARING PAYMENT BOUNDS 4.1 Path auctions We start by showing that for path auctions any two consecutive payment bounds can differ by at least a factor of 2.",
                "PROPOSITION 2.",
                "There is an instance of the shortest-path problem for which we have NTUmax(c)/NTUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is due to David Kempe [17].",
                "Consider the graph of Figure 1 with the edge costs cAB = cBC = cCD = 0, cAC = cBD = 1.",
                "Under these costs, ABCD is the cheapest path.",
                "The inequalities in (2) are bAB + bBC ≤ cAC = 1, bBC + bCD ≤ cBD = 1.",
                "By condition (3), both of these inequalities must be tight (the former one is the only inequality involving bAB, and the latter one is the only inequality involving bCD).",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 0, bCD ≥ 0.",
                "Now, if the goal is to maximise bAB + bBC + bCD, the best choice is bAB = bCD = 1, bBC = 0, so NTUmax(c) = 2.",
                "On the other hand, if the goal is to minimise bAB + bBC + bCD, one should set bAB = bCD = 0, bBC = 1, so NTUmin(c) = 1.",
                "PROPOSITION 3.",
                "There is an instance of the shortest-path problem for which we have TUmax(c)/NTUmax(c) ≥ 2.",
                "PROOF.",
                "Again, consider the graph of Figure 1.",
                "Let the edge costs be cAB = cCD = 0, cBC = 1, cAC = cBD = 1.",
                "ABCD is the lexicographically-least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "The inequalities in (2) are the same as in the previous example, and by the same argument both of them are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 1, bCD ≥ 0.",
                "Our goal is to maximise bAB + bBC + bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 0, bBC = 1, so NTUmax(c) = 1.",
                "Otherwise, we can set bAB = bCD = 1, bBC = 0, so TUmax(c) ≥ 2.",
                "PROPOSITION 4.",
                "There is an instance of the shortest-path problem for which we have NTUmin(c)/TUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is also based on the graph of Figure 1.",
                "The edge costs are cAB = cCD = 1, cBC = 0, cAC = cBD = 1.",
                "ABCD is the lexicographically least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "Again, the inequalities in (2) are the same, and both are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 1, bBC ≥ 0, bCD ≥ 1.",
                "Our goal is to minimise bAB + bBC +bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 1, bBC = 0, so NTUmin(c) = 2.",
                "Otherwise, we can set bAB = bCD = 0, bBC = 1, so TUmin(c) ≤ 1.",
                "In Section 4.4 (Theorem 3), we show that the separation results in Propositions 2, 3, and 4 are optimal. 4.2 Connections between separation results The separation results for path auctions are obtained on the same graph using very similar cost vectors.",
                "It turns out that this is not coincidental.",
                "Namely, we can prove the following theorem.",
                "THEOREM 1.",
                "For any set system (E, F), and any feasible set S, max c TUmax(c, S) NTUmax(c, S) = max c NTUmax(c, S) NTUmin(c, S) , max c NTUmax(c, S) NTUmin(c, S) = max c NTUmin(c, S) TUmin(c, S) , where the maximum is over all cost vectors c for which S is a cheapest feasible set.",
                "The proof of the theorem follows directly from the four lemmas proved below; more precisely, the first equality in Theorem 1 is obtained by combining Lemmas 1 and 2, and the second equality is obtained by combining Lemmas 3 and 4.",
                "We prove Lemma 1 here; the proofs of Lemmas 2- 4 are similar and can be found in the full version of this paper [8].",
                "LEMMA 1.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and TUmax(c, S)/NTUmax(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α.",
                "PROOF.",
                "Suppose that TUmax(c, S) = X and NTUmax(c, S) = Y where X/Y = α.",
                "Assume without loss of generality that S consists of elements 1, . . . , k, and let b1 = (b1 1, . . . , b1 k) and b2 = (b2 1, . . . , b2 k) be the bid vectors that correspond to TUmax(c, S) and NTUmax(c, S), respectively.",
                "Construct the cost vector c by setting ci = ci for i ∈ S, ci = min{ci, b1 i } for i ∈ S. Clearly, S is a cheapest set under c .",
                "Moreover, as the costs of elements outside of S remained the same, the right-hand sides of all constraints in (2) did not change, so any bid vector that satisfies (2) and (3) with respect to c, also satisfies them with respect to c .",
                "We will construct two bid vectors b3 and b4 that satisfy conditions (1), (2), and (3) for the cost vector c , and 339 X X X X X 0 X 12 3 X 4 5 6 Figure 2: Graph that separates payment bounds for vertex cover, n = 7 have P i∈S b3 i = X, P i∈S b4 i = Y .",
                "As NTUmax(c , S) ≥ X and NTUmin(c , S) ≤ Y , this implies the lemma.",
                "We can set b3 i = b1 i : this bid vector satisfies conditions (2) and (3) since b1 does, and we have b1 i ≥ min{ci, b1 i } = ci, which means that b3 satisfies condition (1).",
                "Furthermore, we can set b4 i = b2 i .",
                "Again, b4 satisfies conditions (2) and (3) since b2 does, and since b2 satisfies condition (1), we have b2 i ≥ ci ≥ ci, which means that b4 satisfies condition (1).",
                "LEMMA 2.",
                "Suppose c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and TUmax(c , S)/NTUmax(c , S) ≥ α. LEMMA 3.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmin(c , S)/TUmin(c , S) ≥ α. LEMMA 4.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmin(c, S)/TUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α. 4.3 Vertex-cover auctions In contrast to the case of path auctions, for vertex-cover auctions the gap between NTUmin(c) and NTUmax(c) (and hence between NTUmax(c) and TUmax(c), and between TUmin(c) and NTUmin(c)) can be proportional to the size of the graph.",
                "PROPOSITION 5.",
                "For any n ≥ 3, there is a an n-vertex graph and a cost vector c for which TUmax(c)/NTUmax(c) ≥ n − 2.",
                "PROOF.",
                "The underlying graph consists of an (n − 1)-clique on the vertices X1, . . . , Xn−1, and an extra vertex X0 adjacent to Xn−1.",
                "The costs are cX1 = cX2 = · · · = cXn−2 = 0, cX0 = cXn−1 = 1.",
                "We can assume that S = {X0, X1, . . . , Xn−2} (this is the lexicographically first vertex cover of cost 1).",
                "For this set system, the constraints in (2) are bXi + bX0 ≤ cXn−1 = 1 for i = 1, . . . , n − 2.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bXi = 1 for i = 1, . . . , n − 2, bX0 = 0.",
                "Hence, TUmax(c) ≥ n − 2.",
                "For NTUmax(c), there is an additional constraint bX0 ≥ 1, so the best we can do is to set bXi = 0 for i = 1, . . . , n − 2, bX0 = 1, which implies NTUmax(c) = 1.",
                "Combining Proposition 5 with Lemmas 1 and 3, we derive the following corollaries.",
                "COROLLARY 1.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmax(c)/NTUmin(c) ≥ n − 2.",
                "COROLLARY 2.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmin(c)/TUmin(c) ≥ n − 2. j+2ix ij P \\ P ij+2P \\ P yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 P \\ P Figure 3: Proof of Theorem 3: constraints for ˆPij and ˆPij+2 do not overlap 4.4 Upper bounds It turns out that the lower bound proved in the previous subsection is almost tight.",
                "More precisely, the following theorem shows that no two payment bounds can differ by more than a factor of n; moreover, this is the case not just for the vertex cover problem, but for general set systems.",
                "We bound the gap between TUmax(c) and TUmin(c).",
                "Since TUmin(c) ≤ NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), this bound applies to any pair of payment bounds.",
                "THEOREM 2.",
                "For any set system (E, F) and any cost vector c, we have TUmax(c)/TUmin(c) ≤ n. PROOF.",
                "Assume wlog that the winning set S consists of elements 1, . . . , k. Let c1, . . . , ck be the true costs of elements in S, let b1, . . . , bk be their bids that correspond to TUmin(c), and let b1 , . . . , bk be their bids that correspond to TUmax(c).",
                "Consider the conditions (2) and (3) for S. One can pick a subset L of at most k inequalities in (2) so that for each i = 1, . . . , k there is at least one inequality in L that is tight for bi.",
                "Suppose that the jth inequality in L is of the form bi1 + · · · + bit ≤ c(Tj \\ S).",
                "For bi, all inequalities in L are, in fact, equalities.",
                "Hence, by adding up all of them we obtain k P i=1,...,k bi ≥ P j=1,...,k c(Tj \\ S).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c(Tj \\ S).",
                "Combining these two inequalities, we obtain nTUmin(c) ≥ kTUmin(c) ≥ TUmax(c).",
                "REMARK 2.",
                "The final line of the proof of Theorem 2 shows that, in fact, the upper bound on TUmax(c)/TUmin(c) can be strengthened to the size of the winning set, k. Note that in Proposition 5, as well as in Corollaries 1 and 2, k = n−1, so these results do not contradict each other.",
                "For path auctions, this upper bound can be improved to 2, matching the lower bounds of Section 4.1.",
                "THEOREM 3.",
                "For any instance of the shortest path problem, TUmax(c) ≤ 2 TUmin(c).",
                "PROOF.",
                "Given a network (G, s, t), assume without loss of generality that the lexicographically-least cheapest s-t path, P, in G is {e1, . . . , ek}, where e1 = (s, v1), e2 = (v1, v2), . . . , ek = (vk−1, t).",
                "Let c1, . . . , ck be the true costs of e1, . . . , ek, and let b = (b1, . . . , bk) and b = (b1 , . . . , bk ) be bid vectors that correspond to TUmin(c) and TUmax(c), respectively.",
                "For any i = 1, . . . , k, there is a constraint in (2) that is tight for bi with respect to the bid vector b , i.e., an s-t path Pi that avoids ei and satisfies b (P \\Pi) = c(Pi \\P).",
                "We can assume without loss of generality that Pi coincides with P up to some vertex xi, then deviates from P to avoid ei, and finally returns to P at a vertex 340 yi and coincides with P from then on (clearly, it might happen that s = xi or t = yi).",
                "Indeed, if Pi deviates from P more than once, one of these deviations is not necessary to avoid ei and can be replaced with the respective segment of P without increasing the cost of Pi.",
                "Among all paths of this form, let ˆPi be the one with the largest value of yi, i.e., the rightmost one.",
                "This path corresponds to an inequality Ii of the form bxi+1 + · · · + byi ≤ c( ˆPi \\ P).",
                "As in the proof of Theorem 2, we construct a set of tight constraints L such that every variable bi appears in at least one of these constraints; however, now we have to be more careful about the choice of constraints in L. We construct L inductively as follows.",
                "Start by setting L = {I1}.",
                "At the jth step, suppose that all variables up to (but not including) bij appear in at least one inequality in L. Add Iij to L. Note that for any j we have yij+1 > yij .",
                "This is because the inequalities added to L during the first j steps did not cover bij+1 .",
                "See Figure 3.",
                "Since yij+2 > yij+1 , we must also have xij+2 > yij : otherwise, ˆPij+1 would not be the rightmost constraint for bij+1 .",
                "Therefore, the variables in Iij+2 and Iij do not overlap, and hence no bi can appear in more than two inequalities in L. Now we follow the argument of the proof of Theorem 2 to finish.",
                "By adding up all of the (tight) inequalities in L for bi we obtain 2 P i=1,...,k bi ≥ P j=1,...,k c( ˆPj \\ P).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c( ˆPj \\ P), so TUmax(c) ≤ 2TUmin(c). 5.",
                "TRUTHFUL MECHANISMS FOR VERTEX COVER Recall that for a vertex-cover auction on a graph G = (V, E), an allocation rule is an algorithm that takes as input a bid bv for each vertex and returns a vertex cover ˆS of G. As explained in Section 2, we can combine a monotone allocation rule with threshold payments to obtain a truthful auction.",
                "Two natural examples of monotone allocation rules are Aopt, i.e., the algorithm that finds an optimal vertex cover, and the greedy algorithm AGR.",
                "However, Aopt cannot be guaranteed to run in polynomial time unless P = NP and AGR has approximation ratio of log n. Another approximation algorithm for vertex cover, which has approximation ratio 2, is the local ratio algorithm ALR [2, 3].",
                "This algorithm considers the edges of G one by one.",
                "Given an edge e = (u, v), it computes = min{bu, bv} and sets bu = bu − , bv = bv − .",
                "After all edges have been processed, ALR returns the set of vertices {v | bv = 0}.",
                "It is not hard to check that if the order in which the edges are considered is independent of the bids, then this algorithm is monotone as well.",
                "Hence, we can use it to construct a truthful auction that is guaranteed to select a vertex cover whose cost is within a factor of 2 from the optimal.",
                "However, while the quality of the solution produced by ALR is much better than that of AGR, we still need to show that its total payment is not too high.",
                "In the next subsection, we bound the frugality ratio of ALR (and, more generally, all algorithms that satisfy the condition of local optimality, defined later) by 2Δ, where Δ is the maximum degree of G. We then prove a matching lower bound showing that for some graphs the frugality ratio of any truthful auction is at least Δ/2. 5.1 Upper bound We say that an allocation rule is locally optimal if whenever bv >P w∼v bw, the vertex v is not chosen.",
                "Note that for any such rule the threshold bid of v satisfies tv ≤ P w∼v bw.",
                "CLAIM 1.",
                "The algorithms Aopt, AGR, and ALR are locally optimal.",
                "THEOREM 4.",
                "Any vertex cover auction M that has a locally optimal and monotone allocation rule and pays each agent his threshold bid has frugality ratio φNTUmin(M) ≤ 2Δ.",
                "To prove Theorem 4, we first show that the total payment of any locally optimal mechanism does not exceed Δc(V ).",
                "We then demonstrate that NTUmin(c) ≥ c(V )/2.",
                "By combining these two results, the theorem follows.",
                "LEMMA 5.",
                "Consider a graph G = (V, E) with maximum degree Δ.",
                "Let M be a vertex-cover auction on G that satisfies the conditions of Theorem 4.",
                "Then for any cost vector c, the total payment of M satisfies pM(c) ≤ Δc(V ).",
                "PROOF.",
                "First note that any such auction is truthful, so we can assume that each agents bid is equal to his cost.",
                "Let ˆS be the vertex cover selected by M. Then by local optimality pM(c) = X v∈ ˆS tv ≤ X v∈ ˆS X w∼v cw ≤ X w∈V Δcw = Δc(V ).",
                "We now derive a lower bound on TUmax(c); while not essential for the proof of Theorem 4, it helps us build the intuition necessary for that proof.",
                "LEMMA 6.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, TUmax(c, S) ≥ c(V \\ S) PROOF.",
                "For a vertex w with at least one neighbour in S, let d(w) denote the number of neighbours that w has in S. Consider the bid vector b in which, for each v ∈ S, bv = P w∼v,w∈S cw d(w) .",
                "Then P v∈S bv = P v∈S P w∼v,w∈S cw/d(w) = P w /∈S cw = c(V \\ S).",
                "To finish we want to show that b is feasible in the sense that it satisfies (2).",
                "Consider a vertex cover T, and extend the bid vector b by assigning bv = cv for v /∈ S. Then b(T) = c(T \\S)+b(S∩T) ≥ c(T \\S)+ X v∈S∩T X w∈S∩T :w∼v cw d(w) , and since all edges between S ∩ T and S go to S ∩ T, the righthand-side is equal to c(T \\S)+ X w∈S∩T cw = c(T \\S)+c(S ∩T) = c(V \\S) = b(S).",
                "Next, we prove a lower bound on NTUmax(c, S); we will then use it to obtain a lower bound on NTUmin(c).",
                "LEMMA 7.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmax(c, S) ≥ c(V \\ S) PROOF.",
                "If c(S) ≥ c(V \\ S), by condition (1) we are done.",
                "Therefore, for the rest of the proof we assume that c(S) < c(V \\ S).",
                "We show how to construct a bid vector (be)e∈S that satisfies conditions (1) and (2) such that b(S) ≥ c(V \\ S); clearly, this implies NTUmax(c, S) ≥ c(V \\ S).",
                "Recall that a network flow problem is described by a directed graph Γ = (VΓ, EΓ), a source node s ∈ VΓ, a sink node t ∈ VΓ, and a vector of capacity constraints ae, e ∈ EΓ.",
                "Consider a network (VΓ, EΓ) such that VΓ = V ∪{s, t}, EΓ = E1 ∪E2 ∪E3, where E1 = {(s, v) | v ∈ S}, E2 = {(v, w) | v ∈ S, w ∈ 341 V \\ S, (v, w) ∈ E}, E3 = {(w, t) | w ∈ V \\ S}.",
                "Since S is a vertex cover for G, no edge of E can have both of its endpoints in V \\ S, and by construction, E2 contains no edges with both endpoints in S. Therefore, the graph (V, E2) is bipartite with parts (S, V \\ S).",
                "Set the capacity constraints for e ∈ EΓ as follows: a(s,v) = cv, a(w,t) = cw, a(v,w) = +∞ for all v ∈ S, w ∈ V \\ S. Recall that a cut is a partition of the vertices in VΓ into two sets C1 and C2 so that s ∈ C1, t ∈ C2; we denote such a cut by C = (C1, C2).",
                "Abusing notation, we write e = (u, v) ∈ C if u ∈ C1, v ∈ C2 or u ∈ C2, v ∈ C1, and say that such an edge e = (u, v) crosses the cut C. The capacity of a cut C is computed as cap(C) = P (v,w)∈C a(v,w).",
                "We have cap(s, V ∪{t}) = c(S), cap({s} ∪ V, t) = c(V \\ S).",
                "Let Cmin = ({s} ∪ S ∪ W , {t} ∪ S ∪ W ) be a minimum cut in Γ, where S , S ⊆ S, W , W ⊆ V \\ S. See Figure 4.",
                "As cap(Cmin) ≤ cap(s, V ∪ {t}) = c(S) < +∞, and any edge in E2 has infinite capacity, no edge (u, v) ∈ E2 crosses Cmin.",
                "Consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Clearly, C = ({s} ∪ S ∪ W , {t}) is a minimum cut in Γ (otherwise, there would exist a smaller cut for Γ).",
                "As cap(C ) = c(W ), we have c(S ) ≥ c(W ).",
                "Now, consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Similarly, C = ({s}, S ∪ W ∪ {t}) is a minimum cut in Γ , cap(C ) = c(S ).",
                "As the size of a maximum flow from s to t is equal to the capacity of a minimum cut separating s and t, there exists a flow F = (fe)e∈EΓ of size c(S ).",
                "This flow has to saturate all edges between s and S , i.e., f(s,v) = cv for all v ∈ S .",
                "Now, increase the capacities of all edges between s and S to +∞.",
                "In the modified network, the capacity of a minimum cut (and hence the size of a maximum flow) is c(W ), and a maximum flow F = (fe)e∈EΓ can be constructed by greedily augmenting F. Set bv = cv for all v ∈ S , bv = f(s,v) for all v ∈ S .",
                "As F is constructed by augmenting F, we have bv ≥ cv for all v ∈ S, i.e., condition (1) is satisfied.",
                "Now, let us check that no vertex cover T ⊆ V can violate condition (2).",
                "Set T1 = T ∩ S , T2 = T ∩ S , T3 = T ∩ W , T4 = T ∩ W ; our goal is to show that b(S \\ T1) + b(S \\ T2) ≤ c(T3)+c(T4).",
                "Consider all edges (u, v) ∈ E such that u ∈ S \\T1.",
                "If (u, v) ∈ E2 then v ∈ T3 (no edge in E2 can cross the cut), and if u, v ∈ S then v ∈ T1∪T2.",
                "Hence, T1∪T3∪S is a vertex cover for G, and therefore c(T1)+ c(T3)+ c(S ) ≥ c(S) = c(T1)+ c(S \\ T1) + c(S ).",
                "Consequently, c(T3) ≥ c(S \\ T1) = b(S \\ T1).",
                "Now, consider the vertices in S \\T2.",
                "Any edge in E2 that starts in one of these vertices has to end in T4 (this edge has to be covered by T, and it cannot go across the cut).",
                "Therefore, the total flow out of S \\T2 is at most the total flow out of T4, i.e., b(S \\T2) ≤ c(T4).",
                "Hence, b(S \\ T1) + b(S \\ T2) ≤ c(T3) + c(T4).",
                "Finally, we derive a lower bound on the payment bound that is of interest to us, namely, NTUmin(c).",
                "LEMMA 8.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmin(c, S) ≥ c(V \\ S) PROOF.",
                "Suppose for contradiction that c is a cost vector with minimum-cost vertex cover S and NTUmin(c, S) < c(V \\S).",
                "Let b be the corresponding bid vector and let c be a new cost vector with cv = bv for v ∈ S and cv = cv for v ∈ S. Condition (2) guarantees that S is an optimal solution to the cost vector c .",
                "Now compute a bid vector b corresponding to NTUmax(c , S).",
                "We S W S W s t T1 T3 T2 T4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 00 11 11 0 00 1 11 0 00 1 11 0 00 1 11 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00000 0000000000 0000000000 00000 0000000000 0000000000 00000 0000000000 11111 1111111111 1111111111 11111 1111111111 1111111111 11111 1111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 Figure 4: Proof of Lemma 7.",
                "Dashed lines correspond to edges in E \\ E2 claim that bv = cv for any v ∈ S. Indeed, suppose that bv > cv for some v ∈ S (bv = cv for v ∈ S by construction).",
                "As b satisfies conditions (1)-(3), among the inequalities in (2) there is one that is tight for v and the bid vector b.",
                "That is, b(S \\ T) = c(T \\ S).",
                "By the construction of c , c (S \\ T) = c (T \\ S).",
                "Now since bw ≥ cw for all w ∈ S, bv > cv implies b (S \\T) > c (S \\T) = c (T \\S).",
                "But this violates (2).",
                "So we now know b = c .",
                "Hence, we have NTUmax(c , S) = P v∈S bv = NTUmin(c, S) < c(V \\ S), giving a contradiction to the fact that NTUmax(c , S) ≥ c (V \\S) which we proved in Lemma 7.",
                "As NTUmin(c, S) satisfies condition (1), it follows that we have NTUmin(c, S) ≥ c(S).",
                "Together will Lemma 8, this implies NTUmin(c, S) ≥ max{c(V \\ S), c(S)} ≥ c(V )/2.",
                "Combined with Lemma 5, this completes the proof of Theorem 4.",
                "REMARK 3.",
                "As NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), our bound of 2Δ extends to the smaller frugality ratios that we consider, i.e., φNTUmax(M) and φTUmax(M).",
                "It is not clear whether it extends to the larger frugality ratio φTUmin(M).",
                "However, the frugality ratio φTUmin(M) is not realistic because the payment bound TUmin(c) is inappropriately low - we show in Section 6 that TUmin(c) can be significantly smaller than the total cost of a cheapest vertex cover.",
                "Extensions We can also apply our results to monotone vertex-cover algorithms that do not necessarily output locally-optimal solutions.",
                "To do so, we simply take the vertex cover produced by any such algorithm and transform it into a locally-optimal one, considering the vertices in lexicographic order and replacing a vertex v with its neighbours whenever bv > P u∼v bu.",
                "Note that if a vertex u has been added to the vertex cover during this process, it means that it has a neighbour whose bid is higher than bu, so after one pass all vertices in the vertex cover satisfy bv ≤ P u∼v bu.",
                "This procedure is monotone in bids, and it can only decrease the cost of the vertex cover.",
                "Therefore, using it on top of a monotone allocation rule with approx342 imation ratio α, we obtain a monotone locally-optimal allocation rule with approximation ratio α.",
                "Combining it with threshold payments, we get an auction with φNTUmin ≤ 2Δ.",
                "Since any truthful auction has a monotone allocation rule, this procedure transforms any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio. 5.2 Lower bound In this subsection, we prove that the upper bound of Theorem 4 is essentially optimal.",
                "Our proof uses the techniques of [9], where the authors prove a similar result for shortest-path auctions.",
                "THEOREM 5.",
                "For any Δ > 0 and any n, there exist a graph G of maximum degree Δ and size N > n such that for any truthful mechanism M on G we have φNTUmin(M) ≥ Δ/2.",
                "PROOF.",
                "Given n and Δ, set k = n/2Δ .",
                "Let G be the graph that consists of k blocks B1, . . . , Bk of size 2Δ each, where each Bi is a complete bipartite graph with parts Li and Ri, |Li| = |Ri| = Δ.",
                "We will consider two families of cost vectors for G. Under a cost vector x ∈ X, each block Bi has one vertex of cost 1; all other vertices cost 0.",
                "Under a cost vector y ∈ Y , there is one block that has two vertices of cost 1, one in each part, all other blocks have one vertex of cost 1, and all other vertices cost 0.",
                "Clearly, |X| = (2Δ)k , |Y | = k(2Δ)k−1 Δ2 .",
                "We will now construct a bipartite graph W with the vertex set X ∪ Y as follows.",
                "Consider a cost vector y ∈ Y that has two vertices of cost 1 in Bi; let these vertices be vl ∈ Li and vr ∈ Ri.",
                "By changing the cost of either of these vertices to 0, we obtain a cost vector in X.",
                "Let xl and xr be the cost vectors obtained by changing the cost of vl and vr, respectively.",
                "The vertex cover chosen by M(y) must either contain all vertices in Li or it must contain all vertices in Ri.",
                "In the former case, we put in W an edge from y to xl and in the latter case we put in W an edge from y to xr (if the vertex cover includes all of Bi, W contains both of these edges).",
                "The graph W has at least k(2Δ)k−1 Δ2 edges, so there must exist an x ∈ X of degree at least kΔ/2.",
                "Let y1, . . . , ykΔ/2 be the other endpoints of the edges incident to x, and for each i = 1, . . . , kΔ/2, let vi be the vertex whose cost is different under x and yi; note that all vi are distinct.",
                "It is not hard to see that NTUmin(x) ≤ k: the cheapest vertex cover contains the all-0 part of each block, and we can satisfy conditions (1)-(3) by letting one of the vertices in the all-0 part of each block to bid 1, while all other the vertices in the cheapest set bid 0.",
                "On the other hand, by monotonicity of M we have vi ∈ M(x) for i = 1, . . . , kΔ/2 (vi is in the winning set under yi, and x is obtained from yi by decreasing the cost of vi), and moreover, the threshold bid of each vi is at least 1, so the total payment of M on x is at least kΔ/2.",
                "Hence, φNTUmin(M) ≥ M(x)/NTUmin(x) ≥ Δ/2.",
                "REMARK 4.",
                "The lower bound of Theorem 5 can be generalised to randomised mechanisms, where a randomised mechanism is considered to be truthful if it can be represented as a probability distribution over truthful mechanisms.",
                "In this case, instead of choosing the vertex x ∈ X with the highest degree, we put both (y, xl) and (y, xr) into W , label each edge with the probability that the respective part of the block is chosen, and pick x ∈ X with the highest weighted degree.",
                "The argument can be further extended to a more permissive definition of truthfulness for randomised mechanisms, but this discussion is beyond the scope of this paper. 6.",
                "PROPERTIES OF PAYMENT BOUNDS In this section we consider several desirable properties of payment bounds and evaluate the four payment bounds proposed in this paper with respect to them.",
                "The particular properties that we are interested in are independence of the choice of S (Section 6.3), monotonicity (Section 6.4.1), computational hardness (Section 6.4.2), and the relationship with other reasonable bounds, such as the total cost of the cheapest set (Section 6.1), or the total VCG payment (Section 6.2). 6.1 Comparison with total cost Our first requirement is that a payment bound should not be less than the total cost of the selected set.",
                "Payment bounds are used to evaluate the performance of set-system auctions.",
                "The latter have to satisfy individual rationality, i.e., the payment to each agent must be at least as large as his incurred costs; it is only reasonable to require the payment bound to satisfy the same requirement.",
                "Clearly, NTUmax(c) and NTUmin(c) satisfy this requirement due to condition (1), and so does TUmax(c), since TUmax(c) ≥ NTUmax(c).",
                "However, TUmin(c) fails this test.",
                "The example of Proposition 4 shows that for path auctions, TUmin(c) can be smaller than the total cost by a factor of 2.",
                "Moreover, there are set systems and cost vectors for which TUmin(c) is smaller than the cost of the cheapest set S by a factor of Ω(n).",
                "Consider, for example, the vertex-cover auction for the graph of Proposition 5 with the costs cX1 = · · · = cXn−2 = cXn−1 = 1, cX0 = 0.",
                "The cost of a cheapest vertex cover is n − 2, and the lexicographically first vertex cover of cost n−2 is {X0, X1, . . . , Xn−2}.",
                "The constraints in (2) are bXi + bX0 ≤ cXn−1 = 1.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bX1 = · · · = bXn−2 = 0, bX0 = 1, which means that TUmin(c) ≤ 1.",
                "This observation suggests that the payment bound TUmin(c) is too strong to be realistic, since it can be substantially lower than the cost of the cheapest feasible set.",
                "Nevertheless, some of the positive results that were proved in [16] for NTUmin(c) go through for TUmin(c) as well.",
                "In particular, one can show that if the feasible sets are the bases of a monopolyfree matroid, then φTUmin(VCG) = 1.",
                "To show that φTUmin(VCG) is at most 1, one must prove that the VCG payment is at most TUmin(c).",
                "This is shown for NTUmin(c) in the first paragraph of the proof of Theorem 5 in [16].",
                "Their argument does not use condition (1) at all, so it also applies to TUmin(c).",
                "On the other hand, φTUmin(VCG) ≥ 1 since φTUmin(VCG) ≥ φNTUmin(VCG) and φNTUmin(VCG) ≥ 1 by Proposition 7 of [16] (and also by Proposition 6 below). 6.2 Comparison with VCG payments Another measure of suitability for payment bounds is that they should not result in frugality ratios that are less then 1 for wellknown truthful mechanisms.",
                "If this is indeed the case, the payment bound may be too weak, as it becomes too easy to design mechanisms that perform well with respect to it.",
                "It particular, a reasonable requirement is that a payment bound should not exceed the total payment of the classical VCG mechanism.",
                "The following proposition shows that NTUmax(c), and therefore also NTUmin(c) and TUmin(c), do not exceed the VCG payment pVCG(c).",
                "The proof essentially follows the argument of Proposition 7 of [16] and can be found in the full version of this paper [8].",
                "PROPOSITION 6. φNTUmax(VCG) ≥ 1.",
                "Proposition 6 shows that none of the payment bounds TUmin(c), NTUmin(c) and NTUmax(c) exceeds the payment of VCG.",
                "However, the payment bound TUmax(c) can be larger that the total 343 VCG payment.",
                "In particular, for the instance in Proposition 5, the VCG payment is smaller than TUmax(c) by a factor of n − 2.",
                "We have already seen that TUmax(c) ≥ n − 2.",
                "On the other hand, under VCG, the threshold bid of any Xi, i = 1, . . . , n − 2, is 0: if any such vertex bids above 0, it is deleted from the winning set together with X0 and replaced with Xn−1.",
                "Similarly, the threshold bid of X0 is 1, because if X0 bids above 1, it can be replaced with Xn−1.",
                "So the VCG payment is 1.",
                "This result is not surprising: the definition of TUmax(c) implicitly assumes there is <br>co-operation</br> between the agents, while the computation of VCG payments does not take into account any interaction between them.",
                "Indeed, <br>co-operation</br> enables the agents to extract higher payments under VCG.",
                "That is, VCG is not groupstrategyproof.",
                "This suggests that as a payment bound, TUmax(c) may be too liberal, at least in a context where there is little or no <br>co-operation</br> between agents.",
                "Perhaps TUmax(c) can be a good benchmark for measuring the performance of mechanisms designed for agents that can form coalitions or make side payments to each other, in particular, group-strategyproof mechanisms.",
                "Another setting in which bounding φTUmax is still of some interest is when, for the underlying problem, the optimal allocation and VCG payments are NP-hard to compute.",
                "In this case, finding a polynomial-time computable mechanism with good frugality ratio with respect to TUmax(c) is a non-trivial task, while bounding the frugality ratio with respect to more challenging payment bounds could be too difficult.",
                "To illustrate this point, compare the proofs of Lemma 6 and Lemma 7: both require some effort, but the latter is much more difficult than the former. 6.3 The choice of S All payment bounds defined in this paper correspond to the total bid of all elements in the cheapest feasible set, where ties are broken lexicographically.",
                "While this definition ensures that our payment bounds are well-defined, the particular choice of the drawresolution rule appears arbitrary, and one might wonder if our payment bounds are sufficiently robust to be independent of this choice.",
                "It turns out that is indeed the case for NTUmin(c) and NTUmax(c), i.e., these bounds do not depend on the draw-resolution rule.",
                "To see this, suppose that two feasible sets S1 and S2 have the same cost.",
                "In the computation of NTUmin(c, S1), all vertices in S1 \\S2 would have to bid their true cost, since otherwise S2 would become cheaper than S1.",
                "Hence, any bid vector for S1 can only have be = ce for e ∈ S1 ∩ S2, and hence constitutes a valid bid vector for S2 and vice versa.",
                "A similar argument applies to NTUmax(c).",
                "However, for TUmin(c) and TUmax(c) this is not the case.",
                "For example, consider the set system E = {e1, e2, e3, e4, e5}, F = {S1 = {e1, e2}, S2 = {e2, e3, e4}, S3 = {e4, e5}} with the costs c1 = 2, c2 = c3 = c4 = 1, c5 = 3.",
                "The cheapest sets are S1 and S2.",
                "Now TUmax(c, S1) ≤ 4, as the total bid of the elements in S1 cannot exceed the total cost of S3.",
                "On the other hand, TUmax(c, S2) ≥ 5, as we can set b2 = 3, b3 = 0, b4 = 2.",
                "Similarly, TUmin(c, S1) = 4, because the inequalities in (2) are b1 ≤ 2 and b1 + b2 ≤ 4.",
                "But TUmin(c, S2) ≤ 3 as we can set b2 = 1, b3 = 2, b4 = 0. 6.4 Negative results for NTUmin(c) and TUmin(c) The results in [16] and our vertex cover results are proved for the frugality ratio φNTUmin.",
                "Indeed, it can be argued that φNTUmin is the best definition of frugality ratio, because among all reasonable payment bounds (i.e., ones that are at least as large as the cost of the cheapest feasible set), it is most demanding of the algorithm.",
                "However, NTUmin(c) is not always the easiest or the most natural payment bound to work with.",
                "In this subsection, we discuss several disadvantages of NTUmin(c) (and also TUmin(c)) as compared to NTUmax(c) and TUmax(c). 6.4.1 Nonmonotonicity The first problem with NTUmin(c) is that it is not monotone with respect to F, i.e., it may increase when one adds a feasible set to F. (It is, however, monotone in the sense that a losing agent cannot become a winner by raising his cost.)",
                "Intuitively, a good payment bound should satisfy this monotonicity requirement, as adding a feasible set increases the competition, so it should drive the prices down.",
                "Note that this indeed the case for NTUmax(c) and TUmax(c) since a new feasible set adds a constraint in (2), thus limiting the solution space for the respective linear program.",
                "PROPOSITION 7.",
                "Adding a feasible set to F can increase the value of NTUmin(c) by a factor of Ω(n).",
                "PROOF.",
                "Let E = {x, xx, y1, . . . , yn, z1, . . . , zn}.",
                "Set Y = {y1, . . . , yn}, S = Y ∪ {x}, Ti = Y \\ {yi} ∪ {zi}, i = 1, . . . , n, and suppose that F = {S, T1, . . . , Tn}.",
                "The costs are cx = 0, cxx = 0, cyi = 0, czi = 1 for i = 1, . . . , n. Note that S is the cheapest feasible set.",
                "Let F = F ∪ {T0}, where T0 = Y ∪ {xx}.",
                "For F, the bid vector by1 = · · · = byn = 0, bx = 1 satisfies (1), (2), and (3), so NTUmin(c) ≤ 1.",
                "For F , S is still the lexicographically-least cheapest set.",
                "Any optimal solution has bx = 0 (by constraint in (2) with T0).",
                "Condition (3) for yi implies bx + byi = czi = 1, so byi = 1 and NTUmin(c) = n. For path auctions, it has been shown [18] that NTUmin(c) is non-monotone in a slightly different sense, i.e., with respect to adding a new edge (agent) rather than a new feasible set (a team of existing agents).",
                "REMARK 5.",
                "We can also show that NTUmin(c) is non-monotone for vertex cover.",
                "In this case, adding a new feasible set corresponds to deleting edges from the graph.",
                "It turns out that deleting a single edge can increase NTUmin(c) by a factor of n − 2; the construction is similar to that of Proposition 5. 6.4.2 NP-Hardness Another problem with NTUmin(c, S) is that it is NP-hard to compute even if the number of feasible sets is polynomial in n. Again, this puts it at a disadvantage compared to NTUmax(c, S) and TUmax(c, S) (see Remark 1).",
                "THEOREM 6.",
                "Computing NTUmin(c) is NP-hard, even when the lexicographically-least feasible set S is given in the input.",
                "PROOF.",
                "We reduce EXACT COVER BY 3-SETS(X3C) to our problem.",
                "An instance of X3C is given by a universe G = {g1, . . . , gn} and a collection of subsets C1, . . . , Cm, Ci ⊂ G, |Ci| = 3, where the goal is to decide whether one can cover G by n/3 of these sets.",
                "Observe that if this is indeed the case, each element of G is contained in exactly one set of the cover.",
                "LEMMA 9.",
                "Consider a minimisation problem P of the following form: Minimise P i=1,...,n bi under conditions (1) bi ≥ 0 for all i = 1, . . . , n; (2) for any j = 1, . . . , k we have P bi∈Sj bi ≤ aj, where Sj ⊆ {b1, . . . , bn}; (3) for each bj , one of the constraints in (2) involving it is tight.",
                "For any such P, one can construct a set system S and a vector of costs c such that NTUmin(c) is the optimal solution to P. PROOF.",
                "The construction is straightforward: there is an element of cost 0 for each bi, an element of cost aj for each aj, the feasible solutions are {b1, . . . , bn}, or any set obtained from {b1, . . . , bn} by replacing the elements in Sj by aj. 344 By this lemma, all we have to do to prove Theorem 6 is to show how to solve X3C by using the solution to a minimisation problem of the form given in Lemma 9.",
                "We do this as follows.",
                "For each Ci, we introduce 4 variables xi, ¯xi, ai, and bi.",
                "Also, for each element gj of G there is a variable dj.",
                "We use the following set of constraints: • In (1), we have constraints xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 for all i = 1, . . . , m, j = 1, . . . , n. • In (2), for all i = 1, . . . , m, we have the following 5 constraints: xi + ¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi + bi ≤ 1.",
                "Also, for all j = 1, . . . , n we have a constraint of the form xi1 + · · · + xik + dj ≤ 1, where Ci1 , . . . , Cik are the sets that contain gj.",
                "The goal is to minimize z = P i(xi + ¯xi + ai + bi) + P j dj.",
                "Observe that for each j, there is only one constraint involving dj , so by condition (3) it must be tight.",
                "Consider the two constraints involving ai.",
                "One of them must be tight, and therefore xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1.",
                "Hence, for any feasible solution to (1)-(3) we have z ≥ m. Now, suppose that there is an exact set cover.",
                "Set dj = 0 for j = 1, . . . , n. Also, if Ci is included in this cover, set xi = 1, ¯xi = ai = bi = 0, otherwise set ¯xi = 1, xi = ai = bi = 0.",
                "Clearly, all inequalities in (2) are satisfied (we use the fact that each element is covered exactly once), and for each variable, one of the constraints involving it is tight.",
                "This assignment results in z = m. Conversely, suppose there is a feasible solution with z = m. As each addend of the form xi + ¯xi + ai + bi contributes at least 1, we have xi + ¯xi + ai + bi = 1 for all i, dj = 0 for all j.",
                "We will now show that for each i, either xi = 1 and ¯xi = 0, or xi = 0 and ¯xi = 1.",
                "For the sake of contradiction, suppose that xi = δ < 1, ¯xi = δ < 1.",
                "As one of the constraints involving ai must be tight, we have ai ≥ min{1 − δ, 1 − δ }.",
                "Similarly, bi ≥ min{1 − δ, 1 − δ }.",
                "Hence, xi + ¯xi + ai + bi = 1 = δ +δ +2 min{1−δ, 1−δ } > 1.",
                "To finish the proof, note that for each j = 1, . . . , m we have xi1 + · · · + xik + dj = 1 and dj = 0, so the subsets that correspond to xi = 1 constitute a set cover.",
                "REMARK 6.",
                "In the proofs of Proposition 7 and Theorem 6 all constraints in (1) are of the form be ≥ 0.",
                "Hence, the same results are true for TUmin(c).",
                "REMARK 7.",
                "For shortest-path auctions, the size of F can be superpolynomial.",
                "However, there is a polynomial-time separation oracle for constraints in (2) (to construct one, use any algorithm for finding shortest paths), so one can compute NTUmax(c) and TUmax(c) in polynomial time.",
                "On the other hand, recently and independently it was shown [18] that computing NTUmin(c) for shortest-path auctions is NP-hard. 7.",
                "REFERENCES [1] A. Archer and E. Tardos, Frugal path mechanisms.",
                "In Proceedings of the 13th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 991-999, 2002 [2] R. Bar-Yehuda, K. Bendel, A. Freund, and D. Rawitz, Local ratio: A unified framework for approximation algorithms.",
                "In Memoriam: Shimon Even 1935-2004.",
                "ACM Comput.",
                "Surv., 36(4):422-463, 2004 [3] R. Bar-Yehuda and S. Even, A local-ratio theorem for approximating the weighted vertex cover problem.",
                "Annals of Discrete Mathematics, 25:27-46, 1985 [4] E. Clarke, Multipart pricing of public goods.",
                "Public Choice, 8:17-33, 1971 [5] G. Calinescu, Bounding the payment of approximate truthful mechanisms.",
                "In Proceedings of the 15th International Symposium on Algorithms and Computation, pages 221-233, 2004 [6] A. Czumaj and A. Ronen, On the expected payment of mechanisms for task allocation.",
                "In Proceedings of the 5th ACM Conference on Electronic Commerce (EC04), 2004 [7] E. Elkind, True costs of cheap labor are hard to measure: edge deletion and VCG payments in graphs.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [8] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Frugality ratios and improved truthful mechanisms for vertex cover.",
                "Available from http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai, and K. Steiglitz, Frugality in path auctions.",
                "In Proceedings of the 15th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 694-702, 2004 [10] J. Feigenbaum, C. H. Papadimitriou, R. Sami, and S. Shenker, A BGP-based mechanism for lowest-cost routing.",
                "In Proceedings of the 21st Symposium on Principles of Distributed Computing, pages 173-182, 2002 [11] A. Fiat, A. Goldberg, J. Hartline, and A. Karlin, Competitive generalized auctions.",
                "In Proceedings of the 34th Annual ACM Symposium on Theory of Computation, pages 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra and A. Verma, Coalitional games on graphs: core structures, substitutes and frugality.",
                "In Proceedings of the 4th ACM Conference on Electronic Commerce (EC03), 2005 [13] A. Goldberg, J. Hartline, and A. Wright, Competitive auctions and digital goods.",
                "In Proceedings of the 12th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2001 [14] T. Groves, Incentives in teams.",
                "Econometrica, 41(4):617-631, 1973 [15] N. Immorlica, D. Karger, E. Nikolova, and R. Sami, First-price path auctions.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [16] A. R. Karlin, D. Kempe, and T. Tamir, Beyond VCG: frugality of truthful mechanisms.",
                "In Proceedings of the 46th Annual IEEE Symposium on Foundations of Computer Science, pages 615-626, 2005 [17] D. Kempe, Personal communication, 2006 [18] N. Chen, A. R. Karlin, Cheap labor can be expensive, In Proceedings of the 18th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2007 [19] N. Nisan and A. Ronen, Algorithmic mechanism design.",
                "In Proceedings of the 31st Annual ACM Symposium on Theory of Computation, pages 129-140, 1999 [20] A. Ronen and R. Talisman, Towards generic low payment mechanisms for decentralized task allocation.",
                "In Proceedings of the 7th International IEEE Conference on E-Commerce Technology, 2005 [21] K. Talwar, The price of truth: frugality in truthful mechanisms.",
                "In Proceedings of 20th International Symposium on Theoretical Aspects of Computer Science, 2003 [22] W. Vickrey, Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961 345"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El cambio resultante en los pagos puede verse como el precio de la \"cooperación\" y corresponde a la condición de reemplazo (1) con la siguiente condición más débil (1 ∗): ser ≥ 0 para todos e ∈ E. (1 ∗) considerandoTodas las combinaciones posibles de estas modificaciones, obtenemos cuatro límites de pago diferentes, a saber, • tumin (c, s), que es la solución al problema de optimización minimizando B sujeto a (1 ∗), (2) y (3).• Tumax (C, S), que es la solución al problema de optimización, maximice B sujeto a (1 ∗), (2) y (3).• Ntumin (C, S), que es la solución al problema de optimización, minimiza B sujeto a (1), (2) y (3).• NTUMAX (C, S), que es la solución al problema de optimización Maximizar B sujeto a (1), (2), (3).",
                "La segunda modificación (utilidad transferible) es más atractiva en el contexto del problema de maximización, ya que ambos asumen cierto grado de \"cooperación\" entre los agentes.",
                "Este resultado no es sorprendente: la definición de Tumax (c) supone implícitamente que existe una \"cooperación\" entre los agentes, mientras que el cálculo de los pagos de VCG no tiene en cuenta ninguna interacción entre ellos.",
                "De hecho, la \"cooperación\" permite a los agentes extraer pagos más altos bajo VCG.",
                "Esto sugiere que, como un pago, Tumax (c) puede ser demasiado liberal, al menos en un contexto donde hay poca o ninguna \"cooperación\" entre los agentes."
            ],
            "translated_text": "",
            "candidates": [
                "cooperación",
                "cooperación",
                "cooperación",
                "cooperación",
                "cooperación",
                "cooperación",
                "cooperación",
                "cooperación",
                "cooperación",
                "cooperación"
            ],
            "error": []
        },
        "polynomial-time": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Frugality Ratios And Improved Truthful Mechanisms for Vertex Cover ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT In set-system auctions, there are several overlapping teams of agents, and a task that can be completed by any of these teams.",
                "The auctioneers goal is to hire a team and pay as little as possible.",
                "Examples of this setting include shortest-path auctions and vertex-cover auctions.",
                "Recently, Karlin, Kempe and Tamir introduced a new definition of frugality ratio for this problem.",
                "Informally, the frugality ratio is the ratio of the total payment of a mechanism to a desired payment bound.",
                "The ratio captures the extent to which the mechanism overpays, relative to perceived fair cost in a truthful auction.",
                "In this paper, we propose a new truthful <br>polynomial-time</br> auction for the vertex cover problem and bound its frugality ratio.",
                "We show that the solution quality is with a constant factor of optimal and the frugality ratio is within a constant factor of the best possible worst-case bound; this is the first auction for this problem to have these properties.",
                "Moreover, we show how to transform any truthful auction into a frugal one while preserving the approximation ratio.",
                "Also, we consider two natural modifications of the definition of Karlin et al., and we analyse the properties of the resulting payment bounds, such as monotonicity, computational hardness, and robustness with respect to the draw-resolution rule.",
                "We study the relationships between the different payment bounds, both for general set systems and for specific set-system auctions, such as path auctions and vertex-cover auctions.",
                "We use these new definitions in the proof of our main result for vertex-cover auctions via a bootstrapping technique, which may be of independent interest.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a set system auction there is a single buyer and many vendors that can provide various services.",
                "It is assumed that the buyers requirements can be satisfied by various subsets of the vendors; these subsets are called the feasible sets.",
                "A widely-studied class of setsystem auctions is path auctions, where each vendor is able to sell access to a link in a network, and the feasible sets are those sets whose links contain a path from a given source to a given destination; the study of these auctions has been initiated in the seminal paper by Nisan and Ronen [19] (see also [1, 10, 9, 6, 15, 7, 20]).",
                "We assume that each vendor has a cost of providing his services, but submits a possibly larger bid to the auctioneer.",
                "Based on these bids, the auctioneer selects a feasible subset of vendors, and makes payments to the vendors in this subset.",
                "Each selected vendor enjoys a profit of payment minus cost.",
                "Vendors want to maximise profit, while the buyer wants to minimise the amount he pays.",
                "A natural goal in this setting is to design a truthful auction, in which vendors have an incentive to bid their true cost.",
                "This can be achieved by paying each selected vendor a premium above her bid in such a way that the vendor has no incentive to overbid.",
                "An interesting question in mechanism design is how much the auctioneer will have to overpay in order to ensure truthful bids.",
                "In the context of path auctions this topic was first addressed by Archer and Tardos [1].",
                "They define the frugality ratio of a mechanism as the ratio between its total payment and the cost of the cheapest path disjoint from the path selected by the mechanism.",
                "They show that, for a large class of truthful mechanisms for this problem, the frugality ratio is as large as the number of edges in the shortest path.",
                "Talwar [21] extends this definition of frugality ratio to general set systems, and studies the frugality ratio of the classical VCG mechanism [22, 4, 14] for many specific set systems, such as minimum spanning trees and set covers.",
                "While the definition of frugality ratio proposed by [1] is wellmotivated and has been instrumental in studying truthful mechanisms for set systems, it is not completely satisfactory.",
                "Consider, for example, the graph of Figure 1 with the costs cAB = cBC = A B C D Figure 1: The diamond graph 336 cCD = 0, cAC = cBD = 1.",
                "This graph is 2-connected and the VCG payment to the winning path ABCD is bounded.",
                "However, the graph contains no A-D path that is disjoint from ABCD, and hence the frugality ratio of VCG on this graph remains undefined.",
                "At the same time, there is no monopoly, that is, there is no vendor that appears in all feasible sets.",
                "In auctions for other types of set systems, the requirement that there exist a feasible solution disjoint from the selected one is even more severe: for example, for vertex-cover auctions (where vendors correspond to the vertices of some underlying graph, and the feasible sets are vertex covers) the requirement means that the graph must be bipartite.",
                "To deal with this problem, Karlin et al. [16] suggest a better benchmark, which is defined for any monopoly-free set system.",
                "This quantity, which they denote by ν, intuitively corresponds to the value of a cheapest Nash equilibrium.",
                "Based on this new definition, the authors construct new mechanisms for the shortest path problem and show that the overpayment of these mechanisms is within a constant factor of optimal. 1.1 Our results Vertex cover auctions We propose a truthful <br>polynomial-time</br> auction for vertex cover that outputs a solution whose cost is within a factor of 2 of optimal, and whose frugality ratio is at most 2Δ, where Δ is the maximum degree of the graph (Theorem 4).",
                "We complement this result by proving (Theorem 5) that for any Δ and n, there are graphs of maximum degree Δ and size Θ(n) for which any truthful mechanism has frugality ratio at least Δ/2.",
                "This means that the solution quality of our auction is with a factor of 2 of optimal and the frugality ratio is within a factor of 4 of the best possible bound for worst-case inputs.",
                "To the best of our knowledge, this is the first auction for this problem that enjoys these properties.",
                "Moreover, we show how to transform any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio.",
                "Frugality ratios Our vertex cover results naturally suggest two modifications of the definition of ν in [16].",
                "These modifications can be made independently of each other, resulting in four different payment bounds TUmax, TUmin, NTUmax, and NTUmin, where NTUmin is equal to the original payment bound ν of in [16].",
                "All four payment bounds arise as Nash equilibria of certain games (see the full version of this paper [8]); the differences between them can be seen as the price of initiative and the price of cooperation (see Section 3).",
                "While our main result about vertex cover auctions (Theorem 4) is with respect to NTUmin = ν, we make use of the new definitions by first comparing the payment of our mechanism to a weaker bound NTUmax, and then bootstrapping from this result to obtain the desired bound.",
                "Inspired by this application, we embark on a further study of these payment bounds.",
                "Our results here are as follows: 1.",
                "We observe (Proposition 1) that the four payment bounds always obey a particular order that is independent of the choice of the set system and the cost vector, namely, TUmin ≤ NTUmin ≤ NTUmax ≤ TUmax.",
                "We provide examples (Proposition 5 and Corollaries 1 and 2) showing that for the vertex cover problem any two consecutive bounds can differ by a factor of n − 2, where n is the number of agents.",
                "We then show (Theorem 2) that this separation is almost best possible for general set systems by proving that for any set system TUmax/TUmin ≤ n. In contrast, we demonstrate (Theorem 3) that for path auctions TUmax/TUmin ≤ 2.",
                "We provide examples (Propositions 2, 3 and 4) showing that this bound is tight.",
                "We see this as an argument for the study of vertexcover auctions, as they appear to be more representative of the general team -selection problem than the widely studied path auctions. 2.",
                "We show (Theorem 1) that for any set system, if there is a cost vector for which TUmin and NTUmin differ by a factor of α, there is another cost vector that separates NTUmin and NTUmax by the same factor and vice versa; the same is true for the pairs (NTUmin, NTUmax) and (NTUmax, TUmax).",
                "This symmetry is quite surprising, since, e.g., TUmin and NTUmax are obtained from NTUmin by two very different transformations.",
                "This observation suggests that the four payment bounds should be studied in a unified framework; moreover, it leads us to believe that the bootstrapping technique of Theorem 4 may have other applications. 3.",
                "We evaluate the payment bounds introduced here with respect to a checklist of desirable features.",
                "In particular, we note that the payment bound ν = NTUmin of [16] exhibits some counterintuitive properties, such as nonmonotonicity with respect to adding a new feasible set (Proposition 7), and is NP-hard to compute (Theorem 6), while some of the other payment bounds do not suffer from these problems.",
                "This can be seen as an argument in favour of using weaker but efficiently computable bounds NTUmax and TUmax.",
                "Related work Vertex-cover auctions have been studied in the past by Talwar [21] and Calinescu [5].",
                "Both of these papers are based on the definition of frugality ratio used in [1]; as mentioned before, this means that their results only apply to bipartite graphs.",
                "Talwar [21] shows that the frugality ratio of VCG is at most Δ.",
                "However, since finding the cheapest vertex cover is an NP-hard problem, the VCG mechanism is computationally infeasible.",
                "The first (and, to the best of our knowledge, only) paper to investigate <br>polynomial-time</br> truthful mechanisms for vertex cover is [5].",
                "This paper studies an auction that is based on the greedy allocation algorithm, which has an approximation ratio of log n. While the main focus of [5] is the more general set cover problem, the results of [5] imply a frugality ratio of 2Δ2 for vertex cover.",
                "Our results improve on those of [21] as our mechanism is <br>polynomial-time</br> computable, as well as on those of [5], as our mechanism has a better approximation ratio, and we prove a stronger bound on the frugality ratio; moreover, this bound also applies to the mechanism of [5]. 2.",
                "PRELIMINARIES In most of this paper, we discuss auctions for set systems.",
                "A set system is a pair (E, F), where E is the ground set, |E| = n, and F is a collection of feasible sets, which are subsets of E. Two particular types of set systems are of interest to us - shortest path systems, in which the ground set consists of all edges of a network, and the feasible sets are paths between two specified vertices s and t, and vertex cover systems, in which the elements of the ground set are the vertices of a graph, and the feasible sets are vertex covers of this graph.",
                "In set system auctions, each element e of the ground set is owned by an independent agent and has an associated non-negative cost ce.",
                "The goal of the centre is to select (purchase) a feasible set.",
                "Each element e in the selected set incurs a cost of ce.",
                "The elements that are not selected incur no costs.",
                "The auction proceeds as follows: all elements of the ground set make their bids, the centre selects a feasible set based on the bids and makes payments to the agents.",
                "Formally, an auction is defined by an allocation rule A : Rn → F and a payment rule P : Rn → Rn .",
                "The allocation rule takes as input a vector of bids and decides which of the sets in F should be selected.",
                "The payment rule also takes as input a vector of bids and decides how much to pay to each agent.",
                "The standard requirements are individual rationality, i.e., the payment to each agent should be at least as high as his incurred cost (0 for agents not in the selected set and ce for agents in the 337 selected set) and incentive compatibility, or truthfulness, i.e., each agents dominant strategy is to bid his true cost.",
                "An allocation rule is monotone if an agent cannot increase his chance of getting selected by raising his bid.",
                "Formally, for any bid vector b and any e ∈ E, if e ∈ A(b) then e ∈ A(b1, . . . , be, . . . , bn) for any be > be.",
                "Given a monotone allocation rule A and a bid vector b, the threshold bid te of an agent e ∈ A(b) is the highest bid of this agent that still wins the auction, given that the bids of other participants remain the same.",
                "Formally, te = sup{be ∈ R | e ∈ A(b1, . . . , be, . . . , bn)}.",
                "It is well known (see, e.g. [19, 13]) that any auction that has a monotone allocation rule and pays each agent his threshold bid is truthful; conversely, any truthful auction has a monotone allocation rule.",
                "The VCG mechanism is a truthful mechanism that maximises the social welfare and pays 0 to the losing agents.",
                "For set system auctions, this simply means picking a cheapest feasible set, paying each agent in the selected set his threshold bid, and paying 0 to all other agents.",
                "Note, however, that the VCG mechanism may be difficult to implement, since finding a cheapest feasible set may be intractable.",
                "If U is a set of agents, c(U) denotes P w∈U cw.",
                "Similarly, b(U) denotes P w∈U bw. 3.",
                "FRUGALITY RATIOS We start by reproducing the definition of the quantity ν from [16, Definition 4].",
                "Let (E, F) be a set system and let S be a cheapest feasible set with respect to the true costs ce.",
                "Then ν(c, S) is the solution to the following optimisation problem.",
                "Minimise B = P e∈S be subject to (1) be ≥ ce for all e ∈ E (2) P e∈S\\T be ≤ P e∈T \\S ce for all T ∈ F (3) for every e ∈ S, there is a Te ∈ F such that e ∈ Te andP e ∈S\\Te be = P e ∈Te\\S ce The bound ν(c, S) can be seen as an outcome of a two-stage process, where first each agent e ∈ S makes a bid be stating how much it wants to be paid, and then the centre decides whether to accept these bids.",
                "The behaviour of both parties is affected by the following considerations.",
                "From the centres point of view, the set S must remain the most attractive choice, i.e., it must be among the cheapest feasible sets under the new costs ce = ce for e ∈ S, ce = be for e ∈ S (condition (2)).",
                "The reason for that is that if (2) is violated for some set T, the centre would prefer T to S. On the other hand, no agent would agree to a payment that does not cover his costs (condition (1)), and moreover, each agent tries to maximise his profit by bidding as high as possible, i.e., none of the agents can increase his bid without violating condition (2) (condition (3)).",
                "The centre wants to minimise the total payout, so ν(c, S) corresponds to the best possible outcome from the centres point of view.",
                "This definition captures many important aspects of our intuition about fair payments.",
                "However, it can be modified in two ways, both of which are still quite natural, but result in different payment bounds.",
                "First, we can consider the worst rather than the best possible outcome for the centre.",
                "That is, we can consider the maximum total payment that the agents can extract by jointly selecting their bids subject to (1), (2), and (3).",
                "Such a bound corresponds to maximising B subject to (1), (2), and (3) rather than minimising it.",
                "If it is the agents who make the original bids (rather than the centre), this kind of bidding behaviour is plausible.",
                "On the other hand, in a game in which the centre proposes payments to the agents in S and the agents accept them as long as (1), (2) and (3) are satisfied, we would be likely to observe a total payment of ν(c, S).",
                "Hence, the difference between these two definitions can be seen as the price of initiative.",
                "Second, the agents may be able to make payments to each other.",
                "In this case, if they can extract more money from the centre by agreeing on a vector of bids that violates individual rationality (i.e., condition (1)) for some bidders, they might be willing to do so, as the agents who are paid below their costs will be compensated by other members of the group.",
                "The bids must still be realistic, i.e., they have to satisfy be ≥ 0.",
                "The resulting change in payments can be seen as the price of co-operation and corresponds to replacing condition (1) with the following weaker condition (1∗ ): be ≥ 0 for all e ∈ E. (1∗ ) By considering all possible combinations of these modifications, we obtain four different payment bounds, namely • TUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1∗ ), (2), and (3). • TUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1∗ ), (2), and (3). • NTUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1), (2), and (3). • NTUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1), (2), (3).",
                "The abbreviations TU and NTU correspond, respectively, to transferable utility and non-transferable utility, i.e., the agents ability/inability to make payments to each other.",
                "For concreteness, we will take TUmin(c) to be TUmin(c, S) where S is the lexicographically least amongst the cheapest feasible sets.",
                "We define TUmax(c), NTUmin(c), NTUmax(c) and ν(c) similarly, though we will see in Section 6.3 that, in fact, NTUmin(c, S) and NTUmax(c, S) are independent of the choice of S. Note that the quantity ν(c) from [16] is NTUmin(c).",
                "The second modification (transferable utility) is more intuitively appealing in the context of the maximisation problem, as both assume some degree of co-operation between the agents.",
                "While the second modification can be made without the first, the resulting payment bound TUmin(c, S) is too strong to be a realistic benchmark, at least for general set systems.",
                "In particular, it can be smaller than the total cost of the cheapest feasible set S (see Section 6).",
                "Nevertheless, we provide the definition as well as some results about TUmin(c, S) in the paper, both for completeness and because we believe that it may help to understand which properties of the payment bounds are important for our proofs.",
                "Another possibility would be to introduce an additional constraint P e∈S be ≥P e∈S ce in the definition of TUmin(c, S) (note that this condition holds automatically for TUmax(c, S), as TUmax(c, S) ≥ NTUmax(c, S)); however, such a definition would have no direct game-theoretic interpretation, and some of our results (in particular, the ones in Section 4) would no longer be true.",
                "REMARK 1.",
                "For the payment bounds that are derived from maximisation problems, (i.e., TUmax(c, S) and NTUmax(c, S)), constraints of type (3) are redundant and can be dropped.",
                "Hence, TUmax(c, S) and NTUmax(c, S) are solutions to linear programs, and therefore can be computed in polynomial time as long as we have a separation oracle for constraints in (2).",
                "In contrast, 338 NTUmin(c, S) can be NP-hard to compute even if the size of F is polynomial (see Section 6).",
                "The first and third inequalities in the following observation follow from the fact that condition (1∗ ) is strictly weaker than condition (1).",
                "PROPOSITION 1.",
                "TUmin(c, S) ≤ NTUmin(c, S) ≤ NTUmax(c, S) ≤ TUmax(c, S).",
                "Let M be a truthful mechanism for (E, F).",
                "Let pM(c) denote the total payments of M when the actual costs are c. A frugality ratio of M with respect to a payment bound is the ratio between the payment of M and this payment bound.",
                "In particular, φTUmin(M) = sup c pM(c)/TUmin(c), φTUmax(M) = sup c pM(c)/TUmax(c), φNTUmin(M) = sup c pM(c)/NTUmin(c), φNTUmax(M) = sup c pM(c)/NTUmax(c).",
                "We conclude this section by showing that there exist set systems and respective cost vectors for which all four payment bounds are different.",
                "In the next section, we quantify this difference, both for general set systems, and for specific types of set systems, such as path auctions or vertex cover auctions.",
                "EXAMPLE 1.",
                "Consider the shortest-path auction on the graph of Figure 1.",
                "The cheapest feasible sets are all paths from A to D. It can be verified, using the reasoning of Propositions 2 and 3 below, that for the cost vector cAB = cCD = 2, cBC = 1, cAC = cBD = 5, we have • TUmax(c) = 10 (with bAB = bCD = 5, bBC = 0), • NTUmax(c) = 9 (with bAB = bCD = 4, bBC = 1), • NTUmin(c) = 7 (with bAB = bCD = 2, bBC = 3), • TUmin(c) = 5 (with bAB = bCD = 0, bBC = 5). 4.",
                "COMPARING PAYMENT BOUNDS 4.1 Path auctions We start by showing that for path auctions any two consecutive payment bounds can differ by at least a factor of 2.",
                "PROPOSITION 2.",
                "There is an instance of the shortest-path problem for which we have NTUmax(c)/NTUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is due to David Kempe [17].",
                "Consider the graph of Figure 1 with the edge costs cAB = cBC = cCD = 0, cAC = cBD = 1.",
                "Under these costs, ABCD is the cheapest path.",
                "The inequalities in (2) are bAB + bBC ≤ cAC = 1, bBC + bCD ≤ cBD = 1.",
                "By condition (3), both of these inequalities must be tight (the former one is the only inequality involving bAB, and the latter one is the only inequality involving bCD).",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 0, bCD ≥ 0.",
                "Now, if the goal is to maximise bAB + bBC + bCD, the best choice is bAB = bCD = 1, bBC = 0, so NTUmax(c) = 2.",
                "On the other hand, if the goal is to minimise bAB + bBC + bCD, one should set bAB = bCD = 0, bBC = 1, so NTUmin(c) = 1.",
                "PROPOSITION 3.",
                "There is an instance of the shortest-path problem for which we have TUmax(c)/NTUmax(c) ≥ 2.",
                "PROOF.",
                "Again, consider the graph of Figure 1.",
                "Let the edge costs be cAB = cCD = 0, cBC = 1, cAC = cBD = 1.",
                "ABCD is the lexicographically-least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "The inequalities in (2) are the same as in the previous example, and by the same argument both of them are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 1, bCD ≥ 0.",
                "Our goal is to maximise bAB + bBC + bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 0, bBC = 1, so NTUmax(c) = 1.",
                "Otherwise, we can set bAB = bCD = 1, bBC = 0, so TUmax(c) ≥ 2.",
                "PROPOSITION 4.",
                "There is an instance of the shortest-path problem for which we have NTUmin(c)/TUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is also based on the graph of Figure 1.",
                "The edge costs are cAB = cCD = 1, cBC = 0, cAC = cBD = 1.",
                "ABCD is the lexicographically least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "Again, the inequalities in (2) are the same, and both are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 1, bBC ≥ 0, bCD ≥ 1.",
                "Our goal is to minimise bAB + bBC +bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 1, bBC = 0, so NTUmin(c) = 2.",
                "Otherwise, we can set bAB = bCD = 0, bBC = 1, so TUmin(c) ≤ 1.",
                "In Section 4.4 (Theorem 3), we show that the separation results in Propositions 2, 3, and 4 are optimal. 4.2 Connections between separation results The separation results for path auctions are obtained on the same graph using very similar cost vectors.",
                "It turns out that this is not coincidental.",
                "Namely, we can prove the following theorem.",
                "THEOREM 1.",
                "For any set system (E, F), and any feasible set S, max c TUmax(c, S) NTUmax(c, S) = max c NTUmax(c, S) NTUmin(c, S) , max c NTUmax(c, S) NTUmin(c, S) = max c NTUmin(c, S) TUmin(c, S) , where the maximum is over all cost vectors c for which S is a cheapest feasible set.",
                "The proof of the theorem follows directly from the four lemmas proved below; more precisely, the first equality in Theorem 1 is obtained by combining Lemmas 1 and 2, and the second equality is obtained by combining Lemmas 3 and 4.",
                "We prove Lemma 1 here; the proofs of Lemmas 2- 4 are similar and can be found in the full version of this paper [8].",
                "LEMMA 1.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and TUmax(c, S)/NTUmax(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α.",
                "PROOF.",
                "Suppose that TUmax(c, S) = X and NTUmax(c, S) = Y where X/Y = α.",
                "Assume without loss of generality that S consists of elements 1, . . . , k, and let b1 = (b1 1, . . . , b1 k) and b2 = (b2 1, . . . , b2 k) be the bid vectors that correspond to TUmax(c, S) and NTUmax(c, S), respectively.",
                "Construct the cost vector c by setting ci = ci for i ∈ S, ci = min{ci, b1 i } for i ∈ S. Clearly, S is a cheapest set under c .",
                "Moreover, as the costs of elements outside of S remained the same, the right-hand sides of all constraints in (2) did not change, so any bid vector that satisfies (2) and (3) with respect to c, also satisfies them with respect to c .",
                "We will construct two bid vectors b3 and b4 that satisfy conditions (1), (2), and (3) for the cost vector c , and 339 X X X X X 0 X 12 3 X 4 5 6 Figure 2: Graph that separates payment bounds for vertex cover, n = 7 have P i∈S b3 i = X, P i∈S b4 i = Y .",
                "As NTUmax(c , S) ≥ X and NTUmin(c , S) ≤ Y , this implies the lemma.",
                "We can set b3 i = b1 i : this bid vector satisfies conditions (2) and (3) since b1 does, and we have b1 i ≥ min{ci, b1 i } = ci, which means that b3 satisfies condition (1).",
                "Furthermore, we can set b4 i = b2 i .",
                "Again, b4 satisfies conditions (2) and (3) since b2 does, and since b2 satisfies condition (1), we have b2 i ≥ ci ≥ ci, which means that b4 satisfies condition (1).",
                "LEMMA 2.",
                "Suppose c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and TUmax(c , S)/NTUmax(c , S) ≥ α. LEMMA 3.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmin(c , S)/TUmin(c , S) ≥ α. LEMMA 4.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmin(c, S)/TUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α. 4.3 Vertex-cover auctions In contrast to the case of path auctions, for vertex-cover auctions the gap between NTUmin(c) and NTUmax(c) (and hence between NTUmax(c) and TUmax(c), and between TUmin(c) and NTUmin(c)) can be proportional to the size of the graph.",
                "PROPOSITION 5.",
                "For any n ≥ 3, there is a an n-vertex graph and a cost vector c for which TUmax(c)/NTUmax(c) ≥ n − 2.",
                "PROOF.",
                "The underlying graph consists of an (n − 1)-clique on the vertices X1, . . . , Xn−1, and an extra vertex X0 adjacent to Xn−1.",
                "The costs are cX1 = cX2 = · · · = cXn−2 = 0, cX0 = cXn−1 = 1.",
                "We can assume that S = {X0, X1, . . . , Xn−2} (this is the lexicographically first vertex cover of cost 1).",
                "For this set system, the constraints in (2) are bXi + bX0 ≤ cXn−1 = 1 for i = 1, . . . , n − 2.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bXi = 1 for i = 1, . . . , n − 2, bX0 = 0.",
                "Hence, TUmax(c) ≥ n − 2.",
                "For NTUmax(c), there is an additional constraint bX0 ≥ 1, so the best we can do is to set bXi = 0 for i = 1, . . . , n − 2, bX0 = 1, which implies NTUmax(c) = 1.",
                "Combining Proposition 5 with Lemmas 1 and 3, we derive the following corollaries.",
                "COROLLARY 1.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmax(c)/NTUmin(c) ≥ n − 2.",
                "COROLLARY 2.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmin(c)/TUmin(c) ≥ n − 2. j+2ix ij P \\ P ij+2P \\ P yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 P \\ P Figure 3: Proof of Theorem 3: constraints for ˆPij and ˆPij+2 do not overlap 4.4 Upper bounds It turns out that the lower bound proved in the previous subsection is almost tight.",
                "More precisely, the following theorem shows that no two payment bounds can differ by more than a factor of n; moreover, this is the case not just for the vertex cover problem, but for general set systems.",
                "We bound the gap between TUmax(c) and TUmin(c).",
                "Since TUmin(c) ≤ NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), this bound applies to any pair of payment bounds.",
                "THEOREM 2.",
                "For any set system (E, F) and any cost vector c, we have TUmax(c)/TUmin(c) ≤ n. PROOF.",
                "Assume wlog that the winning set S consists of elements 1, . . . , k. Let c1, . . . , ck be the true costs of elements in S, let b1, . . . , bk be their bids that correspond to TUmin(c), and let b1 , . . . , bk be their bids that correspond to TUmax(c).",
                "Consider the conditions (2) and (3) for S. One can pick a subset L of at most k inequalities in (2) so that for each i = 1, . . . , k there is at least one inequality in L that is tight for bi.",
                "Suppose that the jth inequality in L is of the form bi1 + · · · + bit ≤ c(Tj \\ S).",
                "For bi, all inequalities in L are, in fact, equalities.",
                "Hence, by adding up all of them we obtain k P i=1,...,k bi ≥ P j=1,...,k c(Tj \\ S).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c(Tj \\ S).",
                "Combining these two inequalities, we obtain nTUmin(c) ≥ kTUmin(c) ≥ TUmax(c).",
                "REMARK 2.",
                "The final line of the proof of Theorem 2 shows that, in fact, the upper bound on TUmax(c)/TUmin(c) can be strengthened to the size of the winning set, k. Note that in Proposition 5, as well as in Corollaries 1 and 2, k = n−1, so these results do not contradict each other.",
                "For path auctions, this upper bound can be improved to 2, matching the lower bounds of Section 4.1.",
                "THEOREM 3.",
                "For any instance of the shortest path problem, TUmax(c) ≤ 2 TUmin(c).",
                "PROOF.",
                "Given a network (G, s, t), assume without loss of generality that the lexicographically-least cheapest s-t path, P, in G is {e1, . . . , ek}, where e1 = (s, v1), e2 = (v1, v2), . . . , ek = (vk−1, t).",
                "Let c1, . . . , ck be the true costs of e1, . . . , ek, and let b = (b1, . . . , bk) and b = (b1 , . . . , bk ) be bid vectors that correspond to TUmin(c) and TUmax(c), respectively.",
                "For any i = 1, . . . , k, there is a constraint in (2) that is tight for bi with respect to the bid vector b , i.e., an s-t path Pi that avoids ei and satisfies b (P \\Pi) = c(Pi \\P).",
                "We can assume without loss of generality that Pi coincides with P up to some vertex xi, then deviates from P to avoid ei, and finally returns to P at a vertex 340 yi and coincides with P from then on (clearly, it might happen that s = xi or t = yi).",
                "Indeed, if Pi deviates from P more than once, one of these deviations is not necessary to avoid ei and can be replaced with the respective segment of P without increasing the cost of Pi.",
                "Among all paths of this form, let ˆPi be the one with the largest value of yi, i.e., the rightmost one.",
                "This path corresponds to an inequality Ii of the form bxi+1 + · · · + byi ≤ c( ˆPi \\ P).",
                "As in the proof of Theorem 2, we construct a set of tight constraints L such that every variable bi appears in at least one of these constraints; however, now we have to be more careful about the choice of constraints in L. We construct L inductively as follows.",
                "Start by setting L = {I1}.",
                "At the jth step, suppose that all variables up to (but not including) bij appear in at least one inequality in L. Add Iij to L. Note that for any j we have yij+1 > yij .",
                "This is because the inequalities added to L during the first j steps did not cover bij+1 .",
                "See Figure 3.",
                "Since yij+2 > yij+1 , we must also have xij+2 > yij : otherwise, ˆPij+1 would not be the rightmost constraint for bij+1 .",
                "Therefore, the variables in Iij+2 and Iij do not overlap, and hence no bi can appear in more than two inequalities in L. Now we follow the argument of the proof of Theorem 2 to finish.",
                "By adding up all of the (tight) inequalities in L for bi we obtain 2 P i=1,...,k bi ≥ P j=1,...,k c( ˆPj \\ P).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c( ˆPj \\ P), so TUmax(c) ≤ 2TUmin(c). 5.",
                "TRUTHFUL MECHANISMS FOR VERTEX COVER Recall that for a vertex-cover auction on a graph G = (V, E), an allocation rule is an algorithm that takes as input a bid bv for each vertex and returns a vertex cover ˆS of G. As explained in Section 2, we can combine a monotone allocation rule with threshold payments to obtain a truthful auction.",
                "Two natural examples of monotone allocation rules are Aopt, i.e., the algorithm that finds an optimal vertex cover, and the greedy algorithm AGR.",
                "However, Aopt cannot be guaranteed to run in polynomial time unless P = NP and AGR has approximation ratio of log n. Another approximation algorithm for vertex cover, which has approximation ratio 2, is the local ratio algorithm ALR [2, 3].",
                "This algorithm considers the edges of G one by one.",
                "Given an edge e = (u, v), it computes = min{bu, bv} and sets bu = bu − , bv = bv − .",
                "After all edges have been processed, ALR returns the set of vertices {v | bv = 0}.",
                "It is not hard to check that if the order in which the edges are considered is independent of the bids, then this algorithm is monotone as well.",
                "Hence, we can use it to construct a truthful auction that is guaranteed to select a vertex cover whose cost is within a factor of 2 from the optimal.",
                "However, while the quality of the solution produced by ALR is much better than that of AGR, we still need to show that its total payment is not too high.",
                "In the next subsection, we bound the frugality ratio of ALR (and, more generally, all algorithms that satisfy the condition of local optimality, defined later) by 2Δ, where Δ is the maximum degree of G. We then prove a matching lower bound showing that for some graphs the frugality ratio of any truthful auction is at least Δ/2. 5.1 Upper bound We say that an allocation rule is locally optimal if whenever bv >P w∼v bw, the vertex v is not chosen.",
                "Note that for any such rule the threshold bid of v satisfies tv ≤ P w∼v bw.",
                "CLAIM 1.",
                "The algorithms Aopt, AGR, and ALR are locally optimal.",
                "THEOREM 4.",
                "Any vertex cover auction M that has a locally optimal and monotone allocation rule and pays each agent his threshold bid has frugality ratio φNTUmin(M) ≤ 2Δ.",
                "To prove Theorem 4, we first show that the total payment of any locally optimal mechanism does not exceed Δc(V ).",
                "We then demonstrate that NTUmin(c) ≥ c(V )/2.",
                "By combining these two results, the theorem follows.",
                "LEMMA 5.",
                "Consider a graph G = (V, E) with maximum degree Δ.",
                "Let M be a vertex-cover auction on G that satisfies the conditions of Theorem 4.",
                "Then for any cost vector c, the total payment of M satisfies pM(c) ≤ Δc(V ).",
                "PROOF.",
                "First note that any such auction is truthful, so we can assume that each agents bid is equal to his cost.",
                "Let ˆS be the vertex cover selected by M. Then by local optimality pM(c) = X v∈ ˆS tv ≤ X v∈ ˆS X w∼v cw ≤ X w∈V Δcw = Δc(V ).",
                "We now derive a lower bound on TUmax(c); while not essential for the proof of Theorem 4, it helps us build the intuition necessary for that proof.",
                "LEMMA 6.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, TUmax(c, S) ≥ c(V \\ S) PROOF.",
                "For a vertex w with at least one neighbour in S, let d(w) denote the number of neighbours that w has in S. Consider the bid vector b in which, for each v ∈ S, bv = P w∼v,w∈S cw d(w) .",
                "Then P v∈S bv = P v∈S P w∼v,w∈S cw/d(w) = P w /∈S cw = c(V \\ S).",
                "To finish we want to show that b is feasible in the sense that it satisfies (2).",
                "Consider a vertex cover T, and extend the bid vector b by assigning bv = cv for v /∈ S. Then b(T) = c(T \\S)+b(S∩T) ≥ c(T \\S)+ X v∈S∩T X w∈S∩T :w∼v cw d(w) , and since all edges between S ∩ T and S go to S ∩ T, the righthand-side is equal to c(T \\S)+ X w∈S∩T cw = c(T \\S)+c(S ∩T) = c(V \\S) = b(S).",
                "Next, we prove a lower bound on NTUmax(c, S); we will then use it to obtain a lower bound on NTUmin(c).",
                "LEMMA 7.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmax(c, S) ≥ c(V \\ S) PROOF.",
                "If c(S) ≥ c(V \\ S), by condition (1) we are done.",
                "Therefore, for the rest of the proof we assume that c(S) < c(V \\ S).",
                "We show how to construct a bid vector (be)e∈S that satisfies conditions (1) and (2) such that b(S) ≥ c(V \\ S); clearly, this implies NTUmax(c, S) ≥ c(V \\ S).",
                "Recall that a network flow problem is described by a directed graph Γ = (VΓ, EΓ), a source node s ∈ VΓ, a sink node t ∈ VΓ, and a vector of capacity constraints ae, e ∈ EΓ.",
                "Consider a network (VΓ, EΓ) such that VΓ = V ∪{s, t}, EΓ = E1 ∪E2 ∪E3, where E1 = {(s, v) | v ∈ S}, E2 = {(v, w) | v ∈ S, w ∈ 341 V \\ S, (v, w) ∈ E}, E3 = {(w, t) | w ∈ V \\ S}.",
                "Since S is a vertex cover for G, no edge of E can have both of its endpoints in V \\ S, and by construction, E2 contains no edges with both endpoints in S. Therefore, the graph (V, E2) is bipartite with parts (S, V \\ S).",
                "Set the capacity constraints for e ∈ EΓ as follows: a(s,v) = cv, a(w,t) = cw, a(v,w) = +∞ for all v ∈ S, w ∈ V \\ S. Recall that a cut is a partition of the vertices in VΓ into two sets C1 and C2 so that s ∈ C1, t ∈ C2; we denote such a cut by C = (C1, C2).",
                "Abusing notation, we write e = (u, v) ∈ C if u ∈ C1, v ∈ C2 or u ∈ C2, v ∈ C1, and say that such an edge e = (u, v) crosses the cut C. The capacity of a cut C is computed as cap(C) = P (v,w)∈C a(v,w).",
                "We have cap(s, V ∪{t}) = c(S), cap({s} ∪ V, t) = c(V \\ S).",
                "Let Cmin = ({s} ∪ S ∪ W , {t} ∪ S ∪ W ) be a minimum cut in Γ, where S , S ⊆ S, W , W ⊆ V \\ S. See Figure 4.",
                "As cap(Cmin) ≤ cap(s, V ∪ {t}) = c(S) < +∞, and any edge in E2 has infinite capacity, no edge (u, v) ∈ E2 crosses Cmin.",
                "Consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Clearly, C = ({s} ∪ S ∪ W , {t}) is a minimum cut in Γ (otherwise, there would exist a smaller cut for Γ).",
                "As cap(C ) = c(W ), we have c(S ) ≥ c(W ).",
                "Now, consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Similarly, C = ({s}, S ∪ W ∪ {t}) is a minimum cut in Γ , cap(C ) = c(S ).",
                "As the size of a maximum flow from s to t is equal to the capacity of a minimum cut separating s and t, there exists a flow F = (fe)e∈EΓ of size c(S ).",
                "This flow has to saturate all edges between s and S , i.e., f(s,v) = cv for all v ∈ S .",
                "Now, increase the capacities of all edges between s and S to +∞.",
                "In the modified network, the capacity of a minimum cut (and hence the size of a maximum flow) is c(W ), and a maximum flow F = (fe)e∈EΓ can be constructed by greedily augmenting F. Set bv = cv for all v ∈ S , bv = f(s,v) for all v ∈ S .",
                "As F is constructed by augmenting F, we have bv ≥ cv for all v ∈ S, i.e., condition (1) is satisfied.",
                "Now, let us check that no vertex cover T ⊆ V can violate condition (2).",
                "Set T1 = T ∩ S , T2 = T ∩ S , T3 = T ∩ W , T4 = T ∩ W ; our goal is to show that b(S \\ T1) + b(S \\ T2) ≤ c(T3)+c(T4).",
                "Consider all edges (u, v) ∈ E such that u ∈ S \\T1.",
                "If (u, v) ∈ E2 then v ∈ T3 (no edge in E2 can cross the cut), and if u, v ∈ S then v ∈ T1∪T2.",
                "Hence, T1∪T3∪S is a vertex cover for G, and therefore c(T1)+ c(T3)+ c(S ) ≥ c(S) = c(T1)+ c(S \\ T1) + c(S ).",
                "Consequently, c(T3) ≥ c(S \\ T1) = b(S \\ T1).",
                "Now, consider the vertices in S \\T2.",
                "Any edge in E2 that starts in one of these vertices has to end in T4 (this edge has to be covered by T, and it cannot go across the cut).",
                "Therefore, the total flow out of S \\T2 is at most the total flow out of T4, i.e., b(S \\T2) ≤ c(T4).",
                "Hence, b(S \\ T1) + b(S \\ T2) ≤ c(T3) + c(T4).",
                "Finally, we derive a lower bound on the payment bound that is of interest to us, namely, NTUmin(c).",
                "LEMMA 8.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmin(c, S) ≥ c(V \\ S) PROOF.",
                "Suppose for contradiction that c is a cost vector with minimum-cost vertex cover S and NTUmin(c, S) < c(V \\S).",
                "Let b be the corresponding bid vector and let c be a new cost vector with cv = bv for v ∈ S and cv = cv for v ∈ S. Condition (2) guarantees that S is an optimal solution to the cost vector c .",
                "Now compute a bid vector b corresponding to NTUmax(c , S).",
                "We S W S W s t T1 T3 T2 T4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 00 11 11 0 00 1 11 0 00 1 11 0 00 1 11 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00000 0000000000 0000000000 00000 0000000000 0000000000 00000 0000000000 11111 1111111111 1111111111 11111 1111111111 1111111111 11111 1111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 Figure 4: Proof of Lemma 7.",
                "Dashed lines correspond to edges in E \\ E2 claim that bv = cv for any v ∈ S. Indeed, suppose that bv > cv for some v ∈ S (bv = cv for v ∈ S by construction).",
                "As b satisfies conditions (1)-(3), among the inequalities in (2) there is one that is tight for v and the bid vector b.",
                "That is, b(S \\ T) = c(T \\ S).",
                "By the construction of c , c (S \\ T) = c (T \\ S).",
                "Now since bw ≥ cw for all w ∈ S, bv > cv implies b (S \\T) > c (S \\T) = c (T \\S).",
                "But this violates (2).",
                "So we now know b = c .",
                "Hence, we have NTUmax(c , S) = P v∈S bv = NTUmin(c, S) < c(V \\ S), giving a contradiction to the fact that NTUmax(c , S) ≥ c (V \\S) which we proved in Lemma 7.",
                "As NTUmin(c, S) satisfies condition (1), it follows that we have NTUmin(c, S) ≥ c(S).",
                "Together will Lemma 8, this implies NTUmin(c, S) ≥ max{c(V \\ S), c(S)} ≥ c(V )/2.",
                "Combined with Lemma 5, this completes the proof of Theorem 4.",
                "REMARK 3.",
                "As NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), our bound of 2Δ extends to the smaller frugality ratios that we consider, i.e., φNTUmax(M) and φTUmax(M).",
                "It is not clear whether it extends to the larger frugality ratio φTUmin(M).",
                "However, the frugality ratio φTUmin(M) is not realistic because the payment bound TUmin(c) is inappropriately low - we show in Section 6 that TUmin(c) can be significantly smaller than the total cost of a cheapest vertex cover.",
                "Extensions We can also apply our results to monotone vertex-cover algorithms that do not necessarily output locally-optimal solutions.",
                "To do so, we simply take the vertex cover produced by any such algorithm and transform it into a locally-optimal one, considering the vertices in lexicographic order and replacing a vertex v with its neighbours whenever bv > P u∼v bu.",
                "Note that if a vertex u has been added to the vertex cover during this process, it means that it has a neighbour whose bid is higher than bu, so after one pass all vertices in the vertex cover satisfy bv ≤ P u∼v bu.",
                "This procedure is monotone in bids, and it can only decrease the cost of the vertex cover.",
                "Therefore, using it on top of a monotone allocation rule with approx342 imation ratio α, we obtain a monotone locally-optimal allocation rule with approximation ratio α.",
                "Combining it with threshold payments, we get an auction with φNTUmin ≤ 2Δ.",
                "Since any truthful auction has a monotone allocation rule, this procedure transforms any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio. 5.2 Lower bound In this subsection, we prove that the upper bound of Theorem 4 is essentially optimal.",
                "Our proof uses the techniques of [9], where the authors prove a similar result for shortest-path auctions.",
                "THEOREM 5.",
                "For any Δ > 0 and any n, there exist a graph G of maximum degree Δ and size N > n such that for any truthful mechanism M on G we have φNTUmin(M) ≥ Δ/2.",
                "PROOF.",
                "Given n and Δ, set k = n/2Δ .",
                "Let G be the graph that consists of k blocks B1, . . . , Bk of size 2Δ each, where each Bi is a complete bipartite graph with parts Li and Ri, |Li| = |Ri| = Δ.",
                "We will consider two families of cost vectors for G. Under a cost vector x ∈ X, each block Bi has one vertex of cost 1; all other vertices cost 0.",
                "Under a cost vector y ∈ Y , there is one block that has two vertices of cost 1, one in each part, all other blocks have one vertex of cost 1, and all other vertices cost 0.",
                "Clearly, |X| = (2Δ)k , |Y | = k(2Δ)k−1 Δ2 .",
                "We will now construct a bipartite graph W with the vertex set X ∪ Y as follows.",
                "Consider a cost vector y ∈ Y that has two vertices of cost 1 in Bi; let these vertices be vl ∈ Li and vr ∈ Ri.",
                "By changing the cost of either of these vertices to 0, we obtain a cost vector in X.",
                "Let xl and xr be the cost vectors obtained by changing the cost of vl and vr, respectively.",
                "The vertex cover chosen by M(y) must either contain all vertices in Li or it must contain all vertices in Ri.",
                "In the former case, we put in W an edge from y to xl and in the latter case we put in W an edge from y to xr (if the vertex cover includes all of Bi, W contains both of these edges).",
                "The graph W has at least k(2Δ)k−1 Δ2 edges, so there must exist an x ∈ X of degree at least kΔ/2.",
                "Let y1, . . . , ykΔ/2 be the other endpoints of the edges incident to x, and for each i = 1, . . . , kΔ/2, let vi be the vertex whose cost is different under x and yi; note that all vi are distinct.",
                "It is not hard to see that NTUmin(x) ≤ k: the cheapest vertex cover contains the all-0 part of each block, and we can satisfy conditions (1)-(3) by letting one of the vertices in the all-0 part of each block to bid 1, while all other the vertices in the cheapest set bid 0.",
                "On the other hand, by monotonicity of M we have vi ∈ M(x) for i = 1, . . . , kΔ/2 (vi is in the winning set under yi, and x is obtained from yi by decreasing the cost of vi), and moreover, the threshold bid of each vi is at least 1, so the total payment of M on x is at least kΔ/2.",
                "Hence, φNTUmin(M) ≥ M(x)/NTUmin(x) ≥ Δ/2.",
                "REMARK 4.",
                "The lower bound of Theorem 5 can be generalised to randomised mechanisms, where a randomised mechanism is considered to be truthful if it can be represented as a probability distribution over truthful mechanisms.",
                "In this case, instead of choosing the vertex x ∈ X with the highest degree, we put both (y, xl) and (y, xr) into W , label each edge with the probability that the respective part of the block is chosen, and pick x ∈ X with the highest weighted degree.",
                "The argument can be further extended to a more permissive definition of truthfulness for randomised mechanisms, but this discussion is beyond the scope of this paper. 6.",
                "PROPERTIES OF PAYMENT BOUNDS In this section we consider several desirable properties of payment bounds and evaluate the four payment bounds proposed in this paper with respect to them.",
                "The particular properties that we are interested in are independence of the choice of S (Section 6.3), monotonicity (Section 6.4.1), computational hardness (Section 6.4.2), and the relationship with other reasonable bounds, such as the total cost of the cheapest set (Section 6.1), or the total VCG payment (Section 6.2). 6.1 Comparison with total cost Our first requirement is that a payment bound should not be less than the total cost of the selected set.",
                "Payment bounds are used to evaluate the performance of set-system auctions.",
                "The latter have to satisfy individual rationality, i.e., the payment to each agent must be at least as large as his incurred costs; it is only reasonable to require the payment bound to satisfy the same requirement.",
                "Clearly, NTUmax(c) and NTUmin(c) satisfy this requirement due to condition (1), and so does TUmax(c), since TUmax(c) ≥ NTUmax(c).",
                "However, TUmin(c) fails this test.",
                "The example of Proposition 4 shows that for path auctions, TUmin(c) can be smaller than the total cost by a factor of 2.",
                "Moreover, there are set systems and cost vectors for which TUmin(c) is smaller than the cost of the cheapest set S by a factor of Ω(n).",
                "Consider, for example, the vertex-cover auction for the graph of Proposition 5 with the costs cX1 = · · · = cXn−2 = cXn−1 = 1, cX0 = 0.",
                "The cost of a cheapest vertex cover is n − 2, and the lexicographically first vertex cover of cost n−2 is {X0, X1, . . . , Xn−2}.",
                "The constraints in (2) are bXi + bX0 ≤ cXn−1 = 1.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bX1 = · · · = bXn−2 = 0, bX0 = 1, which means that TUmin(c) ≤ 1.",
                "This observation suggests that the payment bound TUmin(c) is too strong to be realistic, since it can be substantially lower than the cost of the cheapest feasible set.",
                "Nevertheless, some of the positive results that were proved in [16] for NTUmin(c) go through for TUmin(c) as well.",
                "In particular, one can show that if the feasible sets are the bases of a monopolyfree matroid, then φTUmin(VCG) = 1.",
                "To show that φTUmin(VCG) is at most 1, one must prove that the VCG payment is at most TUmin(c).",
                "This is shown for NTUmin(c) in the first paragraph of the proof of Theorem 5 in [16].",
                "Their argument does not use condition (1) at all, so it also applies to TUmin(c).",
                "On the other hand, φTUmin(VCG) ≥ 1 since φTUmin(VCG) ≥ φNTUmin(VCG) and φNTUmin(VCG) ≥ 1 by Proposition 7 of [16] (and also by Proposition 6 below). 6.2 Comparison with VCG payments Another measure of suitability for payment bounds is that they should not result in frugality ratios that are less then 1 for wellknown truthful mechanisms.",
                "If this is indeed the case, the payment bound may be too weak, as it becomes too easy to design mechanisms that perform well with respect to it.",
                "It particular, a reasonable requirement is that a payment bound should not exceed the total payment of the classical VCG mechanism.",
                "The following proposition shows that NTUmax(c), and therefore also NTUmin(c) and TUmin(c), do not exceed the VCG payment pVCG(c).",
                "The proof essentially follows the argument of Proposition 7 of [16] and can be found in the full version of this paper [8].",
                "PROPOSITION 6. φNTUmax(VCG) ≥ 1.",
                "Proposition 6 shows that none of the payment bounds TUmin(c), NTUmin(c) and NTUmax(c) exceeds the payment of VCG.",
                "However, the payment bound TUmax(c) can be larger that the total 343 VCG payment.",
                "In particular, for the instance in Proposition 5, the VCG payment is smaller than TUmax(c) by a factor of n − 2.",
                "We have already seen that TUmax(c) ≥ n − 2.",
                "On the other hand, under VCG, the threshold bid of any Xi, i = 1, . . . , n − 2, is 0: if any such vertex bids above 0, it is deleted from the winning set together with X0 and replaced with Xn−1.",
                "Similarly, the threshold bid of X0 is 1, because if X0 bids above 1, it can be replaced with Xn−1.",
                "So the VCG payment is 1.",
                "This result is not surprising: the definition of TUmax(c) implicitly assumes there is co-operation between the agents, while the computation of VCG payments does not take into account any interaction between them.",
                "Indeed, co-operation enables the agents to extract higher payments under VCG.",
                "That is, VCG is not groupstrategyproof.",
                "This suggests that as a payment bound, TUmax(c) may be too liberal, at least in a context where there is little or no co-operation between agents.",
                "Perhaps TUmax(c) can be a good benchmark for measuring the performance of mechanisms designed for agents that can form coalitions or make side payments to each other, in particular, group-strategyproof mechanisms.",
                "Another setting in which bounding φTUmax is still of some interest is when, for the underlying problem, the optimal allocation and VCG payments are NP-hard to compute.",
                "In this case, finding a <br>polynomial-time</br> computable mechanism with good frugality ratio with respect to TUmax(c) is a non-trivial task, while bounding the frugality ratio with respect to more challenging payment bounds could be too difficult.",
                "To illustrate this point, compare the proofs of Lemma 6 and Lemma 7: both require some effort, but the latter is much more difficult than the former. 6.3 The choice of S All payment bounds defined in this paper correspond to the total bid of all elements in the cheapest feasible set, where ties are broken lexicographically.",
                "While this definition ensures that our payment bounds are well-defined, the particular choice of the drawresolution rule appears arbitrary, and one might wonder if our payment bounds are sufficiently robust to be independent of this choice.",
                "It turns out that is indeed the case for NTUmin(c) and NTUmax(c), i.e., these bounds do not depend on the draw-resolution rule.",
                "To see this, suppose that two feasible sets S1 and S2 have the same cost.",
                "In the computation of NTUmin(c, S1), all vertices in S1 \\S2 would have to bid their true cost, since otherwise S2 would become cheaper than S1.",
                "Hence, any bid vector for S1 can only have be = ce for e ∈ S1 ∩ S2, and hence constitutes a valid bid vector for S2 and vice versa.",
                "A similar argument applies to NTUmax(c).",
                "However, for TUmin(c) and TUmax(c) this is not the case.",
                "For example, consider the set system E = {e1, e2, e3, e4, e5}, F = {S1 = {e1, e2}, S2 = {e2, e3, e4}, S3 = {e4, e5}} with the costs c1 = 2, c2 = c3 = c4 = 1, c5 = 3.",
                "The cheapest sets are S1 and S2.",
                "Now TUmax(c, S1) ≤ 4, as the total bid of the elements in S1 cannot exceed the total cost of S3.",
                "On the other hand, TUmax(c, S2) ≥ 5, as we can set b2 = 3, b3 = 0, b4 = 2.",
                "Similarly, TUmin(c, S1) = 4, because the inequalities in (2) are b1 ≤ 2 and b1 + b2 ≤ 4.",
                "But TUmin(c, S2) ≤ 3 as we can set b2 = 1, b3 = 2, b4 = 0. 6.4 Negative results for NTUmin(c) and TUmin(c) The results in [16] and our vertex cover results are proved for the frugality ratio φNTUmin.",
                "Indeed, it can be argued that φNTUmin is the best definition of frugality ratio, because among all reasonable payment bounds (i.e., ones that are at least as large as the cost of the cheapest feasible set), it is most demanding of the algorithm.",
                "However, NTUmin(c) is not always the easiest or the most natural payment bound to work with.",
                "In this subsection, we discuss several disadvantages of NTUmin(c) (and also TUmin(c)) as compared to NTUmax(c) and TUmax(c). 6.4.1 Nonmonotonicity The first problem with NTUmin(c) is that it is not monotone with respect to F, i.e., it may increase when one adds a feasible set to F. (It is, however, monotone in the sense that a losing agent cannot become a winner by raising his cost.)",
                "Intuitively, a good payment bound should satisfy this monotonicity requirement, as adding a feasible set increases the competition, so it should drive the prices down.",
                "Note that this indeed the case for NTUmax(c) and TUmax(c) since a new feasible set adds a constraint in (2), thus limiting the solution space for the respective linear program.",
                "PROPOSITION 7.",
                "Adding a feasible set to F can increase the value of NTUmin(c) by a factor of Ω(n).",
                "PROOF.",
                "Let E = {x, xx, y1, . . . , yn, z1, . . . , zn}.",
                "Set Y = {y1, . . . , yn}, S = Y ∪ {x}, Ti = Y \\ {yi} ∪ {zi}, i = 1, . . . , n, and suppose that F = {S, T1, . . . , Tn}.",
                "The costs are cx = 0, cxx = 0, cyi = 0, czi = 1 for i = 1, . . . , n. Note that S is the cheapest feasible set.",
                "Let F = F ∪ {T0}, where T0 = Y ∪ {xx}.",
                "For F, the bid vector by1 = · · · = byn = 0, bx = 1 satisfies (1), (2), and (3), so NTUmin(c) ≤ 1.",
                "For F , S is still the lexicographically-least cheapest set.",
                "Any optimal solution has bx = 0 (by constraint in (2) with T0).",
                "Condition (3) for yi implies bx + byi = czi = 1, so byi = 1 and NTUmin(c) = n. For path auctions, it has been shown [18] that NTUmin(c) is non-monotone in a slightly different sense, i.e., with respect to adding a new edge (agent) rather than a new feasible set (a team of existing agents).",
                "REMARK 5.",
                "We can also show that NTUmin(c) is non-monotone for vertex cover.",
                "In this case, adding a new feasible set corresponds to deleting edges from the graph.",
                "It turns out that deleting a single edge can increase NTUmin(c) by a factor of n − 2; the construction is similar to that of Proposition 5. 6.4.2 NP-Hardness Another problem with NTUmin(c, S) is that it is NP-hard to compute even if the number of feasible sets is polynomial in n. Again, this puts it at a disadvantage compared to NTUmax(c, S) and TUmax(c, S) (see Remark 1).",
                "THEOREM 6.",
                "Computing NTUmin(c) is NP-hard, even when the lexicographically-least feasible set S is given in the input.",
                "PROOF.",
                "We reduce EXACT COVER BY 3-SETS(X3C) to our problem.",
                "An instance of X3C is given by a universe G = {g1, . . . , gn} and a collection of subsets C1, . . . , Cm, Ci ⊂ G, |Ci| = 3, where the goal is to decide whether one can cover G by n/3 of these sets.",
                "Observe that if this is indeed the case, each element of G is contained in exactly one set of the cover.",
                "LEMMA 9.",
                "Consider a minimisation problem P of the following form: Minimise P i=1,...,n bi under conditions (1) bi ≥ 0 for all i = 1, . . . , n; (2) for any j = 1, . . . , k we have P bi∈Sj bi ≤ aj, where Sj ⊆ {b1, . . . , bn}; (3) for each bj , one of the constraints in (2) involving it is tight.",
                "For any such P, one can construct a set system S and a vector of costs c such that NTUmin(c) is the optimal solution to P. PROOF.",
                "The construction is straightforward: there is an element of cost 0 for each bi, an element of cost aj for each aj, the feasible solutions are {b1, . . . , bn}, or any set obtained from {b1, . . . , bn} by replacing the elements in Sj by aj. 344 By this lemma, all we have to do to prove Theorem 6 is to show how to solve X3C by using the solution to a minimisation problem of the form given in Lemma 9.",
                "We do this as follows.",
                "For each Ci, we introduce 4 variables xi, ¯xi, ai, and bi.",
                "Also, for each element gj of G there is a variable dj.",
                "We use the following set of constraints: • In (1), we have constraints xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 for all i = 1, . . . , m, j = 1, . . . , n. • In (2), for all i = 1, . . . , m, we have the following 5 constraints: xi + ¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi + bi ≤ 1.",
                "Also, for all j = 1, . . . , n we have a constraint of the form xi1 + · · · + xik + dj ≤ 1, where Ci1 , . . . , Cik are the sets that contain gj.",
                "The goal is to minimize z = P i(xi + ¯xi + ai + bi) + P j dj.",
                "Observe that for each j, there is only one constraint involving dj , so by condition (3) it must be tight.",
                "Consider the two constraints involving ai.",
                "One of them must be tight, and therefore xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1.",
                "Hence, for any feasible solution to (1)-(3) we have z ≥ m. Now, suppose that there is an exact set cover.",
                "Set dj = 0 for j = 1, . . . , n. Also, if Ci is included in this cover, set xi = 1, ¯xi = ai = bi = 0, otherwise set ¯xi = 1, xi = ai = bi = 0.",
                "Clearly, all inequalities in (2) are satisfied (we use the fact that each element is covered exactly once), and for each variable, one of the constraints involving it is tight.",
                "This assignment results in z = m. Conversely, suppose there is a feasible solution with z = m. As each addend of the form xi + ¯xi + ai + bi contributes at least 1, we have xi + ¯xi + ai + bi = 1 for all i, dj = 0 for all j.",
                "We will now show that for each i, either xi = 1 and ¯xi = 0, or xi = 0 and ¯xi = 1.",
                "For the sake of contradiction, suppose that xi = δ < 1, ¯xi = δ < 1.",
                "As one of the constraints involving ai must be tight, we have ai ≥ min{1 − δ, 1 − δ }.",
                "Similarly, bi ≥ min{1 − δ, 1 − δ }.",
                "Hence, xi + ¯xi + ai + bi = 1 = δ +δ +2 min{1−δ, 1−δ } > 1.",
                "To finish the proof, note that for each j = 1, . . . , m we have xi1 + · · · + xik + dj = 1 and dj = 0, so the subsets that correspond to xi = 1 constitute a set cover.",
                "REMARK 6.",
                "In the proofs of Proposition 7 and Theorem 6 all constraints in (1) are of the form be ≥ 0.",
                "Hence, the same results are true for TUmin(c).",
                "REMARK 7.",
                "For shortest-path auctions, the size of F can be superpolynomial.",
                "However, there is a <br>polynomial-time</br> separation oracle for constraints in (2) (to construct one, use any algorithm for finding shortest paths), so one can compute NTUmax(c) and TUmax(c) in polynomial time.",
                "On the other hand, recently and independently it was shown [18] that computing NTUmin(c) for shortest-path auctions is NP-hard. 7.",
                "REFERENCES [1] A. Archer and E. Tardos, Frugal path mechanisms.",
                "In Proceedings of the 13th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 991-999, 2002 [2] R. Bar-Yehuda, K. Bendel, A. Freund, and D. Rawitz, Local ratio: A unified framework for approximation algorithms.",
                "In Memoriam: Shimon Even 1935-2004.",
                "ACM Comput.",
                "Surv., 36(4):422-463, 2004 [3] R. Bar-Yehuda and S. Even, A local-ratio theorem for approximating the weighted vertex cover problem.",
                "Annals of Discrete Mathematics, 25:27-46, 1985 [4] E. Clarke, Multipart pricing of public goods.",
                "Public Choice, 8:17-33, 1971 [5] G. Calinescu, Bounding the payment of approximate truthful mechanisms.",
                "In Proceedings of the 15th International Symposium on Algorithms and Computation, pages 221-233, 2004 [6] A. Czumaj and A. Ronen, On the expected payment of mechanisms for task allocation.",
                "In Proceedings of the 5th ACM Conference on Electronic Commerce (EC04), 2004 [7] E. Elkind, True costs of cheap labor are hard to measure: edge deletion and VCG payments in graphs.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [8] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Frugality ratios and improved truthful mechanisms for vertex cover.",
                "Available from http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai, and K. Steiglitz, Frugality in path auctions.",
                "In Proceedings of the 15th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 694-702, 2004 [10] J. Feigenbaum, C. H. Papadimitriou, R. Sami, and S. Shenker, A BGP-based mechanism for lowest-cost routing.",
                "In Proceedings of the 21st Symposium on Principles of Distributed Computing, pages 173-182, 2002 [11] A. Fiat, A. Goldberg, J. Hartline, and A. Karlin, Competitive generalized auctions.",
                "In Proceedings of the 34th Annual ACM Symposium on Theory of Computation, pages 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra and A. Verma, Coalitional games on graphs: core structures, substitutes and frugality.",
                "In Proceedings of the 4th ACM Conference on Electronic Commerce (EC03), 2005 [13] A. Goldberg, J. Hartline, and A. Wright, Competitive auctions and digital goods.",
                "In Proceedings of the 12th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2001 [14] T. Groves, Incentives in teams.",
                "Econometrica, 41(4):617-631, 1973 [15] N. Immorlica, D. Karger, E. Nikolova, and R. Sami, First-price path auctions.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [16] A. R. Karlin, D. Kempe, and T. Tamir, Beyond VCG: frugality of truthful mechanisms.",
                "In Proceedings of the 46th Annual IEEE Symposium on Foundations of Computer Science, pages 615-626, 2005 [17] D. Kempe, Personal communication, 2006 [18] N. Chen, A. R. Karlin, Cheap labor can be expensive, In Proceedings of the 18th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2007 [19] N. Nisan and A. Ronen, Algorithmic mechanism design.",
                "In Proceedings of the 31st Annual ACM Symposium on Theory of Computation, pages 129-140, 1999 [20] A. Ronen and R. Talisman, Towards generic low payment mechanisms for decentralized task allocation.",
                "In Proceedings of the 7th International IEEE Conference on E-Commerce Technology, 2005 [21] K. Talwar, The price of truth: frugality in truthful mechanisms.",
                "In Proceedings of 20th International Symposium on Theoretical Aspects of Computer Science, 2003 [22] W. Vickrey, Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961 345"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En este artículo, proponemos una nueva subasta veraz de \"tiempo polinómico\" para el problema de la cubierta del vértice y vinculamos su relación de frugalidad.",
                "Según esta nueva definición, los autores construyen nuevos mecanismos para el problema de ruta más corto y muestran que el pago excesivo de estos mecanismos está dentro de un factor constante de óptimo.1.1 Nuestros resultados Subastas de cubierta de vértices Proponemos una subasta veraz de \"tiempo polinómico\" para la cubierta de vértice que genera una solución cuyo costo está dentro de un factor de 2 de óptimo, y cuya relación de frugalidad es como máximo 2Δ, donde δ es el grado máximo de grado de grado deEl gráfico (Teorema 4).",
                "El primero (y, según nuestro conocimiento, solo) documento que investiga los mecanismos veraños \"en tiempo polinómico\" para la cobertura de vértices es [5].",
                "Nuestros resultados mejoran los de [21] ya que nuestro mecanismo es \"tiempo polinómico\" computable, así como en los de [5], ya que nuestro mecanismo tiene una mejor relación de aproximación, y demostramos un límite más fuerte en la relación de frugalidad;Además, este límite también se aplica al mecanismo de [5].2.",
                "En este caso, encontrar un mecanismo computable \"en tiempo polinómico\" con una buena relación de frugalidad con respecto a Tumax (c) es una tarea no trivial, mientras que limita la relación de frugalidad con respecto a los límites de pago más desafiantes podría ser demasiado difícil.",
                "Sin embargo, existe un oráculo de separación de \"tiempo polinómico\" para las restricciones en (2) (para construir uno, use cualquier algoritmo para encontrar rutas más cortas), para que uno pueda calcular ntumax (c) y tumax (c) en el tiempo polinómico."
            ],
            "translated_text": "",
            "candidates": [
                "tiempo polinomial",
                "tiempo polinómico",
                "tiempo polinomial",
                "tiempo polinómico",
                "tiempo polinomial",
                "en tiempo polinómico",
                "Tiempo polinómico",
                "tiempo polinómico",
                "tiempo polinomial",
                "en tiempo polinómico",
                "tiempo polinomial",
                "tiempo polinómico"
            ],
            "error": []
        },
        "nonmonotonicity": {
            "translated_key": "no monotonicidad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Frugality Ratios And Improved Truthful Mechanisms for Vertex Cover ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT In set-system auctions, there are several overlapping teams of agents, and a task that can be completed by any of these teams.",
                "The auctioneers goal is to hire a team and pay as little as possible.",
                "Examples of this setting include shortest-path auctions and vertex-cover auctions.",
                "Recently, Karlin, Kempe and Tamir introduced a new definition of frugality ratio for this problem.",
                "Informally, the frugality ratio is the ratio of the total payment of a mechanism to a desired payment bound.",
                "The ratio captures the extent to which the mechanism overpays, relative to perceived fair cost in a truthful auction.",
                "In this paper, we propose a new truthful polynomial-time auction for the vertex cover problem and bound its frugality ratio.",
                "We show that the solution quality is with a constant factor of optimal and the frugality ratio is within a constant factor of the best possible worst-case bound; this is the first auction for this problem to have these properties.",
                "Moreover, we show how to transform any truthful auction into a frugal one while preserving the approximation ratio.",
                "Also, we consider two natural modifications of the definition of Karlin et al., and we analyse the properties of the resulting payment bounds, such as monotonicity, computational hardness, and robustness with respect to the draw-resolution rule.",
                "We study the relationships between the different payment bounds, both for general set systems and for specific set-system auctions, such as path auctions and vertex-cover auctions.",
                "We use these new definitions in the proof of our main result for vertex-cover auctions via a bootstrapping technique, which may be of independent interest.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a set system auction there is a single buyer and many vendors that can provide various services.",
                "It is assumed that the buyers requirements can be satisfied by various subsets of the vendors; these subsets are called the feasible sets.",
                "A widely-studied class of setsystem auctions is path auctions, where each vendor is able to sell access to a link in a network, and the feasible sets are those sets whose links contain a path from a given source to a given destination; the study of these auctions has been initiated in the seminal paper by Nisan and Ronen [19] (see also [1, 10, 9, 6, 15, 7, 20]).",
                "We assume that each vendor has a cost of providing his services, but submits a possibly larger bid to the auctioneer.",
                "Based on these bids, the auctioneer selects a feasible subset of vendors, and makes payments to the vendors in this subset.",
                "Each selected vendor enjoys a profit of payment minus cost.",
                "Vendors want to maximise profit, while the buyer wants to minimise the amount he pays.",
                "A natural goal in this setting is to design a truthful auction, in which vendors have an incentive to bid their true cost.",
                "This can be achieved by paying each selected vendor a premium above her bid in such a way that the vendor has no incentive to overbid.",
                "An interesting question in mechanism design is how much the auctioneer will have to overpay in order to ensure truthful bids.",
                "In the context of path auctions this topic was first addressed by Archer and Tardos [1].",
                "They define the frugality ratio of a mechanism as the ratio between its total payment and the cost of the cheapest path disjoint from the path selected by the mechanism.",
                "They show that, for a large class of truthful mechanisms for this problem, the frugality ratio is as large as the number of edges in the shortest path.",
                "Talwar [21] extends this definition of frugality ratio to general set systems, and studies the frugality ratio of the classical VCG mechanism [22, 4, 14] for many specific set systems, such as minimum spanning trees and set covers.",
                "While the definition of frugality ratio proposed by [1] is wellmotivated and has been instrumental in studying truthful mechanisms for set systems, it is not completely satisfactory.",
                "Consider, for example, the graph of Figure 1 with the costs cAB = cBC = A B C D Figure 1: The diamond graph 336 cCD = 0, cAC = cBD = 1.",
                "This graph is 2-connected and the VCG payment to the winning path ABCD is bounded.",
                "However, the graph contains no A-D path that is disjoint from ABCD, and hence the frugality ratio of VCG on this graph remains undefined.",
                "At the same time, there is no monopoly, that is, there is no vendor that appears in all feasible sets.",
                "In auctions for other types of set systems, the requirement that there exist a feasible solution disjoint from the selected one is even more severe: for example, for vertex-cover auctions (where vendors correspond to the vertices of some underlying graph, and the feasible sets are vertex covers) the requirement means that the graph must be bipartite.",
                "To deal with this problem, Karlin et al. [16] suggest a better benchmark, which is defined for any monopoly-free set system.",
                "This quantity, which they denote by ν, intuitively corresponds to the value of a cheapest Nash equilibrium.",
                "Based on this new definition, the authors construct new mechanisms for the shortest path problem and show that the overpayment of these mechanisms is within a constant factor of optimal. 1.1 Our results Vertex cover auctions We propose a truthful polynomial-time auction for vertex cover that outputs a solution whose cost is within a factor of 2 of optimal, and whose frugality ratio is at most 2Δ, where Δ is the maximum degree of the graph (Theorem 4).",
                "We complement this result by proving (Theorem 5) that for any Δ and n, there are graphs of maximum degree Δ and size Θ(n) for which any truthful mechanism has frugality ratio at least Δ/2.",
                "This means that the solution quality of our auction is with a factor of 2 of optimal and the frugality ratio is within a factor of 4 of the best possible bound for worst-case inputs.",
                "To the best of our knowledge, this is the first auction for this problem that enjoys these properties.",
                "Moreover, we show how to transform any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio.",
                "Frugality ratios Our vertex cover results naturally suggest two modifications of the definition of ν in [16].",
                "These modifications can be made independently of each other, resulting in four different payment bounds TUmax, TUmin, NTUmax, and NTUmin, where NTUmin is equal to the original payment bound ν of in [16].",
                "All four payment bounds arise as Nash equilibria of certain games (see the full version of this paper [8]); the differences between them can be seen as the price of initiative and the price of cooperation (see Section 3).",
                "While our main result about vertex cover auctions (Theorem 4) is with respect to NTUmin = ν, we make use of the new definitions by first comparing the payment of our mechanism to a weaker bound NTUmax, and then bootstrapping from this result to obtain the desired bound.",
                "Inspired by this application, we embark on a further study of these payment bounds.",
                "Our results here are as follows: 1.",
                "We observe (Proposition 1) that the four payment bounds always obey a particular order that is independent of the choice of the set system and the cost vector, namely, TUmin ≤ NTUmin ≤ NTUmax ≤ TUmax.",
                "We provide examples (Proposition 5 and Corollaries 1 and 2) showing that for the vertex cover problem any two consecutive bounds can differ by a factor of n − 2, where n is the number of agents.",
                "We then show (Theorem 2) that this separation is almost best possible for general set systems by proving that for any set system TUmax/TUmin ≤ n. In contrast, we demonstrate (Theorem 3) that for path auctions TUmax/TUmin ≤ 2.",
                "We provide examples (Propositions 2, 3 and 4) showing that this bound is tight.",
                "We see this as an argument for the study of vertexcover auctions, as they appear to be more representative of the general team -selection problem than the widely studied path auctions. 2.",
                "We show (Theorem 1) that for any set system, if there is a cost vector for which TUmin and NTUmin differ by a factor of α, there is another cost vector that separates NTUmin and NTUmax by the same factor and vice versa; the same is true for the pairs (NTUmin, NTUmax) and (NTUmax, TUmax).",
                "This symmetry is quite surprising, since, e.g., TUmin and NTUmax are obtained from NTUmin by two very different transformations.",
                "This observation suggests that the four payment bounds should be studied in a unified framework; moreover, it leads us to believe that the bootstrapping technique of Theorem 4 may have other applications. 3.",
                "We evaluate the payment bounds introduced here with respect to a checklist of desirable features.",
                "In particular, we note that the payment bound ν = NTUmin of [16] exhibits some counterintuitive properties, such as <br>nonmonotonicity</br> with respect to adding a new feasible set (Proposition 7), and is NP-hard to compute (Theorem 6), while some of the other payment bounds do not suffer from these problems.",
                "This can be seen as an argument in favour of using weaker but efficiently computable bounds NTUmax and TUmax.",
                "Related work Vertex-cover auctions have been studied in the past by Talwar [21] and Calinescu [5].",
                "Both of these papers are based on the definition of frugality ratio used in [1]; as mentioned before, this means that their results only apply to bipartite graphs.",
                "Talwar [21] shows that the frugality ratio of VCG is at most Δ.",
                "However, since finding the cheapest vertex cover is an NP-hard problem, the VCG mechanism is computationally infeasible.",
                "The first (and, to the best of our knowledge, only) paper to investigate polynomial-time truthful mechanisms for vertex cover is [5].",
                "This paper studies an auction that is based on the greedy allocation algorithm, which has an approximation ratio of log n. While the main focus of [5] is the more general set cover problem, the results of [5] imply a frugality ratio of 2Δ2 for vertex cover.",
                "Our results improve on those of [21] as our mechanism is polynomial-time computable, as well as on those of [5], as our mechanism has a better approximation ratio, and we prove a stronger bound on the frugality ratio; moreover, this bound also applies to the mechanism of [5]. 2.",
                "PRELIMINARIES In most of this paper, we discuss auctions for set systems.",
                "A set system is a pair (E, F), where E is the ground set, |E| = n, and F is a collection of feasible sets, which are subsets of E. Two particular types of set systems are of interest to us - shortest path systems, in which the ground set consists of all edges of a network, and the feasible sets are paths between two specified vertices s and t, and vertex cover systems, in which the elements of the ground set are the vertices of a graph, and the feasible sets are vertex covers of this graph.",
                "In set system auctions, each element e of the ground set is owned by an independent agent and has an associated non-negative cost ce.",
                "The goal of the centre is to select (purchase) a feasible set.",
                "Each element e in the selected set incurs a cost of ce.",
                "The elements that are not selected incur no costs.",
                "The auction proceeds as follows: all elements of the ground set make their bids, the centre selects a feasible set based on the bids and makes payments to the agents.",
                "Formally, an auction is defined by an allocation rule A : Rn → F and a payment rule P : Rn → Rn .",
                "The allocation rule takes as input a vector of bids and decides which of the sets in F should be selected.",
                "The payment rule also takes as input a vector of bids and decides how much to pay to each agent.",
                "The standard requirements are individual rationality, i.e., the payment to each agent should be at least as high as his incurred cost (0 for agents not in the selected set and ce for agents in the 337 selected set) and incentive compatibility, or truthfulness, i.e., each agents dominant strategy is to bid his true cost.",
                "An allocation rule is monotone if an agent cannot increase his chance of getting selected by raising his bid.",
                "Formally, for any bid vector b and any e ∈ E, if e ∈ A(b) then e ∈ A(b1, . . . , be, . . . , bn) for any be > be.",
                "Given a monotone allocation rule A and a bid vector b, the threshold bid te of an agent e ∈ A(b) is the highest bid of this agent that still wins the auction, given that the bids of other participants remain the same.",
                "Formally, te = sup{be ∈ R | e ∈ A(b1, . . . , be, . . . , bn)}.",
                "It is well known (see, e.g. [19, 13]) that any auction that has a monotone allocation rule and pays each agent his threshold bid is truthful; conversely, any truthful auction has a monotone allocation rule.",
                "The VCG mechanism is a truthful mechanism that maximises the social welfare and pays 0 to the losing agents.",
                "For set system auctions, this simply means picking a cheapest feasible set, paying each agent in the selected set his threshold bid, and paying 0 to all other agents.",
                "Note, however, that the VCG mechanism may be difficult to implement, since finding a cheapest feasible set may be intractable.",
                "If U is a set of agents, c(U) denotes P w∈U cw.",
                "Similarly, b(U) denotes P w∈U bw. 3.",
                "FRUGALITY RATIOS We start by reproducing the definition of the quantity ν from [16, Definition 4].",
                "Let (E, F) be a set system and let S be a cheapest feasible set with respect to the true costs ce.",
                "Then ν(c, S) is the solution to the following optimisation problem.",
                "Minimise B = P e∈S be subject to (1) be ≥ ce for all e ∈ E (2) P e∈S\\T be ≤ P e∈T \\S ce for all T ∈ F (3) for every e ∈ S, there is a Te ∈ F such that e ∈ Te andP e ∈S\\Te be = P e ∈Te\\S ce The bound ν(c, S) can be seen as an outcome of a two-stage process, where first each agent e ∈ S makes a bid be stating how much it wants to be paid, and then the centre decides whether to accept these bids.",
                "The behaviour of both parties is affected by the following considerations.",
                "From the centres point of view, the set S must remain the most attractive choice, i.e., it must be among the cheapest feasible sets under the new costs ce = ce for e ∈ S, ce = be for e ∈ S (condition (2)).",
                "The reason for that is that if (2) is violated for some set T, the centre would prefer T to S. On the other hand, no agent would agree to a payment that does not cover his costs (condition (1)), and moreover, each agent tries to maximise his profit by bidding as high as possible, i.e., none of the agents can increase his bid without violating condition (2) (condition (3)).",
                "The centre wants to minimise the total payout, so ν(c, S) corresponds to the best possible outcome from the centres point of view.",
                "This definition captures many important aspects of our intuition about fair payments.",
                "However, it can be modified in two ways, both of which are still quite natural, but result in different payment bounds.",
                "First, we can consider the worst rather than the best possible outcome for the centre.",
                "That is, we can consider the maximum total payment that the agents can extract by jointly selecting their bids subject to (1), (2), and (3).",
                "Such a bound corresponds to maximising B subject to (1), (2), and (3) rather than minimising it.",
                "If it is the agents who make the original bids (rather than the centre), this kind of bidding behaviour is plausible.",
                "On the other hand, in a game in which the centre proposes payments to the agents in S and the agents accept them as long as (1), (2) and (3) are satisfied, we would be likely to observe a total payment of ν(c, S).",
                "Hence, the difference between these two definitions can be seen as the price of initiative.",
                "Second, the agents may be able to make payments to each other.",
                "In this case, if they can extract more money from the centre by agreeing on a vector of bids that violates individual rationality (i.e., condition (1)) for some bidders, they might be willing to do so, as the agents who are paid below their costs will be compensated by other members of the group.",
                "The bids must still be realistic, i.e., they have to satisfy be ≥ 0.",
                "The resulting change in payments can be seen as the price of co-operation and corresponds to replacing condition (1) with the following weaker condition (1∗ ): be ≥ 0 for all e ∈ E. (1∗ ) By considering all possible combinations of these modifications, we obtain four different payment bounds, namely • TUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1∗ ), (2), and (3). • TUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1∗ ), (2), and (3). • NTUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1), (2), and (3). • NTUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1), (2), (3).",
                "The abbreviations TU and NTU correspond, respectively, to transferable utility and non-transferable utility, i.e., the agents ability/inability to make payments to each other.",
                "For concreteness, we will take TUmin(c) to be TUmin(c, S) where S is the lexicographically least amongst the cheapest feasible sets.",
                "We define TUmax(c), NTUmin(c), NTUmax(c) and ν(c) similarly, though we will see in Section 6.3 that, in fact, NTUmin(c, S) and NTUmax(c, S) are independent of the choice of S. Note that the quantity ν(c) from [16] is NTUmin(c).",
                "The second modification (transferable utility) is more intuitively appealing in the context of the maximisation problem, as both assume some degree of co-operation between the agents.",
                "While the second modification can be made without the first, the resulting payment bound TUmin(c, S) is too strong to be a realistic benchmark, at least for general set systems.",
                "In particular, it can be smaller than the total cost of the cheapest feasible set S (see Section 6).",
                "Nevertheless, we provide the definition as well as some results about TUmin(c, S) in the paper, both for completeness and because we believe that it may help to understand which properties of the payment bounds are important for our proofs.",
                "Another possibility would be to introduce an additional constraint P e∈S be ≥P e∈S ce in the definition of TUmin(c, S) (note that this condition holds automatically for TUmax(c, S), as TUmax(c, S) ≥ NTUmax(c, S)); however, such a definition would have no direct game-theoretic interpretation, and some of our results (in particular, the ones in Section 4) would no longer be true.",
                "REMARK 1.",
                "For the payment bounds that are derived from maximisation problems, (i.e., TUmax(c, S) and NTUmax(c, S)), constraints of type (3) are redundant and can be dropped.",
                "Hence, TUmax(c, S) and NTUmax(c, S) are solutions to linear programs, and therefore can be computed in polynomial time as long as we have a separation oracle for constraints in (2).",
                "In contrast, 338 NTUmin(c, S) can be NP-hard to compute even if the size of F is polynomial (see Section 6).",
                "The first and third inequalities in the following observation follow from the fact that condition (1∗ ) is strictly weaker than condition (1).",
                "PROPOSITION 1.",
                "TUmin(c, S) ≤ NTUmin(c, S) ≤ NTUmax(c, S) ≤ TUmax(c, S).",
                "Let M be a truthful mechanism for (E, F).",
                "Let pM(c) denote the total payments of M when the actual costs are c. A frugality ratio of M with respect to a payment bound is the ratio between the payment of M and this payment bound.",
                "In particular, φTUmin(M) = sup c pM(c)/TUmin(c), φTUmax(M) = sup c pM(c)/TUmax(c), φNTUmin(M) = sup c pM(c)/NTUmin(c), φNTUmax(M) = sup c pM(c)/NTUmax(c).",
                "We conclude this section by showing that there exist set systems and respective cost vectors for which all four payment bounds are different.",
                "In the next section, we quantify this difference, both for general set systems, and for specific types of set systems, such as path auctions or vertex cover auctions.",
                "EXAMPLE 1.",
                "Consider the shortest-path auction on the graph of Figure 1.",
                "The cheapest feasible sets are all paths from A to D. It can be verified, using the reasoning of Propositions 2 and 3 below, that for the cost vector cAB = cCD = 2, cBC = 1, cAC = cBD = 5, we have • TUmax(c) = 10 (with bAB = bCD = 5, bBC = 0), • NTUmax(c) = 9 (with bAB = bCD = 4, bBC = 1), • NTUmin(c) = 7 (with bAB = bCD = 2, bBC = 3), • TUmin(c) = 5 (with bAB = bCD = 0, bBC = 5). 4.",
                "COMPARING PAYMENT BOUNDS 4.1 Path auctions We start by showing that for path auctions any two consecutive payment bounds can differ by at least a factor of 2.",
                "PROPOSITION 2.",
                "There is an instance of the shortest-path problem for which we have NTUmax(c)/NTUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is due to David Kempe [17].",
                "Consider the graph of Figure 1 with the edge costs cAB = cBC = cCD = 0, cAC = cBD = 1.",
                "Under these costs, ABCD is the cheapest path.",
                "The inequalities in (2) are bAB + bBC ≤ cAC = 1, bBC + bCD ≤ cBD = 1.",
                "By condition (3), both of these inequalities must be tight (the former one is the only inequality involving bAB, and the latter one is the only inequality involving bCD).",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 0, bCD ≥ 0.",
                "Now, if the goal is to maximise bAB + bBC + bCD, the best choice is bAB = bCD = 1, bBC = 0, so NTUmax(c) = 2.",
                "On the other hand, if the goal is to minimise bAB + bBC + bCD, one should set bAB = bCD = 0, bBC = 1, so NTUmin(c) = 1.",
                "PROPOSITION 3.",
                "There is an instance of the shortest-path problem for which we have TUmax(c)/NTUmax(c) ≥ 2.",
                "PROOF.",
                "Again, consider the graph of Figure 1.",
                "Let the edge costs be cAB = cCD = 0, cBC = 1, cAC = cBD = 1.",
                "ABCD is the lexicographically-least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "The inequalities in (2) are the same as in the previous example, and by the same argument both of them are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 1, bCD ≥ 0.",
                "Our goal is to maximise bAB + bBC + bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 0, bBC = 1, so NTUmax(c) = 1.",
                "Otherwise, we can set bAB = bCD = 1, bBC = 0, so TUmax(c) ≥ 2.",
                "PROPOSITION 4.",
                "There is an instance of the shortest-path problem for which we have NTUmin(c)/TUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is also based on the graph of Figure 1.",
                "The edge costs are cAB = cCD = 1, cBC = 0, cAC = cBD = 1.",
                "ABCD is the lexicographically least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "Again, the inequalities in (2) are the same, and both are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 1, bBC ≥ 0, bCD ≥ 1.",
                "Our goal is to minimise bAB + bBC +bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 1, bBC = 0, so NTUmin(c) = 2.",
                "Otherwise, we can set bAB = bCD = 0, bBC = 1, so TUmin(c) ≤ 1.",
                "In Section 4.4 (Theorem 3), we show that the separation results in Propositions 2, 3, and 4 are optimal. 4.2 Connections between separation results The separation results for path auctions are obtained on the same graph using very similar cost vectors.",
                "It turns out that this is not coincidental.",
                "Namely, we can prove the following theorem.",
                "THEOREM 1.",
                "For any set system (E, F), and any feasible set S, max c TUmax(c, S) NTUmax(c, S) = max c NTUmax(c, S) NTUmin(c, S) , max c NTUmax(c, S) NTUmin(c, S) = max c NTUmin(c, S) TUmin(c, S) , where the maximum is over all cost vectors c for which S is a cheapest feasible set.",
                "The proof of the theorem follows directly from the four lemmas proved below; more precisely, the first equality in Theorem 1 is obtained by combining Lemmas 1 and 2, and the second equality is obtained by combining Lemmas 3 and 4.",
                "We prove Lemma 1 here; the proofs of Lemmas 2- 4 are similar and can be found in the full version of this paper [8].",
                "LEMMA 1.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and TUmax(c, S)/NTUmax(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α.",
                "PROOF.",
                "Suppose that TUmax(c, S) = X and NTUmax(c, S) = Y where X/Y = α.",
                "Assume without loss of generality that S consists of elements 1, . . . , k, and let b1 = (b1 1, . . . , b1 k) and b2 = (b2 1, . . . , b2 k) be the bid vectors that correspond to TUmax(c, S) and NTUmax(c, S), respectively.",
                "Construct the cost vector c by setting ci = ci for i ∈ S, ci = min{ci, b1 i } for i ∈ S. Clearly, S is a cheapest set under c .",
                "Moreover, as the costs of elements outside of S remained the same, the right-hand sides of all constraints in (2) did not change, so any bid vector that satisfies (2) and (3) with respect to c, also satisfies them with respect to c .",
                "We will construct two bid vectors b3 and b4 that satisfy conditions (1), (2), and (3) for the cost vector c , and 339 X X X X X 0 X 12 3 X 4 5 6 Figure 2: Graph that separates payment bounds for vertex cover, n = 7 have P i∈S b3 i = X, P i∈S b4 i = Y .",
                "As NTUmax(c , S) ≥ X and NTUmin(c , S) ≤ Y , this implies the lemma.",
                "We can set b3 i = b1 i : this bid vector satisfies conditions (2) and (3) since b1 does, and we have b1 i ≥ min{ci, b1 i } = ci, which means that b3 satisfies condition (1).",
                "Furthermore, we can set b4 i = b2 i .",
                "Again, b4 satisfies conditions (2) and (3) since b2 does, and since b2 satisfies condition (1), we have b2 i ≥ ci ≥ ci, which means that b4 satisfies condition (1).",
                "LEMMA 2.",
                "Suppose c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and TUmax(c , S)/NTUmax(c , S) ≥ α. LEMMA 3.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmin(c , S)/TUmin(c , S) ≥ α. LEMMA 4.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmin(c, S)/TUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α. 4.3 Vertex-cover auctions In contrast to the case of path auctions, for vertex-cover auctions the gap between NTUmin(c) and NTUmax(c) (and hence between NTUmax(c) and TUmax(c), and between TUmin(c) and NTUmin(c)) can be proportional to the size of the graph.",
                "PROPOSITION 5.",
                "For any n ≥ 3, there is a an n-vertex graph and a cost vector c for which TUmax(c)/NTUmax(c) ≥ n − 2.",
                "PROOF.",
                "The underlying graph consists of an (n − 1)-clique on the vertices X1, . . . , Xn−1, and an extra vertex X0 adjacent to Xn−1.",
                "The costs are cX1 = cX2 = · · · = cXn−2 = 0, cX0 = cXn−1 = 1.",
                "We can assume that S = {X0, X1, . . . , Xn−2} (this is the lexicographically first vertex cover of cost 1).",
                "For this set system, the constraints in (2) are bXi + bX0 ≤ cXn−1 = 1 for i = 1, . . . , n − 2.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bXi = 1 for i = 1, . . . , n − 2, bX0 = 0.",
                "Hence, TUmax(c) ≥ n − 2.",
                "For NTUmax(c), there is an additional constraint bX0 ≥ 1, so the best we can do is to set bXi = 0 for i = 1, . . . , n − 2, bX0 = 1, which implies NTUmax(c) = 1.",
                "Combining Proposition 5 with Lemmas 1 and 3, we derive the following corollaries.",
                "COROLLARY 1.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmax(c)/NTUmin(c) ≥ n − 2.",
                "COROLLARY 2.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmin(c)/TUmin(c) ≥ n − 2. j+2ix ij P \\ P ij+2P \\ P yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 P \\ P Figure 3: Proof of Theorem 3: constraints for ˆPij and ˆPij+2 do not overlap 4.4 Upper bounds It turns out that the lower bound proved in the previous subsection is almost tight.",
                "More precisely, the following theorem shows that no two payment bounds can differ by more than a factor of n; moreover, this is the case not just for the vertex cover problem, but for general set systems.",
                "We bound the gap between TUmax(c) and TUmin(c).",
                "Since TUmin(c) ≤ NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), this bound applies to any pair of payment bounds.",
                "THEOREM 2.",
                "For any set system (E, F) and any cost vector c, we have TUmax(c)/TUmin(c) ≤ n. PROOF.",
                "Assume wlog that the winning set S consists of elements 1, . . . , k. Let c1, . . . , ck be the true costs of elements in S, let b1, . . . , bk be their bids that correspond to TUmin(c), and let b1 , . . . , bk be their bids that correspond to TUmax(c).",
                "Consider the conditions (2) and (3) for S. One can pick a subset L of at most k inequalities in (2) so that for each i = 1, . . . , k there is at least one inequality in L that is tight for bi.",
                "Suppose that the jth inequality in L is of the form bi1 + · · · + bit ≤ c(Tj \\ S).",
                "For bi, all inequalities in L are, in fact, equalities.",
                "Hence, by adding up all of them we obtain k P i=1,...,k bi ≥ P j=1,...,k c(Tj \\ S).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c(Tj \\ S).",
                "Combining these two inequalities, we obtain nTUmin(c) ≥ kTUmin(c) ≥ TUmax(c).",
                "REMARK 2.",
                "The final line of the proof of Theorem 2 shows that, in fact, the upper bound on TUmax(c)/TUmin(c) can be strengthened to the size of the winning set, k. Note that in Proposition 5, as well as in Corollaries 1 and 2, k = n−1, so these results do not contradict each other.",
                "For path auctions, this upper bound can be improved to 2, matching the lower bounds of Section 4.1.",
                "THEOREM 3.",
                "For any instance of the shortest path problem, TUmax(c) ≤ 2 TUmin(c).",
                "PROOF.",
                "Given a network (G, s, t), assume without loss of generality that the lexicographically-least cheapest s-t path, P, in G is {e1, . . . , ek}, where e1 = (s, v1), e2 = (v1, v2), . . . , ek = (vk−1, t).",
                "Let c1, . . . , ck be the true costs of e1, . . . , ek, and let b = (b1, . . . , bk) and b = (b1 , . . . , bk ) be bid vectors that correspond to TUmin(c) and TUmax(c), respectively.",
                "For any i = 1, . . . , k, there is a constraint in (2) that is tight for bi with respect to the bid vector b , i.e., an s-t path Pi that avoids ei and satisfies b (P \\Pi) = c(Pi \\P).",
                "We can assume without loss of generality that Pi coincides with P up to some vertex xi, then deviates from P to avoid ei, and finally returns to P at a vertex 340 yi and coincides with P from then on (clearly, it might happen that s = xi or t = yi).",
                "Indeed, if Pi deviates from P more than once, one of these deviations is not necessary to avoid ei and can be replaced with the respective segment of P without increasing the cost of Pi.",
                "Among all paths of this form, let ˆPi be the one with the largest value of yi, i.e., the rightmost one.",
                "This path corresponds to an inequality Ii of the form bxi+1 + · · · + byi ≤ c( ˆPi \\ P).",
                "As in the proof of Theorem 2, we construct a set of tight constraints L such that every variable bi appears in at least one of these constraints; however, now we have to be more careful about the choice of constraints in L. We construct L inductively as follows.",
                "Start by setting L = {I1}.",
                "At the jth step, suppose that all variables up to (but not including) bij appear in at least one inequality in L. Add Iij to L. Note that for any j we have yij+1 > yij .",
                "This is because the inequalities added to L during the first j steps did not cover bij+1 .",
                "See Figure 3.",
                "Since yij+2 > yij+1 , we must also have xij+2 > yij : otherwise, ˆPij+1 would not be the rightmost constraint for bij+1 .",
                "Therefore, the variables in Iij+2 and Iij do not overlap, and hence no bi can appear in more than two inequalities in L. Now we follow the argument of the proof of Theorem 2 to finish.",
                "By adding up all of the (tight) inequalities in L for bi we obtain 2 P i=1,...,k bi ≥ P j=1,...,k c( ˆPj \\ P).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c( ˆPj \\ P), so TUmax(c) ≤ 2TUmin(c). 5.",
                "TRUTHFUL MECHANISMS FOR VERTEX COVER Recall that for a vertex-cover auction on a graph G = (V, E), an allocation rule is an algorithm that takes as input a bid bv for each vertex and returns a vertex cover ˆS of G. As explained in Section 2, we can combine a monotone allocation rule with threshold payments to obtain a truthful auction.",
                "Two natural examples of monotone allocation rules are Aopt, i.e., the algorithm that finds an optimal vertex cover, and the greedy algorithm AGR.",
                "However, Aopt cannot be guaranteed to run in polynomial time unless P = NP and AGR has approximation ratio of log n. Another approximation algorithm for vertex cover, which has approximation ratio 2, is the local ratio algorithm ALR [2, 3].",
                "This algorithm considers the edges of G one by one.",
                "Given an edge e = (u, v), it computes = min{bu, bv} and sets bu = bu − , bv = bv − .",
                "After all edges have been processed, ALR returns the set of vertices {v | bv = 0}.",
                "It is not hard to check that if the order in which the edges are considered is independent of the bids, then this algorithm is monotone as well.",
                "Hence, we can use it to construct a truthful auction that is guaranteed to select a vertex cover whose cost is within a factor of 2 from the optimal.",
                "However, while the quality of the solution produced by ALR is much better than that of AGR, we still need to show that its total payment is not too high.",
                "In the next subsection, we bound the frugality ratio of ALR (and, more generally, all algorithms that satisfy the condition of local optimality, defined later) by 2Δ, where Δ is the maximum degree of G. We then prove a matching lower bound showing that for some graphs the frugality ratio of any truthful auction is at least Δ/2. 5.1 Upper bound We say that an allocation rule is locally optimal if whenever bv >P w∼v bw, the vertex v is not chosen.",
                "Note that for any such rule the threshold bid of v satisfies tv ≤ P w∼v bw.",
                "CLAIM 1.",
                "The algorithms Aopt, AGR, and ALR are locally optimal.",
                "THEOREM 4.",
                "Any vertex cover auction M that has a locally optimal and monotone allocation rule and pays each agent his threshold bid has frugality ratio φNTUmin(M) ≤ 2Δ.",
                "To prove Theorem 4, we first show that the total payment of any locally optimal mechanism does not exceed Δc(V ).",
                "We then demonstrate that NTUmin(c) ≥ c(V )/2.",
                "By combining these two results, the theorem follows.",
                "LEMMA 5.",
                "Consider a graph G = (V, E) with maximum degree Δ.",
                "Let M be a vertex-cover auction on G that satisfies the conditions of Theorem 4.",
                "Then for any cost vector c, the total payment of M satisfies pM(c) ≤ Δc(V ).",
                "PROOF.",
                "First note that any such auction is truthful, so we can assume that each agents bid is equal to his cost.",
                "Let ˆS be the vertex cover selected by M. Then by local optimality pM(c) = X v∈ ˆS tv ≤ X v∈ ˆS X w∼v cw ≤ X w∈V Δcw = Δc(V ).",
                "We now derive a lower bound on TUmax(c); while not essential for the proof of Theorem 4, it helps us build the intuition necessary for that proof.",
                "LEMMA 6.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, TUmax(c, S) ≥ c(V \\ S) PROOF.",
                "For a vertex w with at least one neighbour in S, let d(w) denote the number of neighbours that w has in S. Consider the bid vector b in which, for each v ∈ S, bv = P w∼v,w∈S cw d(w) .",
                "Then P v∈S bv = P v∈S P w∼v,w∈S cw/d(w) = P w /∈S cw = c(V \\ S).",
                "To finish we want to show that b is feasible in the sense that it satisfies (2).",
                "Consider a vertex cover T, and extend the bid vector b by assigning bv = cv for v /∈ S. Then b(T) = c(T \\S)+b(S∩T) ≥ c(T \\S)+ X v∈S∩T X w∈S∩T :w∼v cw d(w) , and since all edges between S ∩ T and S go to S ∩ T, the righthand-side is equal to c(T \\S)+ X w∈S∩T cw = c(T \\S)+c(S ∩T) = c(V \\S) = b(S).",
                "Next, we prove a lower bound on NTUmax(c, S); we will then use it to obtain a lower bound on NTUmin(c).",
                "LEMMA 7.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmax(c, S) ≥ c(V \\ S) PROOF.",
                "If c(S) ≥ c(V \\ S), by condition (1) we are done.",
                "Therefore, for the rest of the proof we assume that c(S) < c(V \\ S).",
                "We show how to construct a bid vector (be)e∈S that satisfies conditions (1) and (2) such that b(S) ≥ c(V \\ S); clearly, this implies NTUmax(c, S) ≥ c(V \\ S).",
                "Recall that a network flow problem is described by a directed graph Γ = (VΓ, EΓ), a source node s ∈ VΓ, a sink node t ∈ VΓ, and a vector of capacity constraints ae, e ∈ EΓ.",
                "Consider a network (VΓ, EΓ) such that VΓ = V ∪{s, t}, EΓ = E1 ∪E2 ∪E3, where E1 = {(s, v) | v ∈ S}, E2 = {(v, w) | v ∈ S, w ∈ 341 V \\ S, (v, w) ∈ E}, E3 = {(w, t) | w ∈ V \\ S}.",
                "Since S is a vertex cover for G, no edge of E can have both of its endpoints in V \\ S, and by construction, E2 contains no edges with both endpoints in S. Therefore, the graph (V, E2) is bipartite with parts (S, V \\ S).",
                "Set the capacity constraints for e ∈ EΓ as follows: a(s,v) = cv, a(w,t) = cw, a(v,w) = +∞ for all v ∈ S, w ∈ V \\ S. Recall that a cut is a partition of the vertices in VΓ into two sets C1 and C2 so that s ∈ C1, t ∈ C2; we denote such a cut by C = (C1, C2).",
                "Abusing notation, we write e = (u, v) ∈ C if u ∈ C1, v ∈ C2 or u ∈ C2, v ∈ C1, and say that such an edge e = (u, v) crosses the cut C. The capacity of a cut C is computed as cap(C) = P (v,w)∈C a(v,w).",
                "We have cap(s, V ∪{t}) = c(S), cap({s} ∪ V, t) = c(V \\ S).",
                "Let Cmin = ({s} ∪ S ∪ W , {t} ∪ S ∪ W ) be a minimum cut in Γ, where S , S ⊆ S, W , W ⊆ V \\ S. See Figure 4.",
                "As cap(Cmin) ≤ cap(s, V ∪ {t}) = c(S) < +∞, and any edge in E2 has infinite capacity, no edge (u, v) ∈ E2 crosses Cmin.",
                "Consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Clearly, C = ({s} ∪ S ∪ W , {t}) is a minimum cut in Γ (otherwise, there would exist a smaller cut for Γ).",
                "As cap(C ) = c(W ), we have c(S ) ≥ c(W ).",
                "Now, consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Similarly, C = ({s}, S ∪ W ∪ {t}) is a minimum cut in Γ , cap(C ) = c(S ).",
                "As the size of a maximum flow from s to t is equal to the capacity of a minimum cut separating s and t, there exists a flow F = (fe)e∈EΓ of size c(S ).",
                "This flow has to saturate all edges between s and S , i.e., f(s,v) = cv for all v ∈ S .",
                "Now, increase the capacities of all edges between s and S to +∞.",
                "In the modified network, the capacity of a minimum cut (and hence the size of a maximum flow) is c(W ), and a maximum flow F = (fe)e∈EΓ can be constructed by greedily augmenting F. Set bv = cv for all v ∈ S , bv = f(s,v) for all v ∈ S .",
                "As F is constructed by augmenting F, we have bv ≥ cv for all v ∈ S, i.e., condition (1) is satisfied.",
                "Now, let us check that no vertex cover T ⊆ V can violate condition (2).",
                "Set T1 = T ∩ S , T2 = T ∩ S , T3 = T ∩ W , T4 = T ∩ W ; our goal is to show that b(S \\ T1) + b(S \\ T2) ≤ c(T3)+c(T4).",
                "Consider all edges (u, v) ∈ E such that u ∈ S \\T1.",
                "If (u, v) ∈ E2 then v ∈ T3 (no edge in E2 can cross the cut), and if u, v ∈ S then v ∈ T1∪T2.",
                "Hence, T1∪T3∪S is a vertex cover for G, and therefore c(T1)+ c(T3)+ c(S ) ≥ c(S) = c(T1)+ c(S \\ T1) + c(S ).",
                "Consequently, c(T3) ≥ c(S \\ T1) = b(S \\ T1).",
                "Now, consider the vertices in S \\T2.",
                "Any edge in E2 that starts in one of these vertices has to end in T4 (this edge has to be covered by T, and it cannot go across the cut).",
                "Therefore, the total flow out of S \\T2 is at most the total flow out of T4, i.e., b(S \\T2) ≤ c(T4).",
                "Hence, b(S \\ T1) + b(S \\ T2) ≤ c(T3) + c(T4).",
                "Finally, we derive a lower bound on the payment bound that is of interest to us, namely, NTUmin(c).",
                "LEMMA 8.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmin(c, S) ≥ c(V \\ S) PROOF.",
                "Suppose for contradiction that c is a cost vector with minimum-cost vertex cover S and NTUmin(c, S) < c(V \\S).",
                "Let b be the corresponding bid vector and let c be a new cost vector with cv = bv for v ∈ S and cv = cv for v ∈ S. Condition (2) guarantees that S is an optimal solution to the cost vector c .",
                "Now compute a bid vector b corresponding to NTUmax(c , S).",
                "We S W S W s t T1 T3 T2 T4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 00 11 11 0 00 1 11 0 00 1 11 0 00 1 11 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00000 0000000000 0000000000 00000 0000000000 0000000000 00000 0000000000 11111 1111111111 1111111111 11111 1111111111 1111111111 11111 1111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 Figure 4: Proof of Lemma 7.",
                "Dashed lines correspond to edges in E \\ E2 claim that bv = cv for any v ∈ S. Indeed, suppose that bv > cv for some v ∈ S (bv = cv for v ∈ S by construction).",
                "As b satisfies conditions (1)-(3), among the inequalities in (2) there is one that is tight for v and the bid vector b.",
                "That is, b(S \\ T) = c(T \\ S).",
                "By the construction of c , c (S \\ T) = c (T \\ S).",
                "Now since bw ≥ cw for all w ∈ S, bv > cv implies b (S \\T) > c (S \\T) = c (T \\S).",
                "But this violates (2).",
                "So we now know b = c .",
                "Hence, we have NTUmax(c , S) = P v∈S bv = NTUmin(c, S) < c(V \\ S), giving a contradiction to the fact that NTUmax(c , S) ≥ c (V \\S) which we proved in Lemma 7.",
                "As NTUmin(c, S) satisfies condition (1), it follows that we have NTUmin(c, S) ≥ c(S).",
                "Together will Lemma 8, this implies NTUmin(c, S) ≥ max{c(V \\ S), c(S)} ≥ c(V )/2.",
                "Combined with Lemma 5, this completes the proof of Theorem 4.",
                "REMARK 3.",
                "As NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), our bound of 2Δ extends to the smaller frugality ratios that we consider, i.e., φNTUmax(M) and φTUmax(M).",
                "It is not clear whether it extends to the larger frugality ratio φTUmin(M).",
                "However, the frugality ratio φTUmin(M) is not realistic because the payment bound TUmin(c) is inappropriately low - we show in Section 6 that TUmin(c) can be significantly smaller than the total cost of a cheapest vertex cover.",
                "Extensions We can also apply our results to monotone vertex-cover algorithms that do not necessarily output locally-optimal solutions.",
                "To do so, we simply take the vertex cover produced by any such algorithm and transform it into a locally-optimal one, considering the vertices in lexicographic order and replacing a vertex v with its neighbours whenever bv > P u∼v bu.",
                "Note that if a vertex u has been added to the vertex cover during this process, it means that it has a neighbour whose bid is higher than bu, so after one pass all vertices in the vertex cover satisfy bv ≤ P u∼v bu.",
                "This procedure is monotone in bids, and it can only decrease the cost of the vertex cover.",
                "Therefore, using it on top of a monotone allocation rule with approx342 imation ratio α, we obtain a monotone locally-optimal allocation rule with approximation ratio α.",
                "Combining it with threshold payments, we get an auction with φNTUmin ≤ 2Δ.",
                "Since any truthful auction has a monotone allocation rule, this procedure transforms any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio. 5.2 Lower bound In this subsection, we prove that the upper bound of Theorem 4 is essentially optimal.",
                "Our proof uses the techniques of [9], where the authors prove a similar result for shortest-path auctions.",
                "THEOREM 5.",
                "For any Δ > 0 and any n, there exist a graph G of maximum degree Δ and size N > n such that for any truthful mechanism M on G we have φNTUmin(M) ≥ Δ/2.",
                "PROOF.",
                "Given n and Δ, set k = n/2Δ .",
                "Let G be the graph that consists of k blocks B1, . . . , Bk of size 2Δ each, where each Bi is a complete bipartite graph with parts Li and Ri, |Li| = |Ri| = Δ.",
                "We will consider two families of cost vectors for G. Under a cost vector x ∈ X, each block Bi has one vertex of cost 1; all other vertices cost 0.",
                "Under a cost vector y ∈ Y , there is one block that has two vertices of cost 1, one in each part, all other blocks have one vertex of cost 1, and all other vertices cost 0.",
                "Clearly, |X| = (2Δ)k , |Y | = k(2Δ)k−1 Δ2 .",
                "We will now construct a bipartite graph W with the vertex set X ∪ Y as follows.",
                "Consider a cost vector y ∈ Y that has two vertices of cost 1 in Bi; let these vertices be vl ∈ Li and vr ∈ Ri.",
                "By changing the cost of either of these vertices to 0, we obtain a cost vector in X.",
                "Let xl and xr be the cost vectors obtained by changing the cost of vl and vr, respectively.",
                "The vertex cover chosen by M(y) must either contain all vertices in Li or it must contain all vertices in Ri.",
                "In the former case, we put in W an edge from y to xl and in the latter case we put in W an edge from y to xr (if the vertex cover includes all of Bi, W contains both of these edges).",
                "The graph W has at least k(2Δ)k−1 Δ2 edges, so there must exist an x ∈ X of degree at least kΔ/2.",
                "Let y1, . . . , ykΔ/2 be the other endpoints of the edges incident to x, and for each i = 1, . . . , kΔ/2, let vi be the vertex whose cost is different under x and yi; note that all vi are distinct.",
                "It is not hard to see that NTUmin(x) ≤ k: the cheapest vertex cover contains the all-0 part of each block, and we can satisfy conditions (1)-(3) by letting one of the vertices in the all-0 part of each block to bid 1, while all other the vertices in the cheapest set bid 0.",
                "On the other hand, by monotonicity of M we have vi ∈ M(x) for i = 1, . . . , kΔ/2 (vi is in the winning set under yi, and x is obtained from yi by decreasing the cost of vi), and moreover, the threshold bid of each vi is at least 1, so the total payment of M on x is at least kΔ/2.",
                "Hence, φNTUmin(M) ≥ M(x)/NTUmin(x) ≥ Δ/2.",
                "REMARK 4.",
                "The lower bound of Theorem 5 can be generalised to randomised mechanisms, where a randomised mechanism is considered to be truthful if it can be represented as a probability distribution over truthful mechanisms.",
                "In this case, instead of choosing the vertex x ∈ X with the highest degree, we put both (y, xl) and (y, xr) into W , label each edge with the probability that the respective part of the block is chosen, and pick x ∈ X with the highest weighted degree.",
                "The argument can be further extended to a more permissive definition of truthfulness for randomised mechanisms, but this discussion is beyond the scope of this paper. 6.",
                "PROPERTIES OF PAYMENT BOUNDS In this section we consider several desirable properties of payment bounds and evaluate the four payment bounds proposed in this paper with respect to them.",
                "The particular properties that we are interested in are independence of the choice of S (Section 6.3), monotonicity (Section 6.4.1), computational hardness (Section 6.4.2), and the relationship with other reasonable bounds, such as the total cost of the cheapest set (Section 6.1), or the total VCG payment (Section 6.2). 6.1 Comparison with total cost Our first requirement is that a payment bound should not be less than the total cost of the selected set.",
                "Payment bounds are used to evaluate the performance of set-system auctions.",
                "The latter have to satisfy individual rationality, i.e., the payment to each agent must be at least as large as his incurred costs; it is only reasonable to require the payment bound to satisfy the same requirement.",
                "Clearly, NTUmax(c) and NTUmin(c) satisfy this requirement due to condition (1), and so does TUmax(c), since TUmax(c) ≥ NTUmax(c).",
                "However, TUmin(c) fails this test.",
                "The example of Proposition 4 shows that for path auctions, TUmin(c) can be smaller than the total cost by a factor of 2.",
                "Moreover, there are set systems and cost vectors for which TUmin(c) is smaller than the cost of the cheapest set S by a factor of Ω(n).",
                "Consider, for example, the vertex-cover auction for the graph of Proposition 5 with the costs cX1 = · · · = cXn−2 = cXn−1 = 1, cX0 = 0.",
                "The cost of a cheapest vertex cover is n − 2, and the lexicographically first vertex cover of cost n−2 is {X0, X1, . . . , Xn−2}.",
                "The constraints in (2) are bXi + bX0 ≤ cXn−1 = 1.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bX1 = · · · = bXn−2 = 0, bX0 = 1, which means that TUmin(c) ≤ 1.",
                "This observation suggests that the payment bound TUmin(c) is too strong to be realistic, since it can be substantially lower than the cost of the cheapest feasible set.",
                "Nevertheless, some of the positive results that were proved in [16] for NTUmin(c) go through for TUmin(c) as well.",
                "In particular, one can show that if the feasible sets are the bases of a monopolyfree matroid, then φTUmin(VCG) = 1.",
                "To show that φTUmin(VCG) is at most 1, one must prove that the VCG payment is at most TUmin(c).",
                "This is shown for NTUmin(c) in the first paragraph of the proof of Theorem 5 in [16].",
                "Their argument does not use condition (1) at all, so it also applies to TUmin(c).",
                "On the other hand, φTUmin(VCG) ≥ 1 since φTUmin(VCG) ≥ φNTUmin(VCG) and φNTUmin(VCG) ≥ 1 by Proposition 7 of [16] (and also by Proposition 6 below). 6.2 Comparison with VCG payments Another measure of suitability for payment bounds is that they should not result in frugality ratios that are less then 1 for wellknown truthful mechanisms.",
                "If this is indeed the case, the payment bound may be too weak, as it becomes too easy to design mechanisms that perform well with respect to it.",
                "It particular, a reasonable requirement is that a payment bound should not exceed the total payment of the classical VCG mechanism.",
                "The following proposition shows that NTUmax(c), and therefore also NTUmin(c) and TUmin(c), do not exceed the VCG payment pVCG(c).",
                "The proof essentially follows the argument of Proposition 7 of [16] and can be found in the full version of this paper [8].",
                "PROPOSITION 6. φNTUmax(VCG) ≥ 1.",
                "Proposition 6 shows that none of the payment bounds TUmin(c), NTUmin(c) and NTUmax(c) exceeds the payment of VCG.",
                "However, the payment bound TUmax(c) can be larger that the total 343 VCG payment.",
                "In particular, for the instance in Proposition 5, the VCG payment is smaller than TUmax(c) by a factor of n − 2.",
                "We have already seen that TUmax(c) ≥ n − 2.",
                "On the other hand, under VCG, the threshold bid of any Xi, i = 1, . . . , n − 2, is 0: if any such vertex bids above 0, it is deleted from the winning set together with X0 and replaced with Xn−1.",
                "Similarly, the threshold bid of X0 is 1, because if X0 bids above 1, it can be replaced with Xn−1.",
                "So the VCG payment is 1.",
                "This result is not surprising: the definition of TUmax(c) implicitly assumes there is co-operation between the agents, while the computation of VCG payments does not take into account any interaction between them.",
                "Indeed, co-operation enables the agents to extract higher payments under VCG.",
                "That is, VCG is not groupstrategyproof.",
                "This suggests that as a payment bound, TUmax(c) may be too liberal, at least in a context where there is little or no co-operation between agents.",
                "Perhaps TUmax(c) can be a good benchmark for measuring the performance of mechanisms designed for agents that can form coalitions or make side payments to each other, in particular, group-strategyproof mechanisms.",
                "Another setting in which bounding φTUmax is still of some interest is when, for the underlying problem, the optimal allocation and VCG payments are NP-hard to compute.",
                "In this case, finding a polynomial-time computable mechanism with good frugality ratio with respect to TUmax(c) is a non-trivial task, while bounding the frugality ratio with respect to more challenging payment bounds could be too difficult.",
                "To illustrate this point, compare the proofs of Lemma 6 and Lemma 7: both require some effort, but the latter is much more difficult than the former. 6.3 The choice of S All payment bounds defined in this paper correspond to the total bid of all elements in the cheapest feasible set, where ties are broken lexicographically.",
                "While this definition ensures that our payment bounds are well-defined, the particular choice of the drawresolution rule appears arbitrary, and one might wonder if our payment bounds are sufficiently robust to be independent of this choice.",
                "It turns out that is indeed the case for NTUmin(c) and NTUmax(c), i.e., these bounds do not depend on the draw-resolution rule.",
                "To see this, suppose that two feasible sets S1 and S2 have the same cost.",
                "In the computation of NTUmin(c, S1), all vertices in S1 \\S2 would have to bid their true cost, since otherwise S2 would become cheaper than S1.",
                "Hence, any bid vector for S1 can only have be = ce for e ∈ S1 ∩ S2, and hence constitutes a valid bid vector for S2 and vice versa.",
                "A similar argument applies to NTUmax(c).",
                "However, for TUmin(c) and TUmax(c) this is not the case.",
                "For example, consider the set system E = {e1, e2, e3, e4, e5}, F = {S1 = {e1, e2}, S2 = {e2, e3, e4}, S3 = {e4, e5}} with the costs c1 = 2, c2 = c3 = c4 = 1, c5 = 3.",
                "The cheapest sets are S1 and S2.",
                "Now TUmax(c, S1) ≤ 4, as the total bid of the elements in S1 cannot exceed the total cost of S3.",
                "On the other hand, TUmax(c, S2) ≥ 5, as we can set b2 = 3, b3 = 0, b4 = 2.",
                "Similarly, TUmin(c, S1) = 4, because the inequalities in (2) are b1 ≤ 2 and b1 + b2 ≤ 4.",
                "But TUmin(c, S2) ≤ 3 as we can set b2 = 1, b3 = 2, b4 = 0. 6.4 Negative results for NTUmin(c) and TUmin(c) The results in [16] and our vertex cover results are proved for the frugality ratio φNTUmin.",
                "Indeed, it can be argued that φNTUmin is the best definition of frugality ratio, because among all reasonable payment bounds (i.e., ones that are at least as large as the cost of the cheapest feasible set), it is most demanding of the algorithm.",
                "However, NTUmin(c) is not always the easiest or the most natural payment bound to work with.",
                "In this subsection, we discuss several disadvantages of NTUmin(c) (and also TUmin(c)) as compared to NTUmax(c) and TUmax(c). 6.4.1 <br>nonmonotonicity</br> The first problem with NTUmin(c) is that it is not monotone with respect to F, i.e., it may increase when one adds a feasible set to F. (It is, however, monotone in the sense that a losing agent cannot become a winner by raising his cost.)",
                "Intuitively, a good payment bound should satisfy this monotonicity requirement, as adding a feasible set increases the competition, so it should drive the prices down.",
                "Note that this indeed the case for NTUmax(c) and TUmax(c) since a new feasible set adds a constraint in (2), thus limiting the solution space for the respective linear program.",
                "PROPOSITION 7.",
                "Adding a feasible set to F can increase the value of NTUmin(c) by a factor of Ω(n).",
                "PROOF.",
                "Let E = {x, xx, y1, . . . , yn, z1, . . . , zn}.",
                "Set Y = {y1, . . . , yn}, S = Y ∪ {x}, Ti = Y \\ {yi} ∪ {zi}, i = 1, . . . , n, and suppose that F = {S, T1, . . . , Tn}.",
                "The costs are cx = 0, cxx = 0, cyi = 0, czi = 1 for i = 1, . . . , n. Note that S is the cheapest feasible set.",
                "Let F = F ∪ {T0}, where T0 = Y ∪ {xx}.",
                "For F, the bid vector by1 = · · · = byn = 0, bx = 1 satisfies (1), (2), and (3), so NTUmin(c) ≤ 1.",
                "For F , S is still the lexicographically-least cheapest set.",
                "Any optimal solution has bx = 0 (by constraint in (2) with T0).",
                "Condition (3) for yi implies bx + byi = czi = 1, so byi = 1 and NTUmin(c) = n. For path auctions, it has been shown [18] that NTUmin(c) is non-monotone in a slightly different sense, i.e., with respect to adding a new edge (agent) rather than a new feasible set (a team of existing agents).",
                "REMARK 5.",
                "We can also show that NTUmin(c) is non-monotone for vertex cover.",
                "In this case, adding a new feasible set corresponds to deleting edges from the graph.",
                "It turns out that deleting a single edge can increase NTUmin(c) by a factor of n − 2; the construction is similar to that of Proposition 5. 6.4.2 NP-Hardness Another problem with NTUmin(c, S) is that it is NP-hard to compute even if the number of feasible sets is polynomial in n. Again, this puts it at a disadvantage compared to NTUmax(c, S) and TUmax(c, S) (see Remark 1).",
                "THEOREM 6.",
                "Computing NTUmin(c) is NP-hard, even when the lexicographically-least feasible set S is given in the input.",
                "PROOF.",
                "We reduce EXACT COVER BY 3-SETS(X3C) to our problem.",
                "An instance of X3C is given by a universe G = {g1, . . . , gn} and a collection of subsets C1, . . . , Cm, Ci ⊂ G, |Ci| = 3, where the goal is to decide whether one can cover G by n/3 of these sets.",
                "Observe that if this is indeed the case, each element of G is contained in exactly one set of the cover.",
                "LEMMA 9.",
                "Consider a minimisation problem P of the following form: Minimise P i=1,...,n bi under conditions (1) bi ≥ 0 for all i = 1, . . . , n; (2) for any j = 1, . . . , k we have P bi∈Sj bi ≤ aj, where Sj ⊆ {b1, . . . , bn}; (3) for each bj , one of the constraints in (2) involving it is tight.",
                "For any such P, one can construct a set system S and a vector of costs c such that NTUmin(c) is the optimal solution to P. PROOF.",
                "The construction is straightforward: there is an element of cost 0 for each bi, an element of cost aj for each aj, the feasible solutions are {b1, . . . , bn}, or any set obtained from {b1, . . . , bn} by replacing the elements in Sj by aj. 344 By this lemma, all we have to do to prove Theorem 6 is to show how to solve X3C by using the solution to a minimisation problem of the form given in Lemma 9.",
                "We do this as follows.",
                "For each Ci, we introduce 4 variables xi, ¯xi, ai, and bi.",
                "Also, for each element gj of G there is a variable dj.",
                "We use the following set of constraints: • In (1), we have constraints xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 for all i = 1, . . . , m, j = 1, . . . , n. • In (2), for all i = 1, . . . , m, we have the following 5 constraints: xi + ¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi + bi ≤ 1.",
                "Also, for all j = 1, . . . , n we have a constraint of the form xi1 + · · · + xik + dj ≤ 1, where Ci1 , . . . , Cik are the sets that contain gj.",
                "The goal is to minimize z = P i(xi + ¯xi + ai + bi) + P j dj.",
                "Observe that for each j, there is only one constraint involving dj , so by condition (3) it must be tight.",
                "Consider the two constraints involving ai.",
                "One of them must be tight, and therefore xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1.",
                "Hence, for any feasible solution to (1)-(3) we have z ≥ m. Now, suppose that there is an exact set cover.",
                "Set dj = 0 for j = 1, . . . , n. Also, if Ci is included in this cover, set xi = 1, ¯xi = ai = bi = 0, otherwise set ¯xi = 1, xi = ai = bi = 0.",
                "Clearly, all inequalities in (2) are satisfied (we use the fact that each element is covered exactly once), and for each variable, one of the constraints involving it is tight.",
                "This assignment results in z = m. Conversely, suppose there is a feasible solution with z = m. As each addend of the form xi + ¯xi + ai + bi contributes at least 1, we have xi + ¯xi + ai + bi = 1 for all i, dj = 0 for all j.",
                "We will now show that for each i, either xi = 1 and ¯xi = 0, or xi = 0 and ¯xi = 1.",
                "For the sake of contradiction, suppose that xi = δ < 1, ¯xi = δ < 1.",
                "As one of the constraints involving ai must be tight, we have ai ≥ min{1 − δ, 1 − δ }.",
                "Similarly, bi ≥ min{1 − δ, 1 − δ }.",
                "Hence, xi + ¯xi + ai + bi = 1 = δ +δ +2 min{1−δ, 1−δ } > 1.",
                "To finish the proof, note that for each j = 1, . . . , m we have xi1 + · · · + xik + dj = 1 and dj = 0, so the subsets that correspond to xi = 1 constitute a set cover.",
                "REMARK 6.",
                "In the proofs of Proposition 7 and Theorem 6 all constraints in (1) are of the form be ≥ 0.",
                "Hence, the same results are true for TUmin(c).",
                "REMARK 7.",
                "For shortest-path auctions, the size of F can be superpolynomial.",
                "However, there is a polynomial-time separation oracle for constraints in (2) (to construct one, use any algorithm for finding shortest paths), so one can compute NTUmax(c) and TUmax(c) in polynomial time.",
                "On the other hand, recently and independently it was shown [18] that computing NTUmin(c) for shortest-path auctions is NP-hard. 7.",
                "REFERENCES [1] A. Archer and E. Tardos, Frugal path mechanisms.",
                "In Proceedings of the 13th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 991-999, 2002 [2] R. Bar-Yehuda, K. Bendel, A. Freund, and D. Rawitz, Local ratio: A unified framework for approximation algorithms.",
                "In Memoriam: Shimon Even 1935-2004.",
                "ACM Comput.",
                "Surv., 36(4):422-463, 2004 [3] R. Bar-Yehuda and S. Even, A local-ratio theorem for approximating the weighted vertex cover problem.",
                "Annals of Discrete Mathematics, 25:27-46, 1985 [4] E. Clarke, Multipart pricing of public goods.",
                "Public Choice, 8:17-33, 1971 [5] G. Calinescu, Bounding the payment of approximate truthful mechanisms.",
                "In Proceedings of the 15th International Symposium on Algorithms and Computation, pages 221-233, 2004 [6] A. Czumaj and A. Ronen, On the expected payment of mechanisms for task allocation.",
                "In Proceedings of the 5th ACM Conference on Electronic Commerce (EC04), 2004 [7] E. Elkind, True costs of cheap labor are hard to measure: edge deletion and VCG payments in graphs.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [8] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Frugality ratios and improved truthful mechanisms for vertex cover.",
                "Available from http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai, and K. Steiglitz, Frugality in path auctions.",
                "In Proceedings of the 15th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 694-702, 2004 [10] J. Feigenbaum, C. H. Papadimitriou, R. Sami, and S. Shenker, A BGP-based mechanism for lowest-cost routing.",
                "In Proceedings of the 21st Symposium on Principles of Distributed Computing, pages 173-182, 2002 [11] A. Fiat, A. Goldberg, J. Hartline, and A. Karlin, Competitive generalized auctions.",
                "In Proceedings of the 34th Annual ACM Symposium on Theory of Computation, pages 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra and A. Verma, Coalitional games on graphs: core structures, substitutes and frugality.",
                "In Proceedings of the 4th ACM Conference on Electronic Commerce (EC03), 2005 [13] A. Goldberg, J. Hartline, and A. Wright, Competitive auctions and digital goods.",
                "In Proceedings of the 12th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2001 [14] T. Groves, Incentives in teams.",
                "Econometrica, 41(4):617-631, 1973 [15] N. Immorlica, D. Karger, E. Nikolova, and R. Sami, First-price path auctions.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [16] A. R. Karlin, D. Kempe, and T. Tamir, Beyond VCG: frugality of truthful mechanisms.",
                "In Proceedings of the 46th Annual IEEE Symposium on Foundations of Computer Science, pages 615-626, 2005 [17] D. Kempe, Personal communication, 2006 [18] N. Chen, A. R. Karlin, Cheap labor can be expensive, In Proceedings of the 18th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2007 [19] N. Nisan and A. Ronen, Algorithmic mechanism design.",
                "In Proceedings of the 31st Annual ACM Symposium on Theory of Computation, pages 129-140, 1999 [20] A. Ronen and R. Talisman, Towards generic low payment mechanisms for decentralized task allocation.",
                "In Proceedings of the 7th International IEEE Conference on E-Commerce Technology, 2005 [21] K. Talwar, The price of truth: frugality in truthful mechanisms.",
                "In Proceedings of 20th International Symposium on Theoretical Aspects of Computer Science, 2003 [22] W. Vickrey, Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961 345"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En particular, observamos que el pago unido ν = ntumin de [16] exhibe algunas propiedades contradictorias, como \"no monotonicidad\" con respecto a agregar un nuevo conjunto factible (Proposición 7), y es NP-Hard a Calcule (Teorema 6)mientras que algunos de los otros límites de pago no sufren estos problemas.",
                "En esta subsección, discutimos varias desventajas de Ntumin (C) (y también tumin (C)) en comparación con NTUMAX (C) y Tumax (C).6.4.1 \"No monotonicidad\" El primer problema con Ntumin (c) es que no es monótono con respecto a F, es decir, puede aumentar cuando uno agrega un conjunto factible a F. (sin embargo, es monótono en el sentido queun agente perdedor no puede convertirse en un ganador aumentando su costo.)"
            ],
            "translated_text": "",
            "candidates": [
                "no monotonicidad",
                "no monotonicidad",
                "No monotonicidad",
                "No monotonicidad"
            ],
            "error": []
        },
        "auction": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Frugality Ratios And Improved Truthful Mechanisms for Vertex Cover ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT In set-system auctions, there are several overlapping teams of agents, and a task that can be completed by any of these teams.",
                "The auctioneers goal is to hire a team and pay as little as possible.",
                "Examples of this setting include shortest-path auctions and vertex-cover auctions.",
                "Recently, Karlin, Kempe and Tamir introduced a new definition of frugality ratio for this problem.",
                "Informally, the frugality ratio is the ratio of the total payment of a mechanism to a desired payment bound.",
                "The ratio captures the extent to which the mechanism overpays, relative to perceived fair cost in a truthful <br>auction</br>.",
                "In this paper, we propose a new truthful polynomial-time <br>auction</br> for the vertex cover problem and bound its frugality ratio.",
                "We show that the solution quality is with a constant factor of optimal and the frugality ratio is within a constant factor of the best possible worst-case bound; this is the first <br>auction</br> for this problem to have these properties.",
                "Moreover, we show how to transform any truthful <br>auction</br> into a frugal one while preserving the approximation ratio.",
                "Also, we consider two natural modifications of the definition of Karlin et al., and we analyse the properties of the resulting payment bounds, such as monotonicity, computational hardness, and robustness with respect to the draw-resolution rule.",
                "We study the relationships between the different payment bounds, both for general set systems and for specific set-system auctions, such as path auctions and vertex-cover auctions.",
                "We use these new definitions in the proof of our main result for vertex-cover auctions via a bootstrapping technique, which may be of independent interest.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a set system <br>auction</br> there is a single buyer and many vendors that can provide various services.",
                "It is assumed that the buyers requirements can be satisfied by various subsets of the vendors; these subsets are called the feasible sets.",
                "A widely-studied class of setsystem auctions is path auctions, where each vendor is able to sell access to a link in a network, and the feasible sets are those sets whose links contain a path from a given source to a given destination; the study of these auctions has been initiated in the seminal paper by Nisan and Ronen [19] (see also [1, 10, 9, 6, 15, 7, 20]).",
                "We assume that each vendor has a cost of providing his services, but submits a possibly larger bid to the auctioneer.",
                "Based on these bids, the auctioneer selects a feasible subset of vendors, and makes payments to the vendors in this subset.",
                "Each selected vendor enjoys a profit of payment minus cost.",
                "Vendors want to maximise profit, while the buyer wants to minimise the amount he pays.",
                "A natural goal in this setting is to design a truthful <br>auction</br>, in which vendors have an incentive to bid their true cost.",
                "This can be achieved by paying each selected vendor a premium above her bid in such a way that the vendor has no incentive to overbid.",
                "An interesting question in mechanism design is how much the auctioneer will have to overpay in order to ensure truthful bids.",
                "In the context of path auctions this topic was first addressed by Archer and Tardos [1].",
                "They define the frugality ratio of a mechanism as the ratio between its total payment and the cost of the cheapest path disjoint from the path selected by the mechanism.",
                "They show that, for a large class of truthful mechanisms for this problem, the frugality ratio is as large as the number of edges in the shortest path.",
                "Talwar [21] extends this definition of frugality ratio to general set systems, and studies the frugality ratio of the classical VCG mechanism [22, 4, 14] for many specific set systems, such as minimum spanning trees and set covers.",
                "While the definition of frugality ratio proposed by [1] is wellmotivated and has been instrumental in studying truthful mechanisms for set systems, it is not completely satisfactory.",
                "Consider, for example, the graph of Figure 1 with the costs cAB = cBC = A B C D Figure 1: The diamond graph 336 cCD = 0, cAC = cBD = 1.",
                "This graph is 2-connected and the VCG payment to the winning path ABCD is bounded.",
                "However, the graph contains no A-D path that is disjoint from ABCD, and hence the frugality ratio of VCG on this graph remains undefined.",
                "At the same time, there is no monopoly, that is, there is no vendor that appears in all feasible sets.",
                "In auctions for other types of set systems, the requirement that there exist a feasible solution disjoint from the selected one is even more severe: for example, for vertex-cover auctions (where vendors correspond to the vertices of some underlying graph, and the feasible sets are vertex covers) the requirement means that the graph must be bipartite.",
                "To deal with this problem, Karlin et al. [16] suggest a better benchmark, which is defined for any monopoly-free set system.",
                "This quantity, which they denote by ν, intuitively corresponds to the value of a cheapest Nash equilibrium.",
                "Based on this new definition, the authors construct new mechanisms for the shortest path problem and show that the overpayment of these mechanisms is within a constant factor of optimal. 1.1 Our results Vertex cover auctions We propose a truthful polynomial-time <br>auction</br> for vertex cover that outputs a solution whose cost is within a factor of 2 of optimal, and whose frugality ratio is at most 2Δ, where Δ is the maximum degree of the graph (Theorem 4).",
                "We complement this result by proving (Theorem 5) that for any Δ and n, there are graphs of maximum degree Δ and size Θ(n) for which any truthful mechanism has frugality ratio at least Δ/2.",
                "This means that the solution quality of our <br>auction</br> is with a factor of 2 of optimal and the frugality ratio is within a factor of 4 of the best possible bound for worst-case inputs.",
                "To the best of our knowledge, this is the first <br>auction</br> for this problem that enjoys these properties.",
                "Moreover, we show how to transform any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio.",
                "Frugality ratios Our vertex cover results naturally suggest two modifications of the definition of ν in [16].",
                "These modifications can be made independently of each other, resulting in four different payment bounds TUmax, TUmin, NTUmax, and NTUmin, where NTUmin is equal to the original payment bound ν of in [16].",
                "All four payment bounds arise as Nash equilibria of certain games (see the full version of this paper [8]); the differences between them can be seen as the price of initiative and the price of cooperation (see Section 3).",
                "While our main result about vertex cover auctions (Theorem 4) is with respect to NTUmin = ν, we make use of the new definitions by first comparing the payment of our mechanism to a weaker bound NTUmax, and then bootstrapping from this result to obtain the desired bound.",
                "Inspired by this application, we embark on a further study of these payment bounds.",
                "Our results here are as follows: 1.",
                "We observe (Proposition 1) that the four payment bounds always obey a particular order that is independent of the choice of the set system and the cost vector, namely, TUmin ≤ NTUmin ≤ NTUmax ≤ TUmax.",
                "We provide examples (Proposition 5 and Corollaries 1 and 2) showing that for the vertex cover problem any two consecutive bounds can differ by a factor of n − 2, where n is the number of agents.",
                "We then show (Theorem 2) that this separation is almost best possible for general set systems by proving that for any set system TUmax/TUmin ≤ n. In contrast, we demonstrate (Theorem 3) that for path auctions TUmax/TUmin ≤ 2.",
                "We provide examples (Propositions 2, 3 and 4) showing that this bound is tight.",
                "We see this as an argument for the study of vertexcover auctions, as they appear to be more representative of the general team -selection problem than the widely studied path auctions. 2.",
                "We show (Theorem 1) that for any set system, if there is a cost vector for which TUmin and NTUmin differ by a factor of α, there is another cost vector that separates NTUmin and NTUmax by the same factor and vice versa; the same is true for the pairs (NTUmin, NTUmax) and (NTUmax, TUmax).",
                "This symmetry is quite surprising, since, e.g., TUmin and NTUmax are obtained from NTUmin by two very different transformations.",
                "This observation suggests that the four payment bounds should be studied in a unified framework; moreover, it leads us to believe that the bootstrapping technique of Theorem 4 may have other applications. 3.",
                "We evaluate the payment bounds introduced here with respect to a checklist of desirable features.",
                "In particular, we note that the payment bound ν = NTUmin of [16] exhibits some counterintuitive properties, such as nonmonotonicity with respect to adding a new feasible set (Proposition 7), and is NP-hard to compute (Theorem 6), while some of the other payment bounds do not suffer from these problems.",
                "This can be seen as an argument in favour of using weaker but efficiently computable bounds NTUmax and TUmax.",
                "Related work Vertex-cover auctions have been studied in the past by Talwar [21] and Calinescu [5].",
                "Both of these papers are based on the definition of frugality ratio used in [1]; as mentioned before, this means that their results only apply to bipartite graphs.",
                "Talwar [21] shows that the frugality ratio of VCG is at most Δ.",
                "However, since finding the cheapest vertex cover is an NP-hard problem, the VCG mechanism is computationally infeasible.",
                "The first (and, to the best of our knowledge, only) paper to investigate polynomial-time truthful mechanisms for vertex cover is [5].",
                "This paper studies an <br>auction</br> that is based on the greedy allocation algorithm, which has an approximation ratio of log n. While the main focus of [5] is the more general set cover problem, the results of [5] imply a frugality ratio of 2Δ2 for vertex cover.",
                "Our results improve on those of [21] as our mechanism is polynomial-time computable, as well as on those of [5], as our mechanism has a better approximation ratio, and we prove a stronger bound on the frugality ratio; moreover, this bound also applies to the mechanism of [5]. 2.",
                "PRELIMINARIES In most of this paper, we discuss auctions for set systems.",
                "A set system is a pair (E, F), where E is the ground set, |E| = n, and F is a collection of feasible sets, which are subsets of E. Two particular types of set systems are of interest to us - shortest path systems, in which the ground set consists of all edges of a network, and the feasible sets are paths between two specified vertices s and t, and vertex cover systems, in which the elements of the ground set are the vertices of a graph, and the feasible sets are vertex covers of this graph.",
                "In set system auctions, each element e of the ground set is owned by an independent agent and has an associated non-negative cost ce.",
                "The goal of the centre is to select (purchase) a feasible set.",
                "Each element e in the selected set incurs a cost of ce.",
                "The elements that are not selected incur no costs.",
                "The <br>auction</br> proceeds as follows: all elements of the ground set make their bids, the centre selects a feasible set based on the bids and makes payments to the agents.",
                "Formally, an <br>auction</br> is defined by an allocation rule A : Rn → F and a payment rule P : Rn → Rn .",
                "The allocation rule takes as input a vector of bids and decides which of the sets in F should be selected.",
                "The payment rule also takes as input a vector of bids and decides how much to pay to each agent.",
                "The standard requirements are individual rationality, i.e., the payment to each agent should be at least as high as his incurred cost (0 for agents not in the selected set and ce for agents in the 337 selected set) and incentive compatibility, or truthfulness, i.e., each agents dominant strategy is to bid his true cost.",
                "An allocation rule is monotone if an agent cannot increase his chance of getting selected by raising his bid.",
                "Formally, for any bid vector b and any e ∈ E, if e ∈ A(b) then e ∈ A(b1, . . . , be, . . . , bn) for any be > be.",
                "Given a monotone allocation rule A and a bid vector b, the threshold bid te of an agent e ∈ A(b) is the highest bid of this agent that still wins the <br>auction</br>, given that the bids of other participants remain the same.",
                "Formally, te = sup{be ∈ R | e ∈ A(b1, . . . , be, . . . , bn)}.",
                "It is well known (see, e.g. [19, 13]) that any <br>auction</br> that has a monotone allocation rule and pays each agent his threshold bid is truthful; conversely, any truthful <br>auction</br> has a monotone allocation rule.",
                "The VCG mechanism is a truthful mechanism that maximises the social welfare and pays 0 to the losing agents.",
                "For set system auctions, this simply means picking a cheapest feasible set, paying each agent in the selected set his threshold bid, and paying 0 to all other agents.",
                "Note, however, that the VCG mechanism may be difficult to implement, since finding a cheapest feasible set may be intractable.",
                "If U is a set of agents, c(U) denotes P w∈U cw.",
                "Similarly, b(U) denotes P w∈U bw. 3.",
                "FRUGALITY RATIOS We start by reproducing the definition of the quantity ν from [16, Definition 4].",
                "Let (E, F) be a set system and let S be a cheapest feasible set with respect to the true costs ce.",
                "Then ν(c, S) is the solution to the following optimisation problem.",
                "Minimise B = P e∈S be subject to (1) be ≥ ce for all e ∈ E (2) P e∈S\\T be ≤ P e∈T \\S ce for all T ∈ F (3) for every e ∈ S, there is a Te ∈ F such that e ∈ Te andP e ∈S\\Te be = P e ∈Te\\S ce The bound ν(c, S) can be seen as an outcome of a two-stage process, where first each agent e ∈ S makes a bid be stating how much it wants to be paid, and then the centre decides whether to accept these bids.",
                "The behaviour of both parties is affected by the following considerations.",
                "From the centres point of view, the set S must remain the most attractive choice, i.e., it must be among the cheapest feasible sets under the new costs ce = ce for e ∈ S, ce = be for e ∈ S (condition (2)).",
                "The reason for that is that if (2) is violated for some set T, the centre would prefer T to S. On the other hand, no agent would agree to a payment that does not cover his costs (condition (1)), and moreover, each agent tries to maximise his profit by bidding as high as possible, i.e., none of the agents can increase his bid without violating condition (2) (condition (3)).",
                "The centre wants to minimise the total payout, so ν(c, S) corresponds to the best possible outcome from the centres point of view.",
                "This definition captures many important aspects of our intuition about fair payments.",
                "However, it can be modified in two ways, both of which are still quite natural, but result in different payment bounds.",
                "First, we can consider the worst rather than the best possible outcome for the centre.",
                "That is, we can consider the maximum total payment that the agents can extract by jointly selecting their bids subject to (1), (2), and (3).",
                "Such a bound corresponds to maximising B subject to (1), (2), and (3) rather than minimising it.",
                "If it is the agents who make the original bids (rather than the centre), this kind of bidding behaviour is plausible.",
                "On the other hand, in a game in which the centre proposes payments to the agents in S and the agents accept them as long as (1), (2) and (3) are satisfied, we would be likely to observe a total payment of ν(c, S).",
                "Hence, the difference between these two definitions can be seen as the price of initiative.",
                "Second, the agents may be able to make payments to each other.",
                "In this case, if they can extract more money from the centre by agreeing on a vector of bids that violates individual rationality (i.e., condition (1)) for some bidders, they might be willing to do so, as the agents who are paid below their costs will be compensated by other members of the group.",
                "The bids must still be realistic, i.e., they have to satisfy be ≥ 0.",
                "The resulting change in payments can be seen as the price of co-operation and corresponds to replacing condition (1) with the following weaker condition (1∗ ): be ≥ 0 for all e ∈ E. (1∗ ) By considering all possible combinations of these modifications, we obtain four different payment bounds, namely • TUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1∗ ), (2), and (3). • TUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1∗ ), (2), and (3). • NTUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1), (2), and (3). • NTUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1), (2), (3).",
                "The abbreviations TU and NTU correspond, respectively, to transferable utility and non-transferable utility, i.e., the agents ability/inability to make payments to each other.",
                "For concreteness, we will take TUmin(c) to be TUmin(c, S) where S is the lexicographically least amongst the cheapest feasible sets.",
                "We define TUmax(c), NTUmin(c), NTUmax(c) and ν(c) similarly, though we will see in Section 6.3 that, in fact, NTUmin(c, S) and NTUmax(c, S) are independent of the choice of S. Note that the quantity ν(c) from [16] is NTUmin(c).",
                "The second modification (transferable utility) is more intuitively appealing in the context of the maximisation problem, as both assume some degree of co-operation between the agents.",
                "While the second modification can be made without the first, the resulting payment bound TUmin(c, S) is too strong to be a realistic benchmark, at least for general set systems.",
                "In particular, it can be smaller than the total cost of the cheapest feasible set S (see Section 6).",
                "Nevertheless, we provide the definition as well as some results about TUmin(c, S) in the paper, both for completeness and because we believe that it may help to understand which properties of the payment bounds are important for our proofs.",
                "Another possibility would be to introduce an additional constraint P e∈S be ≥P e∈S ce in the definition of TUmin(c, S) (note that this condition holds automatically for TUmax(c, S), as TUmax(c, S) ≥ NTUmax(c, S)); however, such a definition would have no direct game-theoretic interpretation, and some of our results (in particular, the ones in Section 4) would no longer be true.",
                "REMARK 1.",
                "For the payment bounds that are derived from maximisation problems, (i.e., TUmax(c, S) and NTUmax(c, S)), constraints of type (3) are redundant and can be dropped.",
                "Hence, TUmax(c, S) and NTUmax(c, S) are solutions to linear programs, and therefore can be computed in polynomial time as long as we have a separation oracle for constraints in (2).",
                "In contrast, 338 NTUmin(c, S) can be NP-hard to compute even if the size of F is polynomial (see Section 6).",
                "The first and third inequalities in the following observation follow from the fact that condition (1∗ ) is strictly weaker than condition (1).",
                "PROPOSITION 1.",
                "TUmin(c, S) ≤ NTUmin(c, S) ≤ NTUmax(c, S) ≤ TUmax(c, S).",
                "Let M be a truthful mechanism for (E, F).",
                "Let pM(c) denote the total payments of M when the actual costs are c. A frugality ratio of M with respect to a payment bound is the ratio between the payment of M and this payment bound.",
                "In particular, φTUmin(M) = sup c pM(c)/TUmin(c), φTUmax(M) = sup c pM(c)/TUmax(c), φNTUmin(M) = sup c pM(c)/NTUmin(c), φNTUmax(M) = sup c pM(c)/NTUmax(c).",
                "We conclude this section by showing that there exist set systems and respective cost vectors for which all four payment bounds are different.",
                "In the next section, we quantify this difference, both for general set systems, and for specific types of set systems, such as path auctions or vertex cover auctions.",
                "EXAMPLE 1.",
                "Consider the shortest-path <br>auction</br> on the graph of Figure 1.",
                "The cheapest feasible sets are all paths from A to D. It can be verified, using the reasoning of Propositions 2 and 3 below, that for the cost vector cAB = cCD = 2, cBC = 1, cAC = cBD = 5, we have • TUmax(c) = 10 (with bAB = bCD = 5, bBC = 0), • NTUmax(c) = 9 (with bAB = bCD = 4, bBC = 1), • NTUmin(c) = 7 (with bAB = bCD = 2, bBC = 3), • TUmin(c) = 5 (with bAB = bCD = 0, bBC = 5). 4.",
                "COMPARING PAYMENT BOUNDS 4.1 Path auctions We start by showing that for path auctions any two consecutive payment bounds can differ by at least a factor of 2.",
                "PROPOSITION 2.",
                "There is an instance of the shortest-path problem for which we have NTUmax(c)/NTUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is due to David Kempe [17].",
                "Consider the graph of Figure 1 with the edge costs cAB = cBC = cCD = 0, cAC = cBD = 1.",
                "Under these costs, ABCD is the cheapest path.",
                "The inequalities in (2) are bAB + bBC ≤ cAC = 1, bBC + bCD ≤ cBD = 1.",
                "By condition (3), both of these inequalities must be tight (the former one is the only inequality involving bAB, and the latter one is the only inequality involving bCD).",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 0, bCD ≥ 0.",
                "Now, if the goal is to maximise bAB + bBC + bCD, the best choice is bAB = bCD = 1, bBC = 0, so NTUmax(c) = 2.",
                "On the other hand, if the goal is to minimise bAB + bBC + bCD, one should set bAB = bCD = 0, bBC = 1, so NTUmin(c) = 1.",
                "PROPOSITION 3.",
                "There is an instance of the shortest-path problem for which we have TUmax(c)/NTUmax(c) ≥ 2.",
                "PROOF.",
                "Again, consider the graph of Figure 1.",
                "Let the edge costs be cAB = cCD = 0, cBC = 1, cAC = cBD = 1.",
                "ABCD is the lexicographically-least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "The inequalities in (2) are the same as in the previous example, and by the same argument both of them are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 1, bCD ≥ 0.",
                "Our goal is to maximise bAB + bBC + bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 0, bBC = 1, so NTUmax(c) = 1.",
                "Otherwise, we can set bAB = bCD = 1, bBC = 0, so TUmax(c) ≥ 2.",
                "PROPOSITION 4.",
                "There is an instance of the shortest-path problem for which we have NTUmin(c)/TUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is also based on the graph of Figure 1.",
                "The edge costs are cAB = cCD = 1, cBC = 0, cAC = cBD = 1.",
                "ABCD is the lexicographically least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "Again, the inequalities in (2) are the same, and both are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 1, bBC ≥ 0, bCD ≥ 1.",
                "Our goal is to minimise bAB + bBC +bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 1, bBC = 0, so NTUmin(c) = 2.",
                "Otherwise, we can set bAB = bCD = 0, bBC = 1, so TUmin(c) ≤ 1.",
                "In Section 4.4 (Theorem 3), we show that the separation results in Propositions 2, 3, and 4 are optimal. 4.2 Connections between separation results The separation results for path auctions are obtained on the same graph using very similar cost vectors.",
                "It turns out that this is not coincidental.",
                "Namely, we can prove the following theorem.",
                "THEOREM 1.",
                "For any set system (E, F), and any feasible set S, max c TUmax(c, S) NTUmax(c, S) = max c NTUmax(c, S) NTUmin(c, S) , max c NTUmax(c, S) NTUmin(c, S) = max c NTUmin(c, S) TUmin(c, S) , where the maximum is over all cost vectors c for which S is a cheapest feasible set.",
                "The proof of the theorem follows directly from the four lemmas proved below; more precisely, the first equality in Theorem 1 is obtained by combining Lemmas 1 and 2, and the second equality is obtained by combining Lemmas 3 and 4.",
                "We prove Lemma 1 here; the proofs of Lemmas 2- 4 are similar and can be found in the full version of this paper [8].",
                "LEMMA 1.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and TUmax(c, S)/NTUmax(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α.",
                "PROOF.",
                "Suppose that TUmax(c, S) = X and NTUmax(c, S) = Y where X/Y = α.",
                "Assume without loss of generality that S consists of elements 1, . . . , k, and let b1 = (b1 1, . . . , b1 k) and b2 = (b2 1, . . . , b2 k) be the bid vectors that correspond to TUmax(c, S) and NTUmax(c, S), respectively.",
                "Construct the cost vector c by setting ci = ci for i ∈ S, ci = min{ci, b1 i } for i ∈ S. Clearly, S is a cheapest set under c .",
                "Moreover, as the costs of elements outside of S remained the same, the right-hand sides of all constraints in (2) did not change, so any bid vector that satisfies (2) and (3) with respect to c, also satisfies them with respect to c .",
                "We will construct two bid vectors b3 and b4 that satisfy conditions (1), (2), and (3) for the cost vector c , and 339 X X X X X 0 X 12 3 X 4 5 6 Figure 2: Graph that separates payment bounds for vertex cover, n = 7 have P i∈S b3 i = X, P i∈S b4 i = Y .",
                "As NTUmax(c , S) ≥ X and NTUmin(c , S) ≤ Y , this implies the lemma.",
                "We can set b3 i = b1 i : this bid vector satisfies conditions (2) and (3) since b1 does, and we have b1 i ≥ min{ci, b1 i } = ci, which means that b3 satisfies condition (1).",
                "Furthermore, we can set b4 i = b2 i .",
                "Again, b4 satisfies conditions (2) and (3) since b2 does, and since b2 satisfies condition (1), we have b2 i ≥ ci ≥ ci, which means that b4 satisfies condition (1).",
                "LEMMA 2.",
                "Suppose c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and TUmax(c , S)/NTUmax(c , S) ≥ α. LEMMA 3.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmin(c , S)/TUmin(c , S) ≥ α. LEMMA 4.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmin(c, S)/TUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α. 4.3 Vertex-cover auctions In contrast to the case of path auctions, for vertex-cover auctions the gap between NTUmin(c) and NTUmax(c) (and hence between NTUmax(c) and TUmax(c), and between TUmin(c) and NTUmin(c)) can be proportional to the size of the graph.",
                "PROPOSITION 5.",
                "For any n ≥ 3, there is a an n-vertex graph and a cost vector c for which TUmax(c)/NTUmax(c) ≥ n − 2.",
                "PROOF.",
                "The underlying graph consists of an (n − 1)-clique on the vertices X1, . . . , Xn−1, and an extra vertex X0 adjacent to Xn−1.",
                "The costs are cX1 = cX2 = · · · = cXn−2 = 0, cX0 = cXn−1 = 1.",
                "We can assume that S = {X0, X1, . . . , Xn−2} (this is the lexicographically first vertex cover of cost 1).",
                "For this set system, the constraints in (2) are bXi + bX0 ≤ cXn−1 = 1 for i = 1, . . . , n − 2.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bXi = 1 for i = 1, . . . , n − 2, bX0 = 0.",
                "Hence, TUmax(c) ≥ n − 2.",
                "For NTUmax(c), there is an additional constraint bX0 ≥ 1, so the best we can do is to set bXi = 0 for i = 1, . . . , n − 2, bX0 = 1, which implies NTUmax(c) = 1.",
                "Combining Proposition 5 with Lemmas 1 and 3, we derive the following corollaries.",
                "COROLLARY 1.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmax(c)/NTUmin(c) ≥ n − 2.",
                "COROLLARY 2.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmin(c)/TUmin(c) ≥ n − 2. j+2ix ij P \\ P ij+2P \\ P yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 P \\ P Figure 3: Proof of Theorem 3: constraints for ˆPij and ˆPij+2 do not overlap 4.4 Upper bounds It turns out that the lower bound proved in the previous subsection is almost tight.",
                "More precisely, the following theorem shows that no two payment bounds can differ by more than a factor of n; moreover, this is the case not just for the vertex cover problem, but for general set systems.",
                "We bound the gap between TUmax(c) and TUmin(c).",
                "Since TUmin(c) ≤ NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), this bound applies to any pair of payment bounds.",
                "THEOREM 2.",
                "For any set system (E, F) and any cost vector c, we have TUmax(c)/TUmin(c) ≤ n. PROOF.",
                "Assume wlog that the winning set S consists of elements 1, . . . , k. Let c1, . . . , ck be the true costs of elements in S, let b1, . . . , bk be their bids that correspond to TUmin(c), and let b1 , . . . , bk be their bids that correspond to TUmax(c).",
                "Consider the conditions (2) and (3) for S. One can pick a subset L of at most k inequalities in (2) so that for each i = 1, . . . , k there is at least one inequality in L that is tight for bi.",
                "Suppose that the jth inequality in L is of the form bi1 + · · · + bit ≤ c(Tj \\ S).",
                "For bi, all inequalities in L are, in fact, equalities.",
                "Hence, by adding up all of them we obtain k P i=1,...,k bi ≥ P j=1,...,k c(Tj \\ S).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c(Tj \\ S).",
                "Combining these two inequalities, we obtain nTUmin(c) ≥ kTUmin(c) ≥ TUmax(c).",
                "REMARK 2.",
                "The final line of the proof of Theorem 2 shows that, in fact, the upper bound on TUmax(c)/TUmin(c) can be strengthened to the size of the winning set, k. Note that in Proposition 5, as well as in Corollaries 1 and 2, k = n−1, so these results do not contradict each other.",
                "For path auctions, this upper bound can be improved to 2, matching the lower bounds of Section 4.1.",
                "THEOREM 3.",
                "For any instance of the shortest path problem, TUmax(c) ≤ 2 TUmin(c).",
                "PROOF.",
                "Given a network (G, s, t), assume without loss of generality that the lexicographically-least cheapest s-t path, P, in G is {e1, . . . , ek}, where e1 = (s, v1), e2 = (v1, v2), . . . , ek = (vk−1, t).",
                "Let c1, . . . , ck be the true costs of e1, . . . , ek, and let b = (b1, . . . , bk) and b = (b1 , . . . , bk ) be bid vectors that correspond to TUmin(c) and TUmax(c), respectively.",
                "For any i = 1, . . . , k, there is a constraint in (2) that is tight for bi with respect to the bid vector b , i.e., an s-t path Pi that avoids ei and satisfies b (P \\Pi) = c(Pi \\P).",
                "We can assume without loss of generality that Pi coincides with P up to some vertex xi, then deviates from P to avoid ei, and finally returns to P at a vertex 340 yi and coincides with P from then on (clearly, it might happen that s = xi or t = yi).",
                "Indeed, if Pi deviates from P more than once, one of these deviations is not necessary to avoid ei and can be replaced with the respective segment of P without increasing the cost of Pi.",
                "Among all paths of this form, let ˆPi be the one with the largest value of yi, i.e., the rightmost one.",
                "This path corresponds to an inequality Ii of the form bxi+1 + · · · + byi ≤ c( ˆPi \\ P).",
                "As in the proof of Theorem 2, we construct a set of tight constraints L such that every variable bi appears in at least one of these constraints; however, now we have to be more careful about the choice of constraints in L. We construct L inductively as follows.",
                "Start by setting L = {I1}.",
                "At the jth step, suppose that all variables up to (but not including) bij appear in at least one inequality in L. Add Iij to L. Note that for any j we have yij+1 > yij .",
                "This is because the inequalities added to L during the first j steps did not cover bij+1 .",
                "See Figure 3.",
                "Since yij+2 > yij+1 , we must also have xij+2 > yij : otherwise, ˆPij+1 would not be the rightmost constraint for bij+1 .",
                "Therefore, the variables in Iij+2 and Iij do not overlap, and hence no bi can appear in more than two inequalities in L. Now we follow the argument of the proof of Theorem 2 to finish.",
                "By adding up all of the (tight) inequalities in L for bi we obtain 2 P i=1,...,k bi ≥ P j=1,...,k c( ˆPj \\ P).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c( ˆPj \\ P), so TUmax(c) ≤ 2TUmin(c). 5.",
                "TRUTHFUL MECHANISMS FOR VERTEX COVER Recall that for a vertex-cover <br>auction</br> on a graph G = (V, E), an allocation rule is an algorithm that takes as input a bid bv for each vertex and returns a vertex cover ˆS of G. As explained in Section 2, we can combine a monotone allocation rule with threshold payments to obtain a truthful <br>auction</br>.",
                "Two natural examples of monotone allocation rules are Aopt, i.e., the algorithm that finds an optimal vertex cover, and the greedy algorithm AGR.",
                "However, Aopt cannot be guaranteed to run in polynomial time unless P = NP and AGR has approximation ratio of log n. Another approximation algorithm for vertex cover, which has approximation ratio 2, is the local ratio algorithm ALR [2, 3].",
                "This algorithm considers the edges of G one by one.",
                "Given an edge e = (u, v), it computes = min{bu, bv} and sets bu = bu − , bv = bv − .",
                "After all edges have been processed, ALR returns the set of vertices {v | bv = 0}.",
                "It is not hard to check that if the order in which the edges are considered is independent of the bids, then this algorithm is monotone as well.",
                "Hence, we can use it to construct a truthful <br>auction</br> that is guaranteed to select a vertex cover whose cost is within a factor of 2 from the optimal.",
                "However, while the quality of the solution produced by ALR is much better than that of AGR, we still need to show that its total payment is not too high.",
                "In the next subsection, we bound the frugality ratio of ALR (and, more generally, all algorithms that satisfy the condition of local optimality, defined later) by 2Δ, where Δ is the maximum degree of G. We then prove a matching lower bound showing that for some graphs the frugality ratio of any truthful <br>auction</br> is at least Δ/2. 5.1 Upper bound We say that an allocation rule is locally optimal if whenever bv >P w∼v bw, the vertex v is not chosen.",
                "Note that for any such rule the threshold bid of v satisfies tv ≤ P w∼v bw.",
                "CLAIM 1.",
                "The algorithms Aopt, AGR, and ALR are locally optimal.",
                "THEOREM 4.",
                "Any vertex cover <br>auction</br> M that has a locally optimal and monotone allocation rule and pays each agent his threshold bid has frugality ratio φNTUmin(M) ≤ 2Δ.",
                "To prove Theorem 4, we first show that the total payment of any locally optimal mechanism does not exceed Δc(V ).",
                "We then demonstrate that NTUmin(c) ≥ c(V )/2.",
                "By combining these two results, the theorem follows.",
                "LEMMA 5.",
                "Consider a graph G = (V, E) with maximum degree Δ.",
                "Let M be a vertex-cover <br>auction</br> on G that satisfies the conditions of Theorem 4.",
                "Then for any cost vector c, the total payment of M satisfies pM(c) ≤ Δc(V ).",
                "PROOF.",
                "First note that any such <br>auction</br> is truthful, so we can assume that each agents bid is equal to his cost.",
                "Let ˆS be the vertex cover selected by M. Then by local optimality pM(c) = X v∈ ˆS tv ≤ X v∈ ˆS X w∼v cw ≤ X w∈V Δcw = Δc(V ).",
                "We now derive a lower bound on TUmax(c); while not essential for the proof of Theorem 4, it helps us build the intuition necessary for that proof.",
                "LEMMA 6.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, TUmax(c, S) ≥ c(V \\ S) PROOF.",
                "For a vertex w with at least one neighbour in S, let d(w) denote the number of neighbours that w has in S. Consider the bid vector b in which, for each v ∈ S, bv = P w∼v,w∈S cw d(w) .",
                "Then P v∈S bv = P v∈S P w∼v,w∈S cw/d(w) = P w /∈S cw = c(V \\ S).",
                "To finish we want to show that b is feasible in the sense that it satisfies (2).",
                "Consider a vertex cover T, and extend the bid vector b by assigning bv = cv for v /∈ S. Then b(T) = c(T \\S)+b(S∩T) ≥ c(T \\S)+ X v∈S∩T X w∈S∩T :w∼v cw d(w) , and since all edges between S ∩ T and S go to S ∩ T, the righthand-side is equal to c(T \\S)+ X w∈S∩T cw = c(T \\S)+c(S ∩T) = c(V \\S) = b(S).",
                "Next, we prove a lower bound on NTUmax(c, S); we will then use it to obtain a lower bound on NTUmin(c).",
                "LEMMA 7.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmax(c, S) ≥ c(V \\ S) PROOF.",
                "If c(S) ≥ c(V \\ S), by condition (1) we are done.",
                "Therefore, for the rest of the proof we assume that c(S) < c(V \\ S).",
                "We show how to construct a bid vector (be)e∈S that satisfies conditions (1) and (2) such that b(S) ≥ c(V \\ S); clearly, this implies NTUmax(c, S) ≥ c(V \\ S).",
                "Recall that a network flow problem is described by a directed graph Γ = (VΓ, EΓ), a source node s ∈ VΓ, a sink node t ∈ VΓ, and a vector of capacity constraints ae, e ∈ EΓ.",
                "Consider a network (VΓ, EΓ) such that VΓ = V ∪{s, t}, EΓ = E1 ∪E2 ∪E3, where E1 = {(s, v) | v ∈ S}, E2 = {(v, w) | v ∈ S, w ∈ 341 V \\ S, (v, w) ∈ E}, E3 = {(w, t) | w ∈ V \\ S}.",
                "Since S is a vertex cover for G, no edge of E can have both of its endpoints in V \\ S, and by construction, E2 contains no edges with both endpoints in S. Therefore, the graph (V, E2) is bipartite with parts (S, V \\ S).",
                "Set the capacity constraints for e ∈ EΓ as follows: a(s,v) = cv, a(w,t) = cw, a(v,w) = +∞ for all v ∈ S, w ∈ V \\ S. Recall that a cut is a partition of the vertices in VΓ into two sets C1 and C2 so that s ∈ C1, t ∈ C2; we denote such a cut by C = (C1, C2).",
                "Abusing notation, we write e = (u, v) ∈ C if u ∈ C1, v ∈ C2 or u ∈ C2, v ∈ C1, and say that such an edge e = (u, v) crosses the cut C. The capacity of a cut C is computed as cap(C) = P (v,w)∈C a(v,w).",
                "We have cap(s, V ∪{t}) = c(S), cap({s} ∪ V, t) = c(V \\ S).",
                "Let Cmin = ({s} ∪ S ∪ W , {t} ∪ S ∪ W ) be a minimum cut in Γ, where S , S ⊆ S, W , W ⊆ V \\ S. See Figure 4.",
                "As cap(Cmin) ≤ cap(s, V ∪ {t}) = c(S) < +∞, and any edge in E2 has infinite capacity, no edge (u, v) ∈ E2 crosses Cmin.",
                "Consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Clearly, C = ({s} ∪ S ∪ W , {t}) is a minimum cut in Γ (otherwise, there would exist a smaller cut for Γ).",
                "As cap(C ) = c(W ), we have c(S ) ≥ c(W ).",
                "Now, consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Similarly, C = ({s}, S ∪ W ∪ {t}) is a minimum cut in Γ , cap(C ) = c(S ).",
                "As the size of a maximum flow from s to t is equal to the capacity of a minimum cut separating s and t, there exists a flow F = (fe)e∈EΓ of size c(S ).",
                "This flow has to saturate all edges between s and S , i.e., f(s,v) = cv for all v ∈ S .",
                "Now, increase the capacities of all edges between s and S to +∞.",
                "In the modified network, the capacity of a minimum cut (and hence the size of a maximum flow) is c(W ), and a maximum flow F = (fe)e∈EΓ can be constructed by greedily augmenting F. Set bv = cv for all v ∈ S , bv = f(s,v) for all v ∈ S .",
                "As F is constructed by augmenting F, we have bv ≥ cv for all v ∈ S, i.e., condition (1) is satisfied.",
                "Now, let us check that no vertex cover T ⊆ V can violate condition (2).",
                "Set T1 = T ∩ S , T2 = T ∩ S , T3 = T ∩ W , T4 = T ∩ W ; our goal is to show that b(S \\ T1) + b(S \\ T2) ≤ c(T3)+c(T4).",
                "Consider all edges (u, v) ∈ E such that u ∈ S \\T1.",
                "If (u, v) ∈ E2 then v ∈ T3 (no edge in E2 can cross the cut), and if u, v ∈ S then v ∈ T1∪T2.",
                "Hence, T1∪T3∪S is a vertex cover for G, and therefore c(T1)+ c(T3)+ c(S ) ≥ c(S) = c(T1)+ c(S \\ T1) + c(S ).",
                "Consequently, c(T3) ≥ c(S \\ T1) = b(S \\ T1).",
                "Now, consider the vertices in S \\T2.",
                "Any edge in E2 that starts in one of these vertices has to end in T4 (this edge has to be covered by T, and it cannot go across the cut).",
                "Therefore, the total flow out of S \\T2 is at most the total flow out of T4, i.e., b(S \\T2) ≤ c(T4).",
                "Hence, b(S \\ T1) + b(S \\ T2) ≤ c(T3) + c(T4).",
                "Finally, we derive a lower bound on the payment bound that is of interest to us, namely, NTUmin(c).",
                "LEMMA 8.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmin(c, S) ≥ c(V \\ S) PROOF.",
                "Suppose for contradiction that c is a cost vector with minimum-cost vertex cover S and NTUmin(c, S) < c(V \\S).",
                "Let b be the corresponding bid vector and let c be a new cost vector with cv = bv for v ∈ S and cv = cv for v ∈ S. Condition (2) guarantees that S is an optimal solution to the cost vector c .",
                "Now compute a bid vector b corresponding to NTUmax(c , S).",
                "We S W S W s t T1 T3 T2 T4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 00 11 11 0 00 1 11 0 00 1 11 0 00 1 11 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00000 0000000000 0000000000 00000 0000000000 0000000000 00000 0000000000 11111 1111111111 1111111111 11111 1111111111 1111111111 11111 1111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 Figure 4: Proof of Lemma 7.",
                "Dashed lines correspond to edges in E \\ E2 claim that bv = cv for any v ∈ S. Indeed, suppose that bv > cv for some v ∈ S (bv = cv for v ∈ S by construction).",
                "As b satisfies conditions (1)-(3), among the inequalities in (2) there is one that is tight for v and the bid vector b.",
                "That is, b(S \\ T) = c(T \\ S).",
                "By the construction of c , c (S \\ T) = c (T \\ S).",
                "Now since bw ≥ cw for all w ∈ S, bv > cv implies b (S \\T) > c (S \\T) = c (T \\S).",
                "But this violates (2).",
                "So we now know b = c .",
                "Hence, we have NTUmax(c , S) = P v∈S bv = NTUmin(c, S) < c(V \\ S), giving a contradiction to the fact that NTUmax(c , S) ≥ c (V \\S) which we proved in Lemma 7.",
                "As NTUmin(c, S) satisfies condition (1), it follows that we have NTUmin(c, S) ≥ c(S).",
                "Together will Lemma 8, this implies NTUmin(c, S) ≥ max{c(V \\ S), c(S)} ≥ c(V )/2.",
                "Combined with Lemma 5, this completes the proof of Theorem 4.",
                "REMARK 3.",
                "As NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), our bound of 2Δ extends to the smaller frugality ratios that we consider, i.e., φNTUmax(M) and φTUmax(M).",
                "It is not clear whether it extends to the larger frugality ratio φTUmin(M).",
                "However, the frugality ratio φTUmin(M) is not realistic because the payment bound TUmin(c) is inappropriately low - we show in Section 6 that TUmin(c) can be significantly smaller than the total cost of a cheapest vertex cover.",
                "Extensions We can also apply our results to monotone vertex-cover algorithms that do not necessarily output locally-optimal solutions.",
                "To do so, we simply take the vertex cover produced by any such algorithm and transform it into a locally-optimal one, considering the vertices in lexicographic order and replacing a vertex v with its neighbours whenever bv > P u∼v bu.",
                "Note that if a vertex u has been added to the vertex cover during this process, it means that it has a neighbour whose bid is higher than bu, so after one pass all vertices in the vertex cover satisfy bv ≤ P u∼v bu.",
                "This procedure is monotone in bids, and it can only decrease the cost of the vertex cover.",
                "Therefore, using it on top of a monotone allocation rule with approx342 imation ratio α, we obtain a monotone locally-optimal allocation rule with approximation ratio α.",
                "Combining it with threshold payments, we get an <br>auction</br> with φNTUmin ≤ 2Δ.",
                "Since any truthful <br>auction</br> has a monotone allocation rule, this procedure transforms any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio. 5.2 Lower bound In this subsection, we prove that the upper bound of Theorem 4 is essentially optimal.",
                "Our proof uses the techniques of [9], where the authors prove a similar result for shortest-path auctions.",
                "THEOREM 5.",
                "For any Δ > 0 and any n, there exist a graph G of maximum degree Δ and size N > n such that for any truthful mechanism M on G we have φNTUmin(M) ≥ Δ/2.",
                "PROOF.",
                "Given n and Δ, set k = n/2Δ .",
                "Let G be the graph that consists of k blocks B1, . . . , Bk of size 2Δ each, where each Bi is a complete bipartite graph with parts Li and Ri, |Li| = |Ri| = Δ.",
                "We will consider two families of cost vectors for G. Under a cost vector x ∈ X, each block Bi has one vertex of cost 1; all other vertices cost 0.",
                "Under a cost vector y ∈ Y , there is one block that has two vertices of cost 1, one in each part, all other blocks have one vertex of cost 1, and all other vertices cost 0.",
                "Clearly, |X| = (2Δ)k , |Y | = k(2Δ)k−1 Δ2 .",
                "We will now construct a bipartite graph W with the vertex set X ∪ Y as follows.",
                "Consider a cost vector y ∈ Y that has two vertices of cost 1 in Bi; let these vertices be vl ∈ Li and vr ∈ Ri.",
                "By changing the cost of either of these vertices to 0, we obtain a cost vector in X.",
                "Let xl and xr be the cost vectors obtained by changing the cost of vl and vr, respectively.",
                "The vertex cover chosen by M(y) must either contain all vertices in Li or it must contain all vertices in Ri.",
                "In the former case, we put in W an edge from y to xl and in the latter case we put in W an edge from y to xr (if the vertex cover includes all of Bi, W contains both of these edges).",
                "The graph W has at least k(2Δ)k−1 Δ2 edges, so there must exist an x ∈ X of degree at least kΔ/2.",
                "Let y1, . . . , ykΔ/2 be the other endpoints of the edges incident to x, and for each i = 1, . . . , kΔ/2, let vi be the vertex whose cost is different under x and yi; note that all vi are distinct.",
                "It is not hard to see that NTUmin(x) ≤ k: the cheapest vertex cover contains the all-0 part of each block, and we can satisfy conditions (1)-(3) by letting one of the vertices in the all-0 part of each block to bid 1, while all other the vertices in the cheapest set bid 0.",
                "On the other hand, by monotonicity of M we have vi ∈ M(x) for i = 1, . . . , kΔ/2 (vi is in the winning set under yi, and x is obtained from yi by decreasing the cost of vi), and moreover, the threshold bid of each vi is at least 1, so the total payment of M on x is at least kΔ/2.",
                "Hence, φNTUmin(M) ≥ M(x)/NTUmin(x) ≥ Δ/2.",
                "REMARK 4.",
                "The lower bound of Theorem 5 can be generalised to randomised mechanisms, where a randomised mechanism is considered to be truthful if it can be represented as a probability distribution over truthful mechanisms.",
                "In this case, instead of choosing the vertex x ∈ X with the highest degree, we put both (y, xl) and (y, xr) into W , label each edge with the probability that the respective part of the block is chosen, and pick x ∈ X with the highest weighted degree.",
                "The argument can be further extended to a more permissive definition of truthfulness for randomised mechanisms, but this discussion is beyond the scope of this paper. 6.",
                "PROPERTIES OF PAYMENT BOUNDS In this section we consider several desirable properties of payment bounds and evaluate the four payment bounds proposed in this paper with respect to them.",
                "The particular properties that we are interested in are independence of the choice of S (Section 6.3), monotonicity (Section 6.4.1), computational hardness (Section 6.4.2), and the relationship with other reasonable bounds, such as the total cost of the cheapest set (Section 6.1), or the total VCG payment (Section 6.2). 6.1 Comparison with total cost Our first requirement is that a payment bound should not be less than the total cost of the selected set.",
                "Payment bounds are used to evaluate the performance of set-system auctions.",
                "The latter have to satisfy individual rationality, i.e., the payment to each agent must be at least as large as his incurred costs; it is only reasonable to require the payment bound to satisfy the same requirement.",
                "Clearly, NTUmax(c) and NTUmin(c) satisfy this requirement due to condition (1), and so does TUmax(c), since TUmax(c) ≥ NTUmax(c).",
                "However, TUmin(c) fails this test.",
                "The example of Proposition 4 shows that for path auctions, TUmin(c) can be smaller than the total cost by a factor of 2.",
                "Moreover, there are set systems and cost vectors for which TUmin(c) is smaller than the cost of the cheapest set S by a factor of Ω(n).",
                "Consider, for example, the vertex-cover <br>auction</br> for the graph of Proposition 5 with the costs cX1 = · · · = cXn−2 = cXn−1 = 1, cX0 = 0.",
                "The cost of a cheapest vertex cover is n − 2, and the lexicographically first vertex cover of cost n−2 is {X0, X1, . . . , Xn−2}.",
                "The constraints in (2) are bXi + bX0 ≤ cXn−1 = 1.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bX1 = · · · = bXn−2 = 0, bX0 = 1, which means that TUmin(c) ≤ 1.",
                "This observation suggests that the payment bound TUmin(c) is too strong to be realistic, since it can be substantially lower than the cost of the cheapest feasible set.",
                "Nevertheless, some of the positive results that were proved in [16] for NTUmin(c) go through for TUmin(c) as well.",
                "In particular, one can show that if the feasible sets are the bases of a monopolyfree matroid, then φTUmin(VCG) = 1.",
                "To show that φTUmin(VCG) is at most 1, one must prove that the VCG payment is at most TUmin(c).",
                "This is shown for NTUmin(c) in the first paragraph of the proof of Theorem 5 in [16].",
                "Their argument does not use condition (1) at all, so it also applies to TUmin(c).",
                "On the other hand, φTUmin(VCG) ≥ 1 since φTUmin(VCG) ≥ φNTUmin(VCG) and φNTUmin(VCG) ≥ 1 by Proposition 7 of [16] (and also by Proposition 6 below). 6.2 Comparison with VCG payments Another measure of suitability for payment bounds is that they should not result in frugality ratios that are less then 1 for wellknown truthful mechanisms.",
                "If this is indeed the case, the payment bound may be too weak, as it becomes too easy to design mechanisms that perform well with respect to it.",
                "It particular, a reasonable requirement is that a payment bound should not exceed the total payment of the classical VCG mechanism.",
                "The following proposition shows that NTUmax(c), and therefore also NTUmin(c) and TUmin(c), do not exceed the VCG payment pVCG(c).",
                "The proof essentially follows the argument of Proposition 7 of [16] and can be found in the full version of this paper [8].",
                "PROPOSITION 6. φNTUmax(VCG) ≥ 1.",
                "Proposition 6 shows that none of the payment bounds TUmin(c), NTUmin(c) and NTUmax(c) exceeds the payment of VCG.",
                "However, the payment bound TUmax(c) can be larger that the total 343 VCG payment.",
                "In particular, for the instance in Proposition 5, the VCG payment is smaller than TUmax(c) by a factor of n − 2.",
                "We have already seen that TUmax(c) ≥ n − 2.",
                "On the other hand, under VCG, the threshold bid of any Xi, i = 1, . . . , n − 2, is 0: if any such vertex bids above 0, it is deleted from the winning set together with X0 and replaced with Xn−1.",
                "Similarly, the threshold bid of X0 is 1, because if X0 bids above 1, it can be replaced with Xn−1.",
                "So the VCG payment is 1.",
                "This result is not surprising: the definition of TUmax(c) implicitly assumes there is co-operation between the agents, while the computation of VCG payments does not take into account any interaction between them.",
                "Indeed, co-operation enables the agents to extract higher payments under VCG.",
                "That is, VCG is not groupstrategyproof.",
                "This suggests that as a payment bound, TUmax(c) may be too liberal, at least in a context where there is little or no co-operation between agents.",
                "Perhaps TUmax(c) can be a good benchmark for measuring the performance of mechanisms designed for agents that can form coalitions or make side payments to each other, in particular, group-strategyproof mechanisms.",
                "Another setting in which bounding φTUmax is still of some interest is when, for the underlying problem, the optimal allocation and VCG payments are NP-hard to compute.",
                "In this case, finding a polynomial-time computable mechanism with good frugality ratio with respect to TUmax(c) is a non-trivial task, while bounding the frugality ratio with respect to more challenging payment bounds could be too difficult.",
                "To illustrate this point, compare the proofs of Lemma 6 and Lemma 7: both require some effort, but the latter is much more difficult than the former. 6.3 The choice of S All payment bounds defined in this paper correspond to the total bid of all elements in the cheapest feasible set, where ties are broken lexicographically.",
                "While this definition ensures that our payment bounds are well-defined, the particular choice of the drawresolution rule appears arbitrary, and one might wonder if our payment bounds are sufficiently robust to be independent of this choice.",
                "It turns out that is indeed the case for NTUmin(c) and NTUmax(c), i.e., these bounds do not depend on the draw-resolution rule.",
                "To see this, suppose that two feasible sets S1 and S2 have the same cost.",
                "In the computation of NTUmin(c, S1), all vertices in S1 \\S2 would have to bid their true cost, since otherwise S2 would become cheaper than S1.",
                "Hence, any bid vector for S1 can only have be = ce for e ∈ S1 ∩ S2, and hence constitutes a valid bid vector for S2 and vice versa.",
                "A similar argument applies to NTUmax(c).",
                "However, for TUmin(c) and TUmax(c) this is not the case.",
                "For example, consider the set system E = {e1, e2, e3, e4, e5}, F = {S1 = {e1, e2}, S2 = {e2, e3, e4}, S3 = {e4, e5}} with the costs c1 = 2, c2 = c3 = c4 = 1, c5 = 3.",
                "The cheapest sets are S1 and S2.",
                "Now TUmax(c, S1) ≤ 4, as the total bid of the elements in S1 cannot exceed the total cost of S3.",
                "On the other hand, TUmax(c, S2) ≥ 5, as we can set b2 = 3, b3 = 0, b4 = 2.",
                "Similarly, TUmin(c, S1) = 4, because the inequalities in (2) are b1 ≤ 2 and b1 + b2 ≤ 4.",
                "But TUmin(c, S2) ≤ 3 as we can set b2 = 1, b3 = 2, b4 = 0. 6.4 Negative results for NTUmin(c) and TUmin(c) The results in [16] and our vertex cover results are proved for the frugality ratio φNTUmin.",
                "Indeed, it can be argued that φNTUmin is the best definition of frugality ratio, because among all reasonable payment bounds (i.e., ones that are at least as large as the cost of the cheapest feasible set), it is most demanding of the algorithm.",
                "However, NTUmin(c) is not always the easiest or the most natural payment bound to work with.",
                "In this subsection, we discuss several disadvantages of NTUmin(c) (and also TUmin(c)) as compared to NTUmax(c) and TUmax(c). 6.4.1 Nonmonotonicity The first problem with NTUmin(c) is that it is not monotone with respect to F, i.e., it may increase when one adds a feasible set to F. (It is, however, monotone in the sense that a losing agent cannot become a winner by raising his cost.)",
                "Intuitively, a good payment bound should satisfy this monotonicity requirement, as adding a feasible set increases the competition, so it should drive the prices down.",
                "Note that this indeed the case for NTUmax(c) and TUmax(c) since a new feasible set adds a constraint in (2), thus limiting the solution space for the respective linear program.",
                "PROPOSITION 7.",
                "Adding a feasible set to F can increase the value of NTUmin(c) by a factor of Ω(n).",
                "PROOF.",
                "Let E = {x, xx, y1, . . . , yn, z1, . . . , zn}.",
                "Set Y = {y1, . . . , yn}, S = Y ∪ {x}, Ti = Y \\ {yi} ∪ {zi}, i = 1, . . . , n, and suppose that F = {S, T1, . . . , Tn}.",
                "The costs are cx = 0, cxx = 0, cyi = 0, czi = 1 for i = 1, . . . , n. Note that S is the cheapest feasible set.",
                "Let F = F ∪ {T0}, where T0 = Y ∪ {xx}.",
                "For F, the bid vector by1 = · · · = byn = 0, bx = 1 satisfies (1), (2), and (3), so NTUmin(c) ≤ 1.",
                "For F , S is still the lexicographically-least cheapest set.",
                "Any optimal solution has bx = 0 (by constraint in (2) with T0).",
                "Condition (3) for yi implies bx + byi = czi = 1, so byi = 1 and NTUmin(c) = n. For path auctions, it has been shown [18] that NTUmin(c) is non-monotone in a slightly different sense, i.e., with respect to adding a new edge (agent) rather than a new feasible set (a team of existing agents).",
                "REMARK 5.",
                "We can also show that NTUmin(c) is non-monotone for vertex cover.",
                "In this case, adding a new feasible set corresponds to deleting edges from the graph.",
                "It turns out that deleting a single edge can increase NTUmin(c) by a factor of n − 2; the construction is similar to that of Proposition 5. 6.4.2 NP-Hardness Another problem with NTUmin(c, S) is that it is NP-hard to compute even if the number of feasible sets is polynomial in n. Again, this puts it at a disadvantage compared to NTUmax(c, S) and TUmax(c, S) (see Remark 1).",
                "THEOREM 6.",
                "Computing NTUmin(c) is NP-hard, even when the lexicographically-least feasible set S is given in the input.",
                "PROOF.",
                "We reduce EXACT COVER BY 3-SETS(X3C) to our problem.",
                "An instance of X3C is given by a universe G = {g1, . . . , gn} and a collection of subsets C1, . . . , Cm, Ci ⊂ G, |Ci| = 3, where the goal is to decide whether one can cover G by n/3 of these sets.",
                "Observe that if this is indeed the case, each element of G is contained in exactly one set of the cover.",
                "LEMMA 9.",
                "Consider a minimisation problem P of the following form: Minimise P i=1,...,n bi under conditions (1) bi ≥ 0 for all i = 1, . . . , n; (2) for any j = 1, . . . , k we have P bi∈Sj bi ≤ aj, where Sj ⊆ {b1, . . . , bn}; (3) for each bj , one of the constraints in (2) involving it is tight.",
                "For any such P, one can construct a set system S and a vector of costs c such that NTUmin(c) is the optimal solution to P. PROOF.",
                "The construction is straightforward: there is an element of cost 0 for each bi, an element of cost aj for each aj, the feasible solutions are {b1, . . . , bn}, or any set obtained from {b1, . . . , bn} by replacing the elements in Sj by aj. 344 By this lemma, all we have to do to prove Theorem 6 is to show how to solve X3C by using the solution to a minimisation problem of the form given in Lemma 9.",
                "We do this as follows.",
                "For each Ci, we introduce 4 variables xi, ¯xi, ai, and bi.",
                "Also, for each element gj of G there is a variable dj.",
                "We use the following set of constraints: • In (1), we have constraints xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 for all i = 1, . . . , m, j = 1, . . . , n. • In (2), for all i = 1, . . . , m, we have the following 5 constraints: xi + ¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi + bi ≤ 1.",
                "Also, for all j = 1, . . . , n we have a constraint of the form xi1 + · · · + xik + dj ≤ 1, where Ci1 , . . . , Cik are the sets that contain gj.",
                "The goal is to minimize z = P i(xi + ¯xi + ai + bi) + P j dj.",
                "Observe that for each j, there is only one constraint involving dj , so by condition (3) it must be tight.",
                "Consider the two constraints involving ai.",
                "One of them must be tight, and therefore xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1.",
                "Hence, for any feasible solution to (1)-(3) we have z ≥ m. Now, suppose that there is an exact set cover.",
                "Set dj = 0 for j = 1, . . . , n. Also, if Ci is included in this cover, set xi = 1, ¯xi = ai = bi = 0, otherwise set ¯xi = 1, xi = ai = bi = 0.",
                "Clearly, all inequalities in (2) are satisfied (we use the fact that each element is covered exactly once), and for each variable, one of the constraints involving it is tight.",
                "This assignment results in z = m. Conversely, suppose there is a feasible solution with z = m. As each addend of the form xi + ¯xi + ai + bi contributes at least 1, we have xi + ¯xi + ai + bi = 1 for all i, dj = 0 for all j.",
                "We will now show that for each i, either xi = 1 and ¯xi = 0, or xi = 0 and ¯xi = 1.",
                "For the sake of contradiction, suppose that xi = δ < 1, ¯xi = δ < 1.",
                "As one of the constraints involving ai must be tight, we have ai ≥ min{1 − δ, 1 − δ }.",
                "Similarly, bi ≥ min{1 − δ, 1 − δ }.",
                "Hence, xi + ¯xi + ai + bi = 1 = δ +δ +2 min{1−δ, 1−δ } > 1.",
                "To finish the proof, note that for each j = 1, . . . , m we have xi1 + · · · + xik + dj = 1 and dj = 0, so the subsets that correspond to xi = 1 constitute a set cover.",
                "REMARK 6.",
                "In the proofs of Proposition 7 and Theorem 6 all constraints in (1) are of the form be ≥ 0.",
                "Hence, the same results are true for TUmin(c).",
                "REMARK 7.",
                "For shortest-path auctions, the size of F can be superpolynomial.",
                "However, there is a polynomial-time separation oracle for constraints in (2) (to construct one, use any algorithm for finding shortest paths), so one can compute NTUmax(c) and TUmax(c) in polynomial time.",
                "On the other hand, recently and independently it was shown [18] that computing NTUmin(c) for shortest-path auctions is NP-hard. 7.",
                "REFERENCES [1] A. Archer and E. Tardos, Frugal path mechanisms.",
                "In Proceedings of the 13th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 991-999, 2002 [2] R. Bar-Yehuda, K. Bendel, A. Freund, and D. Rawitz, Local ratio: A unified framework for approximation algorithms.",
                "In Memoriam: Shimon Even 1935-2004.",
                "ACM Comput.",
                "Surv., 36(4):422-463, 2004 [3] R. Bar-Yehuda and S. Even, A local-ratio theorem for approximating the weighted vertex cover problem.",
                "Annals of Discrete Mathematics, 25:27-46, 1985 [4] E. Clarke, Multipart pricing of public goods.",
                "Public Choice, 8:17-33, 1971 [5] G. Calinescu, Bounding the payment of approximate truthful mechanisms.",
                "In Proceedings of the 15th International Symposium on Algorithms and Computation, pages 221-233, 2004 [6] A. Czumaj and A. Ronen, On the expected payment of mechanisms for task allocation.",
                "In Proceedings of the 5th ACM Conference on Electronic Commerce (EC04), 2004 [7] E. Elkind, True costs of cheap labor are hard to measure: edge deletion and VCG payments in graphs.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [8] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Frugality ratios and improved truthful mechanisms for vertex cover.",
                "Available from http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai, and K. Steiglitz, Frugality in path auctions.",
                "In Proceedings of the 15th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 694-702, 2004 [10] J. Feigenbaum, C. H. Papadimitriou, R. Sami, and S. Shenker, A BGP-based mechanism for lowest-cost routing.",
                "In Proceedings of the 21st Symposium on Principles of Distributed Computing, pages 173-182, 2002 [11] A. Fiat, A. Goldberg, J. Hartline, and A. Karlin, Competitive generalized auctions.",
                "In Proceedings of the 34th Annual ACM Symposium on Theory of Computation, pages 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra and A. Verma, Coalitional games on graphs: core structures, substitutes and frugality.",
                "In Proceedings of the 4th ACM Conference on Electronic Commerce (EC03), 2005 [13] A. Goldberg, J. Hartline, and A. Wright, Competitive auctions and digital goods.",
                "In Proceedings of the 12th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2001 [14] T. Groves, Incentives in teams.",
                "Econometrica, 41(4):617-631, 1973 [15] N. Immorlica, D. Karger, E. Nikolova, and R. Sami, First-price path auctions.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [16] A. R. Karlin, D. Kempe, and T. Tamir, Beyond VCG: frugality of truthful mechanisms.",
                "In Proceedings of the 46th Annual IEEE Symposium on Foundations of Computer Science, pages 615-626, 2005 [17] D. Kempe, Personal communication, 2006 [18] N. Chen, A. R. Karlin, Cheap labor can be expensive, In Proceedings of the 18th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2007 [19] N. Nisan and A. Ronen, Algorithmic mechanism design.",
                "In Proceedings of the 31st Annual ACM Symposium on Theory of Computation, pages 129-140, 1999 [20] A. Ronen and R. Talisman, Towards generic low payment mechanisms for decentralized task allocation.",
                "In Proceedings of the 7th International IEEE Conference on E-Commerce Technology, 2005 [21] K. Talwar, The price of truth: frugality in truthful mechanisms.",
                "In Proceedings of 20th International Symposium on Theoretical Aspects of Computer Science, 2003 [22] W. Vickrey, Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961 345"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La proporción captura la medida en que el mecanismo se vuelve sobrevalorado, en relación con el costo justo percibido en una \"subasta\" veraz.",
                "En este documento, proponemos una nueva \"subasta\" de tiempo polinómico verdadero para el problema de cobertura del vértice y vinculamos su relación de frugalidad.",
                "Mostramos que la calidad de la solución es con un factor constante de óptima y la relación de frugalidad está dentro de un factor constante del mejor peor límite posible;Esta es la primera \"subasta\" para que este problema tenga estas propiedades.",
                "Además, mostramos cómo transformar cualquier \"subasta\" veraz en una frugal mientras preservamos la relación de aproximación.",
                "Introducción en un sistema establecido \"Auction\" Hay un solo comprador y muchos proveedores que pueden proporcionar diversos servicios.",
                "Un objetivo natural en este entorno es diseñar una \"subasta\" veraz, en la que los proveedores tienen un incentivo para ofertar su verdadero costo.",
                "Según esta nueva definición, los autores construyen nuevos mecanismos para el problema de ruta más corto y muestran que el pago excesivo de estos mecanismos está dentro de un factor constante de óptimo.1.1 Nuestros resultados Subastas de cobertura de vértices Proponemos una \"subasta\" de tiempo polinomial sincero para la cubierta de vértice que genera una solución cuyo costo está dentro de un factor de 2 de óptimo, y cuya relación de frugalidad es como máximo 2Δ, donde δ es el grado máximo de grado de grado deEl gráfico (Teorema 4).",
                "Esto significa que la calidad de la solución de nuestra \"subasta\" es con un factor de 2 de la relación óptima y la frugalidad está dentro de un factor de 4 de los mejores límites posibles para las entradas en el peor de los casos.",
                "Hasta donde sabemos, esta es la primera \"subasta\" para este problema que disfruta de estas propiedades.",
                "Este artículo estudia una \"subasta\" que se basa en el algoritmo de asignación codiciosa, que tiene una relación de aproximación de log n.Si bien el enfoque principal de [5] es el problema de la cubierta del conjunto más general, los resultados de [5] implican una relación de frugalidad de 2Δ2 para la cubierta del vértice.",
                "La \"subasta\" procede de la siguiente manera: todos los elementos del conjunto de terrenos hacen que sus ofertas, el Centro seleccione un conjunto factible basado en las ofertas y realice pagos a los agentes.",
                "Formalmente, una \"subasta\" se define mediante una regla de asignación A: Rn → F y una regla de pago P: RN → RN.",
                "Dada una regla de asignación monótona A y un vector de oferta B, la oferta umbral de un agente e ∈ A (b) es la oferta más alta de este agente que aún gana la \"subasta\", dado que las ofertas de otros participantes siguen siendo las mismas.",
                "Es bien sabido (ver, por ejemplo, [19, 13]) que cualquier \"subasta\" que tenga una regla de asignación monótona y le pida a cada agente que su oferta de umbral es veraz;Por el contrario, cualquier \"subasta\" veraz tiene una regla de asignación monótona.",
                "Considere la \"subasta\" de ruta más corta en el gráfico de la Figura 1.",
                "Los mecanismos veraces para la cobertura de vértice recuerdan que para una \"subasta\" de cobertura de vértice en un gráfico g = (v, e), una regla de asignación es un algoritmo que toma como entrada una entrada BV para cada vértice y devuelve una cubierta de vértice de g. Como se explica en la Sección 2, podemos combinar una regla de asignación monótona con pagos umbrales para obtener una \"subasta\" veraz.",
                "Por lo tanto, podemos usarlo para construir una \"subasta\" veraz que garantice seleccionar una cubierta de vértice cuyo costo esté dentro de un factor de 2 desde lo óptimo.",
                "En la siguiente subsección, vinculamos la relación de frugalidad de ALR (y, en general, en general, todos los algoritmos que satisfacen la condición de optimización local, definida más adelante) en 2Δ, donde δ es el grado máximo de G., demostramos un límite inferior inferior inferior inferior.Mostrar que para algunos gráficos la relación de frugalidad de cualquier \"subasta\" veraz es al menos δ/2.5.1 Bound superior Decimos que una regla de asignación es localmente óptima si cada vez que bv> p w∼v bw, el vértice V no se elige.",
                "Cualquier cubierta de vértice \"subasta\" M que tenga una regla de asignación localmente óptima y monótona y paga a cada agente su oferta de umbral tiene una relación de frugalidad φnumin (m) ≤ 2Δ.",
                "Sea M una \"subasta\" de cubierta de vértice en G que satisface las condiciones del teorema 4.",
                "Primero tenga en cuenta que cualquier \"subasta\" es sincera, por lo que podemos suponer que cada oferta de agentes es igual a su costo.",
                "Combinándolo con pagos de umbral, obtenemos una \"subasta\" con φnumin ≤ 2Δ.",
                "Dado que cualquier \"subasta\" veraz tiene una regla de asignación monótona, este procedimiento transforma cualquier mecanismo veraz para el problema de cobertura de vértices en una frugal mientras preserva la relación de aproximación.5.2 Límite inferior en esta subsección, demostramos que el límite superior del teorema 4 es esencialmente óptimo.",
                "Considere, por ejemplo, la \"subasta\" de la cubierta de vértice para el gráfico de la Proposición 5 con los costos CX1 = · · · = CXN-2 = CXN-1 = 1, CX0 = 0."
            ],
            "translated_text": "",
            "candidates": [
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "Auction",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "Subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "Subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "subasta",
                "Subasta",
                "subasta"
            ],
            "error": []
        },
        "frugality": {
            "translated_key": "frugalidad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>frugality</br> Ratios And Improved Truthful Mechanisms for Vertex Cover ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT In set-system auctions, there are several overlapping teams of agents, and a task that can be completed by any of these teams.",
                "The auctioneers goal is to hire a team and pay as little as possible.",
                "Examples of this setting include shortest-path auctions and vertex-cover auctions.",
                "Recently, Karlin, Kempe and Tamir introduced a new definition of <br>frugality</br> ratio for this problem.",
                "Informally, the <br>frugality</br> ratio is the ratio of the total payment of a mechanism to a desired payment bound.",
                "The ratio captures the extent to which the mechanism overpays, relative to perceived fair cost in a truthful auction.",
                "In this paper, we propose a new truthful polynomial-time auction for the vertex cover problem and bound its <br>frugality</br> ratio.",
                "We show that the solution quality is with a constant factor of optimal and the <br>frugality</br> ratio is within a constant factor of the best possible worst-case bound; this is the first auction for this problem to have these properties.",
                "Moreover, we show how to transform any truthful auction into a frugal one while preserving the approximation ratio.",
                "Also, we consider two natural modifications of the definition of Karlin et al., and we analyse the properties of the resulting payment bounds, such as monotonicity, computational hardness, and robustness with respect to the draw-resolution rule.",
                "We study the relationships between the different payment bounds, both for general set systems and for specific set-system auctions, such as path auctions and vertex-cover auctions.",
                "We use these new definitions in the proof of our main result for vertex-cover auctions via a bootstrapping technique, which may be of independent interest.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a set system auction there is a single buyer and many vendors that can provide various services.",
                "It is assumed that the buyers requirements can be satisfied by various subsets of the vendors; these subsets are called the feasible sets.",
                "A widely-studied class of setsystem auctions is path auctions, where each vendor is able to sell access to a link in a network, and the feasible sets are those sets whose links contain a path from a given source to a given destination; the study of these auctions has been initiated in the seminal paper by Nisan and Ronen [19] (see also [1, 10, 9, 6, 15, 7, 20]).",
                "We assume that each vendor has a cost of providing his services, but submits a possibly larger bid to the auctioneer.",
                "Based on these bids, the auctioneer selects a feasible subset of vendors, and makes payments to the vendors in this subset.",
                "Each selected vendor enjoys a profit of payment minus cost.",
                "Vendors want to maximise profit, while the buyer wants to minimise the amount he pays.",
                "A natural goal in this setting is to design a truthful auction, in which vendors have an incentive to bid their true cost.",
                "This can be achieved by paying each selected vendor a premium above her bid in such a way that the vendor has no incentive to overbid.",
                "An interesting question in mechanism design is how much the auctioneer will have to overpay in order to ensure truthful bids.",
                "In the context of path auctions this topic was first addressed by Archer and Tardos [1].",
                "They define the <br>frugality</br> ratio of a mechanism as the ratio between its total payment and the cost of the cheapest path disjoint from the path selected by the mechanism.",
                "They show that, for a large class of truthful mechanisms for this problem, the <br>frugality</br> ratio is as large as the number of edges in the shortest path.",
                "Talwar [21] extends this definition of <br>frugality</br> ratio to general set systems, and studies the <br>frugality</br> ratio of the classical VCG mechanism [22, 4, 14] for many specific set systems, such as minimum spanning trees and set covers.",
                "While the definition of <br>frugality</br> ratio proposed by [1] is wellmotivated and has been instrumental in studying truthful mechanisms for set systems, it is not completely satisfactory.",
                "Consider, for example, the graph of Figure 1 with the costs cAB = cBC = A B C D Figure 1: The diamond graph 336 cCD = 0, cAC = cBD = 1.",
                "This graph is 2-connected and the VCG payment to the winning path ABCD is bounded.",
                "However, the graph contains no A-D path that is disjoint from ABCD, and hence the <br>frugality</br> ratio of VCG on this graph remains undefined.",
                "At the same time, there is no monopoly, that is, there is no vendor that appears in all feasible sets.",
                "In auctions for other types of set systems, the requirement that there exist a feasible solution disjoint from the selected one is even more severe: for example, for vertex-cover auctions (where vendors correspond to the vertices of some underlying graph, and the feasible sets are vertex covers) the requirement means that the graph must be bipartite.",
                "To deal with this problem, Karlin et al. [16] suggest a better benchmark, which is defined for any monopoly-free set system.",
                "This quantity, which they denote by ν, intuitively corresponds to the value of a cheapest Nash equilibrium.",
                "Based on this new definition, the authors construct new mechanisms for the shortest path problem and show that the overpayment of these mechanisms is within a constant factor of optimal. 1.1 Our results Vertex cover auctions We propose a truthful polynomial-time auction for vertex cover that outputs a solution whose cost is within a factor of 2 of optimal, and whose <br>frugality</br> ratio is at most 2Δ, where Δ is the maximum degree of the graph (Theorem 4).",
                "We complement this result by proving (Theorem 5) that for any Δ and n, there are graphs of maximum degree Δ and size Θ(n) for which any truthful mechanism has <br>frugality</br> ratio at least Δ/2.",
                "This means that the solution quality of our auction is with a factor of 2 of optimal and the <br>frugality</br> ratio is within a factor of 4 of the best possible bound for worst-case inputs.",
                "To the best of our knowledge, this is the first auction for this problem that enjoys these properties.",
                "Moreover, we show how to transform any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio.",
                "<br>frugality</br> ratios Our vertex cover results naturally suggest two modifications of the definition of ν in [16].",
                "These modifications can be made independently of each other, resulting in four different payment bounds TUmax, TUmin, NTUmax, and NTUmin, where NTUmin is equal to the original payment bound ν of in [16].",
                "All four payment bounds arise as Nash equilibria of certain games (see the full version of this paper [8]); the differences between them can be seen as the price of initiative and the price of cooperation (see Section 3).",
                "While our main result about vertex cover auctions (Theorem 4) is with respect to NTUmin = ν, we make use of the new definitions by first comparing the payment of our mechanism to a weaker bound NTUmax, and then bootstrapping from this result to obtain the desired bound.",
                "Inspired by this application, we embark on a further study of these payment bounds.",
                "Our results here are as follows: 1.",
                "We observe (Proposition 1) that the four payment bounds always obey a particular order that is independent of the choice of the set system and the cost vector, namely, TUmin ≤ NTUmin ≤ NTUmax ≤ TUmax.",
                "We provide examples (Proposition 5 and Corollaries 1 and 2) showing that for the vertex cover problem any two consecutive bounds can differ by a factor of n − 2, where n is the number of agents.",
                "We then show (Theorem 2) that this separation is almost best possible for general set systems by proving that for any set system TUmax/TUmin ≤ n. In contrast, we demonstrate (Theorem 3) that for path auctions TUmax/TUmin ≤ 2.",
                "We provide examples (Propositions 2, 3 and 4) showing that this bound is tight.",
                "We see this as an argument for the study of vertexcover auctions, as they appear to be more representative of the general team -selection problem than the widely studied path auctions. 2.",
                "We show (Theorem 1) that for any set system, if there is a cost vector for which TUmin and NTUmin differ by a factor of α, there is another cost vector that separates NTUmin and NTUmax by the same factor and vice versa; the same is true for the pairs (NTUmin, NTUmax) and (NTUmax, TUmax).",
                "This symmetry is quite surprising, since, e.g., TUmin and NTUmax are obtained from NTUmin by two very different transformations.",
                "This observation suggests that the four payment bounds should be studied in a unified framework; moreover, it leads us to believe that the bootstrapping technique of Theorem 4 may have other applications. 3.",
                "We evaluate the payment bounds introduced here with respect to a checklist of desirable features.",
                "In particular, we note that the payment bound ν = NTUmin of [16] exhibits some counterintuitive properties, such as nonmonotonicity with respect to adding a new feasible set (Proposition 7), and is NP-hard to compute (Theorem 6), while some of the other payment bounds do not suffer from these problems.",
                "This can be seen as an argument in favour of using weaker but efficiently computable bounds NTUmax and TUmax.",
                "Related work Vertex-cover auctions have been studied in the past by Talwar [21] and Calinescu [5].",
                "Both of these papers are based on the definition of <br>frugality</br> ratio used in [1]; as mentioned before, this means that their results only apply to bipartite graphs.",
                "Talwar [21] shows that the <br>frugality</br> ratio of VCG is at most Δ.",
                "However, since finding the cheapest vertex cover is an NP-hard problem, the VCG mechanism is computationally infeasible.",
                "The first (and, to the best of our knowledge, only) paper to investigate polynomial-time truthful mechanisms for vertex cover is [5].",
                "This paper studies an auction that is based on the greedy allocation algorithm, which has an approximation ratio of log n. While the main focus of [5] is the more general set cover problem, the results of [5] imply a <br>frugality</br> ratio of 2Δ2 for vertex cover.",
                "Our results improve on those of [21] as our mechanism is polynomial-time computable, as well as on those of [5], as our mechanism has a better approximation ratio, and we prove a stronger bound on the <br>frugality</br> ratio; moreover, this bound also applies to the mechanism of [5]. 2.",
                "PRELIMINARIES In most of this paper, we discuss auctions for set systems.",
                "A set system is a pair (E, F), where E is the ground set, |E| = n, and F is a collection of feasible sets, which are subsets of E. Two particular types of set systems are of interest to us - shortest path systems, in which the ground set consists of all edges of a network, and the feasible sets are paths between two specified vertices s and t, and vertex cover systems, in which the elements of the ground set are the vertices of a graph, and the feasible sets are vertex covers of this graph.",
                "In set system auctions, each element e of the ground set is owned by an independent agent and has an associated non-negative cost ce.",
                "The goal of the centre is to select (purchase) a feasible set.",
                "Each element e in the selected set incurs a cost of ce.",
                "The elements that are not selected incur no costs.",
                "The auction proceeds as follows: all elements of the ground set make their bids, the centre selects a feasible set based on the bids and makes payments to the agents.",
                "Formally, an auction is defined by an allocation rule A : Rn → F and a payment rule P : Rn → Rn .",
                "The allocation rule takes as input a vector of bids and decides which of the sets in F should be selected.",
                "The payment rule also takes as input a vector of bids and decides how much to pay to each agent.",
                "The standard requirements are individual rationality, i.e., the payment to each agent should be at least as high as his incurred cost (0 for agents not in the selected set and ce for agents in the 337 selected set) and incentive compatibility, or truthfulness, i.e., each agents dominant strategy is to bid his true cost.",
                "An allocation rule is monotone if an agent cannot increase his chance of getting selected by raising his bid.",
                "Formally, for any bid vector b and any e ∈ E, if e ∈ A(b) then e ∈ A(b1, . . . , be, . . . , bn) for any be > be.",
                "Given a monotone allocation rule A and a bid vector b, the threshold bid te of an agent e ∈ A(b) is the highest bid of this agent that still wins the auction, given that the bids of other participants remain the same.",
                "Formally, te = sup{be ∈ R | e ∈ A(b1, . . . , be, . . . , bn)}.",
                "It is well known (see, e.g. [19, 13]) that any auction that has a monotone allocation rule and pays each agent his threshold bid is truthful; conversely, any truthful auction has a monotone allocation rule.",
                "The VCG mechanism is a truthful mechanism that maximises the social welfare and pays 0 to the losing agents.",
                "For set system auctions, this simply means picking a cheapest feasible set, paying each agent in the selected set his threshold bid, and paying 0 to all other agents.",
                "Note, however, that the VCG mechanism may be difficult to implement, since finding a cheapest feasible set may be intractable.",
                "If U is a set of agents, c(U) denotes P w∈U cw.",
                "Similarly, b(U) denotes P w∈U bw. 3.",
                "<br>frugality</br> RATIOS We start by reproducing the definition of the quantity ν from [16, Definition 4].",
                "Let (E, F) be a set system and let S be a cheapest feasible set with respect to the true costs ce.",
                "Then ν(c, S) is the solution to the following optimisation problem.",
                "Minimise B = P e∈S be subject to (1) be ≥ ce for all e ∈ E (2) P e∈S\\T be ≤ P e∈T \\S ce for all T ∈ F (3) for every e ∈ S, there is a Te ∈ F such that e ∈ Te andP e ∈S\\Te be = P e ∈Te\\S ce The bound ν(c, S) can be seen as an outcome of a two-stage process, where first each agent e ∈ S makes a bid be stating how much it wants to be paid, and then the centre decides whether to accept these bids.",
                "The behaviour of both parties is affected by the following considerations.",
                "From the centres point of view, the set S must remain the most attractive choice, i.e., it must be among the cheapest feasible sets under the new costs ce = ce for e ∈ S, ce = be for e ∈ S (condition (2)).",
                "The reason for that is that if (2) is violated for some set T, the centre would prefer T to S. On the other hand, no agent would agree to a payment that does not cover his costs (condition (1)), and moreover, each agent tries to maximise his profit by bidding as high as possible, i.e., none of the agents can increase his bid without violating condition (2) (condition (3)).",
                "The centre wants to minimise the total payout, so ν(c, S) corresponds to the best possible outcome from the centres point of view.",
                "This definition captures many important aspects of our intuition about fair payments.",
                "However, it can be modified in two ways, both of which are still quite natural, but result in different payment bounds.",
                "First, we can consider the worst rather than the best possible outcome for the centre.",
                "That is, we can consider the maximum total payment that the agents can extract by jointly selecting their bids subject to (1), (2), and (3).",
                "Such a bound corresponds to maximising B subject to (1), (2), and (3) rather than minimising it.",
                "If it is the agents who make the original bids (rather than the centre), this kind of bidding behaviour is plausible.",
                "On the other hand, in a game in which the centre proposes payments to the agents in S and the agents accept them as long as (1), (2) and (3) are satisfied, we would be likely to observe a total payment of ν(c, S).",
                "Hence, the difference between these two definitions can be seen as the price of initiative.",
                "Second, the agents may be able to make payments to each other.",
                "In this case, if they can extract more money from the centre by agreeing on a vector of bids that violates individual rationality (i.e., condition (1)) for some bidders, they might be willing to do so, as the agents who are paid below their costs will be compensated by other members of the group.",
                "The bids must still be realistic, i.e., they have to satisfy be ≥ 0.",
                "The resulting change in payments can be seen as the price of co-operation and corresponds to replacing condition (1) with the following weaker condition (1∗ ): be ≥ 0 for all e ∈ E. (1∗ ) By considering all possible combinations of these modifications, we obtain four different payment bounds, namely • TUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1∗ ), (2), and (3). • TUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1∗ ), (2), and (3). • NTUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1), (2), and (3). • NTUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1), (2), (3).",
                "The abbreviations TU and NTU correspond, respectively, to transferable utility and non-transferable utility, i.e., the agents ability/inability to make payments to each other.",
                "For concreteness, we will take TUmin(c) to be TUmin(c, S) where S is the lexicographically least amongst the cheapest feasible sets.",
                "We define TUmax(c), NTUmin(c), NTUmax(c) and ν(c) similarly, though we will see in Section 6.3 that, in fact, NTUmin(c, S) and NTUmax(c, S) are independent of the choice of S. Note that the quantity ν(c) from [16] is NTUmin(c).",
                "The second modification (transferable utility) is more intuitively appealing in the context of the maximisation problem, as both assume some degree of co-operation between the agents.",
                "While the second modification can be made without the first, the resulting payment bound TUmin(c, S) is too strong to be a realistic benchmark, at least for general set systems.",
                "In particular, it can be smaller than the total cost of the cheapest feasible set S (see Section 6).",
                "Nevertheless, we provide the definition as well as some results about TUmin(c, S) in the paper, both for completeness and because we believe that it may help to understand which properties of the payment bounds are important for our proofs.",
                "Another possibility would be to introduce an additional constraint P e∈S be ≥P e∈S ce in the definition of TUmin(c, S) (note that this condition holds automatically for TUmax(c, S), as TUmax(c, S) ≥ NTUmax(c, S)); however, such a definition would have no direct game-theoretic interpretation, and some of our results (in particular, the ones in Section 4) would no longer be true.",
                "REMARK 1.",
                "For the payment bounds that are derived from maximisation problems, (i.e., TUmax(c, S) and NTUmax(c, S)), constraints of type (3) are redundant and can be dropped.",
                "Hence, TUmax(c, S) and NTUmax(c, S) are solutions to linear programs, and therefore can be computed in polynomial time as long as we have a separation oracle for constraints in (2).",
                "In contrast, 338 NTUmin(c, S) can be NP-hard to compute even if the size of F is polynomial (see Section 6).",
                "The first and third inequalities in the following observation follow from the fact that condition (1∗ ) is strictly weaker than condition (1).",
                "PROPOSITION 1.",
                "TUmin(c, S) ≤ NTUmin(c, S) ≤ NTUmax(c, S) ≤ TUmax(c, S).",
                "Let M be a truthful mechanism for (E, F).",
                "Let pM(c) denote the total payments of M when the actual costs are c. A <br>frugality</br> ratio of M with respect to a payment bound is the ratio between the payment of M and this payment bound.",
                "In particular, φTUmin(M) = sup c pM(c)/TUmin(c), φTUmax(M) = sup c pM(c)/TUmax(c), φNTUmin(M) = sup c pM(c)/NTUmin(c), φNTUmax(M) = sup c pM(c)/NTUmax(c).",
                "We conclude this section by showing that there exist set systems and respective cost vectors for which all four payment bounds are different.",
                "In the next section, we quantify this difference, both for general set systems, and for specific types of set systems, such as path auctions or vertex cover auctions.",
                "EXAMPLE 1.",
                "Consider the shortest-path auction on the graph of Figure 1.",
                "The cheapest feasible sets are all paths from A to D. It can be verified, using the reasoning of Propositions 2 and 3 below, that for the cost vector cAB = cCD = 2, cBC = 1, cAC = cBD = 5, we have • TUmax(c) = 10 (with bAB = bCD = 5, bBC = 0), • NTUmax(c) = 9 (with bAB = bCD = 4, bBC = 1), • NTUmin(c) = 7 (with bAB = bCD = 2, bBC = 3), • TUmin(c) = 5 (with bAB = bCD = 0, bBC = 5). 4.",
                "COMPARING PAYMENT BOUNDS 4.1 Path auctions We start by showing that for path auctions any two consecutive payment bounds can differ by at least a factor of 2.",
                "PROPOSITION 2.",
                "There is an instance of the shortest-path problem for which we have NTUmax(c)/NTUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is due to David Kempe [17].",
                "Consider the graph of Figure 1 with the edge costs cAB = cBC = cCD = 0, cAC = cBD = 1.",
                "Under these costs, ABCD is the cheapest path.",
                "The inequalities in (2) are bAB + bBC ≤ cAC = 1, bBC + bCD ≤ cBD = 1.",
                "By condition (3), both of these inequalities must be tight (the former one is the only inequality involving bAB, and the latter one is the only inequality involving bCD).",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 0, bCD ≥ 0.",
                "Now, if the goal is to maximise bAB + bBC + bCD, the best choice is bAB = bCD = 1, bBC = 0, so NTUmax(c) = 2.",
                "On the other hand, if the goal is to minimise bAB + bBC + bCD, one should set bAB = bCD = 0, bBC = 1, so NTUmin(c) = 1.",
                "PROPOSITION 3.",
                "There is an instance of the shortest-path problem for which we have TUmax(c)/NTUmax(c) ≥ 2.",
                "PROOF.",
                "Again, consider the graph of Figure 1.",
                "Let the edge costs be cAB = cCD = 0, cBC = 1, cAC = cBD = 1.",
                "ABCD is the lexicographically-least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "The inequalities in (2) are the same as in the previous example, and by the same argument both of them are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 1, bCD ≥ 0.",
                "Our goal is to maximise bAB + bBC + bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 0, bBC = 1, so NTUmax(c) = 1.",
                "Otherwise, we can set bAB = bCD = 1, bBC = 0, so TUmax(c) ≥ 2.",
                "PROPOSITION 4.",
                "There is an instance of the shortest-path problem for which we have NTUmin(c)/TUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is also based on the graph of Figure 1.",
                "The edge costs are cAB = cCD = 1, cBC = 0, cAC = cBD = 1.",
                "ABCD is the lexicographically least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "Again, the inequalities in (2) are the same, and both are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 1, bBC ≥ 0, bCD ≥ 1.",
                "Our goal is to minimise bAB + bBC +bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 1, bBC = 0, so NTUmin(c) = 2.",
                "Otherwise, we can set bAB = bCD = 0, bBC = 1, so TUmin(c) ≤ 1.",
                "In Section 4.4 (Theorem 3), we show that the separation results in Propositions 2, 3, and 4 are optimal. 4.2 Connections between separation results The separation results for path auctions are obtained on the same graph using very similar cost vectors.",
                "It turns out that this is not coincidental.",
                "Namely, we can prove the following theorem.",
                "THEOREM 1.",
                "For any set system (E, F), and any feasible set S, max c TUmax(c, S) NTUmax(c, S) = max c NTUmax(c, S) NTUmin(c, S) , max c NTUmax(c, S) NTUmin(c, S) = max c NTUmin(c, S) TUmin(c, S) , where the maximum is over all cost vectors c for which S is a cheapest feasible set.",
                "The proof of the theorem follows directly from the four lemmas proved below; more precisely, the first equality in Theorem 1 is obtained by combining Lemmas 1 and 2, and the second equality is obtained by combining Lemmas 3 and 4.",
                "We prove Lemma 1 here; the proofs of Lemmas 2- 4 are similar and can be found in the full version of this paper [8].",
                "LEMMA 1.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and TUmax(c, S)/NTUmax(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α.",
                "PROOF.",
                "Suppose that TUmax(c, S) = X and NTUmax(c, S) = Y where X/Y = α.",
                "Assume without loss of generality that S consists of elements 1, . . . , k, and let b1 = (b1 1, . . . , b1 k) and b2 = (b2 1, . . . , b2 k) be the bid vectors that correspond to TUmax(c, S) and NTUmax(c, S), respectively.",
                "Construct the cost vector c by setting ci = ci for i ∈ S, ci = min{ci, b1 i } for i ∈ S. Clearly, S is a cheapest set under c .",
                "Moreover, as the costs of elements outside of S remained the same, the right-hand sides of all constraints in (2) did not change, so any bid vector that satisfies (2) and (3) with respect to c, also satisfies them with respect to c .",
                "We will construct two bid vectors b3 and b4 that satisfy conditions (1), (2), and (3) for the cost vector c , and 339 X X X X X 0 X 12 3 X 4 5 6 Figure 2: Graph that separates payment bounds for vertex cover, n = 7 have P i∈S b3 i = X, P i∈S b4 i = Y .",
                "As NTUmax(c , S) ≥ X and NTUmin(c , S) ≤ Y , this implies the lemma.",
                "We can set b3 i = b1 i : this bid vector satisfies conditions (2) and (3) since b1 does, and we have b1 i ≥ min{ci, b1 i } = ci, which means that b3 satisfies condition (1).",
                "Furthermore, we can set b4 i = b2 i .",
                "Again, b4 satisfies conditions (2) and (3) since b2 does, and since b2 satisfies condition (1), we have b2 i ≥ ci ≥ ci, which means that b4 satisfies condition (1).",
                "LEMMA 2.",
                "Suppose c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and TUmax(c , S)/NTUmax(c , S) ≥ α. LEMMA 3.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmin(c , S)/TUmin(c , S) ≥ α. LEMMA 4.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmin(c, S)/TUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α. 4.3 Vertex-cover auctions In contrast to the case of path auctions, for vertex-cover auctions the gap between NTUmin(c) and NTUmax(c) (and hence between NTUmax(c) and TUmax(c), and between TUmin(c) and NTUmin(c)) can be proportional to the size of the graph.",
                "PROPOSITION 5.",
                "For any n ≥ 3, there is a an n-vertex graph and a cost vector c for which TUmax(c)/NTUmax(c) ≥ n − 2.",
                "PROOF.",
                "The underlying graph consists of an (n − 1)-clique on the vertices X1, . . . , Xn−1, and an extra vertex X0 adjacent to Xn−1.",
                "The costs are cX1 = cX2 = · · · = cXn−2 = 0, cX0 = cXn−1 = 1.",
                "We can assume that S = {X0, X1, . . . , Xn−2} (this is the lexicographically first vertex cover of cost 1).",
                "For this set system, the constraints in (2) are bXi + bX0 ≤ cXn−1 = 1 for i = 1, . . . , n − 2.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bXi = 1 for i = 1, . . . , n − 2, bX0 = 0.",
                "Hence, TUmax(c) ≥ n − 2.",
                "For NTUmax(c), there is an additional constraint bX0 ≥ 1, so the best we can do is to set bXi = 0 for i = 1, . . . , n − 2, bX0 = 1, which implies NTUmax(c) = 1.",
                "Combining Proposition 5 with Lemmas 1 and 3, we derive the following corollaries.",
                "COROLLARY 1.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmax(c)/NTUmin(c) ≥ n − 2.",
                "COROLLARY 2.",
                "For any n ≥ 3, we can construct an instance of the vertex cover problem on a graph of size n that satisfies NTUmin(c)/TUmin(c) ≥ n − 2. j+2ix ij P \\ P ij+2P \\ P yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 P \\ P Figure 3: Proof of Theorem 3: constraints for ˆPij and ˆPij+2 do not overlap 4.4 Upper bounds It turns out that the lower bound proved in the previous subsection is almost tight.",
                "More precisely, the following theorem shows that no two payment bounds can differ by more than a factor of n; moreover, this is the case not just for the vertex cover problem, but for general set systems.",
                "We bound the gap between TUmax(c) and TUmin(c).",
                "Since TUmin(c) ≤ NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), this bound applies to any pair of payment bounds.",
                "THEOREM 2.",
                "For any set system (E, F) and any cost vector c, we have TUmax(c)/TUmin(c) ≤ n. PROOF.",
                "Assume wlog that the winning set S consists of elements 1, . . . , k. Let c1, . . . , ck be the true costs of elements in S, let b1, . . . , bk be their bids that correspond to TUmin(c), and let b1 , . . . , bk be their bids that correspond to TUmax(c).",
                "Consider the conditions (2) and (3) for S. One can pick a subset L of at most k inequalities in (2) so that for each i = 1, . . . , k there is at least one inequality in L that is tight for bi.",
                "Suppose that the jth inequality in L is of the form bi1 + · · · + bit ≤ c(Tj \\ S).",
                "For bi, all inequalities in L are, in fact, equalities.",
                "Hence, by adding up all of them we obtain k P i=1,...,k bi ≥ P j=1,...,k c(Tj \\ S).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c(Tj \\ S).",
                "Combining these two inequalities, we obtain nTUmin(c) ≥ kTUmin(c) ≥ TUmax(c).",
                "REMARK 2.",
                "The final line of the proof of Theorem 2 shows that, in fact, the upper bound on TUmax(c)/TUmin(c) can be strengthened to the size of the winning set, k. Note that in Proposition 5, as well as in Corollaries 1 and 2, k = n−1, so these results do not contradict each other.",
                "For path auctions, this upper bound can be improved to 2, matching the lower bounds of Section 4.1.",
                "THEOREM 3.",
                "For any instance of the shortest path problem, TUmax(c) ≤ 2 TUmin(c).",
                "PROOF.",
                "Given a network (G, s, t), assume without loss of generality that the lexicographically-least cheapest s-t path, P, in G is {e1, . . . , ek}, where e1 = (s, v1), e2 = (v1, v2), . . . , ek = (vk−1, t).",
                "Let c1, . . . , ck be the true costs of e1, . . . , ek, and let b = (b1, . . . , bk) and b = (b1 , . . . , bk ) be bid vectors that correspond to TUmin(c) and TUmax(c), respectively.",
                "For any i = 1, . . . , k, there is a constraint in (2) that is tight for bi with respect to the bid vector b , i.e., an s-t path Pi that avoids ei and satisfies b (P \\Pi) = c(Pi \\P).",
                "We can assume without loss of generality that Pi coincides with P up to some vertex xi, then deviates from P to avoid ei, and finally returns to P at a vertex 340 yi and coincides with P from then on (clearly, it might happen that s = xi or t = yi).",
                "Indeed, if Pi deviates from P more than once, one of these deviations is not necessary to avoid ei and can be replaced with the respective segment of P without increasing the cost of Pi.",
                "Among all paths of this form, let ˆPi be the one with the largest value of yi, i.e., the rightmost one.",
                "This path corresponds to an inequality Ii of the form bxi+1 + · · · + byi ≤ c( ˆPi \\ P).",
                "As in the proof of Theorem 2, we construct a set of tight constraints L such that every variable bi appears in at least one of these constraints; however, now we have to be more careful about the choice of constraints in L. We construct L inductively as follows.",
                "Start by setting L = {I1}.",
                "At the jth step, suppose that all variables up to (but not including) bij appear in at least one inequality in L. Add Iij to L. Note that for any j we have yij+1 > yij .",
                "This is because the inequalities added to L during the first j steps did not cover bij+1 .",
                "See Figure 3.",
                "Since yij+2 > yij+1 , we must also have xij+2 > yij : otherwise, ˆPij+1 would not be the rightmost constraint for bij+1 .",
                "Therefore, the variables in Iij+2 and Iij do not overlap, and hence no bi can appear in more than two inequalities in L. Now we follow the argument of the proof of Theorem 2 to finish.",
                "By adding up all of the (tight) inequalities in L for bi we obtain 2 P i=1,...,k bi ≥ P j=1,...,k c( ˆPj \\ P).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c( ˆPj \\ P), so TUmax(c) ≤ 2TUmin(c). 5.",
                "TRUTHFUL MECHANISMS FOR VERTEX COVER Recall that for a vertex-cover auction on a graph G = (V, E), an allocation rule is an algorithm that takes as input a bid bv for each vertex and returns a vertex cover ˆS of G. As explained in Section 2, we can combine a monotone allocation rule with threshold payments to obtain a truthful auction.",
                "Two natural examples of monotone allocation rules are Aopt, i.e., the algorithm that finds an optimal vertex cover, and the greedy algorithm AGR.",
                "However, Aopt cannot be guaranteed to run in polynomial time unless P = NP and AGR has approximation ratio of log n. Another approximation algorithm for vertex cover, which has approximation ratio 2, is the local ratio algorithm ALR [2, 3].",
                "This algorithm considers the edges of G one by one.",
                "Given an edge e = (u, v), it computes = min{bu, bv} and sets bu = bu − , bv = bv − .",
                "After all edges have been processed, ALR returns the set of vertices {v | bv = 0}.",
                "It is not hard to check that if the order in which the edges are considered is independent of the bids, then this algorithm is monotone as well.",
                "Hence, we can use it to construct a truthful auction that is guaranteed to select a vertex cover whose cost is within a factor of 2 from the optimal.",
                "However, while the quality of the solution produced by ALR is much better than that of AGR, we still need to show that its total payment is not too high.",
                "In the next subsection, we bound the <br>frugality</br> ratio of ALR (and, more generally, all algorithms that satisfy the condition of local optimality, defined later) by 2Δ, where Δ is the maximum degree of G. We then prove a matching lower bound showing that for some graphs the <br>frugality</br> ratio of any truthful auction is at least Δ/2. 5.1 Upper bound We say that an allocation rule is locally optimal if whenever bv >P w∼v bw, the vertex v is not chosen.",
                "Note that for any such rule the threshold bid of v satisfies tv ≤ P w∼v bw.",
                "CLAIM 1.",
                "The algorithms Aopt, AGR, and ALR are locally optimal.",
                "THEOREM 4.",
                "Any vertex cover auction M that has a locally optimal and monotone allocation rule and pays each agent his threshold bid has <br>frugality</br> ratio φNTUmin(M) ≤ 2Δ.",
                "To prove Theorem 4, we first show that the total payment of any locally optimal mechanism does not exceed Δc(V ).",
                "We then demonstrate that NTUmin(c) ≥ c(V )/2.",
                "By combining these two results, the theorem follows.",
                "LEMMA 5.",
                "Consider a graph G = (V, E) with maximum degree Δ.",
                "Let M be a vertex-cover auction on G that satisfies the conditions of Theorem 4.",
                "Then for any cost vector c, the total payment of M satisfies pM(c) ≤ Δc(V ).",
                "PROOF.",
                "First note that any such auction is truthful, so we can assume that each agents bid is equal to his cost.",
                "Let ˆS be the vertex cover selected by M. Then by local optimality pM(c) = X v∈ ˆS tv ≤ X v∈ ˆS X w∼v cw ≤ X w∈V Δcw = Δc(V ).",
                "We now derive a lower bound on TUmax(c); while not essential for the proof of Theorem 4, it helps us build the intuition necessary for that proof.",
                "LEMMA 6.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, TUmax(c, S) ≥ c(V \\ S) PROOF.",
                "For a vertex w with at least one neighbour in S, let d(w) denote the number of neighbours that w has in S. Consider the bid vector b in which, for each v ∈ S, bv = P w∼v,w∈S cw d(w) .",
                "Then P v∈S bv = P v∈S P w∼v,w∈S cw/d(w) = P w /∈S cw = c(V \\ S).",
                "To finish we want to show that b is feasible in the sense that it satisfies (2).",
                "Consider a vertex cover T, and extend the bid vector b by assigning bv = cv for v /∈ S. Then b(T) = c(T \\S)+b(S∩T) ≥ c(T \\S)+ X v∈S∩T X w∈S∩T :w∼v cw d(w) , and since all edges between S ∩ T and S go to S ∩ T, the righthand-side is equal to c(T \\S)+ X w∈S∩T cw = c(T \\S)+c(S ∩T) = c(V \\S) = b(S).",
                "Next, we prove a lower bound on NTUmax(c, S); we will then use it to obtain a lower bound on NTUmin(c).",
                "LEMMA 7.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmax(c, S) ≥ c(V \\ S) PROOF.",
                "If c(S) ≥ c(V \\ S), by condition (1) we are done.",
                "Therefore, for the rest of the proof we assume that c(S) < c(V \\ S).",
                "We show how to construct a bid vector (be)e∈S that satisfies conditions (1) and (2) such that b(S) ≥ c(V \\ S); clearly, this implies NTUmax(c, S) ≥ c(V \\ S).",
                "Recall that a network flow problem is described by a directed graph Γ = (VΓ, EΓ), a source node s ∈ VΓ, a sink node t ∈ VΓ, and a vector of capacity constraints ae, e ∈ EΓ.",
                "Consider a network (VΓ, EΓ) such that VΓ = V ∪{s, t}, EΓ = E1 ∪E2 ∪E3, where E1 = {(s, v) | v ∈ S}, E2 = {(v, w) | v ∈ S, w ∈ 341 V \\ S, (v, w) ∈ E}, E3 = {(w, t) | w ∈ V \\ S}.",
                "Since S is a vertex cover for G, no edge of E can have both of its endpoints in V \\ S, and by construction, E2 contains no edges with both endpoints in S. Therefore, the graph (V, E2) is bipartite with parts (S, V \\ S).",
                "Set the capacity constraints for e ∈ EΓ as follows: a(s,v) = cv, a(w,t) = cw, a(v,w) = +∞ for all v ∈ S, w ∈ V \\ S. Recall that a cut is a partition of the vertices in VΓ into two sets C1 and C2 so that s ∈ C1, t ∈ C2; we denote such a cut by C = (C1, C2).",
                "Abusing notation, we write e = (u, v) ∈ C if u ∈ C1, v ∈ C2 or u ∈ C2, v ∈ C1, and say that such an edge e = (u, v) crosses the cut C. The capacity of a cut C is computed as cap(C) = P (v,w)∈C a(v,w).",
                "We have cap(s, V ∪{t}) = c(S), cap({s} ∪ V, t) = c(V \\ S).",
                "Let Cmin = ({s} ∪ S ∪ W , {t} ∪ S ∪ W ) be a minimum cut in Γ, where S , S ⊆ S, W , W ⊆ V \\ S. See Figure 4.",
                "As cap(Cmin) ≤ cap(s, V ∪ {t}) = c(S) < +∞, and any edge in E2 has infinite capacity, no edge (u, v) ∈ E2 crosses Cmin.",
                "Consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Clearly, C = ({s} ∪ S ∪ W , {t}) is a minimum cut in Γ (otherwise, there would exist a smaller cut for Γ).",
                "As cap(C ) = c(W ), we have c(S ) ≥ c(W ).",
                "Now, consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Similarly, C = ({s}, S ∪ W ∪ {t}) is a minimum cut in Γ , cap(C ) = c(S ).",
                "As the size of a maximum flow from s to t is equal to the capacity of a minimum cut separating s and t, there exists a flow F = (fe)e∈EΓ of size c(S ).",
                "This flow has to saturate all edges between s and S , i.e., f(s,v) = cv for all v ∈ S .",
                "Now, increase the capacities of all edges between s and S to +∞.",
                "In the modified network, the capacity of a minimum cut (and hence the size of a maximum flow) is c(W ), and a maximum flow F = (fe)e∈EΓ can be constructed by greedily augmenting F. Set bv = cv for all v ∈ S , bv = f(s,v) for all v ∈ S .",
                "As F is constructed by augmenting F, we have bv ≥ cv for all v ∈ S, i.e., condition (1) is satisfied.",
                "Now, let us check that no vertex cover T ⊆ V can violate condition (2).",
                "Set T1 = T ∩ S , T2 = T ∩ S , T3 = T ∩ W , T4 = T ∩ W ; our goal is to show that b(S \\ T1) + b(S \\ T2) ≤ c(T3)+c(T4).",
                "Consider all edges (u, v) ∈ E such that u ∈ S \\T1.",
                "If (u, v) ∈ E2 then v ∈ T3 (no edge in E2 can cross the cut), and if u, v ∈ S then v ∈ T1∪T2.",
                "Hence, T1∪T3∪S is a vertex cover for G, and therefore c(T1)+ c(T3)+ c(S ) ≥ c(S) = c(T1)+ c(S \\ T1) + c(S ).",
                "Consequently, c(T3) ≥ c(S \\ T1) = b(S \\ T1).",
                "Now, consider the vertices in S \\T2.",
                "Any edge in E2 that starts in one of these vertices has to end in T4 (this edge has to be covered by T, and it cannot go across the cut).",
                "Therefore, the total flow out of S \\T2 is at most the total flow out of T4, i.e., b(S \\T2) ≤ c(T4).",
                "Hence, b(S \\ T1) + b(S \\ T2) ≤ c(T3) + c(T4).",
                "Finally, we derive a lower bound on the payment bound that is of interest to us, namely, NTUmin(c).",
                "LEMMA 8.",
                "For a vertex cover instance G = (V, E) in which S is a minimum vertex cover, NTUmin(c, S) ≥ c(V \\ S) PROOF.",
                "Suppose for contradiction that c is a cost vector with minimum-cost vertex cover S and NTUmin(c, S) < c(V \\S).",
                "Let b be the corresponding bid vector and let c be a new cost vector with cv = bv for v ∈ S and cv = cv for v ∈ S. Condition (2) guarantees that S is an optimal solution to the cost vector c .",
                "Now compute a bid vector b corresponding to NTUmax(c , S).",
                "We S W S W s t T1 T3 T2 T4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 00 11 11 0 00 1 11 0 00 1 11 0 00 1 11 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00000 0000000000 0000000000 00000 0000000000 0000000000 00000 0000000000 11111 1111111111 1111111111 11111 1111111111 1111111111 11111 1111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 Figure 4: Proof of Lemma 7.",
                "Dashed lines correspond to edges in E \\ E2 claim that bv = cv for any v ∈ S. Indeed, suppose that bv > cv for some v ∈ S (bv = cv for v ∈ S by construction).",
                "As b satisfies conditions (1)-(3), among the inequalities in (2) there is one that is tight for v and the bid vector b.",
                "That is, b(S \\ T) = c(T \\ S).",
                "By the construction of c , c (S \\ T) = c (T \\ S).",
                "Now since bw ≥ cw for all w ∈ S, bv > cv implies b (S \\T) > c (S \\T) = c (T \\S).",
                "But this violates (2).",
                "So we now know b = c .",
                "Hence, we have NTUmax(c , S) = P v∈S bv = NTUmin(c, S) < c(V \\ S), giving a contradiction to the fact that NTUmax(c , S) ≥ c (V \\S) which we proved in Lemma 7.",
                "As NTUmin(c, S) satisfies condition (1), it follows that we have NTUmin(c, S) ≥ c(S).",
                "Together will Lemma 8, this implies NTUmin(c, S) ≥ max{c(V \\ S), c(S)} ≥ c(V )/2.",
                "Combined with Lemma 5, this completes the proof of Theorem 4.",
                "REMARK 3.",
                "As NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), our bound of 2Δ extends to the smaller <br>frugality</br> ratios that we consider, i.e., φNTUmax(M) and φTUmax(M).",
                "It is not clear whether it extends to the larger <br>frugality</br> ratio φTUmin(M).",
                "However, the <br>frugality</br> ratio φTUmin(M) is not realistic because the payment bound TUmin(c) is inappropriately low - we show in Section 6 that TUmin(c) can be significantly smaller than the total cost of a cheapest vertex cover.",
                "Extensions We can also apply our results to monotone vertex-cover algorithms that do not necessarily output locally-optimal solutions.",
                "To do so, we simply take the vertex cover produced by any such algorithm and transform it into a locally-optimal one, considering the vertices in lexicographic order and replacing a vertex v with its neighbours whenever bv > P u∼v bu.",
                "Note that if a vertex u has been added to the vertex cover during this process, it means that it has a neighbour whose bid is higher than bu, so after one pass all vertices in the vertex cover satisfy bv ≤ P u∼v bu.",
                "This procedure is monotone in bids, and it can only decrease the cost of the vertex cover.",
                "Therefore, using it on top of a monotone allocation rule with approx342 imation ratio α, we obtain a monotone locally-optimal allocation rule with approximation ratio α.",
                "Combining it with threshold payments, we get an auction with φNTUmin ≤ 2Δ.",
                "Since any truthful auction has a monotone allocation rule, this procedure transforms any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio. 5.2 Lower bound In this subsection, we prove that the upper bound of Theorem 4 is essentially optimal.",
                "Our proof uses the techniques of [9], where the authors prove a similar result for shortest-path auctions.",
                "THEOREM 5.",
                "For any Δ > 0 and any n, there exist a graph G of maximum degree Δ and size N > n such that for any truthful mechanism M on G we have φNTUmin(M) ≥ Δ/2.",
                "PROOF.",
                "Given n and Δ, set k = n/2Δ .",
                "Let G be the graph that consists of k blocks B1, . . . , Bk of size 2Δ each, where each Bi is a complete bipartite graph with parts Li and Ri, |Li| = |Ri| = Δ.",
                "We will consider two families of cost vectors for G. Under a cost vector x ∈ X, each block Bi has one vertex of cost 1; all other vertices cost 0.",
                "Under a cost vector y ∈ Y , there is one block that has two vertices of cost 1, one in each part, all other blocks have one vertex of cost 1, and all other vertices cost 0.",
                "Clearly, |X| = (2Δ)k , |Y | = k(2Δ)k−1 Δ2 .",
                "We will now construct a bipartite graph W with the vertex set X ∪ Y as follows.",
                "Consider a cost vector y ∈ Y that has two vertices of cost 1 in Bi; let these vertices be vl ∈ Li and vr ∈ Ri.",
                "By changing the cost of either of these vertices to 0, we obtain a cost vector in X.",
                "Let xl and xr be the cost vectors obtained by changing the cost of vl and vr, respectively.",
                "The vertex cover chosen by M(y) must either contain all vertices in Li or it must contain all vertices in Ri.",
                "In the former case, we put in W an edge from y to xl and in the latter case we put in W an edge from y to xr (if the vertex cover includes all of Bi, W contains both of these edges).",
                "The graph W has at least k(2Δ)k−1 Δ2 edges, so there must exist an x ∈ X of degree at least kΔ/2.",
                "Let y1, . . . , ykΔ/2 be the other endpoints of the edges incident to x, and for each i = 1, . . . , kΔ/2, let vi be the vertex whose cost is different under x and yi; note that all vi are distinct.",
                "It is not hard to see that NTUmin(x) ≤ k: the cheapest vertex cover contains the all-0 part of each block, and we can satisfy conditions (1)-(3) by letting one of the vertices in the all-0 part of each block to bid 1, while all other the vertices in the cheapest set bid 0.",
                "On the other hand, by monotonicity of M we have vi ∈ M(x) for i = 1, . . . , kΔ/2 (vi is in the winning set under yi, and x is obtained from yi by decreasing the cost of vi), and moreover, the threshold bid of each vi is at least 1, so the total payment of M on x is at least kΔ/2.",
                "Hence, φNTUmin(M) ≥ M(x)/NTUmin(x) ≥ Δ/2.",
                "REMARK 4.",
                "The lower bound of Theorem 5 can be generalised to randomised mechanisms, where a randomised mechanism is considered to be truthful if it can be represented as a probability distribution over truthful mechanisms.",
                "In this case, instead of choosing the vertex x ∈ X with the highest degree, we put both (y, xl) and (y, xr) into W , label each edge with the probability that the respective part of the block is chosen, and pick x ∈ X with the highest weighted degree.",
                "The argument can be further extended to a more permissive definition of truthfulness for randomised mechanisms, but this discussion is beyond the scope of this paper. 6.",
                "PROPERTIES OF PAYMENT BOUNDS In this section we consider several desirable properties of payment bounds and evaluate the four payment bounds proposed in this paper with respect to them.",
                "The particular properties that we are interested in are independence of the choice of S (Section 6.3), monotonicity (Section 6.4.1), computational hardness (Section 6.4.2), and the relationship with other reasonable bounds, such as the total cost of the cheapest set (Section 6.1), or the total VCG payment (Section 6.2). 6.1 Comparison with total cost Our first requirement is that a payment bound should not be less than the total cost of the selected set.",
                "Payment bounds are used to evaluate the performance of set-system auctions.",
                "The latter have to satisfy individual rationality, i.e., the payment to each agent must be at least as large as his incurred costs; it is only reasonable to require the payment bound to satisfy the same requirement.",
                "Clearly, NTUmax(c) and NTUmin(c) satisfy this requirement due to condition (1), and so does TUmax(c), since TUmax(c) ≥ NTUmax(c).",
                "However, TUmin(c) fails this test.",
                "The example of Proposition 4 shows that for path auctions, TUmin(c) can be smaller than the total cost by a factor of 2.",
                "Moreover, there are set systems and cost vectors for which TUmin(c) is smaller than the cost of the cheapest set S by a factor of Ω(n).",
                "Consider, for example, the vertex-cover auction for the graph of Proposition 5 with the costs cX1 = · · · = cXn−2 = cXn−1 = 1, cX0 = 0.",
                "The cost of a cheapest vertex cover is n − 2, and the lexicographically first vertex cover of cost n−2 is {X0, X1, . . . , Xn−2}.",
                "The constraints in (2) are bXi + bX0 ≤ cXn−1 = 1.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bX1 = · · · = bXn−2 = 0, bX0 = 1, which means that TUmin(c) ≤ 1.",
                "This observation suggests that the payment bound TUmin(c) is too strong to be realistic, since it can be substantially lower than the cost of the cheapest feasible set.",
                "Nevertheless, some of the positive results that were proved in [16] for NTUmin(c) go through for TUmin(c) as well.",
                "In particular, one can show that if the feasible sets are the bases of a monopolyfree matroid, then φTUmin(VCG) = 1.",
                "To show that φTUmin(VCG) is at most 1, one must prove that the VCG payment is at most TUmin(c).",
                "This is shown for NTUmin(c) in the first paragraph of the proof of Theorem 5 in [16].",
                "Their argument does not use condition (1) at all, so it also applies to TUmin(c).",
                "On the other hand, φTUmin(VCG) ≥ 1 since φTUmin(VCG) ≥ φNTUmin(VCG) and φNTUmin(VCG) ≥ 1 by Proposition 7 of [16] (and also by Proposition 6 below). 6.2 Comparison with VCG payments Another measure of suitability for payment bounds is that they should not result in <br>frugality</br> ratios that are less then 1 for wellknown truthful mechanisms.",
                "If this is indeed the case, the payment bound may be too weak, as it becomes too easy to design mechanisms that perform well with respect to it.",
                "It particular, a reasonable requirement is that a payment bound should not exceed the total payment of the classical VCG mechanism.",
                "The following proposition shows that NTUmax(c), and therefore also NTUmin(c) and TUmin(c), do not exceed the VCG payment pVCG(c).",
                "The proof essentially follows the argument of Proposition 7 of [16] and can be found in the full version of this paper [8].",
                "PROPOSITION 6. φNTUmax(VCG) ≥ 1.",
                "Proposition 6 shows that none of the payment bounds TUmin(c), NTUmin(c) and NTUmax(c) exceeds the payment of VCG.",
                "However, the payment bound TUmax(c) can be larger that the total 343 VCG payment.",
                "In particular, for the instance in Proposition 5, the VCG payment is smaller than TUmax(c) by a factor of n − 2.",
                "We have already seen that TUmax(c) ≥ n − 2.",
                "On the other hand, under VCG, the threshold bid of any Xi, i = 1, . . . , n − 2, is 0: if any such vertex bids above 0, it is deleted from the winning set together with X0 and replaced with Xn−1.",
                "Similarly, the threshold bid of X0 is 1, because if X0 bids above 1, it can be replaced with Xn−1.",
                "So the VCG payment is 1.",
                "This result is not surprising: the definition of TUmax(c) implicitly assumes there is co-operation between the agents, while the computation of VCG payments does not take into account any interaction between them.",
                "Indeed, co-operation enables the agents to extract higher payments under VCG.",
                "That is, VCG is not groupstrategyproof.",
                "This suggests that as a payment bound, TUmax(c) may be too liberal, at least in a context where there is little or no co-operation between agents.",
                "Perhaps TUmax(c) can be a good benchmark for measuring the performance of mechanisms designed for agents that can form coalitions or make side payments to each other, in particular, group-strategyproof mechanisms.",
                "Another setting in which bounding φTUmax is still of some interest is when, for the underlying problem, the optimal allocation and VCG payments are NP-hard to compute.",
                "In this case, finding a polynomial-time computable mechanism with good <br>frugality</br> ratio with respect to TUmax(c) is a non-trivial task, while bounding the <br>frugality</br> ratio with respect to more challenging payment bounds could be too difficult.",
                "To illustrate this point, compare the proofs of Lemma 6 and Lemma 7: both require some effort, but the latter is much more difficult than the former. 6.3 The choice of S All payment bounds defined in this paper correspond to the total bid of all elements in the cheapest feasible set, where ties are broken lexicographically.",
                "While this definition ensures that our payment bounds are well-defined, the particular choice of the drawresolution rule appears arbitrary, and one might wonder if our payment bounds are sufficiently robust to be independent of this choice.",
                "It turns out that is indeed the case for NTUmin(c) and NTUmax(c), i.e., these bounds do not depend on the draw-resolution rule.",
                "To see this, suppose that two feasible sets S1 and S2 have the same cost.",
                "In the computation of NTUmin(c, S1), all vertices in S1 \\S2 would have to bid their true cost, since otherwise S2 would become cheaper than S1.",
                "Hence, any bid vector for S1 can only have be = ce for e ∈ S1 ∩ S2, and hence constitutes a valid bid vector for S2 and vice versa.",
                "A similar argument applies to NTUmax(c).",
                "However, for TUmin(c) and TUmax(c) this is not the case.",
                "For example, consider the set system E = {e1, e2, e3, e4, e5}, F = {S1 = {e1, e2}, S2 = {e2, e3, e4}, S3 = {e4, e5}} with the costs c1 = 2, c2 = c3 = c4 = 1, c5 = 3.",
                "The cheapest sets are S1 and S2.",
                "Now TUmax(c, S1) ≤ 4, as the total bid of the elements in S1 cannot exceed the total cost of S3.",
                "On the other hand, TUmax(c, S2) ≥ 5, as we can set b2 = 3, b3 = 0, b4 = 2.",
                "Similarly, TUmin(c, S1) = 4, because the inequalities in (2) are b1 ≤ 2 and b1 + b2 ≤ 4.",
                "But TUmin(c, S2) ≤ 3 as we can set b2 = 1, b3 = 2, b4 = 0. 6.4 Negative results for NTUmin(c) and TUmin(c) The results in [16] and our vertex cover results are proved for the <br>frugality</br> ratio φNTUmin.",
                "Indeed, it can be argued that φNTUmin is the best definition of <br>frugality</br> ratio, because among all reasonable payment bounds (i.e., ones that are at least as large as the cost of the cheapest feasible set), it is most demanding of the algorithm.",
                "However, NTUmin(c) is not always the easiest or the most natural payment bound to work with.",
                "In this subsection, we discuss several disadvantages of NTUmin(c) (and also TUmin(c)) as compared to NTUmax(c) and TUmax(c). 6.4.1 Nonmonotonicity The first problem with NTUmin(c) is that it is not monotone with respect to F, i.e., it may increase when one adds a feasible set to F. (It is, however, monotone in the sense that a losing agent cannot become a winner by raising his cost.)",
                "Intuitively, a good payment bound should satisfy this monotonicity requirement, as adding a feasible set increases the competition, so it should drive the prices down.",
                "Note that this indeed the case for NTUmax(c) and TUmax(c) since a new feasible set adds a constraint in (2), thus limiting the solution space for the respective linear program.",
                "PROPOSITION 7.",
                "Adding a feasible set to F can increase the value of NTUmin(c) by a factor of Ω(n).",
                "PROOF.",
                "Let E = {x, xx, y1, . . . , yn, z1, . . . , zn}.",
                "Set Y = {y1, . . . , yn}, S = Y ∪ {x}, Ti = Y \\ {yi} ∪ {zi}, i = 1, . . . , n, and suppose that F = {S, T1, . . . , Tn}.",
                "The costs are cx = 0, cxx = 0, cyi = 0, czi = 1 for i = 1, . . . , n. Note that S is the cheapest feasible set.",
                "Let F = F ∪ {T0}, where T0 = Y ∪ {xx}.",
                "For F, the bid vector by1 = · · · = byn = 0, bx = 1 satisfies (1), (2), and (3), so NTUmin(c) ≤ 1.",
                "For F , S is still the lexicographically-least cheapest set.",
                "Any optimal solution has bx = 0 (by constraint in (2) with T0).",
                "Condition (3) for yi implies bx + byi = czi = 1, so byi = 1 and NTUmin(c) = n. For path auctions, it has been shown [18] that NTUmin(c) is non-monotone in a slightly different sense, i.e., with respect to adding a new edge (agent) rather than a new feasible set (a team of existing agents).",
                "REMARK 5.",
                "We can also show that NTUmin(c) is non-monotone for vertex cover.",
                "In this case, adding a new feasible set corresponds to deleting edges from the graph.",
                "It turns out that deleting a single edge can increase NTUmin(c) by a factor of n − 2; the construction is similar to that of Proposition 5. 6.4.2 NP-Hardness Another problem with NTUmin(c, S) is that it is NP-hard to compute even if the number of feasible sets is polynomial in n. Again, this puts it at a disadvantage compared to NTUmax(c, S) and TUmax(c, S) (see Remark 1).",
                "THEOREM 6.",
                "Computing NTUmin(c) is NP-hard, even when the lexicographically-least feasible set S is given in the input.",
                "PROOF.",
                "We reduce EXACT COVER BY 3-SETS(X3C) to our problem.",
                "An instance of X3C is given by a universe G = {g1, . . . , gn} and a collection of subsets C1, . . . , Cm, Ci ⊂ G, |Ci| = 3, where the goal is to decide whether one can cover G by n/3 of these sets.",
                "Observe that if this is indeed the case, each element of G is contained in exactly one set of the cover.",
                "LEMMA 9.",
                "Consider a minimisation problem P of the following form: Minimise P i=1,...,n bi under conditions (1) bi ≥ 0 for all i = 1, . . . , n; (2) for any j = 1, . . . , k we have P bi∈Sj bi ≤ aj, where Sj ⊆ {b1, . . . , bn}; (3) for each bj , one of the constraints in (2) involving it is tight.",
                "For any such P, one can construct a set system S and a vector of costs c such that NTUmin(c) is the optimal solution to P. PROOF.",
                "The construction is straightforward: there is an element of cost 0 for each bi, an element of cost aj for each aj, the feasible solutions are {b1, . . . , bn}, or any set obtained from {b1, . . . , bn} by replacing the elements in Sj by aj. 344 By this lemma, all we have to do to prove Theorem 6 is to show how to solve X3C by using the solution to a minimisation problem of the form given in Lemma 9.",
                "We do this as follows.",
                "For each Ci, we introduce 4 variables xi, ¯xi, ai, and bi.",
                "Also, for each element gj of G there is a variable dj.",
                "We use the following set of constraints: • In (1), we have constraints xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 for all i = 1, . . . , m, j = 1, . . . , n. • In (2), for all i = 1, . . . , m, we have the following 5 constraints: xi + ¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi + bi ≤ 1.",
                "Also, for all j = 1, . . . , n we have a constraint of the form xi1 + · · · + xik + dj ≤ 1, where Ci1 , . . . , Cik are the sets that contain gj.",
                "The goal is to minimize z = P i(xi + ¯xi + ai + bi) + P j dj.",
                "Observe that for each j, there is only one constraint involving dj , so by condition (3) it must be tight.",
                "Consider the two constraints involving ai.",
                "One of them must be tight, and therefore xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1.",
                "Hence, for any feasible solution to (1)-(3) we have z ≥ m. Now, suppose that there is an exact set cover.",
                "Set dj = 0 for j = 1, . . . , n. Also, if Ci is included in this cover, set xi = 1, ¯xi = ai = bi = 0, otherwise set ¯xi = 1, xi = ai = bi = 0.",
                "Clearly, all inequalities in (2) are satisfied (we use the fact that each element is covered exactly once), and for each variable, one of the constraints involving it is tight.",
                "This assignment results in z = m. Conversely, suppose there is a feasible solution with z = m. As each addend of the form xi + ¯xi + ai + bi contributes at least 1, we have xi + ¯xi + ai + bi = 1 for all i, dj = 0 for all j.",
                "We will now show that for each i, either xi = 1 and ¯xi = 0, or xi = 0 and ¯xi = 1.",
                "For the sake of contradiction, suppose that xi = δ < 1, ¯xi = δ < 1.",
                "As one of the constraints involving ai must be tight, we have ai ≥ min{1 − δ, 1 − δ }.",
                "Similarly, bi ≥ min{1 − δ, 1 − δ }.",
                "Hence, xi + ¯xi + ai + bi = 1 = δ +δ +2 min{1−δ, 1−δ } > 1.",
                "To finish the proof, note that for each j = 1, . . . , m we have xi1 + · · · + xik + dj = 1 and dj = 0, so the subsets that correspond to xi = 1 constitute a set cover.",
                "REMARK 6.",
                "In the proofs of Proposition 7 and Theorem 6 all constraints in (1) are of the form be ≥ 0.",
                "Hence, the same results are true for TUmin(c).",
                "REMARK 7.",
                "For shortest-path auctions, the size of F can be superpolynomial.",
                "However, there is a polynomial-time separation oracle for constraints in (2) (to construct one, use any algorithm for finding shortest paths), so one can compute NTUmax(c) and TUmax(c) in polynomial time.",
                "On the other hand, recently and independently it was shown [18] that computing NTUmin(c) for shortest-path auctions is NP-hard. 7.",
                "REFERENCES [1] A. Archer and E. Tardos, Frugal path mechanisms.",
                "In Proceedings of the 13th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 991-999, 2002 [2] R. Bar-Yehuda, K. Bendel, A. Freund, and D. Rawitz, Local ratio: A unified framework for approximation algorithms.",
                "In Memoriam: Shimon Even 1935-2004.",
                "ACM Comput.",
                "Surv., 36(4):422-463, 2004 [3] R. Bar-Yehuda and S. Even, A local-ratio theorem for approximating the weighted vertex cover problem.",
                "Annals of Discrete Mathematics, 25:27-46, 1985 [4] E. Clarke, Multipart pricing of public goods.",
                "Public Choice, 8:17-33, 1971 [5] G. Calinescu, Bounding the payment of approximate truthful mechanisms.",
                "In Proceedings of the 15th International Symposium on Algorithms and Computation, pages 221-233, 2004 [6] A. Czumaj and A. Ronen, On the expected payment of mechanisms for task allocation.",
                "In Proceedings of the 5th ACM Conference on Electronic Commerce (EC04), 2004 [7] E. Elkind, True costs of cheap labor are hard to measure: edge deletion and VCG payments in graphs.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [8] E. Elkind, L. A. Goldberg, and P. W. Goldberg, <br>frugality</br> ratios and improved truthful mechanisms for vertex cover.",
                "Available from http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai, and K. Steiglitz, <br>frugality</br> in path auctions.",
                "In Proceedings of the 15th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 694-702, 2004 [10] J. Feigenbaum, C. H. Papadimitriou, R. Sami, and S. Shenker, A BGP-based mechanism for lowest-cost routing.",
                "In Proceedings of the 21st Symposium on Principles of Distributed Computing, pages 173-182, 2002 [11] A. Fiat, A. Goldberg, J. Hartline, and A. Karlin, Competitive generalized auctions.",
                "In Proceedings of the 34th Annual ACM Symposium on Theory of Computation, pages 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra and A. Verma, Coalitional games on graphs: core structures, substitutes and <br>frugality</br>.",
                "In Proceedings of the 4th ACM Conference on Electronic Commerce (EC03), 2005 [13] A. Goldberg, J. Hartline, and A. Wright, Competitive auctions and digital goods.",
                "In Proceedings of the 12th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2001 [14] T. Groves, Incentives in teams.",
                "Econometrica, 41(4):617-631, 1973 [15] N. Immorlica, D. Karger, E. Nikolova, and R. Sami, First-price path auctions.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [16] A. R. Karlin, D. Kempe, and T. Tamir, Beyond VCG: <br>frugality</br> of truthful mechanisms.",
                "In Proceedings of the 46th Annual IEEE Symposium on Foundations of Computer Science, pages 615-626, 2005 [17] D. Kempe, Personal communication, 2006 [18] N. Chen, A. R. Karlin, Cheap labor can be expensive, In Proceedings of the 18th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2007 [19] N. Nisan and A. Ronen, Algorithmic mechanism design.",
                "In Proceedings of the 31st Annual ACM Symposium on Theory of Computation, pages 129-140, 1999 [20] A. Ronen and R. Talisman, Towards generic low payment mechanisms for decentralized task allocation.",
                "In Proceedings of the 7th International IEEE Conference on E-Commerce Technology, 2005 [21] K. Talwar, The price of truth: <br>frugality</br> in truthful mechanisms.",
                "In Proceedings of 20th International Symposium on Theoretical Aspects of Computer Science, 2003 [22] W. Vickrey, Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961 345"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Relaciones de \"frugalidad\" y mecanismos veraz mejorados para la cobertura de vértices ∗ Edith Elkind Hebrew University of Jerusalén, Israel, y la Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido, Leslie Ann Ann Goldberg Universidad de Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Livolpool L693BX, Resumen del Reino Unido En las subastas del sistema establecido, hay varios equipos superpuestos de agentes y una tarea que cualquiera de estos equipos puede completar.",
                "Recientemente, Karlin, Kempe y Tamir introdujeron una nueva definición de relación \"frugalidad\" para este problema.",
                "Informalmente, la relación de \"frugalidad\" es la relación del pago total de un mecanismo a un pago deseado.",
                "En este artículo, proponemos una nueva subasta veraz de tiempo polinómico para el problema de cobertura del vértice y vinculamos su relación \"frugalidad\".",
                "Mostramos que la calidad de la solución es con un factor constante de óptima y la relación \"frugalidad\" está dentro de un factor constante del mejor límite del peor de los casos;Esta es la primera subasta para que este problema tenga estas propiedades.",
                "Definen la relación de \"frugalidad\" de un mecanismo como la relación entre su pago total y el costo de la ruta más barata de la ruta seleccionada por el mecanismo.",
                "Muestran que, para una gran clase de mecanismos veraces para este problema, la relación \"frugalidad\" es tan grande como el número de bordes en el camino más corto.",
                "Talwar [21] extiende esta definición de relación de \"frugalidad\" a los sistemas de conjuntos generales, y estudia la relación de \"frugalidad\" del mecanismo VCG clásico [22, 4, 14] para muchos sistemas de conjuntos específicos, como árboles mínimos y cubiertas de establecimiento.",
                "Si bien la definición de relación de \"frugalidad\" propuesta por [1] está bien mootivada y ha sido fundamental para estudiar mecanismos veraces para sistemas establecidos, no es completamente satisfactorio.",
                "Sin embargo, el gráfico no contiene una ruta A-D que sea disjunta de ABCD, y por lo tanto, la relación de \"frugalidad\" de VCG en este gráfico permanece indefinida.",
                "Según esta nueva definición, los autores construyen nuevos mecanismos para el problema de ruta más corto y muestran que el pago excesivo de estos mecanismos está dentro de un factor constante de óptimo.1.1 Nuestros resultados Subastas de cobertura de vértices Proponemos una subasta de tiempo polinomial sincero para la cubierta de vértice que genera una solución cuyo costo está dentro de un factor de 2 de óptimo, y cuya relación \"frugalidad\" es como máximo 2Δ, donde δ es el grado máximo de grado de grado deEl gráfico (Teorema 4).",
                "Complementamos este resultado probando (Teorema 5) que para cualquier δ y N, hay gráficos de grado máximo δ y tamaño θ (n) para los cuales cualquier mecanismo veraz tiene una relación de \"frugalidad\" al menos δ/2.",
                "Esto significa que la calidad de la solución de nuestra subasta es con un factor de 2 de la relación óptima y la \"frugalidad\" está dentro de un factor de 4 de los mejores límites posibles para las entradas en el peor de los casos.",
                "Relaciones de \"frugalidad\" Nuestros resultados de la cubierta de vértice sugieren naturalmente dos modificaciones de la definición de ν en [16].",
                "Ambos documentos se basan en la definición de relación \"frugalidad\" utilizada en [1];Como se mencionó anteriormente, esto significa que sus resultados solo se aplican a gráficos bipartitos.",
                "Talwar [21] muestra que la relación \"frugalidad\" de VCG es como máximo δ.",
                "Este artículo estudia una subasta basada en el algoritmo de asignación codiciosa, que tiene una relación de aproximación de log n.Si bien el enfoque principal de [5] es el problema de cobertura del conjunto más general, los resultados de [5] implican una relación \"frugalidad\" de 2Δ2 para la cubierta del vértice.",
                "Nuestros resultados mejoran en los de [21] ya que nuestro mecanismo es computable en tiempo polinómico, así como en los de [5], ya que nuestro mecanismo tiene una mejor relación de aproximación, y demostramos un límite más fuerte en la relación \"frugalidad\";Además, este límite también se aplica al mecanismo de [5].2.",
                "Ratios de \"frugalidad\" comenzamos reproduciendo la definición de la cantidad ν de [16, definición 4].",
                "Deje que PM (c) denote los pagos totales de M cuando los costos reales son c.Una relación de \"frugalidad\" de M con respecto a un pago limitado es la relación entre el pago de M y este pago limitado.",
                "En la siguiente subsección, vinculamos la relación \"frugalidad\" de ALR (y, en general, en general, todos los algoritmos que satisfacen la condición de optimización local, definida más adelante) en 2Δ, donde δ es el grado máximo de G., luego demostramos una coincidencia de una coincidenciaUn límite inferior que muestra que para algunos gráficos la relación \"frugalidad\" de cualquier subasta veraz es al menos δ/2.5.1 Bound superior Decimos que una regla de asignación es localmente óptima si cada vez que bv> p w∼v bw, el vértice V no se elige.",
                "Cualquier subasta de cobertura de vértice M que tenga una regla de asignación localmente óptima y monótona y paga a cada agente su oferta de umbral tiene una relación de \"frugalidad\" φnumin (M) ≤ 2δ.",
                "Como ntumin (c) ≤ ntumax (c) ≤ tumax (c), nuestro límite de 2δ se extiende a las relaciones de \"frugalidad\" más pequeñas que consideramos, es decir, φnmox (m) y φtumax (m).",
                "No está claro si se extiende a la mayor relación de \"frugalidad\" φtumin (M).",
                "Sin embargo, la relación de \"frugalidad\" φtumin (M) no es realista porque el tumin atado al pago (C) es inapropiadamente baja; mostramos en la Sección 6 que el tumin (c) puede ser significativamente menor que el costo total de una cubierta de vértice más barata.",
                "Por otro lado, φtumin (VCG) ≥ 1 ya que φtumin (VCG) ≥ φntumin (VCG) y φntumin (VCG) ≥ 1 por la Proposición 7 de [16] (y también por la Proposición 6 a continuación).6.2 Comparación con los pagos de VCG Otra medida de idoneidad para los límites de pago es que no deberían dar como resultado relaciones de \"frugalidad\" que son menos de 1 para mecanismos veraces bien conocidos.",
                "En este caso, encontrar un mecanismo computable en tiempo polinómico con buena relación de \"frugalidad\" con respecto a Tumax (c) es una tarea no trivial, mientras que limita la relación de \"frugalidad\" con respecto a los límites de pago más desafiantes podría ser demasiado difícil.",
                "Pero tumin (c, s2) ≤ 3 como podemos establecer b2 = 1, b3 = 2, b4 = 0. 6.4 Resultados negativos para ntumin (c) y tumin (c) Los resultados en [16] y los resultados de nuestra cubierta de vértice sonProbado para la relación \"frugalidad\" φnumin.",
                "De hecho, se puede argumentar que φntumin es la mejor definición de relación \"frugalidad\", porque entre todos los límites de pago razonables (es decir, los que son al menos tan grandes como el costo del conjunto factible más barato), es muy exigente de losalgoritmo.",
                "En Actas de la 6ta Conferencia ACM sobre Comercio Electrónico (EC05), 2005 [8] E. Elkind, L. A. Goldberg y P. W. Goldberg, las proporciones de \"frugalidad\" y los mecanismos veraces mejorados para la cobertura del vértice.",
                "Disponible en http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai y K. Steiglitz, \"Frugalidad\" en las subastas de ruta.",
                "En Actas del 34º Simposio ACM anual sobre Teoría de la Computación, páginas 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra y A. Verma, Juegos de coalición sobre gráficos: estructuras centrales, sustitutos y \"frugalidad\".",
                "En Actas de la 6ta Conferencia ACM sobre Comercio Electrónico (EC05), 2005 [16] A. R. Karlin, D. Kempe y T. Tamir, más allá de VCG: \"frugalidad\" de mecanismos veraz.",
                "En Actas de la 7ª Conferencia Internacional de IEEE sobre tecnología de comercio electrónico, 2005 [21] K. Talwar, El precio de la verdad: \"frugalidad\" en mecanismos veraces."
            ],
            "translated_text": "",
            "candidates": [
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "Frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "Frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad",
                "frugalidad"
            ],
            "error": []
        },
        "vertex cover": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Frugality Ratios And Improved Truthful Mechanisms for <br>vertex cover</br> ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT In set-system auctions, there are several overlapping teams of agents, and a task that can be completed by any of these teams.",
                "The auctioneers goal is to hire a team and pay as little as possible.",
                "Examples of this setting include shortest-path auctions and vertex-cover auctions.",
                "Recently, Karlin, Kempe and Tamir introduced a new definition of frugality ratio for this problem.",
                "Informally, the frugality ratio is the ratio of the total payment of a mechanism to a desired payment bound.",
                "The ratio captures the extent to which the mechanism overpays, relative to perceived fair cost in a truthful auction.",
                "In this paper, we propose a new truthful polynomial-time auction for the <br>vertex cover</br> problem and bound its frugality ratio.",
                "We show that the solution quality is with a constant factor of optimal and the frugality ratio is within a constant factor of the best possible worst-case bound; this is the first auction for this problem to have these properties.",
                "Moreover, we show how to transform any truthful auction into a frugal one while preserving the approximation ratio.",
                "Also, we consider two natural modifications of the definition of Karlin et al., and we analyse the properties of the resulting payment bounds, such as monotonicity, computational hardness, and robustness with respect to the draw-resolution rule.",
                "We study the relationships between the different payment bounds, both for general set systems and for specific set-system auctions, such as path auctions and vertex-cover auctions.",
                "We use these new definitions in the proof of our main result for vertex-cover auctions via a bootstrapping technique, which may be of independent interest.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a set system auction there is a single buyer and many vendors that can provide various services.",
                "It is assumed that the buyers requirements can be satisfied by various subsets of the vendors; these subsets are called the feasible sets.",
                "A widely-studied class of setsystem auctions is path auctions, where each vendor is able to sell access to a link in a network, and the feasible sets are those sets whose links contain a path from a given source to a given destination; the study of these auctions has been initiated in the seminal paper by Nisan and Ronen [19] (see also [1, 10, 9, 6, 15, 7, 20]).",
                "We assume that each vendor has a cost of providing his services, but submits a possibly larger bid to the auctioneer.",
                "Based on these bids, the auctioneer selects a feasible subset of vendors, and makes payments to the vendors in this subset.",
                "Each selected vendor enjoys a profit of payment minus cost.",
                "Vendors want to maximise profit, while the buyer wants to minimise the amount he pays.",
                "A natural goal in this setting is to design a truthful auction, in which vendors have an incentive to bid their true cost.",
                "This can be achieved by paying each selected vendor a premium above her bid in such a way that the vendor has no incentive to overbid.",
                "An interesting question in mechanism design is how much the auctioneer will have to overpay in order to ensure truthful bids.",
                "In the context of path auctions this topic was first addressed by Archer and Tardos [1].",
                "They define the frugality ratio of a mechanism as the ratio between its total payment and the cost of the cheapest path disjoint from the path selected by the mechanism.",
                "They show that, for a large class of truthful mechanisms for this problem, the frugality ratio is as large as the number of edges in the shortest path.",
                "Talwar [21] extends this definition of frugality ratio to general set systems, and studies the frugality ratio of the classical VCG mechanism [22, 4, 14] for many specific set systems, such as minimum spanning trees and set covers.",
                "While the definition of frugality ratio proposed by [1] is wellmotivated and has been instrumental in studying truthful mechanisms for set systems, it is not completely satisfactory.",
                "Consider, for example, the graph of Figure 1 with the costs cAB = cBC = A B C D Figure 1: The diamond graph 336 cCD = 0, cAC = cBD = 1.",
                "This graph is 2-connected and the VCG payment to the winning path ABCD is bounded.",
                "However, the graph contains no A-D path that is disjoint from ABCD, and hence the frugality ratio of VCG on this graph remains undefined.",
                "At the same time, there is no monopoly, that is, there is no vendor that appears in all feasible sets.",
                "In auctions for other types of set systems, the requirement that there exist a feasible solution disjoint from the selected one is even more severe: for example, for vertex-cover auctions (where vendors correspond to the vertices of some underlying graph, and the feasible sets are vertex covers) the requirement means that the graph must be bipartite.",
                "To deal with this problem, Karlin et al. [16] suggest a better benchmark, which is defined for any monopoly-free set system.",
                "This quantity, which they denote by ν, intuitively corresponds to the value of a cheapest Nash equilibrium.",
                "Based on this new definition, the authors construct new mechanisms for the shortest path problem and show that the overpayment of these mechanisms is within a constant factor of optimal. 1.1 Our results <br>vertex cover</br> auctions We propose a truthful polynomial-time auction for <br>vertex cover</br> that outputs a solution whose cost is within a factor of 2 of optimal, and whose frugality ratio is at most 2Δ, where Δ is the maximum degree of the graph (Theorem 4).",
                "We complement this result by proving (Theorem 5) that for any Δ and n, there are graphs of maximum degree Δ and size Θ(n) for which any truthful mechanism has frugality ratio at least Δ/2.",
                "This means that the solution quality of our auction is with a factor of 2 of optimal and the frugality ratio is within a factor of 4 of the best possible bound for worst-case inputs.",
                "To the best of our knowledge, this is the first auction for this problem that enjoys these properties.",
                "Moreover, we show how to transform any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio.",
                "Frugality ratios Our <br>vertex cover</br> results naturally suggest two modifications of the definition of ν in [16].",
                "These modifications can be made independently of each other, resulting in four different payment bounds TUmax, TUmin, NTUmax, and NTUmin, where NTUmin is equal to the original payment bound ν of in [16].",
                "All four payment bounds arise as Nash equilibria of certain games (see the full version of this paper [8]); the differences between them can be seen as the price of initiative and the price of cooperation (see Section 3).",
                "While our main result about <br>vertex cover</br> auctions (Theorem 4) is with respect to NTUmin = ν, we make use of the new definitions by first comparing the payment of our mechanism to a weaker bound NTUmax, and then bootstrapping from this result to obtain the desired bound.",
                "Inspired by this application, we embark on a further study of these payment bounds.",
                "Our results here are as follows: 1.",
                "We observe (Proposition 1) that the four payment bounds always obey a particular order that is independent of the choice of the set system and the cost vector, namely, TUmin ≤ NTUmin ≤ NTUmax ≤ TUmax.",
                "We provide examples (Proposition 5 and Corollaries 1 and 2) showing that for the <br>vertex cover</br> problem any two consecutive bounds can differ by a factor of n − 2, where n is the number of agents.",
                "We then show (Theorem 2) that this separation is almost best possible for general set systems by proving that for any set system TUmax/TUmin ≤ n. In contrast, we demonstrate (Theorem 3) that for path auctions TUmax/TUmin ≤ 2.",
                "We provide examples (Propositions 2, 3 and 4) showing that this bound is tight.",
                "We see this as an argument for the study of vertexcover auctions, as they appear to be more representative of the general team -selection problem than the widely studied path auctions. 2.",
                "We show (Theorem 1) that for any set system, if there is a cost vector for which TUmin and NTUmin differ by a factor of α, there is another cost vector that separates NTUmin and NTUmax by the same factor and vice versa; the same is true for the pairs (NTUmin, NTUmax) and (NTUmax, TUmax).",
                "This symmetry is quite surprising, since, e.g., TUmin and NTUmax are obtained from NTUmin by two very different transformations.",
                "This observation suggests that the four payment bounds should be studied in a unified framework; moreover, it leads us to believe that the bootstrapping technique of Theorem 4 may have other applications. 3.",
                "We evaluate the payment bounds introduced here with respect to a checklist of desirable features.",
                "In particular, we note that the payment bound ν = NTUmin of [16] exhibits some counterintuitive properties, such as nonmonotonicity with respect to adding a new feasible set (Proposition 7), and is NP-hard to compute (Theorem 6), while some of the other payment bounds do not suffer from these problems.",
                "This can be seen as an argument in favour of using weaker but efficiently computable bounds NTUmax and TUmax.",
                "Related work Vertex-cover auctions have been studied in the past by Talwar [21] and Calinescu [5].",
                "Both of these papers are based on the definition of frugality ratio used in [1]; as mentioned before, this means that their results only apply to bipartite graphs.",
                "Talwar [21] shows that the frugality ratio of VCG is at most Δ.",
                "However, since finding the cheapest <br>vertex cover</br> is an NP-hard problem, the VCG mechanism is computationally infeasible.",
                "The first (and, to the best of our knowledge, only) paper to investigate polynomial-time truthful mechanisms for <br>vertex cover</br> is [5].",
                "This paper studies an auction that is based on the greedy allocation algorithm, which has an approximation ratio of log n. While the main focus of [5] is the more general set cover problem, the results of [5] imply a frugality ratio of 2Δ2 for <br>vertex cover</br>.",
                "Our results improve on those of [21] as our mechanism is polynomial-time computable, as well as on those of [5], as our mechanism has a better approximation ratio, and we prove a stronger bound on the frugality ratio; moreover, this bound also applies to the mechanism of [5]. 2.",
                "PRELIMINARIES In most of this paper, we discuss auctions for set systems.",
                "A set system is a pair (E, F), where E is the ground set, |E| = n, and F is a collection of feasible sets, which are subsets of E. Two particular types of set systems are of interest to us - shortest path systems, in which the ground set consists of all edges of a network, and the feasible sets are paths between two specified vertices s and t, and <br>vertex cover</br> systems, in which the elements of the ground set are the vertices of a graph, and the feasible sets are vertex covers of this graph.",
                "In set system auctions, each element e of the ground set is owned by an independent agent and has an associated non-negative cost ce.",
                "The goal of the centre is to select (purchase) a feasible set.",
                "Each element e in the selected set incurs a cost of ce.",
                "The elements that are not selected incur no costs.",
                "The auction proceeds as follows: all elements of the ground set make their bids, the centre selects a feasible set based on the bids and makes payments to the agents.",
                "Formally, an auction is defined by an allocation rule A : Rn → F and a payment rule P : Rn → Rn .",
                "The allocation rule takes as input a vector of bids and decides which of the sets in F should be selected.",
                "The payment rule also takes as input a vector of bids and decides how much to pay to each agent.",
                "The standard requirements are individual rationality, i.e., the payment to each agent should be at least as high as his incurred cost (0 for agents not in the selected set and ce for agents in the 337 selected set) and incentive compatibility, or truthfulness, i.e., each agents dominant strategy is to bid his true cost.",
                "An allocation rule is monotone if an agent cannot increase his chance of getting selected by raising his bid.",
                "Formally, for any bid vector b and any e ∈ E, if e ∈ A(b) then e ∈ A(b1, . . . , be, . . . , bn) for any be > be.",
                "Given a monotone allocation rule A and a bid vector b, the threshold bid te of an agent e ∈ A(b) is the highest bid of this agent that still wins the auction, given that the bids of other participants remain the same.",
                "Formally, te = sup{be ∈ R | e ∈ A(b1, . . . , be, . . . , bn)}.",
                "It is well known (see, e.g. [19, 13]) that any auction that has a monotone allocation rule and pays each agent his threshold bid is truthful; conversely, any truthful auction has a monotone allocation rule.",
                "The VCG mechanism is a truthful mechanism that maximises the social welfare and pays 0 to the losing agents.",
                "For set system auctions, this simply means picking a cheapest feasible set, paying each agent in the selected set his threshold bid, and paying 0 to all other agents.",
                "Note, however, that the VCG mechanism may be difficult to implement, since finding a cheapest feasible set may be intractable.",
                "If U is a set of agents, c(U) denotes P w∈U cw.",
                "Similarly, b(U) denotes P w∈U bw. 3.",
                "FRUGALITY RATIOS We start by reproducing the definition of the quantity ν from [16, Definition 4].",
                "Let (E, F) be a set system and let S be a cheapest feasible set with respect to the true costs ce.",
                "Then ν(c, S) is the solution to the following optimisation problem.",
                "Minimise B = P e∈S be subject to (1) be ≥ ce for all e ∈ E (2) P e∈S\\T be ≤ P e∈T \\S ce for all T ∈ F (3) for every e ∈ S, there is a Te ∈ F such that e ∈ Te andP e ∈S\\Te be = P e ∈Te\\S ce The bound ν(c, S) can be seen as an outcome of a two-stage process, where first each agent e ∈ S makes a bid be stating how much it wants to be paid, and then the centre decides whether to accept these bids.",
                "The behaviour of both parties is affected by the following considerations.",
                "From the centres point of view, the set S must remain the most attractive choice, i.e., it must be among the cheapest feasible sets under the new costs ce = ce for e ∈ S, ce = be for e ∈ S (condition (2)).",
                "The reason for that is that if (2) is violated for some set T, the centre would prefer T to S. On the other hand, no agent would agree to a payment that does not cover his costs (condition (1)), and moreover, each agent tries to maximise his profit by bidding as high as possible, i.e., none of the agents can increase his bid without violating condition (2) (condition (3)).",
                "The centre wants to minimise the total payout, so ν(c, S) corresponds to the best possible outcome from the centres point of view.",
                "This definition captures many important aspects of our intuition about fair payments.",
                "However, it can be modified in two ways, both of which are still quite natural, but result in different payment bounds.",
                "First, we can consider the worst rather than the best possible outcome for the centre.",
                "That is, we can consider the maximum total payment that the agents can extract by jointly selecting their bids subject to (1), (2), and (3).",
                "Such a bound corresponds to maximising B subject to (1), (2), and (3) rather than minimising it.",
                "If it is the agents who make the original bids (rather than the centre), this kind of bidding behaviour is plausible.",
                "On the other hand, in a game in which the centre proposes payments to the agents in S and the agents accept them as long as (1), (2) and (3) are satisfied, we would be likely to observe a total payment of ν(c, S).",
                "Hence, the difference between these two definitions can be seen as the price of initiative.",
                "Second, the agents may be able to make payments to each other.",
                "In this case, if they can extract more money from the centre by agreeing on a vector of bids that violates individual rationality (i.e., condition (1)) for some bidders, they might be willing to do so, as the agents who are paid below their costs will be compensated by other members of the group.",
                "The bids must still be realistic, i.e., they have to satisfy be ≥ 0.",
                "The resulting change in payments can be seen as the price of co-operation and corresponds to replacing condition (1) with the following weaker condition (1∗ ): be ≥ 0 for all e ∈ E. (1∗ ) By considering all possible combinations of these modifications, we obtain four different payment bounds, namely • TUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1∗ ), (2), and (3). • TUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1∗ ), (2), and (3). • NTUmin(c, S), which is the solution to the optimisation problem Minimise B subject to (1), (2), and (3). • NTUmax(c, S), which is the solution to the optimisation problem Maximise B subject to (1), (2), (3).",
                "The abbreviations TU and NTU correspond, respectively, to transferable utility and non-transferable utility, i.e., the agents ability/inability to make payments to each other.",
                "For concreteness, we will take TUmin(c) to be TUmin(c, S) where S is the lexicographically least amongst the cheapest feasible sets.",
                "We define TUmax(c), NTUmin(c), NTUmax(c) and ν(c) similarly, though we will see in Section 6.3 that, in fact, NTUmin(c, S) and NTUmax(c, S) are independent of the choice of S. Note that the quantity ν(c) from [16] is NTUmin(c).",
                "The second modification (transferable utility) is more intuitively appealing in the context of the maximisation problem, as both assume some degree of co-operation between the agents.",
                "While the second modification can be made without the first, the resulting payment bound TUmin(c, S) is too strong to be a realistic benchmark, at least for general set systems.",
                "In particular, it can be smaller than the total cost of the cheapest feasible set S (see Section 6).",
                "Nevertheless, we provide the definition as well as some results about TUmin(c, S) in the paper, both for completeness and because we believe that it may help to understand which properties of the payment bounds are important for our proofs.",
                "Another possibility would be to introduce an additional constraint P e∈S be ≥P e∈S ce in the definition of TUmin(c, S) (note that this condition holds automatically for TUmax(c, S), as TUmax(c, S) ≥ NTUmax(c, S)); however, such a definition would have no direct game-theoretic interpretation, and some of our results (in particular, the ones in Section 4) would no longer be true.",
                "REMARK 1.",
                "For the payment bounds that are derived from maximisation problems, (i.e., TUmax(c, S) and NTUmax(c, S)), constraints of type (3) are redundant and can be dropped.",
                "Hence, TUmax(c, S) and NTUmax(c, S) are solutions to linear programs, and therefore can be computed in polynomial time as long as we have a separation oracle for constraints in (2).",
                "In contrast, 338 NTUmin(c, S) can be NP-hard to compute even if the size of F is polynomial (see Section 6).",
                "The first and third inequalities in the following observation follow from the fact that condition (1∗ ) is strictly weaker than condition (1).",
                "PROPOSITION 1.",
                "TUmin(c, S) ≤ NTUmin(c, S) ≤ NTUmax(c, S) ≤ TUmax(c, S).",
                "Let M be a truthful mechanism for (E, F).",
                "Let pM(c) denote the total payments of M when the actual costs are c. A frugality ratio of M with respect to a payment bound is the ratio between the payment of M and this payment bound.",
                "In particular, φTUmin(M) = sup c pM(c)/TUmin(c), φTUmax(M) = sup c pM(c)/TUmax(c), φNTUmin(M) = sup c pM(c)/NTUmin(c), φNTUmax(M) = sup c pM(c)/NTUmax(c).",
                "We conclude this section by showing that there exist set systems and respective cost vectors for which all four payment bounds are different.",
                "In the next section, we quantify this difference, both for general set systems, and for specific types of set systems, such as path auctions or <br>vertex cover</br> auctions.",
                "EXAMPLE 1.",
                "Consider the shortest-path auction on the graph of Figure 1.",
                "The cheapest feasible sets are all paths from A to D. It can be verified, using the reasoning of Propositions 2 and 3 below, that for the cost vector cAB = cCD = 2, cBC = 1, cAC = cBD = 5, we have • TUmax(c) = 10 (with bAB = bCD = 5, bBC = 0), • NTUmax(c) = 9 (with bAB = bCD = 4, bBC = 1), • NTUmin(c) = 7 (with bAB = bCD = 2, bBC = 3), • TUmin(c) = 5 (with bAB = bCD = 0, bBC = 5). 4.",
                "COMPARING PAYMENT BOUNDS 4.1 Path auctions We start by showing that for path auctions any two consecutive payment bounds can differ by at least a factor of 2.",
                "PROPOSITION 2.",
                "There is an instance of the shortest-path problem for which we have NTUmax(c)/NTUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is due to David Kempe [17].",
                "Consider the graph of Figure 1 with the edge costs cAB = cBC = cCD = 0, cAC = cBD = 1.",
                "Under these costs, ABCD is the cheapest path.",
                "The inequalities in (2) are bAB + bBC ≤ cAC = 1, bBC + bCD ≤ cBD = 1.",
                "By condition (3), both of these inequalities must be tight (the former one is the only inequality involving bAB, and the latter one is the only inequality involving bCD).",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 0, bCD ≥ 0.",
                "Now, if the goal is to maximise bAB + bBC + bCD, the best choice is bAB = bCD = 1, bBC = 0, so NTUmax(c) = 2.",
                "On the other hand, if the goal is to minimise bAB + bBC + bCD, one should set bAB = bCD = 0, bBC = 1, so NTUmin(c) = 1.",
                "PROPOSITION 3.",
                "There is an instance of the shortest-path problem for which we have TUmax(c)/NTUmax(c) ≥ 2.",
                "PROOF.",
                "Again, consider the graph of Figure 1.",
                "Let the edge costs be cAB = cCD = 0, cBC = 1, cAC = cBD = 1.",
                "ABCD is the lexicographically-least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "The inequalities in (2) are the same as in the previous example, and by the same argument both of them are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 0, bBC ≥ 1, bCD ≥ 0.",
                "Our goal is to maximise bAB + bBC + bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 0, bBC = 1, so NTUmax(c) = 1.",
                "Otherwise, we can set bAB = bCD = 1, bBC = 0, so TUmax(c) ≥ 2.",
                "PROPOSITION 4.",
                "There is an instance of the shortest-path problem for which we have NTUmin(c)/TUmin(c) ≥ 2.",
                "PROOF.",
                "This construction is also based on the graph of Figure 1.",
                "The edge costs are cAB = cCD = 1, cBC = 0, cAC = cBD = 1.",
                "ABCD is the lexicographically least cheapest path, so we can assume that S = {AB, BC, CD}.",
                "Again, the inequalities in (2) are the same, and both are, in fact, equalities.",
                "The inequalities in (1) are bAB ≥ 1, bBC ≥ 0, bCD ≥ 1.",
                "Our goal is to minimise bAB + bBC +bCD.",
                "If we have to respect the inequalities in (1), we have to set bAB = bCD = 1, bBC = 0, so NTUmin(c) = 2.",
                "Otherwise, we can set bAB = bCD = 0, bBC = 1, so TUmin(c) ≤ 1.",
                "In Section 4.4 (Theorem 3), we show that the separation results in Propositions 2, 3, and 4 are optimal. 4.2 Connections between separation results The separation results for path auctions are obtained on the same graph using very similar cost vectors.",
                "It turns out that this is not coincidental.",
                "Namely, we can prove the following theorem.",
                "THEOREM 1.",
                "For any set system (E, F), and any feasible set S, max c TUmax(c, S) NTUmax(c, S) = max c NTUmax(c, S) NTUmin(c, S) , max c NTUmax(c, S) NTUmin(c, S) = max c NTUmin(c, S) TUmin(c, S) , where the maximum is over all cost vectors c for which S is a cheapest feasible set.",
                "The proof of the theorem follows directly from the four lemmas proved below; more precisely, the first equality in Theorem 1 is obtained by combining Lemmas 1 and 2, and the second equality is obtained by combining Lemmas 3 and 4.",
                "We prove Lemma 1 here; the proofs of Lemmas 2- 4 are similar and can be found in the full version of this paper [8].",
                "LEMMA 1.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and TUmax(c, S)/NTUmax(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α.",
                "PROOF.",
                "Suppose that TUmax(c, S) = X and NTUmax(c, S) = Y where X/Y = α.",
                "Assume without loss of generality that S consists of elements 1, . . . , k, and let b1 = (b1 1, . . . , b1 k) and b2 = (b2 1, . . . , b2 k) be the bid vectors that correspond to TUmax(c, S) and NTUmax(c, S), respectively.",
                "Construct the cost vector c by setting ci = ci for i ∈ S, ci = min{ci, b1 i } for i ∈ S. Clearly, S is a cheapest set under c .",
                "Moreover, as the costs of elements outside of S remained the same, the right-hand sides of all constraints in (2) did not change, so any bid vector that satisfies (2) and (3) with respect to c, also satisfies them with respect to c .",
                "We will construct two bid vectors b3 and b4 that satisfy conditions (1), (2), and (3) for the cost vector c , and 339 X X X X X 0 X 12 3 X 4 5 6 Figure 2: Graph that separates payment bounds for <br>vertex cover</br>, n = 7 have P i∈S b3 i = X, P i∈S b4 i = Y .",
                "As NTUmax(c , S) ≥ X and NTUmin(c , S) ≤ Y , this implies the lemma.",
                "We can set b3 i = b1 i : this bid vector satisfies conditions (2) and (3) since b1 does, and we have b1 i ≥ min{ci, b1 i } = ci, which means that b3 satisfies condition (1).",
                "Furthermore, we can set b4 i = b2 i .",
                "Again, b4 satisfies conditions (2) and (3) since b2 does, and since b2 satisfies condition (1), we have b2 i ≥ ci ≥ ci, which means that b4 satisfies condition (1).",
                "LEMMA 2.",
                "Suppose c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and TUmax(c , S)/NTUmax(c , S) ≥ α. LEMMA 3.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmax(c, S)/NTUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmin(c , S)/TUmin(c , S) ≥ α. LEMMA 4.",
                "Suppose that c is a cost vector for (E, F) such that S is a cheapest feasible set and NTUmin(c, S)/TUmin(c, S) = α.",
                "Then there is a cost vector c such that S is a cheapest feasible set and NTUmax(c , S)/NTUmin(c , S) ≥ α. 4.3 Vertex-cover auctions In contrast to the case of path auctions, for vertex-cover auctions the gap between NTUmin(c) and NTUmax(c) (and hence between NTUmax(c) and TUmax(c), and between TUmin(c) and NTUmin(c)) can be proportional to the size of the graph.",
                "PROPOSITION 5.",
                "For any n ≥ 3, there is a an n-vertex graph and a cost vector c for which TUmax(c)/NTUmax(c) ≥ n − 2.",
                "PROOF.",
                "The underlying graph consists of an (n − 1)-clique on the vertices X1, . . . , Xn−1, and an extra vertex X0 adjacent to Xn−1.",
                "The costs are cX1 = cX2 = · · · = cXn−2 = 0, cX0 = cXn−1 = 1.",
                "We can assume that S = {X0, X1, . . . , Xn−2} (this is the lexicographically first <br>vertex cover</br> of cost 1).",
                "For this set system, the constraints in (2) are bXi + bX0 ≤ cXn−1 = 1 for i = 1, . . . , n − 2.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bXi = 1 for i = 1, . . . , n − 2, bX0 = 0.",
                "Hence, TUmax(c) ≥ n − 2.",
                "For NTUmax(c), there is an additional constraint bX0 ≥ 1, so the best we can do is to set bXi = 0 for i = 1, . . . , n − 2, bX0 = 1, which implies NTUmax(c) = 1.",
                "Combining Proposition 5 with Lemmas 1 and 3, we derive the following corollaries.",
                "COROLLARY 1.",
                "For any n ≥ 3, we can construct an instance of the <br>vertex cover</br> problem on a graph of size n that satisfies NTUmax(c)/NTUmin(c) ≥ n − 2.",
                "COROLLARY 2.",
                "For any n ≥ 3, we can construct an instance of the <br>vertex cover</br> problem on a graph of size n that satisfies NTUmin(c)/TUmin(c) ≥ n − 2. j+2ix ij P \\ P ij+2P \\ P yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 P \\ P Figure 3: Proof of Theorem 3: constraints for ˆPij and ˆPij+2 do not overlap 4.4 Upper bounds It turns out that the lower bound proved in the previous subsection is almost tight.",
                "More precisely, the following theorem shows that no two payment bounds can differ by more than a factor of n; moreover, this is the case not just for the <br>vertex cover</br> problem, but for general set systems.",
                "We bound the gap between TUmax(c) and TUmin(c).",
                "Since TUmin(c) ≤ NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), this bound applies to any pair of payment bounds.",
                "THEOREM 2.",
                "For any set system (E, F) and any cost vector c, we have TUmax(c)/TUmin(c) ≤ n. PROOF.",
                "Assume wlog that the winning set S consists of elements 1, . . . , k. Let c1, . . . , ck be the true costs of elements in S, let b1, . . . , bk be their bids that correspond to TUmin(c), and let b1 , . . . , bk be their bids that correspond to TUmax(c).",
                "Consider the conditions (2) and (3) for S. One can pick a subset L of at most k inequalities in (2) so that for each i = 1, . . . , k there is at least one inequality in L that is tight for bi.",
                "Suppose that the jth inequality in L is of the form bi1 + · · · + bit ≤ c(Tj \\ S).",
                "For bi, all inequalities in L are, in fact, equalities.",
                "Hence, by adding up all of them we obtain k P i=1,...,k bi ≥ P j=1,...,k c(Tj \\ S).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c(Tj \\ S).",
                "Combining these two inequalities, we obtain nTUmin(c) ≥ kTUmin(c) ≥ TUmax(c).",
                "REMARK 2.",
                "The final line of the proof of Theorem 2 shows that, in fact, the upper bound on TUmax(c)/TUmin(c) can be strengthened to the size of the winning set, k. Note that in Proposition 5, as well as in Corollaries 1 and 2, k = n−1, so these results do not contradict each other.",
                "For path auctions, this upper bound can be improved to 2, matching the lower bounds of Section 4.1.",
                "THEOREM 3.",
                "For any instance of the shortest path problem, TUmax(c) ≤ 2 TUmin(c).",
                "PROOF.",
                "Given a network (G, s, t), assume without loss of generality that the lexicographically-least cheapest s-t path, P, in G is {e1, . . . , ek}, where e1 = (s, v1), e2 = (v1, v2), . . . , ek = (vk−1, t).",
                "Let c1, . . . , ck be the true costs of e1, . . . , ek, and let b = (b1, . . . , bk) and b = (b1 , . . . , bk ) be bid vectors that correspond to TUmin(c) and TUmax(c), respectively.",
                "For any i = 1, . . . , k, there is a constraint in (2) that is tight for bi with respect to the bid vector b , i.e., an s-t path Pi that avoids ei and satisfies b (P \\Pi) = c(Pi \\P).",
                "We can assume without loss of generality that Pi coincides with P up to some vertex xi, then deviates from P to avoid ei, and finally returns to P at a vertex 340 yi and coincides with P from then on (clearly, it might happen that s = xi or t = yi).",
                "Indeed, if Pi deviates from P more than once, one of these deviations is not necessary to avoid ei and can be replaced with the respective segment of P without increasing the cost of Pi.",
                "Among all paths of this form, let ˆPi be the one with the largest value of yi, i.e., the rightmost one.",
                "This path corresponds to an inequality Ii of the form bxi+1 + · · · + byi ≤ c( ˆPi \\ P).",
                "As in the proof of Theorem 2, we construct a set of tight constraints L such that every variable bi appears in at least one of these constraints; however, now we have to be more careful about the choice of constraints in L. We construct L inductively as follows.",
                "Start by setting L = {I1}.",
                "At the jth step, suppose that all variables up to (but not including) bij appear in at least one inequality in L. Add Iij to L. Note that for any j we have yij+1 > yij .",
                "This is because the inequalities added to L during the first j steps did not cover bij+1 .",
                "See Figure 3.",
                "Since yij+2 > yij+1 , we must also have xij+2 > yij : otherwise, ˆPij+1 would not be the rightmost constraint for bij+1 .",
                "Therefore, the variables in Iij+2 and Iij do not overlap, and hence no bi can appear in more than two inequalities in L. Now we follow the argument of the proof of Theorem 2 to finish.",
                "By adding up all of the (tight) inequalities in L for bi we obtain 2 P i=1,...,k bi ≥ P j=1,...,k c( ˆPj \\ P).",
                "On the other hand, all these inequalities appear in condition (2), so they must hold for bi , i.e., P i=1,...,k bi ≤ P j=1,...,k c( ˆPj \\ P), so TUmax(c) ≤ 2TUmin(c). 5.",
                "TRUTHFUL MECHANISMS FOR <br>vertex cover</br> Recall that for a vertex-cover auction on a graph G = (V, E), an allocation rule is an algorithm that takes as input a bid bv for each vertex and returns a <br>vertex cover</br> ˆS of G. As explained in Section 2, we can combine a monotone allocation rule with threshold payments to obtain a truthful auction.",
                "Two natural examples of monotone allocation rules are Aopt, i.e., the algorithm that finds an optimal <br>vertex cover</br>, and the greedy algorithm AGR.",
                "However, Aopt cannot be guaranteed to run in polynomial time unless P = NP and AGR has approximation ratio of log n. Another approximation algorithm for <br>vertex cover</br>, which has approximation ratio 2, is the local ratio algorithm ALR [2, 3].",
                "This algorithm considers the edges of G one by one.",
                "Given an edge e = (u, v), it computes = min{bu, bv} and sets bu = bu − , bv = bv − .",
                "After all edges have been processed, ALR returns the set of vertices {v | bv = 0}.",
                "It is not hard to check that if the order in which the edges are considered is independent of the bids, then this algorithm is monotone as well.",
                "Hence, we can use it to construct a truthful auction that is guaranteed to select a <br>vertex cover</br> whose cost is within a factor of 2 from the optimal.",
                "However, while the quality of the solution produced by ALR is much better than that of AGR, we still need to show that its total payment is not too high.",
                "In the next subsection, we bound the frugality ratio of ALR (and, more generally, all algorithms that satisfy the condition of local optimality, defined later) by 2Δ, where Δ is the maximum degree of G. We then prove a matching lower bound showing that for some graphs the frugality ratio of any truthful auction is at least Δ/2. 5.1 Upper bound We say that an allocation rule is locally optimal if whenever bv >P w∼v bw, the vertex v is not chosen.",
                "Note that for any such rule the threshold bid of v satisfies tv ≤ P w∼v bw.",
                "CLAIM 1.",
                "The algorithms Aopt, AGR, and ALR are locally optimal.",
                "THEOREM 4.",
                "Any <br>vertex cover</br> auction M that has a locally optimal and monotone allocation rule and pays each agent his threshold bid has frugality ratio φNTUmin(M) ≤ 2Δ.",
                "To prove Theorem 4, we first show that the total payment of any locally optimal mechanism does not exceed Δc(V ).",
                "We then demonstrate that NTUmin(c) ≥ c(V )/2.",
                "By combining these two results, the theorem follows.",
                "LEMMA 5.",
                "Consider a graph G = (V, E) with maximum degree Δ.",
                "Let M be a vertex-cover auction on G that satisfies the conditions of Theorem 4.",
                "Then for any cost vector c, the total payment of M satisfies pM(c) ≤ Δc(V ).",
                "PROOF.",
                "First note that any such auction is truthful, so we can assume that each agents bid is equal to his cost.",
                "Let ˆS be the <br>vertex cover</br> selected by M. Then by local optimality pM(c) = X v∈ ˆS tv ≤ X v∈ ˆS X w∼v cw ≤ X w∈V Δcw = Δc(V ).",
                "We now derive a lower bound on TUmax(c); while not essential for the proof of Theorem 4, it helps us build the intuition necessary for that proof.",
                "LEMMA 6.",
                "For a <br>vertex cover</br> instance G = (V, E) in which S is a minimum <br>vertex cover</br>, TUmax(c, S) ≥ c(V \\ S) PROOF.",
                "For a vertex w with at least one neighbour in S, let d(w) denote the number of neighbours that w has in S. Consider the bid vector b in which, for each v ∈ S, bv = P w∼v,w∈S cw d(w) .",
                "Then P v∈S bv = P v∈S P w∼v,w∈S cw/d(w) = P w /∈S cw = c(V \\ S).",
                "To finish we want to show that b is feasible in the sense that it satisfies (2).",
                "Consider a <br>vertex cover</br> T, and extend the bid vector b by assigning bv = cv for v /∈ S. Then b(T) = c(T \\S)+b(S∩T) ≥ c(T \\S)+ X v∈S∩T X w∈S∩T :w∼v cw d(w) , and since all edges between S ∩ T and S go to S ∩ T, the righthand-side is equal to c(T \\S)+ X w∈S∩T cw = c(T \\S)+c(S ∩T) = c(V \\S) = b(S).",
                "Next, we prove a lower bound on NTUmax(c, S); we will then use it to obtain a lower bound on NTUmin(c).",
                "LEMMA 7.",
                "For a <br>vertex cover</br> instance G = (V, E) in which S is a minimum <br>vertex cover</br>, NTUmax(c, S) ≥ c(V \\ S) PROOF.",
                "If c(S) ≥ c(V \\ S), by condition (1) we are done.",
                "Therefore, for the rest of the proof we assume that c(S) < c(V \\ S).",
                "We show how to construct a bid vector (be)e∈S that satisfies conditions (1) and (2) such that b(S) ≥ c(V \\ S); clearly, this implies NTUmax(c, S) ≥ c(V \\ S).",
                "Recall that a network flow problem is described by a directed graph Γ = (VΓ, EΓ), a source node s ∈ VΓ, a sink node t ∈ VΓ, and a vector of capacity constraints ae, e ∈ EΓ.",
                "Consider a network (VΓ, EΓ) such that VΓ = V ∪{s, t}, EΓ = E1 ∪E2 ∪E3, where E1 = {(s, v) | v ∈ S}, E2 = {(v, w) | v ∈ S, w ∈ 341 V \\ S, (v, w) ∈ E}, E3 = {(w, t) | w ∈ V \\ S}.",
                "Since S is a <br>vertex cover</br> for G, no edge of E can have both of its endpoints in V \\ S, and by construction, E2 contains no edges with both endpoints in S. Therefore, the graph (V, E2) is bipartite with parts (S, V \\ S).",
                "Set the capacity constraints for e ∈ EΓ as follows: a(s,v) = cv, a(w,t) = cw, a(v,w) = +∞ for all v ∈ S, w ∈ V \\ S. Recall that a cut is a partition of the vertices in VΓ into two sets C1 and C2 so that s ∈ C1, t ∈ C2; we denote such a cut by C = (C1, C2).",
                "Abusing notation, we write e = (u, v) ∈ C if u ∈ C1, v ∈ C2 or u ∈ C2, v ∈ C1, and say that such an edge e = (u, v) crosses the cut C. The capacity of a cut C is computed as cap(C) = P (v,w)∈C a(v,w).",
                "We have cap(s, V ∪{t}) = c(S), cap({s} ∪ V, t) = c(V \\ S).",
                "Let Cmin = ({s} ∪ S ∪ W , {t} ∪ S ∪ W ) be a minimum cut in Γ, where S , S ⊆ S, W , W ⊆ V \\ S. See Figure 4.",
                "As cap(Cmin) ≤ cap(s, V ∪ {t}) = c(S) < +∞, and any edge in E2 has infinite capacity, no edge (u, v) ∈ E2 crosses Cmin.",
                "Consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Clearly, C = ({s} ∪ S ∪ W , {t}) is a minimum cut in Γ (otherwise, there would exist a smaller cut for Γ).",
                "As cap(C ) = c(W ), we have c(S ) ≥ c(W ).",
                "Now, consider the network Γ = (VΓ , EΓ ), where VΓ = {s} ∪ S ∪ W ∪ {t}, EΓ = {(u, v) ∈ EΓ | u, v ∈ VΓ }.",
                "Similarly, C = ({s}, S ∪ W ∪ {t}) is a minimum cut in Γ , cap(C ) = c(S ).",
                "As the size of a maximum flow from s to t is equal to the capacity of a minimum cut separating s and t, there exists a flow F = (fe)e∈EΓ of size c(S ).",
                "This flow has to saturate all edges between s and S , i.e., f(s,v) = cv for all v ∈ S .",
                "Now, increase the capacities of all edges between s and S to +∞.",
                "In the modified network, the capacity of a minimum cut (and hence the size of a maximum flow) is c(W ), and a maximum flow F = (fe)e∈EΓ can be constructed by greedily augmenting F. Set bv = cv for all v ∈ S , bv = f(s,v) for all v ∈ S .",
                "As F is constructed by augmenting F, we have bv ≥ cv for all v ∈ S, i.e., condition (1) is satisfied.",
                "Now, let us check that no <br>vertex cover</br> T ⊆ V can violate condition (2).",
                "Set T1 = T ∩ S , T2 = T ∩ S , T3 = T ∩ W , T4 = T ∩ W ; our goal is to show that b(S \\ T1) + b(S \\ T2) ≤ c(T3)+c(T4).",
                "Consider all edges (u, v) ∈ E such that u ∈ S \\T1.",
                "If (u, v) ∈ E2 then v ∈ T3 (no edge in E2 can cross the cut), and if u, v ∈ S then v ∈ T1∪T2.",
                "Hence, T1∪T3∪S is a <br>vertex cover</br> for G, and therefore c(T1)+ c(T3)+ c(S ) ≥ c(S) = c(T1)+ c(S \\ T1) + c(S ).",
                "Consequently, c(T3) ≥ c(S \\ T1) = b(S \\ T1).",
                "Now, consider the vertices in S \\T2.",
                "Any edge in E2 that starts in one of these vertices has to end in T4 (this edge has to be covered by T, and it cannot go across the cut).",
                "Therefore, the total flow out of S \\T2 is at most the total flow out of T4, i.e., b(S \\T2) ≤ c(T4).",
                "Hence, b(S \\ T1) + b(S \\ T2) ≤ c(T3) + c(T4).",
                "Finally, we derive a lower bound on the payment bound that is of interest to us, namely, NTUmin(c).",
                "LEMMA 8.",
                "For a <br>vertex cover</br> instance G = (V, E) in which S is a minimum <br>vertex cover</br>, NTUmin(c, S) ≥ c(V \\ S) PROOF.",
                "Suppose for contradiction that c is a cost vector with minimum-cost <br>vertex cover</br> S and NTUmin(c, S) < c(V \\S).",
                "Let b be the corresponding bid vector and let c be a new cost vector with cv = bv for v ∈ S and cv = cv for v ∈ S. Condition (2) guarantees that S is an optimal solution to the cost vector c .",
                "Now compute a bid vector b corresponding to NTUmax(c , S).",
                "We S W S W s t T1 T3 T2 T4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 00 11 11 0 00 1 11 0 00 1 11 0 00 1 11 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00000 0000000000 0000000000 00000 0000000000 0000000000 00000 0000000000 11111 1111111111 1111111111 11111 1111111111 1111111111 11111 1111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 Figure 4: Proof of Lemma 7.",
                "Dashed lines correspond to edges in E \\ E2 claim that bv = cv for any v ∈ S. Indeed, suppose that bv > cv for some v ∈ S (bv = cv for v ∈ S by construction).",
                "As b satisfies conditions (1)-(3), among the inequalities in (2) there is one that is tight for v and the bid vector b.",
                "That is, b(S \\ T) = c(T \\ S).",
                "By the construction of c , c (S \\ T) = c (T \\ S).",
                "Now since bw ≥ cw for all w ∈ S, bv > cv implies b (S \\T) > c (S \\T) = c (T \\S).",
                "But this violates (2).",
                "So we now know b = c .",
                "Hence, we have NTUmax(c , S) = P v∈S bv = NTUmin(c, S) < c(V \\ S), giving a contradiction to the fact that NTUmax(c , S) ≥ c (V \\S) which we proved in Lemma 7.",
                "As NTUmin(c, S) satisfies condition (1), it follows that we have NTUmin(c, S) ≥ c(S).",
                "Together will Lemma 8, this implies NTUmin(c, S) ≥ max{c(V \\ S), c(S)} ≥ c(V )/2.",
                "Combined with Lemma 5, this completes the proof of Theorem 4.",
                "REMARK 3.",
                "As NTUmin(c) ≤ NTUmax(c) ≤ TUmax(c), our bound of 2Δ extends to the smaller frugality ratios that we consider, i.e., φNTUmax(M) and φTUmax(M).",
                "It is not clear whether it extends to the larger frugality ratio φTUmin(M).",
                "However, the frugality ratio φTUmin(M) is not realistic because the payment bound TUmin(c) is inappropriately low - we show in Section 6 that TUmin(c) can be significantly smaller than the total cost of a cheapest <br>vertex cover</br>.",
                "Extensions We can also apply our results to monotone vertex-cover algorithms that do not necessarily output locally-optimal solutions.",
                "To do so, we simply take the <br>vertex cover</br> produced by any such algorithm and transform it into a locally-optimal one, considering the vertices in lexicographic order and replacing a vertex v with its neighbours whenever bv > P u∼v bu.",
                "Note that if a vertex u has been added to the <br>vertex cover</br> during this process, it means that it has a neighbour whose bid is higher than bu, so after one pass all vertices in the <br>vertex cover</br> satisfy bv ≤ P u∼v bu.",
                "This procedure is monotone in bids, and it can only decrease the cost of the <br>vertex cover</br>.",
                "Therefore, using it on top of a monotone allocation rule with approx342 imation ratio α, we obtain a monotone locally-optimal allocation rule with approximation ratio α.",
                "Combining it with threshold payments, we get an auction with φNTUmin ≤ 2Δ.",
                "Since any truthful auction has a monotone allocation rule, this procedure transforms any truthful mechanism for the vertex-cover problem into a frugal one while preserving the approximation ratio. 5.2 Lower bound In this subsection, we prove that the upper bound of Theorem 4 is essentially optimal.",
                "Our proof uses the techniques of [9], where the authors prove a similar result for shortest-path auctions.",
                "THEOREM 5.",
                "For any Δ > 0 and any n, there exist a graph G of maximum degree Δ and size N > n such that for any truthful mechanism M on G we have φNTUmin(M) ≥ Δ/2.",
                "PROOF.",
                "Given n and Δ, set k = n/2Δ .",
                "Let G be the graph that consists of k blocks B1, . . . , Bk of size 2Δ each, where each Bi is a complete bipartite graph with parts Li and Ri, |Li| = |Ri| = Δ.",
                "We will consider two families of cost vectors for G. Under a cost vector x ∈ X, each block Bi has one vertex of cost 1; all other vertices cost 0.",
                "Under a cost vector y ∈ Y , there is one block that has two vertices of cost 1, one in each part, all other blocks have one vertex of cost 1, and all other vertices cost 0.",
                "Clearly, |X| = (2Δ)k , |Y | = k(2Δ)k−1 Δ2 .",
                "We will now construct a bipartite graph W with the vertex set X ∪ Y as follows.",
                "Consider a cost vector y ∈ Y that has two vertices of cost 1 in Bi; let these vertices be vl ∈ Li and vr ∈ Ri.",
                "By changing the cost of either of these vertices to 0, we obtain a cost vector in X.",
                "Let xl and xr be the cost vectors obtained by changing the cost of vl and vr, respectively.",
                "The <br>vertex cover</br> chosen by M(y) must either contain all vertices in Li or it must contain all vertices in Ri.",
                "In the former case, we put in W an edge from y to xl and in the latter case we put in W an edge from y to xr (if the <br>vertex cover</br> includes all of Bi, W contains both of these edges).",
                "The graph W has at least k(2Δ)k−1 Δ2 edges, so there must exist an x ∈ X of degree at least kΔ/2.",
                "Let y1, . . . , ykΔ/2 be the other endpoints of the edges incident to x, and for each i = 1, . . . , kΔ/2, let vi be the vertex whose cost is different under x and yi; note that all vi are distinct.",
                "It is not hard to see that NTUmin(x) ≤ k: the cheapest <br>vertex cover</br> contains the all-0 part of each block, and we can satisfy conditions (1)-(3) by letting one of the vertices in the all-0 part of each block to bid 1, while all other the vertices in the cheapest set bid 0.",
                "On the other hand, by monotonicity of M we have vi ∈ M(x) for i = 1, . . . , kΔ/2 (vi is in the winning set under yi, and x is obtained from yi by decreasing the cost of vi), and moreover, the threshold bid of each vi is at least 1, so the total payment of M on x is at least kΔ/2.",
                "Hence, φNTUmin(M) ≥ M(x)/NTUmin(x) ≥ Δ/2.",
                "REMARK 4.",
                "The lower bound of Theorem 5 can be generalised to randomised mechanisms, where a randomised mechanism is considered to be truthful if it can be represented as a probability distribution over truthful mechanisms.",
                "In this case, instead of choosing the vertex x ∈ X with the highest degree, we put both (y, xl) and (y, xr) into W , label each edge with the probability that the respective part of the block is chosen, and pick x ∈ X with the highest weighted degree.",
                "The argument can be further extended to a more permissive definition of truthfulness for randomised mechanisms, but this discussion is beyond the scope of this paper. 6.",
                "PROPERTIES OF PAYMENT BOUNDS In this section we consider several desirable properties of payment bounds and evaluate the four payment bounds proposed in this paper with respect to them.",
                "The particular properties that we are interested in are independence of the choice of S (Section 6.3), monotonicity (Section 6.4.1), computational hardness (Section 6.4.2), and the relationship with other reasonable bounds, such as the total cost of the cheapest set (Section 6.1), or the total VCG payment (Section 6.2). 6.1 Comparison with total cost Our first requirement is that a payment bound should not be less than the total cost of the selected set.",
                "Payment bounds are used to evaluate the performance of set-system auctions.",
                "The latter have to satisfy individual rationality, i.e., the payment to each agent must be at least as large as his incurred costs; it is only reasonable to require the payment bound to satisfy the same requirement.",
                "Clearly, NTUmax(c) and NTUmin(c) satisfy this requirement due to condition (1), and so does TUmax(c), since TUmax(c) ≥ NTUmax(c).",
                "However, TUmin(c) fails this test.",
                "The example of Proposition 4 shows that for path auctions, TUmin(c) can be smaller than the total cost by a factor of 2.",
                "Moreover, there are set systems and cost vectors for which TUmin(c) is smaller than the cost of the cheapest set S by a factor of Ω(n).",
                "Consider, for example, the vertex-cover auction for the graph of Proposition 5 with the costs cX1 = · · · = cXn−2 = cXn−1 = 1, cX0 = 0.",
                "The cost of a cheapest <br>vertex cover</br> is n − 2, and the lexicographically first <br>vertex cover</br> of cost n−2 is {X0, X1, . . . , Xn−2}.",
                "The constraints in (2) are bXi + bX0 ≤ cXn−1 = 1.",
                "Clearly, we can satisfy conditions (2) and (3) by setting bX1 = · · · = bXn−2 = 0, bX0 = 1, which means that TUmin(c) ≤ 1.",
                "This observation suggests that the payment bound TUmin(c) is too strong to be realistic, since it can be substantially lower than the cost of the cheapest feasible set.",
                "Nevertheless, some of the positive results that were proved in [16] for NTUmin(c) go through for TUmin(c) as well.",
                "In particular, one can show that if the feasible sets are the bases of a monopolyfree matroid, then φTUmin(VCG) = 1.",
                "To show that φTUmin(VCG) is at most 1, one must prove that the VCG payment is at most TUmin(c).",
                "This is shown for NTUmin(c) in the first paragraph of the proof of Theorem 5 in [16].",
                "Their argument does not use condition (1) at all, so it also applies to TUmin(c).",
                "On the other hand, φTUmin(VCG) ≥ 1 since φTUmin(VCG) ≥ φNTUmin(VCG) and φNTUmin(VCG) ≥ 1 by Proposition 7 of [16] (and also by Proposition 6 below). 6.2 Comparison with VCG payments Another measure of suitability for payment bounds is that they should not result in frugality ratios that are less then 1 for wellknown truthful mechanisms.",
                "If this is indeed the case, the payment bound may be too weak, as it becomes too easy to design mechanisms that perform well with respect to it.",
                "It particular, a reasonable requirement is that a payment bound should not exceed the total payment of the classical VCG mechanism.",
                "The following proposition shows that NTUmax(c), and therefore also NTUmin(c) and TUmin(c), do not exceed the VCG payment pVCG(c).",
                "The proof essentially follows the argument of Proposition 7 of [16] and can be found in the full version of this paper [8].",
                "PROPOSITION 6. φNTUmax(VCG) ≥ 1.",
                "Proposition 6 shows that none of the payment bounds TUmin(c), NTUmin(c) and NTUmax(c) exceeds the payment of VCG.",
                "However, the payment bound TUmax(c) can be larger that the total 343 VCG payment.",
                "In particular, for the instance in Proposition 5, the VCG payment is smaller than TUmax(c) by a factor of n − 2.",
                "We have already seen that TUmax(c) ≥ n − 2.",
                "On the other hand, under VCG, the threshold bid of any Xi, i = 1, . . . , n − 2, is 0: if any such vertex bids above 0, it is deleted from the winning set together with X0 and replaced with Xn−1.",
                "Similarly, the threshold bid of X0 is 1, because if X0 bids above 1, it can be replaced with Xn−1.",
                "So the VCG payment is 1.",
                "This result is not surprising: the definition of TUmax(c) implicitly assumes there is co-operation between the agents, while the computation of VCG payments does not take into account any interaction between them.",
                "Indeed, co-operation enables the agents to extract higher payments under VCG.",
                "That is, VCG is not groupstrategyproof.",
                "This suggests that as a payment bound, TUmax(c) may be too liberal, at least in a context where there is little or no co-operation between agents.",
                "Perhaps TUmax(c) can be a good benchmark for measuring the performance of mechanisms designed for agents that can form coalitions or make side payments to each other, in particular, group-strategyproof mechanisms.",
                "Another setting in which bounding φTUmax is still of some interest is when, for the underlying problem, the optimal allocation and VCG payments are NP-hard to compute.",
                "In this case, finding a polynomial-time computable mechanism with good frugality ratio with respect to TUmax(c) is a non-trivial task, while bounding the frugality ratio with respect to more challenging payment bounds could be too difficult.",
                "To illustrate this point, compare the proofs of Lemma 6 and Lemma 7: both require some effort, but the latter is much more difficult than the former. 6.3 The choice of S All payment bounds defined in this paper correspond to the total bid of all elements in the cheapest feasible set, where ties are broken lexicographically.",
                "While this definition ensures that our payment bounds are well-defined, the particular choice of the drawresolution rule appears arbitrary, and one might wonder if our payment bounds are sufficiently robust to be independent of this choice.",
                "It turns out that is indeed the case for NTUmin(c) and NTUmax(c), i.e., these bounds do not depend on the draw-resolution rule.",
                "To see this, suppose that two feasible sets S1 and S2 have the same cost.",
                "In the computation of NTUmin(c, S1), all vertices in S1 \\S2 would have to bid their true cost, since otherwise S2 would become cheaper than S1.",
                "Hence, any bid vector for S1 can only have be = ce for e ∈ S1 ∩ S2, and hence constitutes a valid bid vector for S2 and vice versa.",
                "A similar argument applies to NTUmax(c).",
                "However, for TUmin(c) and TUmax(c) this is not the case.",
                "For example, consider the set system E = {e1, e2, e3, e4, e5}, F = {S1 = {e1, e2}, S2 = {e2, e3, e4}, S3 = {e4, e5}} with the costs c1 = 2, c2 = c3 = c4 = 1, c5 = 3.",
                "The cheapest sets are S1 and S2.",
                "Now TUmax(c, S1) ≤ 4, as the total bid of the elements in S1 cannot exceed the total cost of S3.",
                "On the other hand, TUmax(c, S2) ≥ 5, as we can set b2 = 3, b3 = 0, b4 = 2.",
                "Similarly, TUmin(c, S1) = 4, because the inequalities in (2) are b1 ≤ 2 and b1 + b2 ≤ 4.",
                "But TUmin(c, S2) ≤ 3 as we can set b2 = 1, b3 = 2, b4 = 0. 6.4 Negative results for NTUmin(c) and TUmin(c) The results in [16] and our <br>vertex cover</br> results are proved for the frugality ratio φNTUmin.",
                "Indeed, it can be argued that φNTUmin is the best definition of frugality ratio, because among all reasonable payment bounds (i.e., ones that are at least as large as the cost of the cheapest feasible set), it is most demanding of the algorithm.",
                "However, NTUmin(c) is not always the easiest or the most natural payment bound to work with.",
                "In this subsection, we discuss several disadvantages of NTUmin(c) (and also TUmin(c)) as compared to NTUmax(c) and TUmax(c). 6.4.1 Nonmonotonicity The first problem with NTUmin(c) is that it is not monotone with respect to F, i.e., it may increase when one adds a feasible set to F. (It is, however, monotone in the sense that a losing agent cannot become a winner by raising his cost.)",
                "Intuitively, a good payment bound should satisfy this monotonicity requirement, as adding a feasible set increases the competition, so it should drive the prices down.",
                "Note that this indeed the case for NTUmax(c) and TUmax(c) since a new feasible set adds a constraint in (2), thus limiting the solution space for the respective linear program.",
                "PROPOSITION 7.",
                "Adding a feasible set to F can increase the value of NTUmin(c) by a factor of Ω(n).",
                "PROOF.",
                "Let E = {x, xx, y1, . . . , yn, z1, . . . , zn}.",
                "Set Y = {y1, . . . , yn}, S = Y ∪ {x}, Ti = Y \\ {yi} ∪ {zi}, i = 1, . . . , n, and suppose that F = {S, T1, . . . , Tn}.",
                "The costs are cx = 0, cxx = 0, cyi = 0, czi = 1 for i = 1, . . . , n. Note that S is the cheapest feasible set.",
                "Let F = F ∪ {T0}, where T0 = Y ∪ {xx}.",
                "For F, the bid vector by1 = · · · = byn = 0, bx = 1 satisfies (1), (2), and (3), so NTUmin(c) ≤ 1.",
                "For F , S is still the lexicographically-least cheapest set.",
                "Any optimal solution has bx = 0 (by constraint in (2) with T0).",
                "Condition (3) for yi implies bx + byi = czi = 1, so byi = 1 and NTUmin(c) = n. For path auctions, it has been shown [18] that NTUmin(c) is non-monotone in a slightly different sense, i.e., with respect to adding a new edge (agent) rather than a new feasible set (a team of existing agents).",
                "REMARK 5.",
                "We can also show that NTUmin(c) is non-monotone for <br>vertex cover</br>.",
                "In this case, adding a new feasible set corresponds to deleting edges from the graph.",
                "It turns out that deleting a single edge can increase NTUmin(c) by a factor of n − 2; the construction is similar to that of Proposition 5. 6.4.2 NP-Hardness Another problem with NTUmin(c, S) is that it is NP-hard to compute even if the number of feasible sets is polynomial in n. Again, this puts it at a disadvantage compared to NTUmax(c, S) and TUmax(c, S) (see Remark 1).",
                "THEOREM 6.",
                "Computing NTUmin(c) is NP-hard, even when the lexicographically-least feasible set S is given in the input.",
                "PROOF.",
                "We reduce EXACT COVER BY 3-SETS(X3C) to our problem.",
                "An instance of X3C is given by a universe G = {g1, . . . , gn} and a collection of subsets C1, . . . , Cm, Ci ⊂ G, |Ci| = 3, where the goal is to decide whether one can cover G by n/3 of these sets.",
                "Observe that if this is indeed the case, each element of G is contained in exactly one set of the cover.",
                "LEMMA 9.",
                "Consider a minimisation problem P of the following form: Minimise P i=1,...,n bi under conditions (1) bi ≥ 0 for all i = 1, . . . , n; (2) for any j = 1, . . . , k we have P bi∈Sj bi ≤ aj, where Sj ⊆ {b1, . . . , bn}; (3) for each bj , one of the constraints in (2) involving it is tight.",
                "For any such P, one can construct a set system S and a vector of costs c such that NTUmin(c) is the optimal solution to P. PROOF.",
                "The construction is straightforward: there is an element of cost 0 for each bi, an element of cost aj for each aj, the feasible solutions are {b1, . . . , bn}, or any set obtained from {b1, . . . , bn} by replacing the elements in Sj by aj. 344 By this lemma, all we have to do to prove Theorem 6 is to show how to solve X3C by using the solution to a minimisation problem of the form given in Lemma 9.",
                "We do this as follows.",
                "For each Ci, we introduce 4 variables xi, ¯xi, ai, and bi.",
                "Also, for each element gj of G there is a variable dj.",
                "We use the following set of constraints: • In (1), we have constraints xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 for all i = 1, . . . , m, j = 1, . . . , n. • In (2), for all i = 1, . . . , m, we have the following 5 constraints: xi + ¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi + bi ≤ 1.",
                "Also, for all j = 1, . . . , n we have a constraint of the form xi1 + · · · + xik + dj ≤ 1, where Ci1 , . . . , Cik are the sets that contain gj.",
                "The goal is to minimize z = P i(xi + ¯xi + ai + bi) + P j dj.",
                "Observe that for each j, there is only one constraint involving dj , so by condition (3) it must be tight.",
                "Consider the two constraints involving ai.",
                "One of them must be tight, and therefore xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1.",
                "Hence, for any feasible solution to (1)-(3) we have z ≥ m. Now, suppose that there is an exact set cover.",
                "Set dj = 0 for j = 1, . . . , n. Also, if Ci is included in this cover, set xi = 1, ¯xi = ai = bi = 0, otherwise set ¯xi = 1, xi = ai = bi = 0.",
                "Clearly, all inequalities in (2) are satisfied (we use the fact that each element is covered exactly once), and for each variable, one of the constraints involving it is tight.",
                "This assignment results in z = m. Conversely, suppose there is a feasible solution with z = m. As each addend of the form xi + ¯xi + ai + bi contributes at least 1, we have xi + ¯xi + ai + bi = 1 for all i, dj = 0 for all j.",
                "We will now show that for each i, either xi = 1 and ¯xi = 0, or xi = 0 and ¯xi = 1.",
                "For the sake of contradiction, suppose that xi = δ < 1, ¯xi = δ < 1.",
                "As one of the constraints involving ai must be tight, we have ai ≥ min{1 − δ, 1 − δ }.",
                "Similarly, bi ≥ min{1 − δ, 1 − δ }.",
                "Hence, xi + ¯xi + ai + bi = 1 = δ +δ +2 min{1−δ, 1−δ } > 1.",
                "To finish the proof, note that for each j = 1, . . . , m we have xi1 + · · · + xik + dj = 1 and dj = 0, so the subsets that correspond to xi = 1 constitute a set cover.",
                "REMARK 6.",
                "In the proofs of Proposition 7 and Theorem 6 all constraints in (1) are of the form be ≥ 0.",
                "Hence, the same results are true for TUmin(c).",
                "REMARK 7.",
                "For shortest-path auctions, the size of F can be superpolynomial.",
                "However, there is a polynomial-time separation oracle for constraints in (2) (to construct one, use any algorithm for finding shortest paths), so one can compute NTUmax(c) and TUmax(c) in polynomial time.",
                "On the other hand, recently and independently it was shown [18] that computing NTUmin(c) for shortest-path auctions is NP-hard. 7.",
                "REFERENCES [1] A. Archer and E. Tardos, Frugal path mechanisms.",
                "In Proceedings of the 13th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 991-999, 2002 [2] R. Bar-Yehuda, K. Bendel, A. Freund, and D. Rawitz, Local ratio: A unified framework for approximation algorithms.",
                "In Memoriam: Shimon Even 1935-2004.",
                "ACM Comput.",
                "Surv., 36(4):422-463, 2004 [3] R. Bar-Yehuda and S. Even, A local-ratio theorem for approximating the weighted <br>vertex cover</br> problem.",
                "Annals of Discrete Mathematics, 25:27-46, 1985 [4] E. Clarke, Multipart pricing of public goods.",
                "Public Choice, 8:17-33, 1971 [5] G. Calinescu, Bounding the payment of approximate truthful mechanisms.",
                "In Proceedings of the 15th International Symposium on Algorithms and Computation, pages 221-233, 2004 [6] A. Czumaj and A. Ronen, On the expected payment of mechanisms for task allocation.",
                "In Proceedings of the 5th ACM Conference on Electronic Commerce (EC04), 2004 [7] E. Elkind, True costs of cheap labor are hard to measure: edge deletion and VCG payments in graphs.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [8] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Frugality ratios and improved truthful mechanisms for <br>vertex cover</br>.",
                "Available from http://arxiv.org/abs/cs/0606044, 2006 [9] E. Elkind, A. Sahai, and K. Steiglitz, Frugality in path auctions.",
                "In Proceedings of the 15th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 694-702, 2004 [10] J. Feigenbaum, C. H. Papadimitriou, R. Sami, and S. Shenker, A BGP-based mechanism for lowest-cost routing.",
                "In Proceedings of the 21st Symposium on Principles of Distributed Computing, pages 173-182, 2002 [11] A. Fiat, A. Goldberg, J. Hartline, and A. Karlin, Competitive generalized auctions.",
                "In Proceedings of the 34th Annual ACM Symposium on Theory of Computation, pages 72-81, 2002 [12] R. Garg, V. Kumar, A. Rudra and A. Verma, Coalitional games on graphs: core structures, substitutes and frugality.",
                "In Proceedings of the 4th ACM Conference on Electronic Commerce (EC03), 2005 [13] A. Goldberg, J. Hartline, and A. Wright, Competitive auctions and digital goods.",
                "In Proceedings of the 12th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2001 [14] T. Groves, Incentives in teams.",
                "Econometrica, 41(4):617-631, 1973 [15] N. Immorlica, D. Karger, E. Nikolova, and R. Sami, First-price path auctions.",
                "In Proceedings of the 6th ACM Conference on Electronic Commerce (EC05), 2005 [16] A. R. Karlin, D. Kempe, and T. Tamir, Beyond VCG: frugality of truthful mechanisms.",
                "In Proceedings of the 46th Annual IEEE Symposium on Foundations of Computer Science, pages 615-626, 2005 [17] D. Kempe, Personal communication, 2006 [18] N. Chen, A. R. Karlin, Cheap labor can be expensive, In Proceedings of the 18th Annual ACM-SIAM Symposium on Discrete Algorithms, pages 735-744, 2007 [19] N. Nisan and A. Ronen, Algorithmic mechanism design.",
                "In Proceedings of the 31st Annual ACM Symposium on Theory of Computation, pages 129-140, 1999 [20] A. Ronen and R. Talisman, Towards generic low payment mechanisms for decentralized task allocation.",
                "In Proceedings of the 7th International IEEE Conference on E-Commerce Technology, 2005 [21] K. Talwar, The price of truth: frugality in truthful mechanisms.",
                "In Proceedings of 20th International Symposium on Theoretical Aspects of Computer Science, 2003 [22] W. Vickrey, Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961 345"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Ratios de frugalidad y mecanismos veraces mejorados para la \"cubierta de vértice\" ∗ Edith Elkind Hebreos Universidad de Jerusalén, Israel y la Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido, Leslie Ann Ann Goldberg Universidad de Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of LeiverPoLPool Livolpool L693BX, Resumen del Reino Unido En las subastas del sistema establecido, hay varios equipos superpuestos de agentes y una tarea que cualquiera de estos equipos puede completar.",
                "En este artículo, proponemos una nueva subasta veraz de tiempo polinómico para el problema de la \"cubierta de vértice\" y limitamos su relación de frugalidad.",
                "Según esta nueva definición, los autores construyen nuevos mecanismos para el problema de ruta más corto y muestran que el pago excesivo de estos mecanismos está dentro de un factor constante de óptimo.1.1 Nuestros resultados de subastas de \"cubierta de vértice\" Proponemos una subasta veraz de tiempo polinómico para la \"cubierta de vértice\" que genera una solución cuyo costo está dentro de un factor de 2 de óptimo, y cuya relación de frugalidad es como máximo 2Δ, donde δ es el máximoGrado del gráfico (Teorema 4).",
                "Ratios de frugalidad Nuestros resultados de \"Cubierta de vértice\" sugieren naturalmente dos modificaciones de la definición de ν en [16].",
                "Si bien nuestro resultado principal sobre las subastas de \"cubierta de vértice\" (Teorema 4) es con respecto a Ntumin = ν, hacemos uso de las nuevas definiciones comparando primero el pago de nuestro mecanismo con un NTUMAX más débil, y luego arrancando de este resultado a este resultado aObtenga el límite deseado.",
                "Proporcionamos ejemplos (Proposición 5 y Corolarios 1 y 2) que muestran que para el problema de la \"cubierta de vértice\", cualquiera de los dos límites consecutivos puede diferir en un factor de n - 2, donde n es el número de agentes.",
                "Sin embargo, dado que encontrar la \"cubierta de vértice\" más barata es un problema np-cudo, el mecanismo VCG es computacionalmente inviable.",
                "El primero (y, según nuestro conocimiento, solo) documento para investigar los mecanismos veraces de tiempo polinomial para la \"cobertura de vértice\" es [5].",
                "Este artículo estudia una subasta basada en el algoritmo de asignación codiciosa, que tiene una relación de aproximación de log n.Si bien el enfoque principal de [5] es el problema de la cubierta del conjunto más general, los resultados de [5] implican una relación de frugalidad de 2Δ2 para la \"cubierta de vértice\".",
                "Un sistema establecido es un par (E, F), donde E es el conjunto de tierra, | E |= n, y F es una colección de conjuntos factibles, que son subconjuntos de E. Dos tipos particulares de sistemas de conjuntos son de interés para nosotros, los sistemas de ruta más cortos, en los que el conjunto de tierra consta de todos los bordes de una red, y los factiblesLos conjuntos son rutas entre dos vértices especificados S y T, y los sistemas de \"cubierta de vértice\", en los que los elementos del conjunto de tierra son los vértices de un gráfico, y los conjuntos factibles son cubiertas de vértice de este gráfico.",
                "En la siguiente sección, cuantificamos esta diferencia, tanto para los sistemas de establecimiento general como para los tipos específicos de sistemas establecidos, como subastas de ruta o subastas de \"cubierta de vértice\".",
                "Construiremos dos vectores de oferta B3 y B4 que satisfagan las condiciones (1), (2) y (3) para el vector de costo C, y 339 x x x x x 0 x 12 3 x 4 5 6 Figura 2: Gráfico que separa los límites de pago para\"Cubierta de vértice\", n = 7 tienen p i∈S b3 i = x, p i∈S b4 i = y.",
                "Podemos suponer que s = {x0, x1 ,..., Xn - 2} (esta es la primera \"cubierta de vértice\" lexicográficamente del costo 1).",
                "Para cualquier n ≥ 3, podemos construir una instancia del problema de la \"cubierta del vértice\" en un gráfico de tamaño n que satisface NTUMAX (c)/ntumin (c) ≥ N - 2.",
                "Para cualquier n ≥ 3, podemos construir una instancia del problema de \"cubierta de vértice\" en un gráfico de tamaño n que satisface ntumin (c)/tumin (c) ≥ n - 2. j+2ix ij p \\ p ij+2p\\ P yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 P \\ P Figure 3: Proof of Theorem 3: constraints for ˆPij and ˆPij+2 do not overlap 4.4 Upper bounds ItResulta que el límite inferior probado en la subsección anterior es casi apretado.",
                "Más precisamente, el siguiente teorema muestra que ningún límite de pago puede diferir en más de un factor de N;Además, este es el caso no solo para el problema de la \"cubierta del vértice\", sino para los sistemas generales del conjunto.",
                "Los mecanismos veraces para la \"cubierta de vértice\" recuerdan que para una subasta de cobertura de vértice en un gráfico g = (v, e), una regla de asignación es un algoritmo que toma como entrada una oferta BV para cada vértice y devuelve una \"cubierta de vértice\" ˆSde G. Como se explica en la Sección 2, podemos combinar una regla de asignación monótona con pagos umbral para obtener una subasta veraz.",
                "Dos ejemplos naturales de reglas de asignación monótona son AOPT, es decir, el algoritmo que encuentra una \"cubierta de vértice\" óptima y el algoritmo codicioso Agr.",
                "Sin embargo, no se puede garantizar que AOPT se ejecute en tiempo polinomial a menos que P = NP y AGR tengan una relación de aproximación de log n.Otro algoritmo de aproximación para la \"cubierta del vértice\", que tiene la relación de aproximación 2, es el algoritmo de relación local ALR [2, 3].",
                "Por lo tanto, podemos usarlo para construir una subasta veraz que esté garantizada para seleccionar una \"cubierta de vértice\" cuyo costo está dentro de un factor de 2 desde lo óptimo.",
                "Cualquier subasta de la \"cubierta de vértice\" M que tenga una regla de asignación localmente óptima y monótona y paga a cada agente su oferta de umbral tiene una relación de frugalidad φnumin (m) ≤ 2Δ.",
                "Sea ˆs la \"cubierta de vértice\" seleccionada por M. Entonces por optimización local pm (c) = x v∈ ˆs tv ≤ x v∈ ˆs x w∼v cw ≤ x w∈V ΔCW = ΔC (v).",
                "Para una instancia de \"cubierta de vértice\" g = (v, e) en la que S es una \"cubierta de vértice\" mínima, tumax (c, s) ≥ c (v \\ s) prueba.",
                "Considere una \"cubierta de vértice\" t, y extienda el vector de oferta b asignando bv = cv para v /∈ S. entonces b (t) = c (t \\ s)+b (s∩t) ≥ c (t \\ s)+ X v∈S∩t x w∈S∩t: w∼v cw d (w), y dado que todos los bordes entre s ∩ t y s van a s ∩ t, el lado derecho es igual a c (t \\S)+ x w∈S∩t cw = c (t \\ s)+ c (s ∩t) = c (v \\ s) = b (s).",
                "Para una instancia de \"cubierta de vértice\" g = (v, e) en la que S es una \"cubierta de vértice\" mínima, prueba ntumax (c, s) ≥ c (v \\ s).",
                "Dado que S es una \"cubierta de vértice\" para G, ningún borde de E puede tener ambos puntos finales en V \\ s, y por construcción, E2 no contiene bordes con ambos puntos finales en S. Por lo tanto, el gráfico (V, E2) esbipartito con piezas (s, v \\ s).",
                "Ahora, verifiquemos que ninguna \"cubierta de vértice\" T ⊆ V puede violar la condición (2).",
                "Por lo tanto, T1∪T3∪s es una \"cubierta de vértice\" para G, y por lo tanto C (T1)+ C (T3)+ C (S) ≥ C (S) = C (T1)+ C (S \\ T1)+C (s).",
                "Para una instancia de \"Cubierta de vértice\" G = (V, E) en la que S es un mínimo de \"Cubierta de vértice\", Ntumin (C, S) ≥ C (V \\ s) Prueba.",
                "Supongamos que la contradicción es un vector de costo con \"cubierta de vértice\" de costo mínimo S y Ntumin (C, S) <c (V \\ s).",
                "Sin embargo, la relación de frugalidad φtumin (M) no es realista porque el tumin atado al pago (C) es inapropiadamente bajo: mostramos en la Sección 6 que el tumin (c) puede ser significativamente menor que el costo total de una \"cubierta de vértice\" más barata.",
                "Para hacerlo, simplemente tomamos la \"cubierta de vértice\" producida por cualquier algoritmo de este tipo y lo transformamos en uno localmente óptimo, considerando los vértices en orden lexicográfico y reemplazando un vértice V con sus vecinos cada vez que bv> p u∼v bu.",
                "Tenga en cuenta que si se ha agregado un vértice U a la \"cubierta del vértice\" durante este proceso, significa que tiene un vecino cuya oferta es más alta que BU, por lo que después de un paso de todos los vértices en la \"Cubierta de vértice\" satisface BV ≤ P U∼v bu.",
                "Este procedimiento es monótono en ofertas, y solo puede disminuir el costo de la \"cubierta de vértice\".",
                "La \"cubierta de vértice\" elegida por M (y) debe contener todos los vértices en Li o debe contener todos los vértices en RI.",
                "En el primer caso, pusimos una ventaja de Y a XL y en el último caso ponemos en W un borde de y a XR (si la \"cubierta de vértice\" incluye todo BI, W contiene ambos bordes).",
                "",
                "El costo de una \"cubierta de vértice\" más barata es n - 2, y la primera \"cubierta de vértice\" lexicográficamente del costo n - 2 es {x0, x1 ,..., Xn - 2}.",
                "Pero el tumin (C, S2) ≤ 3, ya que podemos establecer B2 = 1, B3 = 2, B4 = 0. 6.4 Resultados negativos para Ntumin (C) y tumin (C) los resultados en [16] y nuestra \"Cubierta de vértice\"Los resultados se prueban para la relación de frugalidad φnumin.",
                "También podemos mostrar que Ntumin (C) no es monótono para la \"cubierta de vértice\".",
                "Surv., 36 (4): 422-463, 2004 [3] R. Bar-Yehuda y S. incluso, un teorema de relación local para aproximar el problema de \"cubierta de vértice\" ponderada.",
                "En Actas de la 6ta Conferencia ACM sobre Comercio Electrónico (EC05), 2005 [8] E. Elkind, L. A. Goldberg y P. W. Goldberg, Ratios de frugalidad y mecanismos veraz mejorados para la \"cobertura de vértices\"."
            ],
            "translated_text": "",
            "candidates": [
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértice",
                "cubierta de vértices",
                "Cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cobertura de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "Cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "Cubierta de vértice",
                "cubierta del vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta del vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta del vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "Cubierta de vértice",
                "Cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta del vértice",
                "Cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértice",
                "cubierta de vértices",
                "Cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cubierta de vértice",
                "cubierta de vértices",
                "cobertura de vértices"
            ],
            "error": []
        }
    }
}