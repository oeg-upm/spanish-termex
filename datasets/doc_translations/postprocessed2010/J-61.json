{
    "id": "J-61",
    "original_text": "ICE: An Iterative Combinatorial Exchange David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an iterative combinatorial exchange (ICE). The exchange incorporates a tree-based bidding language that is concise and expressive for CEs. Bidders specify lower and upper bounds on their value for different trades. These bounds allow price discovery and useful preference elicitation in early rounds, and allow termination with an efficient trade despite partial information on bidder valuations. All computation in the exchange is carefully optimized to exploit the structure of the bid-trees and to avoid enumerating trades. A proxied interpretation of a revealedpreference activity rule ensures progress across rounds. A VCG-based payment scheme that has been shown to mitigate opportunities for bargaining and strategic behavior is used to determine final payments. The exchange is fully implemented and in a validation phase. Categories and Subject Descriptors: I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms: Algorithms, Economics, Theory. 1. INTRODUCTION Combinatorial exchanges combine and generalize two different mechanisms: double auctions and combinatorial auctions. In a double auction (DA), multiple buyers and sellers trade units of an identical good [20]. In a combinatorial auction (CA), a single seller has multiple heterogeneous items up for sale [11]. Buyers may have complementarities or substitutabilities between goods, and are provided with an expressive bidding language. A common goal in both market designs is to determine the efficient allocation, which is the allocation that maximizes total value. A combinatorial exchange (CE) [24] is a combinatorial double auction that brings together multiple buyers and sellers to trade multiple heterogeneous goods. For example, in an exchange for wireless spectrum, a bidder may declare that she is willing to pay $1 million for a trade where she obtains licenses for New York City, Boston, and Philadelphia, and loses her license for Washington DC. Thus, unlike a DA, a CE allows all participants to express complex valuations via expressive bids. Unlike a CA, a CE allows for fragmented ownership, with multiple buyers and sellers and agents that are both buying and selling. CEs have received recent attention both in the context of wireless spectrum allocation [18] and for airport takeoff and landing slot allocation [3]. In both of these domains there are incumbents with property rights, and it is important to facilitate a complex multi-way reallocation of resources. Another potential application domain for CEs is to resource allocation in shared distributed systems, such as PlanetLab [13]. The instantiation of our general purpose design to specific domains is a compelling next step in our research. This paper presents the first design for an iterative combinatorial exchange (ICE). The genesis of this project was a class, CS 286r Topics at the Interface between Economics and Computer Science, taught at Harvard University in Spring 2004.1 The entire class was dedicated to the design and prototyping of an iterative CE. The ICE design problem is multi-faceted and quite hard. The main innovation in our design is an expressive yet concise tree-based bidding language (which generalizes known languages such as XOR/OR [23]), and the tight coupling of this language with efficient algorithms for price-feedback to guide bidding, winner-determination to determine trades, and revealed-preference activity rules to ensure progress across rounds. The exchange is iterative: bidders express upper and lower valuations on trades by annotating their bid-tree, and then tighten these bounds in response to price feedback in each round. The Threshold payment rule, introduced by Parkes et al. [24], is used to determine final payments. The exchange has a number of interesting theoretical properties. For instance, when there exist linear prices we establish soundness and completeness: for straightforward bidders that adjust their bounds to meet activity rules while keeping their true value within the bounds, the exchange will terminate with the efficient allocation. In addition, the 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Truth Agent Act Rule WD ACC FAIR BALClosing RuleVickreyThreshold DONE ! DONE 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER 2,2 +A +15 +8 +B +15 +8 BUYER 2,2 -A -2 -6 -B -2 -6 SELLER BUYER, buy AB SELLER, sell AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PBUYER = 16 - (4-0) = 12 PSELLER = -12 - (4-0) = -16 PBUYER = 14 PSELLER = -14 Pessim istic O ptim istic = 1 Figure 1: ICE System Flow of Control efficient allocation can often be determined without bidders revealing, or even knowing, their exact value for all trades. This is essential in complex domains where the valuation problem can itself be very challenging for a participant [28]. While we cannot claim that straightforward bidding is an equilibrium of the exchange (and indeed, should not expect to by the Myerson-Satterthwaite impossibility theorem [22]), the Threshold payment rule minimizes the ex post incentive to manipulate across all budget-balanced payment rules. The exchange is implemented in Java and is currently in validation. In describing the exchange we will first provide an overview of the main components and introduce several working examples. Then, we introduce the basic components for a simple one-shot variation in which bidders state their exact values for trades in a single round. We then describe the full iterative exchange, with upper and lower values, price-feedback, activity rules, and termination conditions. We state some theoretical properties of the exchange, and end with a discussion to motivate our main design decisions, and suggest some next steps. 2. AN OVERVIEW OF THE ICE DESIGN The design has four main components, which we will introduce in order through the rest of the paper: • Expressive and concise tree-based bidding language. The language describes values for trades, such as my value for selling AB and buying C is $100, or my value for selling ABC is -$50, with negative values indicating that a bidder must receive a payment for the trade to be acceptable. The language allows bidders to express upper and lower bounds on value, which can be tightened across rounds. • Winner Determination. Winner-determination (WD) is formulated as a mixed-integer program (MIP), with the structure of the bid-trees captured explicitly in the formulation. Comparing the solution at upper and lower values allows for a determination to be made about termination, with progress in intermediate rounds driven by an intermediate valuation and the lower values adopted on termination. • Payments. Payments are computed using the Threshold payment rule [24], with the intermediate valuations adopted in early rounds and lower values adopted on termination. • Price feedback. An approximate price is computed for each item in the exchange in each round, in terms of the intermediate valuations and the provisional trade. The prices are optimized to approximate competitive equilibrium prices, and further optimized to best approximate the current Threshold payments with remaining ties broken to favor prices that are balanced across different items. In computing the prices, we adopt the methods of constraint-generation to exploit the structure of the bidding language and avoid enumerating all feasible trades. The subproblem to generate new constraints is a variation of the WD problem. • Activity rule. A revealed-preference activity rule [1] ensures progress across rounds. In order to remain active, a bidder must tighten bounds so that there is enough information to define a trade that maximizes surplus at the current prices. Another variation on the WD problem is formulated, both to verify that the activity rule is met and also to provide feedback to a bidder to explain how to meet the rule. An outline of the ICE system flow of control is provided in Figure 1. We will return to this example later in the paper. For now, just observe in this two-agent example that the agents state lower and upper bounds that are checked in the activity rule, and then passed to winner-determination (WD), and then through three stages of pricing (accuracy, fairness, balance). On passing the closing rule (in which parameters αeff and αthresh are checked for convergence of the trade and payments), the exchange goes to a last-and-final round. At the end of this round, the trade and payments are finally determined, based on the lower valuations. 2.1 Related Work Many ascending-price one-sided CAs are known in the literature [10, 25, 29]. Direct elicitation approaches have also been proposed for one-sided CAs in which agents respond to explicit queries about their valuations [8, 14, 19]. A number of ascending CAs are designed to work with simple prices on items [12, 17]. The price generation methods that we use in ICE generalize the methods in these earlier papers. Parkes et al. [24] studied sealed-bid combinatorial exchanges and introduced the Threshold payment rule. Subsequently, Krych [16] demonstrated experimentally that the Threshold rule promotes efficient allocations. We are not aware of any previous studies of iterative CEs. Dominant strategy DAs are known for unit demand [20] and also for single-minded agents [2]. No dominant strategy mechanisms are known for the general CE problem. ICE is a hybrid auction design, in that it couples simple item prices to drive bidding in early rounds with combinatorial WD and payments, a feature it shares with the clock-proxy design of Ausubel et al. [1] for one-sided CAs. We adopt a variation on the clock-proxy auctionss revealedpreference activity rule. The bidding language shares some structural elements with the LGB language of Boutilier and Hoos [7], but has very different semantics. Rothkopf et al. [27] also describe a restricted tree-based bidding language. In LGB, the semantics are those of propositional logic, with the same items in an allocation able to satisfy a tree in multiple places. Although this can make LGB especially concise in some settings, the semantics that we propose appear to provide useful locality, so that the value of one component in a tree can be understood independently from the rest of the tree. The idea of capturing the structure of our bidding language explicitly within a mixed-integer programming formulation follows the developments in Boutilier [6]. 3. PRELIMINARIES In our model, we consider a set of goods, indexed {1, . . . , m} and a set of bidders, indexed {1, . . . , n}. The initial allocation of goods is denoted x0 = (x0 1, . . . , x0 n), with x0 i = (x0 i1, . . . , x0 im) and x0 ij ≥ 0 for good j indicating the number 250 of units of good j held by bidder i. A trade λ = (λ1, . . . , λn) denotes the change in allocation, with λi = (λi1, . . . , λim) where λij ∈   is the change in the number of units of item j to bidder i. So, the final allocation is x1 = x0 + λ. Each bidder has a value vi(λi) ∈ ¡ for a trade λi. This value can be positive or negative, and represents the change in value between the final allocation x0 i +λi and the initial allocation x0 i . Utility is quasi-linear, with ui(λi, p) = vi(λi)−p for trade λi and payment p ∈ ¡ . Price p can be negative, indicating the bidder receives a payment for the trade. We use the term payoff interchangeably with utility. Our goal in the ICE design is to implement the efficient trade. The efficient trade, λ∗ , maximizes the total increase in value across bidders. Definition 1 (Efficient trade). The efficient trade λ∗ solves max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Constraints (1) ensure that no agent sells more items than it has in its initial allocation. Constraints (2) provide free disposal, and allows feasible trades to sell more items than are purchased (but not vice versa). Later, we adopt Feas(x0 ) to denote the set of feasible trades, given these constraints and given an initial allocation x0 = (x0 1, . . . , x0 n). 3.1 Working Examples In this section, we provide three simple examples of instances that we will use to illustrate various components of the exchange. All three examples have only one seller, but this is purely illustrative. Example 1. One seller and one buyer, two goods {A, B}, with the seller having an initial allocation of AB. Changes in values for trades: seller buyer AND(−A, −B) AND(+A, +B) -10 +20 The AND indicates that both the buyer and the seller are only interested in trading both goods as a bundle. Here, the efficient (value-maximizing) trade is for the seller to sell AB to the buyer, denoted λ∗ = ([−1, −1], [+1, +1]). Example 2. One seller and four buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD. Changes in values for trades: seller buyer1 buyer 2 buyer 3 buyer 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 The OR indicates that the seller is willing to sell any number of goods. The XOR indicates that buyers 2 and 4 are willing to buy at most one of the two goods in which they are interested. The efficient trade is for bundle AB to go to buyer 1 and bundle CD to buyer 3, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER Example 1: Example 3: 2,2 +C +D BUYER 2 2,2 +A +B BUYER 1 +11 +84,4 -B SELLER -A -C -D Example 2: 1,1 +A +B BUYER 2 2,2 +A +B BUYER 1 +6 +40,4 -B SELLER -C -D-A 1,1 +C +D BUYER 4 2,2 +C +D +3 +2 BUYER 3 -18 Figure 2: Example Bid Trees. Example 3. One seller and two buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD. Changes in values for trades: seller buyer1 buyer 2 AND(−A, −B, −C, −D) AND(+A, +B) AND(+C, +D) -18 +11 +8 The efficient trade is for bundle AB to go to buyer 1 and bundle CD to go to buyer 2, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4. A ONE-SHOT EXCHANGE DESIGN The description of ICE is broken down into two sections: one-shot (sealed-bid) and iterative. In this section we abstract away the iterative aspect and introduce a specialization of the tree-based language that supports only exact values on nodes. 4.1 Tree-Based Bidding Language The bidding language is designed to be expressive and concise, entirely symmetric with respect to buyers and sellers, and to extend to capture bids from mixed buyers and sellers, ranging from simple swaps to highly complex trades. Bids are expressed as annotated bid trees, and define a bidders value for all possible trades. The language defines changes in values on trades, with leaves annotated with traded items and nodes annotated with changes in values (either positive or negative). The main feature is that it has a general interval-choose logical operator on internal nodes, and that it defines careful semantics for propagating values within the tree. We illustrate the language on each of Examples 1-3 in Figure 2. The language has a tree structure, with trades on items defined on leaves and values annotated on nodes and leaves. The nodes have zero values where no value is indicated. Internal nodes are also labeled with interval-choose (IC) ranges. Given a trade, the semantics of the language define which nodes in the tree can be satisfied, or switched-on. First, if a child is on then its parent must be on. Second, if a parent node is on, then the number of children that are on must be within the IC range on the parent node. Finally, leaves in which the bidder is buying items can only be on if the items are provided in the trade. For instance, in Example 2 we can consider the efficient trade, and observe that in this trade all nodes in the trees of buyers 1 and 3 (and also the seller), but none of the nodes in the trees of buyers 2 and 4, can be on. On the other hand, in 251 the trade in which A goes to buyer 2 and D to buyer 4, then the root and appropriate leaf nodes can be on for buyers 2 and 4, but no nodes can be on for buyers 1 and 3. Given a trade there is often a number of ways to choose the set of satisfied nodes. The semantics of the language require that the nodes that maximize the summed value across satisfied nodes be activated. Consider bid tree Ti from bidder i. This defines nodes β ∈ Ti, of which some are leaves, Leaf (i) ⊆ Ti. Let Child(β) ⊆ Ti denote the children of a node β (that is not itself a leaf). All nodes except leaves are labeled with the interval-choose operator [IC x i (β), ICy i (β)]. Every node is also labeled with a value, viβ ∈ ¡ . Each leaf β is labeled with a trade, qiβ ∈   m (i.e., leaves can define a bundled trade on more than one type of item.) Given a trade λi to bidder i, the interval-choose operators and trades on leaves define which nodes can be satisfied. There will often be a choice. Ties are broken to maximize value. Let satiβ ∈ {0, 1} denote whether node β is satisfied. Solution sati is valid given tree Ti and trade λi, written sati ∈ valid(Ti, λi), if and only if: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Child(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Leaf (i) (5) In words, a set of leaves can only be considered satisfied given trade λi if the total increase in quantity summed across all such leaves is covered by the trade, for all goods (Eq. 4). This works for sellers as well as buyers: for sellers a trade is negative and this requires that the total number of items indicated sold in the tree is at least the total number sold as defined in the trade. We also need upwards-propagation: any time a node other than the root is satisfied then its parent must be satisfied (by   β ∈Child(β) satiβ ≤ ICy i (β)satiβ in Eq. 5). Finally, we need downwards-propagation: any time an internal node is satisfied then the appropriate number of children must also be satisfied (Eq. 5). The total value of trade λi, given bid-tree Ti, is defined as: vi(Ti, λi) = max sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) The tree-based language generalizes existing languages. For instance: IC(2, 2) on a node with 2 children is equivalent to an AND operator; IC(1, 3) on a node with 3 children is equivalent to an OR operator; and IC(1, 1) on a node with 2 children is equivalent to an XOR operator. Similarly, the XOR/OR bidding languages can be directly expressed as a bid tree in our language.2 4.2 Winner Determination This section defines the winner determination problem, which is formulated as a MIP and solved in our implementation with a commercial solver.3 The solver uses branchand-bound search with dynamic cut generation and branching heuristics to solve large MIPs in economically feasible run times. 2 The OR* language is the OR language with dummy items to provide additional structure. OR* is known to be expressive and concise. However, it is not known whether OR* dominates XOR/OR in terms of conciseness [23]. 3 CPLEX, www.ilog.com In defining the MIP representation we are careful to avoid an XOR-based enumeration of all bundles. A variation on the WD problem is reused many times within the exchange, e.g. for column generation in pricing and for checking revealed preference. Given bid trees T = (T1, . . . , Tn) and initial allocation x0 , the mixed-integer formulation for WD is: WD(T, x0 ) : max λ,sat ¢ i ¢ β∈Ti viβ · satiβ s.t. (1), (2), satiβ ∈ {0, 1}, λij ∈   sati ∈ valid(Ti, λi), ∀i Some goods may go unassigned because free disposal is allowed within the clearing rules of winner determination. These items can be allocated back to agents that sold the items, i.e. for which λij < 0. 4.3 Computing Threshold Payments The Threshold payment rule is based on the payments in the Vickrey-Clarke-Groves (VCG) mechanism [15], which itself is truthful and efficient but does not satisfy budget balance. Budget-balance requires that the total payments to the exchange are equal to the total payments made by the exchange. In VCG, the payment paid by agent i is pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) where λ∗ is the efficient trade, V ∗ is the reported value of this trade, and V−i is the reported value of the efficient trade that would be implemented without bidder i. We call ∆vcg,i = V ∗ − V−i the VCG discount. For instance, in Example 1 pvcg,seller = −10 − (+10 − 0) = −20 and pvcg,buyer = +20 − (+10 − 0) = 10, and the exchange would run at a budget deficit of −20 + 10 = −10. The Threshold payment rule [24] determines budgetbalanced payments to minimize the maximal error across all agents to the VCG outcome. Definition 2. The Threshold payment scheme implements the efficient trade λ∗ given bids, and sets payments pthresh,i = ˆvi(λ∗ i ) − ∆i, where ∆ = (∆1, . . . , ∆n) is set to minimize maxi(∆vcg,i − ∆i) subject to ∆i ≤ ∆vcg,i and   i ∆i ≤ V ∗ (this gives budget-balance). Example 4. In Example 2, the VCG discounts are (9, 2, 0, 1, 0) to the seller and four buyers respectively, VCG payments are (−9, 4, 0, 2, 0) and the exchange runs at a deficit of -3. In Threshold, the discounts are (8, 1, 0, 0, 0) and the payments are (−8, 5, 0, 3, 0). This minimizes the worst-case error to VCG discounts across all budget-balanced payment schemes. Threshold payments are designed to minimize the maximal ex post incentive to manipulate. Krych [16] confirmed that Threshold promotes allocative efficiency in restricted and approximate Bayes-Nash equilibrium. 5. THE ICE DESIGN We are now ready to introduce the iterative combinatorial exchange (ICE) design. Several new components are introduced, relative to the design for the one-shot exchange. Rather than provide precise valuations, bidders can provide lower and upper valuations and revise this bid information across rounds. The exchange provides price-based feedback 252 to guide bidders in this process, and terminates with an efficient (or approximately-efficient) trade with respect to reported valuations. In each round t ∈ {0, 1, . . .} the current lower and upper bounds, vt and vt , are used to define a provisional valuation profile vα (the α-valuation), together with a provisional trade λt and provisional prices pt = (pt 1, . . . , pt m) on items. The α-valuation is a linear combination of the current upper and lower valuations, with αEFF ∈ [0, 1] chosen endogenously based on the closeness of the optimistic trade (at v) and the pessimistic trade (at v). Prices pt are used to inform an activity rule, and drive progress towards an efficient trade. 5.1 Upper and Lower Valuations The bidding language is extended to allow a bidder i to report a lower and upper value (viβ, viβ) on each node. These take the place of the exact value viβ defined in Section 4.1. Based on these labels, we can define the valuation functions vi(Ti, λi) and vi(Ti, λi), using the exact same semantics as in Eq. (6). We say that such a bid-tree is well-formed if viβ ≤ viβ for all nodes. The following lemma is useful: Lemma 1. Given a well-formed tree, T, then vi(Ti, λi) ≤ vi(Ti, λi) for all trades. Proof. Suppose there is some λi for which vi(Ti, λi) > vi(Ti, λi). Then, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ. But, this is a contradiction because the trade λ that defines vi(Ti, λi) is still feasible with upper bounds vi, and viβ ≥ viβ for all nodes β in a well-formed tree. 5.2 Price Feedback In each round, approximate competitive-equilibrium (CE) prices, pt = (pt 1, . . . , pt m), are determined. Given these provisional prices, the price on trade λi for bidder i is pt (λi) =   j≤m pt j · λij. Definition 3 (CE prices). Prices p∗ are competitive equilibrium prices if the efficient trade λ∗ is supported at prices p∗ , so that for each bidder: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) CE prices will not always exist and we will often need to compute approximate prices [5]. We extend ideas due to Rassenti et al. [26], Kwasnica et al. [17] and Dunford et al. [12], and select approximate prices as follows: I: Accuracy. First, we compute prices that minimize the maximal error in the best-response constraints across all bidders. II: Fairness. Second, we break ties to prefer prices that minimize the maximal deviation from Threshold payments across all bidders. III: Balance. Third, we break ties to prefer prices that minimize the maximal price across all items. Taken together, these steps are designed to promote the informativeness of the prices in driving progress across rounds. In computing prices, we explain how to compute approximate (or otherwise) prices for structured bidding languages, and without enumerating all possible trades. For this, we adopt constraint generation to efficient handle an exponential number of constraints. Each step is described in detail below. I: Accuracy. We adopt a definition of price accuracy that generalizes the notions adopted in previous papers for unstructured bidding languages. Let λt denote the current provisional trade and suppose the provisional valuation is vα . To compute accurate CE prices, we consider: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j. This linear program (LP) is designed to find prices that minimize the worst-case error across all agents. From the definition of CE prices, it follows that CE prices would have δ = 0 as a solution to (9), at which point trade λt i would be in the best-response set of every agent (with λt i = ∅, i.e. no trade, for all agents with no surplus for trade at the prices.) Example 5. We can illustrate the formulation (9) on Example 2, assuming for simplicity that vα = v (i.e. truth). The efficient trade allocates AB to buyer 1 and CD to buyer 3. Accuracy will seek prices p(A), p(B), p(C) and p(D) to minimize the δ ≥ 0 required to satisfy constraints: p(A) + p(B) + p(C) + p(D) ≥ 0 (seller) p(A) + p(B) ≤ 6 + δ (buyer 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (buyer 2) p(C) + p(D) ≤ 3 (buyer 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (buyer 4) An optimal solution requires p(A) = p(B) = 10/3, with δ = 2/3, with p(C) and p(D) taking values such as p(C) = p(D) = 3/2. But, (9) has an exponential number of constraints (Eq. 10). Rather than solve it explicitly we use constraint generation [4] and dynamically generate a sufficient subset of constraints. Let   i denote a manageable subset of all possible feasible trades to bidder i. Then, a relaxed version of (9) (written ACC) is formulated by substituting (10) with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) where   i is a set of trades that are feasible for bidder i given the other bids. Fixing the prices p∗ , we then solve n subproblems (one for each bidder), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0 ), (12) to check whether solution (p∗ , δ∗ ) to ACC is feasible in problem (9). In R-WD(i) the objective is to determine a most preferred trade for each bidder at these prices. Let ˆλi denote the solution to R-WD(i). Check condition: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) and if this condition holds for all bidders i, then solution (p∗ , δ∗ ) is optimal for problem (9). Otherwise, trade ˆλi is added to   i for all bidders i for which this constraint is 253 violated and we re-solve the LP with the new set of constraints.4 II: Fairness. Second, we break remaining ties to prefer fair prices: choosing prices that minimize the worst-case error with respect to Threshold payoffs (i.e. utility to bidders with Threshold payments), but without choosing prices that are less accurate.5 Example 6. For example, accuracy in Example 1 (depicted in Figure 1) requires 12 ≤ pA +pB ≤ 16 (for vα = v). At these valuations the Threshold payoffs would be 2 to both the seller and the buyer. This can be exactly achieved in pricing with pA + pB = 14. The fairness tie-breaking method is formulated as the following LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution, from ACC. The objective here is the same as in the Threshold payment rule (see Section 4.3): minimize the maximal error between bidder payoff (at vα ) for the provisional trade and the VCG payoff (at vα ). Problem FAIR is also solved through constraint generation, using R-WD(i) to add additional violated constraints as necessary. III: Balance. Third, we break remaining ties to prefer balanced prices: choosing prices that minimize the maximal price across all items. Returning again to Example 1, depicted in Figure 1, we see that accuracy and fairness require p(A) + p(B) = 14. Finally, balance sets p(A) = p(B) = 7. Balance is justified when, all else being equal, items are more likely to have similar than dissimilar values.6 The LP for balance is formulated as follows: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution from ACC and π∗ represents the error in the optimal solution from FAIR. Constraint generation is also used to solve BAL, generating new trades for   i as necessary. 4 Problem R-WD(i) is a specialization of the WD problem, in which the objective is to maximize the payoff of a single bidder, rather than the total value across all bidders. It is solved as a MIP, by rewriting the objective in WD(T, x0 ) as max{viβ · satiβ −   j p∗ j · λij } for agent i. Thus, the structure of the bid-tree language is exploited in generating new constraints, because this is solved as a concise MIP. The other bidders are kept around in the MIP (but do not appear in the objective), and are used to define the space of feasible trades. 5 The methods of Dunford et al. [12], that use a nucleolus approach, are also closely related. 6 The use of balance was advocated by Kwasnica et al. [17]. Dunford et al. [12] prefer to smooth prices across rounds. Comment 1: Lexicographical Refinement. For all three sub-problems we also perform lexicographical refinement (with respect to bidders in ACC and FAIR, and with respect to goods in BAL). For instance, in ACC we successively minimize the maximal error across all bidders. Given an initial solution we first pin down the error on all bidders for whom a constraint (11) is binding. For such a bidder i, the constraint is replaced with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) and the error to bidder i no longer appears explicitly in the objective. ACC is then re-solved, and makes progress by further minimizing the maximal error across all bidders yet to be pinned down. This continues, pinning down any new bidders for whom one of constraints (11) is binding, until the error is lexicographically optimized for all bidders.7 The exact same process is repeated for FAIR and BAL, with bidders pinned down and constraints (15) replaced with π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (where π∗ i is the current objective) in FAIR, and items pinned down and constraints (18) replaced with p∗ j ≥ pj (where p∗ j represents the target for the maximal price on that item) in BAL. Comment 2: Computation. All constraints in   i are retained, and this set grows across all stages and across all rounds of the exchange. Thus, the computational effort in constraint generation is re-used. In implementation we are careful to address a number of -issues that arise due to floating-point issues. We prefer to err on the side of being conservative in determining whether or not to add another constraint in performing check (13). This avoids later infeasibility issues. In addition, when pinning-down bidders for the purpose of lexicographical refinement we relax the associated bidder-constraints with a small > 0 on the righthand side. 5.3 Revealed-Preference Activity Rules The role of activity rules in the auction is to ensure both consistency and progress across rounds [21]. Consistency in our exchange requires that bidders tighten bounds as the exchange progresses. Activity rules ensure that bidders are active during early rounds, and promote useful elicitation throughout the exchange. We adopt a simple revealed-preference (RP) activity rule. The idea is loosely based around the RP-rule in Ausubel et al. [1], where it is used for one-sided CAs. The motivation is to require more than simply consistency: we need bidders to provide enough information for the system to be able to to prove that an allocation is (approximately) efficient. It is helpful to think about the bidders interacting with proxy agents that will act on their behalf in responding to provisional prices pt−1 determined at the end of round t − 1. The only knowledge that such a proxy has of the valuation of a bidder is through the bid-tree. Suppose a proxy was queried by the exchange and asked which trade the bidder was most interested in at the provisional prices. The RP rule says the following: the proxy must have enough 7 For example, applying this to accuracy on Example 2 we solve once and find bidders 1 and 2 are binding, for error δ∗ = 2/3. We pin these down and then minimize the error to bidders 3 and 4. Finally, this gives p(A) = p(B) = 10/3 and p(C) = p(D) = 5/3, with accuracy 2/3 to bidders 1 and 2 and 1/3 to bidders 3 and 4. 254 information to be able to determine this surplus-maximizing trade at current prices. Consider the following examples: Example 7. A bidder has XOR(+A, +B) and a value of +5 on the leaf +A and a value range of [5,10] on leaf +B. Suppose prices are currently 3 for each of A and B. The RP rule is satisfied because the proxy knows that however the remaining value uncertainty on +B is resolved the bidder will always (weakly) prefer +B to +A. Example 8. A bidder has XOR(+A, +B) and value bounds [5, 10] on the root node and a value of 1 on leaf +A. Suppose prices are currently 3 for each of A and B. The RP rule is satisfied because the bidder will always prefer +A to +B at equal prices, whichever way the uncertain value on the root node is ultimately resolved. Overloading notation, let vi ∈ Ti denote a valuation that is consistent with lower and upper valuations in bid tree Ti. Definition 4. Bid tree Ti satisfies RP at prices pt−1 if and only if there exists some feasible trade L∗ for which, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. (20) To make this determination for bidder i we solve a sequence of problems, each of which is a variation on the WD problem. First, we construct a candidate lower-bound trade, which is a feasible trade that solves: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) The solution π∗ l to RP1(i) represents the maximal payoff that bidder i can achieve across all feasible trades, given its pessimistic valuation. Second, we break ties to find a trade with maximal value uncertainty across all possible solutions to RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] s.t. λ ∈ Feas(x0 ) (22) vi(λi) − pt−1 (λi) ≥ π∗ l (23) We adopt solution L∗ i as our candidate for the trade that may satisfy RP. To understand the importance of this tiebreaking rule consider Example 7. The proxy can prove +B but not +A is a best-response for all vi ∈ Ti, and should choose +B as its candidate. Notice that +B is a counterexample to +A, but not the other way round. Now, we construct a modified valuation ˜vi, by setting ˜viβ =   viβ , if β ∈ sat(L∗ i ) viβ , otherwise. (24) where sat(L∗ i ) is the set of nodes that are satisfied in the lower-bound tree for trade L∗ i . Given this modified valuation, we find U∗ to solve: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Let π∗ u denote the payoff from this optimal trade at modified values ˜v. We call trade U∗ i the witness trade. We show in Proposition 1 that the RP rule is satisfied if and only if π∗ l ≥ π∗ u. Constructing the modified valuation as ˜vi recognizes that there is shared uncertainty across trades that satisfy the same nodes in a bid tree. Example 8 helps to illustrate this. Just using vi in RP3(i), we would find L∗ i is buy A with payoff π∗ l = 3 but then find U∗ i is buy B with π∗ u = 7 and fail RP. We must recognize that however the uncertainty on the root node is resolved it will affect +A and +B in exactly the same way. For this reason, we set ˜viβ = viβ = 5 on the root node, which is exactly the same value that was adopted in determining π∗ l . Then, RP3(i) applied to U∗ i gives buy A and the RP test is judged to be passed. Proposition 1. Bid tree Ti satisfies RP given prices pt−1 if and only if any lower-bound trade L∗ i that solves RP1(i) and RP2(i) satisfies: vi(Ti, L∗ i ) − pt−1 (L∗ i ) ≥ ˜vi(Ti, U∗ i ) − pt−1 (U∗ i ), (26) where ˜vi is the modified valuation in Eq. (24). Proof. For sufficiency, notice that the difference in payoff between trade L∗ i and another trade λi is unaffected by the way uncertainty is resolved on any node that is satisfied in both L∗ i and λi. Fixing the values in ˜vi on nodes satisfied in L∗ i has the effect of removing this consideration when a trade U∗ i is selected that satisfies one of these nodes. On the other hand, fixing the values on these nodes has no effect on trades considered in RP3(i) that do not share a node with L∗ i . For the necessary direction, we first show that any trade that satisfies RP must solve RP1(i). Suppose otherwise, that some λi with payoff greater than π∗ l satisfies RP. But, valuation vi ∈ Ti together with L∗ i presents a counterexample to RP (Eq. 20). Now, suppose (for contradiction) that some λi with maximal payoff π∗ l but uncertainty less than L∗ i satisfies RP. Proceed by case analysis. Case a): only one solution to RP1(i) has uncertain value and so λi has certain value. But, this cannot satisfy RP because L∗ i with uncertain value would be a counterexample to RP (Eq. 20). Case b): two or more solutions to RP1(i) have uncertain value. Here, we first argue that one of these trades must satisfy a (weak) superset of all the nodes with uncertain value that are satisfied by all other trades in this set. This is by RP. Without this, then for any choice of trade that solves RP1(i), there is another trade with a disjoint set of uncertain but satisfied nodes that provides a counterexample to RP (Eq. 20). Now, consider the case that some trade contains a superset of all the uncertain satisfied nodes of the other trades. Clearly RP2(i) will choose this trade, L∗ i , and λi must satisfy a subset of these nodes (by assumption). But, we now see that λi cannot satisfy RP because L∗ i would be a counterexample to RP. Failure to meet the activity rule must have some consequence. In the current rules, the default action we choose is to set the upper bounds in valuations down to the maximal value of the provisional price on a node8 and the lowerbound value on that node.9 Such a bidder can remain active 8 The provisional price on a node is defined as the minimal total price across all feasible trades for which the subtree rooted at the tree is satisfied. 9 This is entirely analogous to when a bidder in an ascending clock auction stops bidding at a price: she is not permitted to bid at a higher price again in future rounds. 255 within the exchange, but only with valuations that are consistent with these new bounds. 5.4 Bidder Feedback In each round, our default design provides every bidder with the provisional trade and also with the current provisional prices. See 7 for an additional discussion. We also provide guidance to help a bidder meet the RP rule. Let sat(L∗ i ) and sat(U∗ i ) denote the nodes that are satisfied in trades L∗ i and U∗ i , as computed in RP1-RP3. Lemma 2. When RP fails, a bidder must increase a lower bound on at least one node in sat(L∗ i ) \\ sat(U∗ i ) or decrease an upper bound on at least one node in sat(U∗ i ) \\ sat(L∗ i ) in order to meet the activity rule. Proof. Changing the upper- or lower- values on nodes that are not satisfied by either trade does not change L∗ i or U∗ i , and does not change the payoff from these trades. Thus, the RP condition will continue to fail. Similarly, changing the bounds on nodes that are satisfied in both trades has no effect on revealed preference. A change to a lower bound on a shared node affects both L∗ i and U∗ i identically because of the use of the modified valuation to determine U∗ i . A change to an upper bound on a shared node has no effect in determining either L∗ i or U∗ i . Note that when sat(U∗ i ) = sat(L∗ i ) then condition (26) is always trivially satisfied, and so the guidance in the lemma is always well-defined when RP fails. This is an elegant feedback mechanism because it is adaptive. Once a bidder makes some changes on some subset of these nodes, the bidder can query the exchange. The exchange can then respond yes, or can revise the set of nodes sat(λ∗ l ) and sat(λ∗ u) as necessary. 5.5 Termination Conditions Once each bidder has committed its new bids (and either met the RP rule or suffered the penalty) then round t closes. At this point, the task is to determine the new α-valuation, and in turn the provisional allocation λt and provisional prices pt . A termination condition is also checked, to determine whether to move the exchange to a last-and-final round. To define the α-valuation we compute the following two quantities: Pessimistic at Pessimistic (PP) Determine an efficient trade, λ∗ l , at pessimistic values, i.e. to solve maxλ   i vi(λi), and set PP=  i vi(λ∗ li). Pessimistic at Optimistic (PO) Determine an efficient trade, λ∗ u, at optimistic values, i.e. to solve maxλ   i vi(λi), and set PO=  i vi(λ∗ ui). First, note that PP ≥ PO and PP ≥ 0 by definition, for all bid-trees, although PO can be negative (because the right trade at v is not currently a useful trade at v). Recognizing this, define γeff (PP, PO) = 1 + PP − PO PP , (27) when PP > 0, and observe that γeff (PP, PO) ≥ 1 when this is defined, and that γeff (PP, PO) will start large and then trend towards 1 as the optimistic allocation converges towards the pessimistic allocation. In each round, we define αeff ∈ [0, 1] as: αeff =   0 when PP is 0 1/γeff otherwise (28) which is 0 while PP is 0 and then trends towards 1 once PP> 0 in some round. This is used to define α-valuation vα i = αeff vi + (1 − αeff )vi, ∀i, (29) which is used to define the provisional allocation and provisional prices. The effect is to endogenously define a schedule for moving from optimistic to pessimistic values across rounds, based on how close the trades are to one another. Termination Condition. In moving to the last-and-final round, and finally closing, we also care about the convergence of payments, in addition to the convergence towards an efficient trade. For this we introduce another parameter, αthresh ∈ [0, 1], that trends from 0 to 1 as the Threshold payments at lower and upper valuations converge. Consider the following parameter: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive) , (30) which is defined for PP > 0, where pthresh(v) denotes the Threshold payments at valuation profile v, Nactive is the number of bidders that are actively engaged in trade in the PP trade, and || · ||2 is the L2-norm. Note that γthresh is defined for payments and not payoffs. This is appropriate because it is the accuracy of the outcome of the exchange that matters: i.e. the trade and the payments. Given this, we define αthresh =   0 when PP is 0 1/γthresh otherwise (31) which is 0 while PP is 0 and then trends towards 1 as progress is made. Definition 5 (termination). ICE transitions to a lastand-final round when one of the following holds: 1. αeff ≥ CUTOFFeff and αthresh ≥ CUTOFFthresh, 2. there is no trade at the optimistic values, where CUTOFFeff , CUTOFFthresh ∈ (0, 1] determine the accuracy required for termination. At the end of the last-and-final round vα = v is used to define the final trade and the final Threshold payments. Example 9. Consider again Example 1, and consider the upper and lower bounds as depicted in Figure 1. First, if the sellers bounds were [−20, −4] then there is an optimistic trade but no pessimistic trade, and PO = −4 and PP = 0, and αeff = 0. At the bounds depicted, both the optimistic and the pessimistic trades occur and PO = PP = 4 and αeff = 1. However, we can see the Threshold payments are (17, −17) at v but (14, −14) at v. Evaluating γthresh , we have γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, and αthresh = 2/5. For CUTOFFthresh < 2/5 the exchange would remain open. On the other hand, if the buyers value for +AB was between [18, 24] and the sellers value for −AB was between [−12, −6], the Threshold payments are (15, −15) at both upper and lower bounds, and αthresh = 1. 256 Component Purpose Lines Agent. Captures strategic behavior and information revelation decisions 762 Model Support Provides XML support to load goods and valuations into world 200 World Keeps track of all agent, good, and valuation details 998 Exchange Driver & Communication Controls exchange, and coordinates remote agent behavior 585 Bidding Language Implements the tree-based bidding language 1119 Activity Rule Engine Implements the revealed preference rule with range support 203 Closing Rule Engine Checks if auction termination condition reached 137 WD Engine Provides WD-related logic 377 Pricing Engine Provides Pricing-related logic 460 MIP Builders Translates logic used by engines into our general optimizer formulation 346 Pricing Builders Used by three pricing stages 256 Winner Determination Builders Used by WD, activity rule, closing rule, and pricing constraint generation 365 Framework Support code; eases modular replacement of above components 510 Table 1: Exchange Component and Code Breakdown. 6. SYSTEMS INFRASTRUCTURE ICE is approximately 6502 lines of Java code, broken up into the functional packages described in Table 1.10 The prototype is modular so that researchers may easily replace components for experimentation. In addition to the core exchange discussed in this paper, we have developed an agent component that allows a user to simulate the behavior and knowledge of other players in the system, better allowing a user to formulate their strategy in advance of actual play. A user specifies a valuation model in an XMLinterpretation of our bidding language, which is revealed to the exchange via the agents strategy. Major exchange tasks are handled by engines that dictate the non-optimizer specific logic. These engines drive the appropriate MIP/LP builders. We realized that all of our optimization formulations boil down to two classes of optimization problem. The first, used by winner determination, activity rule, closing rule, and constraint generation in pricing, is a MIP that finds trades that maximize value, holding prices and slacks constant. The second, used by the three pricing stages, is an LP that holds trades constant, seeking to minimize slack, profit, or prices. We take advantage of the commonality of these problems by using common LP/MIP builders that differ only by a few functional hooks to provide the correct variables for optimization. We have generalized our back-end optimization solver interface11 (we currently support CPLEX and the LGPL- licensed LPSolve), and can take advantage of the load-balancing and parallel MIP/LP solving capability that this library provides. 7. DISCUSSION The bidding language was defined to allow for perfect symmetry between buyers and sellers and provide expressiveness in an exchange domain, for instance for mixed bidders interested in executing trades such as swaps. This proved especially challenging. The breakthrough came when we focused on changes in value for trades rather than providing absolute values for allocations. For simplicity, we require the same tree structure for both the upper and lower valuations. 10 Code size is measured in physical source line of code (SLOC), as generated using David A. Wheelers SLOC Count. The total of 6502 includes 184 for instrumentation (not shown in the table). The JOpt solver interface is another 1964 lines, and Castor automatically generates around 5200 lines of code for XML file manipulation. 11 http://econcs.eecs.harvard.edu/jopt This allows the language itself to ensure consistency (with the upper value at least the lower value on all trades) and enforce monotonic tightening of these bounds for all trades across rounds. It also provides for an efficient method to check the RP activity rule, because it makes it simple to reason about shared uncertainty between trades. The decision to adopt a direct and proxied approach in which bidders express their upper and lower values to a trusted proxy agent that interacts with the exchange was made early in the design process. In many ways this is the clearest and most immediate way to generalize the design in Parkes et al. [24] and make it iterative. In addition, this removes much opportunity for strategic manipulation: bidders are restricted to making (incremental) statements about their valuations. Another advantage is that it makes the activity rule easy to explain: bidders can always meet the activity rule by tightening bounds such that their true value remains in the support.12 Perhaps most importantly, having explicit information on upper and lower values permits progress in early rounds, even while there is no efficient trade at pessimistic values. Upper and lower bound information also provides guidance about when to terminate. Note that taken by itself, PP = PO does not imply that the current provisional trade is efficient with respect to all values consistent with current value information. The difference in values between different trades, aggregated across all bidders, could be similar at lower and upper bounds but quite different at intermediate values (including truth). Nevertheless, we conjecture that PP = PO will prove an excellent indicator of efficiency in practical settings where the shape of the upper and lower valuations does convey useful information. This is worthy of experimental investigation. Moreover, the use of price and RP activity provides additional guarantees. We adopted linear prices (prices on individual items) rather than non-linear prices (with prices on a trade not equal to the sum of the prices on the component items) early in the design process. The conciseness of this price representation is very important for computational tractability within the exchange and also to promote simplicity and transparency for bidders. The RP activity rule was adopted later, and is a good choice because of its excellent theoretical properties when coupled with CE prices. The following can be easily established: given exact CE prices pt−1 for provisional trade 12 This is in contrast to indirect price-based approaches, such as clock-proxy [1], in which bidders must be able to reason about the RP-constraints implied by bids in each round. 257 λt−1 at valuations vα , then if the upper and lower values at the start of round t already satisfy the RP rule (and without the need for any tie-breaking), the provisional trade is efficient for all valuations consistent with the current bid trees. When linear CE prices exist, this provides for a soundness and completeness statement: if PP = PO, linear CE prices exist, and the RP rule is satisfied, the provisional trade is efficient (soundness); if prices are exact CE prices for the provisional trade at vα , but the trade is inefficient with respect to some valuation profile consistent with the current bid trees, then at least one bidder must fail RP with her current bid tree and progress will be made (completeness). Future work must study convergence experimentally, and extend this theory to allow for approximate prices. Some strategic aspects of our ICE design deserve comment, and further study. First, we do not claim that truthfully responding to the RP rule is an ex post equilibrium.13 However, the exchange is designed to mimic the Threshold rule in its payment scheme, which is known to have useful incentive properties [16]. We must be careful, though. For instance we do not suggest to provide αeff to bidders, because as αeff approaches 1 it would inform bidders that bid values are becoming irrelevant to determining the trade but merely used to determine payments (and bidders would become increasingly reluctant to increase their lower valuations). Also, no consideration has been given in this work to collusion by bidders. This is an issue that deserves some attention in future work. 8. CONCLUSIONS In this work we designed and prototyped a scalable and highly-expressive iterative combinatorial exchange. The design includes many interesting features, including: a new bid-tree language for exchanges, a new method to construct approximate linear prices from expressive languages, and a proxied elicitation method with optimistic and pessimistic valuations with a new method to evaluate a revealed- preference activity rule. The exchange is fully implemented in Java and is in a validation phase. The next steps for our work are to allow bidders to refine the structure of the bid tree in addition to values on the tree. We intend to study the elicitation properties of the exchange and we have put together a test suite of exchange problem instances. In addition, we are beginning to engage in collaborations to apply the design to airline takeoff and landing slot scheduling and to resource allocation in widearea network distributed computational systems. Acknowledgments We would like to dedicate this paper to all of the participants in CS 286r at Harvard University in Spring 2004. This work is supported in part by NSF grant IIS-0238147. 9. REFERENCES [1] L. Ausubel, P. Cramton, and P. Milgrom. The clock-proxy auction: A practical combinatorial auction design. In Cramton et al. [9], chapter 5. [2] M. Babaioff, N. Nisan, and E. Pavlov. Mechanisms for a spatially distributed market. In Proc. 5th ACM Conf. on Electronic Commerce, pages 9-20. ACM Press, 2001. 13 Given the Myerson-Satterthwaite impossibility theorem [22] and the method by which we determine the trade we should not expect this. [3] M. Ball, G. Donohue, and K. Hoffman. Auctions for the safe, efficient, and equitable allocation of airspace system resources. In S. Cramton, Shoham, editor, Combinatorial Auctions. 2004. Forthcoming. [4] D. Bertsimas and J. Tsitsiklis. Introduction to Linear Optimization. Athena Scientific, 1997. [5] S. Bikhchandani and J. M. Ostroy. The package assignment model. Journal of Economic Theory, 107(2):377-406, 2002. [6] C. Boutilier. A pomdp formulation of preference elicitation problems. In Proc. 18th National Conference on Artificial Intelligence (AAAI-02), 2002. [7] C. Boutilier and H. Hoos. Bidding languages for combinatorial auctions. In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), 2001. [8] W. Conen and T. Sandholm. Preference elicitation in combinatorial auctions. In Proc. 3rd ACM Conf. on Electronic Commerce (EC-01), pages 256-259. ACM Press, New York, 2001. [9] P. Cramton, Y. Shoham, and R. Steinberg, editors. Combinatorial Auctions. MIT Press, 2004. [10] S. de Vries, J. Schummer, and R. V. Vohra. On ascending Vickrey auctions for heterogeneous objects. Technical report, MEDS, Kellogg School, Northwestern University, 2003. [11] S. de Vries and R. V. Vohra. Combinatorial auctions: A survey. Informs Journal on Computing, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana, and T. Wilson. Testing linear pricing algorithms for use in ascending combinatorial auctions. Technical report, SEOR, George Mason University, 2003. [13] Y. Fu, J. Chase, B. Chun, S. Schwab, and A. Vahdat. Sharp: an architecture for secure resource peering. In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 133-148. ACM Press, 2003. [14] B. Hudson and T. Sandholm. Effectiveness of query types and policies for preference elicitation in combinatorial auctions. In Proc. 3rd Int. Joint. Conf. on Autonomous Agents and Multi Agent Systems, pages 386-393, 2004. [15] V. Krishna. Auction Theory. Academic Press, 2002. [16] D. Krych. Calculation and analysis of Nash equilibria of Vickrey-based payment rules for combinatorial exchanges, Harvard College, April 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter, and C. DeMartini. A new and improved design for multi-object iterative auctions. Management Science, 2004. To appear. [18] E. Kwerel and J. Williams. A proposal for a rapid transition to market allocation of spectrum. Technical report, FCC Office of Plans and Policy, Nov 2002. [19] S. M. Lahaie and D. C. Parkes. Applying learning algorithms to preference elicitation. In Proc. ACM Conf. on Electronic Commerce, pages 180-188, 2004. [20] R. P. McAfee. A dominant strategy double auction. J. of Economic Theory, 56:434-450, 1992. [21] P. Milgrom. Putting auction theory to work: The simultaneous ascending auction. J.Pol. Econ., 108:245-272, 2000. [22] R. B. Myerson and M. A. Satterthwaite. Efficient mechanisms for bilateral trading. Journal of Economic Theory, 28:265-281, 1983. [23] N. Nisan. Bidding and allocation in combinatorial auctions. In Proc. 2nd ACM Conf. on Electronic Commerce (EC-00), pages 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam, and M. Eso. Achieving budget-balance with Vickrey-based payment schemes in exchanges. In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), pages 1161-1168, 2001. [25] D. C. Parkes and L. H. Ungar. Iterative combinatorial auctions: Theory and practice. In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, July 2000. [26] S. J. Rassenti, V. L. Smith, and R. L. Bulfin. A combinatorial mechanism for airport time slot allocation. Bell Journal of Economics, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc, and R. M. Harstad. Computationally manageable combinatorial auctions. Management Science, 44(8):1131-1147, 1998. [28] T. Sandholm and C. Boutilier. Preference elicitation in combinatorial auctions. In Cramton et al. [9], chapter 10. [29] P. R. Wurman and M. P. Wellman. AkBA: A progressive, anonymous-price combinatorial auction. In Second ACM Conference on Electronic Commerce, pages 21-29, 2000. 258",
    "original_translation": "ICE: un intercambio combinatorio iterativo David C. Parkes ∗ † Ruggiero Cavallo † Nick Elprin † Adam Juda † S´ebastien Lahaie † Benjamin Lubin † Loizos Michael † Jeffrey Shneidman † Hassan Sultan † Resumen, presentamos el primer diseño para un intercambio combinador iterativo (((HIELO). El intercambio incorpora un lenguaje de licitación basado en árboles que es conciso y expresivo para el CES. Los postores especifican límites inferiores y superiores en su valor para diferentes operaciones. Estos límites permiten el descubrimiento de precios y la obtención de preferencias útiles en las primeras rondas, y permiten la terminación con un comercio eficiente a pesar de la información parcial sobre las valoraciones del postor. Todos los cálculos en el intercambio se optimizan cuidadosamente para explotar la estructura de los licitaciones y para evitar enumerar los oficios. Una interpretación representada de una regla de actividad revelada de la intensidad garantiza el progreso a través de las rondas. Se utiliza un esquema de pago basado en VCG que mitiga las oportunidades de negociación y comportamiento estratégico para determinar los pagos finales. El intercambio se implementa completamente y en una fase de validación. Categorías y descriptores de temas: I.2.11 [Inteligencia artificial]: inteligencia artificial distribuida;J.4 [Aplicaciones informáticas]: Ciencias sociales y conductuales -Conómica Términos generales: algoritmos, economía, teoría.1. Introducción Los intercambios combinatorios combinan y generalizan dos mecanismos diferentes: subastas dobles y subastas combinatorias. En una doble subasta (DA), múltiples unidades de comercio de compradores y vendedores de un bien idéntico [20]. En una subasta combinatoria (CA), un solo vendedor tiene múltiples artículos heterogéneos a la venta [11]. Los compradores pueden tener complementariedades o sustitutabilidad entre bienes, y se les proporciona un lenguaje de licitación expresivo. Un objetivo común en ambos diseños de mercado es determinar la asignación eficiente, que es la asignación que maximiza el valor total. Un intercambio combinatorio (CE) [24] es una subasta doble combinatoria que reúne a múltiples compradores y vendedores para intercambiar múltiples productos heterogéneos. Por ejemplo, en un intercambio del espectro inalámbrico, una oferta puede declarar que está dispuesta a pagar $ 1 millón por un intercambio donde obtiene licencias para la ciudad de Nueva York, Boston y Filadelfia, y pierde su licencia por Washington DC. Por lo tanto, a diferencia de un DA, un CE permite a todos los participantes expresar valoraciones complejas a través de ofertas expresivas. A diferencia de una CA, un CE permite la propiedad fragmentada, con múltiples compradores y vendedores y agentes que están comprando y vendiendo. CES ha recibido atención reciente tanto en el contexto de la asignación de espectro inalámbrico [18] como para la asignación de ranuras para despegue y aterrizaje del aeropuerto [3]. En ambos dominios hay titulares con los derechos de propiedad, y es importante facilitar una reasignación de recursos múltiples complejas. Otro dominio de aplicación potencial para CES es la asignación de recursos en sistemas distribuidos compartidos, como PlanetLab [13]. La instanciación de nuestro diseño de propósito general a dominios específicos es un siguiente paso convincente en nuestra investigación. Este artículo presenta el primer diseño para un intercambio combinatorial iterativo (ICE). La génesis de este proyecto fue una clase, CS 286R Temas en la interfaz entre economía e informática, enseñada en la Universidad de Harvard en la primavera de 2004.1, toda la clase se dedicó al diseño y la creación de prototipos de un CE iterativo. El problema de diseño de hielo es multifacético y bastante duro. La principal innovación en nuestro diseño es un lenguaje de licitación expresivo pero conciso basado en árboles (que generaliza los idiomas conocidos como Xor/o [23]), y el acoplamiento estrecho de este lenguaje con algoritmos eficientes para el retroalimentación de precios para guiar la licitación, el ganador, el ganador-determinación para determinar las operaciones y las reglas de actividad de preferencia reveladas para garantizar el progreso a través de las rondas. El intercambio es iterativo: los licitadores expresan valoraciones superiores e inferiores en las operaciones anotando su oferta, y luego apretan estos límites en respuesta a la retroalimentación de precios en cada ronda. La regla de pago umbral, introducida por Parkes et al.[24], se usa para determinar los pagos finales. El intercambio tiene una serie de propiedades teóricas interesantes. Por ejemplo, cuando existen precios lineales, establecemos solidez e integridad: para los licitadores directos que ajustan sus límites para cumplir con las reglas de actividad mientras mantienen su verdadero valor dentro de los límites, el intercambio terminará con la asignación eficiente. Además, el 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Agente de la verdad Regla WD Acc Fery BalcleSing Rulevickreythreshold hecho hecho! Hecho 2,2 +A +10 +B +10 Comprador 2,2 -a -5 -B -5 Vendedor 2,2 +A +15 +8 +B +15 +8 Comprador 2,2 -a -2 -6-B -2 -6 Comprador del vendedor, Compre el vendedor AB, venda AB 12 <Pa+Pb <16 Pa+Pb = 14 Pa = Pb = 7 Pbuyer = 16 -(4-0) = 12 Pseller = -12 -(4-0) = -16 Pbuyer = 14 Pseller = -14 Pessim ISTIC O PTT ISTIC = 1 Figura 1: Flujo del sistema de hielo La asignación eficiente de control a menudo se puede determinar sin que los licitadores revelen, o incluso conozcan, su valor exacto para todos los comercios. Esto es esencial en dominios complejos donde el problema de valoración puede ser muy desafiante para un participante [28]. Si bien no podemos afirmar que la licitación sencilla es un equilibrio del intercambio (y de hecho, no deberíamos esperar por el teorema de imposibilidad de Myerson-Satterthwaite [22]), la regla de pago umbral minimiza el incentivo ex post para manipular todosnormas. El intercambio se implementa en Java y actualmente está en validación. Al describir el intercambio, primero proporcionaremos una descripción general de los componentes principales e introduciremos varios ejemplos de trabajo. Luego, presentamos los componentes básicos para una variación simple de un disparo en la que los licitadores indican sus valores exactos para las operaciones en una sola ronda. Luego describimos el intercambio iterativo completo, con valores superiores e inferiores, retroalimentación de precios, reglas de actividad y condiciones de terminación. Afirmamos algunas propiedades teóricas del intercambio, y terminamos con una discusión para motivar nuestras decisiones de diseño principales y sugerimos algunos próximos pasos.2. Una descripción general del diseño de hielo El diseño tiene cuatro componentes principales, que introduciremos en orden a través del resto del documento: • Lenguaje de licitación expresivo y conciso basado en árboles. El lenguaje describe los valores para las operaciones, como mi valor para vender AB y comprar C es de $ 100, o mi valor para vender ABC es -$ 50, con valores negativos que indican que un postor debe recibir un pago para que la operación sea aceptable. El lenguaje permite a los postores expresar los límites superiores e inferiores en el valor, que se pueden apretar a través de las rondas.• Determinación del ganador. La determinación del ganador (WD) se formula como un programa de introducción mixta (MIP), con la estructura de los bideos capturados explícitamente en la formulación. La comparación de la solución en los valores superiores e inferiores permite que se realice una determinación sobre la terminación, con el progreso en las rondas intermedias impulsadas por una valoración intermedia y los valores más bajos adoptados en la terminación.• Pagos. Los pagos se calculan utilizando la regla de pago umbral [24], con las valoraciones intermedias adoptadas en rondas tempranas y valores más bajos adoptados en la terminación.• Comentarios de precios. Se calcula un precio aproximado para cada elemento en el intercambio en cada ronda, en términos de valoraciones intermedias y el comercio provisional. Los precios están optimizados para aproximar los precios de equilibrio competitivo, y se optimizan aún más para aproximar mejor los pagos de umbral actuales con los lazos restantes rotos para favorecer los precios que están equilibrados en diferentes artículos. Al calcular los precios, adoptamos los métodos de generación de restricciones para explotar la estructura del lenguaje de licitación y evitar enumerar todas las operaciones factibles. El subproblema para generar nuevas restricciones es una variación del problema WD.• Regla de actividad. Una regla de actividad de preferencia revelada [1] garantiza el progreso a través de las rondas. Para permanecer activo, un postor debe apretar los límites para que haya suficiente información para definir un comercio que maximice el excedente a los precios actuales. Se formula otra variación en el problema WD, tanto para verificar que se cumpla la regla de actividad como para proporcionar retroalimentación a un postor para explicar cómo cumplir con la regla. Se proporciona un contorno del flujo de control del sistema de hielo en la Figura 1. Volveremos a este ejemplo más adelante en el documento. Por ahora, solo observe en este ejemplo de dos agentes que los agentes indican los límites inferiores y superiores que se verifican en la regla de actividad, y luego pasan a la determinación del ganador (WD), y luego a través de tres etapas de precios (precisión, equidad,balance). Al pasar la regla de cierre (en la que los parámetros αeff y αthresh se verifican para la convergencia del comercio y los pagos), el intercambio va a una ronda de último y final. Al final de esta ronda, el comercio y los pagos finalmente se determinan, en función de las valoraciones más bajas.2.1 Trabajo relacionado Muchos CAS unilateral de precio ascendente se conocen en la literatura [10, 25, 29]. También se han propuesto enfoques de obtención directa para CAS unilateral en el que los agentes responden a consultas explícitas sobre sus valoraciones [8, 14, 19]. Varios CAS ascendentes están diseñados para funcionar con precios simples en los artículos [12, 17]. Los métodos de generación de precios que utilizamos en ICE generalizan los métodos en estos documentos anteriores. Parkes et al.[24] estudiaron intercambios combinatorios de licitación sellada e introdujo la regla de pago umbral. Posteriormente, Krych [16] demostró experimentalmente que la regla umbral promueve asignaciones eficientes. No tenemos conocimiento de ningún estudio previo de CES iterativo. La estrategia dominante DAS es conocida por la demanda de la unidad [20] y también por los agentes resueltos [2]. No se conocen mecanismos de estrategia dominantes por el problema general de CE. ICE es un diseño de subasta híbrida, ya que combina los precios simples de los artículos para impulsar la licitación en las primeras rondas con WD y pagos combinatorios, una característica que comparte con el diseño de Ausubel et al.[1] Para CAS unilateral. Adoptamos una variación en la regla de actividad de la actualización de la subastas del reloj. El lenguaje de licitación comparte algunos elementos estructurales con el lenguaje LGB de Boutilier y Hoos [7], pero tiene una semántica muy diferente. Rothkopf et al.[27] también describe un lenguaje de licitación restringido basado en árboles. En LGB, la semántica son las de la lógica proposicional, con los mismos elementos en una asignación capaz de satisfacer un árbol en múltiples lugares. Aunque esto puede hacer que LGB sea especialmente conciso en algunos entornos, la semántica que proponemos parece proporcionar una localidad útil, de modo que el valor de un componente en un árbol se puede entender independientemente del resto del árbol. La idea de capturar la estructura de nuestro lenguaje de licitación explícitamente dentro de una formulación de programación de enteros mixtos sigue los desarrollos en Boutilier [6].3. Preliminares En nuestro modelo, consideramos un conjunto de bienes, indexado {1 ,..., M} y un conjunto de postores, indexados {1 ,..., n}. La asignación inicial de bienes se denota x0 = (x0 1, ..., x0 n), con x0 i = (x0 i1, ..., x0 im) y x0 ij ≥ 0 para buena j indicando el número 250 de unidadesde buena j en poder del postor i. Un comercio λ = (λ1, ..., λn) denota el cambio en la asignación, con λi = (λi1, ..., λim) donde λij ∈ es el cambio en el número de unidades del ítem j al postor i. Entonces, la asignación final es x1 = x0 + λ. Cada postor tiene un valor vi (λi) ∈ ¡para un comercio λi. Este valor puede ser positivo o negativo, y representa el cambio en el valor entre la asignación final x0 i +λi y la asignación inicial x0 i. La utilidad es cuasi-lineal, con ui (λi, p) = vi (λi) −p para el comercio λi y el pago p ∈ ¡. El precio P puede ser negativo, lo que indica que el postor recibe un pago por el comercio. Usamos el término recompensa indistintamente con la utilidad. Nuestro objetivo en el diseño de hielo es implementar el comercio eficiente. El comercio eficiente, λ ∗, maximiza el aumento total en el valor entre los postores. Definición 1 (comercio eficiente). El comercio eficiente λ ∗ resuelve max (λ1, ..., λn) ¢ I vi (λi) s.t.λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ I λij ≤ 0, ∀j (2) λij ∈ (3) restricciones (1) Asegúrese de que ningún agente venda más artículos de los que tiene en su asignación inicial. Las restricciones (2) proporcionan eliminación gratuita y permite que las operaciones factibles vendan más artículos de los que se compran (pero no viceversa). Más tarde, adoptamos Feas (x0) para denotar el conjunto de oficios factibles, dadas estas restricciones y dada una asignación inicial x0 = (x0 1, ..., x0 n).3.1 Ejemplos de trabajo En esta sección, proporcionamos tres ejemplos simples de instancias que usaremos para ilustrar varios componentes del intercambio. Los tres ejemplos solo tienen un vendedor, pero esto es puramente ilustrativo. Ejemplo 1. Un vendedor y un comprador, dos productos {a, b}, y el vendedor tiene una asignación inicial de AB. Cambios en los valores para las operaciones: el comprador del vendedor y (−a, −b) y ( +a, +b) -10 +20 y indica que tanto el comprador como el vendedor solo están interesados en comerciar ambos bienes como un paquete. Aquí, el comercio eficiente (al mismo tiempo) es que el vendedor venda AB al comprador, denotó λ ∗ = ([−1, −1], [+1, +1]). Ejemplo 2. Un vendedor y cuatro compradores, cuatro productos {A, B, C, D}, y el vendedor tiene una asignación inicial de ABCD. Cambios en los valores para las operaciones: Comprador del vendedor Comprador 2 Comprador 3 Comprador 4 o (−A, −B y (+A, Xor (+A y (+C, Xor (+C, −C, −D)+B) +B) +d) +d) 0 +6 +4 +3 +2 El o indica que el vendedor está dispuesto a vender cualquier número de productos. El XOR indica que los compradores 2 y 4 están dispuestos a comprar como máximo uno de los dos productos en los que están interesados. El comercio eficiente es para el paquete AB para ir al Comprador 1 y el CD de Bundle al Comprador 3, denotado λ ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0],[0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]).2,2 +A +10 +B +10 Comprador 2,2 -a -5 -B -5 Vendedor Ejemplo 1: Ejemplo 3: 2,2 +C +D Comprador 2 2,2 +A +B Comprador 1 +11+84,4 -b vendedor -a -c -d Ejemplo 2: 1,1 +A +B Comprador 2 2,2 +A +B Comprador 1 +6 +40,4 -B Seller -C -D -A 1,1+C +D Comprador 4 2,2 +C +D +3 +2 Comprador 3 -18 Figura 2: Buis de ejemplo. Ejemplo 3. Un vendedor y dos compradores, cuatro productos {A, B, C, D}, y el vendedor tiene una asignación inicial de ABCD. Cambios en los valores para las operaciones: Comprador de vendedor1 Comprador 2 y (−a, −b, −c, −d) y ( +a, +b) y ( +c, +d) -18 +11 +8 el comercio eficiente es esPara que el paquete AB vaya al Comprador 1 y el CD de paquete para ir al Comprador 2, denotado λ ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]).4. Un diseño de intercambio de un solo disparo La descripción del hielo se descompone en dos secciones: una sola vez (al año sellada) e iterativo. En esta sección abstrae el aspecto iterativo e introducimos una especialización del lenguaje basado en árboles que respalda solo valores exactos en los nodos.4.1 Lenguaje de licitación basado en árboles El lenguaje de licitación está diseñado para ser expresivo y conciso, completamente simétrico con respecto a los compradores y vendedores, y para extenderse para capturar ofertas de compradores y vendedores mixtos, que van desde intercambios simples hasta oficios altamente complejos. Las ofertas se expresan como ofertas anotadas y definen el valor de los licitadores para todas las operaciones posibles. El lenguaje define los cambios en los valores en las operaciones, con hojas anotadas con elementos y nodos negociados anotados con cambios en los valores (positivo o negativo). La característica principal es que tiene un operador lógico de cambio de intervalo general en nodos internos, y que define una semántica cuidadosa para propagar valores dentro del árbol. Ilustramos el lenguaje en cada uno de los ejemplos 1-3 en la Figura 2. El lenguaje tiene una estructura de árbol, con intercambios en elementos definidos en hojas y valores anotados en nodos y hojas. Los nodos tienen cero valores donde no se indica ningún valor. Los nodos internos también están etiquetados con rangos de opuesto por intervalos (IC). Dado un intercambio, la semántica del lenguaje define qué nodos en el árbol se puede satisfacer o encender. Primero, si un niño está encendido, entonces su padre debe estar encendido. En segundo lugar, si un nodo principal está encendido, entonces el número de niños que están encendido debe estar dentro del rango IC en el nodo principal. Finalmente, las hojas en las que el postor está comprando artículos solo puede estar activado si los artículos se proporcionan en el comercio. Por ejemplo, en el Ejemplo 2 podemos considerar el comercio eficiente y observar que en este comercio todos los nodos en los árboles de los compradores 1 y 3 (y también el vendedor), pero ninguno de los nodos en los árboles de los compradores 2 y 4,puede estar encendido. Por otro lado, en 251 el comercio en el que A va al Comprador 2 y D al Comprador 4, luego los nodos de raíz y hojas apropiadas pueden estar encendidas para los compradores 2 y 4, pero no se pueden poner nodos para los compradores 1 y 3. Dado un intercambio, a menudo hay varias formas de elegir el conjunto de nodos satisfechos. La semántica del lenguaje requiere que los nodos que maximicen el valor sumado en los nodos satisfechos se activen. Considere el árbol de licitación TI del Bidder i. Esto define los nodos β ∈ Ti, de los cuales algunas son hojas, hoja (i) ⊆ ti. Deje que el niño (β) ⊆ Ti denote a los niños de un nodo β (que no es una hoja). Todos los nodos excepto las hojas están etiquetados con el operador de opción de intervalo [IC X I (β), Icy I (β)]. Cada nodo también está etiquetado con un valor, viβ ∈ ¡. Cada hoja β está marcado con un comercio, qiβ ∈ M (es decir, las hojas pueden definir un comercio agrupado en más de un tipo de elemento). Dado un comercio λi al postor I, los operadores de opción de intervalos y las operaciones de las hojas definen qué nodos pueden satisfacerse. A menudo habrá una elección. Los lazos se rompen para maximizar el valor. Deje que Satiβ ∈ {0, 1} denote si el nodo β está satisfecho. Solución sati es válida dada el árbol Ti y el comercio λi, escrito sati ∈ Válido (ti, λi), si y solo si: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij, ∀i, ∀j (4) icx i (β) satiβ ≤ ¢ β ∈Child (β) satiβ ≤ helado I (β) satiβ, ∀β /∈ Leaf (i) (5) En palabras, un conjunto de hojas solo se puede considerar satisfecho dado el comercio si el aumento totalEn cantidad sumada en todas esas hojas está cubierta por el comercio, para todos los bienes (Ec. 4). Esto funciona tanto para los vendedores como para los compradores: para los vendedores un comercio es negativo y esto requiere que el número total de artículos indicados vendidos en el árbol sea al menos el número total vendido como se define en el comercio. También necesitamos la propagación hacia arriba: cada vez que se satisfaga un nodo que no sea la raíz, entonces su padre debe ser satisfecho (por β ∈Child (β) satiβ ≤ Icy I (β) satiβ en la ecuación 5). Finalmente, necesitamos la propagación hacia abajo: cada vez que se satisfaga un nodo interno, entonces el número apropiado de niños también debe ser satisfecho (Ec. 5). El valor total del comercio λi, dada la licencia Ti, se define como: vi (ti, λi) = max sat∈Valid (ti, λi) ¢ β∈T vβ · satβ (6) El lenguaje basado en el árbol generaliza existenteIdiomas. Por ejemplo: IC (2, 2) en un nodo con 2 hijos es equivalente a un operador y al operador;IC (1, 3) en un nodo con 3 niños es equivalente a un operador OR;e IC (1, 1) en un nodo con 2 hijos es equivalente a un operador XOR. Del mismo modo, los idiomas de XOR/o licitación se pueden expresar directamente como un árbol de ofertas en nuestro idioma.2 4.2 Determinación del ganador Esta sección define el problema de determinación del ganador, que se formula como un MIP y se resuelve en nuestra implementación con un solucionador comercial.3 ElEl solucionador utiliza la búsqueda en la sucursal con generación dinámica de corte y heurísticas de ramificación para resolver grandes MIP en tiempos de ejecución económicamente factibles.2 El lenguaje OR* es el lenguaje OR con elementos ficticios para proporcionar una estructura adicional. O* se sabe que es expresivo y conciso. Sin embargo, no se sabe si* domina XOR/o en términos de concisión [23].3 CPLEX, www.ilog.com Al definir la representación MIP, tenemos cuidado de evitar una enumeración basada en XOR de todos los paquetes. Una variación del problema WD se reutiliza muchas veces dentro del intercambio, p.para la generación de columnas en precios y para verificar la preferencia revelada. Los árboles de ofertas dados t = (T1, ..., TN) y la asignación inicial x0, la formulación de intérpretes mixtos para WD es: WD (t, x0): max λ, sat ¢ i ¢ β∈Ti viβ · satiβ s.t.(1), (2), satiβ ∈ {0, 1}, λij ∈ Sati ∈ Válido (Ti, λi), ∀i Algunos bienes pueden no asignarse porque se permite la eliminación libre dentro de las reglas de compensación de la determinación del ganador. Estos elementos se pueden volver a los agentes que vendieron los artículos, es decir, para los cuales λij <0. 4.3 Pagos de umbral informático La regla de pago umbral se basa en los pagos en el mecanismo de Vickrey-Clarke (VCG) [15], que en sí mismo, que en sí mismaes sincero y eficiente pero no satisface el equilibrio presupuestario. El equilibrio presupuestario requiere que los pagos totales al intercambio sean iguales a los pagos totales realizados por el intercambio. En VCG, el pago pagado por el agente I es PVCG, i = ˆV (λ ∗ i) - (v ∗ - v - i) (7) donde λ ∗ es el comercio eficiente, v ∗ es el valor reportado de este comercio,y V - I es el valor reportado del comercio eficiente que se implementaría sin postor i. Llamamos ∆VCG, I = V ∗ - V - I el descuento de VCG. Por ejemplo, en el Ejemplo 1 PVCG, Seller = −10 - (+10 - 0) = −20 y PVCG, Buyer = +20 - (+10 - 0) = 10, y el intercambio se ejecutaría con un déficit presupuestario de −20 + 10 = −10. La regla de pago de umbral [24] determina los pagos balanceados con presupuesto para minimizar el error máximo en todos los agentes al resultado de VCG. Definición 2. El esquema de pago de umbral implementa el comercio eficiente λ ∗ dadas ofertas y establece pagos pthresh, i = ˆVi (λ ∗ i) - ∆i, donde ∆ = (∆1, ..., ∆n) está configurado para minimizar maxi (∆VCG, I-∆I) sujeto a ∆I ≤ ∆VCG, I e I ∆I ≤ V ∗ (esto da un equilibrio presupuestario). Ejemplo 4. En el ejemplo 2, los descuentos de VCG son (9, 2, 0, 1, 0) para el vendedor y cuatro compradores, respectivamente, los pagos de VCG son (−9, 4, 0, 2, 0) y el intercambio se ejecuta con un déficit de-3. En el umbral, los descuentos son (8, 1, 0, 0, 0) y los pagos son (−8, 5, 0, 3, 0). Esto minimiza el peor error de los descuentos de VCG en todos los esquemas de pago equilibrados del presupuesto. Los pagos de umbral están diseñados para minimizar el incentivo máximo ex post para manipular. Krych [16] confirmó que el umbral promueve la eficiencia de asignación en el equilibrio de Nash Bayes restringido y aproximado.5. El diseño de hielo ahora estamos listos para introducir el diseño iterativo de intercambio combinatorio (ICE). Se introducen varios componentes nuevos, en relación con el diseño para el intercambio de un disparo. En lugar de proporcionar valoraciones precisas, los licitadores pueden proporcionar valoraciones más bajas y superiores y revisar esta información de oferta en las rondas. El intercambio proporciona retroalimentación basada en precios 252 para guiar a los postores en este proceso, y termina con un comercio eficiente (o aproximadamente eficiente) con respecto a las valoraciones reportadas. En cada ronda t ∈ {0, 1 ,...} Los límites actuales inferiores y superiores, VT y VT, se utilizan para definir un perfil de valoración provisional Vα (la valuación α), junto con un comercio provisional λt y precios provisionales pt = (pt 1, .., pt m) en elementos. La valuación α es una combinación lineal de las valoraciones superiores e inferiores actuales, con αeff ∈ [0, 1] elegido endógenamente en función de la cercanía del comercio optimista (en V) y el comercio pesimista (en V). Los precios PT se utilizan para informar una regla de actividad e impulsar el progreso hacia un comercio eficiente.5.1 Valuaciones superiores e inferiores El lenguaje de licitación se extiende para permitir que un postor i informe un valor inferior y superior (VIβ, VIβ) en cada nodo. Estos toman el lugar del valor exacto VIβ definido en la Sección 4.1. Según estas etiquetas, podemos definir las funciones de valoración VI (Ti, λi) y Vi (Ti, λi), utilizando exactamente la misma semántica que en la ecuación.(6). Decimos que tal oferta está bien formada si VIβ ≤ VIβ para todos los nodos. El siguiente lema es útil: Lema 1. Dado un árbol bien formado, t, entonces vi (ti, λi) ≤ vi (ti, λi) para todos los intercambios. Prueba. Supongamos que hay algunos λi para el cual vi (ti, λi)> vi (ti, λi). Entonces, maxsat∈Valid (ti, λi) β∈Ti viβ · satβ> maxsat∈Valid (ti, λi) β∈Ti viβ · satβ. Pero, esto es una contradicción porque el comercio λ que define VI (Ti, λi) todavía es factible con los límites superiores VI, y VIβ ≥ VIβ para todos los nodos β en un árbol bien formado.5.2 Se determinan la retroalimentación de precios en cada ronda, se determinan los precios aproximados de equilibrio competitivo (CE), PT = (Pt 1, ..., Pt M). Dados estos precios provisionales, el precio del comercio λi para el postor i es pt (λi) = j≤m pt j · λij. Definición 3 (precios CE). Los precios p ∗ son precios de equilibrio competitivo si el comercio eficiente λ ∗ se respalda a los precios p ∗, de modo que para cada postor: λ ∗ i ∈ Arg max λ∈Feas (x0) {vi (λi) - p ∗ (λi)}(8) Los precios de CE no siempre existirán y a menudo necesitaremos calcular los precios aproximados [5]. Extendemos ideas debido a Rassenti et al.[26], Kwasnica et al.[17] y Dunford et al.[12], y seleccione precios aproximados de la siguiente manera: I: precisión. Primero, calculamos los precios que minimizan el error máximo en las restricciones de mejor respuesta en todos los postores. II: Justicia. En segundo lugar, rompemos los lazos para preferir los precios que minimizan la desviación máxima de los pagos de umbral en todos los licitadores. III: Balance. Tercero, rompemos los lazos para preferir los precios que minimizan el precio máximo en todos los artículos. Tomados en conjunto, estos pasos están diseñados para promover la información de los precios al impulsar el progreso a través de las rondas. En los precios de la computación, explicamos cómo calcular los precios aproximados (o de otra manera) para los idiomas de licitación estructurados y sin enumerar todas las operaciones posibles. Para esto, adoptamos la generación de restricciones para manejar eficiente un número exponencial de restricciones. Cada paso se describe en detalle a continuación. I: precisión. Adoptamos una definición de precisión de los precios que generaliza las nociones adoptadas en documentos anteriores para idiomas de licitación no estructurados. Deje que λt denote el comercio provisional actual y suponga que la valoración provisional es Vα. Para calcular los precios CE precisos, consideramos: Min P, δ δ (9) S.T.Vα I (λ) - P (λ) ≤ Vα I (λt I) - P (λt I) + δ, ∀i, ∀λ (10) δ ≥ 0, PJ ≥ 0, ∀j. Este programa lineal (LP) está diseñado para encontrar precios que minimicen el error de peor caso en todos los agentes. A partir de la definición de los precios de CE, se deduce que los precios de CE tendrían Δ = 0 como solución a (9), momento en el cual el comercio λt estaría en el mejor conjunto de respuesta de cada agente (con λt i = ∅, es decirsin comercio, para todos los agentes sin excedentes para el comercio a los precios). Ejemplo 5. Podemos ilustrar la formulación (9) en el Ejemplo 2, suponiendo que la simplicidad sea Vα = V (es decir, la verdad). El comercio eficiente asigna AB al Comprador 1 y CD al Comprador 3. La precisión buscará los precios P (a), P (B), P (C) y P (D) para minimizar el δ ≥ 0 requerido para satisfacer las restricciones: P (A) + P (B) + P (C) + P(D) ≥ 0 (vendedor) p (a) + p (b) ≤ 6 + δ (comprador 1) p (a) + δ ≥ 4, p (b) + δ ≥ 4 (comprador 2) p (c)+ P (D) ≤ 3 (Comprador 3) P (C) + δ ≥ 2, P (D) + Δ ≥ 2 (Comprador 4) Una solución óptima requiere P (A) = P (B) = 10/3,con δ = 2/3, con p (c) y p (d) tomando valores como p (c) = p (d) = 3/2. Pero (9) tiene un número exponencial de restricciones (Ec. 10). En lugar de resolverlo explícitamente, utilizamos la generación de restricciones [4] y generamos dinámicamente un subconjunto suficiente de restricciones. Deje que denote un subconjunto manejable de todas las operaciones posibles posibles al postor i. Luego, una versión relajada de (9) (ACC escrita) se formula sustituyendo (10) con Vα I (λ) - P (λ) ≤ Vα I (λt I) - P (λt i) + δ, ∀i,∀λ ∈ I, (11) donde yo es un conjunto de intercambios que son factibles para el postor, les di las otras ofertas. Fijando los precios p ∗, luego resolvemos n subproblemas (uno para cada postor), max λ vα i (λi)-p ∗ (λi) [r-wd (i)] s.t.λ ∈ Feas (x0), (12) para verificar si la solución (P ∗, δ ∗) a ACC es factible en el problema (9). En R-WD (i) el objetivo es determinar el comercio más preferido para cada postor a estos precios. Deje que ˆλi denote la solución a R-WD (i). Condición de verificación: Vα I (ˆλi) - P ∗ (ˆλ) ≤ Vα I (λt I) - P ∗ (λt i) + δ ∗, (13) y si esta condición se mantiene para todos los postores I, entonces solución (P ∗, δ ∗) es óptimo para el problema (9). De lo contrario, el comercio ˆλi se agrega a I para todos los postores I por los cuales esta restricción se viola y volvemos a solucionar el LP con el nuevo conjunto de restricciones.4 II: Equidad. En segundo lugar, rompemos los lazos restantes para preferir los precios justos: elegir precios que minimicen el peor error de caso con respecto a los pagos de umbral (es decir, la utilidad para los licitadores con pagos umbrales), pero sin elegir precios menos precisos.5 Ejemplo 6. Por ejemplo, la precisión en el Ejemplo 1 (representada en la Figura 1) requiere 12 ≤ PA +Pb ≤ 16 (para Vα = V). En estas valoraciones, los pagos de umbral serían 2 tanto para el vendedor como para el comprador. Esto se puede lograr exactamente en el precio con PA + Pb = 14. El método de lazos de justicia se formula como el siguiente LP: Min P, π π [justo] S.T.vα i (λ) - p (λ) ≤ vα i (λt i) - p (λt i) + δ ∗ i, ∀i, ∀λ ∈ I (14) π ≥ πvcg, i - (vα i (λt I) - p (λt i)), ∀i (15) π ≥ 0, pj ≥ 0, ∀j, donde δ ∗ representa el error en la solución óptima, de ACC. El objetivo aquí es el mismo que en la regla de pago umbral (ver Sección 4.3): minimice el error máximo entre el pago del postor (en Vα) para el comercio provisional y el pago de VCG (en Vα). La feria de problemas también se resuelve mediante la generación de restricciones, utilizando R-WD (I) para agregar restricciones violadas adicionales según sea necesario. III: Balance. En tercer lugar, rompemos los lazos restantes para preferir precios equilibrados: elegir precios que minimicen el precio máximo en todos los artículos. Volviendo nuevamente al Ejemplo 1, representado en la Figura 1, vemos que la precisión y la equidad requieren P (A) + P (B) = 14. Finalmente, el equilibrio establece p (a) = p (b) = 7. El equilibrio se justifica cuando, en igualdad de condiciones, es más probable que los elementos tengan valores similares a diferentes.6 El LP para el equilibrio se formula de la siguiente manera: Min P, Y y [Bal] S.T.Vα I (λ) - P (λ) ≤ Vα I (λt i) - P (λt I) + δ ∗ I, ∀i, ∀λ ∈ I (16) π ∗ I ≥ πvcg, I - (Vα I ((λt i) - p (λt i)), ∀i, (17) y ≥ pj, ∀j (18) y ≥ 0, pj ≥ 0, ∀j, donde δ ∗ representa el error en la solución óptima de ACC yπ ∗ representa el error en la solución óptima de Fair. La generación de restricciones también se usa para resolver BAL, generando nuevas operaciones para I según sea necesario.4 Problema R-WD (i) es una especialización del problema WD, en el que el objetivo es maximizar el pago de un solo licitador, en lugar del valor total en todos los licitadores. Se resuelve como un MIP, reescribiendo el objetivo en WD (t, x0) como max {viβ · satiβ - j p ∗ j · λij} para el agente i. Por lo tanto, la estructura del lenguaje de licitación se explota en la generación de nuevas limitaciones, porque esto se resuelve como un MIP conciso. Los otros postores se mantienen en el MIP (pero no aparecen en el objetivo), y se usan para definir el espacio de los oficios factibles.5 Los métodos de Dunford et al.[12], que usan un enfoque de nucleolo, también están estrechamente relacionados.6 El uso del equilibrio fue defendido por Kwasnica et al.[17]. Dunford et al.[12] Prefiere suavizar los precios en las rondas. Comentario 1: Refinamiento lexicográfico. Para los tres subproblemas también realizamos un refinamiento lexicográfico (con respecto a los postores en ACC y justo, y con respecto a los bienes en BAL). Por ejemplo, en ACC minimizamos sucesivamente el error máximo en todos los postores. Dada una solución inicial, primero precede el error a todos los postores para quienes una restricción (11) es vinculante. Para dicho postor i, la restricción se reemplaza con vα I (λ) - p (λ) ≤ vα I (λt i) - p (λt i) + δ ∗ i, ∀λ ∈ I, (19) y el erroral postor ya no aparece explícitamente en el objetivo. ACC se vuelve a resolver y avanza al minimizar aún más el error máximo en todos los postores que aún no se han fijado. Esto continúa, sujetando a cualquier nuevo licitador para quien una de las restricciones (11) sea vinculante, hasta que el error esté optimizado lexicográficamente para todos los licitadores.7 El mismo proceso exacto se repite para Fair y BAL, con los postores fijados y restricciones (15)reemplazado con π ∗ i ≥ πvcg, i - (vα i (λt i) - p (λt i)), ∀λ ∈ I, (donde π ∗ i es el objetivo actual) en justo, y elementos fijados y restricciones (18) reemplazado con p ∗ j ≥ pj (donde p ∗ j representa el objetivo para el precio máximo en ese artículo) en BAL. Comentario 2: Computación. Todas las limitaciones en I se conservan, y este conjunto crece en todas las etapas y en todas las rondas del intercambio. Por lo tanto, el esfuerzo computacional en la generación de restricciones se reutiliza. En la implementación, tenemos cuidado de abordar una serie de insertos que surgen debido a problemas de punto flotante. Preferimos errar por el lado de ser conservadores para determinar si agregar o no otra restricción en la verificación de realización (13). Esto evita problemas posteriores de invasibilidad. Además, cuando se fijan a los postores con el propósito de refinamiento lexicográfico, relajamos las restricciones de postor asociadas con un pequeño> 0 en el lado derecho.5.3 Reglas de actividad de preferencia revelada El papel de las reglas de actividad en la subasta es garantizar tanto la consistencia como el progreso a través de las rondas [21]. La consistencia en nuestro intercambio requiere que los licitantes endurezcan a medida que avanza el intercambio. Las reglas de actividad aseguran que los postores estén activos durante las primeras rondas y promueven una obtención útil durante todo el intercambio. Adoptamos una regla de actividad simple de preferencia revelada (RP). La idea se basa libremente en la regla RP en Ausubel et al.[1], donde se usa para CAS unilateral. La motivación es requerir algo más que consistencia: necesitamos que los licitadores proporcionen suficiente información para que el sistema pueda demostrar que una asignación es (aproximadamente) eficiente. Es útil pensar en los postores que interactúan con agentes de poder que actuarán en su nombre al responder a los precios provisionales PT - 1 determinados al final de la ronda T - 1. El único conocimiento que tal representación tiene de la valoración de un postor es a través de la oferta. Supongamos que el intercambio consultó un indicador y preguntó en qué comercio estaba más interesado al postor a los precios provisionales. La regla RP dice lo siguiente: el proxy debe tener suficiente 7, por ejemplo, aplicando esto a la precisión en el Ejemplo 2, resolvemos una vez y encontramos que los licitadores 1 y 2 son vinculantes, por error δ ∗ = 2/3. Los fijamos y luego minimizamos el error a los postores 3 y 4. Finalmente, esto da p (a) = p (b) = 10/3 y p (c) = p (d) = 5/3, con precisión 2/3 a los postores 1 y 2 y 1/3 a los postores 3 y4. 254 Información para poder determinar este comercio de excedentes a los precios actuales. Considere los siguientes ejemplos: Ejemplo 7. Un postor tiene XOR ( +A, +B) y un valor de +5 en la hoja +A y un rango de valor de [5,10] en la hoja +b. Supongamos que los precios son actualmente 3 para cada uno de A y B. La regla RP se cumple porque el proxy sabe que, sin embargo, la incertidumbre del valor restante en +B se resuelve, el postor siempre (débilmente) preferirá +B a +A. Ejemplo 8. Un postor tiene límites XOR ( +A, +B) y de valor [5, 10] en el nodo raíz y un valor de 1 en la hoja +a. Supongamos que los precios son actualmente 3 para cada uno de A y B. La regla RP se satisface porque el postor siempre preferirá +A a +B a precios iguales, cualquier forma de que el valor incierto en el nodo raíz se resuelva en última instancia. Notación de sobrecarga, deje que Vi ∈ Ti denote una valoración que sea consistente con las valoraciones inferiores y superiores en el árbol de licitación TI. Definición 4. El árbol de licitación TI satisface RP a los precios pt - 1 si y solo si existe un comercio factible l ∗ para el cual, vi (l ∗ i) - pt - 1 (l ∗ i) ≥ max λ∈Feas (x0) vi (λi) - pt - 1 (λi), ∀vi ∈ Ti.(20) Para hacer esta determinación para el postor I, resolvemos una secuencia de problemas, cada uno de los cuales es una variación en el problema WD. Primero, construimos un comercio candidato de unión inferior, que es un comercio factible que resuelve: max λ vi (λi)-pt-1 (λi) [rp1 (i)] s.t.λ ∈ Feas (x0), (21) La solución π ∗ L a Rp1 (i) representa el pago máximo que el postor puedo lograr en todos los intercambios factibles, dada su valoración pesimista. En segundo lugar, rompemos lazos para encontrar un comercio con una incertidumbre de valor máximo en todas las soluciones posibles a RP1 (i): max λ vi (λi) - vi (λi) [rp2 (i)] s.t.λ ∈ Feas (x0) (22) vi (λi) - pt - 1 (λi) ≥ π ∗ l (23) Adoptamos la solución l ∗ i como nuestro candidato para el comercio que puede satisfacer RP. Para comprender la importancia de esta regla de roce, considere el Ejemplo 7. El proxy puede probar +B pero no +A es la mejor respuesta para todos Vi ∈ Ti, y debe elegir +B como candidato. Observe que +B es un contraejemplo a +A, pero no al revés. Ahora, construimos una valoración modificada ˜Vi, estableciendo ˜Viβ = VIβ, si β ∈ Sat (L ∗ i) VIβ, de lo contrario.(24) donde SAT (L ∗ I) es el conjunto de nodos que se satisfacen en el árbol inferior para el comercio L ∗ i. Dada esta valoración modificada, encontramos u ∗ para resolver: max λ ˜vi (λi) - pt - 1 (λi) [rp3 (i)] s.t.λ ∈ Feas (x0) (25) Deje que π ∗ u denote el pago de este comercio óptimo a valores modificados ˜v. Llamamos a comercio u ∗ i el comercio de testigos. Mostramos en la Proposición 1 que la regla RP se satisface si y solo si π ∗ l ≥ π ∗ u.La construcción de la valoración modificada como ˜Vi reconoce que existe una incertidumbre compartida entre los comercios que satisfacen los mismos nodos en un árbol de licitación. El ejemplo 8 ayuda a ilustrar esto. Solo usando vi en rp3 (i), encontraríamos l ∗ i compre a con el pago π ∗ l = 3 pero luego encuentre u ∗ i compra b con π ∗ u = 7 y falla rp. Debemos reconocer que, sin embargo, la incertidumbre en el nodo raíz se resuelve, afectará +A y +B exactamente de la misma manera. Por esta razón, establecemos ˜Viβ = VIβ = 5 en el nodo raíz, que es exactamente el mismo valor que se adoptó para determinar π ∗ l. Luego, RP3 (i) aplicado a U ∗ Do compra A y se considera que la prueba RP se pasa. Proposición 1. El árbol de licitación TI satisface RP dados de precios PT-1 si y solo si algún comercio de límite inferior l ∗ i que resuelve RP1 (I) y RP2 (i) Satisface: VI (Ti, L ∗ I)-PT-1 (L ∗i) ≥ ˜Vi (ti, u ∗ i) - pt - 1 (u ∗ i), (26) donde ˜Vi es la valoración modificada en la ecuación.(24). Prueba. Por suficiencia, observe que la diferencia en la recompensa entre el comercio L ∗ I y otro comercio λi no se ve afectado por la forma en que la incertidumbre se resuelve en cualquier nodo que se satisfaga tanto en L ∗ I como en λi. La fijación de los valores en ˜Vi en los nodos satisfechos en L ∗ I tiene el efecto de eliminar esta consideración cuando se selecciona un comercio u ∗ i que satisface uno de estos nodos. Por otro lado, arreglar los valores en estos nodos no tiene ningún efecto en las operaciones consideradas en RP3 (i) que no comparten un nodo con L ∗ i. Para la dirección necesaria, primero mostramos que cualquier comercio que satisfaga RP debe resolver RP1 (i). Supongamos lo contrario, que algunos λi con pago mayor que π ∗ l satisfacen RP. Pero, la valoración vi ∈ Ti junto con L ∗ I presenta un contraejemplo a RP (Eq. 20). Ahora, supongamos (por contradicción) que algunos λi con el pago máximo π ∗ l pero la incertidumbre menor que l ∗ i satisface rp. Proceder por análisis de casos. Caso A): Solo una solución a RP1 (i) tiene un valor incierto y, por lo tanto, λi tiene cierto valor. Pero, esto no puede satisfacer RP porque L ∗ i con valor incierto sería un contraejemplo a RP (Eq. 20). Caso B): Dos o más soluciones a RP1 (i) tienen un valor incierto. Aquí, primero argumentamos que uno de estos intercambios debe satisfacer un superconjunto (débil) de todos los nodos con un valor incierto que satisfacen todas las demás operaciones en este conjunto. Esto es por RP. Sin esto, para cualquier opción de comercio que resuelva RP1 (i), hay otro comercio con un conjunto disjunto de nodos inciertos pero satisfechos que proporciona un contraejemplo a RP (Ec. 20). Ahora, considere el caso de que algún comercio contiene un superconjunto de todos los nodos inciertos satisfechos de los otros oficios. Claramente, RP2 (i) elegirá este comercio, L ∗ I y λi deben satisfacer un subconjunto de estos nodos (por suposición). Pero, ahora vemos que λi no puede satisfacer RP porque l ∗ sería un contraejemplo para RP. El incumplimiento de la regla de actividad debe tener alguna consecuencia. En las reglas actuales, la acción predeterminada que elegimos es establecer los límites superiores en las valoraciones al valor máximo del precio provisional en un nodo8 y el valor inferior en ese nodo.9 Tal postor puede permanecer activo 8 el precio provisional sobreUn nodo se define como el precio total mínimo en todas las operaciones factibles para las cuales se satisface el subárbol enraizado en el árbol.9 Esto es completamente análogo a cuando un postor en una subasta de reloj ascendente deja de ofertar a un precio: no se le permite ofertar a un precio más alto nuevamente en futuras rondas.255 dentro del intercambio, pero solo con valoraciones que son consistentes con estos nuevos límites.5.4 Comentarios del postor En cada ronda, nuestro diseño predeterminado proporciona a cada postor el comercio provisional y también los precios provisionales actuales. Ver 7 para una discusión adicional. También brindamos orientación para ayudar a un postor a cumplir con la regla RP. SAT (L ∗ I) y SAT (U ∗ I) denoten los nodos que están satisfechos en los comercios L ∗ I y U ∗ I, como se calcula en RP1-RP3. Lema 2. Cuando RP falla, un postor debe aumentar un límite inferior en al menos un nodo en sat (l ∗ i) \\ sat (u ∗ i) o disminuir un límite superior en al menos un nodo en sat (u ∗ i) \\ sat (sat (L ∗ i) para cumplir con la regla de actividad. Prueba. Cambiar los valores superiores o inferiores en los nodos que no están satisfechos por el comercio no cambia l ∗ i o u ∗ i, y no cambia el pago de estas operaciones. Por lo tanto, la condición RP continuará fallando. Del mismo modo, cambiar los límites en los nodos que se satisfacen en ambas operaciones no tiene ningún efecto en la preferencia revelada. Un cambio a un límite inferior en un nodo compartido afecta a L ∗ I y U ∗ I idénticamente debido al uso de la valoración modificada para determinar u ∗ i. Un cambio a un límite superior en un nodo compartido no tiene ningún efecto para determinar L ∗ i o u ∗ i. Tenga en cuenta que cuando SAT (U ∗ I) = SAT (L ∗ I), la condición (26) siempre se satisface trivialmente, por lo que la guía en el lema siempre está bien definida cuando RP falla. Este es un mecanismo de retroalimentación elegante porque es adaptativo. Una vez que un postor realiza algunos cambios en algún subconjunto de estos nodos, el postor puede consultar el intercambio. El intercambio puede responder sí, o puede revisar el conjunto de nodos SAT (λ ∗ L) y SAT (λ ∗ u) según sea necesario.5.5 Condiciones de terminación Una vez que cada postor ha cometido sus nuevas ofertas (y cumplió la regla RP o sufrió la multa), luego se cierra la ronda T. En este punto, la tarea es determinar la nueva valuación α y, a su vez, la asignación provisional λt y los precios provisionales Pt. También se verifica una condición de terminación para determinar si debe mover el intercambio a una ronda de último y final. Para definir la valuación α, calculamos las siguientes dos cantidades: pesimista en pesimista (pp) determinar un comercio eficiente, λ ∗ l, a valores pesimistas, es decir, para resolver maxλ i vi (λi) y establecer pp = i vi (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ ()∗ li). Pesimista en optimista (PO) determina un comercio eficiente, λ ∗ u, a valores optimistas, es decir, para resolver maxλ i vi (λi) y establecer po = i vi (λ ∗ ui). Primero, tenga en cuenta que PP ≥ PO y PP ≥ 0 por definición, para todos los licitadores, aunque PO puede ser negativo (porque el comercio correcto en V no es actualmente un comercio útil en V). Reconociendo esto, defina γeff (PP, PO) = 1 + PP - PO PP, (27) cuando pp> 0, y observe que γeff (PP, PO) ≥ 1 cuando esto se define, y que γeff (PP, PO)Comenzará a lo grande y luego la tendencia hacia 1 a medida que la asignación optimista converja hacia la asignación pesimista. En cada ronda, definimos αeff ∈ [0, 1] AS: αeff = 0 cuando PP es 0 1/γeff de lo contrario (28), que es 0 mientras que PP es 0 y luego tendencias hacia 1 una vez PP> 0 en alguna ronda. Esto se usa para definir la valuación α Vα I = αeff VI + (1-αeff) VI, ∀i, (29) que se utiliza para definir la asignación provisional y los precios provisionales. El efecto es definir endógenmente un cronograma para pasar de valores optimistas a pesimistas en las rondas, en función de cuán cerca están los intercambios entre sí. Condición de terminación. Al pasar a la ronda de la última y final, y finalmente cerrar, también nos importa la convergencia de los pagos, además de la convergencia hacia un comercio eficiente. Para esto, introducimos otro parámetro, αthresh ∈ [0, 1], que tenden de 0 a 1 a medida que los pagos umbral en valoraciones inferiores y superiores convergen. Considere el siguiente parámetro: γthresh = 1 + || pthresh (v) - pthresh (v) || 2 (pp/nactive), (30) que se define para pp> 0, donde pthresh (v) denota los pagos de umbral enEl perfil de valoración V, Nactive es el número de postores que participan activamente en el comercio en el comercio de PP, y ||· || 2 es la norma L2. Tenga en cuenta que γthresh se define para pagos y no pagos. Esto es apropiado porque es la precisión del resultado del intercambio lo que importa: es decir, el comercio y los pagos. Dado esto, definimos αthresh = 0 cuando PP es 0 1/γthresh de lo contrario (31), que es 0, mientras que PP es 0 y luego las tendencias hacia 1 a medida que se realiza el progreso. Definición 5 (terminación). Transiciones de hielo a una ronda de último final cuando uno de los siguientes se mantiene: 1. αeff ≥ COTOFFEFF y αTHRESH ≥ CORTOFFRESH, 2. No hay comercio en los valores optimistas, donde el corte, el corte, el corte ∈ (0, 1] determine la precisión requeridapara la terminación. Al final de la última redonda y final, Vα = V se usa para definir el comercio final y los pagos de umbral final. Ejemplo 9. Considere nuevamente el ejemplo 1, y considere los límites superior e inferior como se muestra en la Figura 1. Primero, si los límites de los vendedores eran [−20, −4], entonces hay un comercio optimista pero no hay comercio pesimista, y po = −4 y pp = 0, y αeff = 0. En los límites representados, se producen los oficios optimistas y pesimistas y po = Pp = 4 y αeff = 1. Sin embargo, podemos ver que los pagos de umbral son (17, −17) en V pero (14, −14) en v. Evaluación de γthresh, tenemos γthresh = 1 + √ 1/2 (32 + 32) (4/2)= 5/2, y αthresh = 2/5. Para el corte del corte <2/5, el intercambio permanecería abierto. Por otro lado, si el valor de los compradores para +AB estaba entre [18, 24] y el valor de los vendedores para −AB estaba entre [−12, −6], los pagos de umbral son (15, −15) tanto enLímites inferiores, y αThresh = 1. 256 Agente de líneas de propósito de componentes. Captura el comportamiento estratégico y las decisiones de revelación de información 762 El soporte del modelo proporciona soporte XML para cargar bienes y valoraciones en el mundo 200 World realiza un seguimiento de todos los detalles de agentes, buenos y de valoración 998 Intercambios de controladores y controles de comunicación, y coordina el comportamiento del agente remoto 585 IMPLEMENTOS DE IDIACCIÓN DE PIDO.El lenguaje de licitación basado en árbol 1119 Regla de actividad implementa la regla de preferencia revelada con el soporte de rango 203 Comprobaciones del motor de la regla de cierre si la condición de terminación de subasta alcanzada 137 WD Engine proporciona el motor de precios lógico 377 relacionado con WD.por motores en nuestro Optimizer General Optimizer Formulación 346 Constructores de precios utilizados por tres etapas de fijación de precios 256 Constructores de determinación de ganadores utilizados por WD, regla de actividad, regla de cierre y código de soporte de la generación de restricciones de precios 365 Código de soporte;facilita el reemplazo modular de los componentes anteriores 510 Tabla 1: componente de intercambio y desglose de código.6. Infraestructura de sistemas El hielo es aproximadamente 6502 líneas de código Java, dividido en los paquetes funcionales descritos en la Tabla 1.10 El prototipo es modular para que los investigadores puedan reemplazar fácilmente los componentes para la experimentación. Además del intercambio central discutido en este documento, hemos desarrollado un componente de agente que permite a un usuario simular el comportamiento y el conocimiento de otros jugadores en el sistema, permitiendo mejor que un usuario formule su estrategia antes del juego real. Un usuario especifica un modelo de valoración en una interpretación XMLL de nuestro lenguaje de licitación, que se revela al intercambio a través de la estrategia de los agentes. Las principales tareas de intercambio son manejadas por motores que dictan la lógica específica de no optimizador. Estos motores impulsan los constructores MIP/LP apropiados. Nos dimos cuenta de que todas nuestras formulaciones de optimización se reducen a dos clases de problema de optimización. El primero, utilizado por la determinación del ganador, la regla de actividad, la regla de cierre y la generación de restricciones en los precios, es un MIP que encuentra operaciones que maximizan el valor, la mantenimiento de los precios y las holguras constantes. El segundo, utilizado por las tres etapas de precios, es un LP que mantiene constantes las operaciones, que busca minimizar la holgura, las ganancias o los precios. Aprovechamos la comunidad de estos problemas mediante el uso de constructores LP/MIP comunes que difieren solo en unos pocos ganchos funcionales para proporcionar las variables correctas para la optimización. Hemos generalizado nuestra interfaz de solucionador de optimización de back-end (actualmente admitimos CPLEX y la LPSOLVE con licencia LGPILS), y podemos aprovechar el equilibrio de carga y la capacidad de resolución de MIP/LP paralelo que proporciona esta biblioteca.7. Discusión El lenguaje de licitación se definió para permitir una simetría perfecta entre compradores y vendedores y proporcionar expresividad en un dominio de intercambio, por ejemplo, para licitadores mixtos interesados en ejecutar operaciones como swaps. Esto resultó especialmente desafiante. El avance se produjo cuando nos centramos en los cambios en el valor de las operaciones en lugar de proporcionar valores absolutos para las asignaciones. Para simplificar, requerimos la misma estructura de árbol para las valoraciones superiores e inferiores.10 El tamaño del código se mide en la línea de código de origen físico (SLOC), como se genera con el recuento SLOC de David A. Wheelers. El total de 6502 incluye 184 para instrumentación (no se muestra en la tabla). La interfaz JOPT Solver es otra línea de 1964, y Castor genera automáticamente alrededor de 5200 líneas de código para la manipulación de archivos XML.11 http://econcs.eecs.harvard.edu/jopt Esto permite que el lenguaje en sí mismo garantice la consistencia (con el valor superior al menos el valor más bajo en todas las operaciones) y aplique el endurecimiento monotónico de estos límites para todas las operaciones a través de las rondas. También proporciona un método eficiente para verificar la regla de actividad de RP, ya que hace que sea sencillo razonar sobre la incertidumbre compartida entre las operaciones. La decisión de adoptar un enfoque directo y proxy en el que los licitadores expresan sus valores superiores e inferiores a un agente de poder confiable que interactúa con el intercambio se realizó temprano en el proceso de diseño. En muchos sentidos, esta es la forma más clara e inmediata de generalizar el diseño en Parkes et al.[24] y hazlo iterativo. Además, esto elimina muchas oportunidades para la manipulación estratégica: los postores están restringidos a establecer declaraciones (incrementales) sobre sus valoraciones. Otra ventaja es que hace que la regla de la actividad sea fácil de explicar: los licitadores siempre pueden cumplir con la regla de la actividad ajustando los límites de tal manera que su verdadero valor permanece en el soporte.12 Quizás lo más importante, tener información explícita sobre los valores superiores e inferiores permite el progreso temprano en el progreso temprano.Rondas, incluso mientras no hay comercio eficiente en valores pesimistas. La información superior e inferior también proporciona orientación sobre cuándo terminar. Tenga en cuenta que tomado por sí mismo, PP = PO no implica que el comercio provisional actual sea eficiente con respecto a todos los valores consistentes con la información del valor actual. La diferencia en los valores entre diferentes operaciones, agregado en todos los postores, podría ser similar a los límites inferiores y superiores pero bastante diferentes a los valores intermedios (incluida la verdad). Sin embargo, conjeturamos que PP = PO demostrará un excelente indicador de eficiencia en entornos prácticos donde la forma de las valoraciones superiores e inferiores transmite información útil. Esto es digno de investigación experimental. Además, el uso de la actividad de precio y RP proporciona garantías adicionales. Adoptamos precios lineales (precios en artículos individuales) en lugar de precios no lineales (con precios en un comercio no igual a la suma de los precios en los artículos del componente) temprano en el proceso de diseño. La concisión de esta representación de precios es muy importante para la tractabilidad computacional dentro del intercambio y también para promover la simplicidad y la transparencia para los postores. La regla de actividad de RP se adoptó más tarde, y es una buena opción debido a sus excelentes propiedades teóricas cuando se combina con los precios de CE. Lo siguiente se puede establecer fácilmente: dados los precios exactos de CE PT-1 para el comercio provisional 12 Esto está en contraste con los enfoques basados en precios indirectos, como el proxy de reloj [1], en el que los licitadores deben poder razonar sobre el RP-restricciones implícitas por ofertas en cada ronda.257 λt-1 en las valoraciones Vα, entonces, si los valores superiores e inferiores al comienzo de la ronda T ya satisfacen la regla RP (y sin la necesidad de rompas de corbata), el comercio provisional es eficiente para todas las valoraciones consistentes con las actualesTOJOS Cuando existen precios lineales de CE, esto proporciona una declaración de solidez e integridad: si PP = PO, existen precios lineales de CE y la regla RP está satisfecha, el comercio provisional es eficiente (solidez);Si los precios son los precios exactos de CE para el comercio provisional en Vα, pero el comercio es ineficiente con respecto a algún perfil de valoración consistente con los árboles de licitación actuales, entonces al menos un postor debe fallar RP con su árbol de licitación actual y se realizará un progreso (lo completo). El trabajo futuro debe estudiar la convergencia experimentalmente y extender esta teoría para permitir precios aproximados. Algunos aspectos estratégicos de nuestro diseño de hielo merecen comentarios y más estudios. Primero, no afirmamos que respondiera sinceramente a la regla RP es un equilibrio ex post.13 Sin embargo, el intercambio está diseñado para imitar la regla umbral en su esquema de pago, que se sabe que tiene propiedades de incentivos útiles [16]. Sin embargo, debemos tener cuidado. Por ejemplo, no sugerimos proporcionar αeff a los postores, porque a medida que αeff se acerca 1, informaría a los postores que los valores de oferta se están volviendo irrelevantes para determinar el comercio, pero simplemente se usan para determinar los pagos (y los postores se volverían cada vez más reacios a aumentar sus valoraciones más bajas). Además, los postores no se han considerado en este trabajo al colusión. Este es un problema que merece cierta atención en el trabajo futuro.8. Conclusiones En este trabajo diseñamos y prototipos de un intercambio combinatorio iterativo escalable y altamente expresivo. El diseño incluye muchas características interesantes, que incluyen: un nuevo lenguaje de licitación para intercambios, un nuevo método para construir precios lineales aproximados a partir de idiomas expresivos, y un método de obtitación proxed con valoraciones optimistas y pesimistas con un nuevo método para evaluar una preferencia reveladaregla de actividad. El intercambio se implementa completamente en Java y está en una fase de validación. Los próximos pasos para nuestro trabajo son permitir a los postores refinar la estructura del árbol de ofertas además de los valores en el árbol. Tenemos la intención de estudiar las propiedades de obtención del intercambio y hemos reunido un conjunto de pruebas de instancias de problemas de intercambio. Además, estamos comenzando a participar en colaboraciones para aplicar el diseño al despegue de las aerolíneas y la programación de ranuras de aterrizaje y a la asignación de recursos en sistemas computacionales distribuidos de red Widearea. Agradecimientos Nos gustaría dedicar este documento a todos los participantes en CS 286R en la Universidad de Harvard en la primavera de 2004. Este trabajo es apoyado en parte por NSF Grant IIS-0238147.9. Referencias [1] L. Ausubel, P. Cramton y P. Milgrom. La subasta de reloj-proxy: un diseño práctico de subasta combinatoria. En Cramton et al.[9], Capítulo 5. [2] M. Babaioff, N. Nisan y E. Pavlov. Mecanismos para un mercado distribuido espacialmente. En Proc.5 ° ACM Conf.En Comercio electrónico, páginas 9-20. ACM Press, 2001. 13 Dado el teorema de imposibilidad de Myerson-Satterthwaite [22] y el método por el cual determinamos el comercio que no debemos esperar esto.[3] M. Ball, G. Donohue y K. Hoffman. Subastas para la asignación segura, eficiente y equitativa de los recursos del sistema del espacio aéreo. En S. Cramton, Shoham, editor, subastas combinatorias.2004. Próximo.[4] D. Bertsimas y J. Tsitsiklis. Introducción a la optimización lineal. Athena Scientific, 1997. [5] S. Bikhchandani y J. M. Ostroy. El modelo de asignación de paquetes. Journal of Economic Theory, 107 (2): 377-406, 2002. [6] C. Boutilier. Una formulación POMDP de problemas de obtención de preferencias. En Proc.18ª Conferencia Nacional sobre Inteligencia Artificial (AAAI-02), 2002. [7] C. Boutilier y H. Hoos. Idiomas de licitación para subastas combinatorias. En Proc.17ª Conferencia Internacional Conjunta sobre Inteligencia Artificial (IJCAI-01), 2001. [8] W. Conen y T. Sandholm. PREVENTACIÓN DE PREFERENCIA EN SUBASTAS COMBINATORIALES. En Proc.3er ACM Conf.Sobre el comercio electrónico (EC-01), páginas 256-259. ACM Press, Nueva York, 2001. [9] P. Cramton, Y. Shoham y R. Steinberg, editores. Subastas combinatorias. MIT Press, 2004. [10] S. de Vries, J. Schummer y R. V. Vohra. En subastas ascendentes de Vickrey para objetos heterogéneos. Informe técnico, Meds, Kellogg School, Northwestern University, 2003. [11] S. de Vries y R. V. Vohra. Subastas combinatorias: una encuesta. Informs Journal on Computing, 15 (3): 284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana y T. Wilson. Prueba de algoritmos de precios lineales para su uso en subastas combinatorias ascendentes. Informe técnico, Seor, George Mason University, 2003. [13] Y. Fu, J. Chase, B. Chun, S. Schwab y A. Vahdat. Sharp: una arquitectura para la mirada de recursos seguros. En Actas del Simposio del XIX ACM sobre los principios de sistemas operativos, páginas 133-148. ACM Press, 2003. [14] B. Hudson y T. Sandholm. Efectividad de los tipos de consultas y políticas para la obtención de preferencias en subastas combinatorias. En Proc.3er int. Articulación. Conf.En agentes autónomos y sistemas de agentes múltiples, páginas 386-393, 2004. [15] V. Krishna. Teoría de la subasta. Academic Press, 2002. [16] D. Krych. Cálculo y análisis de los equilibrios de NASH de las reglas de pago basadas en Vickrey para intercambios combinatorios, Harvard College, abril de 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter y C. Demartini. Un diseño nuevo y mejorado para subastas iterativas de múltiples objetivos. Management Science, 2004. A aparecer.[18] E. Kwerel y J. Williams. Una propuesta para una transición rápida a la asignación del mercado del espectro. Informe técnico, Oficina de Planes y Política de la FCC, noviembre de 2002. [19] S. M. Lahaie y D. C. Parkes. Aplicación de algoritmos de aprendizaje a la obtención de preferencias. En Proc. ACM Conf.en el comercio electrónico, páginas 180-188, 2004. [20] R. P. McAfee. Una subasta de doble estrategia dominante. J. of Economic Theory, 56: 434-450, 1992. [21] P. Milgrom. Poner la teoría de la subasta para que funcione: la subasta ascendente simultánea. J.Pol. Econ., 108: 245-272, 2000. [22] R. B. Myerson y M. A. Satterthwaite. Mecanismos eficientes para el comercio bilateral. Journal of Economic Theory, 28: 265-281, 1983. [23] N. Nisan. Licitación y asignación en subastas combinatorias. En Proc.2º ACM Conf.sobre Comercio Electrónico (EC-00), Páginas 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam y M. ESO. Lograr el equilibrio presupuestario con los esquemas de pago con sede en Vickrey en los intercambios. En Proc.17ª Conferencia Internacional Conjunta sobre Inteligencia Artificial (IJCAI-01), páginas 1161-1168, 2001. [25] D. C. Parkes y L. H. Ungar. Subastas combinatorias iterativas: teoría y práctica. En Proc.17ª Conferencia Nacional sobre Inteligencia Artificial (AAAI-00), páginas 74-81, julio de 2000. [26] S. J. Rassenti, V. L. Smith y R. L. Bulfin. Un mecanismo combinatorio para la asignación de intervalos de tiempo del aeropuerto. Bell Journal of Economics, 13: 402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc y R. M. Harstad. Subastas combinatorias computacionalmente manejables. Management Science, 44 (8): 1131-1147, 1998. [28] T. Sandholm y C. Boutilier. PREVENTACIÓN DE PREFERENCIA EN SUBASTAS COMBINATORIALES. En Cramton et al.[9], Capítulo 10. [29] P. R. Wurman y M. P. Wellman. AKBA: una subasta combinatoria progresiva de precio anónimo. En la segunda conferencia ACM sobre comercio electrónico, páginas 21-29, 2000. 258",
    "original_sentences": [
        "ICE: An Iterative Combinatorial Exchange David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an iterative combinatorial exchange (ICE).",
        "The exchange incorporates a tree-based bidding language that is concise and expressive for CEs.",
        "Bidders specify lower and upper bounds on their value for different trades.",
        "These bounds allow price discovery and useful preference elicitation in early rounds, and allow termination with an efficient trade despite partial information on bidder valuations.",
        "All computation in the exchange is carefully optimized to exploit the structure of the bid-trees and to avoid enumerating trades.",
        "A proxied interpretation of a revealedpreference activity rule ensures progress across rounds.",
        "A VCG-based payment scheme that has been shown to mitigate opportunities for bargaining and strategic behavior is used to determine final payments.",
        "The exchange is fully implemented and in a validation phase.",
        "Categories and Subject Descriptors: I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms: Algorithms, Economics, Theory. 1.",
        "INTRODUCTION Combinatorial exchanges combine and generalize two different mechanisms: double auctions and combinatorial auctions.",
        "In a double auction (DA), multiple buyers and sellers trade units of an identical good [20].",
        "In a combinatorial auction (CA), a single seller has multiple heterogeneous items up for sale [11].",
        "Buyers may have complementarities or substitutabilities between goods, and are provided with an expressive bidding language.",
        "A common goal in both market designs is to determine the efficient allocation, which is the allocation that maximizes total value.",
        "A combinatorial exchange (CE) [24] is a combinatorial double auction that brings together multiple buyers and sellers to trade multiple heterogeneous goods.",
        "For example, in an exchange for wireless spectrum, a bidder may declare that she is willing to pay $1 million for a trade where she obtains licenses for New York City, Boston, and Philadelphia, and loses her license for Washington DC.",
        "Thus, unlike a DA, a CE allows all participants to express complex valuations via expressive bids.",
        "Unlike a CA, a CE allows for fragmented ownership, with multiple buyers and sellers and agents that are both buying and selling.",
        "CEs have received recent attention both in the context of wireless spectrum allocation [18] and for airport takeoff and landing slot allocation [3].",
        "In both of these domains there are incumbents with property rights, and it is important to facilitate a complex multi-way reallocation of resources.",
        "Another potential application domain for CEs is to resource allocation in shared distributed systems, such as PlanetLab [13].",
        "The instantiation of our general purpose design to specific domains is a compelling next step in our research.",
        "This paper presents the first design for an iterative combinatorial exchange (ICE).",
        "The genesis of this project was a class, CS 286r Topics at the Interface between Economics and Computer Science, taught at Harvard University in Spring 2004.1 The entire class was dedicated to the design and prototyping of an iterative CE.",
        "The ICE design problem is multi-faceted and quite hard.",
        "The main innovation in our design is an expressive yet concise tree-based bidding language (which generalizes known languages such as XOR/OR [23]), and the tight coupling of this language with efficient algorithms for price-feedback to guide bidding, winner-determination to determine trades, and revealed-preference activity rules to ensure progress across rounds.",
        "The exchange is iterative: bidders express upper and lower valuations on trades by annotating their bid-tree, and then tighten these bounds in response to price feedback in each round.",
        "The Threshold payment rule, introduced by Parkes et al. [24], is used to determine final payments.",
        "The exchange has a number of interesting theoretical properties.",
        "For instance, when there exist linear prices we establish soundness and completeness: for straightforward bidders that adjust their bounds to meet activity rules while keeping their true value within the bounds, the exchange will terminate with the efficient allocation.",
        "In addition, the 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Truth Agent Act Rule WD ACC FAIR BALClosing RuleVickreyThreshold DONE !",
        "DONE 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER 2,2 +A +15 +8 +B +15 +8 BUYER 2,2 -A -2 -6 -B -2 -6 SELLER BUYER, buy AB SELLER, sell AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PBUYER = 16 - (4-0) = 12 PSELLER = -12 - (4-0) = -16 PBUYER = 14 PSELLER = -14 Pessim istic O ptim istic = 1 Figure 1: ICE System Flow of Control efficient allocation can often be determined without bidders revealing, or even knowing, their exact value for all trades.",
        "This is essential in complex domains where the valuation problem can itself be very challenging for a participant [28].",
        "While we cannot claim that straightforward bidding is an equilibrium of the exchange (and indeed, should not expect to by the Myerson-Satterthwaite impossibility theorem [22]), the Threshold payment rule minimizes the ex post incentive to manipulate across all budget-balanced payment rules.",
        "The exchange is implemented in Java and is currently in validation.",
        "In describing the exchange we will first provide an overview of the main components and introduce several working examples.",
        "Then, we introduce the basic components for a simple one-shot variation in which bidders state their exact values for trades in a single round.",
        "We then describe the full iterative exchange, with upper and lower values, price-feedback, activity rules, and termination conditions.",
        "We state some theoretical properties of the exchange, and end with a discussion to motivate our main design decisions, and suggest some next steps. 2.",
        "AN OVERVIEW OF THE ICE DESIGN The design has four main components, which we will introduce in order through the rest of the paper: • Expressive and concise tree-based bidding language.",
        "The language describes values for trades, such as my value for selling AB and buying C is $100, or my value for selling ABC is -$50, with negative values indicating that a bidder must receive a payment for the trade to be acceptable.",
        "The language allows bidders to express upper and lower bounds on value, which can be tightened across rounds. • Winner Determination.",
        "Winner-determination (WD) is formulated as a mixed-integer program (MIP), with the structure of the bid-trees captured explicitly in the formulation.",
        "Comparing the solution at upper and lower values allows for a determination to be made about termination, with progress in intermediate rounds driven by an intermediate valuation and the lower values adopted on termination. • Payments.",
        "Payments are computed using the Threshold payment rule [24], with the intermediate valuations adopted in early rounds and lower values adopted on termination. • Price feedback.",
        "An approximate price is computed for each item in the exchange in each round, in terms of the intermediate valuations and the provisional trade.",
        "The prices are optimized to approximate competitive equilibrium prices, and further optimized to best approximate the current Threshold payments with remaining ties broken to favor prices that are balanced across different items.",
        "In computing the prices, we adopt the methods of constraint-generation to exploit the structure of the bidding language and avoid enumerating all feasible trades.",
        "The subproblem to generate new constraints is a variation of the WD problem. • Activity rule.",
        "A revealed-preference activity rule [1] ensures progress across rounds.",
        "In order to remain active, a bidder must tighten bounds so that there is enough information to define a trade that maximizes surplus at the current prices.",
        "Another variation on the WD problem is formulated, both to verify that the activity rule is met and also to provide feedback to a bidder to explain how to meet the rule.",
        "An outline of the ICE system flow of control is provided in Figure 1.",
        "We will return to this example later in the paper.",
        "For now, just observe in this two-agent example that the agents state lower and upper bounds that are checked in the activity rule, and then passed to winner-determination (WD), and then through three stages of pricing (accuracy, fairness, balance).",
        "On passing the closing rule (in which parameters αeff and αthresh are checked for convergence of the trade and payments), the exchange goes to a last-and-final round.",
        "At the end of this round, the trade and payments are finally determined, based on the lower valuations. 2.1 Related Work Many ascending-price one-sided CAs are known in the literature [10, 25, 29].",
        "Direct elicitation approaches have also been proposed for one-sided CAs in which agents respond to explicit queries about their valuations [8, 14, 19].",
        "A number of ascending CAs are designed to work with simple prices on items [12, 17].",
        "The price generation methods that we use in ICE generalize the methods in these earlier papers.",
        "Parkes et al. [24] studied sealed-bid combinatorial exchanges and introduced the Threshold payment rule.",
        "Subsequently, Krych [16] demonstrated experimentally that the Threshold rule promotes efficient allocations.",
        "We are not aware of any previous studies of iterative CEs.",
        "Dominant strategy DAs are known for unit demand [20] and also for single-minded agents [2].",
        "No dominant strategy mechanisms are known for the general CE problem.",
        "ICE is a hybrid auction design, in that it couples simple item prices to drive bidding in early rounds with combinatorial WD and payments, a feature it shares with the clock-proxy design of Ausubel et al. [1] for one-sided CAs.",
        "We adopt a variation on the clock-proxy auctionss revealedpreference activity rule.",
        "The bidding language shares some structural elements with the LGB language of Boutilier and Hoos [7], but has very different semantics.",
        "Rothkopf et al. [27] also describe a restricted tree-based bidding language.",
        "In LGB, the semantics are those of propositional logic, with the same items in an allocation able to satisfy a tree in multiple places.",
        "Although this can make LGB especially concise in some settings, the semantics that we propose appear to provide useful locality, so that the value of one component in a tree can be understood independently from the rest of the tree.",
        "The idea of capturing the structure of our bidding language explicitly within a mixed-integer programming formulation follows the developments in Boutilier [6]. 3.",
        "PRELIMINARIES In our model, we consider a set of goods, indexed {1, . . . , m} and a set of bidders, indexed {1, . . . , n}.",
        "The initial allocation of goods is denoted x0 = (x0 1, . . . , x0 n), with x0 i = (x0 i1, . . . , x0 im) and x0 ij ≥ 0 for good j indicating the number 250 of units of good j held by bidder i.",
        "A trade λ = (λ1, . . . , λn) denotes the change in allocation, with λi = (λi1, . . . , λim) where λij ∈   is the change in the number of units of item j to bidder i.",
        "So, the final allocation is x1 = x0 + λ.",
        "Each bidder has a value vi(λi) ∈ ¡ for a trade λi.",
        "This value can be positive or negative, and represents the change in value between the final allocation x0 i +λi and the initial allocation x0 i .",
        "Utility is quasi-linear, with ui(λi, p) = vi(λi)−p for trade λi and payment p ∈ ¡ .",
        "Price p can be negative, indicating the bidder receives a payment for the trade.",
        "We use the term payoff interchangeably with utility.",
        "Our goal in the ICE design is to implement the efficient trade.",
        "The efficient trade, λ∗ , maximizes the total increase in value across bidders.",
        "Definition 1 (Efficient trade).",
        "The efficient trade λ∗ solves max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Constraints (1) ensure that no agent sells more items than it has in its initial allocation.",
        "Constraints (2) provide free disposal, and allows feasible trades to sell more items than are purchased (but not vice versa).",
        "Later, we adopt Feas(x0 ) to denote the set of feasible trades, given these constraints and given an initial allocation x0 = (x0 1, . . . , x0 n). 3.1 Working Examples In this section, we provide three simple examples of instances that we will use to illustrate various components of the exchange.",
        "All three examples have only one seller, but this is purely illustrative.",
        "Example 1.",
        "One seller and one buyer, two goods {A, B}, with the seller having an initial allocation of AB.",
        "Changes in values for trades: seller buyer AND(−A, −B) AND(+A, +B) -10 +20 The AND indicates that both the buyer and the seller are only interested in trading both goods as a bundle.",
        "Here, the efficient (value-maximizing) trade is for the seller to sell AB to the buyer, denoted λ∗ = ([−1, −1], [+1, +1]).",
        "Example 2.",
        "One seller and four buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
        "Changes in values for trades: seller buyer1 buyer 2 buyer 3 buyer 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 The OR indicates that the seller is willing to sell any number of goods.",
        "The XOR indicates that buyers 2 and 4 are willing to buy at most one of the two goods in which they are interested.",
        "The efficient trade is for bundle AB to go to buyer 1 and bundle CD to buyer 3, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER Example 1: Example 3: 2,2 +C +D BUYER 2 2,2 +A +B BUYER 1 +11 +84,4 -B SELLER -A -C -D Example 2: 1,1 +A +B BUYER 2 2,2 +A +B BUYER 1 +6 +40,4 -B SELLER -C -D-A 1,1 +C +D BUYER 4 2,2 +C +D +3 +2 BUYER 3 -18 Figure 2: Example Bid Trees.",
        "Example 3.",
        "One seller and two buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
        "Changes in values for trades: seller buyer1 buyer 2 AND(−A, −B, −C, −D) AND(+A, +B) AND(+C, +D) -18 +11 +8 The efficient trade is for bundle AB to go to buyer 1 and bundle CD to go to buyer 2, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4.",
        "A ONE-SHOT EXCHANGE DESIGN The description of ICE is broken down into two sections: one-shot (sealed-bid) and iterative.",
        "In this section we abstract away the iterative aspect and introduce a specialization of the tree-based language that supports only exact values on nodes. 4.1 Tree-Based Bidding Language The bidding language is designed to be expressive and concise, entirely symmetric with respect to buyers and sellers, and to extend to capture bids from mixed buyers and sellers, ranging from simple swaps to highly complex trades.",
        "Bids are expressed as annotated bid trees, and define a bidders value for all possible trades.",
        "The language defines changes in values on trades, with leaves annotated with traded items and nodes annotated with changes in values (either positive or negative).",
        "The main feature is that it has a general interval-choose logical operator on internal nodes, and that it defines careful semantics for propagating values within the tree.",
        "We illustrate the language on each of Examples 1-3 in Figure 2.",
        "The language has a tree structure, with trades on items defined on leaves and values annotated on nodes and leaves.",
        "The nodes have zero values where no value is indicated.",
        "Internal nodes are also labeled with interval-choose (IC) ranges.",
        "Given a trade, the semantics of the language define which nodes in the tree can be satisfied, or switched-on.",
        "First, if a child is on then its parent must be on.",
        "Second, if a parent node is on, then the number of children that are on must be within the IC range on the parent node.",
        "Finally, leaves in which the bidder is buying items can only be on if the items are provided in the trade.",
        "For instance, in Example 2 we can consider the efficient trade, and observe that in this trade all nodes in the trees of buyers 1 and 3 (and also the seller), but none of the nodes in the trees of buyers 2 and 4, can be on.",
        "On the other hand, in 251 the trade in which A goes to buyer 2 and D to buyer 4, then the root and appropriate leaf nodes can be on for buyers 2 and 4, but no nodes can be on for buyers 1 and 3.",
        "Given a trade there is often a number of ways to choose the set of satisfied nodes.",
        "The semantics of the language require that the nodes that maximize the summed value across satisfied nodes be activated.",
        "Consider bid tree Ti from bidder i.",
        "This defines nodes β ∈ Ti, of which some are leaves, Leaf (i) ⊆ Ti.",
        "Let Child(β) ⊆ Ti denote the children of a node β (that is not itself a leaf).",
        "All nodes except leaves are labeled with the interval-choose operator [IC x i (β), ICy i (β)].",
        "Every node is also labeled with a value, viβ ∈ ¡ .",
        "Each leaf β is labeled with a trade, qiβ ∈   m (i.e., leaves can define a bundled trade on more than one type of item.)",
        "Given a trade λi to bidder i, the interval-choose operators and trades on leaves define which nodes can be satisfied.",
        "There will often be a choice.",
        "Ties are broken to maximize value.",
        "Let satiβ ∈ {0, 1} denote whether node β is satisfied.",
        "Solution sati is valid given tree Ti and trade λi, written sati ∈ valid(Ti, λi), if and only if: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Child(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Leaf (i) (5) In words, a set of leaves can only be considered satisfied given trade λi if the total increase in quantity summed across all such leaves is covered by the trade, for all goods (Eq. 4).",
        "This works for sellers as well as buyers: for sellers a trade is negative and this requires that the total number of items indicated sold in the tree is at least the total number sold as defined in the trade.",
        "We also need upwards-propagation: any time a node other than the root is satisfied then its parent must be satisfied (by   β ∈Child(β) satiβ ≤ ICy i (β)satiβ in Eq. 5).",
        "Finally, we need downwards-propagation: any time an internal node is satisfied then the appropriate number of children must also be satisfied (Eq. 5).",
        "The total value of trade λi, given bid-tree Ti, is defined as: vi(Ti, λi) = max sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) The tree-based language generalizes existing languages.",
        "For instance: IC(2, 2) on a node with 2 children is equivalent to an AND operator; IC(1, 3) on a node with 3 children is equivalent to an OR operator; and IC(1, 1) on a node with 2 children is equivalent to an XOR operator.",
        "Similarly, the XOR/OR bidding languages can be directly expressed as a bid tree in our language.2 4.2 Winner Determination This section defines the winner determination problem, which is formulated as a MIP and solved in our implementation with a commercial solver.3 The solver uses branchand-bound search with dynamic cut generation and branching heuristics to solve large MIPs in economically feasible run times. 2 The OR* language is the OR language with dummy items to provide additional structure.",
        "OR* is known to be expressive and concise.",
        "However, it is not known whether OR* dominates XOR/OR in terms of conciseness [23]. 3 CPLEX, www.ilog.com In defining the MIP representation we are careful to avoid an XOR-based enumeration of all bundles.",
        "A variation on the WD problem is reused many times within the exchange, e.g. for column generation in pricing and for checking revealed preference.",
        "Given bid trees T = (T1, . . . , Tn) and initial allocation x0 , the mixed-integer formulation for WD is: WD(T, x0 ) : max λ,sat ¢ i ¢ β∈Ti viβ · satiβ s.t. (1), (2), satiβ ∈ {0, 1}, λij ∈   sati ∈ valid(Ti, λi), ∀i Some goods may go unassigned because free disposal is allowed within the clearing rules of winner determination.",
        "These items can be allocated back to agents that sold the items, i.e. for which λij < 0. 4.3 Computing Threshold Payments The Threshold payment rule is based on the payments in the Vickrey-Clarke-Groves (VCG) mechanism [15], which itself is truthful and efficient but does not satisfy budget balance.",
        "Budget-balance requires that the total payments to the exchange are equal to the total payments made by the exchange.",
        "In VCG, the payment paid by agent i is pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) where λ∗ is the efficient trade, V ∗ is the reported value of this trade, and V−i is the reported value of the efficient trade that would be implemented without bidder i.",
        "We call ∆vcg,i = V ∗ − V−i the VCG discount.",
        "For instance, in Example 1 pvcg,seller = −10 − (+10 − 0) = −20 and pvcg,buyer = +20 − (+10 − 0) = 10, and the exchange would run at a budget deficit of −20 + 10 = −10.",
        "The Threshold payment rule [24] determines budgetbalanced payments to minimize the maximal error across all agents to the VCG outcome.",
        "Definition 2.",
        "The Threshold payment scheme implements the efficient trade λ∗ given bids, and sets payments pthresh,i = ˆvi(λ∗ i ) − ∆i, where ∆ = (∆1, . . . , ∆n) is set to minimize maxi(∆vcg,i − ∆i) subject to ∆i ≤ ∆vcg,i and   i ∆i ≤ V ∗ (this gives budget-balance).",
        "Example 4.",
        "In Example 2, the VCG discounts are (9, 2, 0, 1, 0) to the seller and four buyers respectively, VCG payments are (−9, 4, 0, 2, 0) and the exchange runs at a deficit of -3.",
        "In Threshold, the discounts are (8, 1, 0, 0, 0) and the payments are (−8, 5, 0, 3, 0).",
        "This minimizes the worst-case error to VCG discounts across all budget-balanced payment schemes.",
        "Threshold payments are designed to minimize the maximal ex post incentive to manipulate.",
        "Krych [16] confirmed that Threshold promotes allocative efficiency in restricted and approximate Bayes-Nash equilibrium. 5.",
        "THE ICE DESIGN We are now ready to introduce the iterative combinatorial exchange (ICE) design.",
        "Several new components are introduced, relative to the design for the one-shot exchange.",
        "Rather than provide precise valuations, bidders can provide lower and upper valuations and revise this bid information across rounds.",
        "The exchange provides price-based feedback 252 to guide bidders in this process, and terminates with an efficient (or approximately-efficient) trade with respect to reported valuations.",
        "In each round t ∈ {0, 1, . . .} the current lower and upper bounds, vt and vt , are used to define a provisional valuation profile vα (the α-valuation), together with a provisional trade λt and provisional prices pt = (pt 1, . . . , pt m) on items.",
        "The α-valuation is a linear combination of the current upper and lower valuations, with αEFF ∈ [0, 1] chosen endogenously based on the closeness of the optimistic trade (at v) and the pessimistic trade (at v).",
        "Prices pt are used to inform an activity rule, and drive progress towards an efficient trade. 5.1 Upper and Lower Valuations The bidding language is extended to allow a bidder i to report a lower and upper value (viβ, viβ) on each node.",
        "These take the place of the exact value viβ defined in Section 4.1.",
        "Based on these labels, we can define the valuation functions vi(Ti, λi) and vi(Ti, λi), using the exact same semantics as in Eq. (6).",
        "We say that such a bid-tree is well-formed if viβ ≤ viβ for all nodes.",
        "The following lemma is useful: Lemma 1.",
        "Given a well-formed tree, T, then vi(Ti, λi) ≤ vi(Ti, λi) for all trades.",
        "Proof.",
        "Suppose there is some λi for which vi(Ti, λi) > vi(Ti, λi).",
        "Then, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ.",
        "But, this is a contradiction because the trade λ that defines vi(Ti, λi) is still feasible with upper bounds vi, and viβ ≥ viβ for all nodes β in a well-formed tree. 5.2 Price Feedback In each round, approximate competitive-equilibrium (CE) prices, pt = (pt 1, . . . , pt m), are determined.",
        "Given these provisional prices, the price on trade λi for bidder i is pt (λi) =   j≤m pt j · λij.",
        "Definition 3 (CE prices).",
        "Prices p∗ are competitive equilibrium prices if the efficient trade λ∗ is supported at prices p∗ , so that for each bidder: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) CE prices will not always exist and we will often need to compute approximate prices [5].",
        "We extend ideas due to Rassenti et al. [26], Kwasnica et al. [17] and Dunford et al. [12], and select approximate prices as follows: I: Accuracy.",
        "First, we compute prices that minimize the maximal error in the best-response constraints across all bidders.",
        "II: Fairness.",
        "Second, we break ties to prefer prices that minimize the maximal deviation from Threshold payments across all bidders.",
        "III: Balance.",
        "Third, we break ties to prefer prices that minimize the maximal price across all items.",
        "Taken together, these steps are designed to promote the informativeness of the prices in driving progress across rounds.",
        "In computing prices, we explain how to compute approximate (or otherwise) prices for structured bidding languages, and without enumerating all possible trades.",
        "For this, we adopt constraint generation to efficient handle an exponential number of constraints.",
        "Each step is described in detail below.",
        "I: Accuracy.",
        "We adopt a definition of price accuracy that generalizes the notions adopted in previous papers for unstructured bidding languages.",
        "Let λt denote the current provisional trade and suppose the provisional valuation is vα .",
        "To compute accurate CE prices, we consider: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j.",
        "This linear program (LP) is designed to find prices that minimize the worst-case error across all agents.",
        "From the definition of CE prices, it follows that CE prices would have δ = 0 as a solution to (9), at which point trade λt i would be in the best-response set of every agent (with λt i = ∅, i.e. no trade, for all agents with no surplus for trade at the prices.)",
        "Example 5.",
        "We can illustrate the formulation (9) on Example 2, assuming for simplicity that vα = v (i.e. truth).",
        "The efficient trade allocates AB to buyer 1 and CD to buyer 3.",
        "Accuracy will seek prices p(A), p(B), p(C) and p(D) to minimize the δ ≥ 0 required to satisfy constraints: p(A) + p(B) + p(C) + p(D) ≥ 0 (seller) p(A) + p(B) ≤ 6 + δ (buyer 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (buyer 2) p(C) + p(D) ≤ 3 (buyer 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (buyer 4) An optimal solution requires p(A) = p(B) = 10/3, with δ = 2/3, with p(C) and p(D) taking values such as p(C) = p(D) = 3/2.",
        "But, (9) has an exponential number of constraints (Eq. 10).",
        "Rather than solve it explicitly we use constraint generation [4] and dynamically generate a sufficient subset of constraints.",
        "Let   i denote a manageable subset of all possible feasible trades to bidder i.",
        "Then, a relaxed version of (9) (written ACC) is formulated by substituting (10) with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) where   i is a set of trades that are feasible for bidder i given the other bids.",
        "Fixing the prices p∗ , we then solve n subproblems (one for each bidder), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0 ), (12) to check whether solution (p∗ , δ∗ ) to ACC is feasible in problem (9).",
        "In R-WD(i) the objective is to determine a most preferred trade for each bidder at these prices.",
        "Let ˆλi denote the solution to R-WD(i).",
        "Check condition: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) and if this condition holds for all bidders i, then solution (p∗ , δ∗ ) is optimal for problem (9).",
        "Otherwise, trade ˆλi is added to   i for all bidders i for which this constraint is 253 violated and we re-solve the LP with the new set of constraints.4 II: Fairness.",
        "Second, we break remaining ties to prefer fair prices: choosing prices that minimize the worst-case error with respect to Threshold payoffs (i.e. utility to bidders with Threshold payments), but without choosing prices that are less accurate.5 Example 6.",
        "For example, accuracy in Example 1 (depicted in Figure 1) requires 12 ≤ pA +pB ≤ 16 (for vα = v).",
        "At these valuations the Threshold payoffs would be 2 to both the seller and the buyer.",
        "This can be exactly achieved in pricing with pA + pB = 14.",
        "The fairness tie-breaking method is formulated as the following LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution, from ACC.",
        "The objective here is the same as in the Threshold payment rule (see Section 4.3): minimize the maximal error between bidder payoff (at vα ) for the provisional trade and the VCG payoff (at vα ).",
        "Problem FAIR is also solved through constraint generation, using R-WD(i) to add additional violated constraints as necessary.",
        "III: Balance.",
        "Third, we break remaining ties to prefer balanced prices: choosing prices that minimize the maximal price across all items.",
        "Returning again to Example 1, depicted in Figure 1, we see that accuracy and fairness require p(A) + p(B) = 14.",
        "Finally, balance sets p(A) = p(B) = 7.",
        "Balance is justified when, all else being equal, items are more likely to have similar than dissimilar values.6 The LP for balance is formulated as follows: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution from ACC and π∗ represents the error in the optimal solution from FAIR.",
        "Constraint generation is also used to solve BAL, generating new trades for   i as necessary. 4 Problem R-WD(i) is a specialization of the WD problem, in which the objective is to maximize the payoff of a single bidder, rather than the total value across all bidders.",
        "It is solved as a MIP, by rewriting the objective in WD(T, x0 ) as max{viβ · satiβ −   j p∗ j · λij } for agent i.",
        "Thus, the structure of the bid-tree language is exploited in generating new constraints, because this is solved as a concise MIP.",
        "The other bidders are kept around in the MIP (but do not appear in the objective), and are used to define the space of feasible trades. 5 The methods of Dunford et al. [12], that use a nucleolus approach, are also closely related. 6 The use of balance was advocated by Kwasnica et al. [17].",
        "Dunford et al. [12] prefer to smooth prices across rounds.",
        "Comment 1: Lexicographical Refinement.",
        "For all three sub-problems we also perform lexicographical refinement (with respect to bidders in ACC and FAIR, and with respect to goods in BAL).",
        "For instance, in ACC we successively minimize the maximal error across all bidders.",
        "Given an initial solution we first pin down the error on all bidders for whom a constraint (11) is binding.",
        "For such a bidder i, the constraint is replaced with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) and the error to bidder i no longer appears explicitly in the objective.",
        "ACC is then re-solved, and makes progress by further minimizing the maximal error across all bidders yet to be pinned down.",
        "This continues, pinning down any new bidders for whom one of constraints (11) is binding, until the error is lexicographically optimized for all bidders.7 The exact same process is repeated for FAIR and BAL, with bidders pinned down and constraints (15) replaced with π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (where π∗ i is the current objective) in FAIR, and items pinned down and constraints (18) replaced with p∗ j ≥ pj (where p∗ j represents the target for the maximal price on that item) in BAL.",
        "Comment 2: Computation.",
        "All constraints in   i are retained, and this set grows across all stages and across all rounds of the exchange.",
        "Thus, the computational effort in constraint generation is re-used.",
        "In implementation we are careful to address a number of -issues that arise due to floating-point issues.",
        "We prefer to err on the side of being conservative in determining whether or not to add another constraint in performing check (13).",
        "This avoids later infeasibility issues.",
        "In addition, when pinning-down bidders for the purpose of lexicographical refinement we relax the associated bidder-constraints with a small > 0 on the righthand side. 5.3 Revealed-Preference Activity Rules The role of activity rules in the auction is to ensure both consistency and progress across rounds [21].",
        "Consistency in our exchange requires that bidders tighten bounds as the exchange progresses.",
        "Activity rules ensure that bidders are active during early rounds, and promote useful elicitation throughout the exchange.",
        "We adopt a simple revealed-preference (RP) activity rule.",
        "The idea is loosely based around the RP-rule in Ausubel et al. [1], where it is used for one-sided CAs.",
        "The motivation is to require more than simply consistency: we need bidders to provide enough information for the system to be able to to prove that an allocation is (approximately) efficient.",
        "It is helpful to think about the bidders interacting with proxy agents that will act on their behalf in responding to provisional prices pt−1 determined at the end of round t − 1.",
        "The only knowledge that such a proxy has of the valuation of a bidder is through the bid-tree.",
        "Suppose a proxy was queried by the exchange and asked which trade the bidder was most interested in at the provisional prices.",
        "The RP rule says the following: the proxy must have enough 7 For example, applying this to accuracy on Example 2 we solve once and find bidders 1 and 2 are binding, for error δ∗ = 2/3.",
        "We pin these down and then minimize the error to bidders 3 and 4.",
        "Finally, this gives p(A) = p(B) = 10/3 and p(C) = p(D) = 5/3, with accuracy 2/3 to bidders 1 and 2 and 1/3 to bidders 3 and 4. 254 information to be able to determine this surplus-maximizing trade at current prices.",
        "Consider the following examples: Example 7.",
        "A bidder has XOR(+A, +B) and a value of +5 on the leaf +A and a value range of [5,10] on leaf +B.",
        "Suppose prices are currently 3 for each of A and B.",
        "The RP rule is satisfied because the proxy knows that however the remaining value uncertainty on +B is resolved the bidder will always (weakly) prefer +B to +A.",
        "Example 8.",
        "A bidder has XOR(+A, +B) and value bounds [5, 10] on the root node and a value of 1 on leaf +A.",
        "Suppose prices are currently 3 for each of A and B.",
        "The RP rule is satisfied because the bidder will always prefer +A to +B at equal prices, whichever way the uncertain value on the root node is ultimately resolved.",
        "Overloading notation, let vi ∈ Ti denote a valuation that is consistent with lower and upper valuations in bid tree Ti.",
        "Definition 4.",
        "Bid tree Ti satisfies RP at prices pt−1 if and only if there exists some feasible trade L∗ for which, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. (20) To make this determination for bidder i we solve a sequence of problems, each of which is a variation on the WD problem.",
        "First, we construct a candidate lower-bound trade, which is a feasible trade that solves: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) The solution π∗ l to RP1(i) represents the maximal payoff that bidder i can achieve across all feasible trades, given its pessimistic valuation.",
        "Second, we break ties to find a trade with maximal value uncertainty across all possible solutions to RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] s.t. λ ∈ Feas(x0 ) (22) vi(λi) − pt−1 (λi) ≥ π∗ l (23) We adopt solution L∗ i as our candidate for the trade that may satisfy RP.",
        "To understand the importance of this tiebreaking rule consider Example 7.",
        "The proxy can prove +B but not +A is a best-response for all vi ∈ Ti, and should choose +B as its candidate.",
        "Notice that +B is a counterexample to +A, but not the other way round.",
        "Now, we construct a modified valuation ˜vi, by setting ˜viβ =   viβ , if β ∈ sat(L∗ i ) viβ , otherwise. (24) where sat(L∗ i ) is the set of nodes that are satisfied in the lower-bound tree for trade L∗ i .",
        "Given this modified valuation, we find U∗ to solve: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Let π∗ u denote the payoff from this optimal trade at modified values ˜v.",
        "We call trade U∗ i the witness trade.",
        "We show in Proposition 1 that the RP rule is satisfied if and only if π∗ l ≥ π∗ u. Constructing the modified valuation as ˜vi recognizes that there is shared uncertainty across trades that satisfy the same nodes in a bid tree.",
        "Example 8 helps to illustrate this.",
        "Just using vi in RP3(i), we would find L∗ i is buy A with payoff π∗ l = 3 but then find U∗ i is buy B with π∗ u = 7 and fail RP.",
        "We must recognize that however the uncertainty on the root node is resolved it will affect +A and +B in exactly the same way.",
        "For this reason, we set ˜viβ = viβ = 5 on the root node, which is exactly the same value that was adopted in determining π∗ l .",
        "Then, RP3(i) applied to U∗ i gives buy A and the RP test is judged to be passed.",
        "Proposition 1.",
        "Bid tree Ti satisfies RP given prices pt−1 if and only if any lower-bound trade L∗ i that solves RP1(i) and RP2(i) satisfies: vi(Ti, L∗ i ) − pt−1 (L∗ i ) ≥ ˜vi(Ti, U∗ i ) − pt−1 (U∗ i ), (26) where ˜vi is the modified valuation in Eq. (24).",
        "Proof.",
        "For sufficiency, notice that the difference in payoff between trade L∗ i and another trade λi is unaffected by the way uncertainty is resolved on any node that is satisfied in both L∗ i and λi.",
        "Fixing the values in ˜vi on nodes satisfied in L∗ i has the effect of removing this consideration when a trade U∗ i is selected that satisfies one of these nodes.",
        "On the other hand, fixing the values on these nodes has no effect on trades considered in RP3(i) that do not share a node with L∗ i .",
        "For the necessary direction, we first show that any trade that satisfies RP must solve RP1(i).",
        "Suppose otherwise, that some λi with payoff greater than π∗ l satisfies RP.",
        "But, valuation vi ∈ Ti together with L∗ i presents a counterexample to RP (Eq. 20).",
        "Now, suppose (for contradiction) that some λi with maximal payoff π∗ l but uncertainty less than L∗ i satisfies RP.",
        "Proceed by case analysis.",
        "Case a): only one solution to RP1(i) has uncertain value and so λi has certain value.",
        "But, this cannot satisfy RP because L∗ i with uncertain value would be a counterexample to RP (Eq. 20).",
        "Case b): two or more solutions to RP1(i) have uncertain value.",
        "Here, we first argue that one of these trades must satisfy a (weak) superset of all the nodes with uncertain value that are satisfied by all other trades in this set.",
        "This is by RP.",
        "Without this, then for any choice of trade that solves RP1(i), there is another trade with a disjoint set of uncertain but satisfied nodes that provides a counterexample to RP (Eq. 20).",
        "Now, consider the case that some trade contains a superset of all the uncertain satisfied nodes of the other trades.",
        "Clearly RP2(i) will choose this trade, L∗ i , and λi must satisfy a subset of these nodes (by assumption).",
        "But, we now see that λi cannot satisfy RP because L∗ i would be a counterexample to RP.",
        "Failure to meet the activity rule must have some consequence.",
        "In the current rules, the default action we choose is to set the upper bounds in valuations down to the maximal value of the provisional price on a node8 and the lowerbound value on that node.9 Such a bidder can remain active 8 The provisional price on a node is defined as the minimal total price across all feasible trades for which the subtree rooted at the tree is satisfied. 9 This is entirely analogous to when a bidder in an ascending clock auction stops bidding at a price: she is not permitted to bid at a higher price again in future rounds. 255 within the exchange, but only with valuations that are consistent with these new bounds. 5.4 Bidder Feedback In each round, our default design provides every bidder with the provisional trade and also with the current provisional prices.",
        "See 7 for an additional discussion.",
        "We also provide guidance to help a bidder meet the RP rule.",
        "Let sat(L∗ i ) and sat(U∗ i ) denote the nodes that are satisfied in trades L∗ i and U∗ i , as computed in RP1-RP3.",
        "Lemma 2.",
        "When RP fails, a bidder must increase a lower bound on at least one node in sat(L∗ i ) \\ sat(U∗ i ) or decrease an upper bound on at least one node in sat(U∗ i ) \\ sat(L∗ i ) in order to meet the activity rule.",
        "Proof.",
        "Changing the upper- or lower- values on nodes that are not satisfied by either trade does not change L∗ i or U∗ i , and does not change the payoff from these trades.",
        "Thus, the RP condition will continue to fail.",
        "Similarly, changing the bounds on nodes that are satisfied in both trades has no effect on revealed preference.",
        "A change to a lower bound on a shared node affects both L∗ i and U∗ i identically because of the use of the modified valuation to determine U∗ i .",
        "A change to an upper bound on a shared node has no effect in determining either L∗ i or U∗ i .",
        "Note that when sat(U∗ i ) = sat(L∗ i ) then condition (26) is always trivially satisfied, and so the guidance in the lemma is always well-defined when RP fails.",
        "This is an elegant feedback mechanism because it is adaptive.",
        "Once a bidder makes some changes on some subset of these nodes, the bidder can query the exchange.",
        "The exchange can then respond yes, or can revise the set of nodes sat(λ∗ l ) and sat(λ∗ u) as necessary. 5.5 Termination Conditions Once each bidder has committed its new bids (and either met the RP rule or suffered the penalty) then round t closes.",
        "At this point, the task is to determine the new α-valuation, and in turn the provisional allocation λt and provisional prices pt .",
        "A termination condition is also checked, to determine whether to move the exchange to a last-and-final round.",
        "To define the α-valuation we compute the following two quantities: Pessimistic at Pessimistic (PP) Determine an efficient trade, λ∗ l , at pessimistic values, i.e. to solve maxλ   i vi(λi), and set PP=  i vi(λ∗ li).",
        "Pessimistic at Optimistic (PO) Determine an efficient trade, λ∗ u, at optimistic values, i.e. to solve maxλ   i vi(λi), and set PO=  i vi(λ∗ ui).",
        "First, note that PP ≥ PO and PP ≥ 0 by definition, for all bid-trees, although PO can be negative (because the right trade at v is not currently a useful trade at v).",
        "Recognizing this, define γeff (PP, PO) = 1 + PP − PO PP , (27) when PP > 0, and observe that γeff (PP, PO) ≥ 1 when this is defined, and that γeff (PP, PO) will start large and then trend towards 1 as the optimistic allocation converges towards the pessimistic allocation.",
        "In each round, we define αeff ∈ [0, 1] as: αeff =   0 when PP is 0 1/γeff otherwise (28) which is 0 while PP is 0 and then trends towards 1 once PP> 0 in some round.",
        "This is used to define α-valuation vα i = αeff vi + (1 − αeff )vi, ∀i, (29) which is used to define the provisional allocation and provisional prices.",
        "The effect is to endogenously define a schedule for moving from optimistic to pessimistic values across rounds, based on how close the trades are to one another.",
        "Termination Condition.",
        "In moving to the last-and-final round, and finally closing, we also care about the convergence of payments, in addition to the convergence towards an efficient trade.",
        "For this we introduce another parameter, αthresh ∈ [0, 1], that trends from 0 to 1 as the Threshold payments at lower and upper valuations converge.",
        "Consider the following parameter: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive) , (30) which is defined for PP > 0, where pthresh(v) denotes the Threshold payments at valuation profile v, Nactive is the number of bidders that are actively engaged in trade in the PP trade, and || · ||2 is the L2-norm.",
        "Note that γthresh is defined for payments and not payoffs.",
        "This is appropriate because it is the accuracy of the outcome of the exchange that matters: i.e. the trade and the payments.",
        "Given this, we define αthresh =   0 when PP is 0 1/γthresh otherwise (31) which is 0 while PP is 0 and then trends towards 1 as progress is made.",
        "Definition 5 (termination).",
        "ICE transitions to a lastand-final round when one of the following holds: 1. αeff ≥ CUTOFFeff and αthresh ≥ CUTOFFthresh, 2. there is no trade at the optimistic values, where CUTOFFeff , CUTOFFthresh ∈ (0, 1] determine the accuracy required for termination.",
        "At the end of the last-and-final round vα = v is used to define the final trade and the final Threshold payments.",
        "Example 9.",
        "Consider again Example 1, and consider the upper and lower bounds as depicted in Figure 1.",
        "First, if the sellers bounds were [−20, −4] then there is an optimistic trade but no pessimistic trade, and PO = −4 and PP = 0, and αeff = 0.",
        "At the bounds depicted, both the optimistic and the pessimistic trades occur and PO = PP = 4 and αeff = 1.",
        "However, we can see the Threshold payments are (17, −17) at v but (14, −14) at v. Evaluating γthresh , we have γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, and αthresh = 2/5.",
        "For CUTOFFthresh < 2/5 the exchange would remain open.",
        "On the other hand, if the buyers value for +AB was between [18, 24] and the sellers value for −AB was between [−12, −6], the Threshold payments are (15, −15) at both upper and lower bounds, and αthresh = 1. 256 Component Purpose Lines Agent.",
        "Captures strategic behavior and information revelation decisions 762 Model Support Provides XML support to load goods and valuations into world 200 World Keeps track of all agent, good, and valuation details 998 Exchange Driver & Communication Controls exchange, and coordinates remote agent behavior 585 Bidding Language Implements the tree-based bidding language 1119 Activity Rule Engine Implements the revealed preference rule with range support 203 Closing Rule Engine Checks if auction termination condition reached 137 WD Engine Provides WD-related logic 377 Pricing Engine Provides Pricing-related logic 460 MIP Builders Translates logic used by engines into our general optimizer formulation 346 Pricing Builders Used by three pricing stages 256 Winner Determination Builders Used by WD, activity rule, closing rule, and pricing constraint generation 365 Framework Support code; eases modular replacement of above components 510 Table 1: Exchange Component and Code Breakdown. 6.",
        "SYSTEMS INFRASTRUCTURE ICE is approximately 6502 lines of Java code, broken up into the functional packages described in Table 1.10 The prototype is modular so that researchers may easily replace components for experimentation.",
        "In addition to the core exchange discussed in this paper, we have developed an agent component that allows a user to simulate the behavior and knowledge of other players in the system, better allowing a user to formulate their strategy in advance of actual play.",
        "A user specifies a valuation model in an XMLinterpretation of our bidding language, which is revealed to the exchange via the agents strategy.",
        "Major exchange tasks are handled by engines that dictate the non-optimizer specific logic.",
        "These engines drive the appropriate MIP/LP builders.",
        "We realized that all of our optimization formulations boil down to two classes of optimization problem.",
        "The first, used by winner determination, activity rule, closing rule, and constraint generation in pricing, is a MIP that finds trades that maximize value, holding prices and slacks constant.",
        "The second, used by the three pricing stages, is an LP that holds trades constant, seeking to minimize slack, profit, or prices.",
        "We take advantage of the commonality of these problems by using common LP/MIP builders that differ only by a few functional hooks to provide the correct variables for optimization.",
        "We have generalized our back-end optimization solver interface11 (we currently support CPLEX and the LGPL- licensed LPSolve), and can take advantage of the load-balancing and parallel MIP/LP solving capability that this library provides. 7.",
        "DISCUSSION The bidding language was defined to allow for perfect symmetry between buyers and sellers and provide expressiveness in an exchange domain, for instance for mixed bidders interested in executing trades such as swaps.",
        "This proved especially challenging.",
        "The breakthrough came when we focused on changes in value for trades rather than providing absolute values for allocations.",
        "For simplicity, we require the same tree structure for both the upper and lower valuations. 10 Code size is measured in physical source line of code (SLOC), as generated using David A. Wheelers SLOC Count.",
        "The total of 6502 includes 184 for instrumentation (not shown in the table).",
        "The JOpt solver interface is another 1964 lines, and Castor automatically generates around 5200 lines of code for XML file manipulation. 11 http://econcs.eecs.harvard.edu/jopt This allows the language itself to ensure consistency (with the upper value at least the lower value on all trades) and enforce monotonic tightening of these bounds for all trades across rounds.",
        "It also provides for an efficient method to check the RP activity rule, because it makes it simple to reason about shared uncertainty between trades.",
        "The decision to adopt a direct and proxied approach in which bidders express their upper and lower values to a trusted proxy agent that interacts with the exchange was made early in the design process.",
        "In many ways this is the clearest and most immediate way to generalize the design in Parkes et al. [24] and make it iterative.",
        "In addition, this removes much opportunity for strategic manipulation: bidders are restricted to making (incremental) statements about their valuations.",
        "Another advantage is that it makes the activity rule easy to explain: bidders can always meet the activity rule by tightening bounds such that their true value remains in the support.12 Perhaps most importantly, having explicit information on upper and lower values permits progress in early rounds, even while there is no efficient trade at pessimistic values.",
        "Upper and lower bound information also provides guidance about when to terminate.",
        "Note that taken by itself, PP = PO does not imply that the current provisional trade is efficient with respect to all values consistent with current value information.",
        "The difference in values between different trades, aggregated across all bidders, could be similar at lower and upper bounds but quite different at intermediate values (including truth).",
        "Nevertheless, we conjecture that PP = PO will prove an excellent indicator of efficiency in practical settings where the shape of the upper and lower valuations does convey useful information.",
        "This is worthy of experimental investigation.",
        "Moreover, the use of price and RP activity provides additional guarantees.",
        "We adopted linear prices (prices on individual items) rather than non-linear prices (with prices on a trade not equal to the sum of the prices on the component items) early in the design process.",
        "The conciseness of this price representation is very important for computational tractability within the exchange and also to promote simplicity and transparency for bidders.",
        "The RP activity rule was adopted later, and is a good choice because of its excellent theoretical properties when coupled with CE prices.",
        "The following can be easily established: given exact CE prices pt−1 for provisional trade 12 This is in contrast to indirect price-based approaches, such as clock-proxy [1], in which bidders must be able to reason about the RP-constraints implied by bids in each round. 257 λt−1 at valuations vα , then if the upper and lower values at the start of round t already satisfy the RP rule (and without the need for any tie-breaking), the provisional trade is efficient for all valuations consistent with the current bid trees.",
        "When linear CE prices exist, this provides for a soundness and completeness statement: if PP = PO, linear CE prices exist, and the RP rule is satisfied, the provisional trade is efficient (soundness); if prices are exact CE prices for the provisional trade at vα , but the trade is inefficient with respect to some valuation profile consistent with the current bid trees, then at least one bidder must fail RP with her current bid tree and progress will be made (completeness).",
        "Future work must study convergence experimentally, and extend this theory to allow for approximate prices.",
        "Some strategic aspects of our ICE design deserve comment, and further study.",
        "First, we do not claim that truthfully responding to the RP rule is an ex post equilibrium.13 However, the exchange is designed to mimic the Threshold rule in its payment scheme, which is known to have useful incentive properties [16].",
        "We must be careful, though.",
        "For instance we do not suggest to provide αeff to bidders, because as αeff approaches 1 it would inform bidders that bid values are becoming irrelevant to determining the trade but merely used to determine payments (and bidders would become increasingly reluctant to increase their lower valuations).",
        "Also, no consideration has been given in this work to collusion by bidders.",
        "This is an issue that deserves some attention in future work. 8.",
        "CONCLUSIONS In this work we designed and prototyped a scalable and highly-expressive iterative combinatorial exchange.",
        "The design includes many interesting features, including: a new bid-tree language for exchanges, a new method to construct approximate linear prices from expressive languages, and a proxied elicitation method with optimistic and pessimistic valuations with a new method to evaluate a revealed- preference activity rule.",
        "The exchange is fully implemented in Java and is in a validation phase.",
        "The next steps for our work are to allow bidders to refine the structure of the bid tree in addition to values on the tree.",
        "We intend to study the elicitation properties of the exchange and we have put together a test suite of exchange problem instances.",
        "In addition, we are beginning to engage in collaborations to apply the design to airline takeoff and landing slot scheduling and to resource allocation in widearea network distributed computational systems.",
        "Acknowledgments We would like to dedicate this paper to all of the participants in CS 286r at Harvard University in Spring 2004.",
        "This work is supported in part by NSF grant IIS-0238147. 9.",
        "REFERENCES [1] L. Ausubel, P. Cramton, and P. Milgrom.",
        "The clock-proxy auction: A practical combinatorial auction design.",
        "In Cramton et al. [9], chapter 5. [2] M. Babaioff, N. Nisan, and E. Pavlov.",
        "Mechanisms for a spatially distributed market.",
        "In Proc. 5th ACM Conf. on Electronic Commerce, pages 9-20.",
        "ACM Press, 2001. 13 Given the Myerson-Satterthwaite impossibility theorem [22] and the method by which we determine the trade we should not expect this. [3] M. Ball, G. Donohue, and K. Hoffman.",
        "Auctions for the safe, efficient, and equitable allocation of airspace system resources.",
        "In S. Cramton, Shoham, editor, Combinatorial Auctions. 2004.",
        "Forthcoming. [4] D. Bertsimas and J. Tsitsiklis.",
        "Introduction to Linear Optimization.",
        "Athena Scientific, 1997. [5] S. Bikhchandani and J. M. Ostroy.",
        "The package assignment model.",
        "Journal of Economic Theory, 107(2):377-406, 2002. [6] C. Boutilier.",
        "A pomdp formulation of preference elicitation problems.",
        "In Proc. 18th National Conference on Artificial Intelligence (AAAI-02), 2002. [7] C. Boutilier and H. Hoos.",
        "Bidding languages for combinatorial auctions.",
        "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), 2001. [8] W. Conen and T. Sandholm.",
        "Preference elicitation in combinatorial auctions.",
        "In Proc. 3rd ACM Conf. on Electronic Commerce (EC-01), pages 256-259.",
        "ACM Press, New York, 2001. [9] P. Cramton, Y. Shoham, and R. Steinberg, editors.",
        "Combinatorial Auctions.",
        "MIT Press, 2004. [10] S. de Vries, J. Schummer, and R. V. Vohra.",
        "On ascending Vickrey auctions for heterogeneous objects.",
        "Technical report, MEDS, Kellogg School, Northwestern University, 2003. [11] S. de Vries and R. V. Vohra.",
        "Combinatorial auctions: A survey.",
        "Informs Journal on Computing, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana, and T. Wilson.",
        "Testing linear pricing algorithms for use in ascending combinatorial auctions.",
        "Technical report, SEOR, George Mason University, 2003. [13] Y. Fu, J.",
        "Chase, B. Chun, S. Schwab, and A. Vahdat.",
        "Sharp: an architecture for secure resource peering.",
        "In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 133-148.",
        "ACM Press, 2003. [14] B. Hudson and T. Sandholm.",
        "Effectiveness of query types and policies for preference elicitation in combinatorial auctions.",
        "In Proc. 3rd Int.",
        "Joint.",
        "Conf. on Autonomous Agents and Multi Agent Systems, pages 386-393, 2004. [15] V. Krishna.",
        "Auction Theory.",
        "Academic Press, 2002. [16] D. Krych.",
        "Calculation and analysis of Nash equilibria of Vickrey-based payment rules for combinatorial exchanges, Harvard College, April 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter, and C. DeMartini.",
        "A new and improved design for multi-object iterative auctions.",
        "Management Science, 2004.",
        "To appear. [18] E. Kwerel and J. Williams.",
        "A proposal for a rapid transition to market allocation of spectrum.",
        "Technical report, FCC Office of Plans and Policy, Nov 2002. [19] S. M. Lahaie and D. C. Parkes.",
        "Applying learning algorithms to preference elicitation.",
        "In Proc.",
        "ACM Conf. on Electronic Commerce, pages 180-188, 2004. [20] R. P. McAfee.",
        "A dominant strategy double auction.",
        "J. of Economic Theory, 56:434-450, 1992. [21] P. Milgrom.",
        "Putting auction theory to work: The simultaneous ascending auction.",
        "J.Pol.",
        "Econ., 108:245-272, 2000. [22] R. B. Myerson and M. A. Satterthwaite.",
        "Efficient mechanisms for bilateral trading.",
        "Journal of Economic Theory, 28:265-281, 1983. [23] N. Nisan.",
        "Bidding and allocation in combinatorial auctions.",
        "In Proc. 2nd ACM Conf. on Electronic Commerce (EC-00), pages 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam, and M. Eso.",
        "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
        "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), pages 1161-1168, 2001. [25] D. C. Parkes and L. H. Ungar.",
        "Iterative combinatorial auctions: Theory and practice.",
        "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, July 2000. [26] S. J. Rassenti, V. L. Smith, and R. L. Bulfin.",
        "A combinatorial mechanism for airport time slot allocation.",
        "Bell Journal of Economics, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc, and R. M. Harstad.",
        "Computationally manageable combinatorial auctions.",
        "Management Science, 44(8):1131-1147, 1998. [28] T. Sandholm and C. Boutilier.",
        "Preference elicitation in combinatorial auctions.",
        "In Cramton et al. [9], chapter 10. [29] P. R. Wurman and M. P. Wellman.",
        "AkBA: A progressive, anonymous-price combinatorial auction.",
        "In Second ACM Conference on Electronic Commerce, pages 21-29, 2000. 258"
    ],
    "error_count": 0,
    "keys": {
        "iterative combinatorial exchange": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "ICE: An <br>iterative combinatorial exchange</br> David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an <br>iterative combinatorial exchange</br> (ICE).",
                "The exchange incorporates a tree-based bidding language that is concise and expressive for CEs.",
                "Bidders specify lower and upper bounds on their value for different trades.",
                "These bounds allow price discovery and useful preference elicitation in early rounds, and allow termination with an efficient trade despite partial information on bidder valuations.",
                "All computation in the exchange is carefully optimized to exploit the structure of the bid-trees and to avoid enumerating trades.",
                "A proxied interpretation of a revealedpreference activity rule ensures progress across rounds.",
                "A VCG-based payment scheme that has been shown to mitigate opportunities for bargaining and strategic behavior is used to determine final payments.",
                "The exchange is fully implemented and in a validation phase.",
                "Categories and Subject Descriptors: I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Combinatorial exchanges combine and generalize two different mechanisms: double auctions and combinatorial auctions.",
                "In a double auction (DA), multiple buyers and sellers trade units of an identical good [20].",
                "In a combinatorial auction (CA), a single seller has multiple heterogeneous items up for sale [11].",
                "Buyers may have complementarities or substitutabilities between goods, and are provided with an expressive bidding language.",
                "A common goal in both market designs is to determine the efficient allocation, which is the allocation that maximizes total value.",
                "A combinatorial exchange (CE) [24] is a combinatorial double auction that brings together multiple buyers and sellers to trade multiple heterogeneous goods.",
                "For example, in an exchange for wireless spectrum, a bidder may declare that she is willing to pay $1 million for a trade where she obtains licenses for New York City, Boston, and Philadelphia, and loses her license for Washington DC.",
                "Thus, unlike a DA, a CE allows all participants to express complex valuations via expressive bids.",
                "Unlike a CA, a CE allows for fragmented ownership, with multiple buyers and sellers and agents that are both buying and selling.",
                "CEs have received recent attention both in the context of wireless spectrum allocation [18] and for airport takeoff and landing slot allocation [3].",
                "In both of these domains there are incumbents with property rights, and it is important to facilitate a complex multi-way reallocation of resources.",
                "Another potential application domain for CEs is to resource allocation in shared distributed systems, such as PlanetLab [13].",
                "The instantiation of our general purpose design to specific domains is a compelling next step in our research.",
                "This paper presents the first design for an <br>iterative combinatorial exchange</br> (ICE).",
                "The genesis of this project was a class, CS 286r Topics at the Interface between Economics and Computer Science, taught at Harvard University in Spring 2004.1 The entire class was dedicated to the design and prototyping of an iterative CE.",
                "The ICE design problem is multi-faceted and quite hard.",
                "The main innovation in our design is an expressive yet concise tree-based bidding language (which generalizes known languages such as XOR/OR [23]), and the tight coupling of this language with efficient algorithms for price-feedback to guide bidding, winner-determination to determine trades, and revealed-preference activity rules to ensure progress across rounds.",
                "The exchange is iterative: bidders express upper and lower valuations on trades by annotating their bid-tree, and then tighten these bounds in response to price feedback in each round.",
                "The Threshold payment rule, introduced by Parkes et al. [24], is used to determine final payments.",
                "The exchange has a number of interesting theoretical properties.",
                "For instance, when there exist linear prices we establish soundness and completeness: for straightforward bidders that adjust their bounds to meet activity rules while keeping their true value within the bounds, the exchange will terminate with the efficient allocation.",
                "In addition, the 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Truth Agent Act Rule WD ACC FAIR BALClosing RuleVickreyThreshold DONE !",
                "DONE 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER 2,2 +A +15 +8 +B +15 +8 BUYER 2,2 -A -2 -6 -B -2 -6 SELLER BUYER, buy AB SELLER, sell AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PBUYER = 16 - (4-0) = 12 PSELLER = -12 - (4-0) = -16 PBUYER = 14 PSELLER = -14 Pessim istic O ptim istic = 1 Figure 1: ICE System Flow of Control efficient allocation can often be determined without bidders revealing, or even knowing, their exact value for all trades.",
                "This is essential in complex domains where the valuation problem can itself be very challenging for a participant [28].",
                "While we cannot claim that straightforward bidding is an equilibrium of the exchange (and indeed, should not expect to by the Myerson-Satterthwaite impossibility theorem [22]), the Threshold payment rule minimizes the ex post incentive to manipulate across all budget-balanced payment rules.",
                "The exchange is implemented in Java and is currently in validation.",
                "In describing the exchange we will first provide an overview of the main components and introduce several working examples.",
                "Then, we introduce the basic components for a simple one-shot variation in which bidders state their exact values for trades in a single round.",
                "We then describe the full iterative exchange, with upper and lower values, price-feedback, activity rules, and termination conditions.",
                "We state some theoretical properties of the exchange, and end with a discussion to motivate our main design decisions, and suggest some next steps. 2.",
                "AN OVERVIEW OF THE ICE DESIGN The design has four main components, which we will introduce in order through the rest of the paper: • Expressive and concise tree-based bidding language.",
                "The language describes values for trades, such as my value for selling AB and buying C is $100, or my value for selling ABC is -$50, with negative values indicating that a bidder must receive a payment for the trade to be acceptable.",
                "The language allows bidders to express upper and lower bounds on value, which can be tightened across rounds. • Winner Determination.",
                "Winner-determination (WD) is formulated as a mixed-integer program (MIP), with the structure of the bid-trees captured explicitly in the formulation.",
                "Comparing the solution at upper and lower values allows for a determination to be made about termination, with progress in intermediate rounds driven by an intermediate valuation and the lower values adopted on termination. • Payments.",
                "Payments are computed using the Threshold payment rule [24], with the intermediate valuations adopted in early rounds and lower values adopted on termination. • Price feedback.",
                "An approximate price is computed for each item in the exchange in each round, in terms of the intermediate valuations and the provisional trade.",
                "The prices are optimized to approximate competitive equilibrium prices, and further optimized to best approximate the current Threshold payments with remaining ties broken to favor prices that are balanced across different items.",
                "In computing the prices, we adopt the methods of constraint-generation to exploit the structure of the bidding language and avoid enumerating all feasible trades.",
                "The subproblem to generate new constraints is a variation of the WD problem. • Activity rule.",
                "A revealed-preference activity rule [1] ensures progress across rounds.",
                "In order to remain active, a bidder must tighten bounds so that there is enough information to define a trade that maximizes surplus at the current prices.",
                "Another variation on the WD problem is formulated, both to verify that the activity rule is met and also to provide feedback to a bidder to explain how to meet the rule.",
                "An outline of the ICE system flow of control is provided in Figure 1.",
                "We will return to this example later in the paper.",
                "For now, just observe in this two-agent example that the agents state lower and upper bounds that are checked in the activity rule, and then passed to winner-determination (WD), and then through three stages of pricing (accuracy, fairness, balance).",
                "On passing the closing rule (in which parameters αeff and αthresh are checked for convergence of the trade and payments), the exchange goes to a last-and-final round.",
                "At the end of this round, the trade and payments are finally determined, based on the lower valuations. 2.1 Related Work Many ascending-price one-sided CAs are known in the literature [10, 25, 29].",
                "Direct elicitation approaches have also been proposed for one-sided CAs in which agents respond to explicit queries about their valuations [8, 14, 19].",
                "A number of ascending CAs are designed to work with simple prices on items [12, 17].",
                "The price generation methods that we use in ICE generalize the methods in these earlier papers.",
                "Parkes et al. [24] studied sealed-bid combinatorial exchanges and introduced the Threshold payment rule.",
                "Subsequently, Krych [16] demonstrated experimentally that the Threshold rule promotes efficient allocations.",
                "We are not aware of any previous studies of iterative CEs.",
                "Dominant strategy DAs are known for unit demand [20] and also for single-minded agents [2].",
                "No dominant strategy mechanisms are known for the general CE problem.",
                "ICE is a hybrid auction design, in that it couples simple item prices to drive bidding in early rounds with combinatorial WD and payments, a feature it shares with the clock-proxy design of Ausubel et al. [1] for one-sided CAs.",
                "We adopt a variation on the clock-proxy auctionss revealedpreference activity rule.",
                "The bidding language shares some structural elements with the LGB language of Boutilier and Hoos [7], but has very different semantics.",
                "Rothkopf et al. [27] also describe a restricted tree-based bidding language.",
                "In LGB, the semantics are those of propositional logic, with the same items in an allocation able to satisfy a tree in multiple places.",
                "Although this can make LGB especially concise in some settings, the semantics that we propose appear to provide useful locality, so that the value of one component in a tree can be understood independently from the rest of the tree.",
                "The idea of capturing the structure of our bidding language explicitly within a mixed-integer programming formulation follows the developments in Boutilier [6]. 3.",
                "PRELIMINARIES In our model, we consider a set of goods, indexed {1, . . . , m} and a set of bidders, indexed {1, . . . , n}.",
                "The initial allocation of goods is denoted x0 = (x0 1, . . . , x0 n), with x0 i = (x0 i1, . . . , x0 im) and x0 ij ≥ 0 for good j indicating the number 250 of units of good j held by bidder i.",
                "A trade λ = (λ1, . . . , λn) denotes the change in allocation, with λi = (λi1, . . . , λim) where λij ∈   is the change in the number of units of item j to bidder i.",
                "So, the final allocation is x1 = x0 + λ.",
                "Each bidder has a value vi(λi) ∈ ¡ for a trade λi.",
                "This value can be positive or negative, and represents the change in value between the final allocation x0 i +λi and the initial allocation x0 i .",
                "Utility is quasi-linear, with ui(λi, p) = vi(λi)−p for trade λi and payment p ∈ ¡ .",
                "Price p can be negative, indicating the bidder receives a payment for the trade.",
                "We use the term payoff interchangeably with utility.",
                "Our goal in the ICE design is to implement the efficient trade.",
                "The efficient trade, λ∗ , maximizes the total increase in value across bidders.",
                "Definition 1 (Efficient trade).",
                "The efficient trade λ∗ solves max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Constraints (1) ensure that no agent sells more items than it has in its initial allocation.",
                "Constraints (2) provide free disposal, and allows feasible trades to sell more items than are purchased (but not vice versa).",
                "Later, we adopt Feas(x0 ) to denote the set of feasible trades, given these constraints and given an initial allocation x0 = (x0 1, . . . , x0 n). 3.1 Working Examples In this section, we provide three simple examples of instances that we will use to illustrate various components of the exchange.",
                "All three examples have only one seller, but this is purely illustrative.",
                "Example 1.",
                "One seller and one buyer, two goods {A, B}, with the seller having an initial allocation of AB.",
                "Changes in values for trades: seller buyer AND(−A, −B) AND(+A, +B) -10 +20 The AND indicates that both the buyer and the seller are only interested in trading both goods as a bundle.",
                "Here, the efficient (value-maximizing) trade is for the seller to sell AB to the buyer, denoted λ∗ = ([−1, −1], [+1, +1]).",
                "Example 2.",
                "One seller and four buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 buyer 3 buyer 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 The OR indicates that the seller is willing to sell any number of goods.",
                "The XOR indicates that buyers 2 and 4 are willing to buy at most one of the two goods in which they are interested.",
                "The efficient trade is for bundle AB to go to buyer 1 and bundle CD to buyer 3, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER Example 1: Example 3: 2,2 +C +D BUYER 2 2,2 +A +B BUYER 1 +11 +84,4 -B SELLER -A -C -D Example 2: 1,1 +A +B BUYER 2 2,2 +A +B BUYER 1 +6 +40,4 -B SELLER -C -D-A 1,1 +C +D BUYER 4 2,2 +C +D +3 +2 BUYER 3 -18 Figure 2: Example Bid Trees.",
                "Example 3.",
                "One seller and two buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 AND(−A, −B, −C, −D) AND(+A, +B) AND(+C, +D) -18 +11 +8 The efficient trade is for bundle AB to go to buyer 1 and bundle CD to go to buyer 2, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4.",
                "A ONE-SHOT EXCHANGE DESIGN The description of ICE is broken down into two sections: one-shot (sealed-bid) and iterative.",
                "In this section we abstract away the iterative aspect and introduce a specialization of the tree-based language that supports only exact values on nodes. 4.1 Tree-Based Bidding Language The bidding language is designed to be expressive and concise, entirely symmetric with respect to buyers and sellers, and to extend to capture bids from mixed buyers and sellers, ranging from simple swaps to highly complex trades.",
                "Bids are expressed as annotated bid trees, and define a bidders value for all possible trades.",
                "The language defines changes in values on trades, with leaves annotated with traded items and nodes annotated with changes in values (either positive or negative).",
                "The main feature is that it has a general interval-choose logical operator on internal nodes, and that it defines careful semantics for propagating values within the tree.",
                "We illustrate the language on each of Examples 1-3 in Figure 2.",
                "The language has a tree structure, with trades on items defined on leaves and values annotated on nodes and leaves.",
                "The nodes have zero values where no value is indicated.",
                "Internal nodes are also labeled with interval-choose (IC) ranges.",
                "Given a trade, the semantics of the language define which nodes in the tree can be satisfied, or switched-on.",
                "First, if a child is on then its parent must be on.",
                "Second, if a parent node is on, then the number of children that are on must be within the IC range on the parent node.",
                "Finally, leaves in which the bidder is buying items can only be on if the items are provided in the trade.",
                "For instance, in Example 2 we can consider the efficient trade, and observe that in this trade all nodes in the trees of buyers 1 and 3 (and also the seller), but none of the nodes in the trees of buyers 2 and 4, can be on.",
                "On the other hand, in 251 the trade in which A goes to buyer 2 and D to buyer 4, then the root and appropriate leaf nodes can be on for buyers 2 and 4, but no nodes can be on for buyers 1 and 3.",
                "Given a trade there is often a number of ways to choose the set of satisfied nodes.",
                "The semantics of the language require that the nodes that maximize the summed value across satisfied nodes be activated.",
                "Consider bid tree Ti from bidder i.",
                "This defines nodes β ∈ Ti, of which some are leaves, Leaf (i) ⊆ Ti.",
                "Let Child(β) ⊆ Ti denote the children of a node β (that is not itself a leaf).",
                "All nodes except leaves are labeled with the interval-choose operator [IC x i (β), ICy i (β)].",
                "Every node is also labeled with a value, viβ ∈ ¡ .",
                "Each leaf β is labeled with a trade, qiβ ∈   m (i.e., leaves can define a bundled trade on more than one type of item.)",
                "Given a trade λi to bidder i, the interval-choose operators and trades on leaves define which nodes can be satisfied.",
                "There will often be a choice.",
                "Ties are broken to maximize value.",
                "Let satiβ ∈ {0, 1} denote whether node β is satisfied.",
                "Solution sati is valid given tree Ti and trade λi, written sati ∈ valid(Ti, λi), if and only if: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Child(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Leaf (i) (5) In words, a set of leaves can only be considered satisfied given trade λi if the total increase in quantity summed across all such leaves is covered by the trade, for all goods (Eq. 4).",
                "This works for sellers as well as buyers: for sellers a trade is negative and this requires that the total number of items indicated sold in the tree is at least the total number sold as defined in the trade.",
                "We also need upwards-propagation: any time a node other than the root is satisfied then its parent must be satisfied (by   β ∈Child(β) satiβ ≤ ICy i (β)satiβ in Eq. 5).",
                "Finally, we need downwards-propagation: any time an internal node is satisfied then the appropriate number of children must also be satisfied (Eq. 5).",
                "The total value of trade λi, given bid-tree Ti, is defined as: vi(Ti, λi) = max sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) The tree-based language generalizes existing languages.",
                "For instance: IC(2, 2) on a node with 2 children is equivalent to an AND operator; IC(1, 3) on a node with 3 children is equivalent to an OR operator; and IC(1, 1) on a node with 2 children is equivalent to an XOR operator.",
                "Similarly, the XOR/OR bidding languages can be directly expressed as a bid tree in our language.2 4.2 Winner Determination This section defines the winner determination problem, which is formulated as a MIP and solved in our implementation with a commercial solver.3 The solver uses branchand-bound search with dynamic cut generation and branching heuristics to solve large MIPs in economically feasible run times. 2 The OR* language is the OR language with dummy items to provide additional structure.",
                "OR* is known to be expressive and concise.",
                "However, it is not known whether OR* dominates XOR/OR in terms of conciseness [23]. 3 CPLEX, www.ilog.com In defining the MIP representation we are careful to avoid an XOR-based enumeration of all bundles.",
                "A variation on the WD problem is reused many times within the exchange, e.g. for column generation in pricing and for checking revealed preference.",
                "Given bid trees T = (T1, . . . , Tn) and initial allocation x0 , the mixed-integer formulation for WD is: WD(T, x0 ) : max λ,sat ¢ i ¢ β∈Ti viβ · satiβ s.t. (1), (2), satiβ ∈ {0, 1}, λij ∈   sati ∈ valid(Ti, λi), ∀i Some goods may go unassigned because free disposal is allowed within the clearing rules of winner determination.",
                "These items can be allocated back to agents that sold the items, i.e. for which λij < 0. 4.3 Computing Threshold Payments The Threshold payment rule is based on the payments in the Vickrey-Clarke-Groves (VCG) mechanism [15], which itself is truthful and efficient but does not satisfy budget balance.",
                "Budget-balance requires that the total payments to the exchange are equal to the total payments made by the exchange.",
                "In VCG, the payment paid by agent i is pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) where λ∗ is the efficient trade, V ∗ is the reported value of this trade, and V−i is the reported value of the efficient trade that would be implemented without bidder i.",
                "We call ∆vcg,i = V ∗ − V−i the VCG discount.",
                "For instance, in Example 1 pvcg,seller = −10 − (+10 − 0) = −20 and pvcg,buyer = +20 − (+10 − 0) = 10, and the exchange would run at a budget deficit of −20 + 10 = −10.",
                "The Threshold payment rule [24] determines budgetbalanced payments to minimize the maximal error across all agents to the VCG outcome.",
                "Definition 2.",
                "The Threshold payment scheme implements the efficient trade λ∗ given bids, and sets payments pthresh,i = ˆvi(λ∗ i ) − ∆i, where ∆ = (∆1, . . . , ∆n) is set to minimize maxi(∆vcg,i − ∆i) subject to ∆i ≤ ∆vcg,i and   i ∆i ≤ V ∗ (this gives budget-balance).",
                "Example 4.",
                "In Example 2, the VCG discounts are (9, 2, 0, 1, 0) to the seller and four buyers respectively, VCG payments are (−9, 4, 0, 2, 0) and the exchange runs at a deficit of -3.",
                "In Threshold, the discounts are (8, 1, 0, 0, 0) and the payments are (−8, 5, 0, 3, 0).",
                "This minimizes the worst-case error to VCG discounts across all budget-balanced payment schemes.",
                "Threshold payments are designed to minimize the maximal ex post incentive to manipulate.",
                "Krych [16] confirmed that Threshold promotes allocative efficiency in restricted and approximate Bayes-Nash equilibrium. 5.",
                "THE ICE DESIGN We are now ready to introduce the <br>iterative combinatorial exchange</br> (ICE) design.",
                "Several new components are introduced, relative to the design for the one-shot exchange.",
                "Rather than provide precise valuations, bidders can provide lower and upper valuations and revise this bid information across rounds.",
                "The exchange provides price-based feedback 252 to guide bidders in this process, and terminates with an efficient (or approximately-efficient) trade with respect to reported valuations.",
                "In each round t ∈ {0, 1, . . .} the current lower and upper bounds, vt and vt , are used to define a provisional valuation profile vα (the α-valuation), together with a provisional trade λt and provisional prices pt = (pt 1, . . . , pt m) on items.",
                "The α-valuation is a linear combination of the current upper and lower valuations, with αEFF ∈ [0, 1] chosen endogenously based on the closeness of the optimistic trade (at v) and the pessimistic trade (at v).",
                "Prices pt are used to inform an activity rule, and drive progress towards an efficient trade. 5.1 Upper and Lower Valuations The bidding language is extended to allow a bidder i to report a lower and upper value (viβ, viβ) on each node.",
                "These take the place of the exact value viβ defined in Section 4.1.",
                "Based on these labels, we can define the valuation functions vi(Ti, λi) and vi(Ti, λi), using the exact same semantics as in Eq. (6).",
                "We say that such a bid-tree is well-formed if viβ ≤ viβ for all nodes.",
                "The following lemma is useful: Lemma 1.",
                "Given a well-formed tree, T, then vi(Ti, λi) ≤ vi(Ti, λi) for all trades.",
                "Proof.",
                "Suppose there is some λi for which vi(Ti, λi) > vi(Ti, λi).",
                "Then, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ.",
                "But, this is a contradiction because the trade λ that defines vi(Ti, λi) is still feasible with upper bounds vi, and viβ ≥ viβ for all nodes β in a well-formed tree. 5.2 Price Feedback In each round, approximate competitive-equilibrium (CE) prices, pt = (pt 1, . . . , pt m), are determined.",
                "Given these provisional prices, the price on trade λi for bidder i is pt (λi) =   j≤m pt j · λij.",
                "Definition 3 (CE prices).",
                "Prices p∗ are competitive equilibrium prices if the efficient trade λ∗ is supported at prices p∗ , so that for each bidder: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) CE prices will not always exist and we will often need to compute approximate prices [5].",
                "We extend ideas due to Rassenti et al. [26], Kwasnica et al. [17] and Dunford et al. [12], and select approximate prices as follows: I: Accuracy.",
                "First, we compute prices that minimize the maximal error in the best-response constraints across all bidders.",
                "II: Fairness.",
                "Second, we break ties to prefer prices that minimize the maximal deviation from Threshold payments across all bidders.",
                "III: Balance.",
                "Third, we break ties to prefer prices that minimize the maximal price across all items.",
                "Taken together, these steps are designed to promote the informativeness of the prices in driving progress across rounds.",
                "In computing prices, we explain how to compute approximate (or otherwise) prices for structured bidding languages, and without enumerating all possible trades.",
                "For this, we adopt constraint generation to efficient handle an exponential number of constraints.",
                "Each step is described in detail below.",
                "I: Accuracy.",
                "We adopt a definition of price accuracy that generalizes the notions adopted in previous papers for unstructured bidding languages.",
                "Let λt denote the current provisional trade and suppose the provisional valuation is vα .",
                "To compute accurate CE prices, we consider: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j.",
                "This linear program (LP) is designed to find prices that minimize the worst-case error across all agents.",
                "From the definition of CE prices, it follows that CE prices would have δ = 0 as a solution to (9), at which point trade λt i would be in the best-response set of every agent (with λt i = ∅, i.e. no trade, for all agents with no surplus for trade at the prices.)",
                "Example 5.",
                "We can illustrate the formulation (9) on Example 2, assuming for simplicity that vα = v (i.e. truth).",
                "The efficient trade allocates AB to buyer 1 and CD to buyer 3.",
                "Accuracy will seek prices p(A), p(B), p(C) and p(D) to minimize the δ ≥ 0 required to satisfy constraints: p(A) + p(B) + p(C) + p(D) ≥ 0 (seller) p(A) + p(B) ≤ 6 + δ (buyer 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (buyer 2) p(C) + p(D) ≤ 3 (buyer 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (buyer 4) An optimal solution requires p(A) = p(B) = 10/3, with δ = 2/3, with p(C) and p(D) taking values such as p(C) = p(D) = 3/2.",
                "But, (9) has an exponential number of constraints (Eq. 10).",
                "Rather than solve it explicitly we use constraint generation [4] and dynamically generate a sufficient subset of constraints.",
                "Let   i denote a manageable subset of all possible feasible trades to bidder i.",
                "Then, a relaxed version of (9) (written ACC) is formulated by substituting (10) with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) where   i is a set of trades that are feasible for bidder i given the other bids.",
                "Fixing the prices p∗ , we then solve n subproblems (one for each bidder), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0 ), (12) to check whether solution (p∗ , δ∗ ) to ACC is feasible in problem (9).",
                "In R-WD(i) the objective is to determine a most preferred trade for each bidder at these prices.",
                "Let ˆλi denote the solution to R-WD(i).",
                "Check condition: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) and if this condition holds for all bidders i, then solution (p∗ , δ∗ ) is optimal for problem (9).",
                "Otherwise, trade ˆλi is added to   i for all bidders i for which this constraint is 253 violated and we re-solve the LP with the new set of constraints.4 II: Fairness.",
                "Second, we break remaining ties to prefer fair prices: choosing prices that minimize the worst-case error with respect to Threshold payoffs (i.e. utility to bidders with Threshold payments), but without choosing prices that are less accurate.5 Example 6.",
                "For example, accuracy in Example 1 (depicted in Figure 1) requires 12 ≤ pA +pB ≤ 16 (for vα = v).",
                "At these valuations the Threshold payoffs would be 2 to both the seller and the buyer.",
                "This can be exactly achieved in pricing with pA + pB = 14.",
                "The fairness tie-breaking method is formulated as the following LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution, from ACC.",
                "The objective here is the same as in the Threshold payment rule (see Section 4.3): minimize the maximal error between bidder payoff (at vα ) for the provisional trade and the VCG payoff (at vα ).",
                "Problem FAIR is also solved through constraint generation, using R-WD(i) to add additional violated constraints as necessary.",
                "III: Balance.",
                "Third, we break remaining ties to prefer balanced prices: choosing prices that minimize the maximal price across all items.",
                "Returning again to Example 1, depicted in Figure 1, we see that accuracy and fairness require p(A) + p(B) = 14.",
                "Finally, balance sets p(A) = p(B) = 7.",
                "Balance is justified when, all else being equal, items are more likely to have similar than dissimilar values.6 The LP for balance is formulated as follows: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution from ACC and π∗ represents the error in the optimal solution from FAIR.",
                "Constraint generation is also used to solve BAL, generating new trades for   i as necessary. 4 Problem R-WD(i) is a specialization of the WD problem, in which the objective is to maximize the payoff of a single bidder, rather than the total value across all bidders.",
                "It is solved as a MIP, by rewriting the objective in WD(T, x0 ) as max{viβ · satiβ −   j p∗ j · λij } for agent i.",
                "Thus, the structure of the bid-tree language is exploited in generating new constraints, because this is solved as a concise MIP.",
                "The other bidders are kept around in the MIP (but do not appear in the objective), and are used to define the space of feasible trades. 5 The methods of Dunford et al. [12], that use a nucleolus approach, are also closely related. 6 The use of balance was advocated by Kwasnica et al. [17].",
                "Dunford et al. [12] prefer to smooth prices across rounds.",
                "Comment 1: Lexicographical Refinement.",
                "For all three sub-problems we also perform lexicographical refinement (with respect to bidders in ACC and FAIR, and with respect to goods in BAL).",
                "For instance, in ACC we successively minimize the maximal error across all bidders.",
                "Given an initial solution we first pin down the error on all bidders for whom a constraint (11) is binding.",
                "For such a bidder i, the constraint is replaced with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) and the error to bidder i no longer appears explicitly in the objective.",
                "ACC is then re-solved, and makes progress by further minimizing the maximal error across all bidders yet to be pinned down.",
                "This continues, pinning down any new bidders for whom one of constraints (11) is binding, until the error is lexicographically optimized for all bidders.7 The exact same process is repeated for FAIR and BAL, with bidders pinned down and constraints (15) replaced with π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (where π∗ i is the current objective) in FAIR, and items pinned down and constraints (18) replaced with p∗ j ≥ pj (where p∗ j represents the target for the maximal price on that item) in BAL.",
                "Comment 2: Computation.",
                "All constraints in   i are retained, and this set grows across all stages and across all rounds of the exchange.",
                "Thus, the computational effort in constraint generation is re-used.",
                "In implementation we are careful to address a number of -issues that arise due to floating-point issues.",
                "We prefer to err on the side of being conservative in determining whether or not to add another constraint in performing check (13).",
                "This avoids later infeasibility issues.",
                "In addition, when pinning-down bidders for the purpose of lexicographical refinement we relax the associated bidder-constraints with a small > 0 on the righthand side. 5.3 Revealed-Preference Activity Rules The role of activity rules in the auction is to ensure both consistency and progress across rounds [21].",
                "Consistency in our exchange requires that bidders tighten bounds as the exchange progresses.",
                "Activity rules ensure that bidders are active during early rounds, and promote useful elicitation throughout the exchange.",
                "We adopt a simple revealed-preference (RP) activity rule.",
                "The idea is loosely based around the RP-rule in Ausubel et al. [1], where it is used for one-sided CAs.",
                "The motivation is to require more than simply consistency: we need bidders to provide enough information for the system to be able to to prove that an allocation is (approximately) efficient.",
                "It is helpful to think about the bidders interacting with proxy agents that will act on their behalf in responding to provisional prices pt−1 determined at the end of round t − 1.",
                "The only knowledge that such a proxy has of the valuation of a bidder is through the bid-tree.",
                "Suppose a proxy was queried by the exchange and asked which trade the bidder was most interested in at the provisional prices.",
                "The RP rule says the following: the proxy must have enough 7 For example, applying this to accuracy on Example 2 we solve once and find bidders 1 and 2 are binding, for error δ∗ = 2/3.",
                "We pin these down and then minimize the error to bidders 3 and 4.",
                "Finally, this gives p(A) = p(B) = 10/3 and p(C) = p(D) = 5/3, with accuracy 2/3 to bidders 1 and 2 and 1/3 to bidders 3 and 4. 254 information to be able to determine this surplus-maximizing trade at current prices.",
                "Consider the following examples: Example 7.",
                "A bidder has XOR(+A, +B) and a value of +5 on the leaf +A and a value range of [5,10] on leaf +B.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the proxy knows that however the remaining value uncertainty on +B is resolved the bidder will always (weakly) prefer +B to +A.",
                "Example 8.",
                "A bidder has XOR(+A, +B) and value bounds [5, 10] on the root node and a value of 1 on leaf +A.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the bidder will always prefer +A to +B at equal prices, whichever way the uncertain value on the root node is ultimately resolved.",
                "Overloading notation, let vi ∈ Ti denote a valuation that is consistent with lower and upper valuations in bid tree Ti.",
                "Definition 4.",
                "Bid tree Ti satisfies RP at prices pt−1 if and only if there exists some feasible trade L∗ for which, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. (20) To make this determination for bidder i we solve a sequence of problems, each of which is a variation on the WD problem.",
                "First, we construct a candidate lower-bound trade, which is a feasible trade that solves: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) The solution π∗ l to RP1(i) represents the maximal payoff that bidder i can achieve across all feasible trades, given its pessimistic valuation.",
                "Second, we break ties to find a trade with maximal value uncertainty across all possible solutions to RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] s.t. λ ∈ Feas(x0 ) (22) vi(λi) − pt−1 (λi) ≥ π∗ l (23) We adopt solution L∗ i as our candidate for the trade that may satisfy RP.",
                "To understand the importance of this tiebreaking rule consider Example 7.",
                "The proxy can prove +B but not +A is a best-response for all vi ∈ Ti, and should choose +B as its candidate.",
                "Notice that +B is a counterexample to +A, but not the other way round.",
                "Now, we construct a modified valuation ˜vi, by setting ˜viβ =   viβ , if β ∈ sat(L∗ i ) viβ , otherwise. (24) where sat(L∗ i ) is the set of nodes that are satisfied in the lower-bound tree for trade L∗ i .",
                "Given this modified valuation, we find U∗ to solve: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Let π∗ u denote the payoff from this optimal trade at modified values ˜v.",
                "We call trade U∗ i the witness trade.",
                "We show in Proposition 1 that the RP rule is satisfied if and only if π∗ l ≥ π∗ u. Constructing the modified valuation as ˜vi recognizes that there is shared uncertainty across trades that satisfy the same nodes in a bid tree.",
                "Example 8 helps to illustrate this.",
                "Just using vi in RP3(i), we would find L∗ i is buy A with payoff π∗ l = 3 but then find U∗ i is buy B with π∗ u = 7 and fail RP.",
                "We must recognize that however the uncertainty on the root node is resolved it will affect +A and +B in exactly the same way.",
                "For this reason, we set ˜viβ = viβ = 5 on the root node, which is exactly the same value that was adopted in determining π∗ l .",
                "Then, RP3(i) applied to U∗ i gives buy A and the RP test is judged to be passed.",
                "Proposition 1.",
                "Bid tree Ti satisfies RP given prices pt−1 if and only if any lower-bound trade L∗ i that solves RP1(i) and RP2(i) satisfies: vi(Ti, L∗ i ) − pt−1 (L∗ i ) ≥ ˜vi(Ti, U∗ i ) − pt−1 (U∗ i ), (26) where ˜vi is the modified valuation in Eq. (24).",
                "Proof.",
                "For sufficiency, notice that the difference in payoff between trade L∗ i and another trade λi is unaffected by the way uncertainty is resolved on any node that is satisfied in both L∗ i and λi.",
                "Fixing the values in ˜vi on nodes satisfied in L∗ i has the effect of removing this consideration when a trade U∗ i is selected that satisfies one of these nodes.",
                "On the other hand, fixing the values on these nodes has no effect on trades considered in RP3(i) that do not share a node with L∗ i .",
                "For the necessary direction, we first show that any trade that satisfies RP must solve RP1(i).",
                "Suppose otherwise, that some λi with payoff greater than π∗ l satisfies RP.",
                "But, valuation vi ∈ Ti together with L∗ i presents a counterexample to RP (Eq. 20).",
                "Now, suppose (for contradiction) that some λi with maximal payoff π∗ l but uncertainty less than L∗ i satisfies RP.",
                "Proceed by case analysis.",
                "Case a): only one solution to RP1(i) has uncertain value and so λi has certain value.",
                "But, this cannot satisfy RP because L∗ i with uncertain value would be a counterexample to RP (Eq. 20).",
                "Case b): two or more solutions to RP1(i) have uncertain value.",
                "Here, we first argue that one of these trades must satisfy a (weak) superset of all the nodes with uncertain value that are satisfied by all other trades in this set.",
                "This is by RP.",
                "Without this, then for any choice of trade that solves RP1(i), there is another trade with a disjoint set of uncertain but satisfied nodes that provides a counterexample to RP (Eq. 20).",
                "Now, consider the case that some trade contains a superset of all the uncertain satisfied nodes of the other trades.",
                "Clearly RP2(i) will choose this trade, L∗ i , and λi must satisfy a subset of these nodes (by assumption).",
                "But, we now see that λi cannot satisfy RP because L∗ i would be a counterexample to RP.",
                "Failure to meet the activity rule must have some consequence.",
                "In the current rules, the default action we choose is to set the upper bounds in valuations down to the maximal value of the provisional price on a node8 and the lowerbound value on that node.9 Such a bidder can remain active 8 The provisional price on a node is defined as the minimal total price across all feasible trades for which the subtree rooted at the tree is satisfied. 9 This is entirely analogous to when a bidder in an ascending clock auction stops bidding at a price: she is not permitted to bid at a higher price again in future rounds. 255 within the exchange, but only with valuations that are consistent with these new bounds. 5.4 Bidder Feedback In each round, our default design provides every bidder with the provisional trade and also with the current provisional prices.",
                "See 7 for an additional discussion.",
                "We also provide guidance to help a bidder meet the RP rule.",
                "Let sat(L∗ i ) and sat(U∗ i ) denote the nodes that are satisfied in trades L∗ i and U∗ i , as computed in RP1-RP3.",
                "Lemma 2.",
                "When RP fails, a bidder must increase a lower bound on at least one node in sat(L∗ i ) \\ sat(U∗ i ) or decrease an upper bound on at least one node in sat(U∗ i ) \\ sat(L∗ i ) in order to meet the activity rule.",
                "Proof.",
                "Changing the upper- or lower- values on nodes that are not satisfied by either trade does not change L∗ i or U∗ i , and does not change the payoff from these trades.",
                "Thus, the RP condition will continue to fail.",
                "Similarly, changing the bounds on nodes that are satisfied in both trades has no effect on revealed preference.",
                "A change to a lower bound on a shared node affects both L∗ i and U∗ i identically because of the use of the modified valuation to determine U∗ i .",
                "A change to an upper bound on a shared node has no effect in determining either L∗ i or U∗ i .",
                "Note that when sat(U∗ i ) = sat(L∗ i ) then condition (26) is always trivially satisfied, and so the guidance in the lemma is always well-defined when RP fails.",
                "This is an elegant feedback mechanism because it is adaptive.",
                "Once a bidder makes some changes on some subset of these nodes, the bidder can query the exchange.",
                "The exchange can then respond yes, or can revise the set of nodes sat(λ∗ l ) and sat(λ∗ u) as necessary. 5.5 Termination Conditions Once each bidder has committed its new bids (and either met the RP rule or suffered the penalty) then round t closes.",
                "At this point, the task is to determine the new α-valuation, and in turn the provisional allocation λt and provisional prices pt .",
                "A termination condition is also checked, to determine whether to move the exchange to a last-and-final round.",
                "To define the α-valuation we compute the following two quantities: Pessimistic at Pessimistic (PP) Determine an efficient trade, λ∗ l , at pessimistic values, i.e. to solve maxλ   i vi(λi), and set PP=  i vi(λ∗ li).",
                "Pessimistic at Optimistic (PO) Determine an efficient trade, λ∗ u, at optimistic values, i.e. to solve maxλ   i vi(λi), and set PO=  i vi(λ∗ ui).",
                "First, note that PP ≥ PO and PP ≥ 0 by definition, for all bid-trees, although PO can be negative (because the right trade at v is not currently a useful trade at v).",
                "Recognizing this, define γeff (PP, PO) = 1 + PP − PO PP , (27) when PP > 0, and observe that γeff (PP, PO) ≥ 1 when this is defined, and that γeff (PP, PO) will start large and then trend towards 1 as the optimistic allocation converges towards the pessimistic allocation.",
                "In each round, we define αeff ∈ [0, 1] as: αeff =   0 when PP is 0 1/γeff otherwise (28) which is 0 while PP is 0 and then trends towards 1 once PP> 0 in some round.",
                "This is used to define α-valuation vα i = αeff vi + (1 − αeff )vi, ∀i, (29) which is used to define the provisional allocation and provisional prices.",
                "The effect is to endogenously define a schedule for moving from optimistic to pessimistic values across rounds, based on how close the trades are to one another.",
                "Termination Condition.",
                "In moving to the last-and-final round, and finally closing, we also care about the convergence of payments, in addition to the convergence towards an efficient trade.",
                "For this we introduce another parameter, αthresh ∈ [0, 1], that trends from 0 to 1 as the Threshold payments at lower and upper valuations converge.",
                "Consider the following parameter: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive) , (30) which is defined for PP > 0, where pthresh(v) denotes the Threshold payments at valuation profile v, Nactive is the number of bidders that are actively engaged in trade in the PP trade, and || · ||2 is the L2-norm.",
                "Note that γthresh is defined for payments and not payoffs.",
                "This is appropriate because it is the accuracy of the outcome of the exchange that matters: i.e. the trade and the payments.",
                "Given this, we define αthresh =   0 when PP is 0 1/γthresh otherwise (31) which is 0 while PP is 0 and then trends towards 1 as progress is made.",
                "Definition 5 (termination).",
                "ICE transitions to a lastand-final round when one of the following holds: 1. αeff ≥ CUTOFFeff and αthresh ≥ CUTOFFthresh, 2. there is no trade at the optimistic values, where CUTOFFeff , CUTOFFthresh ∈ (0, 1] determine the accuracy required for termination.",
                "At the end of the last-and-final round vα = v is used to define the final trade and the final Threshold payments.",
                "Example 9.",
                "Consider again Example 1, and consider the upper and lower bounds as depicted in Figure 1.",
                "First, if the sellers bounds were [−20, −4] then there is an optimistic trade but no pessimistic trade, and PO = −4 and PP = 0, and αeff = 0.",
                "At the bounds depicted, both the optimistic and the pessimistic trades occur and PO = PP = 4 and αeff = 1.",
                "However, we can see the Threshold payments are (17, −17) at v but (14, −14) at v. Evaluating γthresh , we have γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, and αthresh = 2/5.",
                "For CUTOFFthresh < 2/5 the exchange would remain open.",
                "On the other hand, if the buyers value for +AB was between [18, 24] and the sellers value for −AB was between [−12, −6], the Threshold payments are (15, −15) at both upper and lower bounds, and αthresh = 1. 256 Component Purpose Lines Agent.",
                "Captures strategic behavior and information revelation decisions 762 Model Support Provides XML support to load goods and valuations into world 200 World Keeps track of all agent, good, and valuation details 998 Exchange Driver & Communication Controls exchange, and coordinates remote agent behavior 585 Bidding Language Implements the tree-based bidding language 1119 Activity Rule Engine Implements the revealed preference rule with range support 203 Closing Rule Engine Checks if auction termination condition reached 137 WD Engine Provides WD-related logic 377 Pricing Engine Provides Pricing-related logic 460 MIP Builders Translates logic used by engines into our general optimizer formulation 346 Pricing Builders Used by three pricing stages 256 Winner Determination Builders Used by WD, activity rule, closing rule, and pricing constraint generation 365 Framework Support code; eases modular replacement of above components 510 Table 1: Exchange Component and Code Breakdown. 6.",
                "SYSTEMS INFRASTRUCTURE ICE is approximately 6502 lines of Java code, broken up into the functional packages described in Table 1.10 The prototype is modular so that researchers may easily replace components for experimentation.",
                "In addition to the core exchange discussed in this paper, we have developed an agent component that allows a user to simulate the behavior and knowledge of other players in the system, better allowing a user to formulate their strategy in advance of actual play.",
                "A user specifies a valuation model in an XMLinterpretation of our bidding language, which is revealed to the exchange via the agents strategy.",
                "Major exchange tasks are handled by engines that dictate the non-optimizer specific logic.",
                "These engines drive the appropriate MIP/LP builders.",
                "We realized that all of our optimization formulations boil down to two classes of optimization problem.",
                "The first, used by winner determination, activity rule, closing rule, and constraint generation in pricing, is a MIP that finds trades that maximize value, holding prices and slacks constant.",
                "The second, used by the three pricing stages, is an LP that holds trades constant, seeking to minimize slack, profit, or prices.",
                "We take advantage of the commonality of these problems by using common LP/MIP builders that differ only by a few functional hooks to provide the correct variables for optimization.",
                "We have generalized our back-end optimization solver interface11 (we currently support CPLEX and the LGPL- licensed LPSolve), and can take advantage of the load-balancing and parallel MIP/LP solving capability that this library provides. 7.",
                "DISCUSSION The bidding language was defined to allow for perfect symmetry between buyers and sellers and provide expressiveness in an exchange domain, for instance for mixed bidders interested in executing trades such as swaps.",
                "This proved especially challenging.",
                "The breakthrough came when we focused on changes in value for trades rather than providing absolute values for allocations.",
                "For simplicity, we require the same tree structure for both the upper and lower valuations. 10 Code size is measured in physical source line of code (SLOC), as generated using David A. Wheelers SLOC Count.",
                "The total of 6502 includes 184 for instrumentation (not shown in the table).",
                "The JOpt solver interface is another 1964 lines, and Castor automatically generates around 5200 lines of code for XML file manipulation. 11 http://econcs.eecs.harvard.edu/jopt This allows the language itself to ensure consistency (with the upper value at least the lower value on all trades) and enforce monotonic tightening of these bounds for all trades across rounds.",
                "It also provides for an efficient method to check the RP activity rule, because it makes it simple to reason about shared uncertainty between trades.",
                "The decision to adopt a direct and proxied approach in which bidders express their upper and lower values to a trusted proxy agent that interacts with the exchange was made early in the design process.",
                "In many ways this is the clearest and most immediate way to generalize the design in Parkes et al. [24] and make it iterative.",
                "In addition, this removes much opportunity for strategic manipulation: bidders are restricted to making (incremental) statements about their valuations.",
                "Another advantage is that it makes the activity rule easy to explain: bidders can always meet the activity rule by tightening bounds such that their true value remains in the support.12 Perhaps most importantly, having explicit information on upper and lower values permits progress in early rounds, even while there is no efficient trade at pessimistic values.",
                "Upper and lower bound information also provides guidance about when to terminate.",
                "Note that taken by itself, PP = PO does not imply that the current provisional trade is efficient with respect to all values consistent with current value information.",
                "The difference in values between different trades, aggregated across all bidders, could be similar at lower and upper bounds but quite different at intermediate values (including truth).",
                "Nevertheless, we conjecture that PP = PO will prove an excellent indicator of efficiency in practical settings where the shape of the upper and lower valuations does convey useful information.",
                "This is worthy of experimental investigation.",
                "Moreover, the use of price and RP activity provides additional guarantees.",
                "We adopted linear prices (prices on individual items) rather than non-linear prices (with prices on a trade not equal to the sum of the prices on the component items) early in the design process.",
                "The conciseness of this price representation is very important for computational tractability within the exchange and also to promote simplicity and transparency for bidders.",
                "The RP activity rule was adopted later, and is a good choice because of its excellent theoretical properties when coupled with CE prices.",
                "The following can be easily established: given exact CE prices pt−1 for provisional trade 12 This is in contrast to indirect price-based approaches, such as clock-proxy [1], in which bidders must be able to reason about the RP-constraints implied by bids in each round. 257 λt−1 at valuations vα , then if the upper and lower values at the start of round t already satisfy the RP rule (and without the need for any tie-breaking), the provisional trade is efficient for all valuations consistent with the current bid trees.",
                "When linear CE prices exist, this provides for a soundness and completeness statement: if PP = PO, linear CE prices exist, and the RP rule is satisfied, the provisional trade is efficient (soundness); if prices are exact CE prices for the provisional trade at vα , but the trade is inefficient with respect to some valuation profile consistent with the current bid trees, then at least one bidder must fail RP with her current bid tree and progress will be made (completeness).",
                "Future work must study convergence experimentally, and extend this theory to allow for approximate prices.",
                "Some strategic aspects of our ICE design deserve comment, and further study.",
                "First, we do not claim that truthfully responding to the RP rule is an ex post equilibrium.13 However, the exchange is designed to mimic the Threshold rule in its payment scheme, which is known to have useful incentive properties [16].",
                "We must be careful, though.",
                "For instance we do not suggest to provide αeff to bidders, because as αeff approaches 1 it would inform bidders that bid values are becoming irrelevant to determining the trade but merely used to determine payments (and bidders would become increasingly reluctant to increase their lower valuations).",
                "Also, no consideration has been given in this work to collusion by bidders.",
                "This is an issue that deserves some attention in future work. 8.",
                "CONCLUSIONS In this work we designed and prototyped a scalable and highly-expressive <br>iterative combinatorial exchange</br>.",
                "The design includes many interesting features, including: a new bid-tree language for exchanges, a new method to construct approximate linear prices from expressive languages, and a proxied elicitation method with optimistic and pessimistic valuations with a new method to evaluate a revealed- preference activity rule.",
                "The exchange is fully implemented in Java and is in a validation phase.",
                "The next steps for our work are to allow bidders to refine the structure of the bid tree in addition to values on the tree.",
                "We intend to study the elicitation properties of the exchange and we have put together a test suite of exchange problem instances.",
                "In addition, we are beginning to engage in collaborations to apply the design to airline takeoff and landing slot scheduling and to resource allocation in widearea network distributed computational systems.",
                "Acknowledgments We would like to dedicate this paper to all of the participants in CS 286r at Harvard University in Spring 2004.",
                "This work is supported in part by NSF grant IIS-0238147. 9.",
                "REFERENCES [1] L. Ausubel, P. Cramton, and P. Milgrom.",
                "The clock-proxy auction: A practical combinatorial auction design.",
                "In Cramton et al. [9], chapter 5. [2] M. Babaioff, N. Nisan, and E. Pavlov.",
                "Mechanisms for a spatially distributed market.",
                "In Proc. 5th ACM Conf. on Electronic Commerce, pages 9-20.",
                "ACM Press, 2001. 13 Given the Myerson-Satterthwaite impossibility theorem [22] and the method by which we determine the trade we should not expect this. [3] M. Ball, G. Donohue, and K. Hoffman.",
                "Auctions for the safe, efficient, and equitable allocation of airspace system resources.",
                "In S. Cramton, Shoham, editor, Combinatorial Auctions. 2004.",
                "Forthcoming. [4] D. Bertsimas and J. Tsitsiklis.",
                "Introduction to Linear Optimization.",
                "Athena Scientific, 1997. [5] S. Bikhchandani and J. M. Ostroy.",
                "The package assignment model.",
                "Journal of Economic Theory, 107(2):377-406, 2002. [6] C. Boutilier.",
                "A pomdp formulation of preference elicitation problems.",
                "In Proc. 18th National Conference on Artificial Intelligence (AAAI-02), 2002. [7] C. Boutilier and H. Hoos.",
                "Bidding languages for combinatorial auctions.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), 2001. [8] W. Conen and T. Sandholm.",
                "Preference elicitation in combinatorial auctions.",
                "In Proc. 3rd ACM Conf. on Electronic Commerce (EC-01), pages 256-259.",
                "ACM Press, New York, 2001. [9] P. Cramton, Y. Shoham, and R. Steinberg, editors.",
                "Combinatorial Auctions.",
                "MIT Press, 2004. [10] S. de Vries, J. Schummer, and R. V. Vohra.",
                "On ascending Vickrey auctions for heterogeneous objects.",
                "Technical report, MEDS, Kellogg School, Northwestern University, 2003. [11] S. de Vries and R. V. Vohra.",
                "Combinatorial auctions: A survey.",
                "Informs Journal on Computing, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana, and T. Wilson.",
                "Testing linear pricing algorithms for use in ascending combinatorial auctions.",
                "Technical report, SEOR, George Mason University, 2003. [13] Y. Fu, J.",
                "Chase, B. Chun, S. Schwab, and A. Vahdat.",
                "Sharp: an architecture for secure resource peering.",
                "In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 133-148.",
                "ACM Press, 2003. [14] B. Hudson and T. Sandholm.",
                "Effectiveness of query types and policies for preference elicitation in combinatorial auctions.",
                "In Proc. 3rd Int.",
                "Joint.",
                "Conf. on Autonomous Agents and Multi Agent Systems, pages 386-393, 2004. [15] V. Krishna.",
                "Auction Theory.",
                "Academic Press, 2002. [16] D. Krych.",
                "Calculation and analysis of Nash equilibria of Vickrey-based payment rules for combinatorial exchanges, Harvard College, April 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter, and C. DeMartini.",
                "A new and improved design for multi-object iterative auctions.",
                "Management Science, 2004.",
                "To appear. [18] E. Kwerel and J. Williams.",
                "A proposal for a rapid transition to market allocation of spectrum.",
                "Technical report, FCC Office of Plans and Policy, Nov 2002. [19] S. M. Lahaie and D. C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In Proc.",
                "ACM Conf. on Electronic Commerce, pages 180-188, 2004. [20] R. P. McAfee.",
                "A dominant strategy double auction.",
                "J. of Economic Theory, 56:434-450, 1992. [21] P. Milgrom.",
                "Putting auction theory to work: The simultaneous ascending auction.",
                "J.Pol.",
                "Econ., 108:245-272, 2000. [22] R. B. Myerson and M. A. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [23] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. 2nd ACM Conf. on Electronic Commerce (EC-00), pages 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), pages 1161-1168, 2001. [25] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, July 2000. [26] S. J. Rassenti, V. L. Smith, and R. L. Bulfin.",
                "A combinatorial mechanism for airport time slot allocation.",
                "Bell Journal of Economics, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc, and R. M. Harstad.",
                "Computationally manageable combinatorial auctions.",
                "Management Science, 44(8):1131-1147, 1998. [28] T. Sandholm and C. Boutilier.",
                "Preference elicitation in combinatorial auctions.",
                "In Cramton et al. [9], chapter 10. [29] P. R. Wurman and M. P. Wellman.",
                "AkBA: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, pages 21-29, 2000. 258"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "ICE: An \"iterative combinatorial exchange\" David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an \"iterativeIntercambio combinatorio \"(ICE).",
                "Este artículo presenta el primer diseño para un \"intercambio combinatorial iterativo\" (ICE).",
                "El diseño de hielo ahora estamos listos para introducir el \"diseño iterativo de intercambio combinatorial\" (ICE).",
                "Conclusiones En este trabajo diseñamos y prototipos de un \"intercambio combinatorio iterativo\" escalable y altamente expresivo."
            ],
            "translated_text": "",
            "candidates": [
                "Intercambio combinatorio iterativo",
                "iterative combinatorial exchange",
                "iterativeIntercambio combinatorio ",
                "Intercambio combinatorio iterativo",
                "intercambio combinatorial iterativo",
                "Intercambio combinatorio iterativo",
                "diseño iterativo de intercambio combinatorial",
                "Intercambio combinatorio iterativo",
                "intercambio combinatorio iterativo"
            ],
            "error": []
        },
        "double auction": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "ICE: An Iterative Combinatorial Exchange David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an iterative combinatorial exchange (ICE).",
                "The exchange incorporates a tree-based bidding language that is concise and expressive for CEs.",
                "Bidders specify lower and upper bounds on their value for different trades.",
                "These bounds allow price discovery and useful preference elicitation in early rounds, and allow termination with an efficient trade despite partial information on bidder valuations.",
                "All computation in the exchange is carefully optimized to exploit the structure of the bid-trees and to avoid enumerating trades.",
                "A proxied interpretation of a revealedpreference activity rule ensures progress across rounds.",
                "A VCG-based payment scheme that has been shown to mitigate opportunities for bargaining and strategic behavior is used to determine final payments.",
                "The exchange is fully implemented and in a validation phase.",
                "Categories and Subject Descriptors: I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Combinatorial exchanges combine and generalize two different mechanisms: double auctions and combinatorial auctions.",
                "In a <br>double auction</br> (DA), multiple buyers and sellers trade units of an identical good [20].",
                "In a combinatorial auction (CA), a single seller has multiple heterogeneous items up for sale [11].",
                "Buyers may have complementarities or substitutabilities between goods, and are provided with an expressive bidding language.",
                "A common goal in both market designs is to determine the efficient allocation, which is the allocation that maximizes total value.",
                "A combinatorial exchange (CE) [24] is a combinatorial <br>double auction</br> that brings together multiple buyers and sellers to trade multiple heterogeneous goods.",
                "For example, in an exchange for wireless spectrum, a bidder may declare that she is willing to pay $1 million for a trade where she obtains licenses for New York City, Boston, and Philadelphia, and loses her license for Washington DC.",
                "Thus, unlike a DA, a CE allows all participants to express complex valuations via expressive bids.",
                "Unlike a CA, a CE allows for fragmented ownership, with multiple buyers and sellers and agents that are both buying and selling.",
                "CEs have received recent attention both in the context of wireless spectrum allocation [18] and for airport takeoff and landing slot allocation [3].",
                "In both of these domains there are incumbents with property rights, and it is important to facilitate a complex multi-way reallocation of resources.",
                "Another potential application domain for CEs is to resource allocation in shared distributed systems, such as PlanetLab [13].",
                "The instantiation of our general purpose design to specific domains is a compelling next step in our research.",
                "This paper presents the first design for an iterative combinatorial exchange (ICE).",
                "The genesis of this project was a class, CS 286r Topics at the Interface between Economics and Computer Science, taught at Harvard University in Spring 2004.1 The entire class was dedicated to the design and prototyping of an iterative CE.",
                "The ICE design problem is multi-faceted and quite hard.",
                "The main innovation in our design is an expressive yet concise tree-based bidding language (which generalizes known languages such as XOR/OR [23]), and the tight coupling of this language with efficient algorithms for price-feedback to guide bidding, winner-determination to determine trades, and revealed-preference activity rules to ensure progress across rounds.",
                "The exchange is iterative: bidders express upper and lower valuations on trades by annotating their bid-tree, and then tighten these bounds in response to price feedback in each round.",
                "The Threshold payment rule, introduced by Parkes et al. [24], is used to determine final payments.",
                "The exchange has a number of interesting theoretical properties.",
                "For instance, when there exist linear prices we establish soundness and completeness: for straightforward bidders that adjust their bounds to meet activity rules while keeping their true value within the bounds, the exchange will terminate with the efficient allocation.",
                "In addition, the 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Truth Agent Act Rule WD ACC FAIR BALClosing RuleVickreyThreshold DONE !",
                "DONE 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER 2,2 +A +15 +8 +B +15 +8 BUYER 2,2 -A -2 -6 -B -2 -6 SELLER BUYER, buy AB SELLER, sell AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PBUYER = 16 - (4-0) = 12 PSELLER = -12 - (4-0) = -16 PBUYER = 14 PSELLER = -14 Pessim istic O ptim istic = 1 Figure 1: ICE System Flow of Control efficient allocation can often be determined without bidders revealing, or even knowing, their exact value for all trades.",
                "This is essential in complex domains where the valuation problem can itself be very challenging for a participant [28].",
                "While we cannot claim that straightforward bidding is an equilibrium of the exchange (and indeed, should not expect to by the Myerson-Satterthwaite impossibility theorem [22]), the Threshold payment rule minimizes the ex post incentive to manipulate across all budget-balanced payment rules.",
                "The exchange is implemented in Java and is currently in validation.",
                "In describing the exchange we will first provide an overview of the main components and introduce several working examples.",
                "Then, we introduce the basic components for a simple one-shot variation in which bidders state their exact values for trades in a single round.",
                "We then describe the full iterative exchange, with upper and lower values, price-feedback, activity rules, and termination conditions.",
                "We state some theoretical properties of the exchange, and end with a discussion to motivate our main design decisions, and suggest some next steps. 2.",
                "AN OVERVIEW OF THE ICE DESIGN The design has four main components, which we will introduce in order through the rest of the paper: • Expressive and concise tree-based bidding language.",
                "The language describes values for trades, such as my value for selling AB and buying C is $100, or my value for selling ABC is -$50, with negative values indicating that a bidder must receive a payment for the trade to be acceptable.",
                "The language allows bidders to express upper and lower bounds on value, which can be tightened across rounds. • Winner Determination.",
                "Winner-determination (WD) is formulated as a mixed-integer program (MIP), with the structure of the bid-trees captured explicitly in the formulation.",
                "Comparing the solution at upper and lower values allows for a determination to be made about termination, with progress in intermediate rounds driven by an intermediate valuation and the lower values adopted on termination. • Payments.",
                "Payments are computed using the Threshold payment rule [24], with the intermediate valuations adopted in early rounds and lower values adopted on termination. • Price feedback.",
                "An approximate price is computed for each item in the exchange in each round, in terms of the intermediate valuations and the provisional trade.",
                "The prices are optimized to approximate competitive equilibrium prices, and further optimized to best approximate the current Threshold payments with remaining ties broken to favor prices that are balanced across different items.",
                "In computing the prices, we adopt the methods of constraint-generation to exploit the structure of the bidding language and avoid enumerating all feasible trades.",
                "The subproblem to generate new constraints is a variation of the WD problem. • Activity rule.",
                "A revealed-preference activity rule [1] ensures progress across rounds.",
                "In order to remain active, a bidder must tighten bounds so that there is enough information to define a trade that maximizes surplus at the current prices.",
                "Another variation on the WD problem is formulated, both to verify that the activity rule is met and also to provide feedback to a bidder to explain how to meet the rule.",
                "An outline of the ICE system flow of control is provided in Figure 1.",
                "We will return to this example later in the paper.",
                "For now, just observe in this two-agent example that the agents state lower and upper bounds that are checked in the activity rule, and then passed to winner-determination (WD), and then through three stages of pricing (accuracy, fairness, balance).",
                "On passing the closing rule (in which parameters αeff and αthresh are checked for convergence of the trade and payments), the exchange goes to a last-and-final round.",
                "At the end of this round, the trade and payments are finally determined, based on the lower valuations. 2.1 Related Work Many ascending-price one-sided CAs are known in the literature [10, 25, 29].",
                "Direct elicitation approaches have also been proposed for one-sided CAs in which agents respond to explicit queries about their valuations [8, 14, 19].",
                "A number of ascending CAs are designed to work with simple prices on items [12, 17].",
                "The price generation methods that we use in ICE generalize the methods in these earlier papers.",
                "Parkes et al. [24] studied sealed-bid combinatorial exchanges and introduced the Threshold payment rule.",
                "Subsequently, Krych [16] demonstrated experimentally that the Threshold rule promotes efficient allocations.",
                "We are not aware of any previous studies of iterative CEs.",
                "Dominant strategy DAs are known for unit demand [20] and also for single-minded agents [2].",
                "No dominant strategy mechanisms are known for the general CE problem.",
                "ICE is a hybrid auction design, in that it couples simple item prices to drive bidding in early rounds with combinatorial WD and payments, a feature it shares with the clock-proxy design of Ausubel et al. [1] for one-sided CAs.",
                "We adopt a variation on the clock-proxy auctionss revealedpreference activity rule.",
                "The bidding language shares some structural elements with the LGB language of Boutilier and Hoos [7], but has very different semantics.",
                "Rothkopf et al. [27] also describe a restricted tree-based bidding language.",
                "In LGB, the semantics are those of propositional logic, with the same items in an allocation able to satisfy a tree in multiple places.",
                "Although this can make LGB especially concise in some settings, the semantics that we propose appear to provide useful locality, so that the value of one component in a tree can be understood independently from the rest of the tree.",
                "The idea of capturing the structure of our bidding language explicitly within a mixed-integer programming formulation follows the developments in Boutilier [6]. 3.",
                "PRELIMINARIES In our model, we consider a set of goods, indexed {1, . . . , m} and a set of bidders, indexed {1, . . . , n}.",
                "The initial allocation of goods is denoted x0 = (x0 1, . . . , x0 n), with x0 i = (x0 i1, . . . , x0 im) and x0 ij ≥ 0 for good j indicating the number 250 of units of good j held by bidder i.",
                "A trade λ = (λ1, . . . , λn) denotes the change in allocation, with λi = (λi1, . . . , λim) where λij ∈   is the change in the number of units of item j to bidder i.",
                "So, the final allocation is x1 = x0 + λ.",
                "Each bidder has a value vi(λi) ∈ ¡ for a trade λi.",
                "This value can be positive or negative, and represents the change in value between the final allocation x0 i +λi and the initial allocation x0 i .",
                "Utility is quasi-linear, with ui(λi, p) = vi(λi)−p for trade λi and payment p ∈ ¡ .",
                "Price p can be negative, indicating the bidder receives a payment for the trade.",
                "We use the term payoff interchangeably with utility.",
                "Our goal in the ICE design is to implement the efficient trade.",
                "The efficient trade, λ∗ , maximizes the total increase in value across bidders.",
                "Definition 1 (Efficient trade).",
                "The efficient trade λ∗ solves max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Constraints (1) ensure that no agent sells more items than it has in its initial allocation.",
                "Constraints (2) provide free disposal, and allows feasible trades to sell more items than are purchased (but not vice versa).",
                "Later, we adopt Feas(x0 ) to denote the set of feasible trades, given these constraints and given an initial allocation x0 = (x0 1, . . . , x0 n). 3.1 Working Examples In this section, we provide three simple examples of instances that we will use to illustrate various components of the exchange.",
                "All three examples have only one seller, but this is purely illustrative.",
                "Example 1.",
                "One seller and one buyer, two goods {A, B}, with the seller having an initial allocation of AB.",
                "Changes in values for trades: seller buyer AND(−A, −B) AND(+A, +B) -10 +20 The AND indicates that both the buyer and the seller are only interested in trading both goods as a bundle.",
                "Here, the efficient (value-maximizing) trade is for the seller to sell AB to the buyer, denoted λ∗ = ([−1, −1], [+1, +1]).",
                "Example 2.",
                "One seller and four buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 buyer 3 buyer 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 The OR indicates that the seller is willing to sell any number of goods.",
                "The XOR indicates that buyers 2 and 4 are willing to buy at most one of the two goods in which they are interested.",
                "The efficient trade is for bundle AB to go to buyer 1 and bundle CD to buyer 3, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER Example 1: Example 3: 2,2 +C +D BUYER 2 2,2 +A +B BUYER 1 +11 +84,4 -B SELLER -A -C -D Example 2: 1,1 +A +B BUYER 2 2,2 +A +B BUYER 1 +6 +40,4 -B SELLER -C -D-A 1,1 +C +D BUYER 4 2,2 +C +D +3 +2 BUYER 3 -18 Figure 2: Example Bid Trees.",
                "Example 3.",
                "One seller and two buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 AND(−A, −B, −C, −D) AND(+A, +B) AND(+C, +D) -18 +11 +8 The efficient trade is for bundle AB to go to buyer 1 and bundle CD to go to buyer 2, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4.",
                "A ONE-SHOT EXCHANGE DESIGN The description of ICE is broken down into two sections: one-shot (sealed-bid) and iterative.",
                "In this section we abstract away the iterative aspect and introduce a specialization of the tree-based language that supports only exact values on nodes. 4.1 Tree-Based Bidding Language The bidding language is designed to be expressive and concise, entirely symmetric with respect to buyers and sellers, and to extend to capture bids from mixed buyers and sellers, ranging from simple swaps to highly complex trades.",
                "Bids are expressed as annotated bid trees, and define a bidders value for all possible trades.",
                "The language defines changes in values on trades, with leaves annotated with traded items and nodes annotated with changes in values (either positive or negative).",
                "The main feature is that it has a general interval-choose logical operator on internal nodes, and that it defines careful semantics for propagating values within the tree.",
                "We illustrate the language on each of Examples 1-3 in Figure 2.",
                "The language has a tree structure, with trades on items defined on leaves and values annotated on nodes and leaves.",
                "The nodes have zero values where no value is indicated.",
                "Internal nodes are also labeled with interval-choose (IC) ranges.",
                "Given a trade, the semantics of the language define which nodes in the tree can be satisfied, or switched-on.",
                "First, if a child is on then its parent must be on.",
                "Second, if a parent node is on, then the number of children that are on must be within the IC range on the parent node.",
                "Finally, leaves in which the bidder is buying items can only be on if the items are provided in the trade.",
                "For instance, in Example 2 we can consider the efficient trade, and observe that in this trade all nodes in the trees of buyers 1 and 3 (and also the seller), but none of the nodes in the trees of buyers 2 and 4, can be on.",
                "On the other hand, in 251 the trade in which A goes to buyer 2 and D to buyer 4, then the root and appropriate leaf nodes can be on for buyers 2 and 4, but no nodes can be on for buyers 1 and 3.",
                "Given a trade there is often a number of ways to choose the set of satisfied nodes.",
                "The semantics of the language require that the nodes that maximize the summed value across satisfied nodes be activated.",
                "Consider bid tree Ti from bidder i.",
                "This defines nodes β ∈ Ti, of which some are leaves, Leaf (i) ⊆ Ti.",
                "Let Child(β) ⊆ Ti denote the children of a node β (that is not itself a leaf).",
                "All nodes except leaves are labeled with the interval-choose operator [IC x i (β), ICy i (β)].",
                "Every node is also labeled with a value, viβ ∈ ¡ .",
                "Each leaf β is labeled with a trade, qiβ ∈   m (i.e., leaves can define a bundled trade on more than one type of item.)",
                "Given a trade λi to bidder i, the interval-choose operators and trades on leaves define which nodes can be satisfied.",
                "There will often be a choice.",
                "Ties are broken to maximize value.",
                "Let satiβ ∈ {0, 1} denote whether node β is satisfied.",
                "Solution sati is valid given tree Ti and trade λi, written sati ∈ valid(Ti, λi), if and only if: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Child(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Leaf (i) (5) In words, a set of leaves can only be considered satisfied given trade λi if the total increase in quantity summed across all such leaves is covered by the trade, for all goods (Eq. 4).",
                "This works for sellers as well as buyers: for sellers a trade is negative and this requires that the total number of items indicated sold in the tree is at least the total number sold as defined in the trade.",
                "We also need upwards-propagation: any time a node other than the root is satisfied then its parent must be satisfied (by   β ∈Child(β) satiβ ≤ ICy i (β)satiβ in Eq. 5).",
                "Finally, we need downwards-propagation: any time an internal node is satisfied then the appropriate number of children must also be satisfied (Eq. 5).",
                "The total value of trade λi, given bid-tree Ti, is defined as: vi(Ti, λi) = max sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) The tree-based language generalizes existing languages.",
                "For instance: IC(2, 2) on a node with 2 children is equivalent to an AND operator; IC(1, 3) on a node with 3 children is equivalent to an OR operator; and IC(1, 1) on a node with 2 children is equivalent to an XOR operator.",
                "Similarly, the XOR/OR bidding languages can be directly expressed as a bid tree in our language.2 4.2 Winner Determination This section defines the winner determination problem, which is formulated as a MIP and solved in our implementation with a commercial solver.3 The solver uses branchand-bound search with dynamic cut generation and branching heuristics to solve large MIPs in economically feasible run times. 2 The OR* language is the OR language with dummy items to provide additional structure.",
                "OR* is known to be expressive and concise.",
                "However, it is not known whether OR* dominates XOR/OR in terms of conciseness [23]. 3 CPLEX, www.ilog.com In defining the MIP representation we are careful to avoid an XOR-based enumeration of all bundles.",
                "A variation on the WD problem is reused many times within the exchange, e.g. for column generation in pricing and for checking revealed preference.",
                "Given bid trees T = (T1, . . . , Tn) and initial allocation x0 , the mixed-integer formulation for WD is: WD(T, x0 ) : max λ,sat ¢ i ¢ β∈Ti viβ · satiβ s.t. (1), (2), satiβ ∈ {0, 1}, λij ∈   sati ∈ valid(Ti, λi), ∀i Some goods may go unassigned because free disposal is allowed within the clearing rules of winner determination.",
                "These items can be allocated back to agents that sold the items, i.e. for which λij < 0. 4.3 Computing Threshold Payments The Threshold payment rule is based on the payments in the Vickrey-Clarke-Groves (VCG) mechanism [15], which itself is truthful and efficient but does not satisfy budget balance.",
                "Budget-balance requires that the total payments to the exchange are equal to the total payments made by the exchange.",
                "In VCG, the payment paid by agent i is pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) where λ∗ is the efficient trade, V ∗ is the reported value of this trade, and V−i is the reported value of the efficient trade that would be implemented without bidder i.",
                "We call ∆vcg,i = V ∗ − V−i the VCG discount.",
                "For instance, in Example 1 pvcg,seller = −10 − (+10 − 0) = −20 and pvcg,buyer = +20 − (+10 − 0) = 10, and the exchange would run at a budget deficit of −20 + 10 = −10.",
                "The Threshold payment rule [24] determines budgetbalanced payments to minimize the maximal error across all agents to the VCG outcome.",
                "Definition 2.",
                "The Threshold payment scheme implements the efficient trade λ∗ given bids, and sets payments pthresh,i = ˆvi(λ∗ i ) − ∆i, where ∆ = (∆1, . . . , ∆n) is set to minimize maxi(∆vcg,i − ∆i) subject to ∆i ≤ ∆vcg,i and   i ∆i ≤ V ∗ (this gives budget-balance).",
                "Example 4.",
                "In Example 2, the VCG discounts are (9, 2, 0, 1, 0) to the seller and four buyers respectively, VCG payments are (−9, 4, 0, 2, 0) and the exchange runs at a deficit of -3.",
                "In Threshold, the discounts are (8, 1, 0, 0, 0) and the payments are (−8, 5, 0, 3, 0).",
                "This minimizes the worst-case error to VCG discounts across all budget-balanced payment schemes.",
                "Threshold payments are designed to minimize the maximal ex post incentive to manipulate.",
                "Krych [16] confirmed that Threshold promotes allocative efficiency in restricted and approximate Bayes-Nash equilibrium. 5.",
                "THE ICE DESIGN We are now ready to introduce the iterative combinatorial exchange (ICE) design.",
                "Several new components are introduced, relative to the design for the one-shot exchange.",
                "Rather than provide precise valuations, bidders can provide lower and upper valuations and revise this bid information across rounds.",
                "The exchange provides price-based feedback 252 to guide bidders in this process, and terminates with an efficient (or approximately-efficient) trade with respect to reported valuations.",
                "In each round t ∈ {0, 1, . . .} the current lower and upper bounds, vt and vt , are used to define a provisional valuation profile vα (the α-valuation), together with a provisional trade λt and provisional prices pt = (pt 1, . . . , pt m) on items.",
                "The α-valuation is a linear combination of the current upper and lower valuations, with αEFF ∈ [0, 1] chosen endogenously based on the closeness of the optimistic trade (at v) and the pessimistic trade (at v).",
                "Prices pt are used to inform an activity rule, and drive progress towards an efficient trade. 5.1 Upper and Lower Valuations The bidding language is extended to allow a bidder i to report a lower and upper value (viβ, viβ) on each node.",
                "These take the place of the exact value viβ defined in Section 4.1.",
                "Based on these labels, we can define the valuation functions vi(Ti, λi) and vi(Ti, λi), using the exact same semantics as in Eq. (6).",
                "We say that such a bid-tree is well-formed if viβ ≤ viβ for all nodes.",
                "The following lemma is useful: Lemma 1.",
                "Given a well-formed tree, T, then vi(Ti, λi) ≤ vi(Ti, λi) for all trades.",
                "Proof.",
                "Suppose there is some λi for which vi(Ti, λi) > vi(Ti, λi).",
                "Then, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ.",
                "But, this is a contradiction because the trade λ that defines vi(Ti, λi) is still feasible with upper bounds vi, and viβ ≥ viβ for all nodes β in a well-formed tree. 5.2 Price Feedback In each round, approximate competitive-equilibrium (CE) prices, pt = (pt 1, . . . , pt m), are determined.",
                "Given these provisional prices, the price on trade λi for bidder i is pt (λi) =   j≤m pt j · λij.",
                "Definition 3 (CE prices).",
                "Prices p∗ are competitive equilibrium prices if the efficient trade λ∗ is supported at prices p∗ , so that for each bidder: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) CE prices will not always exist and we will often need to compute approximate prices [5].",
                "We extend ideas due to Rassenti et al. [26], Kwasnica et al. [17] and Dunford et al. [12], and select approximate prices as follows: I: Accuracy.",
                "First, we compute prices that minimize the maximal error in the best-response constraints across all bidders.",
                "II: Fairness.",
                "Second, we break ties to prefer prices that minimize the maximal deviation from Threshold payments across all bidders.",
                "III: Balance.",
                "Third, we break ties to prefer prices that minimize the maximal price across all items.",
                "Taken together, these steps are designed to promote the informativeness of the prices in driving progress across rounds.",
                "In computing prices, we explain how to compute approximate (or otherwise) prices for structured bidding languages, and without enumerating all possible trades.",
                "For this, we adopt constraint generation to efficient handle an exponential number of constraints.",
                "Each step is described in detail below.",
                "I: Accuracy.",
                "We adopt a definition of price accuracy that generalizes the notions adopted in previous papers for unstructured bidding languages.",
                "Let λt denote the current provisional trade and suppose the provisional valuation is vα .",
                "To compute accurate CE prices, we consider: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j.",
                "This linear program (LP) is designed to find prices that minimize the worst-case error across all agents.",
                "From the definition of CE prices, it follows that CE prices would have δ = 0 as a solution to (9), at which point trade λt i would be in the best-response set of every agent (with λt i = ∅, i.e. no trade, for all agents with no surplus for trade at the prices.)",
                "Example 5.",
                "We can illustrate the formulation (9) on Example 2, assuming for simplicity that vα = v (i.e. truth).",
                "The efficient trade allocates AB to buyer 1 and CD to buyer 3.",
                "Accuracy will seek prices p(A), p(B), p(C) and p(D) to minimize the δ ≥ 0 required to satisfy constraints: p(A) + p(B) + p(C) + p(D) ≥ 0 (seller) p(A) + p(B) ≤ 6 + δ (buyer 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (buyer 2) p(C) + p(D) ≤ 3 (buyer 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (buyer 4) An optimal solution requires p(A) = p(B) = 10/3, with δ = 2/3, with p(C) and p(D) taking values such as p(C) = p(D) = 3/2.",
                "But, (9) has an exponential number of constraints (Eq. 10).",
                "Rather than solve it explicitly we use constraint generation [4] and dynamically generate a sufficient subset of constraints.",
                "Let   i denote a manageable subset of all possible feasible trades to bidder i.",
                "Then, a relaxed version of (9) (written ACC) is formulated by substituting (10) with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) where   i is a set of trades that are feasible for bidder i given the other bids.",
                "Fixing the prices p∗ , we then solve n subproblems (one for each bidder), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0 ), (12) to check whether solution (p∗ , δ∗ ) to ACC is feasible in problem (9).",
                "In R-WD(i) the objective is to determine a most preferred trade for each bidder at these prices.",
                "Let ˆλi denote the solution to R-WD(i).",
                "Check condition: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) and if this condition holds for all bidders i, then solution (p∗ , δ∗ ) is optimal for problem (9).",
                "Otherwise, trade ˆλi is added to   i for all bidders i for which this constraint is 253 violated and we re-solve the LP with the new set of constraints.4 II: Fairness.",
                "Second, we break remaining ties to prefer fair prices: choosing prices that minimize the worst-case error with respect to Threshold payoffs (i.e. utility to bidders with Threshold payments), but without choosing prices that are less accurate.5 Example 6.",
                "For example, accuracy in Example 1 (depicted in Figure 1) requires 12 ≤ pA +pB ≤ 16 (for vα = v).",
                "At these valuations the Threshold payoffs would be 2 to both the seller and the buyer.",
                "This can be exactly achieved in pricing with pA + pB = 14.",
                "The fairness tie-breaking method is formulated as the following LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution, from ACC.",
                "The objective here is the same as in the Threshold payment rule (see Section 4.3): minimize the maximal error between bidder payoff (at vα ) for the provisional trade and the VCG payoff (at vα ).",
                "Problem FAIR is also solved through constraint generation, using R-WD(i) to add additional violated constraints as necessary.",
                "III: Balance.",
                "Third, we break remaining ties to prefer balanced prices: choosing prices that minimize the maximal price across all items.",
                "Returning again to Example 1, depicted in Figure 1, we see that accuracy and fairness require p(A) + p(B) = 14.",
                "Finally, balance sets p(A) = p(B) = 7.",
                "Balance is justified when, all else being equal, items are more likely to have similar than dissimilar values.6 The LP for balance is formulated as follows: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution from ACC and π∗ represents the error in the optimal solution from FAIR.",
                "Constraint generation is also used to solve BAL, generating new trades for   i as necessary. 4 Problem R-WD(i) is a specialization of the WD problem, in which the objective is to maximize the payoff of a single bidder, rather than the total value across all bidders.",
                "It is solved as a MIP, by rewriting the objective in WD(T, x0 ) as max{viβ · satiβ −   j p∗ j · λij } for agent i.",
                "Thus, the structure of the bid-tree language is exploited in generating new constraints, because this is solved as a concise MIP.",
                "The other bidders are kept around in the MIP (but do not appear in the objective), and are used to define the space of feasible trades. 5 The methods of Dunford et al. [12], that use a nucleolus approach, are also closely related. 6 The use of balance was advocated by Kwasnica et al. [17].",
                "Dunford et al. [12] prefer to smooth prices across rounds.",
                "Comment 1: Lexicographical Refinement.",
                "For all three sub-problems we also perform lexicographical refinement (with respect to bidders in ACC and FAIR, and with respect to goods in BAL).",
                "For instance, in ACC we successively minimize the maximal error across all bidders.",
                "Given an initial solution we first pin down the error on all bidders for whom a constraint (11) is binding.",
                "For such a bidder i, the constraint is replaced with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) and the error to bidder i no longer appears explicitly in the objective.",
                "ACC is then re-solved, and makes progress by further minimizing the maximal error across all bidders yet to be pinned down.",
                "This continues, pinning down any new bidders for whom one of constraints (11) is binding, until the error is lexicographically optimized for all bidders.7 The exact same process is repeated for FAIR and BAL, with bidders pinned down and constraints (15) replaced with π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (where π∗ i is the current objective) in FAIR, and items pinned down and constraints (18) replaced with p∗ j ≥ pj (where p∗ j represents the target for the maximal price on that item) in BAL.",
                "Comment 2: Computation.",
                "All constraints in   i are retained, and this set grows across all stages and across all rounds of the exchange.",
                "Thus, the computational effort in constraint generation is re-used.",
                "In implementation we are careful to address a number of -issues that arise due to floating-point issues.",
                "We prefer to err on the side of being conservative in determining whether or not to add another constraint in performing check (13).",
                "This avoids later infeasibility issues.",
                "In addition, when pinning-down bidders for the purpose of lexicographical refinement we relax the associated bidder-constraints with a small > 0 on the righthand side. 5.3 Revealed-Preference Activity Rules The role of activity rules in the auction is to ensure both consistency and progress across rounds [21].",
                "Consistency in our exchange requires that bidders tighten bounds as the exchange progresses.",
                "Activity rules ensure that bidders are active during early rounds, and promote useful elicitation throughout the exchange.",
                "We adopt a simple revealed-preference (RP) activity rule.",
                "The idea is loosely based around the RP-rule in Ausubel et al. [1], where it is used for one-sided CAs.",
                "The motivation is to require more than simply consistency: we need bidders to provide enough information for the system to be able to to prove that an allocation is (approximately) efficient.",
                "It is helpful to think about the bidders interacting with proxy agents that will act on their behalf in responding to provisional prices pt−1 determined at the end of round t − 1.",
                "The only knowledge that such a proxy has of the valuation of a bidder is through the bid-tree.",
                "Suppose a proxy was queried by the exchange and asked which trade the bidder was most interested in at the provisional prices.",
                "The RP rule says the following: the proxy must have enough 7 For example, applying this to accuracy on Example 2 we solve once and find bidders 1 and 2 are binding, for error δ∗ = 2/3.",
                "We pin these down and then minimize the error to bidders 3 and 4.",
                "Finally, this gives p(A) = p(B) = 10/3 and p(C) = p(D) = 5/3, with accuracy 2/3 to bidders 1 and 2 and 1/3 to bidders 3 and 4. 254 information to be able to determine this surplus-maximizing trade at current prices.",
                "Consider the following examples: Example 7.",
                "A bidder has XOR(+A, +B) and a value of +5 on the leaf +A and a value range of [5,10] on leaf +B.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the proxy knows that however the remaining value uncertainty on +B is resolved the bidder will always (weakly) prefer +B to +A.",
                "Example 8.",
                "A bidder has XOR(+A, +B) and value bounds [5, 10] on the root node and a value of 1 on leaf +A.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the bidder will always prefer +A to +B at equal prices, whichever way the uncertain value on the root node is ultimately resolved.",
                "Overloading notation, let vi ∈ Ti denote a valuation that is consistent with lower and upper valuations in bid tree Ti.",
                "Definition 4.",
                "Bid tree Ti satisfies RP at prices pt−1 if and only if there exists some feasible trade L∗ for which, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. (20) To make this determination for bidder i we solve a sequence of problems, each of which is a variation on the WD problem.",
                "First, we construct a candidate lower-bound trade, which is a feasible trade that solves: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) The solution π∗ l to RP1(i) represents the maximal payoff that bidder i can achieve across all feasible trades, given its pessimistic valuation.",
                "Second, we break ties to find a trade with maximal value uncertainty across all possible solutions to RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] s.t. λ ∈ Feas(x0 ) (22) vi(λi) − pt−1 (λi) ≥ π∗ l (23) We adopt solution L∗ i as our candidate for the trade that may satisfy RP.",
                "To understand the importance of this tiebreaking rule consider Example 7.",
                "The proxy can prove +B but not +A is a best-response for all vi ∈ Ti, and should choose +B as its candidate.",
                "Notice that +B is a counterexample to +A, but not the other way round.",
                "Now, we construct a modified valuation ˜vi, by setting ˜viβ =   viβ , if β ∈ sat(L∗ i ) viβ , otherwise. (24) where sat(L∗ i ) is the set of nodes that are satisfied in the lower-bound tree for trade L∗ i .",
                "Given this modified valuation, we find U∗ to solve: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Let π∗ u denote the payoff from this optimal trade at modified values ˜v.",
                "We call trade U∗ i the witness trade.",
                "We show in Proposition 1 that the RP rule is satisfied if and only if π∗ l ≥ π∗ u. Constructing the modified valuation as ˜vi recognizes that there is shared uncertainty across trades that satisfy the same nodes in a bid tree.",
                "Example 8 helps to illustrate this.",
                "Just using vi in RP3(i), we would find L∗ i is buy A with payoff π∗ l = 3 but then find U∗ i is buy B with π∗ u = 7 and fail RP.",
                "We must recognize that however the uncertainty on the root node is resolved it will affect +A and +B in exactly the same way.",
                "For this reason, we set ˜viβ = viβ = 5 on the root node, which is exactly the same value that was adopted in determining π∗ l .",
                "Then, RP3(i) applied to U∗ i gives buy A and the RP test is judged to be passed.",
                "Proposition 1.",
                "Bid tree Ti satisfies RP given prices pt−1 if and only if any lower-bound trade L∗ i that solves RP1(i) and RP2(i) satisfies: vi(Ti, L∗ i ) − pt−1 (L∗ i ) ≥ ˜vi(Ti, U∗ i ) − pt−1 (U∗ i ), (26) where ˜vi is the modified valuation in Eq. (24).",
                "Proof.",
                "For sufficiency, notice that the difference in payoff between trade L∗ i and another trade λi is unaffected by the way uncertainty is resolved on any node that is satisfied in both L∗ i and λi.",
                "Fixing the values in ˜vi on nodes satisfied in L∗ i has the effect of removing this consideration when a trade U∗ i is selected that satisfies one of these nodes.",
                "On the other hand, fixing the values on these nodes has no effect on trades considered in RP3(i) that do not share a node with L∗ i .",
                "For the necessary direction, we first show that any trade that satisfies RP must solve RP1(i).",
                "Suppose otherwise, that some λi with payoff greater than π∗ l satisfies RP.",
                "But, valuation vi ∈ Ti together with L∗ i presents a counterexample to RP (Eq. 20).",
                "Now, suppose (for contradiction) that some λi with maximal payoff π∗ l but uncertainty less than L∗ i satisfies RP.",
                "Proceed by case analysis.",
                "Case a): only one solution to RP1(i) has uncertain value and so λi has certain value.",
                "But, this cannot satisfy RP because L∗ i with uncertain value would be a counterexample to RP (Eq. 20).",
                "Case b): two or more solutions to RP1(i) have uncertain value.",
                "Here, we first argue that one of these trades must satisfy a (weak) superset of all the nodes with uncertain value that are satisfied by all other trades in this set.",
                "This is by RP.",
                "Without this, then for any choice of trade that solves RP1(i), there is another trade with a disjoint set of uncertain but satisfied nodes that provides a counterexample to RP (Eq. 20).",
                "Now, consider the case that some trade contains a superset of all the uncertain satisfied nodes of the other trades.",
                "Clearly RP2(i) will choose this trade, L∗ i , and λi must satisfy a subset of these nodes (by assumption).",
                "But, we now see that λi cannot satisfy RP because L∗ i would be a counterexample to RP.",
                "Failure to meet the activity rule must have some consequence.",
                "In the current rules, the default action we choose is to set the upper bounds in valuations down to the maximal value of the provisional price on a node8 and the lowerbound value on that node.9 Such a bidder can remain active 8 The provisional price on a node is defined as the minimal total price across all feasible trades for which the subtree rooted at the tree is satisfied. 9 This is entirely analogous to when a bidder in an ascending clock auction stops bidding at a price: she is not permitted to bid at a higher price again in future rounds. 255 within the exchange, but only with valuations that are consistent with these new bounds. 5.4 Bidder Feedback In each round, our default design provides every bidder with the provisional trade and also with the current provisional prices.",
                "See 7 for an additional discussion.",
                "We also provide guidance to help a bidder meet the RP rule.",
                "Let sat(L∗ i ) and sat(U∗ i ) denote the nodes that are satisfied in trades L∗ i and U∗ i , as computed in RP1-RP3.",
                "Lemma 2.",
                "When RP fails, a bidder must increase a lower bound on at least one node in sat(L∗ i ) \\ sat(U∗ i ) or decrease an upper bound on at least one node in sat(U∗ i ) \\ sat(L∗ i ) in order to meet the activity rule.",
                "Proof.",
                "Changing the upper- or lower- values on nodes that are not satisfied by either trade does not change L∗ i or U∗ i , and does not change the payoff from these trades.",
                "Thus, the RP condition will continue to fail.",
                "Similarly, changing the bounds on nodes that are satisfied in both trades has no effect on revealed preference.",
                "A change to a lower bound on a shared node affects both L∗ i and U∗ i identically because of the use of the modified valuation to determine U∗ i .",
                "A change to an upper bound on a shared node has no effect in determining either L∗ i or U∗ i .",
                "Note that when sat(U∗ i ) = sat(L∗ i ) then condition (26) is always trivially satisfied, and so the guidance in the lemma is always well-defined when RP fails.",
                "This is an elegant feedback mechanism because it is adaptive.",
                "Once a bidder makes some changes on some subset of these nodes, the bidder can query the exchange.",
                "The exchange can then respond yes, or can revise the set of nodes sat(λ∗ l ) and sat(λ∗ u) as necessary. 5.5 Termination Conditions Once each bidder has committed its new bids (and either met the RP rule or suffered the penalty) then round t closes.",
                "At this point, the task is to determine the new α-valuation, and in turn the provisional allocation λt and provisional prices pt .",
                "A termination condition is also checked, to determine whether to move the exchange to a last-and-final round.",
                "To define the α-valuation we compute the following two quantities: Pessimistic at Pessimistic (PP) Determine an efficient trade, λ∗ l , at pessimistic values, i.e. to solve maxλ   i vi(λi), and set PP=  i vi(λ∗ li).",
                "Pessimistic at Optimistic (PO) Determine an efficient trade, λ∗ u, at optimistic values, i.e. to solve maxλ   i vi(λi), and set PO=  i vi(λ∗ ui).",
                "First, note that PP ≥ PO and PP ≥ 0 by definition, for all bid-trees, although PO can be negative (because the right trade at v is not currently a useful trade at v).",
                "Recognizing this, define γeff (PP, PO) = 1 + PP − PO PP , (27) when PP > 0, and observe that γeff (PP, PO) ≥ 1 when this is defined, and that γeff (PP, PO) will start large and then trend towards 1 as the optimistic allocation converges towards the pessimistic allocation.",
                "In each round, we define αeff ∈ [0, 1] as: αeff =   0 when PP is 0 1/γeff otherwise (28) which is 0 while PP is 0 and then trends towards 1 once PP> 0 in some round.",
                "This is used to define α-valuation vα i = αeff vi + (1 − αeff )vi, ∀i, (29) which is used to define the provisional allocation and provisional prices.",
                "The effect is to endogenously define a schedule for moving from optimistic to pessimistic values across rounds, based on how close the trades are to one another.",
                "Termination Condition.",
                "In moving to the last-and-final round, and finally closing, we also care about the convergence of payments, in addition to the convergence towards an efficient trade.",
                "For this we introduce another parameter, αthresh ∈ [0, 1], that trends from 0 to 1 as the Threshold payments at lower and upper valuations converge.",
                "Consider the following parameter: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive) , (30) which is defined for PP > 0, where pthresh(v) denotes the Threshold payments at valuation profile v, Nactive is the number of bidders that are actively engaged in trade in the PP trade, and || · ||2 is the L2-norm.",
                "Note that γthresh is defined for payments and not payoffs.",
                "This is appropriate because it is the accuracy of the outcome of the exchange that matters: i.e. the trade and the payments.",
                "Given this, we define αthresh =   0 when PP is 0 1/γthresh otherwise (31) which is 0 while PP is 0 and then trends towards 1 as progress is made.",
                "Definition 5 (termination).",
                "ICE transitions to a lastand-final round when one of the following holds: 1. αeff ≥ CUTOFFeff and αthresh ≥ CUTOFFthresh, 2. there is no trade at the optimistic values, where CUTOFFeff , CUTOFFthresh ∈ (0, 1] determine the accuracy required for termination.",
                "At the end of the last-and-final round vα = v is used to define the final trade and the final Threshold payments.",
                "Example 9.",
                "Consider again Example 1, and consider the upper and lower bounds as depicted in Figure 1.",
                "First, if the sellers bounds were [−20, −4] then there is an optimistic trade but no pessimistic trade, and PO = −4 and PP = 0, and αeff = 0.",
                "At the bounds depicted, both the optimistic and the pessimistic trades occur and PO = PP = 4 and αeff = 1.",
                "However, we can see the Threshold payments are (17, −17) at v but (14, −14) at v. Evaluating γthresh , we have γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, and αthresh = 2/5.",
                "For CUTOFFthresh < 2/5 the exchange would remain open.",
                "On the other hand, if the buyers value for +AB was between [18, 24] and the sellers value for −AB was between [−12, −6], the Threshold payments are (15, −15) at both upper and lower bounds, and αthresh = 1. 256 Component Purpose Lines Agent.",
                "Captures strategic behavior and information revelation decisions 762 Model Support Provides XML support to load goods and valuations into world 200 World Keeps track of all agent, good, and valuation details 998 Exchange Driver & Communication Controls exchange, and coordinates remote agent behavior 585 Bidding Language Implements the tree-based bidding language 1119 Activity Rule Engine Implements the revealed preference rule with range support 203 Closing Rule Engine Checks if auction termination condition reached 137 WD Engine Provides WD-related logic 377 Pricing Engine Provides Pricing-related logic 460 MIP Builders Translates logic used by engines into our general optimizer formulation 346 Pricing Builders Used by three pricing stages 256 Winner Determination Builders Used by WD, activity rule, closing rule, and pricing constraint generation 365 Framework Support code; eases modular replacement of above components 510 Table 1: Exchange Component and Code Breakdown. 6.",
                "SYSTEMS INFRASTRUCTURE ICE is approximately 6502 lines of Java code, broken up into the functional packages described in Table 1.10 The prototype is modular so that researchers may easily replace components for experimentation.",
                "In addition to the core exchange discussed in this paper, we have developed an agent component that allows a user to simulate the behavior and knowledge of other players in the system, better allowing a user to formulate their strategy in advance of actual play.",
                "A user specifies a valuation model in an XMLinterpretation of our bidding language, which is revealed to the exchange via the agents strategy.",
                "Major exchange tasks are handled by engines that dictate the non-optimizer specific logic.",
                "These engines drive the appropriate MIP/LP builders.",
                "We realized that all of our optimization formulations boil down to two classes of optimization problem.",
                "The first, used by winner determination, activity rule, closing rule, and constraint generation in pricing, is a MIP that finds trades that maximize value, holding prices and slacks constant.",
                "The second, used by the three pricing stages, is an LP that holds trades constant, seeking to minimize slack, profit, or prices.",
                "We take advantage of the commonality of these problems by using common LP/MIP builders that differ only by a few functional hooks to provide the correct variables for optimization.",
                "We have generalized our back-end optimization solver interface11 (we currently support CPLEX and the LGPL- licensed LPSolve), and can take advantage of the load-balancing and parallel MIP/LP solving capability that this library provides. 7.",
                "DISCUSSION The bidding language was defined to allow for perfect symmetry between buyers and sellers and provide expressiveness in an exchange domain, for instance for mixed bidders interested in executing trades such as swaps.",
                "This proved especially challenging.",
                "The breakthrough came when we focused on changes in value for trades rather than providing absolute values for allocations.",
                "For simplicity, we require the same tree structure for both the upper and lower valuations. 10 Code size is measured in physical source line of code (SLOC), as generated using David A. Wheelers SLOC Count.",
                "The total of 6502 includes 184 for instrumentation (not shown in the table).",
                "The JOpt solver interface is another 1964 lines, and Castor automatically generates around 5200 lines of code for XML file manipulation. 11 http://econcs.eecs.harvard.edu/jopt This allows the language itself to ensure consistency (with the upper value at least the lower value on all trades) and enforce monotonic tightening of these bounds for all trades across rounds.",
                "It also provides for an efficient method to check the RP activity rule, because it makes it simple to reason about shared uncertainty between trades.",
                "The decision to adopt a direct and proxied approach in which bidders express their upper and lower values to a trusted proxy agent that interacts with the exchange was made early in the design process.",
                "In many ways this is the clearest and most immediate way to generalize the design in Parkes et al. [24] and make it iterative.",
                "In addition, this removes much opportunity for strategic manipulation: bidders are restricted to making (incremental) statements about their valuations.",
                "Another advantage is that it makes the activity rule easy to explain: bidders can always meet the activity rule by tightening bounds such that their true value remains in the support.12 Perhaps most importantly, having explicit information on upper and lower values permits progress in early rounds, even while there is no efficient trade at pessimistic values.",
                "Upper and lower bound information also provides guidance about when to terminate.",
                "Note that taken by itself, PP = PO does not imply that the current provisional trade is efficient with respect to all values consistent with current value information.",
                "The difference in values between different trades, aggregated across all bidders, could be similar at lower and upper bounds but quite different at intermediate values (including truth).",
                "Nevertheless, we conjecture that PP = PO will prove an excellent indicator of efficiency in practical settings where the shape of the upper and lower valuations does convey useful information.",
                "This is worthy of experimental investigation.",
                "Moreover, the use of price and RP activity provides additional guarantees.",
                "We adopted linear prices (prices on individual items) rather than non-linear prices (with prices on a trade not equal to the sum of the prices on the component items) early in the design process.",
                "The conciseness of this price representation is very important for computational tractability within the exchange and also to promote simplicity and transparency for bidders.",
                "The RP activity rule was adopted later, and is a good choice because of its excellent theoretical properties when coupled with CE prices.",
                "The following can be easily established: given exact CE prices pt−1 for provisional trade 12 This is in contrast to indirect price-based approaches, such as clock-proxy [1], in which bidders must be able to reason about the RP-constraints implied by bids in each round. 257 λt−1 at valuations vα , then if the upper and lower values at the start of round t already satisfy the RP rule (and without the need for any tie-breaking), the provisional trade is efficient for all valuations consistent with the current bid trees.",
                "When linear CE prices exist, this provides for a soundness and completeness statement: if PP = PO, linear CE prices exist, and the RP rule is satisfied, the provisional trade is efficient (soundness); if prices are exact CE prices for the provisional trade at vα , but the trade is inefficient with respect to some valuation profile consistent with the current bid trees, then at least one bidder must fail RP with her current bid tree and progress will be made (completeness).",
                "Future work must study convergence experimentally, and extend this theory to allow for approximate prices.",
                "Some strategic aspects of our ICE design deserve comment, and further study.",
                "First, we do not claim that truthfully responding to the RP rule is an ex post equilibrium.13 However, the exchange is designed to mimic the Threshold rule in its payment scheme, which is known to have useful incentive properties [16].",
                "We must be careful, though.",
                "For instance we do not suggest to provide αeff to bidders, because as αeff approaches 1 it would inform bidders that bid values are becoming irrelevant to determining the trade but merely used to determine payments (and bidders would become increasingly reluctant to increase their lower valuations).",
                "Also, no consideration has been given in this work to collusion by bidders.",
                "This is an issue that deserves some attention in future work. 8.",
                "CONCLUSIONS In this work we designed and prototyped a scalable and highly-expressive iterative combinatorial exchange.",
                "The design includes many interesting features, including: a new bid-tree language for exchanges, a new method to construct approximate linear prices from expressive languages, and a proxied elicitation method with optimistic and pessimistic valuations with a new method to evaluate a revealed- preference activity rule.",
                "The exchange is fully implemented in Java and is in a validation phase.",
                "The next steps for our work are to allow bidders to refine the structure of the bid tree in addition to values on the tree.",
                "We intend to study the elicitation properties of the exchange and we have put together a test suite of exchange problem instances.",
                "In addition, we are beginning to engage in collaborations to apply the design to airline takeoff and landing slot scheduling and to resource allocation in widearea network distributed computational systems.",
                "Acknowledgments We would like to dedicate this paper to all of the participants in CS 286r at Harvard University in Spring 2004.",
                "This work is supported in part by NSF grant IIS-0238147. 9.",
                "REFERENCES [1] L. Ausubel, P. Cramton, and P. Milgrom.",
                "The clock-proxy auction: A practical combinatorial auction design.",
                "In Cramton et al. [9], chapter 5. [2] M. Babaioff, N. Nisan, and E. Pavlov.",
                "Mechanisms for a spatially distributed market.",
                "In Proc. 5th ACM Conf. on Electronic Commerce, pages 9-20.",
                "ACM Press, 2001. 13 Given the Myerson-Satterthwaite impossibility theorem [22] and the method by which we determine the trade we should not expect this. [3] M. Ball, G. Donohue, and K. Hoffman.",
                "Auctions for the safe, efficient, and equitable allocation of airspace system resources.",
                "In S. Cramton, Shoham, editor, Combinatorial Auctions. 2004.",
                "Forthcoming. [4] D. Bertsimas and J. Tsitsiklis.",
                "Introduction to Linear Optimization.",
                "Athena Scientific, 1997. [5] S. Bikhchandani and J. M. Ostroy.",
                "The package assignment model.",
                "Journal of Economic Theory, 107(2):377-406, 2002. [6] C. Boutilier.",
                "A pomdp formulation of preference elicitation problems.",
                "In Proc. 18th National Conference on Artificial Intelligence (AAAI-02), 2002. [7] C. Boutilier and H. Hoos.",
                "Bidding languages for combinatorial auctions.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), 2001. [8] W. Conen and T. Sandholm.",
                "Preference elicitation in combinatorial auctions.",
                "In Proc. 3rd ACM Conf. on Electronic Commerce (EC-01), pages 256-259.",
                "ACM Press, New York, 2001. [9] P. Cramton, Y. Shoham, and R. Steinberg, editors.",
                "Combinatorial Auctions.",
                "MIT Press, 2004. [10] S. de Vries, J. Schummer, and R. V. Vohra.",
                "On ascending Vickrey auctions for heterogeneous objects.",
                "Technical report, MEDS, Kellogg School, Northwestern University, 2003. [11] S. de Vries and R. V. Vohra.",
                "Combinatorial auctions: A survey.",
                "Informs Journal on Computing, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana, and T. Wilson.",
                "Testing linear pricing algorithms for use in ascending combinatorial auctions.",
                "Technical report, SEOR, George Mason University, 2003. [13] Y. Fu, J.",
                "Chase, B. Chun, S. Schwab, and A. Vahdat.",
                "Sharp: an architecture for secure resource peering.",
                "In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 133-148.",
                "ACM Press, 2003. [14] B. Hudson and T. Sandholm.",
                "Effectiveness of query types and policies for preference elicitation in combinatorial auctions.",
                "In Proc. 3rd Int.",
                "Joint.",
                "Conf. on Autonomous Agents and Multi Agent Systems, pages 386-393, 2004. [15] V. Krishna.",
                "Auction Theory.",
                "Academic Press, 2002. [16] D. Krych.",
                "Calculation and analysis of Nash equilibria of Vickrey-based payment rules for combinatorial exchanges, Harvard College, April 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter, and C. DeMartini.",
                "A new and improved design for multi-object iterative auctions.",
                "Management Science, 2004.",
                "To appear. [18] E. Kwerel and J. Williams.",
                "A proposal for a rapid transition to market allocation of spectrum.",
                "Technical report, FCC Office of Plans and Policy, Nov 2002. [19] S. M. Lahaie and D. C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In Proc.",
                "ACM Conf. on Electronic Commerce, pages 180-188, 2004. [20] R. P. McAfee.",
                "A dominant strategy <br>double auction</br>.",
                "J. of Economic Theory, 56:434-450, 1992. [21] P. Milgrom.",
                "Putting auction theory to work: The simultaneous ascending auction.",
                "J.Pol.",
                "Econ., 108:245-272, 2000. [22] R. B. Myerson and M. A. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [23] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. 2nd ACM Conf. on Electronic Commerce (EC-00), pages 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), pages 1161-1168, 2001. [25] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, July 2000. [26] S. J. Rassenti, V. L. Smith, and R. L. Bulfin.",
                "A combinatorial mechanism for airport time slot allocation.",
                "Bell Journal of Economics, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc, and R. M. Harstad.",
                "Computationally manageable combinatorial auctions.",
                "Management Science, 44(8):1131-1147, 1998. [28] T. Sandholm and C. Boutilier.",
                "Preference elicitation in combinatorial auctions.",
                "In Cramton et al. [9], chapter 10. [29] P. R. Wurman and M. P. Wellman.",
                "AkBA: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, pages 21-29, 2000. 258"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En una \"subasta doble\" (DA), múltiples unidades de comercio de compradores y vendedores de un bien idéntico [20].",
                "Un intercambio combinatorial (CE) [24] es una \"subasta doble\" combinatoria que reúne a múltiples compradores y vendedores para intercambiar múltiples productos heterogéneos.",
                "Una estrategia dominante \"doble subasta\"."
            ],
            "translated_text": "",
            "candidates": [
                "subasta doble",
                "subasta doble",
                "subasta doble",
                "subasta doble",
                "subasta doble",
                "doble subasta"
            ],
            "error": []
        },
        "combinatorial auction": {
            "translated_key": "subasta combinatoria",
            "is_in_text": true,
            "original_annotated_sentences": [
                "ICE: An Iterative Combinatorial Exchange David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an iterative combinatorial exchange (ICE).",
                "The exchange incorporates a tree-based bidding language that is concise and expressive for CEs.",
                "Bidders specify lower and upper bounds on their value for different trades.",
                "These bounds allow price discovery and useful preference elicitation in early rounds, and allow termination with an efficient trade despite partial information on bidder valuations.",
                "All computation in the exchange is carefully optimized to exploit the structure of the bid-trees and to avoid enumerating trades.",
                "A proxied interpretation of a revealedpreference activity rule ensures progress across rounds.",
                "A VCG-based payment scheme that has been shown to mitigate opportunities for bargaining and strategic behavior is used to determine final payments.",
                "The exchange is fully implemented and in a validation phase.",
                "Categories and Subject Descriptors: I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Combinatorial exchanges combine and generalize two different mechanisms: double auctions and combinatorial auctions.",
                "In a double auction (DA), multiple buyers and sellers trade units of an identical good [20].",
                "In a <br>combinatorial auction</br> (CA), a single seller has multiple heterogeneous items up for sale [11].",
                "Buyers may have complementarities or substitutabilities between goods, and are provided with an expressive bidding language.",
                "A common goal in both market designs is to determine the efficient allocation, which is the allocation that maximizes total value.",
                "A combinatorial exchange (CE) [24] is a combinatorial double auction that brings together multiple buyers and sellers to trade multiple heterogeneous goods.",
                "For example, in an exchange for wireless spectrum, a bidder may declare that she is willing to pay $1 million for a trade where she obtains licenses for New York City, Boston, and Philadelphia, and loses her license for Washington DC.",
                "Thus, unlike a DA, a CE allows all participants to express complex valuations via expressive bids.",
                "Unlike a CA, a CE allows for fragmented ownership, with multiple buyers and sellers and agents that are both buying and selling.",
                "CEs have received recent attention both in the context of wireless spectrum allocation [18] and for airport takeoff and landing slot allocation [3].",
                "In both of these domains there are incumbents with property rights, and it is important to facilitate a complex multi-way reallocation of resources.",
                "Another potential application domain for CEs is to resource allocation in shared distributed systems, such as PlanetLab [13].",
                "The instantiation of our general purpose design to specific domains is a compelling next step in our research.",
                "This paper presents the first design for an iterative combinatorial exchange (ICE).",
                "The genesis of this project was a class, CS 286r Topics at the Interface between Economics and Computer Science, taught at Harvard University in Spring 2004.1 The entire class was dedicated to the design and prototyping of an iterative CE.",
                "The ICE design problem is multi-faceted and quite hard.",
                "The main innovation in our design is an expressive yet concise tree-based bidding language (which generalizes known languages such as XOR/OR [23]), and the tight coupling of this language with efficient algorithms for price-feedback to guide bidding, winner-determination to determine trades, and revealed-preference activity rules to ensure progress across rounds.",
                "The exchange is iterative: bidders express upper and lower valuations on trades by annotating their bid-tree, and then tighten these bounds in response to price feedback in each round.",
                "The Threshold payment rule, introduced by Parkes et al. [24], is used to determine final payments.",
                "The exchange has a number of interesting theoretical properties.",
                "For instance, when there exist linear prices we establish soundness and completeness: for straightforward bidders that adjust their bounds to meet activity rules while keeping their true value within the bounds, the exchange will terminate with the efficient allocation.",
                "In addition, the 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Truth Agent Act Rule WD ACC FAIR BALClosing RuleVickreyThreshold DONE !",
                "DONE 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER 2,2 +A +15 +8 +B +15 +8 BUYER 2,2 -A -2 -6 -B -2 -6 SELLER BUYER, buy AB SELLER, sell AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PBUYER = 16 - (4-0) = 12 PSELLER = -12 - (4-0) = -16 PBUYER = 14 PSELLER = -14 Pessim istic O ptim istic = 1 Figure 1: ICE System Flow of Control efficient allocation can often be determined without bidders revealing, or even knowing, their exact value for all trades.",
                "This is essential in complex domains where the valuation problem can itself be very challenging for a participant [28].",
                "While we cannot claim that straightforward bidding is an equilibrium of the exchange (and indeed, should not expect to by the Myerson-Satterthwaite impossibility theorem [22]), the Threshold payment rule minimizes the ex post incentive to manipulate across all budget-balanced payment rules.",
                "The exchange is implemented in Java and is currently in validation.",
                "In describing the exchange we will first provide an overview of the main components and introduce several working examples.",
                "Then, we introduce the basic components for a simple one-shot variation in which bidders state their exact values for trades in a single round.",
                "We then describe the full iterative exchange, with upper and lower values, price-feedback, activity rules, and termination conditions.",
                "We state some theoretical properties of the exchange, and end with a discussion to motivate our main design decisions, and suggest some next steps. 2.",
                "AN OVERVIEW OF THE ICE DESIGN The design has four main components, which we will introduce in order through the rest of the paper: • Expressive and concise tree-based bidding language.",
                "The language describes values for trades, such as my value for selling AB and buying C is $100, or my value for selling ABC is -$50, with negative values indicating that a bidder must receive a payment for the trade to be acceptable.",
                "The language allows bidders to express upper and lower bounds on value, which can be tightened across rounds. • Winner Determination.",
                "Winner-determination (WD) is formulated as a mixed-integer program (MIP), with the structure of the bid-trees captured explicitly in the formulation.",
                "Comparing the solution at upper and lower values allows for a determination to be made about termination, with progress in intermediate rounds driven by an intermediate valuation and the lower values adopted on termination. • Payments.",
                "Payments are computed using the Threshold payment rule [24], with the intermediate valuations adopted in early rounds and lower values adopted on termination. • Price feedback.",
                "An approximate price is computed for each item in the exchange in each round, in terms of the intermediate valuations and the provisional trade.",
                "The prices are optimized to approximate competitive equilibrium prices, and further optimized to best approximate the current Threshold payments with remaining ties broken to favor prices that are balanced across different items.",
                "In computing the prices, we adopt the methods of constraint-generation to exploit the structure of the bidding language and avoid enumerating all feasible trades.",
                "The subproblem to generate new constraints is a variation of the WD problem. • Activity rule.",
                "A revealed-preference activity rule [1] ensures progress across rounds.",
                "In order to remain active, a bidder must tighten bounds so that there is enough information to define a trade that maximizes surplus at the current prices.",
                "Another variation on the WD problem is formulated, both to verify that the activity rule is met and also to provide feedback to a bidder to explain how to meet the rule.",
                "An outline of the ICE system flow of control is provided in Figure 1.",
                "We will return to this example later in the paper.",
                "For now, just observe in this two-agent example that the agents state lower and upper bounds that are checked in the activity rule, and then passed to winner-determination (WD), and then through three stages of pricing (accuracy, fairness, balance).",
                "On passing the closing rule (in which parameters αeff and αthresh are checked for convergence of the trade and payments), the exchange goes to a last-and-final round.",
                "At the end of this round, the trade and payments are finally determined, based on the lower valuations. 2.1 Related Work Many ascending-price one-sided CAs are known in the literature [10, 25, 29].",
                "Direct elicitation approaches have also been proposed for one-sided CAs in which agents respond to explicit queries about their valuations [8, 14, 19].",
                "A number of ascending CAs are designed to work with simple prices on items [12, 17].",
                "The price generation methods that we use in ICE generalize the methods in these earlier papers.",
                "Parkes et al. [24] studied sealed-bid combinatorial exchanges and introduced the Threshold payment rule.",
                "Subsequently, Krych [16] demonstrated experimentally that the Threshold rule promotes efficient allocations.",
                "We are not aware of any previous studies of iterative CEs.",
                "Dominant strategy DAs are known for unit demand [20] and also for single-minded agents [2].",
                "No dominant strategy mechanisms are known for the general CE problem.",
                "ICE is a hybrid auction design, in that it couples simple item prices to drive bidding in early rounds with combinatorial WD and payments, a feature it shares with the clock-proxy design of Ausubel et al. [1] for one-sided CAs.",
                "We adopt a variation on the clock-proxy auctionss revealedpreference activity rule.",
                "The bidding language shares some structural elements with the LGB language of Boutilier and Hoos [7], but has very different semantics.",
                "Rothkopf et al. [27] also describe a restricted tree-based bidding language.",
                "In LGB, the semantics are those of propositional logic, with the same items in an allocation able to satisfy a tree in multiple places.",
                "Although this can make LGB especially concise in some settings, the semantics that we propose appear to provide useful locality, so that the value of one component in a tree can be understood independently from the rest of the tree.",
                "The idea of capturing the structure of our bidding language explicitly within a mixed-integer programming formulation follows the developments in Boutilier [6]. 3.",
                "PRELIMINARIES In our model, we consider a set of goods, indexed {1, . . . , m} and a set of bidders, indexed {1, . . . , n}.",
                "The initial allocation of goods is denoted x0 = (x0 1, . . . , x0 n), with x0 i = (x0 i1, . . . , x0 im) and x0 ij ≥ 0 for good j indicating the number 250 of units of good j held by bidder i.",
                "A trade λ = (λ1, . . . , λn) denotes the change in allocation, with λi = (λi1, . . . , λim) where λij ∈   is the change in the number of units of item j to bidder i.",
                "So, the final allocation is x1 = x0 + λ.",
                "Each bidder has a value vi(λi) ∈ ¡ for a trade λi.",
                "This value can be positive or negative, and represents the change in value between the final allocation x0 i +λi and the initial allocation x0 i .",
                "Utility is quasi-linear, with ui(λi, p) = vi(λi)−p for trade λi and payment p ∈ ¡ .",
                "Price p can be negative, indicating the bidder receives a payment for the trade.",
                "We use the term payoff interchangeably with utility.",
                "Our goal in the ICE design is to implement the efficient trade.",
                "The efficient trade, λ∗ , maximizes the total increase in value across bidders.",
                "Definition 1 (Efficient trade).",
                "The efficient trade λ∗ solves max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Constraints (1) ensure that no agent sells more items than it has in its initial allocation.",
                "Constraints (2) provide free disposal, and allows feasible trades to sell more items than are purchased (but not vice versa).",
                "Later, we adopt Feas(x0 ) to denote the set of feasible trades, given these constraints and given an initial allocation x0 = (x0 1, . . . , x0 n). 3.1 Working Examples In this section, we provide three simple examples of instances that we will use to illustrate various components of the exchange.",
                "All three examples have only one seller, but this is purely illustrative.",
                "Example 1.",
                "One seller and one buyer, two goods {A, B}, with the seller having an initial allocation of AB.",
                "Changes in values for trades: seller buyer AND(−A, −B) AND(+A, +B) -10 +20 The AND indicates that both the buyer and the seller are only interested in trading both goods as a bundle.",
                "Here, the efficient (value-maximizing) trade is for the seller to sell AB to the buyer, denoted λ∗ = ([−1, −1], [+1, +1]).",
                "Example 2.",
                "One seller and four buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 buyer 3 buyer 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 The OR indicates that the seller is willing to sell any number of goods.",
                "The XOR indicates that buyers 2 and 4 are willing to buy at most one of the two goods in which they are interested.",
                "The efficient trade is for bundle AB to go to buyer 1 and bundle CD to buyer 3, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER Example 1: Example 3: 2,2 +C +D BUYER 2 2,2 +A +B BUYER 1 +11 +84,4 -B SELLER -A -C -D Example 2: 1,1 +A +B BUYER 2 2,2 +A +B BUYER 1 +6 +40,4 -B SELLER -C -D-A 1,1 +C +D BUYER 4 2,2 +C +D +3 +2 BUYER 3 -18 Figure 2: Example Bid Trees.",
                "Example 3.",
                "One seller and two buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 AND(−A, −B, −C, −D) AND(+A, +B) AND(+C, +D) -18 +11 +8 The efficient trade is for bundle AB to go to buyer 1 and bundle CD to go to buyer 2, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4.",
                "A ONE-SHOT EXCHANGE DESIGN The description of ICE is broken down into two sections: one-shot (sealed-bid) and iterative.",
                "In this section we abstract away the iterative aspect and introduce a specialization of the tree-based language that supports only exact values on nodes. 4.1 Tree-Based Bidding Language The bidding language is designed to be expressive and concise, entirely symmetric with respect to buyers and sellers, and to extend to capture bids from mixed buyers and sellers, ranging from simple swaps to highly complex trades.",
                "Bids are expressed as annotated bid trees, and define a bidders value for all possible trades.",
                "The language defines changes in values on trades, with leaves annotated with traded items and nodes annotated with changes in values (either positive or negative).",
                "The main feature is that it has a general interval-choose logical operator on internal nodes, and that it defines careful semantics for propagating values within the tree.",
                "We illustrate the language on each of Examples 1-3 in Figure 2.",
                "The language has a tree structure, with trades on items defined on leaves and values annotated on nodes and leaves.",
                "The nodes have zero values where no value is indicated.",
                "Internal nodes are also labeled with interval-choose (IC) ranges.",
                "Given a trade, the semantics of the language define which nodes in the tree can be satisfied, or switched-on.",
                "First, if a child is on then its parent must be on.",
                "Second, if a parent node is on, then the number of children that are on must be within the IC range on the parent node.",
                "Finally, leaves in which the bidder is buying items can only be on if the items are provided in the trade.",
                "For instance, in Example 2 we can consider the efficient trade, and observe that in this trade all nodes in the trees of buyers 1 and 3 (and also the seller), but none of the nodes in the trees of buyers 2 and 4, can be on.",
                "On the other hand, in 251 the trade in which A goes to buyer 2 and D to buyer 4, then the root and appropriate leaf nodes can be on for buyers 2 and 4, but no nodes can be on for buyers 1 and 3.",
                "Given a trade there is often a number of ways to choose the set of satisfied nodes.",
                "The semantics of the language require that the nodes that maximize the summed value across satisfied nodes be activated.",
                "Consider bid tree Ti from bidder i.",
                "This defines nodes β ∈ Ti, of which some are leaves, Leaf (i) ⊆ Ti.",
                "Let Child(β) ⊆ Ti denote the children of a node β (that is not itself a leaf).",
                "All nodes except leaves are labeled with the interval-choose operator [IC x i (β), ICy i (β)].",
                "Every node is also labeled with a value, viβ ∈ ¡ .",
                "Each leaf β is labeled with a trade, qiβ ∈   m (i.e., leaves can define a bundled trade on more than one type of item.)",
                "Given a trade λi to bidder i, the interval-choose operators and trades on leaves define which nodes can be satisfied.",
                "There will often be a choice.",
                "Ties are broken to maximize value.",
                "Let satiβ ∈ {0, 1} denote whether node β is satisfied.",
                "Solution sati is valid given tree Ti and trade λi, written sati ∈ valid(Ti, λi), if and only if: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Child(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Leaf (i) (5) In words, a set of leaves can only be considered satisfied given trade λi if the total increase in quantity summed across all such leaves is covered by the trade, for all goods (Eq. 4).",
                "This works for sellers as well as buyers: for sellers a trade is negative and this requires that the total number of items indicated sold in the tree is at least the total number sold as defined in the trade.",
                "We also need upwards-propagation: any time a node other than the root is satisfied then its parent must be satisfied (by   β ∈Child(β) satiβ ≤ ICy i (β)satiβ in Eq. 5).",
                "Finally, we need downwards-propagation: any time an internal node is satisfied then the appropriate number of children must also be satisfied (Eq. 5).",
                "The total value of trade λi, given bid-tree Ti, is defined as: vi(Ti, λi) = max sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) The tree-based language generalizes existing languages.",
                "For instance: IC(2, 2) on a node with 2 children is equivalent to an AND operator; IC(1, 3) on a node with 3 children is equivalent to an OR operator; and IC(1, 1) on a node with 2 children is equivalent to an XOR operator.",
                "Similarly, the XOR/OR bidding languages can be directly expressed as a bid tree in our language.2 4.2 Winner Determination This section defines the winner determination problem, which is formulated as a MIP and solved in our implementation with a commercial solver.3 The solver uses branchand-bound search with dynamic cut generation and branching heuristics to solve large MIPs in economically feasible run times. 2 The OR* language is the OR language with dummy items to provide additional structure.",
                "OR* is known to be expressive and concise.",
                "However, it is not known whether OR* dominates XOR/OR in terms of conciseness [23]. 3 CPLEX, www.ilog.com In defining the MIP representation we are careful to avoid an XOR-based enumeration of all bundles.",
                "A variation on the WD problem is reused many times within the exchange, e.g. for column generation in pricing and for checking revealed preference.",
                "Given bid trees T = (T1, . . . , Tn) and initial allocation x0 , the mixed-integer formulation for WD is: WD(T, x0 ) : max λ,sat ¢ i ¢ β∈Ti viβ · satiβ s.t. (1), (2), satiβ ∈ {0, 1}, λij ∈   sati ∈ valid(Ti, λi), ∀i Some goods may go unassigned because free disposal is allowed within the clearing rules of winner determination.",
                "These items can be allocated back to agents that sold the items, i.e. for which λij < 0. 4.3 Computing Threshold Payments The Threshold payment rule is based on the payments in the Vickrey-Clarke-Groves (VCG) mechanism [15], which itself is truthful and efficient but does not satisfy budget balance.",
                "Budget-balance requires that the total payments to the exchange are equal to the total payments made by the exchange.",
                "In VCG, the payment paid by agent i is pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) where λ∗ is the efficient trade, V ∗ is the reported value of this trade, and V−i is the reported value of the efficient trade that would be implemented without bidder i.",
                "We call ∆vcg,i = V ∗ − V−i the VCG discount.",
                "For instance, in Example 1 pvcg,seller = −10 − (+10 − 0) = −20 and pvcg,buyer = +20 − (+10 − 0) = 10, and the exchange would run at a budget deficit of −20 + 10 = −10.",
                "The Threshold payment rule [24] determines budgetbalanced payments to minimize the maximal error across all agents to the VCG outcome.",
                "Definition 2.",
                "The Threshold payment scheme implements the efficient trade λ∗ given bids, and sets payments pthresh,i = ˆvi(λ∗ i ) − ∆i, where ∆ = (∆1, . . . , ∆n) is set to minimize maxi(∆vcg,i − ∆i) subject to ∆i ≤ ∆vcg,i and   i ∆i ≤ V ∗ (this gives budget-balance).",
                "Example 4.",
                "In Example 2, the VCG discounts are (9, 2, 0, 1, 0) to the seller and four buyers respectively, VCG payments are (−9, 4, 0, 2, 0) and the exchange runs at a deficit of -3.",
                "In Threshold, the discounts are (8, 1, 0, 0, 0) and the payments are (−8, 5, 0, 3, 0).",
                "This minimizes the worst-case error to VCG discounts across all budget-balanced payment schemes.",
                "Threshold payments are designed to minimize the maximal ex post incentive to manipulate.",
                "Krych [16] confirmed that Threshold promotes allocative efficiency in restricted and approximate Bayes-Nash equilibrium. 5.",
                "THE ICE DESIGN We are now ready to introduce the iterative combinatorial exchange (ICE) design.",
                "Several new components are introduced, relative to the design for the one-shot exchange.",
                "Rather than provide precise valuations, bidders can provide lower and upper valuations and revise this bid information across rounds.",
                "The exchange provides price-based feedback 252 to guide bidders in this process, and terminates with an efficient (or approximately-efficient) trade with respect to reported valuations.",
                "In each round t ∈ {0, 1, . . .} the current lower and upper bounds, vt and vt , are used to define a provisional valuation profile vα (the α-valuation), together with a provisional trade λt and provisional prices pt = (pt 1, . . . , pt m) on items.",
                "The α-valuation is a linear combination of the current upper and lower valuations, with αEFF ∈ [0, 1] chosen endogenously based on the closeness of the optimistic trade (at v) and the pessimistic trade (at v).",
                "Prices pt are used to inform an activity rule, and drive progress towards an efficient trade. 5.1 Upper and Lower Valuations The bidding language is extended to allow a bidder i to report a lower and upper value (viβ, viβ) on each node.",
                "These take the place of the exact value viβ defined in Section 4.1.",
                "Based on these labels, we can define the valuation functions vi(Ti, λi) and vi(Ti, λi), using the exact same semantics as in Eq. (6).",
                "We say that such a bid-tree is well-formed if viβ ≤ viβ for all nodes.",
                "The following lemma is useful: Lemma 1.",
                "Given a well-formed tree, T, then vi(Ti, λi) ≤ vi(Ti, λi) for all trades.",
                "Proof.",
                "Suppose there is some λi for which vi(Ti, λi) > vi(Ti, λi).",
                "Then, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ.",
                "But, this is a contradiction because the trade λ that defines vi(Ti, λi) is still feasible with upper bounds vi, and viβ ≥ viβ for all nodes β in a well-formed tree. 5.2 Price Feedback In each round, approximate competitive-equilibrium (CE) prices, pt = (pt 1, . . . , pt m), are determined.",
                "Given these provisional prices, the price on trade λi for bidder i is pt (λi) =   j≤m pt j · λij.",
                "Definition 3 (CE prices).",
                "Prices p∗ are competitive equilibrium prices if the efficient trade λ∗ is supported at prices p∗ , so that for each bidder: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) CE prices will not always exist and we will often need to compute approximate prices [5].",
                "We extend ideas due to Rassenti et al. [26], Kwasnica et al. [17] and Dunford et al. [12], and select approximate prices as follows: I: Accuracy.",
                "First, we compute prices that minimize the maximal error in the best-response constraints across all bidders.",
                "II: Fairness.",
                "Second, we break ties to prefer prices that minimize the maximal deviation from Threshold payments across all bidders.",
                "III: Balance.",
                "Third, we break ties to prefer prices that minimize the maximal price across all items.",
                "Taken together, these steps are designed to promote the informativeness of the prices in driving progress across rounds.",
                "In computing prices, we explain how to compute approximate (or otherwise) prices for structured bidding languages, and without enumerating all possible trades.",
                "For this, we adopt constraint generation to efficient handle an exponential number of constraints.",
                "Each step is described in detail below.",
                "I: Accuracy.",
                "We adopt a definition of price accuracy that generalizes the notions adopted in previous papers for unstructured bidding languages.",
                "Let λt denote the current provisional trade and suppose the provisional valuation is vα .",
                "To compute accurate CE prices, we consider: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j.",
                "This linear program (LP) is designed to find prices that minimize the worst-case error across all agents.",
                "From the definition of CE prices, it follows that CE prices would have δ = 0 as a solution to (9), at which point trade λt i would be in the best-response set of every agent (with λt i = ∅, i.e. no trade, for all agents with no surplus for trade at the prices.)",
                "Example 5.",
                "We can illustrate the formulation (9) on Example 2, assuming for simplicity that vα = v (i.e. truth).",
                "The efficient trade allocates AB to buyer 1 and CD to buyer 3.",
                "Accuracy will seek prices p(A), p(B), p(C) and p(D) to minimize the δ ≥ 0 required to satisfy constraints: p(A) + p(B) + p(C) + p(D) ≥ 0 (seller) p(A) + p(B) ≤ 6 + δ (buyer 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (buyer 2) p(C) + p(D) ≤ 3 (buyer 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (buyer 4) An optimal solution requires p(A) = p(B) = 10/3, with δ = 2/3, with p(C) and p(D) taking values such as p(C) = p(D) = 3/2.",
                "But, (9) has an exponential number of constraints (Eq. 10).",
                "Rather than solve it explicitly we use constraint generation [4] and dynamically generate a sufficient subset of constraints.",
                "Let   i denote a manageable subset of all possible feasible trades to bidder i.",
                "Then, a relaxed version of (9) (written ACC) is formulated by substituting (10) with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) where   i is a set of trades that are feasible for bidder i given the other bids.",
                "Fixing the prices p∗ , we then solve n subproblems (one for each bidder), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0 ), (12) to check whether solution (p∗ , δ∗ ) to ACC is feasible in problem (9).",
                "In R-WD(i) the objective is to determine a most preferred trade for each bidder at these prices.",
                "Let ˆλi denote the solution to R-WD(i).",
                "Check condition: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) and if this condition holds for all bidders i, then solution (p∗ , δ∗ ) is optimal for problem (9).",
                "Otherwise, trade ˆλi is added to   i for all bidders i for which this constraint is 253 violated and we re-solve the LP with the new set of constraints.4 II: Fairness.",
                "Second, we break remaining ties to prefer fair prices: choosing prices that minimize the worst-case error with respect to Threshold payoffs (i.e. utility to bidders with Threshold payments), but without choosing prices that are less accurate.5 Example 6.",
                "For example, accuracy in Example 1 (depicted in Figure 1) requires 12 ≤ pA +pB ≤ 16 (for vα = v).",
                "At these valuations the Threshold payoffs would be 2 to both the seller and the buyer.",
                "This can be exactly achieved in pricing with pA + pB = 14.",
                "The fairness tie-breaking method is formulated as the following LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution, from ACC.",
                "The objective here is the same as in the Threshold payment rule (see Section 4.3): minimize the maximal error between bidder payoff (at vα ) for the provisional trade and the VCG payoff (at vα ).",
                "Problem FAIR is also solved through constraint generation, using R-WD(i) to add additional violated constraints as necessary.",
                "III: Balance.",
                "Third, we break remaining ties to prefer balanced prices: choosing prices that minimize the maximal price across all items.",
                "Returning again to Example 1, depicted in Figure 1, we see that accuracy and fairness require p(A) + p(B) = 14.",
                "Finally, balance sets p(A) = p(B) = 7.",
                "Balance is justified when, all else being equal, items are more likely to have similar than dissimilar values.6 The LP for balance is formulated as follows: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution from ACC and π∗ represents the error in the optimal solution from FAIR.",
                "Constraint generation is also used to solve BAL, generating new trades for   i as necessary. 4 Problem R-WD(i) is a specialization of the WD problem, in which the objective is to maximize the payoff of a single bidder, rather than the total value across all bidders.",
                "It is solved as a MIP, by rewriting the objective in WD(T, x0 ) as max{viβ · satiβ −   j p∗ j · λij } for agent i.",
                "Thus, the structure of the bid-tree language is exploited in generating new constraints, because this is solved as a concise MIP.",
                "The other bidders are kept around in the MIP (but do not appear in the objective), and are used to define the space of feasible trades. 5 The methods of Dunford et al. [12], that use a nucleolus approach, are also closely related. 6 The use of balance was advocated by Kwasnica et al. [17].",
                "Dunford et al. [12] prefer to smooth prices across rounds.",
                "Comment 1: Lexicographical Refinement.",
                "For all three sub-problems we also perform lexicographical refinement (with respect to bidders in ACC and FAIR, and with respect to goods in BAL).",
                "For instance, in ACC we successively minimize the maximal error across all bidders.",
                "Given an initial solution we first pin down the error on all bidders for whom a constraint (11) is binding.",
                "For such a bidder i, the constraint is replaced with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) and the error to bidder i no longer appears explicitly in the objective.",
                "ACC is then re-solved, and makes progress by further minimizing the maximal error across all bidders yet to be pinned down.",
                "This continues, pinning down any new bidders for whom one of constraints (11) is binding, until the error is lexicographically optimized for all bidders.7 The exact same process is repeated for FAIR and BAL, with bidders pinned down and constraints (15) replaced with π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (where π∗ i is the current objective) in FAIR, and items pinned down and constraints (18) replaced with p∗ j ≥ pj (where p∗ j represents the target for the maximal price on that item) in BAL.",
                "Comment 2: Computation.",
                "All constraints in   i are retained, and this set grows across all stages and across all rounds of the exchange.",
                "Thus, the computational effort in constraint generation is re-used.",
                "In implementation we are careful to address a number of -issues that arise due to floating-point issues.",
                "We prefer to err on the side of being conservative in determining whether or not to add another constraint in performing check (13).",
                "This avoids later infeasibility issues.",
                "In addition, when pinning-down bidders for the purpose of lexicographical refinement we relax the associated bidder-constraints with a small > 0 on the righthand side. 5.3 Revealed-Preference Activity Rules The role of activity rules in the auction is to ensure both consistency and progress across rounds [21].",
                "Consistency in our exchange requires that bidders tighten bounds as the exchange progresses.",
                "Activity rules ensure that bidders are active during early rounds, and promote useful elicitation throughout the exchange.",
                "We adopt a simple revealed-preference (RP) activity rule.",
                "The idea is loosely based around the RP-rule in Ausubel et al. [1], where it is used for one-sided CAs.",
                "The motivation is to require more than simply consistency: we need bidders to provide enough information for the system to be able to to prove that an allocation is (approximately) efficient.",
                "It is helpful to think about the bidders interacting with proxy agents that will act on their behalf in responding to provisional prices pt−1 determined at the end of round t − 1.",
                "The only knowledge that such a proxy has of the valuation of a bidder is through the bid-tree.",
                "Suppose a proxy was queried by the exchange and asked which trade the bidder was most interested in at the provisional prices.",
                "The RP rule says the following: the proxy must have enough 7 For example, applying this to accuracy on Example 2 we solve once and find bidders 1 and 2 are binding, for error δ∗ = 2/3.",
                "We pin these down and then minimize the error to bidders 3 and 4.",
                "Finally, this gives p(A) = p(B) = 10/3 and p(C) = p(D) = 5/3, with accuracy 2/3 to bidders 1 and 2 and 1/3 to bidders 3 and 4. 254 information to be able to determine this surplus-maximizing trade at current prices.",
                "Consider the following examples: Example 7.",
                "A bidder has XOR(+A, +B) and a value of +5 on the leaf +A and a value range of [5,10] on leaf +B.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the proxy knows that however the remaining value uncertainty on +B is resolved the bidder will always (weakly) prefer +B to +A.",
                "Example 8.",
                "A bidder has XOR(+A, +B) and value bounds [5, 10] on the root node and a value of 1 on leaf +A.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the bidder will always prefer +A to +B at equal prices, whichever way the uncertain value on the root node is ultimately resolved.",
                "Overloading notation, let vi ∈ Ti denote a valuation that is consistent with lower and upper valuations in bid tree Ti.",
                "Definition 4.",
                "Bid tree Ti satisfies RP at prices pt−1 if and only if there exists some feasible trade L∗ for which, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. (20) To make this determination for bidder i we solve a sequence of problems, each of which is a variation on the WD problem.",
                "First, we construct a candidate lower-bound trade, which is a feasible trade that solves: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) The solution π∗ l to RP1(i) represents the maximal payoff that bidder i can achieve across all feasible trades, given its pessimistic valuation.",
                "Second, we break ties to find a trade with maximal value uncertainty across all possible solutions to RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] s.t. λ ∈ Feas(x0 ) (22) vi(λi) − pt−1 (λi) ≥ π∗ l (23) We adopt solution L∗ i as our candidate for the trade that may satisfy RP.",
                "To understand the importance of this tiebreaking rule consider Example 7.",
                "The proxy can prove +B but not +A is a best-response for all vi ∈ Ti, and should choose +B as its candidate.",
                "Notice that +B is a counterexample to +A, but not the other way round.",
                "Now, we construct a modified valuation ˜vi, by setting ˜viβ =   viβ , if β ∈ sat(L∗ i ) viβ , otherwise. (24) where sat(L∗ i ) is the set of nodes that are satisfied in the lower-bound tree for trade L∗ i .",
                "Given this modified valuation, we find U∗ to solve: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Let π∗ u denote the payoff from this optimal trade at modified values ˜v.",
                "We call trade U∗ i the witness trade.",
                "We show in Proposition 1 that the RP rule is satisfied if and only if π∗ l ≥ π∗ u. Constructing the modified valuation as ˜vi recognizes that there is shared uncertainty across trades that satisfy the same nodes in a bid tree.",
                "Example 8 helps to illustrate this.",
                "Just using vi in RP3(i), we would find L∗ i is buy A with payoff π∗ l = 3 but then find U∗ i is buy B with π∗ u = 7 and fail RP.",
                "We must recognize that however the uncertainty on the root node is resolved it will affect +A and +B in exactly the same way.",
                "For this reason, we set ˜viβ = viβ = 5 on the root node, which is exactly the same value that was adopted in determining π∗ l .",
                "Then, RP3(i) applied to U∗ i gives buy A and the RP test is judged to be passed.",
                "Proposition 1.",
                "Bid tree Ti satisfies RP given prices pt−1 if and only if any lower-bound trade L∗ i that solves RP1(i) and RP2(i) satisfies: vi(Ti, L∗ i ) − pt−1 (L∗ i ) ≥ ˜vi(Ti, U∗ i ) − pt−1 (U∗ i ), (26) where ˜vi is the modified valuation in Eq. (24).",
                "Proof.",
                "For sufficiency, notice that the difference in payoff between trade L∗ i and another trade λi is unaffected by the way uncertainty is resolved on any node that is satisfied in both L∗ i and λi.",
                "Fixing the values in ˜vi on nodes satisfied in L∗ i has the effect of removing this consideration when a trade U∗ i is selected that satisfies one of these nodes.",
                "On the other hand, fixing the values on these nodes has no effect on trades considered in RP3(i) that do not share a node with L∗ i .",
                "For the necessary direction, we first show that any trade that satisfies RP must solve RP1(i).",
                "Suppose otherwise, that some λi with payoff greater than π∗ l satisfies RP.",
                "But, valuation vi ∈ Ti together with L∗ i presents a counterexample to RP (Eq. 20).",
                "Now, suppose (for contradiction) that some λi with maximal payoff π∗ l but uncertainty less than L∗ i satisfies RP.",
                "Proceed by case analysis.",
                "Case a): only one solution to RP1(i) has uncertain value and so λi has certain value.",
                "But, this cannot satisfy RP because L∗ i with uncertain value would be a counterexample to RP (Eq. 20).",
                "Case b): two or more solutions to RP1(i) have uncertain value.",
                "Here, we first argue that one of these trades must satisfy a (weak) superset of all the nodes with uncertain value that are satisfied by all other trades in this set.",
                "This is by RP.",
                "Without this, then for any choice of trade that solves RP1(i), there is another trade with a disjoint set of uncertain but satisfied nodes that provides a counterexample to RP (Eq. 20).",
                "Now, consider the case that some trade contains a superset of all the uncertain satisfied nodes of the other trades.",
                "Clearly RP2(i) will choose this trade, L∗ i , and λi must satisfy a subset of these nodes (by assumption).",
                "But, we now see that λi cannot satisfy RP because L∗ i would be a counterexample to RP.",
                "Failure to meet the activity rule must have some consequence.",
                "In the current rules, the default action we choose is to set the upper bounds in valuations down to the maximal value of the provisional price on a node8 and the lowerbound value on that node.9 Such a bidder can remain active 8 The provisional price on a node is defined as the minimal total price across all feasible trades for which the subtree rooted at the tree is satisfied. 9 This is entirely analogous to when a bidder in an ascending clock auction stops bidding at a price: she is not permitted to bid at a higher price again in future rounds. 255 within the exchange, but only with valuations that are consistent with these new bounds. 5.4 Bidder Feedback In each round, our default design provides every bidder with the provisional trade and also with the current provisional prices.",
                "See 7 for an additional discussion.",
                "We also provide guidance to help a bidder meet the RP rule.",
                "Let sat(L∗ i ) and sat(U∗ i ) denote the nodes that are satisfied in trades L∗ i and U∗ i , as computed in RP1-RP3.",
                "Lemma 2.",
                "When RP fails, a bidder must increase a lower bound on at least one node in sat(L∗ i ) \\ sat(U∗ i ) or decrease an upper bound on at least one node in sat(U∗ i ) \\ sat(L∗ i ) in order to meet the activity rule.",
                "Proof.",
                "Changing the upper- or lower- values on nodes that are not satisfied by either trade does not change L∗ i or U∗ i , and does not change the payoff from these trades.",
                "Thus, the RP condition will continue to fail.",
                "Similarly, changing the bounds on nodes that are satisfied in both trades has no effect on revealed preference.",
                "A change to a lower bound on a shared node affects both L∗ i and U∗ i identically because of the use of the modified valuation to determine U∗ i .",
                "A change to an upper bound on a shared node has no effect in determining either L∗ i or U∗ i .",
                "Note that when sat(U∗ i ) = sat(L∗ i ) then condition (26) is always trivially satisfied, and so the guidance in the lemma is always well-defined when RP fails.",
                "This is an elegant feedback mechanism because it is adaptive.",
                "Once a bidder makes some changes on some subset of these nodes, the bidder can query the exchange.",
                "The exchange can then respond yes, or can revise the set of nodes sat(λ∗ l ) and sat(λ∗ u) as necessary. 5.5 Termination Conditions Once each bidder has committed its new bids (and either met the RP rule or suffered the penalty) then round t closes.",
                "At this point, the task is to determine the new α-valuation, and in turn the provisional allocation λt and provisional prices pt .",
                "A termination condition is also checked, to determine whether to move the exchange to a last-and-final round.",
                "To define the α-valuation we compute the following two quantities: Pessimistic at Pessimistic (PP) Determine an efficient trade, λ∗ l , at pessimistic values, i.e. to solve maxλ   i vi(λi), and set PP=  i vi(λ∗ li).",
                "Pessimistic at Optimistic (PO) Determine an efficient trade, λ∗ u, at optimistic values, i.e. to solve maxλ   i vi(λi), and set PO=  i vi(λ∗ ui).",
                "First, note that PP ≥ PO and PP ≥ 0 by definition, for all bid-trees, although PO can be negative (because the right trade at v is not currently a useful trade at v).",
                "Recognizing this, define γeff (PP, PO) = 1 + PP − PO PP , (27) when PP > 0, and observe that γeff (PP, PO) ≥ 1 when this is defined, and that γeff (PP, PO) will start large and then trend towards 1 as the optimistic allocation converges towards the pessimistic allocation.",
                "In each round, we define αeff ∈ [0, 1] as: αeff =   0 when PP is 0 1/γeff otherwise (28) which is 0 while PP is 0 and then trends towards 1 once PP> 0 in some round.",
                "This is used to define α-valuation vα i = αeff vi + (1 − αeff )vi, ∀i, (29) which is used to define the provisional allocation and provisional prices.",
                "The effect is to endogenously define a schedule for moving from optimistic to pessimistic values across rounds, based on how close the trades are to one another.",
                "Termination Condition.",
                "In moving to the last-and-final round, and finally closing, we also care about the convergence of payments, in addition to the convergence towards an efficient trade.",
                "For this we introduce another parameter, αthresh ∈ [0, 1], that trends from 0 to 1 as the Threshold payments at lower and upper valuations converge.",
                "Consider the following parameter: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive) , (30) which is defined for PP > 0, where pthresh(v) denotes the Threshold payments at valuation profile v, Nactive is the number of bidders that are actively engaged in trade in the PP trade, and || · ||2 is the L2-norm.",
                "Note that γthresh is defined for payments and not payoffs.",
                "This is appropriate because it is the accuracy of the outcome of the exchange that matters: i.e. the trade and the payments.",
                "Given this, we define αthresh =   0 when PP is 0 1/γthresh otherwise (31) which is 0 while PP is 0 and then trends towards 1 as progress is made.",
                "Definition 5 (termination).",
                "ICE transitions to a lastand-final round when one of the following holds: 1. αeff ≥ CUTOFFeff and αthresh ≥ CUTOFFthresh, 2. there is no trade at the optimistic values, where CUTOFFeff , CUTOFFthresh ∈ (0, 1] determine the accuracy required for termination.",
                "At the end of the last-and-final round vα = v is used to define the final trade and the final Threshold payments.",
                "Example 9.",
                "Consider again Example 1, and consider the upper and lower bounds as depicted in Figure 1.",
                "First, if the sellers bounds were [−20, −4] then there is an optimistic trade but no pessimistic trade, and PO = −4 and PP = 0, and αeff = 0.",
                "At the bounds depicted, both the optimistic and the pessimistic trades occur and PO = PP = 4 and αeff = 1.",
                "However, we can see the Threshold payments are (17, −17) at v but (14, −14) at v. Evaluating γthresh , we have γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, and αthresh = 2/5.",
                "For CUTOFFthresh < 2/5 the exchange would remain open.",
                "On the other hand, if the buyers value for +AB was between [18, 24] and the sellers value for −AB was between [−12, −6], the Threshold payments are (15, −15) at both upper and lower bounds, and αthresh = 1. 256 Component Purpose Lines Agent.",
                "Captures strategic behavior and information revelation decisions 762 Model Support Provides XML support to load goods and valuations into world 200 World Keeps track of all agent, good, and valuation details 998 Exchange Driver & Communication Controls exchange, and coordinates remote agent behavior 585 Bidding Language Implements the tree-based bidding language 1119 Activity Rule Engine Implements the revealed preference rule with range support 203 Closing Rule Engine Checks if auction termination condition reached 137 WD Engine Provides WD-related logic 377 Pricing Engine Provides Pricing-related logic 460 MIP Builders Translates logic used by engines into our general optimizer formulation 346 Pricing Builders Used by three pricing stages 256 Winner Determination Builders Used by WD, activity rule, closing rule, and pricing constraint generation 365 Framework Support code; eases modular replacement of above components 510 Table 1: Exchange Component and Code Breakdown. 6.",
                "SYSTEMS INFRASTRUCTURE ICE is approximately 6502 lines of Java code, broken up into the functional packages described in Table 1.10 The prototype is modular so that researchers may easily replace components for experimentation.",
                "In addition to the core exchange discussed in this paper, we have developed an agent component that allows a user to simulate the behavior and knowledge of other players in the system, better allowing a user to formulate their strategy in advance of actual play.",
                "A user specifies a valuation model in an XMLinterpretation of our bidding language, which is revealed to the exchange via the agents strategy.",
                "Major exchange tasks are handled by engines that dictate the non-optimizer specific logic.",
                "These engines drive the appropriate MIP/LP builders.",
                "We realized that all of our optimization formulations boil down to two classes of optimization problem.",
                "The first, used by winner determination, activity rule, closing rule, and constraint generation in pricing, is a MIP that finds trades that maximize value, holding prices and slacks constant.",
                "The second, used by the three pricing stages, is an LP that holds trades constant, seeking to minimize slack, profit, or prices.",
                "We take advantage of the commonality of these problems by using common LP/MIP builders that differ only by a few functional hooks to provide the correct variables for optimization.",
                "We have generalized our back-end optimization solver interface11 (we currently support CPLEX and the LGPL- licensed LPSolve), and can take advantage of the load-balancing and parallel MIP/LP solving capability that this library provides. 7.",
                "DISCUSSION The bidding language was defined to allow for perfect symmetry between buyers and sellers and provide expressiveness in an exchange domain, for instance for mixed bidders interested in executing trades such as swaps.",
                "This proved especially challenging.",
                "The breakthrough came when we focused on changes in value for trades rather than providing absolute values for allocations.",
                "For simplicity, we require the same tree structure for both the upper and lower valuations. 10 Code size is measured in physical source line of code (SLOC), as generated using David A. Wheelers SLOC Count.",
                "The total of 6502 includes 184 for instrumentation (not shown in the table).",
                "The JOpt solver interface is another 1964 lines, and Castor automatically generates around 5200 lines of code for XML file manipulation. 11 http://econcs.eecs.harvard.edu/jopt This allows the language itself to ensure consistency (with the upper value at least the lower value on all trades) and enforce monotonic tightening of these bounds for all trades across rounds.",
                "It also provides for an efficient method to check the RP activity rule, because it makes it simple to reason about shared uncertainty between trades.",
                "The decision to adopt a direct and proxied approach in which bidders express their upper and lower values to a trusted proxy agent that interacts with the exchange was made early in the design process.",
                "In many ways this is the clearest and most immediate way to generalize the design in Parkes et al. [24] and make it iterative.",
                "In addition, this removes much opportunity for strategic manipulation: bidders are restricted to making (incremental) statements about their valuations.",
                "Another advantage is that it makes the activity rule easy to explain: bidders can always meet the activity rule by tightening bounds such that their true value remains in the support.12 Perhaps most importantly, having explicit information on upper and lower values permits progress in early rounds, even while there is no efficient trade at pessimistic values.",
                "Upper and lower bound information also provides guidance about when to terminate.",
                "Note that taken by itself, PP = PO does not imply that the current provisional trade is efficient with respect to all values consistent with current value information.",
                "The difference in values between different trades, aggregated across all bidders, could be similar at lower and upper bounds but quite different at intermediate values (including truth).",
                "Nevertheless, we conjecture that PP = PO will prove an excellent indicator of efficiency in practical settings where the shape of the upper and lower valuations does convey useful information.",
                "This is worthy of experimental investigation.",
                "Moreover, the use of price and RP activity provides additional guarantees.",
                "We adopted linear prices (prices on individual items) rather than non-linear prices (with prices on a trade not equal to the sum of the prices on the component items) early in the design process.",
                "The conciseness of this price representation is very important for computational tractability within the exchange and also to promote simplicity and transparency for bidders.",
                "The RP activity rule was adopted later, and is a good choice because of its excellent theoretical properties when coupled with CE prices.",
                "The following can be easily established: given exact CE prices pt−1 for provisional trade 12 This is in contrast to indirect price-based approaches, such as clock-proxy [1], in which bidders must be able to reason about the RP-constraints implied by bids in each round. 257 λt−1 at valuations vα , then if the upper and lower values at the start of round t already satisfy the RP rule (and without the need for any tie-breaking), the provisional trade is efficient for all valuations consistent with the current bid trees.",
                "When linear CE prices exist, this provides for a soundness and completeness statement: if PP = PO, linear CE prices exist, and the RP rule is satisfied, the provisional trade is efficient (soundness); if prices are exact CE prices for the provisional trade at vα , but the trade is inefficient with respect to some valuation profile consistent with the current bid trees, then at least one bidder must fail RP with her current bid tree and progress will be made (completeness).",
                "Future work must study convergence experimentally, and extend this theory to allow for approximate prices.",
                "Some strategic aspects of our ICE design deserve comment, and further study.",
                "First, we do not claim that truthfully responding to the RP rule is an ex post equilibrium.13 However, the exchange is designed to mimic the Threshold rule in its payment scheme, which is known to have useful incentive properties [16].",
                "We must be careful, though.",
                "For instance we do not suggest to provide αeff to bidders, because as αeff approaches 1 it would inform bidders that bid values are becoming irrelevant to determining the trade but merely used to determine payments (and bidders would become increasingly reluctant to increase their lower valuations).",
                "Also, no consideration has been given in this work to collusion by bidders.",
                "This is an issue that deserves some attention in future work. 8.",
                "CONCLUSIONS In this work we designed and prototyped a scalable and highly-expressive iterative combinatorial exchange.",
                "The design includes many interesting features, including: a new bid-tree language for exchanges, a new method to construct approximate linear prices from expressive languages, and a proxied elicitation method with optimistic and pessimistic valuations with a new method to evaluate a revealed- preference activity rule.",
                "The exchange is fully implemented in Java and is in a validation phase.",
                "The next steps for our work are to allow bidders to refine the structure of the bid tree in addition to values on the tree.",
                "We intend to study the elicitation properties of the exchange and we have put together a test suite of exchange problem instances.",
                "In addition, we are beginning to engage in collaborations to apply the design to airline takeoff and landing slot scheduling and to resource allocation in widearea network distributed computational systems.",
                "Acknowledgments We would like to dedicate this paper to all of the participants in CS 286r at Harvard University in Spring 2004.",
                "This work is supported in part by NSF grant IIS-0238147. 9.",
                "REFERENCES [1] L. Ausubel, P. Cramton, and P. Milgrom.",
                "The clock-proxy auction: A practical <br>combinatorial auction</br> design.",
                "In Cramton et al. [9], chapter 5. [2] M. Babaioff, N. Nisan, and E. Pavlov.",
                "Mechanisms for a spatially distributed market.",
                "In Proc. 5th ACM Conf. on Electronic Commerce, pages 9-20.",
                "ACM Press, 2001. 13 Given the Myerson-Satterthwaite impossibility theorem [22] and the method by which we determine the trade we should not expect this. [3] M. Ball, G. Donohue, and K. Hoffman.",
                "Auctions for the safe, efficient, and equitable allocation of airspace system resources.",
                "In S. Cramton, Shoham, editor, Combinatorial Auctions. 2004.",
                "Forthcoming. [4] D. Bertsimas and J. Tsitsiklis.",
                "Introduction to Linear Optimization.",
                "Athena Scientific, 1997. [5] S. Bikhchandani and J. M. Ostroy.",
                "The package assignment model.",
                "Journal of Economic Theory, 107(2):377-406, 2002. [6] C. Boutilier.",
                "A pomdp formulation of preference elicitation problems.",
                "In Proc. 18th National Conference on Artificial Intelligence (AAAI-02), 2002. [7] C. Boutilier and H. Hoos.",
                "Bidding languages for combinatorial auctions.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), 2001. [8] W. Conen and T. Sandholm.",
                "Preference elicitation in combinatorial auctions.",
                "In Proc. 3rd ACM Conf. on Electronic Commerce (EC-01), pages 256-259.",
                "ACM Press, New York, 2001. [9] P. Cramton, Y. Shoham, and R. Steinberg, editors.",
                "Combinatorial Auctions.",
                "MIT Press, 2004. [10] S. de Vries, J. Schummer, and R. V. Vohra.",
                "On ascending Vickrey auctions for heterogeneous objects.",
                "Technical report, MEDS, Kellogg School, Northwestern University, 2003. [11] S. de Vries and R. V. Vohra.",
                "Combinatorial auctions: A survey.",
                "Informs Journal on Computing, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana, and T. Wilson.",
                "Testing linear pricing algorithms for use in ascending combinatorial auctions.",
                "Technical report, SEOR, George Mason University, 2003. [13] Y. Fu, J.",
                "Chase, B. Chun, S. Schwab, and A. Vahdat.",
                "Sharp: an architecture for secure resource peering.",
                "In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 133-148.",
                "ACM Press, 2003. [14] B. Hudson and T. Sandholm.",
                "Effectiveness of query types and policies for preference elicitation in combinatorial auctions.",
                "In Proc. 3rd Int.",
                "Joint.",
                "Conf. on Autonomous Agents and Multi Agent Systems, pages 386-393, 2004. [15] V. Krishna.",
                "Auction Theory.",
                "Academic Press, 2002. [16] D. Krych.",
                "Calculation and analysis of Nash equilibria of Vickrey-based payment rules for combinatorial exchanges, Harvard College, April 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter, and C. DeMartini.",
                "A new and improved design for multi-object iterative auctions.",
                "Management Science, 2004.",
                "To appear. [18] E. Kwerel and J. Williams.",
                "A proposal for a rapid transition to market allocation of spectrum.",
                "Technical report, FCC Office of Plans and Policy, Nov 2002. [19] S. M. Lahaie and D. C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In Proc.",
                "ACM Conf. on Electronic Commerce, pages 180-188, 2004. [20] R. P. McAfee.",
                "A dominant strategy double auction.",
                "J. of Economic Theory, 56:434-450, 1992. [21] P. Milgrom.",
                "Putting auction theory to work: The simultaneous ascending auction.",
                "J.Pol.",
                "Econ., 108:245-272, 2000. [22] R. B. Myerson and M. A. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [23] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. 2nd ACM Conf. on Electronic Commerce (EC-00), pages 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), pages 1161-1168, 2001. [25] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, July 2000. [26] S. J. Rassenti, V. L. Smith, and R. L. Bulfin.",
                "A combinatorial mechanism for airport time slot allocation.",
                "Bell Journal of Economics, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc, and R. M. Harstad.",
                "Computationally manageable combinatorial auctions.",
                "Management Science, 44(8):1131-1147, 1998. [28] T. Sandholm and C. Boutilier.",
                "Preference elicitation in combinatorial auctions.",
                "In Cramton et al. [9], chapter 10. [29] P. R. Wurman and M. P. Wellman.",
                "AkBA: A progressive, anonymous-price <br>combinatorial auction</br>.",
                "In Second ACM Conference on Electronic Commerce, pages 21-29, 2000. 258"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En una \"subasta combinatoria\" (CA), un solo vendedor tiene múltiples artículos heterogéneos a la venta [11].",
                "La subasta de reloj-proxy: un diseño práctico de \"subasta combinatoria\".",
                "AKBA: Una \"subasta combinatoria\" progresiva, anónima-precio \"."
            ],
            "translated_text": "",
            "candidates": [
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria"
            ],
            "error": []
        },
        "buyers and sellers": {
            "translated_key": "Compradores y vendedores",
            "is_in_text": true,
            "original_annotated_sentences": [
                "ICE: An Iterative Combinatorial Exchange David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an iterative combinatorial exchange (ICE).",
                "The exchange incorporates a tree-based bidding language that is concise and expressive for CEs.",
                "Bidders specify lower and upper bounds on their value for different trades.",
                "These bounds allow price discovery and useful preference elicitation in early rounds, and allow termination with an efficient trade despite partial information on bidder valuations.",
                "All computation in the exchange is carefully optimized to exploit the structure of the bid-trees and to avoid enumerating trades.",
                "A proxied interpretation of a revealedpreference activity rule ensures progress across rounds.",
                "A VCG-based payment scheme that has been shown to mitigate opportunities for bargaining and strategic behavior is used to determine final payments.",
                "The exchange is fully implemented and in a validation phase.",
                "Categories and Subject Descriptors: I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Combinatorial exchanges combine and generalize two different mechanisms: double auctions and combinatorial auctions.",
                "In a double auction (DA), multiple <br>buyers and sellers</br> trade units of an identical good [20].",
                "In a combinatorial auction (CA), a single seller has multiple heterogeneous items up for sale [11].",
                "Buyers may have complementarities or substitutabilities between goods, and are provided with an expressive bidding language.",
                "A common goal in both market designs is to determine the efficient allocation, which is the allocation that maximizes total value.",
                "A combinatorial exchange (CE) [24] is a combinatorial double auction that brings together multiple <br>buyers and sellers</br> to trade multiple heterogeneous goods.",
                "For example, in an exchange for wireless spectrum, a bidder may declare that she is willing to pay $1 million for a trade where she obtains licenses for New York City, Boston, and Philadelphia, and loses her license for Washington DC.",
                "Thus, unlike a DA, a CE allows all participants to express complex valuations via expressive bids.",
                "Unlike a CA, a CE allows for fragmented ownership, with multiple <br>buyers and sellers</br> and agents that are both buying and selling.",
                "CEs have received recent attention both in the context of wireless spectrum allocation [18] and for airport takeoff and landing slot allocation [3].",
                "In both of these domains there are incumbents with property rights, and it is important to facilitate a complex multi-way reallocation of resources.",
                "Another potential application domain for CEs is to resource allocation in shared distributed systems, such as PlanetLab [13].",
                "The instantiation of our general purpose design to specific domains is a compelling next step in our research.",
                "This paper presents the first design for an iterative combinatorial exchange (ICE).",
                "The genesis of this project was a class, CS 286r Topics at the Interface between Economics and Computer Science, taught at Harvard University in Spring 2004.1 The entire class was dedicated to the design and prototyping of an iterative CE.",
                "The ICE design problem is multi-faceted and quite hard.",
                "The main innovation in our design is an expressive yet concise tree-based bidding language (which generalizes known languages such as XOR/OR [23]), and the tight coupling of this language with efficient algorithms for price-feedback to guide bidding, winner-determination to determine trades, and revealed-preference activity rules to ensure progress across rounds.",
                "The exchange is iterative: bidders express upper and lower valuations on trades by annotating their bid-tree, and then tighten these bounds in response to price feedback in each round.",
                "The Threshold payment rule, introduced by Parkes et al. [24], is used to determine final payments.",
                "The exchange has a number of interesting theoretical properties.",
                "For instance, when there exist linear prices we establish soundness and completeness: for straightforward bidders that adjust their bounds to meet activity rules while keeping their true value within the bounds, the exchange will terminate with the efficient allocation.",
                "In addition, the 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Truth Agent Act Rule WD ACC FAIR BALClosing RuleVickreyThreshold DONE !",
                "DONE 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER 2,2 +A +15 +8 +B +15 +8 BUYER 2,2 -A -2 -6 -B -2 -6 SELLER BUYER, buy AB SELLER, sell AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PBUYER = 16 - (4-0) = 12 PSELLER = -12 - (4-0) = -16 PBUYER = 14 PSELLER = -14 Pessim istic O ptim istic = 1 Figure 1: ICE System Flow of Control efficient allocation can often be determined without bidders revealing, or even knowing, their exact value for all trades.",
                "This is essential in complex domains where the valuation problem can itself be very challenging for a participant [28].",
                "While we cannot claim that straightforward bidding is an equilibrium of the exchange (and indeed, should not expect to by the Myerson-Satterthwaite impossibility theorem [22]), the Threshold payment rule minimizes the ex post incentive to manipulate across all budget-balanced payment rules.",
                "The exchange is implemented in Java and is currently in validation.",
                "In describing the exchange we will first provide an overview of the main components and introduce several working examples.",
                "Then, we introduce the basic components for a simple one-shot variation in which bidders state their exact values for trades in a single round.",
                "We then describe the full iterative exchange, with upper and lower values, price-feedback, activity rules, and termination conditions.",
                "We state some theoretical properties of the exchange, and end with a discussion to motivate our main design decisions, and suggest some next steps. 2.",
                "AN OVERVIEW OF THE ICE DESIGN The design has four main components, which we will introduce in order through the rest of the paper: • Expressive and concise tree-based bidding language.",
                "The language describes values for trades, such as my value for selling AB and buying C is $100, or my value for selling ABC is -$50, with negative values indicating that a bidder must receive a payment for the trade to be acceptable.",
                "The language allows bidders to express upper and lower bounds on value, which can be tightened across rounds. • Winner Determination.",
                "Winner-determination (WD) is formulated as a mixed-integer program (MIP), with the structure of the bid-trees captured explicitly in the formulation.",
                "Comparing the solution at upper and lower values allows for a determination to be made about termination, with progress in intermediate rounds driven by an intermediate valuation and the lower values adopted on termination. • Payments.",
                "Payments are computed using the Threshold payment rule [24], with the intermediate valuations adopted in early rounds and lower values adopted on termination. • Price feedback.",
                "An approximate price is computed for each item in the exchange in each round, in terms of the intermediate valuations and the provisional trade.",
                "The prices are optimized to approximate competitive equilibrium prices, and further optimized to best approximate the current Threshold payments with remaining ties broken to favor prices that are balanced across different items.",
                "In computing the prices, we adopt the methods of constraint-generation to exploit the structure of the bidding language and avoid enumerating all feasible trades.",
                "The subproblem to generate new constraints is a variation of the WD problem. • Activity rule.",
                "A revealed-preference activity rule [1] ensures progress across rounds.",
                "In order to remain active, a bidder must tighten bounds so that there is enough information to define a trade that maximizes surplus at the current prices.",
                "Another variation on the WD problem is formulated, both to verify that the activity rule is met and also to provide feedback to a bidder to explain how to meet the rule.",
                "An outline of the ICE system flow of control is provided in Figure 1.",
                "We will return to this example later in the paper.",
                "For now, just observe in this two-agent example that the agents state lower and upper bounds that are checked in the activity rule, and then passed to winner-determination (WD), and then through three stages of pricing (accuracy, fairness, balance).",
                "On passing the closing rule (in which parameters αeff and αthresh are checked for convergence of the trade and payments), the exchange goes to a last-and-final round.",
                "At the end of this round, the trade and payments are finally determined, based on the lower valuations. 2.1 Related Work Many ascending-price one-sided CAs are known in the literature [10, 25, 29].",
                "Direct elicitation approaches have also been proposed for one-sided CAs in which agents respond to explicit queries about their valuations [8, 14, 19].",
                "A number of ascending CAs are designed to work with simple prices on items [12, 17].",
                "The price generation methods that we use in ICE generalize the methods in these earlier papers.",
                "Parkes et al. [24] studied sealed-bid combinatorial exchanges and introduced the Threshold payment rule.",
                "Subsequently, Krych [16] demonstrated experimentally that the Threshold rule promotes efficient allocations.",
                "We are not aware of any previous studies of iterative CEs.",
                "Dominant strategy DAs are known for unit demand [20] and also for single-minded agents [2].",
                "No dominant strategy mechanisms are known for the general CE problem.",
                "ICE is a hybrid auction design, in that it couples simple item prices to drive bidding in early rounds with combinatorial WD and payments, a feature it shares with the clock-proxy design of Ausubel et al. [1] for one-sided CAs.",
                "We adopt a variation on the clock-proxy auctionss revealedpreference activity rule.",
                "The bidding language shares some structural elements with the LGB language of Boutilier and Hoos [7], but has very different semantics.",
                "Rothkopf et al. [27] also describe a restricted tree-based bidding language.",
                "In LGB, the semantics are those of propositional logic, with the same items in an allocation able to satisfy a tree in multiple places.",
                "Although this can make LGB especially concise in some settings, the semantics that we propose appear to provide useful locality, so that the value of one component in a tree can be understood independently from the rest of the tree.",
                "The idea of capturing the structure of our bidding language explicitly within a mixed-integer programming formulation follows the developments in Boutilier [6]. 3.",
                "PRELIMINARIES In our model, we consider a set of goods, indexed {1, . . . , m} and a set of bidders, indexed {1, . . . , n}.",
                "The initial allocation of goods is denoted x0 = (x0 1, . . . , x0 n), with x0 i = (x0 i1, . . . , x0 im) and x0 ij ≥ 0 for good j indicating the number 250 of units of good j held by bidder i.",
                "A trade λ = (λ1, . . . , λn) denotes the change in allocation, with λi = (λi1, . . . , λim) where λij ∈   is the change in the number of units of item j to bidder i.",
                "So, the final allocation is x1 = x0 + λ.",
                "Each bidder has a value vi(λi) ∈ ¡ for a trade λi.",
                "This value can be positive or negative, and represents the change in value between the final allocation x0 i +λi and the initial allocation x0 i .",
                "Utility is quasi-linear, with ui(λi, p) = vi(λi)−p for trade λi and payment p ∈ ¡ .",
                "Price p can be negative, indicating the bidder receives a payment for the trade.",
                "We use the term payoff interchangeably with utility.",
                "Our goal in the ICE design is to implement the efficient trade.",
                "The efficient trade, λ∗ , maximizes the total increase in value across bidders.",
                "Definition 1 (Efficient trade).",
                "The efficient trade λ∗ solves max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Constraints (1) ensure that no agent sells more items than it has in its initial allocation.",
                "Constraints (2) provide free disposal, and allows feasible trades to sell more items than are purchased (but not vice versa).",
                "Later, we adopt Feas(x0 ) to denote the set of feasible trades, given these constraints and given an initial allocation x0 = (x0 1, . . . , x0 n). 3.1 Working Examples In this section, we provide three simple examples of instances that we will use to illustrate various components of the exchange.",
                "All three examples have only one seller, but this is purely illustrative.",
                "Example 1.",
                "One seller and one buyer, two goods {A, B}, with the seller having an initial allocation of AB.",
                "Changes in values for trades: seller buyer AND(−A, −B) AND(+A, +B) -10 +20 The AND indicates that both the buyer and the seller are only interested in trading both goods as a bundle.",
                "Here, the efficient (value-maximizing) trade is for the seller to sell AB to the buyer, denoted λ∗ = ([−1, −1], [+1, +1]).",
                "Example 2.",
                "One seller and four buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 buyer 3 buyer 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 The OR indicates that the seller is willing to sell any number of goods.",
                "The XOR indicates that buyers 2 and 4 are willing to buy at most one of the two goods in which they are interested.",
                "The efficient trade is for bundle AB to go to buyer 1 and bundle CD to buyer 3, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER Example 1: Example 3: 2,2 +C +D BUYER 2 2,2 +A +B BUYER 1 +11 +84,4 -B SELLER -A -C -D Example 2: 1,1 +A +B BUYER 2 2,2 +A +B BUYER 1 +6 +40,4 -B SELLER -C -D-A 1,1 +C +D BUYER 4 2,2 +C +D +3 +2 BUYER 3 -18 Figure 2: Example Bid Trees.",
                "Example 3.",
                "One seller and two buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 AND(−A, −B, −C, −D) AND(+A, +B) AND(+C, +D) -18 +11 +8 The efficient trade is for bundle AB to go to buyer 1 and bundle CD to go to buyer 2, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4.",
                "A ONE-SHOT EXCHANGE DESIGN The description of ICE is broken down into two sections: one-shot (sealed-bid) and iterative.",
                "In this section we abstract away the iterative aspect and introduce a specialization of the tree-based language that supports only exact values on nodes. 4.1 Tree-Based Bidding Language The bidding language is designed to be expressive and concise, entirely symmetric with respect to <br>buyers and sellers</br>, and to extend to capture bids from mixed <br>buyers and sellers</br>, ranging from simple swaps to highly complex trades.",
                "Bids are expressed as annotated bid trees, and define a bidders value for all possible trades.",
                "The language defines changes in values on trades, with leaves annotated with traded items and nodes annotated with changes in values (either positive or negative).",
                "The main feature is that it has a general interval-choose logical operator on internal nodes, and that it defines careful semantics for propagating values within the tree.",
                "We illustrate the language on each of Examples 1-3 in Figure 2.",
                "The language has a tree structure, with trades on items defined on leaves and values annotated on nodes and leaves.",
                "The nodes have zero values where no value is indicated.",
                "Internal nodes are also labeled with interval-choose (IC) ranges.",
                "Given a trade, the semantics of the language define which nodes in the tree can be satisfied, or switched-on.",
                "First, if a child is on then its parent must be on.",
                "Second, if a parent node is on, then the number of children that are on must be within the IC range on the parent node.",
                "Finally, leaves in which the bidder is buying items can only be on if the items are provided in the trade.",
                "For instance, in Example 2 we can consider the efficient trade, and observe that in this trade all nodes in the trees of buyers 1 and 3 (and also the seller), but none of the nodes in the trees of buyers 2 and 4, can be on.",
                "On the other hand, in 251 the trade in which A goes to buyer 2 and D to buyer 4, then the root and appropriate leaf nodes can be on for buyers 2 and 4, but no nodes can be on for buyers 1 and 3.",
                "Given a trade there is often a number of ways to choose the set of satisfied nodes.",
                "The semantics of the language require that the nodes that maximize the summed value across satisfied nodes be activated.",
                "Consider bid tree Ti from bidder i.",
                "This defines nodes β ∈ Ti, of which some are leaves, Leaf (i) ⊆ Ti.",
                "Let Child(β) ⊆ Ti denote the children of a node β (that is not itself a leaf).",
                "All nodes except leaves are labeled with the interval-choose operator [IC x i (β), ICy i (β)].",
                "Every node is also labeled with a value, viβ ∈ ¡ .",
                "Each leaf β is labeled with a trade, qiβ ∈   m (i.e., leaves can define a bundled trade on more than one type of item.)",
                "Given a trade λi to bidder i, the interval-choose operators and trades on leaves define which nodes can be satisfied.",
                "There will often be a choice.",
                "Ties are broken to maximize value.",
                "Let satiβ ∈ {0, 1} denote whether node β is satisfied.",
                "Solution sati is valid given tree Ti and trade λi, written sati ∈ valid(Ti, λi), if and only if: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Child(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Leaf (i) (5) In words, a set of leaves can only be considered satisfied given trade λi if the total increase in quantity summed across all such leaves is covered by the trade, for all goods (Eq. 4).",
                "This works for sellers as well as buyers: for sellers a trade is negative and this requires that the total number of items indicated sold in the tree is at least the total number sold as defined in the trade.",
                "We also need upwards-propagation: any time a node other than the root is satisfied then its parent must be satisfied (by   β ∈Child(β) satiβ ≤ ICy i (β)satiβ in Eq. 5).",
                "Finally, we need downwards-propagation: any time an internal node is satisfied then the appropriate number of children must also be satisfied (Eq. 5).",
                "The total value of trade λi, given bid-tree Ti, is defined as: vi(Ti, λi) = max sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) The tree-based language generalizes existing languages.",
                "For instance: IC(2, 2) on a node with 2 children is equivalent to an AND operator; IC(1, 3) on a node with 3 children is equivalent to an OR operator; and IC(1, 1) on a node with 2 children is equivalent to an XOR operator.",
                "Similarly, the XOR/OR bidding languages can be directly expressed as a bid tree in our language.2 4.2 Winner Determination This section defines the winner determination problem, which is formulated as a MIP and solved in our implementation with a commercial solver.3 The solver uses branchand-bound search with dynamic cut generation and branching heuristics to solve large MIPs in economically feasible run times. 2 The OR* language is the OR language with dummy items to provide additional structure.",
                "OR* is known to be expressive and concise.",
                "However, it is not known whether OR* dominates XOR/OR in terms of conciseness [23]. 3 CPLEX, www.ilog.com In defining the MIP representation we are careful to avoid an XOR-based enumeration of all bundles.",
                "A variation on the WD problem is reused many times within the exchange, e.g. for column generation in pricing and for checking revealed preference.",
                "Given bid trees T = (T1, . . . , Tn) and initial allocation x0 , the mixed-integer formulation for WD is: WD(T, x0 ) : max λ,sat ¢ i ¢ β∈Ti viβ · satiβ s.t. (1), (2), satiβ ∈ {0, 1}, λij ∈   sati ∈ valid(Ti, λi), ∀i Some goods may go unassigned because free disposal is allowed within the clearing rules of winner determination.",
                "These items can be allocated back to agents that sold the items, i.e. for which λij < 0. 4.3 Computing Threshold Payments The Threshold payment rule is based on the payments in the Vickrey-Clarke-Groves (VCG) mechanism [15], which itself is truthful and efficient but does not satisfy budget balance.",
                "Budget-balance requires that the total payments to the exchange are equal to the total payments made by the exchange.",
                "In VCG, the payment paid by agent i is pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) where λ∗ is the efficient trade, V ∗ is the reported value of this trade, and V−i is the reported value of the efficient trade that would be implemented without bidder i.",
                "We call ∆vcg,i = V ∗ − V−i the VCG discount.",
                "For instance, in Example 1 pvcg,seller = −10 − (+10 − 0) = −20 and pvcg,buyer = +20 − (+10 − 0) = 10, and the exchange would run at a budget deficit of −20 + 10 = −10.",
                "The Threshold payment rule [24] determines budgetbalanced payments to minimize the maximal error across all agents to the VCG outcome.",
                "Definition 2.",
                "The Threshold payment scheme implements the efficient trade λ∗ given bids, and sets payments pthresh,i = ˆvi(λ∗ i ) − ∆i, where ∆ = (∆1, . . . , ∆n) is set to minimize maxi(∆vcg,i − ∆i) subject to ∆i ≤ ∆vcg,i and   i ∆i ≤ V ∗ (this gives budget-balance).",
                "Example 4.",
                "In Example 2, the VCG discounts are (9, 2, 0, 1, 0) to the seller and four buyers respectively, VCG payments are (−9, 4, 0, 2, 0) and the exchange runs at a deficit of -3.",
                "In Threshold, the discounts are (8, 1, 0, 0, 0) and the payments are (−8, 5, 0, 3, 0).",
                "This minimizes the worst-case error to VCG discounts across all budget-balanced payment schemes.",
                "Threshold payments are designed to minimize the maximal ex post incentive to manipulate.",
                "Krych [16] confirmed that Threshold promotes allocative efficiency in restricted and approximate Bayes-Nash equilibrium. 5.",
                "THE ICE DESIGN We are now ready to introduce the iterative combinatorial exchange (ICE) design.",
                "Several new components are introduced, relative to the design for the one-shot exchange.",
                "Rather than provide precise valuations, bidders can provide lower and upper valuations and revise this bid information across rounds.",
                "The exchange provides price-based feedback 252 to guide bidders in this process, and terminates with an efficient (or approximately-efficient) trade with respect to reported valuations.",
                "In each round t ∈ {0, 1, . . .} the current lower and upper bounds, vt and vt , are used to define a provisional valuation profile vα (the α-valuation), together with a provisional trade λt and provisional prices pt = (pt 1, . . . , pt m) on items.",
                "The α-valuation is a linear combination of the current upper and lower valuations, with αEFF ∈ [0, 1] chosen endogenously based on the closeness of the optimistic trade (at v) and the pessimistic trade (at v).",
                "Prices pt are used to inform an activity rule, and drive progress towards an efficient trade. 5.1 Upper and Lower Valuations The bidding language is extended to allow a bidder i to report a lower and upper value (viβ, viβ) on each node.",
                "These take the place of the exact value viβ defined in Section 4.1.",
                "Based on these labels, we can define the valuation functions vi(Ti, λi) and vi(Ti, λi), using the exact same semantics as in Eq. (6).",
                "We say that such a bid-tree is well-formed if viβ ≤ viβ for all nodes.",
                "The following lemma is useful: Lemma 1.",
                "Given a well-formed tree, T, then vi(Ti, λi) ≤ vi(Ti, λi) for all trades.",
                "Proof.",
                "Suppose there is some λi for which vi(Ti, λi) > vi(Ti, λi).",
                "Then, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ.",
                "But, this is a contradiction because the trade λ that defines vi(Ti, λi) is still feasible with upper bounds vi, and viβ ≥ viβ for all nodes β in a well-formed tree. 5.2 Price Feedback In each round, approximate competitive-equilibrium (CE) prices, pt = (pt 1, . . . , pt m), are determined.",
                "Given these provisional prices, the price on trade λi for bidder i is pt (λi) =   j≤m pt j · λij.",
                "Definition 3 (CE prices).",
                "Prices p∗ are competitive equilibrium prices if the efficient trade λ∗ is supported at prices p∗ , so that for each bidder: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) CE prices will not always exist and we will often need to compute approximate prices [5].",
                "We extend ideas due to Rassenti et al. [26], Kwasnica et al. [17] and Dunford et al. [12], and select approximate prices as follows: I: Accuracy.",
                "First, we compute prices that minimize the maximal error in the best-response constraints across all bidders.",
                "II: Fairness.",
                "Second, we break ties to prefer prices that minimize the maximal deviation from Threshold payments across all bidders.",
                "III: Balance.",
                "Third, we break ties to prefer prices that minimize the maximal price across all items.",
                "Taken together, these steps are designed to promote the informativeness of the prices in driving progress across rounds.",
                "In computing prices, we explain how to compute approximate (or otherwise) prices for structured bidding languages, and without enumerating all possible trades.",
                "For this, we adopt constraint generation to efficient handle an exponential number of constraints.",
                "Each step is described in detail below.",
                "I: Accuracy.",
                "We adopt a definition of price accuracy that generalizes the notions adopted in previous papers for unstructured bidding languages.",
                "Let λt denote the current provisional trade and suppose the provisional valuation is vα .",
                "To compute accurate CE prices, we consider: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j.",
                "This linear program (LP) is designed to find prices that minimize the worst-case error across all agents.",
                "From the definition of CE prices, it follows that CE prices would have δ = 0 as a solution to (9), at which point trade λt i would be in the best-response set of every agent (with λt i = ∅, i.e. no trade, for all agents with no surplus for trade at the prices.)",
                "Example 5.",
                "We can illustrate the formulation (9) on Example 2, assuming for simplicity that vα = v (i.e. truth).",
                "The efficient trade allocates AB to buyer 1 and CD to buyer 3.",
                "Accuracy will seek prices p(A), p(B), p(C) and p(D) to minimize the δ ≥ 0 required to satisfy constraints: p(A) + p(B) + p(C) + p(D) ≥ 0 (seller) p(A) + p(B) ≤ 6 + δ (buyer 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (buyer 2) p(C) + p(D) ≤ 3 (buyer 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (buyer 4) An optimal solution requires p(A) = p(B) = 10/3, with δ = 2/3, with p(C) and p(D) taking values such as p(C) = p(D) = 3/2.",
                "But, (9) has an exponential number of constraints (Eq. 10).",
                "Rather than solve it explicitly we use constraint generation [4] and dynamically generate a sufficient subset of constraints.",
                "Let   i denote a manageable subset of all possible feasible trades to bidder i.",
                "Then, a relaxed version of (9) (written ACC) is formulated by substituting (10) with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) where   i is a set of trades that are feasible for bidder i given the other bids.",
                "Fixing the prices p∗ , we then solve n subproblems (one for each bidder), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0 ), (12) to check whether solution (p∗ , δ∗ ) to ACC is feasible in problem (9).",
                "In R-WD(i) the objective is to determine a most preferred trade for each bidder at these prices.",
                "Let ˆλi denote the solution to R-WD(i).",
                "Check condition: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) and if this condition holds for all bidders i, then solution (p∗ , δ∗ ) is optimal for problem (9).",
                "Otherwise, trade ˆλi is added to   i for all bidders i for which this constraint is 253 violated and we re-solve the LP with the new set of constraints.4 II: Fairness.",
                "Second, we break remaining ties to prefer fair prices: choosing prices that minimize the worst-case error with respect to Threshold payoffs (i.e. utility to bidders with Threshold payments), but without choosing prices that are less accurate.5 Example 6.",
                "For example, accuracy in Example 1 (depicted in Figure 1) requires 12 ≤ pA +pB ≤ 16 (for vα = v).",
                "At these valuations the Threshold payoffs would be 2 to both the seller and the buyer.",
                "This can be exactly achieved in pricing with pA + pB = 14.",
                "The fairness tie-breaking method is formulated as the following LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution, from ACC.",
                "The objective here is the same as in the Threshold payment rule (see Section 4.3): minimize the maximal error between bidder payoff (at vα ) for the provisional trade and the VCG payoff (at vα ).",
                "Problem FAIR is also solved through constraint generation, using R-WD(i) to add additional violated constraints as necessary.",
                "III: Balance.",
                "Third, we break remaining ties to prefer balanced prices: choosing prices that minimize the maximal price across all items.",
                "Returning again to Example 1, depicted in Figure 1, we see that accuracy and fairness require p(A) + p(B) = 14.",
                "Finally, balance sets p(A) = p(B) = 7.",
                "Balance is justified when, all else being equal, items are more likely to have similar than dissimilar values.6 The LP for balance is formulated as follows: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution from ACC and π∗ represents the error in the optimal solution from FAIR.",
                "Constraint generation is also used to solve BAL, generating new trades for   i as necessary. 4 Problem R-WD(i) is a specialization of the WD problem, in which the objective is to maximize the payoff of a single bidder, rather than the total value across all bidders.",
                "It is solved as a MIP, by rewriting the objective in WD(T, x0 ) as max{viβ · satiβ −   j p∗ j · λij } for agent i.",
                "Thus, the structure of the bid-tree language is exploited in generating new constraints, because this is solved as a concise MIP.",
                "The other bidders are kept around in the MIP (but do not appear in the objective), and are used to define the space of feasible trades. 5 The methods of Dunford et al. [12], that use a nucleolus approach, are also closely related. 6 The use of balance was advocated by Kwasnica et al. [17].",
                "Dunford et al. [12] prefer to smooth prices across rounds.",
                "Comment 1: Lexicographical Refinement.",
                "For all three sub-problems we also perform lexicographical refinement (with respect to bidders in ACC and FAIR, and with respect to goods in BAL).",
                "For instance, in ACC we successively minimize the maximal error across all bidders.",
                "Given an initial solution we first pin down the error on all bidders for whom a constraint (11) is binding.",
                "For such a bidder i, the constraint is replaced with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) and the error to bidder i no longer appears explicitly in the objective.",
                "ACC is then re-solved, and makes progress by further minimizing the maximal error across all bidders yet to be pinned down.",
                "This continues, pinning down any new bidders for whom one of constraints (11) is binding, until the error is lexicographically optimized for all bidders.7 The exact same process is repeated for FAIR and BAL, with bidders pinned down and constraints (15) replaced with π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (where π∗ i is the current objective) in FAIR, and items pinned down and constraints (18) replaced with p∗ j ≥ pj (where p∗ j represents the target for the maximal price on that item) in BAL.",
                "Comment 2: Computation.",
                "All constraints in   i are retained, and this set grows across all stages and across all rounds of the exchange.",
                "Thus, the computational effort in constraint generation is re-used.",
                "In implementation we are careful to address a number of -issues that arise due to floating-point issues.",
                "We prefer to err on the side of being conservative in determining whether or not to add another constraint in performing check (13).",
                "This avoids later infeasibility issues.",
                "In addition, when pinning-down bidders for the purpose of lexicographical refinement we relax the associated bidder-constraints with a small > 0 on the righthand side. 5.3 Revealed-Preference Activity Rules The role of activity rules in the auction is to ensure both consistency and progress across rounds [21].",
                "Consistency in our exchange requires that bidders tighten bounds as the exchange progresses.",
                "Activity rules ensure that bidders are active during early rounds, and promote useful elicitation throughout the exchange.",
                "We adopt a simple revealed-preference (RP) activity rule.",
                "The idea is loosely based around the RP-rule in Ausubel et al. [1], where it is used for one-sided CAs.",
                "The motivation is to require more than simply consistency: we need bidders to provide enough information for the system to be able to to prove that an allocation is (approximately) efficient.",
                "It is helpful to think about the bidders interacting with proxy agents that will act on their behalf in responding to provisional prices pt−1 determined at the end of round t − 1.",
                "The only knowledge that such a proxy has of the valuation of a bidder is through the bid-tree.",
                "Suppose a proxy was queried by the exchange and asked which trade the bidder was most interested in at the provisional prices.",
                "The RP rule says the following: the proxy must have enough 7 For example, applying this to accuracy on Example 2 we solve once and find bidders 1 and 2 are binding, for error δ∗ = 2/3.",
                "We pin these down and then minimize the error to bidders 3 and 4.",
                "Finally, this gives p(A) = p(B) = 10/3 and p(C) = p(D) = 5/3, with accuracy 2/3 to bidders 1 and 2 and 1/3 to bidders 3 and 4. 254 information to be able to determine this surplus-maximizing trade at current prices.",
                "Consider the following examples: Example 7.",
                "A bidder has XOR(+A, +B) and a value of +5 on the leaf +A and a value range of [5,10] on leaf +B.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the proxy knows that however the remaining value uncertainty on +B is resolved the bidder will always (weakly) prefer +B to +A.",
                "Example 8.",
                "A bidder has XOR(+A, +B) and value bounds [5, 10] on the root node and a value of 1 on leaf +A.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the bidder will always prefer +A to +B at equal prices, whichever way the uncertain value on the root node is ultimately resolved.",
                "Overloading notation, let vi ∈ Ti denote a valuation that is consistent with lower and upper valuations in bid tree Ti.",
                "Definition 4.",
                "Bid tree Ti satisfies RP at prices pt−1 if and only if there exists some feasible trade L∗ for which, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. (20) To make this determination for bidder i we solve a sequence of problems, each of which is a variation on the WD problem.",
                "First, we construct a candidate lower-bound trade, which is a feasible trade that solves: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) The solution π∗ l to RP1(i) represents the maximal payoff that bidder i can achieve across all feasible trades, given its pessimistic valuation.",
                "Second, we break ties to find a trade with maximal value uncertainty across all possible solutions to RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] s.t. λ ∈ Feas(x0 ) (22) vi(λi) − pt−1 (λi) ≥ π∗ l (23) We adopt solution L∗ i as our candidate for the trade that may satisfy RP.",
                "To understand the importance of this tiebreaking rule consider Example 7.",
                "The proxy can prove +B but not +A is a best-response for all vi ∈ Ti, and should choose +B as its candidate.",
                "Notice that +B is a counterexample to +A, but not the other way round.",
                "Now, we construct a modified valuation ˜vi, by setting ˜viβ =   viβ , if β ∈ sat(L∗ i ) viβ , otherwise. (24) where sat(L∗ i ) is the set of nodes that are satisfied in the lower-bound tree for trade L∗ i .",
                "Given this modified valuation, we find U∗ to solve: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Let π∗ u denote the payoff from this optimal trade at modified values ˜v.",
                "We call trade U∗ i the witness trade.",
                "We show in Proposition 1 that the RP rule is satisfied if and only if π∗ l ≥ π∗ u. Constructing the modified valuation as ˜vi recognizes that there is shared uncertainty across trades that satisfy the same nodes in a bid tree.",
                "Example 8 helps to illustrate this.",
                "Just using vi in RP3(i), we would find L∗ i is buy A with payoff π∗ l = 3 but then find U∗ i is buy B with π∗ u = 7 and fail RP.",
                "We must recognize that however the uncertainty on the root node is resolved it will affect +A and +B in exactly the same way.",
                "For this reason, we set ˜viβ = viβ = 5 on the root node, which is exactly the same value that was adopted in determining π∗ l .",
                "Then, RP3(i) applied to U∗ i gives buy A and the RP test is judged to be passed.",
                "Proposition 1.",
                "Bid tree Ti satisfies RP given prices pt−1 if and only if any lower-bound trade L∗ i that solves RP1(i) and RP2(i) satisfies: vi(Ti, L∗ i ) − pt−1 (L∗ i ) ≥ ˜vi(Ti, U∗ i ) − pt−1 (U∗ i ), (26) where ˜vi is the modified valuation in Eq. (24).",
                "Proof.",
                "For sufficiency, notice that the difference in payoff between trade L∗ i and another trade λi is unaffected by the way uncertainty is resolved on any node that is satisfied in both L∗ i and λi.",
                "Fixing the values in ˜vi on nodes satisfied in L∗ i has the effect of removing this consideration when a trade U∗ i is selected that satisfies one of these nodes.",
                "On the other hand, fixing the values on these nodes has no effect on trades considered in RP3(i) that do not share a node with L∗ i .",
                "For the necessary direction, we first show that any trade that satisfies RP must solve RP1(i).",
                "Suppose otherwise, that some λi with payoff greater than π∗ l satisfies RP.",
                "But, valuation vi ∈ Ti together with L∗ i presents a counterexample to RP (Eq. 20).",
                "Now, suppose (for contradiction) that some λi with maximal payoff π∗ l but uncertainty less than L∗ i satisfies RP.",
                "Proceed by case analysis.",
                "Case a): only one solution to RP1(i) has uncertain value and so λi has certain value.",
                "But, this cannot satisfy RP because L∗ i with uncertain value would be a counterexample to RP (Eq. 20).",
                "Case b): two or more solutions to RP1(i) have uncertain value.",
                "Here, we first argue that one of these trades must satisfy a (weak) superset of all the nodes with uncertain value that are satisfied by all other trades in this set.",
                "This is by RP.",
                "Without this, then for any choice of trade that solves RP1(i), there is another trade with a disjoint set of uncertain but satisfied nodes that provides a counterexample to RP (Eq. 20).",
                "Now, consider the case that some trade contains a superset of all the uncertain satisfied nodes of the other trades.",
                "Clearly RP2(i) will choose this trade, L∗ i , and λi must satisfy a subset of these nodes (by assumption).",
                "But, we now see that λi cannot satisfy RP because L∗ i would be a counterexample to RP.",
                "Failure to meet the activity rule must have some consequence.",
                "In the current rules, the default action we choose is to set the upper bounds in valuations down to the maximal value of the provisional price on a node8 and the lowerbound value on that node.9 Such a bidder can remain active 8 The provisional price on a node is defined as the minimal total price across all feasible trades for which the subtree rooted at the tree is satisfied. 9 This is entirely analogous to when a bidder in an ascending clock auction stops bidding at a price: she is not permitted to bid at a higher price again in future rounds. 255 within the exchange, but only with valuations that are consistent with these new bounds. 5.4 Bidder Feedback In each round, our default design provides every bidder with the provisional trade and also with the current provisional prices.",
                "See 7 for an additional discussion.",
                "We also provide guidance to help a bidder meet the RP rule.",
                "Let sat(L∗ i ) and sat(U∗ i ) denote the nodes that are satisfied in trades L∗ i and U∗ i , as computed in RP1-RP3.",
                "Lemma 2.",
                "When RP fails, a bidder must increase a lower bound on at least one node in sat(L∗ i ) \\ sat(U∗ i ) or decrease an upper bound on at least one node in sat(U∗ i ) \\ sat(L∗ i ) in order to meet the activity rule.",
                "Proof.",
                "Changing the upper- or lower- values on nodes that are not satisfied by either trade does not change L∗ i or U∗ i , and does not change the payoff from these trades.",
                "Thus, the RP condition will continue to fail.",
                "Similarly, changing the bounds on nodes that are satisfied in both trades has no effect on revealed preference.",
                "A change to a lower bound on a shared node affects both L∗ i and U∗ i identically because of the use of the modified valuation to determine U∗ i .",
                "A change to an upper bound on a shared node has no effect in determining either L∗ i or U∗ i .",
                "Note that when sat(U∗ i ) = sat(L∗ i ) then condition (26) is always trivially satisfied, and so the guidance in the lemma is always well-defined when RP fails.",
                "This is an elegant feedback mechanism because it is adaptive.",
                "Once a bidder makes some changes on some subset of these nodes, the bidder can query the exchange.",
                "The exchange can then respond yes, or can revise the set of nodes sat(λ∗ l ) and sat(λ∗ u) as necessary. 5.5 Termination Conditions Once each bidder has committed its new bids (and either met the RP rule or suffered the penalty) then round t closes.",
                "At this point, the task is to determine the new α-valuation, and in turn the provisional allocation λt and provisional prices pt .",
                "A termination condition is also checked, to determine whether to move the exchange to a last-and-final round.",
                "To define the α-valuation we compute the following two quantities: Pessimistic at Pessimistic (PP) Determine an efficient trade, λ∗ l , at pessimistic values, i.e. to solve maxλ   i vi(λi), and set PP=  i vi(λ∗ li).",
                "Pessimistic at Optimistic (PO) Determine an efficient trade, λ∗ u, at optimistic values, i.e. to solve maxλ   i vi(λi), and set PO=  i vi(λ∗ ui).",
                "First, note that PP ≥ PO and PP ≥ 0 by definition, for all bid-trees, although PO can be negative (because the right trade at v is not currently a useful trade at v).",
                "Recognizing this, define γeff (PP, PO) = 1 + PP − PO PP , (27) when PP > 0, and observe that γeff (PP, PO) ≥ 1 when this is defined, and that γeff (PP, PO) will start large and then trend towards 1 as the optimistic allocation converges towards the pessimistic allocation.",
                "In each round, we define αeff ∈ [0, 1] as: αeff =   0 when PP is 0 1/γeff otherwise (28) which is 0 while PP is 0 and then trends towards 1 once PP> 0 in some round.",
                "This is used to define α-valuation vα i = αeff vi + (1 − αeff )vi, ∀i, (29) which is used to define the provisional allocation and provisional prices.",
                "The effect is to endogenously define a schedule for moving from optimistic to pessimistic values across rounds, based on how close the trades are to one another.",
                "Termination Condition.",
                "In moving to the last-and-final round, and finally closing, we also care about the convergence of payments, in addition to the convergence towards an efficient trade.",
                "For this we introduce another parameter, αthresh ∈ [0, 1], that trends from 0 to 1 as the Threshold payments at lower and upper valuations converge.",
                "Consider the following parameter: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive) , (30) which is defined for PP > 0, where pthresh(v) denotes the Threshold payments at valuation profile v, Nactive is the number of bidders that are actively engaged in trade in the PP trade, and || · ||2 is the L2-norm.",
                "Note that γthresh is defined for payments and not payoffs.",
                "This is appropriate because it is the accuracy of the outcome of the exchange that matters: i.e. the trade and the payments.",
                "Given this, we define αthresh =   0 when PP is 0 1/γthresh otherwise (31) which is 0 while PP is 0 and then trends towards 1 as progress is made.",
                "Definition 5 (termination).",
                "ICE transitions to a lastand-final round when one of the following holds: 1. αeff ≥ CUTOFFeff and αthresh ≥ CUTOFFthresh, 2. there is no trade at the optimistic values, where CUTOFFeff , CUTOFFthresh ∈ (0, 1] determine the accuracy required for termination.",
                "At the end of the last-and-final round vα = v is used to define the final trade and the final Threshold payments.",
                "Example 9.",
                "Consider again Example 1, and consider the upper and lower bounds as depicted in Figure 1.",
                "First, if the sellers bounds were [−20, −4] then there is an optimistic trade but no pessimistic trade, and PO = −4 and PP = 0, and αeff = 0.",
                "At the bounds depicted, both the optimistic and the pessimistic trades occur and PO = PP = 4 and αeff = 1.",
                "However, we can see the Threshold payments are (17, −17) at v but (14, −14) at v. Evaluating γthresh , we have γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, and αthresh = 2/5.",
                "For CUTOFFthresh < 2/5 the exchange would remain open.",
                "On the other hand, if the buyers value for +AB was between [18, 24] and the sellers value for −AB was between [−12, −6], the Threshold payments are (15, −15) at both upper and lower bounds, and αthresh = 1. 256 Component Purpose Lines Agent.",
                "Captures strategic behavior and information revelation decisions 762 Model Support Provides XML support to load goods and valuations into world 200 World Keeps track of all agent, good, and valuation details 998 Exchange Driver & Communication Controls exchange, and coordinates remote agent behavior 585 Bidding Language Implements the tree-based bidding language 1119 Activity Rule Engine Implements the revealed preference rule with range support 203 Closing Rule Engine Checks if auction termination condition reached 137 WD Engine Provides WD-related logic 377 Pricing Engine Provides Pricing-related logic 460 MIP Builders Translates logic used by engines into our general optimizer formulation 346 Pricing Builders Used by three pricing stages 256 Winner Determination Builders Used by WD, activity rule, closing rule, and pricing constraint generation 365 Framework Support code; eases modular replacement of above components 510 Table 1: Exchange Component and Code Breakdown. 6.",
                "SYSTEMS INFRASTRUCTURE ICE is approximately 6502 lines of Java code, broken up into the functional packages described in Table 1.10 The prototype is modular so that researchers may easily replace components for experimentation.",
                "In addition to the core exchange discussed in this paper, we have developed an agent component that allows a user to simulate the behavior and knowledge of other players in the system, better allowing a user to formulate their strategy in advance of actual play.",
                "A user specifies a valuation model in an XMLinterpretation of our bidding language, which is revealed to the exchange via the agents strategy.",
                "Major exchange tasks are handled by engines that dictate the non-optimizer specific logic.",
                "These engines drive the appropriate MIP/LP builders.",
                "We realized that all of our optimization formulations boil down to two classes of optimization problem.",
                "The first, used by winner determination, activity rule, closing rule, and constraint generation in pricing, is a MIP that finds trades that maximize value, holding prices and slacks constant.",
                "The second, used by the three pricing stages, is an LP that holds trades constant, seeking to minimize slack, profit, or prices.",
                "We take advantage of the commonality of these problems by using common LP/MIP builders that differ only by a few functional hooks to provide the correct variables for optimization.",
                "We have generalized our back-end optimization solver interface11 (we currently support CPLEX and the LGPL- licensed LPSolve), and can take advantage of the load-balancing and parallel MIP/LP solving capability that this library provides. 7.",
                "DISCUSSION The bidding language was defined to allow for perfect symmetry between <br>buyers and sellers</br> and provide expressiveness in an exchange domain, for instance for mixed bidders interested in executing trades such as swaps.",
                "This proved especially challenging.",
                "The breakthrough came when we focused on changes in value for trades rather than providing absolute values for allocations.",
                "For simplicity, we require the same tree structure for both the upper and lower valuations. 10 Code size is measured in physical source line of code (SLOC), as generated using David A. Wheelers SLOC Count.",
                "The total of 6502 includes 184 for instrumentation (not shown in the table).",
                "The JOpt solver interface is another 1964 lines, and Castor automatically generates around 5200 lines of code for XML file manipulation. 11 http://econcs.eecs.harvard.edu/jopt This allows the language itself to ensure consistency (with the upper value at least the lower value on all trades) and enforce monotonic tightening of these bounds for all trades across rounds.",
                "It also provides for an efficient method to check the RP activity rule, because it makes it simple to reason about shared uncertainty between trades.",
                "The decision to adopt a direct and proxied approach in which bidders express their upper and lower values to a trusted proxy agent that interacts with the exchange was made early in the design process.",
                "In many ways this is the clearest and most immediate way to generalize the design in Parkes et al. [24] and make it iterative.",
                "In addition, this removes much opportunity for strategic manipulation: bidders are restricted to making (incremental) statements about their valuations.",
                "Another advantage is that it makes the activity rule easy to explain: bidders can always meet the activity rule by tightening bounds such that their true value remains in the support.12 Perhaps most importantly, having explicit information on upper and lower values permits progress in early rounds, even while there is no efficient trade at pessimistic values.",
                "Upper and lower bound information also provides guidance about when to terminate.",
                "Note that taken by itself, PP = PO does not imply that the current provisional trade is efficient with respect to all values consistent with current value information.",
                "The difference in values between different trades, aggregated across all bidders, could be similar at lower and upper bounds but quite different at intermediate values (including truth).",
                "Nevertheless, we conjecture that PP = PO will prove an excellent indicator of efficiency in practical settings where the shape of the upper and lower valuations does convey useful information.",
                "This is worthy of experimental investigation.",
                "Moreover, the use of price and RP activity provides additional guarantees.",
                "We adopted linear prices (prices on individual items) rather than non-linear prices (with prices on a trade not equal to the sum of the prices on the component items) early in the design process.",
                "The conciseness of this price representation is very important for computational tractability within the exchange and also to promote simplicity and transparency for bidders.",
                "The RP activity rule was adopted later, and is a good choice because of its excellent theoretical properties when coupled with CE prices.",
                "The following can be easily established: given exact CE prices pt−1 for provisional trade 12 This is in contrast to indirect price-based approaches, such as clock-proxy [1], in which bidders must be able to reason about the RP-constraints implied by bids in each round. 257 λt−1 at valuations vα , then if the upper and lower values at the start of round t already satisfy the RP rule (and without the need for any tie-breaking), the provisional trade is efficient for all valuations consistent with the current bid trees.",
                "When linear CE prices exist, this provides for a soundness and completeness statement: if PP = PO, linear CE prices exist, and the RP rule is satisfied, the provisional trade is efficient (soundness); if prices are exact CE prices for the provisional trade at vα , but the trade is inefficient with respect to some valuation profile consistent with the current bid trees, then at least one bidder must fail RP with her current bid tree and progress will be made (completeness).",
                "Future work must study convergence experimentally, and extend this theory to allow for approximate prices.",
                "Some strategic aspects of our ICE design deserve comment, and further study.",
                "First, we do not claim that truthfully responding to the RP rule is an ex post equilibrium.13 However, the exchange is designed to mimic the Threshold rule in its payment scheme, which is known to have useful incentive properties [16].",
                "We must be careful, though.",
                "For instance we do not suggest to provide αeff to bidders, because as αeff approaches 1 it would inform bidders that bid values are becoming irrelevant to determining the trade but merely used to determine payments (and bidders would become increasingly reluctant to increase their lower valuations).",
                "Also, no consideration has been given in this work to collusion by bidders.",
                "This is an issue that deserves some attention in future work. 8.",
                "CONCLUSIONS In this work we designed and prototyped a scalable and highly-expressive iterative combinatorial exchange.",
                "The design includes many interesting features, including: a new bid-tree language for exchanges, a new method to construct approximate linear prices from expressive languages, and a proxied elicitation method with optimistic and pessimistic valuations with a new method to evaluate a revealed- preference activity rule.",
                "The exchange is fully implemented in Java and is in a validation phase.",
                "The next steps for our work are to allow bidders to refine the structure of the bid tree in addition to values on the tree.",
                "We intend to study the elicitation properties of the exchange and we have put together a test suite of exchange problem instances.",
                "In addition, we are beginning to engage in collaborations to apply the design to airline takeoff and landing slot scheduling and to resource allocation in widearea network distributed computational systems.",
                "Acknowledgments We would like to dedicate this paper to all of the participants in CS 286r at Harvard University in Spring 2004.",
                "This work is supported in part by NSF grant IIS-0238147. 9.",
                "REFERENCES [1] L. Ausubel, P. Cramton, and P. Milgrom.",
                "The clock-proxy auction: A practical combinatorial auction design.",
                "In Cramton et al. [9], chapter 5. [2] M. Babaioff, N. Nisan, and E. Pavlov.",
                "Mechanisms for a spatially distributed market.",
                "In Proc. 5th ACM Conf. on Electronic Commerce, pages 9-20.",
                "ACM Press, 2001. 13 Given the Myerson-Satterthwaite impossibility theorem [22] and the method by which we determine the trade we should not expect this. [3] M. Ball, G. Donohue, and K. Hoffman.",
                "Auctions for the safe, efficient, and equitable allocation of airspace system resources.",
                "In S. Cramton, Shoham, editor, Combinatorial Auctions. 2004.",
                "Forthcoming. [4] D. Bertsimas and J. Tsitsiklis.",
                "Introduction to Linear Optimization.",
                "Athena Scientific, 1997. [5] S. Bikhchandani and J. M. Ostroy.",
                "The package assignment model.",
                "Journal of Economic Theory, 107(2):377-406, 2002. [6] C. Boutilier.",
                "A pomdp formulation of preference elicitation problems.",
                "In Proc. 18th National Conference on Artificial Intelligence (AAAI-02), 2002. [7] C. Boutilier and H. Hoos.",
                "Bidding languages for combinatorial auctions.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), 2001. [8] W. Conen and T. Sandholm.",
                "Preference elicitation in combinatorial auctions.",
                "In Proc. 3rd ACM Conf. on Electronic Commerce (EC-01), pages 256-259.",
                "ACM Press, New York, 2001. [9] P. Cramton, Y. Shoham, and R. Steinberg, editors.",
                "Combinatorial Auctions.",
                "MIT Press, 2004. [10] S. de Vries, J. Schummer, and R. V. Vohra.",
                "On ascending Vickrey auctions for heterogeneous objects.",
                "Technical report, MEDS, Kellogg School, Northwestern University, 2003. [11] S. de Vries and R. V. Vohra.",
                "Combinatorial auctions: A survey.",
                "Informs Journal on Computing, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana, and T. Wilson.",
                "Testing linear pricing algorithms for use in ascending combinatorial auctions.",
                "Technical report, SEOR, George Mason University, 2003. [13] Y. Fu, J.",
                "Chase, B. Chun, S. Schwab, and A. Vahdat.",
                "Sharp: an architecture for secure resource peering.",
                "In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 133-148.",
                "ACM Press, 2003. [14] B. Hudson and T. Sandholm.",
                "Effectiveness of query types and policies for preference elicitation in combinatorial auctions.",
                "In Proc. 3rd Int.",
                "Joint.",
                "Conf. on Autonomous Agents and Multi Agent Systems, pages 386-393, 2004. [15] V. Krishna.",
                "Auction Theory.",
                "Academic Press, 2002. [16] D. Krych.",
                "Calculation and analysis of Nash equilibria of Vickrey-based payment rules for combinatorial exchanges, Harvard College, April 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter, and C. DeMartini.",
                "A new and improved design for multi-object iterative auctions.",
                "Management Science, 2004.",
                "To appear. [18] E. Kwerel and J. Williams.",
                "A proposal for a rapid transition to market allocation of spectrum.",
                "Technical report, FCC Office of Plans and Policy, Nov 2002. [19] S. M. Lahaie and D. C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In Proc.",
                "ACM Conf. on Electronic Commerce, pages 180-188, 2004. [20] R. P. McAfee.",
                "A dominant strategy double auction.",
                "J. of Economic Theory, 56:434-450, 1992. [21] P. Milgrom.",
                "Putting auction theory to work: The simultaneous ascending auction.",
                "J.Pol.",
                "Econ., 108:245-272, 2000. [22] R. B. Myerson and M. A. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [23] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. 2nd ACM Conf. on Electronic Commerce (EC-00), pages 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), pages 1161-1168, 2001. [25] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, July 2000. [26] S. J. Rassenti, V. L. Smith, and R. L. Bulfin.",
                "A combinatorial mechanism for airport time slot allocation.",
                "Bell Journal of Economics, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc, and R. M. Harstad.",
                "Computationally manageable combinatorial auctions.",
                "Management Science, 44(8):1131-1147, 1998. [28] T. Sandholm and C. Boutilier.",
                "Preference elicitation in combinatorial auctions.",
                "In Cramton et al. [9], chapter 10. [29] P. R. Wurman and M. P. Wellman.",
                "AkBA: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, pages 21-29, 2000. 258"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En una doble subasta (DA), múltiples unidades comerciales de \"compradores y vendedores\" de un bien idéntico [20].",
                "Un intercambio combinatorio (CE) [24] es una subasta doble combinatoria que reúne a múltiples \"compradores y vendedores\" para intercambiar múltiples productos heterogéneos.",
                "A diferencia de una CA, un CE permite la propiedad fragmentada, con múltiples \"compradores y vendedores\" y agentes que están comprando y vendiendo.",
                "En esta sección abstrae el aspecto iterativo e introducimos una especialización del lenguaje basado en árboles que respalda solo valores exactos en los nodos.4.1 Lenguaje de licitación basado en árboles El lenguaje de licitación está diseñado para ser expresivo y conciso, completamente simétrico con respecto a los \"compradores y vendedores\", y para extenderse para capturar ofertas de \"compradores y vendedores\" mixtos, que van desde swaps simples hasta comercios altamente complejos.",
                "Discusión El lenguaje de licitación se definió para permitir una simetría perfecta entre \"compradores y vendedores\" y proporcionar expresividad en un dominio de intercambio, por ejemplo, para los licitadores mixtos interesados en ejecutar operaciones como swaps."
            ],
            "translated_text": "",
            "candidates": [
                "Compradores y vendedores",
                "compradores y vendedores",
                "Compradores y vendedores",
                "compradores y vendedores",
                "Compradores y vendedores",
                "compradores y vendedores",
                "Compradores y vendedores",
                "compradores y vendedores",
                "compradores y vendedores",
                "Compradores y vendedores",
                "compradores y vendedores"
            ],
            "error": []
        },
        "trade": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "ICE: An Iterative Combinatorial Exchange David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an iterative combinatorial exchange (ICE).",
                "The exchange incorporates a tree-based bidding language that is concise and expressive for CEs.",
                "Bidders specify lower and upper bounds on their value for different trades.",
                "These bounds allow price discovery and useful preference elicitation in early rounds, and allow termination with an efficient <br>trade</br> despite partial information on bidder valuations.",
                "All computation in the exchange is carefully optimized to exploit the structure of the bid-trees and to avoid enumerating trades.",
                "A proxied interpretation of a revealedpreference activity rule ensures progress across rounds.",
                "A VCG-based payment scheme that has been shown to mitigate opportunities for bargaining and strategic behavior is used to determine final payments.",
                "The exchange is fully implemented and in a validation phase.",
                "Categories and Subject Descriptors: I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Combinatorial exchanges combine and generalize two different mechanisms: double auctions and combinatorial auctions.",
                "In a double auction (DA), multiple buyers and sellers <br>trade</br> units of an identical good [20].",
                "In a combinatorial auction (CA), a single seller has multiple heterogeneous items up for sale [11].",
                "Buyers may have complementarities or substitutabilities between goods, and are provided with an expressive bidding language.",
                "A common goal in both market designs is to determine the efficient allocation, which is the allocation that maximizes total value.",
                "A combinatorial exchange (CE) [24] is a combinatorial double auction that brings together multiple buyers and sellers to <br>trade</br> multiple heterogeneous goods.",
                "For example, in an exchange for wireless spectrum, a bidder may declare that she is willing to pay $1 million for a <br>trade</br> where she obtains licenses for New York City, Boston, and Philadelphia, and loses her license for Washington DC.",
                "Thus, unlike a DA, a CE allows all participants to express complex valuations via expressive bids.",
                "Unlike a CA, a CE allows for fragmented ownership, with multiple buyers and sellers and agents that are both buying and selling.",
                "CEs have received recent attention both in the context of wireless spectrum allocation [18] and for airport takeoff and landing slot allocation [3].",
                "In both of these domains there are incumbents with property rights, and it is important to facilitate a complex multi-way reallocation of resources.",
                "Another potential application domain for CEs is to resource allocation in shared distributed systems, such as PlanetLab [13].",
                "The instantiation of our general purpose design to specific domains is a compelling next step in our research.",
                "This paper presents the first design for an iterative combinatorial exchange (ICE).",
                "The genesis of this project was a class, CS 286r Topics at the Interface between Economics and Computer Science, taught at Harvard University in Spring 2004.1 The entire class was dedicated to the design and prototyping of an iterative CE.",
                "The ICE design problem is multi-faceted and quite hard.",
                "The main innovation in our design is an expressive yet concise tree-based bidding language (which generalizes known languages such as XOR/OR [23]), and the tight coupling of this language with efficient algorithms for price-feedback to guide bidding, winner-determination to determine trades, and revealed-preference activity rules to ensure progress across rounds.",
                "The exchange is iterative: bidders express upper and lower valuations on trades by annotating their bid-tree, and then tighten these bounds in response to price feedback in each round.",
                "The Threshold payment rule, introduced by Parkes et al. [24], is used to determine final payments.",
                "The exchange has a number of interesting theoretical properties.",
                "For instance, when there exist linear prices we establish soundness and completeness: for straightforward bidders that adjust their bounds to meet activity rules while keeping their true value within the bounds, the exchange will terminate with the efficient allocation.",
                "In addition, the 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Truth Agent Act Rule WD ACC FAIR BALClosing RuleVickreyThreshold DONE !",
                "DONE 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER 2,2 +A +15 +8 +B +15 +8 BUYER 2,2 -A -2 -6 -B -2 -6 SELLER BUYER, buy AB SELLER, sell AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PBUYER = 16 - (4-0) = 12 PSELLER = -12 - (4-0) = -16 PBUYER = 14 PSELLER = -14 Pessim istic O ptim istic = 1 Figure 1: ICE System Flow of Control efficient allocation can often be determined without bidders revealing, or even knowing, their exact value for all trades.",
                "This is essential in complex domains where the valuation problem can itself be very challenging for a participant [28].",
                "While we cannot claim that straightforward bidding is an equilibrium of the exchange (and indeed, should not expect to by the Myerson-Satterthwaite impossibility theorem [22]), the Threshold payment rule minimizes the ex post incentive to manipulate across all budget-balanced payment rules.",
                "The exchange is implemented in Java and is currently in validation.",
                "In describing the exchange we will first provide an overview of the main components and introduce several working examples.",
                "Then, we introduce the basic components for a simple one-shot variation in which bidders state their exact values for trades in a single round.",
                "We then describe the full iterative exchange, with upper and lower values, price-feedback, activity rules, and termination conditions.",
                "We state some theoretical properties of the exchange, and end with a discussion to motivate our main design decisions, and suggest some next steps. 2.",
                "AN OVERVIEW OF THE ICE DESIGN The design has four main components, which we will introduce in order through the rest of the paper: • Expressive and concise tree-based bidding language.",
                "The language describes values for trades, such as my value for selling AB and buying C is $100, or my value for selling ABC is -$50, with negative values indicating that a bidder must receive a payment for the <br>trade</br> to be acceptable.",
                "The language allows bidders to express upper and lower bounds on value, which can be tightened across rounds. • Winner Determination.",
                "Winner-determination (WD) is formulated as a mixed-integer program (MIP), with the structure of the bid-trees captured explicitly in the formulation.",
                "Comparing the solution at upper and lower values allows for a determination to be made about termination, with progress in intermediate rounds driven by an intermediate valuation and the lower values adopted on termination. • Payments.",
                "Payments are computed using the Threshold payment rule [24], with the intermediate valuations adopted in early rounds and lower values adopted on termination. • Price feedback.",
                "An approximate price is computed for each item in the exchange in each round, in terms of the intermediate valuations and the provisional <br>trade</br>.",
                "The prices are optimized to approximate competitive equilibrium prices, and further optimized to best approximate the current Threshold payments with remaining ties broken to favor prices that are balanced across different items.",
                "In computing the prices, we adopt the methods of constraint-generation to exploit the structure of the bidding language and avoid enumerating all feasible trades.",
                "The subproblem to generate new constraints is a variation of the WD problem. • Activity rule.",
                "A revealed-preference activity rule [1] ensures progress across rounds.",
                "In order to remain active, a bidder must tighten bounds so that there is enough information to define a <br>trade</br> that maximizes surplus at the current prices.",
                "Another variation on the WD problem is formulated, both to verify that the activity rule is met and also to provide feedback to a bidder to explain how to meet the rule.",
                "An outline of the ICE system flow of control is provided in Figure 1.",
                "We will return to this example later in the paper.",
                "For now, just observe in this two-agent example that the agents state lower and upper bounds that are checked in the activity rule, and then passed to winner-determination (WD), and then through three stages of pricing (accuracy, fairness, balance).",
                "On passing the closing rule (in which parameters αeff and αthresh are checked for convergence of the <br>trade</br> and payments), the exchange goes to a last-and-final round.",
                "At the end of this round, the <br>trade</br> and payments are finally determined, based on the lower valuations. 2.1 Related Work Many ascending-price one-sided CAs are known in the literature [10, 25, 29].",
                "Direct elicitation approaches have also been proposed for one-sided CAs in which agents respond to explicit queries about their valuations [8, 14, 19].",
                "A number of ascending CAs are designed to work with simple prices on items [12, 17].",
                "The price generation methods that we use in ICE generalize the methods in these earlier papers.",
                "Parkes et al. [24] studied sealed-bid combinatorial exchanges and introduced the Threshold payment rule.",
                "Subsequently, Krych [16] demonstrated experimentally that the Threshold rule promotes efficient allocations.",
                "We are not aware of any previous studies of iterative CEs.",
                "Dominant strategy DAs are known for unit demand [20] and also for single-minded agents [2].",
                "No dominant strategy mechanisms are known for the general CE problem.",
                "ICE is a hybrid auction design, in that it couples simple item prices to drive bidding in early rounds with combinatorial WD and payments, a feature it shares with the clock-proxy design of Ausubel et al. [1] for one-sided CAs.",
                "We adopt a variation on the clock-proxy auctionss revealedpreference activity rule.",
                "The bidding language shares some structural elements with the LGB language of Boutilier and Hoos [7], but has very different semantics.",
                "Rothkopf et al. [27] also describe a restricted tree-based bidding language.",
                "In LGB, the semantics are those of propositional logic, with the same items in an allocation able to satisfy a tree in multiple places.",
                "Although this can make LGB especially concise in some settings, the semantics that we propose appear to provide useful locality, so that the value of one component in a tree can be understood independently from the rest of the tree.",
                "The idea of capturing the structure of our bidding language explicitly within a mixed-integer programming formulation follows the developments in Boutilier [6]. 3.",
                "PRELIMINARIES In our model, we consider a set of goods, indexed {1, . . . , m} and a set of bidders, indexed {1, . . . , n}.",
                "The initial allocation of goods is denoted x0 = (x0 1, . . . , x0 n), with x0 i = (x0 i1, . . . , x0 im) and x0 ij ≥ 0 for good j indicating the number 250 of units of good j held by bidder i.",
                "A <br>trade</br> λ = (λ1, . . . , λn) denotes the change in allocation, with λi = (λi1, . . . , λim) where λij ∈   is the change in the number of units of item j to bidder i.",
                "So, the final allocation is x1 = x0 + λ.",
                "Each bidder has a value vi(λi) ∈ ¡ for a <br>trade</br> λi.",
                "This value can be positive or negative, and represents the change in value between the final allocation x0 i +λi and the initial allocation x0 i .",
                "Utility is quasi-linear, with ui(λi, p) = vi(λi)−p for <br>trade</br> λi and payment p ∈ ¡ .",
                "Price p can be negative, indicating the bidder receives a payment for the <br>trade</br>.",
                "We use the term payoff interchangeably with utility.",
                "Our goal in the ICE design is to implement the efficient <br>trade</br>.",
                "The efficient <br>trade</br>, λ∗ , maximizes the total increase in value across bidders.",
                "Definition 1 (Efficient <br>trade</br>).",
                "The efficient <br>trade</br> λ∗ solves max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Constraints (1) ensure that no agent sells more items than it has in its initial allocation.",
                "Constraints (2) provide free disposal, and allows feasible trades to sell more items than are purchased (but not vice versa).",
                "Later, we adopt Feas(x0 ) to denote the set of feasible trades, given these constraints and given an initial allocation x0 = (x0 1, . . . , x0 n). 3.1 Working Examples In this section, we provide three simple examples of instances that we will use to illustrate various components of the exchange.",
                "All three examples have only one seller, but this is purely illustrative.",
                "Example 1.",
                "One seller and one buyer, two goods {A, B}, with the seller having an initial allocation of AB.",
                "Changes in values for trades: seller buyer AND(−A, −B) AND(+A, +B) -10 +20 The AND indicates that both the buyer and the seller are only interested in trading both goods as a bundle.",
                "Here, the efficient (value-maximizing) <br>trade</br> is for the seller to sell AB to the buyer, denoted λ∗ = ([−1, −1], [+1, +1]).",
                "Example 2.",
                "One seller and four buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 buyer 3 buyer 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 The OR indicates that the seller is willing to sell any number of goods.",
                "The XOR indicates that buyers 2 and 4 are willing to buy at most one of the two goods in which they are interested.",
                "The efficient <br>trade</br> is for bundle AB to go to buyer 1 and bundle CD to buyer 3, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER Example 1: Example 3: 2,2 +C +D BUYER 2 2,2 +A +B BUYER 1 +11 +84,4 -B SELLER -A -C -D Example 2: 1,1 +A +B BUYER 2 2,2 +A +B BUYER 1 +6 +40,4 -B SELLER -C -D-A 1,1 +C +D BUYER 4 2,2 +C +D +3 +2 BUYER 3 -18 Figure 2: Example Bid Trees.",
                "Example 3.",
                "One seller and two buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 AND(−A, −B, −C, −D) AND(+A, +B) AND(+C, +D) -18 +11 +8 The efficient <br>trade</br> is for bundle AB to go to buyer 1 and bundle CD to go to buyer 2, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4.",
                "A ONE-SHOT EXCHANGE DESIGN The description of ICE is broken down into two sections: one-shot (sealed-bid) and iterative.",
                "In this section we abstract away the iterative aspect and introduce a specialization of the tree-based language that supports only exact values on nodes. 4.1 Tree-Based Bidding Language The bidding language is designed to be expressive and concise, entirely symmetric with respect to buyers and sellers, and to extend to capture bids from mixed buyers and sellers, ranging from simple swaps to highly complex trades.",
                "Bids are expressed as annotated bid trees, and define a bidders value for all possible trades.",
                "The language defines changes in values on trades, with leaves annotated with traded items and nodes annotated with changes in values (either positive or negative).",
                "The main feature is that it has a general interval-choose logical operator on internal nodes, and that it defines careful semantics for propagating values within the tree.",
                "We illustrate the language on each of Examples 1-3 in Figure 2.",
                "The language has a tree structure, with trades on items defined on leaves and values annotated on nodes and leaves.",
                "The nodes have zero values where no value is indicated.",
                "Internal nodes are also labeled with interval-choose (IC) ranges.",
                "Given a <br>trade</br>, the semantics of the language define which nodes in the tree can be satisfied, or switched-on.",
                "First, if a child is on then its parent must be on.",
                "Second, if a parent node is on, then the number of children that are on must be within the IC range on the parent node.",
                "Finally, leaves in which the bidder is buying items can only be on if the items are provided in the <br>trade</br>.",
                "For instance, in Example 2 we can consider the efficient <br>trade</br>, and observe that in this <br>trade</br> all nodes in the trees of buyers 1 and 3 (and also the seller), but none of the nodes in the trees of buyers 2 and 4, can be on.",
                "On the other hand, in 251 the <br>trade</br> in which A goes to buyer 2 and D to buyer 4, then the root and appropriate leaf nodes can be on for buyers 2 and 4, but no nodes can be on for buyers 1 and 3.",
                "Given a <br>trade</br> there is often a number of ways to choose the set of satisfied nodes.",
                "The semantics of the language require that the nodes that maximize the summed value across satisfied nodes be activated.",
                "Consider bid tree Ti from bidder i.",
                "This defines nodes β ∈ Ti, of which some are leaves, Leaf (i) ⊆ Ti.",
                "Let Child(β) ⊆ Ti denote the children of a node β (that is not itself a leaf).",
                "All nodes except leaves are labeled with the interval-choose operator [IC x i (β), ICy i (β)].",
                "Every node is also labeled with a value, viβ ∈ ¡ .",
                "Each leaf β is labeled with a <br>trade</br>, qiβ ∈   m (i.e., leaves can define a bundled <br>trade</br> on more than one type of item.)",
                "Given a <br>trade</br> λi to bidder i, the interval-choose operators and trades on leaves define which nodes can be satisfied.",
                "There will often be a choice.",
                "Ties are broken to maximize value.",
                "Let satiβ ∈ {0, 1} denote whether node β is satisfied.",
                "Solution sati is valid given tree Ti and <br>trade</br> λi, written sati ∈ valid(Ti, λi), if and only if: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Child(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Leaf (i) (5) In words, a set of leaves can only be considered satisfied given <br>trade</br> λi if the total increase in quantity summed across all such leaves is covered by the trade, for all goods (Eq. 4).",
                "This works for sellers as well as buyers: for sellers a <br>trade</br> is negative and this requires that the total number of items indicated sold in the tree is at least the total number sold as defined in the <br>trade</br>.",
                "We also need upwards-propagation: any time a node other than the root is satisfied then its parent must be satisfied (by   β ∈Child(β) satiβ ≤ ICy i (β)satiβ in Eq. 5).",
                "Finally, we need downwards-propagation: any time an internal node is satisfied then the appropriate number of children must also be satisfied (Eq. 5).",
                "The total value of <br>trade</br> λi, given bid-tree Ti, is defined as: vi(Ti, λi) = max sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) The tree-based language generalizes existing languages.",
                "For instance: IC(2, 2) on a node with 2 children is equivalent to an AND operator; IC(1, 3) on a node with 3 children is equivalent to an OR operator; and IC(1, 1) on a node with 2 children is equivalent to an XOR operator.",
                "Similarly, the XOR/OR bidding languages can be directly expressed as a bid tree in our language.2 4.2 Winner Determination This section defines the winner determination problem, which is formulated as a MIP and solved in our implementation with a commercial solver.3 The solver uses branchand-bound search with dynamic cut generation and branching heuristics to solve large MIPs in economically feasible run times. 2 The OR* language is the OR language with dummy items to provide additional structure.",
                "OR* is known to be expressive and concise.",
                "However, it is not known whether OR* dominates XOR/OR in terms of conciseness [23]. 3 CPLEX, www.ilog.com In defining the MIP representation we are careful to avoid an XOR-based enumeration of all bundles.",
                "A variation on the WD problem is reused many times within the exchange, e.g. for column generation in pricing and for checking revealed preference.",
                "Given bid trees T = (T1, . . . , Tn) and initial allocation x0 , the mixed-integer formulation for WD is: WD(T, x0 ) : max λ,sat ¢ i ¢ β∈Ti viβ · satiβ s.t. (1), (2), satiβ ∈ {0, 1}, λij ∈   sati ∈ valid(Ti, λi), ∀i Some goods may go unassigned because free disposal is allowed within the clearing rules of winner determination.",
                "These items can be allocated back to agents that sold the items, i.e. for which λij < 0. 4.3 Computing Threshold Payments The Threshold payment rule is based on the payments in the Vickrey-Clarke-Groves (VCG) mechanism [15], which itself is truthful and efficient but does not satisfy budget balance.",
                "Budget-balance requires that the total payments to the exchange are equal to the total payments made by the exchange.",
                "In VCG, the payment paid by agent i is pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) where λ∗ is the efficient <br>trade</br>, V ∗ is the reported value of this <br>trade</br>, and V−i is the reported value of the efficient trade that would be implemented without bidder i.",
                "We call ∆vcg,i = V ∗ − V−i the VCG discount.",
                "For instance, in Example 1 pvcg,seller = −10 − (+10 − 0) = −20 and pvcg,buyer = +20 − (+10 − 0) = 10, and the exchange would run at a budget deficit of −20 + 10 = −10.",
                "The Threshold payment rule [24] determines budgetbalanced payments to minimize the maximal error across all agents to the VCG outcome.",
                "Definition 2.",
                "The Threshold payment scheme implements the efficient <br>trade</br> λ∗ given bids, and sets payments pthresh,i = ˆvi(λ∗ i ) − ∆i, where ∆ = (∆1, . . . , ∆n) is set to minimize maxi(∆vcg,i − ∆i) subject to ∆i ≤ ∆vcg,i and   i ∆i ≤ V ∗ (this gives budget-balance).",
                "Example 4.",
                "In Example 2, the VCG discounts are (9, 2, 0, 1, 0) to the seller and four buyers respectively, VCG payments are (−9, 4, 0, 2, 0) and the exchange runs at a deficit of -3.",
                "In Threshold, the discounts are (8, 1, 0, 0, 0) and the payments are (−8, 5, 0, 3, 0).",
                "This minimizes the worst-case error to VCG discounts across all budget-balanced payment schemes.",
                "Threshold payments are designed to minimize the maximal ex post incentive to manipulate.",
                "Krych [16] confirmed that Threshold promotes allocative efficiency in restricted and approximate Bayes-Nash equilibrium. 5.",
                "THE ICE DESIGN We are now ready to introduce the iterative combinatorial exchange (ICE) design.",
                "Several new components are introduced, relative to the design for the one-shot exchange.",
                "Rather than provide precise valuations, bidders can provide lower and upper valuations and revise this bid information across rounds.",
                "The exchange provides price-based feedback 252 to guide bidders in this process, and terminates with an efficient (or approximately-efficient) <br>trade</br> with respect to reported valuations.",
                "In each round t ∈ {0, 1, . . .} the current lower and upper bounds, vt and vt , are used to define a provisional valuation profile vα (the α-valuation), together with a provisional <br>trade</br> λt and provisional prices pt = (pt 1, . . . , pt m) on items.",
                "The α-valuation is a linear combination of the current upper and lower valuations, with αEFF ∈ [0, 1] chosen endogenously based on the closeness of the optimistic <br>trade</br> (at v) and the pessimistic <br>trade</br> (at v).",
                "Prices pt are used to inform an activity rule, and drive progress towards an efficient <br>trade</br>. 5.1 Upper and Lower Valuations The bidding language is extended to allow a bidder i to report a lower and upper value (viβ, viβ) on each node.",
                "These take the place of the exact value viβ defined in Section 4.1.",
                "Based on these labels, we can define the valuation functions vi(Ti, λi) and vi(Ti, λi), using the exact same semantics as in Eq. (6).",
                "We say that such a bid-tree is well-formed if viβ ≤ viβ for all nodes.",
                "The following lemma is useful: Lemma 1.",
                "Given a well-formed tree, T, then vi(Ti, λi) ≤ vi(Ti, λi) for all trades.",
                "Proof.",
                "Suppose there is some λi for which vi(Ti, λi) > vi(Ti, λi).",
                "Then, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ.",
                "But, this is a contradiction because the <br>trade</br> λ that defines vi(Ti, λi) is still feasible with upper bounds vi, and viβ ≥ viβ for all nodes β in a well-formed tree. 5.2 Price Feedback In each round, approximate competitive-equilibrium (CE) prices, pt = (pt 1, . . . , pt m), are determined.",
                "Given these provisional prices, the price on <br>trade</br> λi for bidder i is pt (λi) =   j≤m pt j · λij.",
                "Definition 3 (CE prices).",
                "Prices p∗ are competitive equilibrium prices if the efficient <br>trade</br> λ∗ is supported at prices p∗ , so that for each bidder: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) CE prices will not always exist and we will often need to compute approximate prices [5].",
                "We extend ideas due to Rassenti et al. [26], Kwasnica et al. [17] and Dunford et al. [12], and select approximate prices as follows: I: Accuracy.",
                "First, we compute prices that minimize the maximal error in the best-response constraints across all bidders.",
                "II: Fairness.",
                "Second, we break ties to prefer prices that minimize the maximal deviation from Threshold payments across all bidders.",
                "III: Balance.",
                "Third, we break ties to prefer prices that minimize the maximal price across all items.",
                "Taken together, these steps are designed to promote the informativeness of the prices in driving progress across rounds.",
                "In computing prices, we explain how to compute approximate (or otherwise) prices for structured bidding languages, and without enumerating all possible trades.",
                "For this, we adopt constraint generation to efficient handle an exponential number of constraints.",
                "Each step is described in detail below.",
                "I: Accuracy.",
                "We adopt a definition of price accuracy that generalizes the notions adopted in previous papers for unstructured bidding languages.",
                "Let λt denote the current provisional <br>trade</br> and suppose the provisional valuation is vα .",
                "To compute accurate CE prices, we consider: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j.",
                "This linear program (LP) is designed to find prices that minimize the worst-case error across all agents.",
                "From the definition of CE prices, it follows that CE prices would have δ = 0 as a solution to (9), at which point <br>trade</br> λt i would be in the best-response set of every agent (with λt i = ∅, i.e. no <br>trade</br>, for all agents with no surplus for trade at the prices.)",
                "Example 5.",
                "We can illustrate the formulation (9) on Example 2, assuming for simplicity that vα = v (i.e. truth).",
                "The efficient <br>trade</br> allocates AB to buyer 1 and CD to buyer 3.",
                "Accuracy will seek prices p(A), p(B), p(C) and p(D) to minimize the δ ≥ 0 required to satisfy constraints: p(A) + p(B) + p(C) + p(D) ≥ 0 (seller) p(A) + p(B) ≤ 6 + δ (buyer 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (buyer 2) p(C) + p(D) ≤ 3 (buyer 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (buyer 4) An optimal solution requires p(A) = p(B) = 10/3, with δ = 2/3, with p(C) and p(D) taking values such as p(C) = p(D) = 3/2.",
                "But, (9) has an exponential number of constraints (Eq. 10).",
                "Rather than solve it explicitly we use constraint generation [4] and dynamically generate a sufficient subset of constraints.",
                "Let   i denote a manageable subset of all possible feasible trades to bidder i.",
                "Then, a relaxed version of (9) (written ACC) is formulated by substituting (10) with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) where   i is a set of trades that are feasible for bidder i given the other bids.",
                "Fixing the prices p∗ , we then solve n subproblems (one for each bidder), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0 ), (12) to check whether solution (p∗ , δ∗ ) to ACC is feasible in problem (9).",
                "In R-WD(i) the objective is to determine a most preferred <br>trade</br> for each bidder at these prices.",
                "Let ˆλi denote the solution to R-WD(i).",
                "Check condition: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) and if this condition holds for all bidders i, then solution (p∗ , δ∗ ) is optimal for problem (9).",
                "Otherwise, <br>trade</br> ˆλi is added to   i for all bidders i for which this constraint is 253 violated and we re-solve the LP with the new set of constraints.4 II: Fairness.",
                "Second, we break remaining ties to prefer fair prices: choosing prices that minimize the worst-case error with respect to Threshold payoffs (i.e. utility to bidders with Threshold payments), but without choosing prices that are less accurate.5 Example 6.",
                "For example, accuracy in Example 1 (depicted in Figure 1) requires 12 ≤ pA +pB ≤ 16 (for vα = v).",
                "At these valuations the Threshold payoffs would be 2 to both the seller and the buyer.",
                "This can be exactly achieved in pricing with pA + pB = 14.",
                "The fairness tie-breaking method is formulated as the following LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution, from ACC.",
                "The objective here is the same as in the Threshold payment rule (see Section 4.3): minimize the maximal error between bidder payoff (at vα ) for the provisional <br>trade</br> and the VCG payoff (at vα ).",
                "Problem FAIR is also solved through constraint generation, using R-WD(i) to add additional violated constraints as necessary.",
                "III: Balance.",
                "Third, we break remaining ties to prefer balanced prices: choosing prices that minimize the maximal price across all items.",
                "Returning again to Example 1, depicted in Figure 1, we see that accuracy and fairness require p(A) + p(B) = 14.",
                "Finally, balance sets p(A) = p(B) = 7.",
                "Balance is justified when, all else being equal, items are more likely to have similar than dissimilar values.6 The LP for balance is formulated as follows: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution from ACC and π∗ represents the error in the optimal solution from FAIR.",
                "Constraint generation is also used to solve BAL, generating new trades for   i as necessary. 4 Problem R-WD(i) is a specialization of the WD problem, in which the objective is to maximize the payoff of a single bidder, rather than the total value across all bidders.",
                "It is solved as a MIP, by rewriting the objective in WD(T, x0 ) as max{viβ · satiβ −   j p∗ j · λij } for agent i.",
                "Thus, the structure of the bid-tree language is exploited in generating new constraints, because this is solved as a concise MIP.",
                "The other bidders are kept around in the MIP (but do not appear in the objective), and are used to define the space of feasible trades. 5 The methods of Dunford et al. [12], that use a nucleolus approach, are also closely related. 6 The use of balance was advocated by Kwasnica et al. [17].",
                "Dunford et al. [12] prefer to smooth prices across rounds.",
                "Comment 1: Lexicographical Refinement.",
                "For all three sub-problems we also perform lexicographical refinement (with respect to bidders in ACC and FAIR, and with respect to goods in BAL).",
                "For instance, in ACC we successively minimize the maximal error across all bidders.",
                "Given an initial solution we first pin down the error on all bidders for whom a constraint (11) is binding.",
                "For such a bidder i, the constraint is replaced with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) and the error to bidder i no longer appears explicitly in the objective.",
                "ACC is then re-solved, and makes progress by further minimizing the maximal error across all bidders yet to be pinned down.",
                "This continues, pinning down any new bidders for whom one of constraints (11) is binding, until the error is lexicographically optimized for all bidders.7 The exact same process is repeated for FAIR and BAL, with bidders pinned down and constraints (15) replaced with π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (where π∗ i is the current objective) in FAIR, and items pinned down and constraints (18) replaced with p∗ j ≥ pj (where p∗ j represents the target for the maximal price on that item) in BAL.",
                "Comment 2: Computation.",
                "All constraints in   i are retained, and this set grows across all stages and across all rounds of the exchange.",
                "Thus, the computational effort in constraint generation is re-used.",
                "In implementation we are careful to address a number of -issues that arise due to floating-point issues.",
                "We prefer to err on the side of being conservative in determining whether or not to add another constraint in performing check (13).",
                "This avoids later infeasibility issues.",
                "In addition, when pinning-down bidders for the purpose of lexicographical refinement we relax the associated bidder-constraints with a small > 0 on the righthand side. 5.3 Revealed-Preference Activity Rules The role of activity rules in the auction is to ensure both consistency and progress across rounds [21].",
                "Consistency in our exchange requires that bidders tighten bounds as the exchange progresses.",
                "Activity rules ensure that bidders are active during early rounds, and promote useful elicitation throughout the exchange.",
                "We adopt a simple revealed-preference (RP) activity rule.",
                "The idea is loosely based around the RP-rule in Ausubel et al. [1], where it is used for one-sided CAs.",
                "The motivation is to require more than simply consistency: we need bidders to provide enough information for the system to be able to to prove that an allocation is (approximately) efficient.",
                "It is helpful to think about the bidders interacting with proxy agents that will act on their behalf in responding to provisional prices pt−1 determined at the end of round t − 1.",
                "The only knowledge that such a proxy has of the valuation of a bidder is through the bid-tree.",
                "Suppose a proxy was queried by the exchange and asked which <br>trade</br> the bidder was most interested in at the provisional prices.",
                "The RP rule says the following: the proxy must have enough 7 For example, applying this to accuracy on Example 2 we solve once and find bidders 1 and 2 are binding, for error δ∗ = 2/3.",
                "We pin these down and then minimize the error to bidders 3 and 4.",
                "Finally, this gives p(A) = p(B) = 10/3 and p(C) = p(D) = 5/3, with accuracy 2/3 to bidders 1 and 2 and 1/3 to bidders 3 and 4. 254 information to be able to determine this surplus-maximizing <br>trade</br> at current prices.",
                "Consider the following examples: Example 7.",
                "A bidder has XOR(+A, +B) and a value of +5 on the leaf +A and a value range of [5,10] on leaf +B.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the proxy knows that however the remaining value uncertainty on +B is resolved the bidder will always (weakly) prefer +B to +A.",
                "Example 8.",
                "A bidder has XOR(+A, +B) and value bounds [5, 10] on the root node and a value of 1 on leaf +A.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the bidder will always prefer +A to +B at equal prices, whichever way the uncertain value on the root node is ultimately resolved.",
                "Overloading notation, let vi ∈ Ti denote a valuation that is consistent with lower and upper valuations in bid tree Ti.",
                "Definition 4.",
                "Bid tree Ti satisfies RP at prices pt−1 if and only if there exists some feasible <br>trade</br> L∗ for which, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. (20) To make this determination for bidder i we solve a sequence of problems, each of which is a variation on the WD problem.",
                "First, we construct a candidate lower-bound <br>trade</br>, which is a feasible <br>trade</br> that solves: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) The solution π∗ l to RP1(i) represents the maximal payoff that bidder i can achieve across all feasible trades, given its pessimistic valuation.",
                "Second, we break ties to find a <br>trade</br> with maximal value uncertainty across all possible solutions to RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] s.t. λ ∈ Feas(x0 ) (22) vi(λi) − pt−1 (λi) ≥ π∗ l (23) We adopt solution L∗ i as our candidate for the <br>trade</br> that may satisfy RP.",
                "To understand the importance of this tiebreaking rule consider Example 7.",
                "The proxy can prove +B but not +A is a best-response for all vi ∈ Ti, and should choose +B as its candidate.",
                "Notice that +B is a counterexample to +A, but not the other way round.",
                "Now, we construct a modified valuation ˜vi, by setting ˜viβ =   viβ , if β ∈ sat(L∗ i ) viβ , otherwise. (24) where sat(L∗ i ) is the set of nodes that are satisfied in the lower-bound tree for <br>trade</br> L∗ i .",
                "Given this modified valuation, we find U∗ to solve: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Let π∗ u denote the payoff from this optimal <br>trade</br> at modified values ˜v.",
                "We call <br>trade</br> U∗ i the witness <br>trade</br>.",
                "We show in Proposition 1 that the RP rule is satisfied if and only if π∗ l ≥ π∗ u. Constructing the modified valuation as ˜vi recognizes that there is shared uncertainty across trades that satisfy the same nodes in a bid tree.",
                "Example 8 helps to illustrate this.",
                "Just using vi in RP3(i), we would find L∗ i is buy A with payoff π∗ l = 3 but then find U∗ i is buy B with π∗ u = 7 and fail RP.",
                "We must recognize that however the uncertainty on the root node is resolved it will affect +A and +B in exactly the same way.",
                "For this reason, we set ˜viβ = viβ = 5 on the root node, which is exactly the same value that was adopted in determining π∗ l .",
                "Then, RP3(i) applied to U∗ i gives buy A and the RP test is judged to be passed.",
                "Proposition 1.",
                "Bid tree Ti satisfies RP given prices pt−1 if and only if any lower-bound <br>trade</br> L∗ i that solves RP1(i) and RP2(i) satisfies: vi(Ti, L∗ i ) − pt−1 (L∗ i ) ≥ ˜vi(Ti, U∗ i ) − pt−1 (U∗ i ), (26) where ˜vi is the modified valuation in Eq. (24).",
                "Proof.",
                "For sufficiency, notice that the difference in payoff between <br>trade</br> L∗ i and another <br>trade</br> λi is unaffected by the way uncertainty is resolved on any node that is satisfied in both L∗ i and λi.",
                "Fixing the values in ˜vi on nodes satisfied in L∗ i has the effect of removing this consideration when a <br>trade</br> U∗ i is selected that satisfies one of these nodes.",
                "On the other hand, fixing the values on these nodes has no effect on trades considered in RP3(i) that do not share a node with L∗ i .",
                "For the necessary direction, we first show that any <br>trade</br> that satisfies RP must solve RP1(i).",
                "Suppose otherwise, that some λi with payoff greater than π∗ l satisfies RP.",
                "But, valuation vi ∈ Ti together with L∗ i presents a counterexample to RP (Eq. 20).",
                "Now, suppose (for contradiction) that some λi with maximal payoff π∗ l but uncertainty less than L∗ i satisfies RP.",
                "Proceed by case analysis.",
                "Case a): only one solution to RP1(i) has uncertain value and so λi has certain value.",
                "But, this cannot satisfy RP because L∗ i with uncertain value would be a counterexample to RP (Eq. 20).",
                "Case b): two or more solutions to RP1(i) have uncertain value.",
                "Here, we first argue that one of these trades must satisfy a (weak) superset of all the nodes with uncertain value that are satisfied by all other trades in this set.",
                "This is by RP.",
                "Without this, then for any choice of <br>trade</br> that solves RP1(i), there is another <br>trade</br> with a disjoint set of uncertain but satisfied nodes that provides a counterexample to RP (Eq. 20).",
                "Now, consider the case that some <br>trade</br> contains a superset of all the uncertain satisfied nodes of the other trades.",
                "Clearly RP2(i) will choose this <br>trade</br>, L∗ i , and λi must satisfy a subset of these nodes (by assumption).",
                "But, we now see that λi cannot satisfy RP because L∗ i would be a counterexample to RP.",
                "Failure to meet the activity rule must have some consequence.",
                "In the current rules, the default action we choose is to set the upper bounds in valuations down to the maximal value of the provisional price on a node8 and the lowerbound value on that node.9 Such a bidder can remain active 8 The provisional price on a node is defined as the minimal total price across all feasible trades for which the subtree rooted at the tree is satisfied. 9 This is entirely analogous to when a bidder in an ascending clock auction stops bidding at a price: she is not permitted to bid at a higher price again in future rounds. 255 within the exchange, but only with valuations that are consistent with these new bounds. 5.4 Bidder Feedback In each round, our default design provides every bidder with the provisional <br>trade</br> and also with the current provisional prices.",
                "See 7 for an additional discussion.",
                "We also provide guidance to help a bidder meet the RP rule.",
                "Let sat(L∗ i ) and sat(U∗ i ) denote the nodes that are satisfied in trades L∗ i and U∗ i , as computed in RP1-RP3.",
                "Lemma 2.",
                "When RP fails, a bidder must increase a lower bound on at least one node in sat(L∗ i ) \\ sat(U∗ i ) or decrease an upper bound on at least one node in sat(U∗ i ) \\ sat(L∗ i ) in order to meet the activity rule.",
                "Proof.",
                "Changing the upper- or lower- values on nodes that are not satisfied by either <br>trade</br> does not change L∗ i or U∗ i , and does not change the payoff from these trades.",
                "Thus, the RP condition will continue to fail.",
                "Similarly, changing the bounds on nodes that are satisfied in both trades has no effect on revealed preference.",
                "A change to a lower bound on a shared node affects both L∗ i and U∗ i identically because of the use of the modified valuation to determine U∗ i .",
                "A change to an upper bound on a shared node has no effect in determining either L∗ i or U∗ i .",
                "Note that when sat(U∗ i ) = sat(L∗ i ) then condition (26) is always trivially satisfied, and so the guidance in the lemma is always well-defined when RP fails.",
                "This is an elegant feedback mechanism because it is adaptive.",
                "Once a bidder makes some changes on some subset of these nodes, the bidder can query the exchange.",
                "The exchange can then respond yes, or can revise the set of nodes sat(λ∗ l ) and sat(λ∗ u) as necessary. 5.5 Termination Conditions Once each bidder has committed its new bids (and either met the RP rule or suffered the penalty) then round t closes.",
                "At this point, the task is to determine the new α-valuation, and in turn the provisional allocation λt and provisional prices pt .",
                "A termination condition is also checked, to determine whether to move the exchange to a last-and-final round.",
                "To define the α-valuation we compute the following two quantities: Pessimistic at Pessimistic (PP) Determine an efficient <br>trade</br>, λ∗ l , at pessimistic values, i.e. to solve maxλ   i vi(λi), and set PP=  i vi(λ∗ li).",
                "Pessimistic at Optimistic (PO) Determine an efficient <br>trade</br>, λ∗ u, at optimistic values, i.e. to solve maxλ   i vi(λi), and set PO=  i vi(λ∗ ui).",
                "First, note that PP ≥ PO and PP ≥ 0 by definition, for all bid-trees, although PO can be negative (because the right <br>trade</br> at v is not currently a useful <br>trade</br> at v).",
                "Recognizing this, define γeff (PP, PO) = 1 + PP − PO PP , (27) when PP > 0, and observe that γeff (PP, PO) ≥ 1 when this is defined, and that γeff (PP, PO) will start large and then trend towards 1 as the optimistic allocation converges towards the pessimistic allocation.",
                "In each round, we define αeff ∈ [0, 1] as: αeff =   0 when PP is 0 1/γeff otherwise (28) which is 0 while PP is 0 and then trends towards 1 once PP> 0 in some round.",
                "This is used to define α-valuation vα i = αeff vi + (1 − αeff )vi, ∀i, (29) which is used to define the provisional allocation and provisional prices.",
                "The effect is to endogenously define a schedule for moving from optimistic to pessimistic values across rounds, based on how close the trades are to one another.",
                "Termination Condition.",
                "In moving to the last-and-final round, and finally closing, we also care about the convergence of payments, in addition to the convergence towards an efficient <br>trade</br>.",
                "For this we introduce another parameter, αthresh ∈ [0, 1], that trends from 0 to 1 as the Threshold payments at lower and upper valuations converge.",
                "Consider the following parameter: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive) , (30) which is defined for PP > 0, where pthresh(v) denotes the Threshold payments at valuation profile v, Nactive is the number of bidders that are actively engaged in <br>trade</br> in the PP <br>trade</br>, and || · ||2 is the L2-norm.",
                "Note that γthresh is defined for payments and not payoffs.",
                "This is appropriate because it is the accuracy of the outcome of the exchange that matters: i.e. the <br>trade</br> and the payments.",
                "Given this, we define αthresh =   0 when PP is 0 1/γthresh otherwise (31) which is 0 while PP is 0 and then trends towards 1 as progress is made.",
                "Definition 5 (termination).",
                "ICE transitions to a lastand-final round when one of the following holds: 1. αeff ≥ CUTOFFeff and αthresh ≥ CUTOFFthresh, 2. there is no <br>trade</br> at the optimistic values, where CUTOFFeff , CUTOFFthresh ∈ (0, 1] determine the accuracy required for termination.",
                "At the end of the last-and-final round vα = v is used to define the final <br>trade</br> and the final Threshold payments.",
                "Example 9.",
                "Consider again Example 1, and consider the upper and lower bounds as depicted in Figure 1.",
                "First, if the sellers bounds were [−20, −4] then there is an optimistic <br>trade</br> but no pessimistic <br>trade</br>, and PO = −4 and PP = 0, and αeff = 0.",
                "At the bounds depicted, both the optimistic and the pessimistic trades occur and PO = PP = 4 and αeff = 1.",
                "However, we can see the Threshold payments are (17, −17) at v but (14, −14) at v. Evaluating γthresh , we have γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, and αthresh = 2/5.",
                "For CUTOFFthresh < 2/5 the exchange would remain open.",
                "On the other hand, if the buyers value for +AB was between [18, 24] and the sellers value for −AB was between [−12, −6], the Threshold payments are (15, −15) at both upper and lower bounds, and αthresh = 1. 256 Component Purpose Lines Agent.",
                "Captures strategic behavior and information revelation decisions 762 Model Support Provides XML support to load goods and valuations into world 200 World Keeps track of all agent, good, and valuation details 998 Exchange Driver & Communication Controls exchange, and coordinates remote agent behavior 585 Bidding Language Implements the tree-based bidding language 1119 Activity Rule Engine Implements the revealed preference rule with range support 203 Closing Rule Engine Checks if auction termination condition reached 137 WD Engine Provides WD-related logic 377 Pricing Engine Provides Pricing-related logic 460 MIP Builders Translates logic used by engines into our general optimizer formulation 346 Pricing Builders Used by three pricing stages 256 Winner Determination Builders Used by WD, activity rule, closing rule, and pricing constraint generation 365 Framework Support code; eases modular replacement of above components 510 Table 1: Exchange Component and Code Breakdown. 6.",
                "SYSTEMS INFRASTRUCTURE ICE is approximately 6502 lines of Java code, broken up into the functional packages described in Table 1.10 The prototype is modular so that researchers may easily replace components for experimentation.",
                "In addition to the core exchange discussed in this paper, we have developed an agent component that allows a user to simulate the behavior and knowledge of other players in the system, better allowing a user to formulate their strategy in advance of actual play.",
                "A user specifies a valuation model in an XMLinterpretation of our bidding language, which is revealed to the exchange via the agents strategy.",
                "Major exchange tasks are handled by engines that dictate the non-optimizer specific logic.",
                "These engines drive the appropriate MIP/LP builders.",
                "We realized that all of our optimization formulations boil down to two classes of optimization problem.",
                "The first, used by winner determination, activity rule, closing rule, and constraint generation in pricing, is a MIP that finds trades that maximize value, holding prices and slacks constant.",
                "The second, used by the three pricing stages, is an LP that holds trades constant, seeking to minimize slack, profit, or prices.",
                "We take advantage of the commonality of these problems by using common LP/MIP builders that differ only by a few functional hooks to provide the correct variables for optimization.",
                "We have generalized our back-end optimization solver interface11 (we currently support CPLEX and the LGPL- licensed LPSolve), and can take advantage of the load-balancing and parallel MIP/LP solving capability that this library provides. 7.",
                "DISCUSSION The bidding language was defined to allow for perfect symmetry between buyers and sellers and provide expressiveness in an exchange domain, for instance for mixed bidders interested in executing trades such as swaps.",
                "This proved especially challenging.",
                "The breakthrough came when we focused on changes in value for trades rather than providing absolute values for allocations.",
                "For simplicity, we require the same tree structure for both the upper and lower valuations. 10 Code size is measured in physical source line of code (SLOC), as generated using David A. Wheelers SLOC Count.",
                "The total of 6502 includes 184 for instrumentation (not shown in the table).",
                "The JOpt solver interface is another 1964 lines, and Castor automatically generates around 5200 lines of code for XML file manipulation. 11 http://econcs.eecs.harvard.edu/jopt This allows the language itself to ensure consistency (with the upper value at least the lower value on all trades) and enforce monotonic tightening of these bounds for all trades across rounds.",
                "It also provides for an efficient method to check the RP activity rule, because it makes it simple to reason about shared uncertainty between trades.",
                "The decision to adopt a direct and proxied approach in which bidders express their upper and lower values to a trusted proxy agent that interacts with the exchange was made early in the design process.",
                "In many ways this is the clearest and most immediate way to generalize the design in Parkes et al. [24] and make it iterative.",
                "In addition, this removes much opportunity for strategic manipulation: bidders are restricted to making (incremental) statements about their valuations.",
                "Another advantage is that it makes the activity rule easy to explain: bidders can always meet the activity rule by tightening bounds such that their true value remains in the support.12 Perhaps most importantly, having explicit information on upper and lower values permits progress in early rounds, even while there is no efficient <br>trade</br> at pessimistic values.",
                "Upper and lower bound information also provides guidance about when to terminate.",
                "Note that taken by itself, PP = PO does not imply that the current provisional <br>trade</br> is efficient with respect to all values consistent with current value information.",
                "The difference in values between different trades, aggregated across all bidders, could be similar at lower and upper bounds but quite different at intermediate values (including truth).",
                "Nevertheless, we conjecture that PP = PO will prove an excellent indicator of efficiency in practical settings where the shape of the upper and lower valuations does convey useful information.",
                "This is worthy of experimental investigation.",
                "Moreover, the use of price and RP activity provides additional guarantees.",
                "We adopted linear prices (prices on individual items) rather than non-linear prices (with prices on a <br>trade</br> not equal to the sum of the prices on the component items) early in the design process.",
                "The conciseness of this price representation is very important for computational tractability within the exchange and also to promote simplicity and transparency for bidders.",
                "The RP activity rule was adopted later, and is a good choice because of its excellent theoretical properties when coupled with CE prices.",
                "The following can be easily established: given exact CE prices pt−1 for provisional <br>trade</br> 12 This is in contrast to indirect price-based approaches, such as clock-proxy [1], in which bidders must be able to reason about the RP-constraints implied by bids in each round. 257 λt−1 at valuations vα , then if the upper and lower values at the start of round t already satisfy the RP rule (and without the need for any tie-breaking), the provisional <br>trade</br> is efficient for all valuations consistent with the current bid trees.",
                "When linear CE prices exist, this provides for a soundness and completeness statement: if PP = PO, linear CE prices exist, and the RP rule is satisfied, the provisional <br>trade</br> is efficient (soundness); if prices are exact CE prices for the provisional <br>trade</br> at vα , but the trade is inefficient with respect to some valuation profile consistent with the current bid trees, then at least one bidder must fail RP with her current bid tree and progress will be made (completeness).",
                "Future work must study convergence experimentally, and extend this theory to allow for approximate prices.",
                "Some strategic aspects of our ICE design deserve comment, and further study.",
                "First, we do not claim that truthfully responding to the RP rule is an ex post equilibrium.13 However, the exchange is designed to mimic the Threshold rule in its payment scheme, which is known to have useful incentive properties [16].",
                "We must be careful, though.",
                "For instance we do not suggest to provide αeff to bidders, because as αeff approaches 1 it would inform bidders that bid values are becoming irrelevant to determining the <br>trade</br> but merely used to determine payments (and bidders would become increasingly reluctant to increase their lower valuations).",
                "Also, no consideration has been given in this work to collusion by bidders.",
                "This is an issue that deserves some attention in future work. 8.",
                "CONCLUSIONS In this work we designed and prototyped a scalable and highly-expressive iterative combinatorial exchange.",
                "The design includes many interesting features, including: a new bid-tree language for exchanges, a new method to construct approximate linear prices from expressive languages, and a proxied elicitation method with optimistic and pessimistic valuations with a new method to evaluate a revealed- preference activity rule.",
                "The exchange is fully implemented in Java and is in a validation phase.",
                "The next steps for our work are to allow bidders to refine the structure of the bid tree in addition to values on the tree.",
                "We intend to study the elicitation properties of the exchange and we have put together a test suite of exchange problem instances.",
                "In addition, we are beginning to engage in collaborations to apply the design to airline takeoff and landing slot scheduling and to resource allocation in widearea network distributed computational systems.",
                "Acknowledgments We would like to dedicate this paper to all of the participants in CS 286r at Harvard University in Spring 2004.",
                "This work is supported in part by NSF grant IIS-0238147. 9.",
                "REFERENCES [1] L. Ausubel, P. Cramton, and P. Milgrom.",
                "The clock-proxy auction: A practical combinatorial auction design.",
                "In Cramton et al. [9], chapter 5. [2] M. Babaioff, N. Nisan, and E. Pavlov.",
                "Mechanisms for a spatially distributed market.",
                "In Proc. 5th ACM Conf. on Electronic Commerce, pages 9-20.",
                "ACM Press, 2001. 13 Given the Myerson-Satterthwaite impossibility theorem [22] and the method by which we determine the <br>trade</br> we should not expect this. [3] M. Ball, G. Donohue, and K. Hoffman.",
                "Auctions for the safe, efficient, and equitable allocation of airspace system resources.",
                "In S. Cramton, Shoham, editor, Combinatorial Auctions. 2004.",
                "Forthcoming. [4] D. Bertsimas and J. Tsitsiklis.",
                "Introduction to Linear Optimization.",
                "Athena Scientific, 1997. [5] S. Bikhchandani and J. M. Ostroy.",
                "The package assignment model.",
                "Journal of Economic Theory, 107(2):377-406, 2002. [6] C. Boutilier.",
                "A pomdp formulation of preference elicitation problems.",
                "In Proc. 18th National Conference on Artificial Intelligence (AAAI-02), 2002. [7] C. Boutilier and H. Hoos.",
                "Bidding languages for combinatorial auctions.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), 2001. [8] W. Conen and T. Sandholm.",
                "Preference elicitation in combinatorial auctions.",
                "In Proc. 3rd ACM Conf. on Electronic Commerce (EC-01), pages 256-259.",
                "ACM Press, New York, 2001. [9] P. Cramton, Y. Shoham, and R. Steinberg, editors.",
                "Combinatorial Auctions.",
                "MIT Press, 2004. [10] S. de Vries, J. Schummer, and R. V. Vohra.",
                "On ascending Vickrey auctions for heterogeneous objects.",
                "Technical report, MEDS, Kellogg School, Northwestern University, 2003. [11] S. de Vries and R. V. Vohra.",
                "Combinatorial auctions: A survey.",
                "Informs Journal on Computing, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana, and T. Wilson.",
                "Testing linear pricing algorithms for use in ascending combinatorial auctions.",
                "Technical report, SEOR, George Mason University, 2003. [13] Y. Fu, J.",
                "Chase, B. Chun, S. Schwab, and A. Vahdat.",
                "Sharp: an architecture for secure resource peering.",
                "In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 133-148.",
                "ACM Press, 2003. [14] B. Hudson and T. Sandholm.",
                "Effectiveness of query types and policies for preference elicitation in combinatorial auctions.",
                "In Proc. 3rd Int.",
                "Joint.",
                "Conf. on Autonomous Agents and Multi Agent Systems, pages 386-393, 2004. [15] V. Krishna.",
                "Auction Theory.",
                "Academic Press, 2002. [16] D. Krych.",
                "Calculation and analysis of Nash equilibria of Vickrey-based payment rules for combinatorial exchanges, Harvard College, April 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter, and C. DeMartini.",
                "A new and improved design for multi-object iterative auctions.",
                "Management Science, 2004.",
                "To appear. [18] E. Kwerel and J. Williams.",
                "A proposal for a rapid transition to market allocation of spectrum.",
                "Technical report, FCC Office of Plans and Policy, Nov 2002. [19] S. M. Lahaie and D. C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In Proc.",
                "ACM Conf. on Electronic Commerce, pages 180-188, 2004. [20] R. P. McAfee.",
                "A dominant strategy double auction.",
                "J. of Economic Theory, 56:434-450, 1992. [21] P. Milgrom.",
                "Putting auction theory to work: The simultaneous ascending auction.",
                "J.Pol.",
                "Econ., 108:245-272, 2000. [22] R. B. Myerson and M. A. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [23] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. 2nd ACM Conf. on Electronic Commerce (EC-00), pages 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), pages 1161-1168, 2001. [25] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, July 2000. [26] S. J. Rassenti, V. L. Smith, and R. L. Bulfin.",
                "A combinatorial mechanism for airport time slot allocation.",
                "Bell Journal of Economics, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc, and R. M. Harstad.",
                "Computationally manageable combinatorial auctions.",
                "Management Science, 44(8):1131-1147, 1998. [28] T. Sandholm and C. Boutilier.",
                "Preference elicitation in combinatorial auctions.",
                "In Cramton et al. [9], chapter 10. [29] P. R. Wurman and M. P. Wellman.",
                "AkBA: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, pages 21-29, 2000. 258"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Estos límites permiten el descubrimiento de precios y la obtención de preferencias útiles en las primeras rondas, y permiten la terminación con un \"comercio\" eficiente a pesar de la información parcial sobre las valoraciones del postor.",
                "En una doble subasta (DA), múltiples compradores y vendedores \"comercian\" de unidades de un bien idéntico [20].",
                "Un intercambio combinatorio (CE) [24] es una subasta doble combinatoria que reúne a múltiples compradores y vendedores para \"comerciar\" de múltiples productos heterogéneos.",
                "Por ejemplo, en un intercambio del espectro inalámbrico, una licitadora puede declarar que está dispuesta a pagar $ 1 millón por un \"comercio\" donde obtiene licencias para la ciudad de Nueva York, Boston y Filadelfia, y pierde su licencia por Washington DC.",
                "El idioma describe los valores para las operaciones, como mi valor para vender AB y comprar C es de $ 100, o mi valor para vender ABC es -$ 50, con valores negativos que indican que un postor debe recibir un pago para que el \"comercio\" sea aceptable.",
                "Se calcula un precio aproximado para cada elemento en el intercambio en cada ronda, en términos de valoraciones intermedias y el \"comercio\" provisional.",
                "Para permanecer activo, un postor debe apretar los límites para que haya suficiente información para definir un \"comercio\" que maximice el excedente a los precios actuales.",
                "Al pasar la regla de cierre (en la que los parámetros αeff y αthresh se verifican la convergencia del \"comercio\" y los pagos), el intercambio va a una ronda de último y final.",
                "Al final de esta ronda, el \"comercio\" y los pagos finalmente se determinan, en función de las valoraciones más bajas.2.1 Trabajo relacionado Muchos CAS unilateral de precio ascendente se conocen en la literatura [10, 25, 29].",
                "Un \"comercio\" λ = (λ1, ..., λn) denota el cambio en la asignación, con λi = (λi1, ..., λim) donde λij ∈ es el cambio en el número de unidades del ítem j al postor i."
            ],
            "translated_text": "",
            "candidates": [
                "comercio",
                "comercio",
                "comercio",
                "comercian",
                "comercio",
                "comerciar",
                "comercio",
                "comercio",
                "comercio",
                "comercio",
                "comercio",
                "comercio",
                "comercio",
                "comercio",
                "comercio",
                "comercio",
                "comercio",
                "comercio",
                "comercio",
                "comercio"
            ],
            "error": []
        },
        "tree-based bidding language": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "ICE: An Iterative Combinatorial Exchange David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an iterative combinatorial exchange (ICE).",
                "The exchange incorporates a <br>tree-based bidding language</br> that is concise and expressive for CEs.",
                "Bidders specify lower and upper bounds on their value for different trades.",
                "These bounds allow price discovery and useful preference elicitation in early rounds, and allow termination with an efficient trade despite partial information on bidder valuations.",
                "All computation in the exchange is carefully optimized to exploit the structure of the bid-trees and to avoid enumerating trades.",
                "A proxied interpretation of a revealedpreference activity rule ensures progress across rounds.",
                "A VCG-based payment scheme that has been shown to mitigate opportunities for bargaining and strategic behavior is used to determine final payments.",
                "The exchange is fully implemented and in a validation phase.",
                "Categories and Subject Descriptors: I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Combinatorial exchanges combine and generalize two different mechanisms: double auctions and combinatorial auctions.",
                "In a double auction (DA), multiple buyers and sellers trade units of an identical good [20].",
                "In a combinatorial auction (CA), a single seller has multiple heterogeneous items up for sale [11].",
                "Buyers may have complementarities or substitutabilities between goods, and are provided with an expressive bidding language.",
                "A common goal in both market designs is to determine the efficient allocation, which is the allocation that maximizes total value.",
                "A combinatorial exchange (CE) [24] is a combinatorial double auction that brings together multiple buyers and sellers to trade multiple heterogeneous goods.",
                "For example, in an exchange for wireless spectrum, a bidder may declare that she is willing to pay $1 million for a trade where she obtains licenses for New York City, Boston, and Philadelphia, and loses her license for Washington DC.",
                "Thus, unlike a DA, a CE allows all participants to express complex valuations via expressive bids.",
                "Unlike a CA, a CE allows for fragmented ownership, with multiple buyers and sellers and agents that are both buying and selling.",
                "CEs have received recent attention both in the context of wireless spectrum allocation [18] and for airport takeoff and landing slot allocation [3].",
                "In both of these domains there are incumbents with property rights, and it is important to facilitate a complex multi-way reallocation of resources.",
                "Another potential application domain for CEs is to resource allocation in shared distributed systems, such as PlanetLab [13].",
                "The instantiation of our general purpose design to specific domains is a compelling next step in our research.",
                "This paper presents the first design for an iterative combinatorial exchange (ICE).",
                "The genesis of this project was a class, CS 286r Topics at the Interface between Economics and Computer Science, taught at Harvard University in Spring 2004.1 The entire class was dedicated to the design and prototyping of an iterative CE.",
                "The ICE design problem is multi-faceted and quite hard.",
                "The main innovation in our design is an expressive yet concise <br>tree-based bidding language</br> (which generalizes known languages such as XOR/OR [23]), and the tight coupling of this language with efficient algorithms for price-feedback to guide bidding, winner-determination to determine trades, and revealed-preference activity rules to ensure progress across rounds.",
                "The exchange is iterative: bidders express upper and lower valuations on trades by annotating their bid-tree, and then tighten these bounds in response to price feedback in each round.",
                "The Threshold payment rule, introduced by Parkes et al. [24], is used to determine final payments.",
                "The exchange has a number of interesting theoretical properties.",
                "For instance, when there exist linear prices we establish soundness and completeness: for straightforward bidders that adjust their bounds to meet activity rules while keeping their true value within the bounds, the exchange will terminate with the efficient allocation.",
                "In addition, the 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Truth Agent Act Rule WD ACC FAIR BALClosing RuleVickreyThreshold DONE !",
                "DONE 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER 2,2 +A +15 +8 +B +15 +8 BUYER 2,2 -A -2 -6 -B -2 -6 SELLER BUYER, buy AB SELLER, sell AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PBUYER = 16 - (4-0) = 12 PSELLER = -12 - (4-0) = -16 PBUYER = 14 PSELLER = -14 Pessim istic O ptim istic = 1 Figure 1: ICE System Flow of Control efficient allocation can often be determined without bidders revealing, or even knowing, their exact value for all trades.",
                "This is essential in complex domains where the valuation problem can itself be very challenging for a participant [28].",
                "While we cannot claim that straightforward bidding is an equilibrium of the exchange (and indeed, should not expect to by the Myerson-Satterthwaite impossibility theorem [22]), the Threshold payment rule minimizes the ex post incentive to manipulate across all budget-balanced payment rules.",
                "The exchange is implemented in Java and is currently in validation.",
                "In describing the exchange we will first provide an overview of the main components and introduce several working examples.",
                "Then, we introduce the basic components for a simple one-shot variation in which bidders state their exact values for trades in a single round.",
                "We then describe the full iterative exchange, with upper and lower values, price-feedback, activity rules, and termination conditions.",
                "We state some theoretical properties of the exchange, and end with a discussion to motivate our main design decisions, and suggest some next steps. 2.",
                "AN OVERVIEW OF THE ICE DESIGN The design has four main components, which we will introduce in order through the rest of the paper: • Expressive and concise <br>tree-based bidding language</br>.",
                "The language describes values for trades, such as my value for selling AB and buying C is $100, or my value for selling ABC is -$50, with negative values indicating that a bidder must receive a payment for the trade to be acceptable.",
                "The language allows bidders to express upper and lower bounds on value, which can be tightened across rounds. • Winner Determination.",
                "Winner-determination (WD) is formulated as a mixed-integer program (MIP), with the structure of the bid-trees captured explicitly in the formulation.",
                "Comparing the solution at upper and lower values allows for a determination to be made about termination, with progress in intermediate rounds driven by an intermediate valuation and the lower values adopted on termination. • Payments.",
                "Payments are computed using the Threshold payment rule [24], with the intermediate valuations adopted in early rounds and lower values adopted on termination. • Price feedback.",
                "An approximate price is computed for each item in the exchange in each round, in terms of the intermediate valuations and the provisional trade.",
                "The prices are optimized to approximate competitive equilibrium prices, and further optimized to best approximate the current Threshold payments with remaining ties broken to favor prices that are balanced across different items.",
                "In computing the prices, we adopt the methods of constraint-generation to exploit the structure of the bidding language and avoid enumerating all feasible trades.",
                "The subproblem to generate new constraints is a variation of the WD problem. • Activity rule.",
                "A revealed-preference activity rule [1] ensures progress across rounds.",
                "In order to remain active, a bidder must tighten bounds so that there is enough information to define a trade that maximizes surplus at the current prices.",
                "Another variation on the WD problem is formulated, both to verify that the activity rule is met and also to provide feedback to a bidder to explain how to meet the rule.",
                "An outline of the ICE system flow of control is provided in Figure 1.",
                "We will return to this example later in the paper.",
                "For now, just observe in this two-agent example that the agents state lower and upper bounds that are checked in the activity rule, and then passed to winner-determination (WD), and then through three stages of pricing (accuracy, fairness, balance).",
                "On passing the closing rule (in which parameters αeff and αthresh are checked for convergence of the trade and payments), the exchange goes to a last-and-final round.",
                "At the end of this round, the trade and payments are finally determined, based on the lower valuations. 2.1 Related Work Many ascending-price one-sided CAs are known in the literature [10, 25, 29].",
                "Direct elicitation approaches have also been proposed for one-sided CAs in which agents respond to explicit queries about their valuations [8, 14, 19].",
                "A number of ascending CAs are designed to work with simple prices on items [12, 17].",
                "The price generation methods that we use in ICE generalize the methods in these earlier papers.",
                "Parkes et al. [24] studied sealed-bid combinatorial exchanges and introduced the Threshold payment rule.",
                "Subsequently, Krych [16] demonstrated experimentally that the Threshold rule promotes efficient allocations.",
                "We are not aware of any previous studies of iterative CEs.",
                "Dominant strategy DAs are known for unit demand [20] and also for single-minded agents [2].",
                "No dominant strategy mechanisms are known for the general CE problem.",
                "ICE is a hybrid auction design, in that it couples simple item prices to drive bidding in early rounds with combinatorial WD and payments, a feature it shares with the clock-proxy design of Ausubel et al. [1] for one-sided CAs.",
                "We adopt a variation on the clock-proxy auctionss revealedpreference activity rule.",
                "The bidding language shares some structural elements with the LGB language of Boutilier and Hoos [7], but has very different semantics.",
                "Rothkopf et al. [27] also describe a restricted <br>tree-based bidding language</br>.",
                "In LGB, the semantics are those of propositional logic, with the same items in an allocation able to satisfy a tree in multiple places.",
                "Although this can make LGB especially concise in some settings, the semantics that we propose appear to provide useful locality, so that the value of one component in a tree can be understood independently from the rest of the tree.",
                "The idea of capturing the structure of our bidding language explicitly within a mixed-integer programming formulation follows the developments in Boutilier [6]. 3.",
                "PRELIMINARIES In our model, we consider a set of goods, indexed {1, . . . , m} and a set of bidders, indexed {1, . . . , n}.",
                "The initial allocation of goods is denoted x0 = (x0 1, . . . , x0 n), with x0 i = (x0 i1, . . . , x0 im) and x0 ij ≥ 0 for good j indicating the number 250 of units of good j held by bidder i.",
                "A trade λ = (λ1, . . . , λn) denotes the change in allocation, with λi = (λi1, . . . , λim) where λij ∈   is the change in the number of units of item j to bidder i.",
                "So, the final allocation is x1 = x0 + λ.",
                "Each bidder has a value vi(λi) ∈ ¡ for a trade λi.",
                "This value can be positive or negative, and represents the change in value between the final allocation x0 i +λi and the initial allocation x0 i .",
                "Utility is quasi-linear, with ui(λi, p) = vi(λi)−p for trade λi and payment p ∈ ¡ .",
                "Price p can be negative, indicating the bidder receives a payment for the trade.",
                "We use the term payoff interchangeably with utility.",
                "Our goal in the ICE design is to implement the efficient trade.",
                "The efficient trade, λ∗ , maximizes the total increase in value across bidders.",
                "Definition 1 (Efficient trade).",
                "The efficient trade λ∗ solves max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Constraints (1) ensure that no agent sells more items than it has in its initial allocation.",
                "Constraints (2) provide free disposal, and allows feasible trades to sell more items than are purchased (but not vice versa).",
                "Later, we adopt Feas(x0 ) to denote the set of feasible trades, given these constraints and given an initial allocation x0 = (x0 1, . . . , x0 n). 3.1 Working Examples In this section, we provide three simple examples of instances that we will use to illustrate various components of the exchange.",
                "All three examples have only one seller, but this is purely illustrative.",
                "Example 1.",
                "One seller and one buyer, two goods {A, B}, with the seller having an initial allocation of AB.",
                "Changes in values for trades: seller buyer AND(−A, −B) AND(+A, +B) -10 +20 The AND indicates that both the buyer and the seller are only interested in trading both goods as a bundle.",
                "Here, the efficient (value-maximizing) trade is for the seller to sell AB to the buyer, denoted λ∗ = ([−1, −1], [+1, +1]).",
                "Example 2.",
                "One seller and four buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 buyer 3 buyer 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 The OR indicates that the seller is willing to sell any number of goods.",
                "The XOR indicates that buyers 2 and 4 are willing to buy at most one of the two goods in which they are interested.",
                "The efficient trade is for bundle AB to go to buyer 1 and bundle CD to buyer 3, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER Example 1: Example 3: 2,2 +C +D BUYER 2 2,2 +A +B BUYER 1 +11 +84,4 -B SELLER -A -C -D Example 2: 1,1 +A +B BUYER 2 2,2 +A +B BUYER 1 +6 +40,4 -B SELLER -C -D-A 1,1 +C +D BUYER 4 2,2 +C +D +3 +2 BUYER 3 -18 Figure 2: Example Bid Trees.",
                "Example 3.",
                "One seller and two buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 AND(−A, −B, −C, −D) AND(+A, +B) AND(+C, +D) -18 +11 +8 The efficient trade is for bundle AB to go to buyer 1 and bundle CD to go to buyer 2, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4.",
                "A ONE-SHOT EXCHANGE DESIGN The description of ICE is broken down into two sections: one-shot (sealed-bid) and iterative.",
                "In this section we abstract away the iterative aspect and introduce a specialization of the tree-based language that supports only exact values on nodes. 4.1 <br>tree-based bidding language</br> The bidding language is designed to be expressive and concise, entirely symmetric with respect to buyers and sellers, and to extend to capture bids from mixed buyers and sellers, ranging from simple swaps to highly complex trades.",
                "Bids are expressed as annotated bid trees, and define a bidders value for all possible trades.",
                "The language defines changes in values on trades, with leaves annotated with traded items and nodes annotated with changes in values (either positive or negative).",
                "The main feature is that it has a general interval-choose logical operator on internal nodes, and that it defines careful semantics for propagating values within the tree.",
                "We illustrate the language on each of Examples 1-3 in Figure 2.",
                "The language has a tree structure, with trades on items defined on leaves and values annotated on nodes and leaves.",
                "The nodes have zero values where no value is indicated.",
                "Internal nodes are also labeled with interval-choose (IC) ranges.",
                "Given a trade, the semantics of the language define which nodes in the tree can be satisfied, or switched-on.",
                "First, if a child is on then its parent must be on.",
                "Second, if a parent node is on, then the number of children that are on must be within the IC range on the parent node.",
                "Finally, leaves in which the bidder is buying items can only be on if the items are provided in the trade.",
                "For instance, in Example 2 we can consider the efficient trade, and observe that in this trade all nodes in the trees of buyers 1 and 3 (and also the seller), but none of the nodes in the trees of buyers 2 and 4, can be on.",
                "On the other hand, in 251 the trade in which A goes to buyer 2 and D to buyer 4, then the root and appropriate leaf nodes can be on for buyers 2 and 4, but no nodes can be on for buyers 1 and 3.",
                "Given a trade there is often a number of ways to choose the set of satisfied nodes.",
                "The semantics of the language require that the nodes that maximize the summed value across satisfied nodes be activated.",
                "Consider bid tree Ti from bidder i.",
                "This defines nodes β ∈ Ti, of which some are leaves, Leaf (i) ⊆ Ti.",
                "Let Child(β) ⊆ Ti denote the children of a node β (that is not itself a leaf).",
                "All nodes except leaves are labeled with the interval-choose operator [IC x i (β), ICy i (β)].",
                "Every node is also labeled with a value, viβ ∈ ¡ .",
                "Each leaf β is labeled with a trade, qiβ ∈   m (i.e., leaves can define a bundled trade on more than one type of item.)",
                "Given a trade λi to bidder i, the interval-choose operators and trades on leaves define which nodes can be satisfied.",
                "There will often be a choice.",
                "Ties are broken to maximize value.",
                "Let satiβ ∈ {0, 1} denote whether node β is satisfied.",
                "Solution sati is valid given tree Ti and trade λi, written sati ∈ valid(Ti, λi), if and only if: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Child(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Leaf (i) (5) In words, a set of leaves can only be considered satisfied given trade λi if the total increase in quantity summed across all such leaves is covered by the trade, for all goods (Eq. 4).",
                "This works for sellers as well as buyers: for sellers a trade is negative and this requires that the total number of items indicated sold in the tree is at least the total number sold as defined in the trade.",
                "We also need upwards-propagation: any time a node other than the root is satisfied then its parent must be satisfied (by   β ∈Child(β) satiβ ≤ ICy i (β)satiβ in Eq. 5).",
                "Finally, we need downwards-propagation: any time an internal node is satisfied then the appropriate number of children must also be satisfied (Eq. 5).",
                "The total value of trade λi, given bid-tree Ti, is defined as: vi(Ti, λi) = max sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) The tree-based language generalizes existing languages.",
                "For instance: IC(2, 2) on a node with 2 children is equivalent to an AND operator; IC(1, 3) on a node with 3 children is equivalent to an OR operator; and IC(1, 1) on a node with 2 children is equivalent to an XOR operator.",
                "Similarly, the XOR/OR bidding languages can be directly expressed as a bid tree in our language.2 4.2 Winner Determination This section defines the winner determination problem, which is formulated as a MIP and solved in our implementation with a commercial solver.3 The solver uses branchand-bound search with dynamic cut generation and branching heuristics to solve large MIPs in economically feasible run times. 2 The OR* language is the OR language with dummy items to provide additional structure.",
                "OR* is known to be expressive and concise.",
                "However, it is not known whether OR* dominates XOR/OR in terms of conciseness [23]. 3 CPLEX, www.ilog.com In defining the MIP representation we are careful to avoid an XOR-based enumeration of all bundles.",
                "A variation on the WD problem is reused many times within the exchange, e.g. for column generation in pricing and for checking revealed preference.",
                "Given bid trees T = (T1, . . . , Tn) and initial allocation x0 , the mixed-integer formulation for WD is: WD(T, x0 ) : max λ,sat ¢ i ¢ β∈Ti viβ · satiβ s.t. (1), (2), satiβ ∈ {0, 1}, λij ∈   sati ∈ valid(Ti, λi), ∀i Some goods may go unassigned because free disposal is allowed within the clearing rules of winner determination.",
                "These items can be allocated back to agents that sold the items, i.e. for which λij < 0. 4.3 Computing Threshold Payments The Threshold payment rule is based on the payments in the Vickrey-Clarke-Groves (VCG) mechanism [15], which itself is truthful and efficient but does not satisfy budget balance.",
                "Budget-balance requires that the total payments to the exchange are equal to the total payments made by the exchange.",
                "In VCG, the payment paid by agent i is pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) where λ∗ is the efficient trade, V ∗ is the reported value of this trade, and V−i is the reported value of the efficient trade that would be implemented without bidder i.",
                "We call ∆vcg,i = V ∗ − V−i the VCG discount.",
                "For instance, in Example 1 pvcg,seller = −10 − (+10 − 0) = −20 and pvcg,buyer = +20 − (+10 − 0) = 10, and the exchange would run at a budget deficit of −20 + 10 = −10.",
                "The Threshold payment rule [24] determines budgetbalanced payments to minimize the maximal error across all agents to the VCG outcome.",
                "Definition 2.",
                "The Threshold payment scheme implements the efficient trade λ∗ given bids, and sets payments pthresh,i = ˆvi(λ∗ i ) − ∆i, where ∆ = (∆1, . . . , ∆n) is set to minimize maxi(∆vcg,i − ∆i) subject to ∆i ≤ ∆vcg,i and   i ∆i ≤ V ∗ (this gives budget-balance).",
                "Example 4.",
                "In Example 2, the VCG discounts are (9, 2, 0, 1, 0) to the seller and four buyers respectively, VCG payments are (−9, 4, 0, 2, 0) and the exchange runs at a deficit of -3.",
                "In Threshold, the discounts are (8, 1, 0, 0, 0) and the payments are (−8, 5, 0, 3, 0).",
                "This minimizes the worst-case error to VCG discounts across all budget-balanced payment schemes.",
                "Threshold payments are designed to minimize the maximal ex post incentive to manipulate.",
                "Krych [16] confirmed that Threshold promotes allocative efficiency in restricted and approximate Bayes-Nash equilibrium. 5.",
                "THE ICE DESIGN We are now ready to introduce the iterative combinatorial exchange (ICE) design.",
                "Several new components are introduced, relative to the design for the one-shot exchange.",
                "Rather than provide precise valuations, bidders can provide lower and upper valuations and revise this bid information across rounds.",
                "The exchange provides price-based feedback 252 to guide bidders in this process, and terminates with an efficient (or approximately-efficient) trade with respect to reported valuations.",
                "In each round t ∈ {0, 1, . . .} the current lower and upper bounds, vt and vt , are used to define a provisional valuation profile vα (the α-valuation), together with a provisional trade λt and provisional prices pt = (pt 1, . . . , pt m) on items.",
                "The α-valuation is a linear combination of the current upper and lower valuations, with αEFF ∈ [0, 1] chosen endogenously based on the closeness of the optimistic trade (at v) and the pessimistic trade (at v).",
                "Prices pt are used to inform an activity rule, and drive progress towards an efficient trade. 5.1 Upper and Lower Valuations The bidding language is extended to allow a bidder i to report a lower and upper value (viβ, viβ) on each node.",
                "These take the place of the exact value viβ defined in Section 4.1.",
                "Based on these labels, we can define the valuation functions vi(Ti, λi) and vi(Ti, λi), using the exact same semantics as in Eq. (6).",
                "We say that such a bid-tree is well-formed if viβ ≤ viβ for all nodes.",
                "The following lemma is useful: Lemma 1.",
                "Given a well-formed tree, T, then vi(Ti, λi) ≤ vi(Ti, λi) for all trades.",
                "Proof.",
                "Suppose there is some λi for which vi(Ti, λi) > vi(Ti, λi).",
                "Then, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ.",
                "But, this is a contradiction because the trade λ that defines vi(Ti, λi) is still feasible with upper bounds vi, and viβ ≥ viβ for all nodes β in a well-formed tree. 5.2 Price Feedback In each round, approximate competitive-equilibrium (CE) prices, pt = (pt 1, . . . , pt m), are determined.",
                "Given these provisional prices, the price on trade λi for bidder i is pt (λi) =   j≤m pt j · λij.",
                "Definition 3 (CE prices).",
                "Prices p∗ are competitive equilibrium prices if the efficient trade λ∗ is supported at prices p∗ , so that for each bidder: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) CE prices will not always exist and we will often need to compute approximate prices [5].",
                "We extend ideas due to Rassenti et al. [26], Kwasnica et al. [17] and Dunford et al. [12], and select approximate prices as follows: I: Accuracy.",
                "First, we compute prices that minimize the maximal error in the best-response constraints across all bidders.",
                "II: Fairness.",
                "Second, we break ties to prefer prices that minimize the maximal deviation from Threshold payments across all bidders.",
                "III: Balance.",
                "Third, we break ties to prefer prices that minimize the maximal price across all items.",
                "Taken together, these steps are designed to promote the informativeness of the prices in driving progress across rounds.",
                "In computing prices, we explain how to compute approximate (or otherwise) prices for structured bidding languages, and without enumerating all possible trades.",
                "For this, we adopt constraint generation to efficient handle an exponential number of constraints.",
                "Each step is described in detail below.",
                "I: Accuracy.",
                "We adopt a definition of price accuracy that generalizes the notions adopted in previous papers for unstructured bidding languages.",
                "Let λt denote the current provisional trade and suppose the provisional valuation is vα .",
                "To compute accurate CE prices, we consider: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j.",
                "This linear program (LP) is designed to find prices that minimize the worst-case error across all agents.",
                "From the definition of CE prices, it follows that CE prices would have δ = 0 as a solution to (9), at which point trade λt i would be in the best-response set of every agent (with λt i = ∅, i.e. no trade, for all agents with no surplus for trade at the prices.)",
                "Example 5.",
                "We can illustrate the formulation (9) on Example 2, assuming for simplicity that vα = v (i.e. truth).",
                "The efficient trade allocates AB to buyer 1 and CD to buyer 3.",
                "Accuracy will seek prices p(A), p(B), p(C) and p(D) to minimize the δ ≥ 0 required to satisfy constraints: p(A) + p(B) + p(C) + p(D) ≥ 0 (seller) p(A) + p(B) ≤ 6 + δ (buyer 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (buyer 2) p(C) + p(D) ≤ 3 (buyer 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (buyer 4) An optimal solution requires p(A) = p(B) = 10/3, with δ = 2/3, with p(C) and p(D) taking values such as p(C) = p(D) = 3/2.",
                "But, (9) has an exponential number of constraints (Eq. 10).",
                "Rather than solve it explicitly we use constraint generation [4] and dynamically generate a sufficient subset of constraints.",
                "Let   i denote a manageable subset of all possible feasible trades to bidder i.",
                "Then, a relaxed version of (9) (written ACC) is formulated by substituting (10) with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) where   i is a set of trades that are feasible for bidder i given the other bids.",
                "Fixing the prices p∗ , we then solve n subproblems (one for each bidder), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0 ), (12) to check whether solution (p∗ , δ∗ ) to ACC is feasible in problem (9).",
                "In R-WD(i) the objective is to determine a most preferred trade for each bidder at these prices.",
                "Let ˆλi denote the solution to R-WD(i).",
                "Check condition: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) and if this condition holds for all bidders i, then solution (p∗ , δ∗ ) is optimal for problem (9).",
                "Otherwise, trade ˆλi is added to   i for all bidders i for which this constraint is 253 violated and we re-solve the LP with the new set of constraints.4 II: Fairness.",
                "Second, we break remaining ties to prefer fair prices: choosing prices that minimize the worst-case error with respect to Threshold payoffs (i.e. utility to bidders with Threshold payments), but without choosing prices that are less accurate.5 Example 6.",
                "For example, accuracy in Example 1 (depicted in Figure 1) requires 12 ≤ pA +pB ≤ 16 (for vα = v).",
                "At these valuations the Threshold payoffs would be 2 to both the seller and the buyer.",
                "This can be exactly achieved in pricing with pA + pB = 14.",
                "The fairness tie-breaking method is formulated as the following LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution, from ACC.",
                "The objective here is the same as in the Threshold payment rule (see Section 4.3): minimize the maximal error between bidder payoff (at vα ) for the provisional trade and the VCG payoff (at vα ).",
                "Problem FAIR is also solved through constraint generation, using R-WD(i) to add additional violated constraints as necessary.",
                "III: Balance.",
                "Third, we break remaining ties to prefer balanced prices: choosing prices that minimize the maximal price across all items.",
                "Returning again to Example 1, depicted in Figure 1, we see that accuracy and fairness require p(A) + p(B) = 14.",
                "Finally, balance sets p(A) = p(B) = 7.",
                "Balance is justified when, all else being equal, items are more likely to have similar than dissimilar values.6 The LP for balance is formulated as follows: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution from ACC and π∗ represents the error in the optimal solution from FAIR.",
                "Constraint generation is also used to solve BAL, generating new trades for   i as necessary. 4 Problem R-WD(i) is a specialization of the WD problem, in which the objective is to maximize the payoff of a single bidder, rather than the total value across all bidders.",
                "It is solved as a MIP, by rewriting the objective in WD(T, x0 ) as max{viβ · satiβ −   j p∗ j · λij } for agent i.",
                "Thus, the structure of the bid-tree language is exploited in generating new constraints, because this is solved as a concise MIP.",
                "The other bidders are kept around in the MIP (but do not appear in the objective), and are used to define the space of feasible trades. 5 The methods of Dunford et al. [12], that use a nucleolus approach, are also closely related. 6 The use of balance was advocated by Kwasnica et al. [17].",
                "Dunford et al. [12] prefer to smooth prices across rounds.",
                "Comment 1: Lexicographical Refinement.",
                "For all three sub-problems we also perform lexicographical refinement (with respect to bidders in ACC and FAIR, and with respect to goods in BAL).",
                "For instance, in ACC we successively minimize the maximal error across all bidders.",
                "Given an initial solution we first pin down the error on all bidders for whom a constraint (11) is binding.",
                "For such a bidder i, the constraint is replaced with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) and the error to bidder i no longer appears explicitly in the objective.",
                "ACC is then re-solved, and makes progress by further minimizing the maximal error across all bidders yet to be pinned down.",
                "This continues, pinning down any new bidders for whom one of constraints (11) is binding, until the error is lexicographically optimized for all bidders.7 The exact same process is repeated for FAIR and BAL, with bidders pinned down and constraints (15) replaced with π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (where π∗ i is the current objective) in FAIR, and items pinned down and constraints (18) replaced with p∗ j ≥ pj (where p∗ j represents the target for the maximal price on that item) in BAL.",
                "Comment 2: Computation.",
                "All constraints in   i are retained, and this set grows across all stages and across all rounds of the exchange.",
                "Thus, the computational effort in constraint generation is re-used.",
                "In implementation we are careful to address a number of -issues that arise due to floating-point issues.",
                "We prefer to err on the side of being conservative in determining whether or not to add another constraint in performing check (13).",
                "This avoids later infeasibility issues.",
                "In addition, when pinning-down bidders for the purpose of lexicographical refinement we relax the associated bidder-constraints with a small > 0 on the righthand side. 5.3 Revealed-Preference Activity Rules The role of activity rules in the auction is to ensure both consistency and progress across rounds [21].",
                "Consistency in our exchange requires that bidders tighten bounds as the exchange progresses.",
                "Activity rules ensure that bidders are active during early rounds, and promote useful elicitation throughout the exchange.",
                "We adopt a simple revealed-preference (RP) activity rule.",
                "The idea is loosely based around the RP-rule in Ausubel et al. [1], where it is used for one-sided CAs.",
                "The motivation is to require more than simply consistency: we need bidders to provide enough information for the system to be able to to prove that an allocation is (approximately) efficient.",
                "It is helpful to think about the bidders interacting with proxy agents that will act on their behalf in responding to provisional prices pt−1 determined at the end of round t − 1.",
                "The only knowledge that such a proxy has of the valuation of a bidder is through the bid-tree.",
                "Suppose a proxy was queried by the exchange and asked which trade the bidder was most interested in at the provisional prices.",
                "The RP rule says the following: the proxy must have enough 7 For example, applying this to accuracy on Example 2 we solve once and find bidders 1 and 2 are binding, for error δ∗ = 2/3.",
                "We pin these down and then minimize the error to bidders 3 and 4.",
                "Finally, this gives p(A) = p(B) = 10/3 and p(C) = p(D) = 5/3, with accuracy 2/3 to bidders 1 and 2 and 1/3 to bidders 3 and 4. 254 information to be able to determine this surplus-maximizing trade at current prices.",
                "Consider the following examples: Example 7.",
                "A bidder has XOR(+A, +B) and a value of +5 on the leaf +A and a value range of [5,10] on leaf +B.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the proxy knows that however the remaining value uncertainty on +B is resolved the bidder will always (weakly) prefer +B to +A.",
                "Example 8.",
                "A bidder has XOR(+A, +B) and value bounds [5, 10] on the root node and a value of 1 on leaf +A.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the bidder will always prefer +A to +B at equal prices, whichever way the uncertain value on the root node is ultimately resolved.",
                "Overloading notation, let vi ∈ Ti denote a valuation that is consistent with lower and upper valuations in bid tree Ti.",
                "Definition 4.",
                "Bid tree Ti satisfies RP at prices pt−1 if and only if there exists some feasible trade L∗ for which, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. (20) To make this determination for bidder i we solve a sequence of problems, each of which is a variation on the WD problem.",
                "First, we construct a candidate lower-bound trade, which is a feasible trade that solves: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) The solution π∗ l to RP1(i) represents the maximal payoff that bidder i can achieve across all feasible trades, given its pessimistic valuation.",
                "Second, we break ties to find a trade with maximal value uncertainty across all possible solutions to RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] s.t. λ ∈ Feas(x0 ) (22) vi(λi) − pt−1 (λi) ≥ π∗ l (23) We adopt solution L∗ i as our candidate for the trade that may satisfy RP.",
                "To understand the importance of this tiebreaking rule consider Example 7.",
                "The proxy can prove +B but not +A is a best-response for all vi ∈ Ti, and should choose +B as its candidate.",
                "Notice that +B is a counterexample to +A, but not the other way round.",
                "Now, we construct a modified valuation ˜vi, by setting ˜viβ =   viβ , if β ∈ sat(L∗ i ) viβ , otherwise. (24) where sat(L∗ i ) is the set of nodes that are satisfied in the lower-bound tree for trade L∗ i .",
                "Given this modified valuation, we find U∗ to solve: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Let π∗ u denote the payoff from this optimal trade at modified values ˜v.",
                "We call trade U∗ i the witness trade.",
                "We show in Proposition 1 that the RP rule is satisfied if and only if π∗ l ≥ π∗ u. Constructing the modified valuation as ˜vi recognizes that there is shared uncertainty across trades that satisfy the same nodes in a bid tree.",
                "Example 8 helps to illustrate this.",
                "Just using vi in RP3(i), we would find L∗ i is buy A with payoff π∗ l = 3 but then find U∗ i is buy B with π∗ u = 7 and fail RP.",
                "We must recognize that however the uncertainty on the root node is resolved it will affect +A and +B in exactly the same way.",
                "For this reason, we set ˜viβ = viβ = 5 on the root node, which is exactly the same value that was adopted in determining π∗ l .",
                "Then, RP3(i) applied to U∗ i gives buy A and the RP test is judged to be passed.",
                "Proposition 1.",
                "Bid tree Ti satisfies RP given prices pt−1 if and only if any lower-bound trade L∗ i that solves RP1(i) and RP2(i) satisfies: vi(Ti, L∗ i ) − pt−1 (L∗ i ) ≥ ˜vi(Ti, U∗ i ) − pt−1 (U∗ i ), (26) where ˜vi is the modified valuation in Eq. (24).",
                "Proof.",
                "For sufficiency, notice that the difference in payoff between trade L∗ i and another trade λi is unaffected by the way uncertainty is resolved on any node that is satisfied in both L∗ i and λi.",
                "Fixing the values in ˜vi on nodes satisfied in L∗ i has the effect of removing this consideration when a trade U∗ i is selected that satisfies one of these nodes.",
                "On the other hand, fixing the values on these nodes has no effect on trades considered in RP3(i) that do not share a node with L∗ i .",
                "For the necessary direction, we first show that any trade that satisfies RP must solve RP1(i).",
                "Suppose otherwise, that some λi with payoff greater than π∗ l satisfies RP.",
                "But, valuation vi ∈ Ti together with L∗ i presents a counterexample to RP (Eq. 20).",
                "Now, suppose (for contradiction) that some λi with maximal payoff π∗ l but uncertainty less than L∗ i satisfies RP.",
                "Proceed by case analysis.",
                "Case a): only one solution to RP1(i) has uncertain value and so λi has certain value.",
                "But, this cannot satisfy RP because L∗ i with uncertain value would be a counterexample to RP (Eq. 20).",
                "Case b): two or more solutions to RP1(i) have uncertain value.",
                "Here, we first argue that one of these trades must satisfy a (weak) superset of all the nodes with uncertain value that are satisfied by all other trades in this set.",
                "This is by RP.",
                "Without this, then for any choice of trade that solves RP1(i), there is another trade with a disjoint set of uncertain but satisfied nodes that provides a counterexample to RP (Eq. 20).",
                "Now, consider the case that some trade contains a superset of all the uncertain satisfied nodes of the other trades.",
                "Clearly RP2(i) will choose this trade, L∗ i , and λi must satisfy a subset of these nodes (by assumption).",
                "But, we now see that λi cannot satisfy RP because L∗ i would be a counterexample to RP.",
                "Failure to meet the activity rule must have some consequence.",
                "In the current rules, the default action we choose is to set the upper bounds in valuations down to the maximal value of the provisional price on a node8 and the lowerbound value on that node.9 Such a bidder can remain active 8 The provisional price on a node is defined as the minimal total price across all feasible trades for which the subtree rooted at the tree is satisfied. 9 This is entirely analogous to when a bidder in an ascending clock auction stops bidding at a price: she is not permitted to bid at a higher price again in future rounds. 255 within the exchange, but only with valuations that are consistent with these new bounds. 5.4 Bidder Feedback In each round, our default design provides every bidder with the provisional trade and also with the current provisional prices.",
                "See 7 for an additional discussion.",
                "We also provide guidance to help a bidder meet the RP rule.",
                "Let sat(L∗ i ) and sat(U∗ i ) denote the nodes that are satisfied in trades L∗ i and U∗ i , as computed in RP1-RP3.",
                "Lemma 2.",
                "When RP fails, a bidder must increase a lower bound on at least one node in sat(L∗ i ) \\ sat(U∗ i ) or decrease an upper bound on at least one node in sat(U∗ i ) \\ sat(L∗ i ) in order to meet the activity rule.",
                "Proof.",
                "Changing the upper- or lower- values on nodes that are not satisfied by either trade does not change L∗ i or U∗ i , and does not change the payoff from these trades.",
                "Thus, the RP condition will continue to fail.",
                "Similarly, changing the bounds on nodes that are satisfied in both trades has no effect on revealed preference.",
                "A change to a lower bound on a shared node affects both L∗ i and U∗ i identically because of the use of the modified valuation to determine U∗ i .",
                "A change to an upper bound on a shared node has no effect in determining either L∗ i or U∗ i .",
                "Note that when sat(U∗ i ) = sat(L∗ i ) then condition (26) is always trivially satisfied, and so the guidance in the lemma is always well-defined when RP fails.",
                "This is an elegant feedback mechanism because it is adaptive.",
                "Once a bidder makes some changes on some subset of these nodes, the bidder can query the exchange.",
                "The exchange can then respond yes, or can revise the set of nodes sat(λ∗ l ) and sat(λ∗ u) as necessary. 5.5 Termination Conditions Once each bidder has committed its new bids (and either met the RP rule or suffered the penalty) then round t closes.",
                "At this point, the task is to determine the new α-valuation, and in turn the provisional allocation λt and provisional prices pt .",
                "A termination condition is also checked, to determine whether to move the exchange to a last-and-final round.",
                "To define the α-valuation we compute the following two quantities: Pessimistic at Pessimistic (PP) Determine an efficient trade, λ∗ l , at pessimistic values, i.e. to solve maxλ   i vi(λi), and set PP=  i vi(λ∗ li).",
                "Pessimistic at Optimistic (PO) Determine an efficient trade, λ∗ u, at optimistic values, i.e. to solve maxλ   i vi(λi), and set PO=  i vi(λ∗ ui).",
                "First, note that PP ≥ PO and PP ≥ 0 by definition, for all bid-trees, although PO can be negative (because the right trade at v is not currently a useful trade at v).",
                "Recognizing this, define γeff (PP, PO) = 1 + PP − PO PP , (27) when PP > 0, and observe that γeff (PP, PO) ≥ 1 when this is defined, and that γeff (PP, PO) will start large and then trend towards 1 as the optimistic allocation converges towards the pessimistic allocation.",
                "In each round, we define αeff ∈ [0, 1] as: αeff =   0 when PP is 0 1/γeff otherwise (28) which is 0 while PP is 0 and then trends towards 1 once PP> 0 in some round.",
                "This is used to define α-valuation vα i = αeff vi + (1 − αeff )vi, ∀i, (29) which is used to define the provisional allocation and provisional prices.",
                "The effect is to endogenously define a schedule for moving from optimistic to pessimistic values across rounds, based on how close the trades are to one another.",
                "Termination Condition.",
                "In moving to the last-and-final round, and finally closing, we also care about the convergence of payments, in addition to the convergence towards an efficient trade.",
                "For this we introduce another parameter, αthresh ∈ [0, 1], that trends from 0 to 1 as the Threshold payments at lower and upper valuations converge.",
                "Consider the following parameter: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive) , (30) which is defined for PP > 0, where pthresh(v) denotes the Threshold payments at valuation profile v, Nactive is the number of bidders that are actively engaged in trade in the PP trade, and || · ||2 is the L2-norm.",
                "Note that γthresh is defined for payments and not payoffs.",
                "This is appropriate because it is the accuracy of the outcome of the exchange that matters: i.e. the trade and the payments.",
                "Given this, we define αthresh =   0 when PP is 0 1/γthresh otherwise (31) which is 0 while PP is 0 and then trends towards 1 as progress is made.",
                "Definition 5 (termination).",
                "ICE transitions to a lastand-final round when one of the following holds: 1. αeff ≥ CUTOFFeff and αthresh ≥ CUTOFFthresh, 2. there is no trade at the optimistic values, where CUTOFFeff , CUTOFFthresh ∈ (0, 1] determine the accuracy required for termination.",
                "At the end of the last-and-final round vα = v is used to define the final trade and the final Threshold payments.",
                "Example 9.",
                "Consider again Example 1, and consider the upper and lower bounds as depicted in Figure 1.",
                "First, if the sellers bounds were [−20, −4] then there is an optimistic trade but no pessimistic trade, and PO = −4 and PP = 0, and αeff = 0.",
                "At the bounds depicted, both the optimistic and the pessimistic trades occur and PO = PP = 4 and αeff = 1.",
                "However, we can see the Threshold payments are (17, −17) at v but (14, −14) at v. Evaluating γthresh , we have γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, and αthresh = 2/5.",
                "For CUTOFFthresh < 2/5 the exchange would remain open.",
                "On the other hand, if the buyers value for +AB was between [18, 24] and the sellers value for −AB was between [−12, −6], the Threshold payments are (15, −15) at both upper and lower bounds, and αthresh = 1. 256 Component Purpose Lines Agent.",
                "Captures strategic behavior and information revelation decisions 762 Model Support Provides XML support to load goods and valuations into world 200 World Keeps track of all agent, good, and valuation details 998 Exchange Driver & Communication Controls exchange, and coordinates remote agent behavior 585 Bidding Language Implements the <br>tree-based bidding language</br> 1119 Activity Rule Engine Implements the revealed preference rule with range support 203 Closing Rule Engine Checks if auction termination condition reached 137 WD Engine Provides WD-related logic 377 Pricing Engine Provides Pricing-related logic 460 MIP Builders Translates logic used by engines into our general optimizer formulation 346 Pricing Builders Used by three pricing stages 256 Winner Determination Builders Used by WD, activity rule, closing rule, and pricing constraint generation 365 Framework Support code; eases modular replacement of above components 510 Table 1: Exchange Component and Code Breakdown. 6.",
                "SYSTEMS INFRASTRUCTURE ICE is approximately 6502 lines of Java code, broken up into the functional packages described in Table 1.10 The prototype is modular so that researchers may easily replace components for experimentation.",
                "In addition to the core exchange discussed in this paper, we have developed an agent component that allows a user to simulate the behavior and knowledge of other players in the system, better allowing a user to formulate their strategy in advance of actual play.",
                "A user specifies a valuation model in an XMLinterpretation of our bidding language, which is revealed to the exchange via the agents strategy.",
                "Major exchange tasks are handled by engines that dictate the non-optimizer specific logic.",
                "These engines drive the appropriate MIP/LP builders.",
                "We realized that all of our optimization formulations boil down to two classes of optimization problem.",
                "The first, used by winner determination, activity rule, closing rule, and constraint generation in pricing, is a MIP that finds trades that maximize value, holding prices and slacks constant.",
                "The second, used by the three pricing stages, is an LP that holds trades constant, seeking to minimize slack, profit, or prices.",
                "We take advantage of the commonality of these problems by using common LP/MIP builders that differ only by a few functional hooks to provide the correct variables for optimization.",
                "We have generalized our back-end optimization solver interface11 (we currently support CPLEX and the LGPL- licensed LPSolve), and can take advantage of the load-balancing and parallel MIP/LP solving capability that this library provides. 7.",
                "DISCUSSION The bidding language was defined to allow for perfect symmetry between buyers and sellers and provide expressiveness in an exchange domain, for instance for mixed bidders interested in executing trades such as swaps.",
                "This proved especially challenging.",
                "The breakthrough came when we focused on changes in value for trades rather than providing absolute values for allocations.",
                "For simplicity, we require the same tree structure for both the upper and lower valuations. 10 Code size is measured in physical source line of code (SLOC), as generated using David A. Wheelers SLOC Count.",
                "The total of 6502 includes 184 for instrumentation (not shown in the table).",
                "The JOpt solver interface is another 1964 lines, and Castor automatically generates around 5200 lines of code for XML file manipulation. 11 http://econcs.eecs.harvard.edu/jopt This allows the language itself to ensure consistency (with the upper value at least the lower value on all trades) and enforce monotonic tightening of these bounds for all trades across rounds.",
                "It also provides for an efficient method to check the RP activity rule, because it makes it simple to reason about shared uncertainty between trades.",
                "The decision to adopt a direct and proxied approach in which bidders express their upper and lower values to a trusted proxy agent that interacts with the exchange was made early in the design process.",
                "In many ways this is the clearest and most immediate way to generalize the design in Parkes et al. [24] and make it iterative.",
                "In addition, this removes much opportunity for strategic manipulation: bidders are restricted to making (incremental) statements about their valuations.",
                "Another advantage is that it makes the activity rule easy to explain: bidders can always meet the activity rule by tightening bounds such that their true value remains in the support.12 Perhaps most importantly, having explicit information on upper and lower values permits progress in early rounds, even while there is no efficient trade at pessimistic values.",
                "Upper and lower bound information also provides guidance about when to terminate.",
                "Note that taken by itself, PP = PO does not imply that the current provisional trade is efficient with respect to all values consistent with current value information.",
                "The difference in values between different trades, aggregated across all bidders, could be similar at lower and upper bounds but quite different at intermediate values (including truth).",
                "Nevertheless, we conjecture that PP = PO will prove an excellent indicator of efficiency in practical settings where the shape of the upper and lower valuations does convey useful information.",
                "This is worthy of experimental investigation.",
                "Moreover, the use of price and RP activity provides additional guarantees.",
                "We adopted linear prices (prices on individual items) rather than non-linear prices (with prices on a trade not equal to the sum of the prices on the component items) early in the design process.",
                "The conciseness of this price representation is very important for computational tractability within the exchange and also to promote simplicity and transparency for bidders.",
                "The RP activity rule was adopted later, and is a good choice because of its excellent theoretical properties when coupled with CE prices.",
                "The following can be easily established: given exact CE prices pt−1 for provisional trade 12 This is in contrast to indirect price-based approaches, such as clock-proxy [1], in which bidders must be able to reason about the RP-constraints implied by bids in each round. 257 λt−1 at valuations vα , then if the upper and lower values at the start of round t already satisfy the RP rule (and without the need for any tie-breaking), the provisional trade is efficient for all valuations consistent with the current bid trees.",
                "When linear CE prices exist, this provides for a soundness and completeness statement: if PP = PO, linear CE prices exist, and the RP rule is satisfied, the provisional trade is efficient (soundness); if prices are exact CE prices for the provisional trade at vα , but the trade is inefficient with respect to some valuation profile consistent with the current bid trees, then at least one bidder must fail RP with her current bid tree and progress will be made (completeness).",
                "Future work must study convergence experimentally, and extend this theory to allow for approximate prices.",
                "Some strategic aspects of our ICE design deserve comment, and further study.",
                "First, we do not claim that truthfully responding to the RP rule is an ex post equilibrium.13 However, the exchange is designed to mimic the Threshold rule in its payment scheme, which is known to have useful incentive properties [16].",
                "We must be careful, though.",
                "For instance we do not suggest to provide αeff to bidders, because as αeff approaches 1 it would inform bidders that bid values are becoming irrelevant to determining the trade but merely used to determine payments (and bidders would become increasingly reluctant to increase their lower valuations).",
                "Also, no consideration has been given in this work to collusion by bidders.",
                "This is an issue that deserves some attention in future work. 8.",
                "CONCLUSIONS In this work we designed and prototyped a scalable and highly-expressive iterative combinatorial exchange.",
                "The design includes many interesting features, including: a new bid-tree language for exchanges, a new method to construct approximate linear prices from expressive languages, and a proxied elicitation method with optimistic and pessimistic valuations with a new method to evaluate a revealed- preference activity rule.",
                "The exchange is fully implemented in Java and is in a validation phase.",
                "The next steps for our work are to allow bidders to refine the structure of the bid tree in addition to values on the tree.",
                "We intend to study the elicitation properties of the exchange and we have put together a test suite of exchange problem instances.",
                "In addition, we are beginning to engage in collaborations to apply the design to airline takeoff and landing slot scheduling and to resource allocation in widearea network distributed computational systems.",
                "Acknowledgments We would like to dedicate this paper to all of the participants in CS 286r at Harvard University in Spring 2004.",
                "This work is supported in part by NSF grant IIS-0238147. 9.",
                "REFERENCES [1] L. Ausubel, P. Cramton, and P. Milgrom.",
                "The clock-proxy auction: A practical combinatorial auction design.",
                "In Cramton et al. [9], chapter 5. [2] M. Babaioff, N. Nisan, and E. Pavlov.",
                "Mechanisms for a spatially distributed market.",
                "In Proc. 5th ACM Conf. on Electronic Commerce, pages 9-20.",
                "ACM Press, 2001. 13 Given the Myerson-Satterthwaite impossibility theorem [22] and the method by which we determine the trade we should not expect this. [3] M. Ball, G. Donohue, and K. Hoffman.",
                "Auctions for the safe, efficient, and equitable allocation of airspace system resources.",
                "In S. Cramton, Shoham, editor, Combinatorial Auctions. 2004.",
                "Forthcoming. [4] D. Bertsimas and J. Tsitsiklis.",
                "Introduction to Linear Optimization.",
                "Athena Scientific, 1997. [5] S. Bikhchandani and J. M. Ostroy.",
                "The package assignment model.",
                "Journal of Economic Theory, 107(2):377-406, 2002. [6] C. Boutilier.",
                "A pomdp formulation of preference elicitation problems.",
                "In Proc. 18th National Conference on Artificial Intelligence (AAAI-02), 2002. [7] C. Boutilier and H. Hoos.",
                "Bidding languages for combinatorial auctions.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), 2001. [8] W. Conen and T. Sandholm.",
                "Preference elicitation in combinatorial auctions.",
                "In Proc. 3rd ACM Conf. on Electronic Commerce (EC-01), pages 256-259.",
                "ACM Press, New York, 2001. [9] P. Cramton, Y. Shoham, and R. Steinberg, editors.",
                "Combinatorial Auctions.",
                "MIT Press, 2004. [10] S. de Vries, J. Schummer, and R. V. Vohra.",
                "On ascending Vickrey auctions for heterogeneous objects.",
                "Technical report, MEDS, Kellogg School, Northwestern University, 2003. [11] S. de Vries and R. V. Vohra.",
                "Combinatorial auctions: A survey.",
                "Informs Journal on Computing, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana, and T. Wilson.",
                "Testing linear pricing algorithms for use in ascending combinatorial auctions.",
                "Technical report, SEOR, George Mason University, 2003. [13] Y. Fu, J.",
                "Chase, B. Chun, S. Schwab, and A. Vahdat.",
                "Sharp: an architecture for secure resource peering.",
                "In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 133-148.",
                "ACM Press, 2003. [14] B. Hudson and T. Sandholm.",
                "Effectiveness of query types and policies for preference elicitation in combinatorial auctions.",
                "In Proc. 3rd Int.",
                "Joint.",
                "Conf. on Autonomous Agents and Multi Agent Systems, pages 386-393, 2004. [15] V. Krishna.",
                "Auction Theory.",
                "Academic Press, 2002. [16] D. Krych.",
                "Calculation and analysis of Nash equilibria of Vickrey-based payment rules for combinatorial exchanges, Harvard College, April 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter, and C. DeMartini.",
                "A new and improved design for multi-object iterative auctions.",
                "Management Science, 2004.",
                "To appear. [18] E. Kwerel and J. Williams.",
                "A proposal for a rapid transition to market allocation of spectrum.",
                "Technical report, FCC Office of Plans and Policy, Nov 2002. [19] S. M. Lahaie and D. C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In Proc.",
                "ACM Conf. on Electronic Commerce, pages 180-188, 2004. [20] R. P. McAfee.",
                "A dominant strategy double auction.",
                "J. of Economic Theory, 56:434-450, 1992. [21] P. Milgrom.",
                "Putting auction theory to work: The simultaneous ascending auction.",
                "J.Pol.",
                "Econ., 108:245-272, 2000. [22] R. B. Myerson and M. A. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [23] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. 2nd ACM Conf. on Electronic Commerce (EC-00), pages 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), pages 1161-1168, 2001. [25] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, July 2000. [26] S. J. Rassenti, V. L. Smith, and R. L. Bulfin.",
                "A combinatorial mechanism for airport time slot allocation.",
                "Bell Journal of Economics, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc, and R. M. Harstad.",
                "Computationally manageable combinatorial auctions.",
                "Management Science, 44(8):1131-1147, 1998. [28] T. Sandholm and C. Boutilier.",
                "Preference elicitation in combinatorial auctions.",
                "In Cramton et al. [9], chapter 10. [29] P. R. Wurman and M. P. Wellman.",
                "AkBA: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, pages 21-29, 2000. 258"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El intercambio incorpora un \"lenguaje de licitación basado en árboles\" que es conciso y expresivo para el CES.",
                "La principal innovación en nuestro diseño es un \"lenguaje de licitación basado en árboles\" expresivo pero conciso (que generaliza los idiomas conocidos como Xor/o [23]), y el acoplamiento estricto de este lenguaje con algoritmos eficientes para el retroalimentación de precios para guiar las ofertas, Determinación del ganador para determinar las operaciones y las reglas de actividad de preferencia reveladas para garantizar el progreso en las rondas.",
                "Una descripción general del diseño de hielo El diseño tiene cuatro componentes principales, que introduciremos en orden a través del resto del documento: • Expresivo y conciso \"lenguaje de licitación basado en árboles\".",
                "Rothkopf et al.[27] también describe un \"lenguaje de licitación basado en árboles\" restringido.",
                "En esta sección abstrae el aspecto iterativo e introducimos una especialización del lenguaje basado en árboles que respalda solo valores exactos en los nodos.4.1 \"Lenguaje de licitación basado en árboles\" El lenguaje de licitación está diseñado para ser expresivo y conciso, completamente simétrico con respecto a los compradores y vendedores, y para extenderse para capturar ofertas de compradores y vendedores mixtos, que van desde intercambios simples hasta comercios altamente complejos.",
                "Captura el comportamiento estratégico y las decisiones de revelación de información 762 El soporte del modelo proporciona soporte XML para cargar bienes y valoraciones en el mundo 200 World realiza un seguimiento de todos los detalles de agentes, buenos y de valoración 998 Intercambios de controladores y controles de comunicación, y coordina el comportamiento del agente remoto 585 IMPLEMENTOS DE IDIACCIÓN DE PIDO.El \"lenguaje de licitación basado en árbol\" 1119 Regla de actividad implementa la regla de preferencia revelada con el soporte de rango 203 Verificaciones del motor de la regla de cierre si la condición de terminación de subasta alcanzada el motor 137 WD proporciona el motor de precios lógico 377 relacionado con WD.Lógica utilizada por los motores en nuestra formulación general de optimizador 346 Constructores de precios utilizados por tres etapas de fijación de precios 256 Constructores de determinación del ganador utilizados por WD, regla de actividad, regla de cierre y código de soporte de la generación de restricciones de precios 365 Código de soporte del marco;facilita el reemplazo modular de los componentes anteriores 510 Tabla 1: componente de intercambio y desglose de código.6."
            ],
            "translated_text": "",
            "candidates": [
                "lenguaje de licitación basado en árboles",
                "lenguaje de licitación basado en árboles",
                "lenguaje de licitación basado en árboles",
                "lenguaje de licitación basado en árboles",
                "lenguaje de licitación basado en árboles",
                "lenguaje de licitación basado en árboles",
                "lenguaje de licitación basado en árboles",
                "lenguaje de licitación basado en árboles",
                "lenguaje de licitación basado en árboles",
                "Lenguaje de licitación basado en árboles",
                "Lenguaje de licitación basado en árboles",
                "lenguaje de licitación basado en árbol"
            ],
            "error": []
        },
        "price": {
            "translated_key": "precio",
            "is_in_text": true,
            "original_annotated_sentences": [
                "ICE: An Iterative Combinatorial Exchange David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an iterative combinatorial exchange (ICE).",
                "The exchange incorporates a tree-based bidding language that is concise and expressive for CEs.",
                "Bidders specify lower and upper bounds on their value for different trades.",
                "These bounds allow <br>price</br> discovery and useful preference elicitation in early rounds, and allow termination with an efficient trade despite partial information on bidder valuations.",
                "All computation in the exchange is carefully optimized to exploit the structure of the bid-trees and to avoid enumerating trades.",
                "A proxied interpretation of a revealedpreference activity rule ensures progress across rounds.",
                "A VCG-based payment scheme that has been shown to mitigate opportunities for bargaining and strategic behavior is used to determine final payments.",
                "The exchange is fully implemented and in a validation phase.",
                "Categories and Subject Descriptors: I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Combinatorial exchanges combine and generalize two different mechanisms: double auctions and combinatorial auctions.",
                "In a double auction (DA), multiple buyers and sellers trade units of an identical good [20].",
                "In a combinatorial auction (CA), a single seller has multiple heterogeneous items up for sale [11].",
                "Buyers may have complementarities or substitutabilities between goods, and are provided with an expressive bidding language.",
                "A common goal in both market designs is to determine the efficient allocation, which is the allocation that maximizes total value.",
                "A combinatorial exchange (CE) [24] is a combinatorial double auction that brings together multiple buyers and sellers to trade multiple heterogeneous goods.",
                "For example, in an exchange for wireless spectrum, a bidder may declare that she is willing to pay $1 million for a trade where she obtains licenses for New York City, Boston, and Philadelphia, and loses her license for Washington DC.",
                "Thus, unlike a DA, a CE allows all participants to express complex valuations via expressive bids.",
                "Unlike a CA, a CE allows for fragmented ownership, with multiple buyers and sellers and agents that are both buying and selling.",
                "CEs have received recent attention both in the context of wireless spectrum allocation [18] and for airport takeoff and landing slot allocation [3].",
                "In both of these domains there are incumbents with property rights, and it is important to facilitate a complex multi-way reallocation of resources.",
                "Another potential application domain for CEs is to resource allocation in shared distributed systems, such as PlanetLab [13].",
                "The instantiation of our general purpose design to specific domains is a compelling next step in our research.",
                "This paper presents the first design for an iterative combinatorial exchange (ICE).",
                "The genesis of this project was a class, CS 286r Topics at the Interface between Economics and Computer Science, taught at Harvard University in Spring 2004.1 The entire class was dedicated to the design and prototyping of an iterative CE.",
                "The ICE design problem is multi-faceted and quite hard.",
                "The main innovation in our design is an expressive yet concise tree-based bidding language (which generalizes known languages such as XOR/OR [23]), and the tight coupling of this language with efficient algorithms for <br>price</br>-feedback to guide bidding, winner-determination to determine trades, and revealed-preference activity rules to ensure progress across rounds.",
                "The exchange is iterative: bidders express upper and lower valuations on trades by annotating their bid-tree, and then tighten these bounds in response to <br>price</br> feedback in each round.",
                "The Threshold payment rule, introduced by Parkes et al. [24], is used to determine final payments.",
                "The exchange has a number of interesting theoretical properties.",
                "For instance, when there exist linear prices we establish soundness and completeness: for straightforward bidders that adjust their bounds to meet activity rules while keeping their true value within the bounds, the exchange will terminate with the efficient allocation.",
                "In addition, the 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Truth Agent Act Rule WD ACC FAIR BALClosing RuleVickreyThreshold DONE !",
                "DONE 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER 2,2 +A +15 +8 +B +15 +8 BUYER 2,2 -A -2 -6 -B -2 -6 SELLER BUYER, buy AB SELLER, sell AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PBUYER = 16 - (4-0) = 12 PSELLER = -12 - (4-0) = -16 PBUYER = 14 PSELLER = -14 Pessim istic O ptim istic = 1 Figure 1: ICE System Flow of Control efficient allocation can often be determined without bidders revealing, or even knowing, their exact value for all trades.",
                "This is essential in complex domains where the valuation problem can itself be very challenging for a participant [28].",
                "While we cannot claim that straightforward bidding is an equilibrium of the exchange (and indeed, should not expect to by the Myerson-Satterthwaite impossibility theorem [22]), the Threshold payment rule minimizes the ex post incentive to manipulate across all budget-balanced payment rules.",
                "The exchange is implemented in Java and is currently in validation.",
                "In describing the exchange we will first provide an overview of the main components and introduce several working examples.",
                "Then, we introduce the basic components for a simple one-shot variation in which bidders state their exact values for trades in a single round.",
                "We then describe the full iterative exchange, with upper and lower values, <br>price</br>-feedback, activity rules, and termination conditions.",
                "We state some theoretical properties of the exchange, and end with a discussion to motivate our main design decisions, and suggest some next steps. 2.",
                "AN OVERVIEW OF THE ICE DESIGN The design has four main components, which we will introduce in order through the rest of the paper: • Expressive and concise tree-based bidding language.",
                "The language describes values for trades, such as my value for selling AB and buying C is $100, or my value for selling ABC is -$50, with negative values indicating that a bidder must receive a payment for the trade to be acceptable.",
                "The language allows bidders to express upper and lower bounds on value, which can be tightened across rounds. • Winner Determination.",
                "Winner-determination (WD) is formulated as a mixed-integer program (MIP), with the structure of the bid-trees captured explicitly in the formulation.",
                "Comparing the solution at upper and lower values allows for a determination to be made about termination, with progress in intermediate rounds driven by an intermediate valuation and the lower values adopted on termination. • Payments.",
                "Payments are computed using the Threshold payment rule [24], with the intermediate valuations adopted in early rounds and lower values adopted on termination. • <br>price</br> feedback.",
                "An approximate <br>price</br> is computed for each item in the exchange in each round, in terms of the intermediate valuations and the provisional trade.",
                "The prices are optimized to approximate competitive equilibrium prices, and further optimized to best approximate the current Threshold payments with remaining ties broken to favor prices that are balanced across different items.",
                "In computing the prices, we adopt the methods of constraint-generation to exploit the structure of the bidding language and avoid enumerating all feasible trades.",
                "The subproblem to generate new constraints is a variation of the WD problem. • Activity rule.",
                "A revealed-preference activity rule [1] ensures progress across rounds.",
                "In order to remain active, a bidder must tighten bounds so that there is enough information to define a trade that maximizes surplus at the current prices.",
                "Another variation on the WD problem is formulated, both to verify that the activity rule is met and also to provide feedback to a bidder to explain how to meet the rule.",
                "An outline of the ICE system flow of control is provided in Figure 1.",
                "We will return to this example later in the paper.",
                "For now, just observe in this two-agent example that the agents state lower and upper bounds that are checked in the activity rule, and then passed to winner-determination (WD), and then through three stages of pricing (accuracy, fairness, balance).",
                "On passing the closing rule (in which parameters αeff and αthresh are checked for convergence of the trade and payments), the exchange goes to a last-and-final round.",
                "At the end of this round, the trade and payments are finally determined, based on the lower valuations. 2.1 Related Work Many ascending-<br>price</br> one-sided CAs are known in the literature [10, 25, 29].",
                "Direct elicitation approaches have also been proposed for one-sided CAs in which agents respond to explicit queries about their valuations [8, 14, 19].",
                "A number of ascending CAs are designed to work with simple prices on items [12, 17].",
                "The <br>price</br> generation methods that we use in ICE generalize the methods in these earlier papers.",
                "Parkes et al. [24] studied sealed-bid combinatorial exchanges and introduced the Threshold payment rule.",
                "Subsequently, Krych [16] demonstrated experimentally that the Threshold rule promotes efficient allocations.",
                "We are not aware of any previous studies of iterative CEs.",
                "Dominant strategy DAs are known for unit demand [20] and also for single-minded agents [2].",
                "No dominant strategy mechanisms are known for the general CE problem.",
                "ICE is a hybrid auction design, in that it couples simple item prices to drive bidding in early rounds with combinatorial WD and payments, a feature it shares with the clock-proxy design of Ausubel et al. [1] for one-sided CAs.",
                "We adopt a variation on the clock-proxy auctionss revealedpreference activity rule.",
                "The bidding language shares some structural elements with the LGB language of Boutilier and Hoos [7], but has very different semantics.",
                "Rothkopf et al. [27] also describe a restricted tree-based bidding language.",
                "In LGB, the semantics are those of propositional logic, with the same items in an allocation able to satisfy a tree in multiple places.",
                "Although this can make LGB especially concise in some settings, the semantics that we propose appear to provide useful locality, so that the value of one component in a tree can be understood independently from the rest of the tree.",
                "The idea of capturing the structure of our bidding language explicitly within a mixed-integer programming formulation follows the developments in Boutilier [6]. 3.",
                "PRELIMINARIES In our model, we consider a set of goods, indexed {1, . . . , m} and a set of bidders, indexed {1, . . . , n}.",
                "The initial allocation of goods is denoted x0 = (x0 1, . . . , x0 n), with x0 i = (x0 i1, . . . , x0 im) and x0 ij ≥ 0 for good j indicating the number 250 of units of good j held by bidder i.",
                "A trade λ = (λ1, . . . , λn) denotes the change in allocation, with λi = (λi1, . . . , λim) where λij ∈   is the change in the number of units of item j to bidder i.",
                "So, the final allocation is x1 = x0 + λ.",
                "Each bidder has a value vi(λi) ∈ ¡ for a trade λi.",
                "This value can be positive or negative, and represents the change in value between the final allocation x0 i +λi and the initial allocation x0 i .",
                "Utility is quasi-linear, with ui(λi, p) = vi(λi)−p for trade λi and payment p ∈ ¡ .",
                "<br>price</br> p can be negative, indicating the bidder receives a payment for the trade.",
                "We use the term payoff interchangeably with utility.",
                "Our goal in the ICE design is to implement the efficient trade.",
                "The efficient trade, λ∗ , maximizes the total increase in value across bidders.",
                "Definition 1 (Efficient trade).",
                "The efficient trade λ∗ solves max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Constraints (1) ensure that no agent sells more items than it has in its initial allocation.",
                "Constraints (2) provide free disposal, and allows feasible trades to sell more items than are purchased (but not vice versa).",
                "Later, we adopt Feas(x0 ) to denote the set of feasible trades, given these constraints and given an initial allocation x0 = (x0 1, . . . , x0 n). 3.1 Working Examples In this section, we provide three simple examples of instances that we will use to illustrate various components of the exchange.",
                "All three examples have only one seller, but this is purely illustrative.",
                "Example 1.",
                "One seller and one buyer, two goods {A, B}, with the seller having an initial allocation of AB.",
                "Changes in values for trades: seller buyer AND(−A, −B) AND(+A, +B) -10 +20 The AND indicates that both the buyer and the seller are only interested in trading both goods as a bundle.",
                "Here, the efficient (value-maximizing) trade is for the seller to sell AB to the buyer, denoted λ∗ = ([−1, −1], [+1, +1]).",
                "Example 2.",
                "One seller and four buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 buyer 3 buyer 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 The OR indicates that the seller is willing to sell any number of goods.",
                "The XOR indicates that buyers 2 and 4 are willing to buy at most one of the two goods in which they are interested.",
                "The efficient trade is for bundle AB to go to buyer 1 and bundle CD to buyer 3, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER Example 1: Example 3: 2,2 +C +D BUYER 2 2,2 +A +B BUYER 1 +11 +84,4 -B SELLER -A -C -D Example 2: 1,1 +A +B BUYER 2 2,2 +A +B BUYER 1 +6 +40,4 -B SELLER -C -D-A 1,1 +C +D BUYER 4 2,2 +C +D +3 +2 BUYER 3 -18 Figure 2: Example Bid Trees.",
                "Example 3.",
                "One seller and two buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 AND(−A, −B, −C, −D) AND(+A, +B) AND(+C, +D) -18 +11 +8 The efficient trade is for bundle AB to go to buyer 1 and bundle CD to go to buyer 2, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4.",
                "A ONE-SHOT EXCHANGE DESIGN The description of ICE is broken down into two sections: one-shot (sealed-bid) and iterative.",
                "In this section we abstract away the iterative aspect and introduce a specialization of the tree-based language that supports only exact values on nodes. 4.1 Tree-Based Bidding Language The bidding language is designed to be expressive and concise, entirely symmetric with respect to buyers and sellers, and to extend to capture bids from mixed buyers and sellers, ranging from simple swaps to highly complex trades.",
                "Bids are expressed as annotated bid trees, and define a bidders value for all possible trades.",
                "The language defines changes in values on trades, with leaves annotated with traded items and nodes annotated with changes in values (either positive or negative).",
                "The main feature is that it has a general interval-choose logical operator on internal nodes, and that it defines careful semantics for propagating values within the tree.",
                "We illustrate the language on each of Examples 1-3 in Figure 2.",
                "The language has a tree structure, with trades on items defined on leaves and values annotated on nodes and leaves.",
                "The nodes have zero values where no value is indicated.",
                "Internal nodes are also labeled with interval-choose (IC) ranges.",
                "Given a trade, the semantics of the language define which nodes in the tree can be satisfied, or switched-on.",
                "First, if a child is on then its parent must be on.",
                "Second, if a parent node is on, then the number of children that are on must be within the IC range on the parent node.",
                "Finally, leaves in which the bidder is buying items can only be on if the items are provided in the trade.",
                "For instance, in Example 2 we can consider the efficient trade, and observe that in this trade all nodes in the trees of buyers 1 and 3 (and also the seller), but none of the nodes in the trees of buyers 2 and 4, can be on.",
                "On the other hand, in 251 the trade in which A goes to buyer 2 and D to buyer 4, then the root and appropriate leaf nodes can be on for buyers 2 and 4, but no nodes can be on for buyers 1 and 3.",
                "Given a trade there is often a number of ways to choose the set of satisfied nodes.",
                "The semantics of the language require that the nodes that maximize the summed value across satisfied nodes be activated.",
                "Consider bid tree Ti from bidder i.",
                "This defines nodes β ∈ Ti, of which some are leaves, Leaf (i) ⊆ Ti.",
                "Let Child(β) ⊆ Ti denote the children of a node β (that is not itself a leaf).",
                "All nodes except leaves are labeled with the interval-choose operator [IC x i (β), ICy i (β)].",
                "Every node is also labeled with a value, viβ ∈ ¡ .",
                "Each leaf β is labeled with a trade, qiβ ∈   m (i.e., leaves can define a bundled trade on more than one type of item.)",
                "Given a trade λi to bidder i, the interval-choose operators and trades on leaves define which nodes can be satisfied.",
                "There will often be a choice.",
                "Ties are broken to maximize value.",
                "Let satiβ ∈ {0, 1} denote whether node β is satisfied.",
                "Solution sati is valid given tree Ti and trade λi, written sati ∈ valid(Ti, λi), if and only if: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Child(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Leaf (i) (5) In words, a set of leaves can only be considered satisfied given trade λi if the total increase in quantity summed across all such leaves is covered by the trade, for all goods (Eq. 4).",
                "This works for sellers as well as buyers: for sellers a trade is negative and this requires that the total number of items indicated sold in the tree is at least the total number sold as defined in the trade.",
                "We also need upwards-propagation: any time a node other than the root is satisfied then its parent must be satisfied (by   β ∈Child(β) satiβ ≤ ICy i (β)satiβ in Eq. 5).",
                "Finally, we need downwards-propagation: any time an internal node is satisfied then the appropriate number of children must also be satisfied (Eq. 5).",
                "The total value of trade λi, given bid-tree Ti, is defined as: vi(Ti, λi) = max sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) The tree-based language generalizes existing languages.",
                "For instance: IC(2, 2) on a node with 2 children is equivalent to an AND operator; IC(1, 3) on a node with 3 children is equivalent to an OR operator; and IC(1, 1) on a node with 2 children is equivalent to an XOR operator.",
                "Similarly, the XOR/OR bidding languages can be directly expressed as a bid tree in our language.2 4.2 Winner Determination This section defines the winner determination problem, which is formulated as a MIP and solved in our implementation with a commercial solver.3 The solver uses branchand-bound search with dynamic cut generation and branching heuristics to solve large MIPs in economically feasible run times. 2 The OR* language is the OR language with dummy items to provide additional structure.",
                "OR* is known to be expressive and concise.",
                "However, it is not known whether OR* dominates XOR/OR in terms of conciseness [23]. 3 CPLEX, www.ilog.com In defining the MIP representation we are careful to avoid an XOR-based enumeration of all bundles.",
                "A variation on the WD problem is reused many times within the exchange, e.g. for column generation in pricing and for checking revealed preference.",
                "Given bid trees T = (T1, . . . , Tn) and initial allocation x0 , the mixed-integer formulation for WD is: WD(T, x0 ) : max λ,sat ¢ i ¢ β∈Ti viβ · satiβ s.t. (1), (2), satiβ ∈ {0, 1}, λij ∈   sati ∈ valid(Ti, λi), ∀i Some goods may go unassigned because free disposal is allowed within the clearing rules of winner determination.",
                "These items can be allocated back to agents that sold the items, i.e. for which λij < 0. 4.3 Computing Threshold Payments The Threshold payment rule is based on the payments in the Vickrey-Clarke-Groves (VCG) mechanism [15], which itself is truthful and efficient but does not satisfy budget balance.",
                "Budget-balance requires that the total payments to the exchange are equal to the total payments made by the exchange.",
                "In VCG, the payment paid by agent i is pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) where λ∗ is the efficient trade, V ∗ is the reported value of this trade, and V−i is the reported value of the efficient trade that would be implemented without bidder i.",
                "We call ∆vcg,i = V ∗ − V−i the VCG discount.",
                "For instance, in Example 1 pvcg,seller = −10 − (+10 − 0) = −20 and pvcg,buyer = +20 − (+10 − 0) = 10, and the exchange would run at a budget deficit of −20 + 10 = −10.",
                "The Threshold payment rule [24] determines budgetbalanced payments to minimize the maximal error across all agents to the VCG outcome.",
                "Definition 2.",
                "The Threshold payment scheme implements the efficient trade λ∗ given bids, and sets payments pthresh,i = ˆvi(λ∗ i ) − ∆i, where ∆ = (∆1, . . . , ∆n) is set to minimize maxi(∆vcg,i − ∆i) subject to ∆i ≤ ∆vcg,i and   i ∆i ≤ V ∗ (this gives budget-balance).",
                "Example 4.",
                "In Example 2, the VCG discounts are (9, 2, 0, 1, 0) to the seller and four buyers respectively, VCG payments are (−9, 4, 0, 2, 0) and the exchange runs at a deficit of -3.",
                "In Threshold, the discounts are (8, 1, 0, 0, 0) and the payments are (−8, 5, 0, 3, 0).",
                "This minimizes the worst-case error to VCG discounts across all budget-balanced payment schemes.",
                "Threshold payments are designed to minimize the maximal ex post incentive to manipulate.",
                "Krych [16] confirmed that Threshold promotes allocative efficiency in restricted and approximate Bayes-Nash equilibrium. 5.",
                "THE ICE DESIGN We are now ready to introduce the iterative combinatorial exchange (ICE) design.",
                "Several new components are introduced, relative to the design for the one-shot exchange.",
                "Rather than provide precise valuations, bidders can provide lower and upper valuations and revise this bid information across rounds.",
                "The exchange provides <br>price</br>-based feedback 252 to guide bidders in this process, and terminates with an efficient (or approximately-efficient) trade with respect to reported valuations.",
                "In each round t ∈ {0, 1, . . .} the current lower and upper bounds, vt and vt , are used to define a provisional valuation profile vα (the α-valuation), together with a provisional trade λt and provisional prices pt = (pt 1, . . . , pt m) on items.",
                "The α-valuation is a linear combination of the current upper and lower valuations, with αEFF ∈ [0, 1] chosen endogenously based on the closeness of the optimistic trade (at v) and the pessimistic trade (at v).",
                "Prices pt are used to inform an activity rule, and drive progress towards an efficient trade. 5.1 Upper and Lower Valuations The bidding language is extended to allow a bidder i to report a lower and upper value (viβ, viβ) on each node.",
                "These take the place of the exact value viβ defined in Section 4.1.",
                "Based on these labels, we can define the valuation functions vi(Ti, λi) and vi(Ti, λi), using the exact same semantics as in Eq. (6).",
                "We say that such a bid-tree is well-formed if viβ ≤ viβ for all nodes.",
                "The following lemma is useful: Lemma 1.",
                "Given a well-formed tree, T, then vi(Ti, λi) ≤ vi(Ti, λi) for all trades.",
                "Proof.",
                "Suppose there is some λi for which vi(Ti, λi) > vi(Ti, λi).",
                "Then, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ.",
                "But, this is a contradiction because the trade λ that defines vi(Ti, λi) is still feasible with upper bounds vi, and viβ ≥ viβ for all nodes β in a well-formed tree. 5.2 <br>price</br> Feedback In each round, approximate competitive-equilibrium (CE) prices, pt = (pt 1, . . . , pt m), are determined.",
                "Given these provisional prices, the <br>price</br> on trade λi for bidder i is pt (λi) =   j≤m pt j · λij.",
                "Definition 3 (CE prices).",
                "Prices p∗ are competitive equilibrium prices if the efficient trade λ∗ is supported at prices p∗ , so that for each bidder: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) CE prices will not always exist and we will often need to compute approximate prices [5].",
                "We extend ideas due to Rassenti et al. [26], Kwasnica et al. [17] and Dunford et al. [12], and select approximate prices as follows: I: Accuracy.",
                "First, we compute prices that minimize the maximal error in the best-response constraints across all bidders.",
                "II: Fairness.",
                "Second, we break ties to prefer prices that minimize the maximal deviation from Threshold payments across all bidders.",
                "III: Balance.",
                "Third, we break ties to prefer prices that minimize the maximal <br>price</br> across all items.",
                "Taken together, these steps are designed to promote the informativeness of the prices in driving progress across rounds.",
                "In computing prices, we explain how to compute approximate (or otherwise) prices for structured bidding languages, and without enumerating all possible trades.",
                "For this, we adopt constraint generation to efficient handle an exponential number of constraints.",
                "Each step is described in detail below.",
                "I: Accuracy.",
                "We adopt a definition of <br>price</br> accuracy that generalizes the notions adopted in previous papers for unstructured bidding languages.",
                "Let λt denote the current provisional trade and suppose the provisional valuation is vα .",
                "To compute accurate CE prices, we consider: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j.",
                "This linear program (LP) is designed to find prices that minimize the worst-case error across all agents.",
                "From the definition of CE prices, it follows that CE prices would have δ = 0 as a solution to (9), at which point trade λt i would be in the best-response set of every agent (with λt i = ∅, i.e. no trade, for all agents with no surplus for trade at the prices.)",
                "Example 5.",
                "We can illustrate the formulation (9) on Example 2, assuming for simplicity that vα = v (i.e. truth).",
                "The efficient trade allocates AB to buyer 1 and CD to buyer 3.",
                "Accuracy will seek prices p(A), p(B), p(C) and p(D) to minimize the δ ≥ 0 required to satisfy constraints: p(A) + p(B) + p(C) + p(D) ≥ 0 (seller) p(A) + p(B) ≤ 6 + δ (buyer 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (buyer 2) p(C) + p(D) ≤ 3 (buyer 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (buyer 4) An optimal solution requires p(A) = p(B) = 10/3, with δ = 2/3, with p(C) and p(D) taking values such as p(C) = p(D) = 3/2.",
                "But, (9) has an exponential number of constraints (Eq. 10).",
                "Rather than solve it explicitly we use constraint generation [4] and dynamically generate a sufficient subset of constraints.",
                "Let   i denote a manageable subset of all possible feasible trades to bidder i.",
                "Then, a relaxed version of (9) (written ACC) is formulated by substituting (10) with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) where   i is a set of trades that are feasible for bidder i given the other bids.",
                "Fixing the prices p∗ , we then solve n subproblems (one for each bidder), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0 ), (12) to check whether solution (p∗ , δ∗ ) to ACC is feasible in problem (9).",
                "In R-WD(i) the objective is to determine a most preferred trade for each bidder at these prices.",
                "Let ˆλi denote the solution to R-WD(i).",
                "Check condition: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) and if this condition holds for all bidders i, then solution (p∗ , δ∗ ) is optimal for problem (9).",
                "Otherwise, trade ˆλi is added to   i for all bidders i for which this constraint is 253 violated and we re-solve the LP with the new set of constraints.4 II: Fairness.",
                "Second, we break remaining ties to prefer fair prices: choosing prices that minimize the worst-case error with respect to Threshold payoffs (i.e. utility to bidders with Threshold payments), but without choosing prices that are less accurate.5 Example 6.",
                "For example, accuracy in Example 1 (depicted in Figure 1) requires 12 ≤ pA +pB ≤ 16 (for vα = v).",
                "At these valuations the Threshold payoffs would be 2 to both the seller and the buyer.",
                "This can be exactly achieved in pricing with pA + pB = 14.",
                "The fairness tie-breaking method is formulated as the following LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution, from ACC.",
                "The objective here is the same as in the Threshold payment rule (see Section 4.3): minimize the maximal error between bidder payoff (at vα ) for the provisional trade and the VCG payoff (at vα ).",
                "Problem FAIR is also solved through constraint generation, using R-WD(i) to add additional violated constraints as necessary.",
                "III: Balance.",
                "Third, we break remaining ties to prefer balanced prices: choosing prices that minimize the maximal <br>price</br> across all items.",
                "Returning again to Example 1, depicted in Figure 1, we see that accuracy and fairness require p(A) + p(B) = 14.",
                "Finally, balance sets p(A) = p(B) = 7.",
                "Balance is justified when, all else being equal, items are more likely to have similar than dissimilar values.6 The LP for balance is formulated as follows: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution from ACC and π∗ represents the error in the optimal solution from FAIR.",
                "Constraint generation is also used to solve BAL, generating new trades for   i as necessary. 4 Problem R-WD(i) is a specialization of the WD problem, in which the objective is to maximize the payoff of a single bidder, rather than the total value across all bidders.",
                "It is solved as a MIP, by rewriting the objective in WD(T, x0 ) as max{viβ · satiβ −   j p∗ j · λij } for agent i.",
                "Thus, the structure of the bid-tree language is exploited in generating new constraints, because this is solved as a concise MIP.",
                "The other bidders are kept around in the MIP (but do not appear in the objective), and are used to define the space of feasible trades. 5 The methods of Dunford et al. [12], that use a nucleolus approach, are also closely related. 6 The use of balance was advocated by Kwasnica et al. [17].",
                "Dunford et al. [12] prefer to smooth prices across rounds.",
                "Comment 1: Lexicographical Refinement.",
                "For all three sub-problems we also perform lexicographical refinement (with respect to bidders in ACC and FAIR, and with respect to goods in BAL).",
                "For instance, in ACC we successively minimize the maximal error across all bidders.",
                "Given an initial solution we first pin down the error on all bidders for whom a constraint (11) is binding.",
                "For such a bidder i, the constraint is replaced with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) and the error to bidder i no longer appears explicitly in the objective.",
                "ACC is then re-solved, and makes progress by further minimizing the maximal error across all bidders yet to be pinned down.",
                "This continues, pinning down any new bidders for whom one of constraints (11) is binding, until the error is lexicographically optimized for all bidders.7 The exact same process is repeated for FAIR and BAL, with bidders pinned down and constraints (15) replaced with π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (where π∗ i is the current objective) in FAIR, and items pinned down and constraints (18) replaced with p∗ j ≥ pj (where p∗ j represents the target for the maximal <br>price</br> on that item) in BAL.",
                "Comment 2: Computation.",
                "All constraints in   i are retained, and this set grows across all stages and across all rounds of the exchange.",
                "Thus, the computational effort in constraint generation is re-used.",
                "In implementation we are careful to address a number of -issues that arise due to floating-point issues.",
                "We prefer to err on the side of being conservative in determining whether or not to add another constraint in performing check (13).",
                "This avoids later infeasibility issues.",
                "In addition, when pinning-down bidders for the purpose of lexicographical refinement we relax the associated bidder-constraints with a small > 0 on the righthand side. 5.3 Revealed-Preference Activity Rules The role of activity rules in the auction is to ensure both consistency and progress across rounds [21].",
                "Consistency in our exchange requires that bidders tighten bounds as the exchange progresses.",
                "Activity rules ensure that bidders are active during early rounds, and promote useful elicitation throughout the exchange.",
                "We adopt a simple revealed-preference (RP) activity rule.",
                "The idea is loosely based around the RP-rule in Ausubel et al. [1], where it is used for one-sided CAs.",
                "The motivation is to require more than simply consistency: we need bidders to provide enough information for the system to be able to to prove that an allocation is (approximately) efficient.",
                "It is helpful to think about the bidders interacting with proxy agents that will act on their behalf in responding to provisional prices pt−1 determined at the end of round t − 1.",
                "The only knowledge that such a proxy has of the valuation of a bidder is through the bid-tree.",
                "Suppose a proxy was queried by the exchange and asked which trade the bidder was most interested in at the provisional prices.",
                "The RP rule says the following: the proxy must have enough 7 For example, applying this to accuracy on Example 2 we solve once and find bidders 1 and 2 are binding, for error δ∗ = 2/3.",
                "We pin these down and then minimize the error to bidders 3 and 4.",
                "Finally, this gives p(A) = p(B) = 10/3 and p(C) = p(D) = 5/3, with accuracy 2/3 to bidders 1 and 2 and 1/3 to bidders 3 and 4. 254 information to be able to determine this surplus-maximizing trade at current prices.",
                "Consider the following examples: Example 7.",
                "A bidder has XOR(+A, +B) and a value of +5 on the leaf +A and a value range of [5,10] on leaf +B.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the proxy knows that however the remaining value uncertainty on +B is resolved the bidder will always (weakly) prefer +B to +A.",
                "Example 8.",
                "A bidder has XOR(+A, +B) and value bounds [5, 10] on the root node and a value of 1 on leaf +A.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the bidder will always prefer +A to +B at equal prices, whichever way the uncertain value on the root node is ultimately resolved.",
                "Overloading notation, let vi ∈ Ti denote a valuation that is consistent with lower and upper valuations in bid tree Ti.",
                "Definition 4.",
                "Bid tree Ti satisfies RP at prices pt−1 if and only if there exists some feasible trade L∗ for which, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. (20) To make this determination for bidder i we solve a sequence of problems, each of which is a variation on the WD problem.",
                "First, we construct a candidate lower-bound trade, which is a feasible trade that solves: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) The solution π∗ l to RP1(i) represents the maximal payoff that bidder i can achieve across all feasible trades, given its pessimistic valuation.",
                "Second, we break ties to find a trade with maximal value uncertainty across all possible solutions to RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] s.t. λ ∈ Feas(x0 ) (22) vi(λi) − pt−1 (λi) ≥ π∗ l (23) We adopt solution L∗ i as our candidate for the trade that may satisfy RP.",
                "To understand the importance of this tiebreaking rule consider Example 7.",
                "The proxy can prove +B but not +A is a best-response for all vi ∈ Ti, and should choose +B as its candidate.",
                "Notice that +B is a counterexample to +A, but not the other way round.",
                "Now, we construct a modified valuation ˜vi, by setting ˜viβ =   viβ , if β ∈ sat(L∗ i ) viβ , otherwise. (24) where sat(L∗ i ) is the set of nodes that are satisfied in the lower-bound tree for trade L∗ i .",
                "Given this modified valuation, we find U∗ to solve: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Let π∗ u denote the payoff from this optimal trade at modified values ˜v.",
                "We call trade U∗ i the witness trade.",
                "We show in Proposition 1 that the RP rule is satisfied if and only if π∗ l ≥ π∗ u. Constructing the modified valuation as ˜vi recognizes that there is shared uncertainty across trades that satisfy the same nodes in a bid tree.",
                "Example 8 helps to illustrate this.",
                "Just using vi in RP3(i), we would find L∗ i is buy A with payoff π∗ l = 3 but then find U∗ i is buy B with π∗ u = 7 and fail RP.",
                "We must recognize that however the uncertainty on the root node is resolved it will affect +A and +B in exactly the same way.",
                "For this reason, we set ˜viβ = viβ = 5 on the root node, which is exactly the same value that was adopted in determining π∗ l .",
                "Then, RP3(i) applied to U∗ i gives buy A and the RP test is judged to be passed.",
                "Proposition 1.",
                "Bid tree Ti satisfies RP given prices pt−1 if and only if any lower-bound trade L∗ i that solves RP1(i) and RP2(i) satisfies: vi(Ti, L∗ i ) − pt−1 (L∗ i ) ≥ ˜vi(Ti, U∗ i ) − pt−1 (U∗ i ), (26) where ˜vi is the modified valuation in Eq. (24).",
                "Proof.",
                "For sufficiency, notice that the difference in payoff between trade L∗ i and another trade λi is unaffected by the way uncertainty is resolved on any node that is satisfied in both L∗ i and λi.",
                "Fixing the values in ˜vi on nodes satisfied in L∗ i has the effect of removing this consideration when a trade U∗ i is selected that satisfies one of these nodes.",
                "On the other hand, fixing the values on these nodes has no effect on trades considered in RP3(i) that do not share a node with L∗ i .",
                "For the necessary direction, we first show that any trade that satisfies RP must solve RP1(i).",
                "Suppose otherwise, that some λi with payoff greater than π∗ l satisfies RP.",
                "But, valuation vi ∈ Ti together with L∗ i presents a counterexample to RP (Eq. 20).",
                "Now, suppose (for contradiction) that some λi with maximal payoff π∗ l but uncertainty less than L∗ i satisfies RP.",
                "Proceed by case analysis.",
                "Case a): only one solution to RP1(i) has uncertain value and so λi has certain value.",
                "But, this cannot satisfy RP because L∗ i with uncertain value would be a counterexample to RP (Eq. 20).",
                "Case b): two or more solutions to RP1(i) have uncertain value.",
                "Here, we first argue that one of these trades must satisfy a (weak) superset of all the nodes with uncertain value that are satisfied by all other trades in this set.",
                "This is by RP.",
                "Without this, then for any choice of trade that solves RP1(i), there is another trade with a disjoint set of uncertain but satisfied nodes that provides a counterexample to RP (Eq. 20).",
                "Now, consider the case that some trade contains a superset of all the uncertain satisfied nodes of the other trades.",
                "Clearly RP2(i) will choose this trade, L∗ i , and λi must satisfy a subset of these nodes (by assumption).",
                "But, we now see that λi cannot satisfy RP because L∗ i would be a counterexample to RP.",
                "Failure to meet the activity rule must have some consequence.",
                "In the current rules, the default action we choose is to set the upper bounds in valuations down to the maximal value of the provisional <br>price</br> on a node8 and the lowerbound value on that node.9 Such a bidder can remain active 8 The provisional <br>price</br> on a node is defined as the minimal total price across all feasible trades for which the subtree rooted at the tree is satisfied. 9 This is entirely analogous to when a bidder in an ascending clock auction stops bidding at a price: she is not permitted to bid at a higher price again in future rounds. 255 within the exchange, but only with valuations that are consistent with these new bounds. 5.4 Bidder Feedback In each round, our default design provides every bidder with the provisional trade and also with the current provisional prices.",
                "See 7 for an additional discussion.",
                "We also provide guidance to help a bidder meet the RP rule.",
                "Let sat(L∗ i ) and sat(U∗ i ) denote the nodes that are satisfied in trades L∗ i and U∗ i , as computed in RP1-RP3.",
                "Lemma 2.",
                "When RP fails, a bidder must increase a lower bound on at least one node in sat(L∗ i ) \\ sat(U∗ i ) or decrease an upper bound on at least one node in sat(U∗ i ) \\ sat(L∗ i ) in order to meet the activity rule.",
                "Proof.",
                "Changing the upper- or lower- values on nodes that are not satisfied by either trade does not change L∗ i or U∗ i , and does not change the payoff from these trades.",
                "Thus, the RP condition will continue to fail.",
                "Similarly, changing the bounds on nodes that are satisfied in both trades has no effect on revealed preference.",
                "A change to a lower bound on a shared node affects both L∗ i and U∗ i identically because of the use of the modified valuation to determine U∗ i .",
                "A change to an upper bound on a shared node has no effect in determining either L∗ i or U∗ i .",
                "Note that when sat(U∗ i ) = sat(L∗ i ) then condition (26) is always trivially satisfied, and so the guidance in the lemma is always well-defined when RP fails.",
                "This is an elegant feedback mechanism because it is adaptive.",
                "Once a bidder makes some changes on some subset of these nodes, the bidder can query the exchange.",
                "The exchange can then respond yes, or can revise the set of nodes sat(λ∗ l ) and sat(λ∗ u) as necessary. 5.5 Termination Conditions Once each bidder has committed its new bids (and either met the RP rule or suffered the penalty) then round t closes.",
                "At this point, the task is to determine the new α-valuation, and in turn the provisional allocation λt and provisional prices pt .",
                "A termination condition is also checked, to determine whether to move the exchange to a last-and-final round.",
                "To define the α-valuation we compute the following two quantities: Pessimistic at Pessimistic (PP) Determine an efficient trade, λ∗ l , at pessimistic values, i.e. to solve maxλ   i vi(λi), and set PP=  i vi(λ∗ li).",
                "Pessimistic at Optimistic (PO) Determine an efficient trade, λ∗ u, at optimistic values, i.e. to solve maxλ   i vi(λi), and set PO=  i vi(λ∗ ui).",
                "First, note that PP ≥ PO and PP ≥ 0 by definition, for all bid-trees, although PO can be negative (because the right trade at v is not currently a useful trade at v).",
                "Recognizing this, define γeff (PP, PO) = 1 + PP − PO PP , (27) when PP > 0, and observe that γeff (PP, PO) ≥ 1 when this is defined, and that γeff (PP, PO) will start large and then trend towards 1 as the optimistic allocation converges towards the pessimistic allocation.",
                "In each round, we define αeff ∈ [0, 1] as: αeff =   0 when PP is 0 1/γeff otherwise (28) which is 0 while PP is 0 and then trends towards 1 once PP> 0 in some round.",
                "This is used to define α-valuation vα i = αeff vi + (1 − αeff )vi, ∀i, (29) which is used to define the provisional allocation and provisional prices.",
                "The effect is to endogenously define a schedule for moving from optimistic to pessimistic values across rounds, based on how close the trades are to one another.",
                "Termination Condition.",
                "In moving to the last-and-final round, and finally closing, we also care about the convergence of payments, in addition to the convergence towards an efficient trade.",
                "For this we introduce another parameter, αthresh ∈ [0, 1], that trends from 0 to 1 as the Threshold payments at lower and upper valuations converge.",
                "Consider the following parameter: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive) , (30) which is defined for PP > 0, where pthresh(v) denotes the Threshold payments at valuation profile v, Nactive is the number of bidders that are actively engaged in trade in the PP trade, and || · ||2 is the L2-norm.",
                "Note that γthresh is defined for payments and not payoffs.",
                "This is appropriate because it is the accuracy of the outcome of the exchange that matters: i.e. the trade and the payments.",
                "Given this, we define αthresh =   0 when PP is 0 1/γthresh otherwise (31) which is 0 while PP is 0 and then trends towards 1 as progress is made.",
                "Definition 5 (termination).",
                "ICE transitions to a lastand-final round when one of the following holds: 1. αeff ≥ CUTOFFeff and αthresh ≥ CUTOFFthresh, 2. there is no trade at the optimistic values, where CUTOFFeff , CUTOFFthresh ∈ (0, 1] determine the accuracy required for termination.",
                "At the end of the last-and-final round vα = v is used to define the final trade and the final Threshold payments.",
                "Example 9.",
                "Consider again Example 1, and consider the upper and lower bounds as depicted in Figure 1.",
                "First, if the sellers bounds were [−20, −4] then there is an optimistic trade but no pessimistic trade, and PO = −4 and PP = 0, and αeff = 0.",
                "At the bounds depicted, both the optimistic and the pessimistic trades occur and PO = PP = 4 and αeff = 1.",
                "However, we can see the Threshold payments are (17, −17) at v but (14, −14) at v. Evaluating γthresh , we have γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, and αthresh = 2/5.",
                "For CUTOFFthresh < 2/5 the exchange would remain open.",
                "On the other hand, if the buyers value for +AB was between [18, 24] and the sellers value for −AB was between [−12, −6], the Threshold payments are (15, −15) at both upper and lower bounds, and αthresh = 1. 256 Component Purpose Lines Agent.",
                "Captures strategic behavior and information revelation decisions 762 Model Support Provides XML support to load goods and valuations into world 200 World Keeps track of all agent, good, and valuation details 998 Exchange Driver & Communication Controls exchange, and coordinates remote agent behavior 585 Bidding Language Implements the tree-based bidding language 1119 Activity Rule Engine Implements the revealed preference rule with range support 203 Closing Rule Engine Checks if auction termination condition reached 137 WD Engine Provides WD-related logic 377 Pricing Engine Provides Pricing-related logic 460 MIP Builders Translates logic used by engines into our general optimizer formulation 346 Pricing Builders Used by three pricing stages 256 Winner Determination Builders Used by WD, activity rule, closing rule, and pricing constraint generation 365 Framework Support code; eases modular replacement of above components 510 Table 1: Exchange Component and Code Breakdown. 6.",
                "SYSTEMS INFRASTRUCTURE ICE is approximately 6502 lines of Java code, broken up into the functional packages described in Table 1.10 The prototype is modular so that researchers may easily replace components for experimentation.",
                "In addition to the core exchange discussed in this paper, we have developed an agent component that allows a user to simulate the behavior and knowledge of other players in the system, better allowing a user to formulate their strategy in advance of actual play.",
                "A user specifies a valuation model in an XMLinterpretation of our bidding language, which is revealed to the exchange via the agents strategy.",
                "Major exchange tasks are handled by engines that dictate the non-optimizer specific logic.",
                "These engines drive the appropriate MIP/LP builders.",
                "We realized that all of our optimization formulations boil down to two classes of optimization problem.",
                "The first, used by winner determination, activity rule, closing rule, and constraint generation in pricing, is a MIP that finds trades that maximize value, holding prices and slacks constant.",
                "The second, used by the three pricing stages, is an LP that holds trades constant, seeking to minimize slack, profit, or prices.",
                "We take advantage of the commonality of these problems by using common LP/MIP builders that differ only by a few functional hooks to provide the correct variables for optimization.",
                "We have generalized our back-end optimization solver interface11 (we currently support CPLEX and the LGPL- licensed LPSolve), and can take advantage of the load-balancing and parallel MIP/LP solving capability that this library provides. 7.",
                "DISCUSSION The bidding language was defined to allow for perfect symmetry between buyers and sellers and provide expressiveness in an exchange domain, for instance for mixed bidders interested in executing trades such as swaps.",
                "This proved especially challenging.",
                "The breakthrough came when we focused on changes in value for trades rather than providing absolute values for allocations.",
                "For simplicity, we require the same tree structure for both the upper and lower valuations. 10 Code size is measured in physical source line of code (SLOC), as generated using David A. Wheelers SLOC Count.",
                "The total of 6502 includes 184 for instrumentation (not shown in the table).",
                "The JOpt solver interface is another 1964 lines, and Castor automatically generates around 5200 lines of code for XML file manipulation. 11 http://econcs.eecs.harvard.edu/jopt This allows the language itself to ensure consistency (with the upper value at least the lower value on all trades) and enforce monotonic tightening of these bounds for all trades across rounds.",
                "It also provides for an efficient method to check the RP activity rule, because it makes it simple to reason about shared uncertainty between trades.",
                "The decision to adopt a direct and proxied approach in which bidders express their upper and lower values to a trusted proxy agent that interacts with the exchange was made early in the design process.",
                "In many ways this is the clearest and most immediate way to generalize the design in Parkes et al. [24] and make it iterative.",
                "In addition, this removes much opportunity for strategic manipulation: bidders are restricted to making (incremental) statements about their valuations.",
                "Another advantage is that it makes the activity rule easy to explain: bidders can always meet the activity rule by tightening bounds such that their true value remains in the support.12 Perhaps most importantly, having explicit information on upper and lower values permits progress in early rounds, even while there is no efficient trade at pessimistic values.",
                "Upper and lower bound information also provides guidance about when to terminate.",
                "Note that taken by itself, PP = PO does not imply that the current provisional trade is efficient with respect to all values consistent with current value information.",
                "The difference in values between different trades, aggregated across all bidders, could be similar at lower and upper bounds but quite different at intermediate values (including truth).",
                "Nevertheless, we conjecture that PP = PO will prove an excellent indicator of efficiency in practical settings where the shape of the upper and lower valuations does convey useful information.",
                "This is worthy of experimental investigation.",
                "Moreover, the use of <br>price</br> and RP activity provides additional guarantees.",
                "We adopted linear prices (prices on individual items) rather than non-linear prices (with prices on a trade not equal to the sum of the prices on the component items) early in the design process.",
                "The conciseness of this <br>price</br> representation is very important for computational tractability within the exchange and also to promote simplicity and transparency for bidders.",
                "The RP activity rule was adopted later, and is a good choice because of its excellent theoretical properties when coupled with CE prices.",
                "The following can be easily established: given exact CE prices pt−1 for provisional trade 12 This is in contrast to indirect <br>price</br>-based approaches, such as clock-proxy [1], in which bidders must be able to reason about the RP-constraints implied by bids in each round. 257 λt−1 at valuations vα , then if the upper and lower values at the start of round t already satisfy the RP rule (and without the need for any tie-breaking), the provisional trade is efficient for all valuations consistent with the current bid trees.",
                "When linear CE prices exist, this provides for a soundness and completeness statement: if PP = PO, linear CE prices exist, and the RP rule is satisfied, the provisional trade is efficient (soundness); if prices are exact CE prices for the provisional trade at vα , but the trade is inefficient with respect to some valuation profile consistent with the current bid trees, then at least one bidder must fail RP with her current bid tree and progress will be made (completeness).",
                "Future work must study convergence experimentally, and extend this theory to allow for approximate prices.",
                "Some strategic aspects of our ICE design deserve comment, and further study.",
                "First, we do not claim that truthfully responding to the RP rule is an ex post equilibrium.13 However, the exchange is designed to mimic the Threshold rule in its payment scheme, which is known to have useful incentive properties [16].",
                "We must be careful, though.",
                "For instance we do not suggest to provide αeff to bidders, because as αeff approaches 1 it would inform bidders that bid values are becoming irrelevant to determining the trade but merely used to determine payments (and bidders would become increasingly reluctant to increase their lower valuations).",
                "Also, no consideration has been given in this work to collusion by bidders.",
                "This is an issue that deserves some attention in future work. 8.",
                "CONCLUSIONS In this work we designed and prototyped a scalable and highly-expressive iterative combinatorial exchange.",
                "The design includes many interesting features, including: a new bid-tree language for exchanges, a new method to construct approximate linear prices from expressive languages, and a proxied elicitation method with optimistic and pessimistic valuations with a new method to evaluate a revealed- preference activity rule.",
                "The exchange is fully implemented in Java and is in a validation phase.",
                "The next steps for our work are to allow bidders to refine the structure of the bid tree in addition to values on the tree.",
                "We intend to study the elicitation properties of the exchange and we have put together a test suite of exchange problem instances.",
                "In addition, we are beginning to engage in collaborations to apply the design to airline takeoff and landing slot scheduling and to resource allocation in widearea network distributed computational systems.",
                "Acknowledgments We would like to dedicate this paper to all of the participants in CS 286r at Harvard University in Spring 2004.",
                "This work is supported in part by NSF grant IIS-0238147. 9.",
                "REFERENCES [1] L. Ausubel, P. Cramton, and P. Milgrom.",
                "The clock-proxy auction: A practical combinatorial auction design.",
                "In Cramton et al. [9], chapter 5. [2] M. Babaioff, N. Nisan, and E. Pavlov.",
                "Mechanisms for a spatially distributed market.",
                "In Proc. 5th ACM Conf. on Electronic Commerce, pages 9-20.",
                "ACM Press, 2001. 13 Given the Myerson-Satterthwaite impossibility theorem [22] and the method by which we determine the trade we should not expect this. [3] M. Ball, G. Donohue, and K. Hoffman.",
                "Auctions for the safe, efficient, and equitable allocation of airspace system resources.",
                "In S. Cramton, Shoham, editor, Combinatorial Auctions. 2004.",
                "Forthcoming. [4] D. Bertsimas and J. Tsitsiklis.",
                "Introduction to Linear Optimization.",
                "Athena Scientific, 1997. [5] S. Bikhchandani and J. M. Ostroy.",
                "The package assignment model.",
                "Journal of Economic Theory, 107(2):377-406, 2002. [6] C. Boutilier.",
                "A pomdp formulation of preference elicitation problems.",
                "In Proc. 18th National Conference on Artificial Intelligence (AAAI-02), 2002. [7] C. Boutilier and H. Hoos.",
                "Bidding languages for combinatorial auctions.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), 2001. [8] W. Conen and T. Sandholm.",
                "Preference elicitation in combinatorial auctions.",
                "In Proc. 3rd ACM Conf. on Electronic Commerce (EC-01), pages 256-259.",
                "ACM Press, New York, 2001. [9] P. Cramton, Y. Shoham, and R. Steinberg, editors.",
                "Combinatorial Auctions.",
                "MIT Press, 2004. [10] S. de Vries, J. Schummer, and R. V. Vohra.",
                "On ascending Vickrey auctions for heterogeneous objects.",
                "Technical report, MEDS, Kellogg School, Northwestern University, 2003. [11] S. de Vries and R. V. Vohra.",
                "Combinatorial auctions: A survey.",
                "Informs Journal on Computing, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana, and T. Wilson.",
                "Testing linear pricing algorithms for use in ascending combinatorial auctions.",
                "Technical report, SEOR, George Mason University, 2003. [13] Y. Fu, J.",
                "Chase, B. Chun, S. Schwab, and A. Vahdat.",
                "Sharp: an architecture for secure resource peering.",
                "In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 133-148.",
                "ACM Press, 2003. [14] B. Hudson and T. Sandholm.",
                "Effectiveness of query types and policies for preference elicitation in combinatorial auctions.",
                "In Proc. 3rd Int.",
                "Joint.",
                "Conf. on Autonomous Agents and Multi Agent Systems, pages 386-393, 2004. [15] V. Krishna.",
                "Auction Theory.",
                "Academic Press, 2002. [16] D. Krych.",
                "Calculation and analysis of Nash equilibria of Vickrey-based payment rules for combinatorial exchanges, Harvard College, April 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter, and C. DeMartini.",
                "A new and improved design for multi-object iterative auctions.",
                "Management Science, 2004.",
                "To appear. [18] E. Kwerel and J. Williams.",
                "A proposal for a rapid transition to market allocation of spectrum.",
                "Technical report, FCC Office of Plans and Policy, Nov 2002. [19] S. M. Lahaie and D. C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In Proc.",
                "ACM Conf. on Electronic Commerce, pages 180-188, 2004. [20] R. P. McAfee.",
                "A dominant strategy double auction.",
                "J. of Economic Theory, 56:434-450, 1992. [21] P. Milgrom.",
                "Putting auction theory to work: The simultaneous ascending auction.",
                "J.Pol.",
                "Econ., 108:245-272, 2000. [22] R. B. Myerson and M. A. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [23] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. 2nd ACM Conf. on Electronic Commerce (EC-00), pages 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), pages 1161-1168, 2001. [25] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, July 2000. [26] S. J. Rassenti, V. L. Smith, and R. L. Bulfin.",
                "A combinatorial mechanism for airport time slot allocation.",
                "Bell Journal of Economics, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc, and R. M. Harstad.",
                "Computationally manageable combinatorial auctions.",
                "Management Science, 44(8):1131-1147, 1998. [28] T. Sandholm and C. Boutilier.",
                "Preference elicitation in combinatorial auctions.",
                "In Cramton et al. [9], chapter 10. [29] P. R. Wurman and M. P. Wellman.",
                "AkBA: A progressive, anonymous-<br>price</br> combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, pages 21-29, 2000. 258"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Estos límites permiten el descubrimiento de \"precio\" y la obtención de preferencias útiles en las primeras rondas, y permiten la terminación con un comercio eficiente a pesar de la información parcial sobre las valoraciones del postor.",
                "La principal innovación en nuestro diseño es un lenguaje de licitación expresivo pero conciso basado en árboles (que generaliza los idiomas conocidos como Xor/o [23]), y el acoplamiento apretado de este lenguaje con algoritmos eficientes para el \"precio\" para guiar las ofertas, Determinación del ganador para determinar las operaciones y las reglas de actividad de preferencia reveladas para garantizar el progreso en las rondas.",
                "El intercambio es iterativo: los licitadores expresan valoraciones superiores e inferiores en las operaciones anotando su licitación, y luego apriete estos límites en respuesta a la retroalimentación de \"precio\" en cada ronda.",
                "Luego describimos el intercambio iterativo completo, con valores superiores e inferiores, el \"precio\", la retroalimentación, las reglas de actividad y las condiciones de terminación.",
                "Los pagos se calculan utilizando la regla de pago umbral [24], con las valoraciones intermedias adoptadas en rondas tempranas y valores más bajos adoptados en la terminación.• Comentarios de \"precio\".",
                "Se calcula un \"precio\" aproximado para cada elemento en el intercambio en cada ronda, en términos de valoraciones intermedias y el comercio provisional.",
                "Al final de esta ronda, el comercio y los pagos finalmente se determinan, en función de las valoraciones más bajas.2.1 Trabajo relacionado Muchos CAS unilateral ascendentes se conocen en la literatura [10, 25, 29].",
                "Los métodos de generación de \"precio\" que utilizamos en ICE generalizan los métodos en estos documentos anteriores.",
                "El \"precio\" P puede ser negativo, lo que indica que el postor recibe un pago por la operación.",
                "El intercambio proporciona retroalimentación basada en el \"precio\" 252 para guiar a los postores en este proceso, y termina con un comercio eficiente (o aproximadamente eficiente) con respecto a las valoraciones reportadas."
            ],
            "translated_text": "",
            "candidates": [
                "precio",
                "precio",
                "precio",
                "precio",
                "precio",
                "precio",
                "precio",
                "precio",
                "precio",
                "precio",
                "precio",
                "precio",
                "precio",
                "precio",
                "precio",
                "precio",
                "precio",
                "precio",
                "precio"
            ],
            "error": []
        },
        "winner-determination": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "ICE: An Iterative Combinatorial Exchange David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an iterative combinatorial exchange (ICE).",
                "The exchange incorporates a tree-based bidding language that is concise and expressive for CEs.",
                "Bidders specify lower and upper bounds on their value for different trades.",
                "These bounds allow price discovery and useful preference elicitation in early rounds, and allow termination with an efficient trade despite partial information on bidder valuations.",
                "All computation in the exchange is carefully optimized to exploit the structure of the bid-trees and to avoid enumerating trades.",
                "A proxied interpretation of a revealedpreference activity rule ensures progress across rounds.",
                "A VCG-based payment scheme that has been shown to mitigate opportunities for bargaining and strategic behavior is used to determine final payments.",
                "The exchange is fully implemented and in a validation phase.",
                "Categories and Subject Descriptors: I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Combinatorial exchanges combine and generalize two different mechanisms: double auctions and combinatorial auctions.",
                "In a double auction (DA), multiple buyers and sellers trade units of an identical good [20].",
                "In a combinatorial auction (CA), a single seller has multiple heterogeneous items up for sale [11].",
                "Buyers may have complementarities or substitutabilities between goods, and are provided with an expressive bidding language.",
                "A common goal in both market designs is to determine the efficient allocation, which is the allocation that maximizes total value.",
                "A combinatorial exchange (CE) [24] is a combinatorial double auction that brings together multiple buyers and sellers to trade multiple heterogeneous goods.",
                "For example, in an exchange for wireless spectrum, a bidder may declare that she is willing to pay $1 million for a trade where she obtains licenses for New York City, Boston, and Philadelphia, and loses her license for Washington DC.",
                "Thus, unlike a DA, a CE allows all participants to express complex valuations via expressive bids.",
                "Unlike a CA, a CE allows for fragmented ownership, with multiple buyers and sellers and agents that are both buying and selling.",
                "CEs have received recent attention both in the context of wireless spectrum allocation [18] and for airport takeoff and landing slot allocation [3].",
                "In both of these domains there are incumbents with property rights, and it is important to facilitate a complex multi-way reallocation of resources.",
                "Another potential application domain for CEs is to resource allocation in shared distributed systems, such as PlanetLab [13].",
                "The instantiation of our general purpose design to specific domains is a compelling next step in our research.",
                "This paper presents the first design for an iterative combinatorial exchange (ICE).",
                "The genesis of this project was a class, CS 286r Topics at the Interface between Economics and Computer Science, taught at Harvard University in Spring 2004.1 The entire class was dedicated to the design and prototyping of an iterative CE.",
                "The ICE design problem is multi-faceted and quite hard.",
                "The main innovation in our design is an expressive yet concise tree-based bidding language (which generalizes known languages such as XOR/OR [23]), and the tight coupling of this language with efficient algorithms for price-feedback to guide bidding, <br>winner-determination</br> to determine trades, and revealed-preference activity rules to ensure progress across rounds.",
                "The exchange is iterative: bidders express upper and lower valuations on trades by annotating their bid-tree, and then tighten these bounds in response to price feedback in each round.",
                "The Threshold payment rule, introduced by Parkes et al. [24], is used to determine final payments.",
                "The exchange has a number of interesting theoretical properties.",
                "For instance, when there exist linear prices we establish soundness and completeness: for straightforward bidders that adjust their bounds to meet activity rules while keeping their true value within the bounds, the exchange will terminate with the efficient allocation.",
                "In addition, the 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Truth Agent Act Rule WD ACC FAIR BALClosing RuleVickreyThreshold DONE !",
                "DONE 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER 2,2 +A +15 +8 +B +15 +8 BUYER 2,2 -A -2 -6 -B -2 -6 SELLER BUYER, buy AB SELLER, sell AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PBUYER = 16 - (4-0) = 12 PSELLER = -12 - (4-0) = -16 PBUYER = 14 PSELLER = -14 Pessim istic O ptim istic = 1 Figure 1: ICE System Flow of Control efficient allocation can often be determined without bidders revealing, or even knowing, their exact value for all trades.",
                "This is essential in complex domains where the valuation problem can itself be very challenging for a participant [28].",
                "While we cannot claim that straightforward bidding is an equilibrium of the exchange (and indeed, should not expect to by the Myerson-Satterthwaite impossibility theorem [22]), the Threshold payment rule minimizes the ex post incentive to manipulate across all budget-balanced payment rules.",
                "The exchange is implemented in Java and is currently in validation.",
                "In describing the exchange we will first provide an overview of the main components and introduce several working examples.",
                "Then, we introduce the basic components for a simple one-shot variation in which bidders state their exact values for trades in a single round.",
                "We then describe the full iterative exchange, with upper and lower values, price-feedback, activity rules, and termination conditions.",
                "We state some theoretical properties of the exchange, and end with a discussion to motivate our main design decisions, and suggest some next steps. 2.",
                "AN OVERVIEW OF THE ICE DESIGN The design has four main components, which we will introduce in order through the rest of the paper: • Expressive and concise tree-based bidding language.",
                "The language describes values for trades, such as my value for selling AB and buying C is $100, or my value for selling ABC is -$50, with negative values indicating that a bidder must receive a payment for the trade to be acceptable.",
                "The language allows bidders to express upper and lower bounds on value, which can be tightened across rounds. • Winner Determination.",
                "<br>winner-determination</br> (WD) is formulated as a mixed-integer program (MIP), with the structure of the bid-trees captured explicitly in the formulation.",
                "Comparing the solution at upper and lower values allows for a determination to be made about termination, with progress in intermediate rounds driven by an intermediate valuation and the lower values adopted on termination. • Payments.",
                "Payments are computed using the Threshold payment rule [24], with the intermediate valuations adopted in early rounds and lower values adopted on termination. • Price feedback.",
                "An approximate price is computed for each item in the exchange in each round, in terms of the intermediate valuations and the provisional trade.",
                "The prices are optimized to approximate competitive equilibrium prices, and further optimized to best approximate the current Threshold payments with remaining ties broken to favor prices that are balanced across different items.",
                "In computing the prices, we adopt the methods of constraint-generation to exploit the structure of the bidding language and avoid enumerating all feasible trades.",
                "The subproblem to generate new constraints is a variation of the WD problem. • Activity rule.",
                "A revealed-preference activity rule [1] ensures progress across rounds.",
                "In order to remain active, a bidder must tighten bounds so that there is enough information to define a trade that maximizes surplus at the current prices.",
                "Another variation on the WD problem is formulated, both to verify that the activity rule is met and also to provide feedback to a bidder to explain how to meet the rule.",
                "An outline of the ICE system flow of control is provided in Figure 1.",
                "We will return to this example later in the paper.",
                "For now, just observe in this two-agent example that the agents state lower and upper bounds that are checked in the activity rule, and then passed to <br>winner-determination</br> (WD), and then through three stages of pricing (accuracy, fairness, balance).",
                "On passing the closing rule (in which parameters αeff and αthresh are checked for convergence of the trade and payments), the exchange goes to a last-and-final round.",
                "At the end of this round, the trade and payments are finally determined, based on the lower valuations. 2.1 Related Work Many ascending-price one-sided CAs are known in the literature [10, 25, 29].",
                "Direct elicitation approaches have also been proposed for one-sided CAs in which agents respond to explicit queries about their valuations [8, 14, 19].",
                "A number of ascending CAs are designed to work with simple prices on items [12, 17].",
                "The price generation methods that we use in ICE generalize the methods in these earlier papers.",
                "Parkes et al. [24] studied sealed-bid combinatorial exchanges and introduced the Threshold payment rule.",
                "Subsequently, Krych [16] demonstrated experimentally that the Threshold rule promotes efficient allocations.",
                "We are not aware of any previous studies of iterative CEs.",
                "Dominant strategy DAs are known for unit demand [20] and also for single-minded agents [2].",
                "No dominant strategy mechanisms are known for the general CE problem.",
                "ICE is a hybrid auction design, in that it couples simple item prices to drive bidding in early rounds with combinatorial WD and payments, a feature it shares with the clock-proxy design of Ausubel et al. [1] for one-sided CAs.",
                "We adopt a variation on the clock-proxy auctionss revealedpreference activity rule.",
                "The bidding language shares some structural elements with the LGB language of Boutilier and Hoos [7], but has very different semantics.",
                "Rothkopf et al. [27] also describe a restricted tree-based bidding language.",
                "In LGB, the semantics are those of propositional logic, with the same items in an allocation able to satisfy a tree in multiple places.",
                "Although this can make LGB especially concise in some settings, the semantics that we propose appear to provide useful locality, so that the value of one component in a tree can be understood independently from the rest of the tree.",
                "The idea of capturing the structure of our bidding language explicitly within a mixed-integer programming formulation follows the developments in Boutilier [6]. 3.",
                "PRELIMINARIES In our model, we consider a set of goods, indexed {1, . . . , m} and a set of bidders, indexed {1, . . . , n}.",
                "The initial allocation of goods is denoted x0 = (x0 1, . . . , x0 n), with x0 i = (x0 i1, . . . , x0 im) and x0 ij ≥ 0 for good j indicating the number 250 of units of good j held by bidder i.",
                "A trade λ = (λ1, . . . , λn) denotes the change in allocation, with λi = (λi1, . . . , λim) where λij ∈   is the change in the number of units of item j to bidder i.",
                "So, the final allocation is x1 = x0 + λ.",
                "Each bidder has a value vi(λi) ∈ ¡ for a trade λi.",
                "This value can be positive or negative, and represents the change in value between the final allocation x0 i +λi and the initial allocation x0 i .",
                "Utility is quasi-linear, with ui(λi, p) = vi(λi)−p for trade λi and payment p ∈ ¡ .",
                "Price p can be negative, indicating the bidder receives a payment for the trade.",
                "We use the term payoff interchangeably with utility.",
                "Our goal in the ICE design is to implement the efficient trade.",
                "The efficient trade, λ∗ , maximizes the total increase in value across bidders.",
                "Definition 1 (Efficient trade).",
                "The efficient trade λ∗ solves max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Constraints (1) ensure that no agent sells more items than it has in its initial allocation.",
                "Constraints (2) provide free disposal, and allows feasible trades to sell more items than are purchased (but not vice versa).",
                "Later, we adopt Feas(x0 ) to denote the set of feasible trades, given these constraints and given an initial allocation x0 = (x0 1, . . . , x0 n). 3.1 Working Examples In this section, we provide three simple examples of instances that we will use to illustrate various components of the exchange.",
                "All three examples have only one seller, but this is purely illustrative.",
                "Example 1.",
                "One seller and one buyer, two goods {A, B}, with the seller having an initial allocation of AB.",
                "Changes in values for trades: seller buyer AND(−A, −B) AND(+A, +B) -10 +20 The AND indicates that both the buyer and the seller are only interested in trading both goods as a bundle.",
                "Here, the efficient (value-maximizing) trade is for the seller to sell AB to the buyer, denoted λ∗ = ([−1, −1], [+1, +1]).",
                "Example 2.",
                "One seller and four buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 buyer 3 buyer 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 The OR indicates that the seller is willing to sell any number of goods.",
                "The XOR indicates that buyers 2 and 4 are willing to buy at most one of the two goods in which they are interested.",
                "The efficient trade is for bundle AB to go to buyer 1 and bundle CD to buyer 3, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER Example 1: Example 3: 2,2 +C +D BUYER 2 2,2 +A +B BUYER 1 +11 +84,4 -B SELLER -A -C -D Example 2: 1,1 +A +B BUYER 2 2,2 +A +B BUYER 1 +6 +40,4 -B SELLER -C -D-A 1,1 +C +D BUYER 4 2,2 +C +D +3 +2 BUYER 3 -18 Figure 2: Example Bid Trees.",
                "Example 3.",
                "One seller and two buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 AND(−A, −B, −C, −D) AND(+A, +B) AND(+C, +D) -18 +11 +8 The efficient trade is for bundle AB to go to buyer 1 and bundle CD to go to buyer 2, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4.",
                "A ONE-SHOT EXCHANGE DESIGN The description of ICE is broken down into two sections: one-shot (sealed-bid) and iterative.",
                "In this section we abstract away the iterative aspect and introduce a specialization of the tree-based language that supports only exact values on nodes. 4.1 Tree-Based Bidding Language The bidding language is designed to be expressive and concise, entirely symmetric with respect to buyers and sellers, and to extend to capture bids from mixed buyers and sellers, ranging from simple swaps to highly complex trades.",
                "Bids are expressed as annotated bid trees, and define a bidders value for all possible trades.",
                "The language defines changes in values on trades, with leaves annotated with traded items and nodes annotated with changes in values (either positive or negative).",
                "The main feature is that it has a general interval-choose logical operator on internal nodes, and that it defines careful semantics for propagating values within the tree.",
                "We illustrate the language on each of Examples 1-3 in Figure 2.",
                "The language has a tree structure, with trades on items defined on leaves and values annotated on nodes and leaves.",
                "The nodes have zero values where no value is indicated.",
                "Internal nodes are also labeled with interval-choose (IC) ranges.",
                "Given a trade, the semantics of the language define which nodes in the tree can be satisfied, or switched-on.",
                "First, if a child is on then its parent must be on.",
                "Second, if a parent node is on, then the number of children that are on must be within the IC range on the parent node.",
                "Finally, leaves in which the bidder is buying items can only be on if the items are provided in the trade.",
                "For instance, in Example 2 we can consider the efficient trade, and observe that in this trade all nodes in the trees of buyers 1 and 3 (and also the seller), but none of the nodes in the trees of buyers 2 and 4, can be on.",
                "On the other hand, in 251 the trade in which A goes to buyer 2 and D to buyer 4, then the root and appropriate leaf nodes can be on for buyers 2 and 4, but no nodes can be on for buyers 1 and 3.",
                "Given a trade there is often a number of ways to choose the set of satisfied nodes.",
                "The semantics of the language require that the nodes that maximize the summed value across satisfied nodes be activated.",
                "Consider bid tree Ti from bidder i.",
                "This defines nodes β ∈ Ti, of which some are leaves, Leaf (i) ⊆ Ti.",
                "Let Child(β) ⊆ Ti denote the children of a node β (that is not itself a leaf).",
                "All nodes except leaves are labeled with the interval-choose operator [IC x i (β), ICy i (β)].",
                "Every node is also labeled with a value, viβ ∈ ¡ .",
                "Each leaf β is labeled with a trade, qiβ ∈   m (i.e., leaves can define a bundled trade on more than one type of item.)",
                "Given a trade λi to bidder i, the interval-choose operators and trades on leaves define which nodes can be satisfied.",
                "There will often be a choice.",
                "Ties are broken to maximize value.",
                "Let satiβ ∈ {0, 1} denote whether node β is satisfied.",
                "Solution sati is valid given tree Ti and trade λi, written sati ∈ valid(Ti, λi), if and only if: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Child(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Leaf (i) (5) In words, a set of leaves can only be considered satisfied given trade λi if the total increase in quantity summed across all such leaves is covered by the trade, for all goods (Eq. 4).",
                "This works for sellers as well as buyers: for sellers a trade is negative and this requires that the total number of items indicated sold in the tree is at least the total number sold as defined in the trade.",
                "We also need upwards-propagation: any time a node other than the root is satisfied then its parent must be satisfied (by   β ∈Child(β) satiβ ≤ ICy i (β)satiβ in Eq. 5).",
                "Finally, we need downwards-propagation: any time an internal node is satisfied then the appropriate number of children must also be satisfied (Eq. 5).",
                "The total value of trade λi, given bid-tree Ti, is defined as: vi(Ti, λi) = max sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) The tree-based language generalizes existing languages.",
                "For instance: IC(2, 2) on a node with 2 children is equivalent to an AND operator; IC(1, 3) on a node with 3 children is equivalent to an OR operator; and IC(1, 1) on a node with 2 children is equivalent to an XOR operator.",
                "Similarly, the XOR/OR bidding languages can be directly expressed as a bid tree in our language.2 4.2 Winner Determination This section defines the winner determination problem, which is formulated as a MIP and solved in our implementation with a commercial solver.3 The solver uses branchand-bound search with dynamic cut generation and branching heuristics to solve large MIPs in economically feasible run times. 2 The OR* language is the OR language with dummy items to provide additional structure.",
                "OR* is known to be expressive and concise.",
                "However, it is not known whether OR* dominates XOR/OR in terms of conciseness [23]. 3 CPLEX, www.ilog.com In defining the MIP representation we are careful to avoid an XOR-based enumeration of all bundles.",
                "A variation on the WD problem is reused many times within the exchange, e.g. for column generation in pricing and for checking revealed preference.",
                "Given bid trees T = (T1, . . . , Tn) and initial allocation x0 , the mixed-integer formulation for WD is: WD(T, x0 ) : max λ,sat ¢ i ¢ β∈Ti viβ · satiβ s.t. (1), (2), satiβ ∈ {0, 1}, λij ∈   sati ∈ valid(Ti, λi), ∀i Some goods may go unassigned because free disposal is allowed within the clearing rules of winner determination.",
                "These items can be allocated back to agents that sold the items, i.e. for which λij < 0. 4.3 Computing Threshold Payments The Threshold payment rule is based on the payments in the Vickrey-Clarke-Groves (VCG) mechanism [15], which itself is truthful and efficient but does not satisfy budget balance.",
                "Budget-balance requires that the total payments to the exchange are equal to the total payments made by the exchange.",
                "In VCG, the payment paid by agent i is pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) where λ∗ is the efficient trade, V ∗ is the reported value of this trade, and V−i is the reported value of the efficient trade that would be implemented without bidder i.",
                "We call ∆vcg,i = V ∗ − V−i the VCG discount.",
                "For instance, in Example 1 pvcg,seller = −10 − (+10 − 0) = −20 and pvcg,buyer = +20 − (+10 − 0) = 10, and the exchange would run at a budget deficit of −20 + 10 = −10.",
                "The Threshold payment rule [24] determines budgetbalanced payments to minimize the maximal error across all agents to the VCG outcome.",
                "Definition 2.",
                "The Threshold payment scheme implements the efficient trade λ∗ given bids, and sets payments pthresh,i = ˆvi(λ∗ i ) − ∆i, where ∆ = (∆1, . . . , ∆n) is set to minimize maxi(∆vcg,i − ∆i) subject to ∆i ≤ ∆vcg,i and   i ∆i ≤ V ∗ (this gives budget-balance).",
                "Example 4.",
                "In Example 2, the VCG discounts are (9, 2, 0, 1, 0) to the seller and four buyers respectively, VCG payments are (−9, 4, 0, 2, 0) and the exchange runs at a deficit of -3.",
                "In Threshold, the discounts are (8, 1, 0, 0, 0) and the payments are (−8, 5, 0, 3, 0).",
                "This minimizes the worst-case error to VCG discounts across all budget-balanced payment schemes.",
                "Threshold payments are designed to minimize the maximal ex post incentive to manipulate.",
                "Krych [16] confirmed that Threshold promotes allocative efficiency in restricted and approximate Bayes-Nash equilibrium. 5.",
                "THE ICE DESIGN We are now ready to introduce the iterative combinatorial exchange (ICE) design.",
                "Several new components are introduced, relative to the design for the one-shot exchange.",
                "Rather than provide precise valuations, bidders can provide lower and upper valuations and revise this bid information across rounds.",
                "The exchange provides price-based feedback 252 to guide bidders in this process, and terminates with an efficient (or approximately-efficient) trade with respect to reported valuations.",
                "In each round t ∈ {0, 1, . . .} the current lower and upper bounds, vt and vt , are used to define a provisional valuation profile vα (the α-valuation), together with a provisional trade λt and provisional prices pt = (pt 1, . . . , pt m) on items.",
                "The α-valuation is a linear combination of the current upper and lower valuations, with αEFF ∈ [0, 1] chosen endogenously based on the closeness of the optimistic trade (at v) and the pessimistic trade (at v).",
                "Prices pt are used to inform an activity rule, and drive progress towards an efficient trade. 5.1 Upper and Lower Valuations The bidding language is extended to allow a bidder i to report a lower and upper value (viβ, viβ) on each node.",
                "These take the place of the exact value viβ defined in Section 4.1.",
                "Based on these labels, we can define the valuation functions vi(Ti, λi) and vi(Ti, λi), using the exact same semantics as in Eq. (6).",
                "We say that such a bid-tree is well-formed if viβ ≤ viβ for all nodes.",
                "The following lemma is useful: Lemma 1.",
                "Given a well-formed tree, T, then vi(Ti, λi) ≤ vi(Ti, λi) for all trades.",
                "Proof.",
                "Suppose there is some λi for which vi(Ti, λi) > vi(Ti, λi).",
                "Then, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ.",
                "But, this is a contradiction because the trade λ that defines vi(Ti, λi) is still feasible with upper bounds vi, and viβ ≥ viβ for all nodes β in a well-formed tree. 5.2 Price Feedback In each round, approximate competitive-equilibrium (CE) prices, pt = (pt 1, . . . , pt m), are determined.",
                "Given these provisional prices, the price on trade λi for bidder i is pt (λi) =   j≤m pt j · λij.",
                "Definition 3 (CE prices).",
                "Prices p∗ are competitive equilibrium prices if the efficient trade λ∗ is supported at prices p∗ , so that for each bidder: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) CE prices will not always exist and we will often need to compute approximate prices [5].",
                "We extend ideas due to Rassenti et al. [26], Kwasnica et al. [17] and Dunford et al. [12], and select approximate prices as follows: I: Accuracy.",
                "First, we compute prices that minimize the maximal error in the best-response constraints across all bidders.",
                "II: Fairness.",
                "Second, we break ties to prefer prices that minimize the maximal deviation from Threshold payments across all bidders.",
                "III: Balance.",
                "Third, we break ties to prefer prices that minimize the maximal price across all items.",
                "Taken together, these steps are designed to promote the informativeness of the prices in driving progress across rounds.",
                "In computing prices, we explain how to compute approximate (or otherwise) prices for structured bidding languages, and without enumerating all possible trades.",
                "For this, we adopt constraint generation to efficient handle an exponential number of constraints.",
                "Each step is described in detail below.",
                "I: Accuracy.",
                "We adopt a definition of price accuracy that generalizes the notions adopted in previous papers for unstructured bidding languages.",
                "Let λt denote the current provisional trade and suppose the provisional valuation is vα .",
                "To compute accurate CE prices, we consider: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j.",
                "This linear program (LP) is designed to find prices that minimize the worst-case error across all agents.",
                "From the definition of CE prices, it follows that CE prices would have δ = 0 as a solution to (9), at which point trade λt i would be in the best-response set of every agent (with λt i = ∅, i.e. no trade, for all agents with no surplus for trade at the prices.)",
                "Example 5.",
                "We can illustrate the formulation (9) on Example 2, assuming for simplicity that vα = v (i.e. truth).",
                "The efficient trade allocates AB to buyer 1 and CD to buyer 3.",
                "Accuracy will seek prices p(A), p(B), p(C) and p(D) to minimize the δ ≥ 0 required to satisfy constraints: p(A) + p(B) + p(C) + p(D) ≥ 0 (seller) p(A) + p(B) ≤ 6 + δ (buyer 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (buyer 2) p(C) + p(D) ≤ 3 (buyer 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (buyer 4) An optimal solution requires p(A) = p(B) = 10/3, with δ = 2/3, with p(C) and p(D) taking values such as p(C) = p(D) = 3/2.",
                "But, (9) has an exponential number of constraints (Eq. 10).",
                "Rather than solve it explicitly we use constraint generation [4] and dynamically generate a sufficient subset of constraints.",
                "Let   i denote a manageable subset of all possible feasible trades to bidder i.",
                "Then, a relaxed version of (9) (written ACC) is formulated by substituting (10) with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) where   i is a set of trades that are feasible for bidder i given the other bids.",
                "Fixing the prices p∗ , we then solve n subproblems (one for each bidder), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0 ), (12) to check whether solution (p∗ , δ∗ ) to ACC is feasible in problem (9).",
                "In R-WD(i) the objective is to determine a most preferred trade for each bidder at these prices.",
                "Let ˆλi denote the solution to R-WD(i).",
                "Check condition: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) and if this condition holds for all bidders i, then solution (p∗ , δ∗ ) is optimal for problem (9).",
                "Otherwise, trade ˆλi is added to   i for all bidders i for which this constraint is 253 violated and we re-solve the LP with the new set of constraints.4 II: Fairness.",
                "Second, we break remaining ties to prefer fair prices: choosing prices that minimize the worst-case error with respect to Threshold payoffs (i.e. utility to bidders with Threshold payments), but without choosing prices that are less accurate.5 Example 6.",
                "For example, accuracy in Example 1 (depicted in Figure 1) requires 12 ≤ pA +pB ≤ 16 (for vα = v).",
                "At these valuations the Threshold payoffs would be 2 to both the seller and the buyer.",
                "This can be exactly achieved in pricing with pA + pB = 14.",
                "The fairness tie-breaking method is formulated as the following LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution, from ACC.",
                "The objective here is the same as in the Threshold payment rule (see Section 4.3): minimize the maximal error between bidder payoff (at vα ) for the provisional trade and the VCG payoff (at vα ).",
                "Problem FAIR is also solved through constraint generation, using R-WD(i) to add additional violated constraints as necessary.",
                "III: Balance.",
                "Third, we break remaining ties to prefer balanced prices: choosing prices that minimize the maximal price across all items.",
                "Returning again to Example 1, depicted in Figure 1, we see that accuracy and fairness require p(A) + p(B) = 14.",
                "Finally, balance sets p(A) = p(B) = 7.",
                "Balance is justified when, all else being equal, items are more likely to have similar than dissimilar values.6 The LP for balance is formulated as follows: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution from ACC and π∗ represents the error in the optimal solution from FAIR.",
                "Constraint generation is also used to solve BAL, generating new trades for   i as necessary. 4 Problem R-WD(i) is a specialization of the WD problem, in which the objective is to maximize the payoff of a single bidder, rather than the total value across all bidders.",
                "It is solved as a MIP, by rewriting the objective in WD(T, x0 ) as max{viβ · satiβ −   j p∗ j · λij } for agent i.",
                "Thus, the structure of the bid-tree language is exploited in generating new constraints, because this is solved as a concise MIP.",
                "The other bidders are kept around in the MIP (but do not appear in the objective), and are used to define the space of feasible trades. 5 The methods of Dunford et al. [12], that use a nucleolus approach, are also closely related. 6 The use of balance was advocated by Kwasnica et al. [17].",
                "Dunford et al. [12] prefer to smooth prices across rounds.",
                "Comment 1: Lexicographical Refinement.",
                "For all three sub-problems we also perform lexicographical refinement (with respect to bidders in ACC and FAIR, and with respect to goods in BAL).",
                "For instance, in ACC we successively minimize the maximal error across all bidders.",
                "Given an initial solution we first pin down the error on all bidders for whom a constraint (11) is binding.",
                "For such a bidder i, the constraint is replaced with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) and the error to bidder i no longer appears explicitly in the objective.",
                "ACC is then re-solved, and makes progress by further minimizing the maximal error across all bidders yet to be pinned down.",
                "This continues, pinning down any new bidders for whom one of constraints (11) is binding, until the error is lexicographically optimized for all bidders.7 The exact same process is repeated for FAIR and BAL, with bidders pinned down and constraints (15) replaced with π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (where π∗ i is the current objective) in FAIR, and items pinned down and constraints (18) replaced with p∗ j ≥ pj (where p∗ j represents the target for the maximal price on that item) in BAL.",
                "Comment 2: Computation.",
                "All constraints in   i are retained, and this set grows across all stages and across all rounds of the exchange.",
                "Thus, the computational effort in constraint generation is re-used.",
                "In implementation we are careful to address a number of -issues that arise due to floating-point issues.",
                "We prefer to err on the side of being conservative in determining whether or not to add another constraint in performing check (13).",
                "This avoids later infeasibility issues.",
                "In addition, when pinning-down bidders for the purpose of lexicographical refinement we relax the associated bidder-constraints with a small > 0 on the righthand side. 5.3 Revealed-Preference Activity Rules The role of activity rules in the auction is to ensure both consistency and progress across rounds [21].",
                "Consistency in our exchange requires that bidders tighten bounds as the exchange progresses.",
                "Activity rules ensure that bidders are active during early rounds, and promote useful elicitation throughout the exchange.",
                "We adopt a simple revealed-preference (RP) activity rule.",
                "The idea is loosely based around the RP-rule in Ausubel et al. [1], where it is used for one-sided CAs.",
                "The motivation is to require more than simply consistency: we need bidders to provide enough information for the system to be able to to prove that an allocation is (approximately) efficient.",
                "It is helpful to think about the bidders interacting with proxy agents that will act on their behalf in responding to provisional prices pt−1 determined at the end of round t − 1.",
                "The only knowledge that such a proxy has of the valuation of a bidder is through the bid-tree.",
                "Suppose a proxy was queried by the exchange and asked which trade the bidder was most interested in at the provisional prices.",
                "The RP rule says the following: the proxy must have enough 7 For example, applying this to accuracy on Example 2 we solve once and find bidders 1 and 2 are binding, for error δ∗ = 2/3.",
                "We pin these down and then minimize the error to bidders 3 and 4.",
                "Finally, this gives p(A) = p(B) = 10/3 and p(C) = p(D) = 5/3, with accuracy 2/3 to bidders 1 and 2 and 1/3 to bidders 3 and 4. 254 information to be able to determine this surplus-maximizing trade at current prices.",
                "Consider the following examples: Example 7.",
                "A bidder has XOR(+A, +B) and a value of +5 on the leaf +A and a value range of [5,10] on leaf +B.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the proxy knows that however the remaining value uncertainty on +B is resolved the bidder will always (weakly) prefer +B to +A.",
                "Example 8.",
                "A bidder has XOR(+A, +B) and value bounds [5, 10] on the root node and a value of 1 on leaf +A.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the bidder will always prefer +A to +B at equal prices, whichever way the uncertain value on the root node is ultimately resolved.",
                "Overloading notation, let vi ∈ Ti denote a valuation that is consistent with lower and upper valuations in bid tree Ti.",
                "Definition 4.",
                "Bid tree Ti satisfies RP at prices pt−1 if and only if there exists some feasible trade L∗ for which, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. (20) To make this determination for bidder i we solve a sequence of problems, each of which is a variation on the WD problem.",
                "First, we construct a candidate lower-bound trade, which is a feasible trade that solves: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) The solution π∗ l to RP1(i) represents the maximal payoff that bidder i can achieve across all feasible trades, given its pessimistic valuation.",
                "Second, we break ties to find a trade with maximal value uncertainty across all possible solutions to RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] s.t. λ ∈ Feas(x0 ) (22) vi(λi) − pt−1 (λi) ≥ π∗ l (23) We adopt solution L∗ i as our candidate for the trade that may satisfy RP.",
                "To understand the importance of this tiebreaking rule consider Example 7.",
                "The proxy can prove +B but not +A is a best-response for all vi ∈ Ti, and should choose +B as its candidate.",
                "Notice that +B is a counterexample to +A, but not the other way round.",
                "Now, we construct a modified valuation ˜vi, by setting ˜viβ =   viβ , if β ∈ sat(L∗ i ) viβ , otherwise. (24) where sat(L∗ i ) is the set of nodes that are satisfied in the lower-bound tree for trade L∗ i .",
                "Given this modified valuation, we find U∗ to solve: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Let π∗ u denote the payoff from this optimal trade at modified values ˜v.",
                "We call trade U∗ i the witness trade.",
                "We show in Proposition 1 that the RP rule is satisfied if and only if π∗ l ≥ π∗ u. Constructing the modified valuation as ˜vi recognizes that there is shared uncertainty across trades that satisfy the same nodes in a bid tree.",
                "Example 8 helps to illustrate this.",
                "Just using vi in RP3(i), we would find L∗ i is buy A with payoff π∗ l = 3 but then find U∗ i is buy B with π∗ u = 7 and fail RP.",
                "We must recognize that however the uncertainty on the root node is resolved it will affect +A and +B in exactly the same way.",
                "For this reason, we set ˜viβ = viβ = 5 on the root node, which is exactly the same value that was adopted in determining π∗ l .",
                "Then, RP3(i) applied to U∗ i gives buy A and the RP test is judged to be passed.",
                "Proposition 1.",
                "Bid tree Ti satisfies RP given prices pt−1 if and only if any lower-bound trade L∗ i that solves RP1(i) and RP2(i) satisfies: vi(Ti, L∗ i ) − pt−1 (L∗ i ) ≥ ˜vi(Ti, U∗ i ) − pt−1 (U∗ i ), (26) where ˜vi is the modified valuation in Eq. (24).",
                "Proof.",
                "For sufficiency, notice that the difference in payoff between trade L∗ i and another trade λi is unaffected by the way uncertainty is resolved on any node that is satisfied in both L∗ i and λi.",
                "Fixing the values in ˜vi on nodes satisfied in L∗ i has the effect of removing this consideration when a trade U∗ i is selected that satisfies one of these nodes.",
                "On the other hand, fixing the values on these nodes has no effect on trades considered in RP3(i) that do not share a node with L∗ i .",
                "For the necessary direction, we first show that any trade that satisfies RP must solve RP1(i).",
                "Suppose otherwise, that some λi with payoff greater than π∗ l satisfies RP.",
                "But, valuation vi ∈ Ti together with L∗ i presents a counterexample to RP (Eq. 20).",
                "Now, suppose (for contradiction) that some λi with maximal payoff π∗ l but uncertainty less than L∗ i satisfies RP.",
                "Proceed by case analysis.",
                "Case a): only one solution to RP1(i) has uncertain value and so λi has certain value.",
                "But, this cannot satisfy RP because L∗ i with uncertain value would be a counterexample to RP (Eq. 20).",
                "Case b): two or more solutions to RP1(i) have uncertain value.",
                "Here, we first argue that one of these trades must satisfy a (weak) superset of all the nodes with uncertain value that are satisfied by all other trades in this set.",
                "This is by RP.",
                "Without this, then for any choice of trade that solves RP1(i), there is another trade with a disjoint set of uncertain but satisfied nodes that provides a counterexample to RP (Eq. 20).",
                "Now, consider the case that some trade contains a superset of all the uncertain satisfied nodes of the other trades.",
                "Clearly RP2(i) will choose this trade, L∗ i , and λi must satisfy a subset of these nodes (by assumption).",
                "But, we now see that λi cannot satisfy RP because L∗ i would be a counterexample to RP.",
                "Failure to meet the activity rule must have some consequence.",
                "In the current rules, the default action we choose is to set the upper bounds in valuations down to the maximal value of the provisional price on a node8 and the lowerbound value on that node.9 Such a bidder can remain active 8 The provisional price on a node is defined as the minimal total price across all feasible trades for which the subtree rooted at the tree is satisfied. 9 This is entirely analogous to when a bidder in an ascending clock auction stops bidding at a price: she is not permitted to bid at a higher price again in future rounds. 255 within the exchange, but only with valuations that are consistent with these new bounds. 5.4 Bidder Feedback In each round, our default design provides every bidder with the provisional trade and also with the current provisional prices.",
                "See 7 for an additional discussion.",
                "We also provide guidance to help a bidder meet the RP rule.",
                "Let sat(L∗ i ) and sat(U∗ i ) denote the nodes that are satisfied in trades L∗ i and U∗ i , as computed in RP1-RP3.",
                "Lemma 2.",
                "When RP fails, a bidder must increase a lower bound on at least one node in sat(L∗ i ) \\ sat(U∗ i ) or decrease an upper bound on at least one node in sat(U∗ i ) \\ sat(L∗ i ) in order to meet the activity rule.",
                "Proof.",
                "Changing the upper- or lower- values on nodes that are not satisfied by either trade does not change L∗ i or U∗ i , and does not change the payoff from these trades.",
                "Thus, the RP condition will continue to fail.",
                "Similarly, changing the bounds on nodes that are satisfied in both trades has no effect on revealed preference.",
                "A change to a lower bound on a shared node affects both L∗ i and U∗ i identically because of the use of the modified valuation to determine U∗ i .",
                "A change to an upper bound on a shared node has no effect in determining either L∗ i or U∗ i .",
                "Note that when sat(U∗ i ) = sat(L∗ i ) then condition (26) is always trivially satisfied, and so the guidance in the lemma is always well-defined when RP fails.",
                "This is an elegant feedback mechanism because it is adaptive.",
                "Once a bidder makes some changes on some subset of these nodes, the bidder can query the exchange.",
                "The exchange can then respond yes, or can revise the set of nodes sat(λ∗ l ) and sat(λ∗ u) as necessary. 5.5 Termination Conditions Once each bidder has committed its new bids (and either met the RP rule or suffered the penalty) then round t closes.",
                "At this point, the task is to determine the new α-valuation, and in turn the provisional allocation λt and provisional prices pt .",
                "A termination condition is also checked, to determine whether to move the exchange to a last-and-final round.",
                "To define the α-valuation we compute the following two quantities: Pessimistic at Pessimistic (PP) Determine an efficient trade, λ∗ l , at pessimistic values, i.e. to solve maxλ   i vi(λi), and set PP=  i vi(λ∗ li).",
                "Pessimistic at Optimistic (PO) Determine an efficient trade, λ∗ u, at optimistic values, i.e. to solve maxλ   i vi(λi), and set PO=  i vi(λ∗ ui).",
                "First, note that PP ≥ PO and PP ≥ 0 by definition, for all bid-trees, although PO can be negative (because the right trade at v is not currently a useful trade at v).",
                "Recognizing this, define γeff (PP, PO) = 1 + PP − PO PP , (27) when PP > 0, and observe that γeff (PP, PO) ≥ 1 when this is defined, and that γeff (PP, PO) will start large and then trend towards 1 as the optimistic allocation converges towards the pessimistic allocation.",
                "In each round, we define αeff ∈ [0, 1] as: αeff =   0 when PP is 0 1/γeff otherwise (28) which is 0 while PP is 0 and then trends towards 1 once PP> 0 in some round.",
                "This is used to define α-valuation vα i = αeff vi + (1 − αeff )vi, ∀i, (29) which is used to define the provisional allocation and provisional prices.",
                "The effect is to endogenously define a schedule for moving from optimistic to pessimistic values across rounds, based on how close the trades are to one another.",
                "Termination Condition.",
                "In moving to the last-and-final round, and finally closing, we also care about the convergence of payments, in addition to the convergence towards an efficient trade.",
                "For this we introduce another parameter, αthresh ∈ [0, 1], that trends from 0 to 1 as the Threshold payments at lower and upper valuations converge.",
                "Consider the following parameter: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive) , (30) which is defined for PP > 0, where pthresh(v) denotes the Threshold payments at valuation profile v, Nactive is the number of bidders that are actively engaged in trade in the PP trade, and || · ||2 is the L2-norm.",
                "Note that γthresh is defined for payments and not payoffs.",
                "This is appropriate because it is the accuracy of the outcome of the exchange that matters: i.e. the trade and the payments.",
                "Given this, we define αthresh =   0 when PP is 0 1/γthresh otherwise (31) which is 0 while PP is 0 and then trends towards 1 as progress is made.",
                "Definition 5 (termination).",
                "ICE transitions to a lastand-final round when one of the following holds: 1. αeff ≥ CUTOFFeff and αthresh ≥ CUTOFFthresh, 2. there is no trade at the optimistic values, where CUTOFFeff , CUTOFFthresh ∈ (0, 1] determine the accuracy required for termination.",
                "At the end of the last-and-final round vα = v is used to define the final trade and the final Threshold payments.",
                "Example 9.",
                "Consider again Example 1, and consider the upper and lower bounds as depicted in Figure 1.",
                "First, if the sellers bounds were [−20, −4] then there is an optimistic trade but no pessimistic trade, and PO = −4 and PP = 0, and αeff = 0.",
                "At the bounds depicted, both the optimistic and the pessimistic trades occur and PO = PP = 4 and αeff = 1.",
                "However, we can see the Threshold payments are (17, −17) at v but (14, −14) at v. Evaluating γthresh , we have γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, and αthresh = 2/5.",
                "For CUTOFFthresh < 2/5 the exchange would remain open.",
                "On the other hand, if the buyers value for +AB was between [18, 24] and the sellers value for −AB was between [−12, −6], the Threshold payments are (15, −15) at both upper and lower bounds, and αthresh = 1. 256 Component Purpose Lines Agent.",
                "Captures strategic behavior and information revelation decisions 762 Model Support Provides XML support to load goods and valuations into world 200 World Keeps track of all agent, good, and valuation details 998 Exchange Driver & Communication Controls exchange, and coordinates remote agent behavior 585 Bidding Language Implements the tree-based bidding language 1119 Activity Rule Engine Implements the revealed preference rule with range support 203 Closing Rule Engine Checks if auction termination condition reached 137 WD Engine Provides WD-related logic 377 Pricing Engine Provides Pricing-related logic 460 MIP Builders Translates logic used by engines into our general optimizer formulation 346 Pricing Builders Used by three pricing stages 256 Winner Determination Builders Used by WD, activity rule, closing rule, and pricing constraint generation 365 Framework Support code; eases modular replacement of above components 510 Table 1: Exchange Component and Code Breakdown. 6.",
                "SYSTEMS INFRASTRUCTURE ICE is approximately 6502 lines of Java code, broken up into the functional packages described in Table 1.10 The prototype is modular so that researchers may easily replace components for experimentation.",
                "In addition to the core exchange discussed in this paper, we have developed an agent component that allows a user to simulate the behavior and knowledge of other players in the system, better allowing a user to formulate their strategy in advance of actual play.",
                "A user specifies a valuation model in an XMLinterpretation of our bidding language, which is revealed to the exchange via the agents strategy.",
                "Major exchange tasks are handled by engines that dictate the non-optimizer specific logic.",
                "These engines drive the appropriate MIP/LP builders.",
                "We realized that all of our optimization formulations boil down to two classes of optimization problem.",
                "The first, used by winner determination, activity rule, closing rule, and constraint generation in pricing, is a MIP that finds trades that maximize value, holding prices and slacks constant.",
                "The second, used by the three pricing stages, is an LP that holds trades constant, seeking to minimize slack, profit, or prices.",
                "We take advantage of the commonality of these problems by using common LP/MIP builders that differ only by a few functional hooks to provide the correct variables for optimization.",
                "We have generalized our back-end optimization solver interface11 (we currently support CPLEX and the LGPL- licensed LPSolve), and can take advantage of the load-balancing and parallel MIP/LP solving capability that this library provides. 7.",
                "DISCUSSION The bidding language was defined to allow for perfect symmetry between buyers and sellers and provide expressiveness in an exchange domain, for instance for mixed bidders interested in executing trades such as swaps.",
                "This proved especially challenging.",
                "The breakthrough came when we focused on changes in value for trades rather than providing absolute values for allocations.",
                "For simplicity, we require the same tree structure for both the upper and lower valuations. 10 Code size is measured in physical source line of code (SLOC), as generated using David A. Wheelers SLOC Count.",
                "The total of 6502 includes 184 for instrumentation (not shown in the table).",
                "The JOpt solver interface is another 1964 lines, and Castor automatically generates around 5200 lines of code for XML file manipulation. 11 http://econcs.eecs.harvard.edu/jopt This allows the language itself to ensure consistency (with the upper value at least the lower value on all trades) and enforce monotonic tightening of these bounds for all trades across rounds.",
                "It also provides for an efficient method to check the RP activity rule, because it makes it simple to reason about shared uncertainty between trades.",
                "The decision to adopt a direct and proxied approach in which bidders express their upper and lower values to a trusted proxy agent that interacts with the exchange was made early in the design process.",
                "In many ways this is the clearest and most immediate way to generalize the design in Parkes et al. [24] and make it iterative.",
                "In addition, this removes much opportunity for strategic manipulation: bidders are restricted to making (incremental) statements about their valuations.",
                "Another advantage is that it makes the activity rule easy to explain: bidders can always meet the activity rule by tightening bounds such that their true value remains in the support.12 Perhaps most importantly, having explicit information on upper and lower values permits progress in early rounds, even while there is no efficient trade at pessimistic values.",
                "Upper and lower bound information also provides guidance about when to terminate.",
                "Note that taken by itself, PP = PO does not imply that the current provisional trade is efficient with respect to all values consistent with current value information.",
                "The difference in values between different trades, aggregated across all bidders, could be similar at lower and upper bounds but quite different at intermediate values (including truth).",
                "Nevertheless, we conjecture that PP = PO will prove an excellent indicator of efficiency in practical settings where the shape of the upper and lower valuations does convey useful information.",
                "This is worthy of experimental investigation.",
                "Moreover, the use of price and RP activity provides additional guarantees.",
                "We adopted linear prices (prices on individual items) rather than non-linear prices (with prices on a trade not equal to the sum of the prices on the component items) early in the design process.",
                "The conciseness of this price representation is very important for computational tractability within the exchange and also to promote simplicity and transparency for bidders.",
                "The RP activity rule was adopted later, and is a good choice because of its excellent theoretical properties when coupled with CE prices.",
                "The following can be easily established: given exact CE prices pt−1 for provisional trade 12 This is in contrast to indirect price-based approaches, such as clock-proxy [1], in which bidders must be able to reason about the RP-constraints implied by bids in each round. 257 λt−1 at valuations vα , then if the upper and lower values at the start of round t already satisfy the RP rule (and without the need for any tie-breaking), the provisional trade is efficient for all valuations consistent with the current bid trees.",
                "When linear CE prices exist, this provides for a soundness and completeness statement: if PP = PO, linear CE prices exist, and the RP rule is satisfied, the provisional trade is efficient (soundness); if prices are exact CE prices for the provisional trade at vα , but the trade is inefficient with respect to some valuation profile consistent with the current bid trees, then at least one bidder must fail RP with her current bid tree and progress will be made (completeness).",
                "Future work must study convergence experimentally, and extend this theory to allow for approximate prices.",
                "Some strategic aspects of our ICE design deserve comment, and further study.",
                "First, we do not claim that truthfully responding to the RP rule is an ex post equilibrium.13 However, the exchange is designed to mimic the Threshold rule in its payment scheme, which is known to have useful incentive properties [16].",
                "We must be careful, though.",
                "For instance we do not suggest to provide αeff to bidders, because as αeff approaches 1 it would inform bidders that bid values are becoming irrelevant to determining the trade but merely used to determine payments (and bidders would become increasingly reluctant to increase their lower valuations).",
                "Also, no consideration has been given in this work to collusion by bidders.",
                "This is an issue that deserves some attention in future work. 8.",
                "CONCLUSIONS In this work we designed and prototyped a scalable and highly-expressive iterative combinatorial exchange.",
                "The design includes many interesting features, including: a new bid-tree language for exchanges, a new method to construct approximate linear prices from expressive languages, and a proxied elicitation method with optimistic and pessimistic valuations with a new method to evaluate a revealed- preference activity rule.",
                "The exchange is fully implemented in Java and is in a validation phase.",
                "The next steps for our work are to allow bidders to refine the structure of the bid tree in addition to values on the tree.",
                "We intend to study the elicitation properties of the exchange and we have put together a test suite of exchange problem instances.",
                "In addition, we are beginning to engage in collaborations to apply the design to airline takeoff and landing slot scheduling and to resource allocation in widearea network distributed computational systems.",
                "Acknowledgments We would like to dedicate this paper to all of the participants in CS 286r at Harvard University in Spring 2004.",
                "This work is supported in part by NSF grant IIS-0238147. 9.",
                "REFERENCES [1] L. Ausubel, P. Cramton, and P. Milgrom.",
                "The clock-proxy auction: A practical combinatorial auction design.",
                "In Cramton et al. [9], chapter 5. [2] M. Babaioff, N. Nisan, and E. Pavlov.",
                "Mechanisms for a spatially distributed market.",
                "In Proc. 5th ACM Conf. on Electronic Commerce, pages 9-20.",
                "ACM Press, 2001. 13 Given the Myerson-Satterthwaite impossibility theorem [22] and the method by which we determine the trade we should not expect this. [3] M. Ball, G. Donohue, and K. Hoffman.",
                "Auctions for the safe, efficient, and equitable allocation of airspace system resources.",
                "In S. Cramton, Shoham, editor, Combinatorial Auctions. 2004.",
                "Forthcoming. [4] D. Bertsimas and J. Tsitsiklis.",
                "Introduction to Linear Optimization.",
                "Athena Scientific, 1997. [5] S. Bikhchandani and J. M. Ostroy.",
                "The package assignment model.",
                "Journal of Economic Theory, 107(2):377-406, 2002. [6] C. Boutilier.",
                "A pomdp formulation of preference elicitation problems.",
                "In Proc. 18th National Conference on Artificial Intelligence (AAAI-02), 2002. [7] C. Boutilier and H. Hoos.",
                "Bidding languages for combinatorial auctions.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), 2001. [8] W. Conen and T. Sandholm.",
                "Preference elicitation in combinatorial auctions.",
                "In Proc. 3rd ACM Conf. on Electronic Commerce (EC-01), pages 256-259.",
                "ACM Press, New York, 2001. [9] P. Cramton, Y. Shoham, and R. Steinberg, editors.",
                "Combinatorial Auctions.",
                "MIT Press, 2004. [10] S. de Vries, J. Schummer, and R. V. Vohra.",
                "On ascending Vickrey auctions for heterogeneous objects.",
                "Technical report, MEDS, Kellogg School, Northwestern University, 2003. [11] S. de Vries and R. V. Vohra.",
                "Combinatorial auctions: A survey.",
                "Informs Journal on Computing, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana, and T. Wilson.",
                "Testing linear pricing algorithms for use in ascending combinatorial auctions.",
                "Technical report, SEOR, George Mason University, 2003. [13] Y. Fu, J.",
                "Chase, B. Chun, S. Schwab, and A. Vahdat.",
                "Sharp: an architecture for secure resource peering.",
                "In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 133-148.",
                "ACM Press, 2003. [14] B. Hudson and T. Sandholm.",
                "Effectiveness of query types and policies for preference elicitation in combinatorial auctions.",
                "In Proc. 3rd Int.",
                "Joint.",
                "Conf. on Autonomous Agents and Multi Agent Systems, pages 386-393, 2004. [15] V. Krishna.",
                "Auction Theory.",
                "Academic Press, 2002. [16] D. Krych.",
                "Calculation and analysis of Nash equilibria of Vickrey-based payment rules for combinatorial exchanges, Harvard College, April 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter, and C. DeMartini.",
                "A new and improved design for multi-object iterative auctions.",
                "Management Science, 2004.",
                "To appear. [18] E. Kwerel and J. Williams.",
                "A proposal for a rapid transition to market allocation of spectrum.",
                "Technical report, FCC Office of Plans and Policy, Nov 2002. [19] S. M. Lahaie and D. C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In Proc.",
                "ACM Conf. on Electronic Commerce, pages 180-188, 2004. [20] R. P. McAfee.",
                "A dominant strategy double auction.",
                "J. of Economic Theory, 56:434-450, 1992. [21] P. Milgrom.",
                "Putting auction theory to work: The simultaneous ascending auction.",
                "J.Pol.",
                "Econ., 108:245-272, 2000. [22] R. B. Myerson and M. A. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [23] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. 2nd ACM Conf. on Electronic Commerce (EC-00), pages 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), pages 1161-1168, 2001. [25] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, July 2000. [26] S. J. Rassenti, V. L. Smith, and R. L. Bulfin.",
                "A combinatorial mechanism for airport time slot allocation.",
                "Bell Journal of Economics, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc, and R. M. Harstad.",
                "Computationally manageable combinatorial auctions.",
                "Management Science, 44(8):1131-1147, 1998. [28] T. Sandholm and C. Boutilier.",
                "Preference elicitation in combinatorial auctions.",
                "In Cramton et al. [9], chapter 10. [29] P. R. Wurman and M. P. Wellman.",
                "AkBA: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, pages 21-29, 2000. 258"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La principal innovación en nuestro diseño es un lenguaje de licitación expresivo pero conciso basado en árboles (que generaliza los idiomas conocidos como Xor/o [23]), y el acoplamiento estrecho de este lenguaje con algoritmos eficientes para la retroalimentación de precios para guiar las licitaciones \",La determinación del ganador \"para determinar las operaciones y las reglas de actividad de preferencia reveladas para garantizar el progreso en las rondas.",
                "La \"determinación del ganador\" (WD) se formula como un programa de introducción mixta (MIP), con la estructura de los licitados capturados explícitamente en la formulación.",
                "Por ahora, solo observe en este ejemplo de dos agentes que los agentes indican los límites inferiores y superiores que se verifican en la regla de actividad, y luego pasan a la \"determinación del ganador\" (WD), y luego a través de tres etapas de precios (precisión,justicia, equilibrio)."
            ],
            "translated_text": "",
            "candidates": [
                "determinación del ganador",
                ",La determinación del ganador ",
                "determinación del ganador",
                "determinación del ganador",
                "determinación del ganador",
                "determinación del ganador"
            ],
            "error": []
        },
        "bidding": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "ICE: An Iterative Combinatorial Exchange David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an iterative combinatorial exchange (ICE).",
                "The exchange incorporates a tree-based <br>bidding</br> language that is concise and expressive for CEs.",
                "Bidders specify lower and upper bounds on their value for different trades.",
                "These bounds allow price discovery and useful preference elicitation in early rounds, and allow termination with an efficient trade despite partial information on bidder valuations.",
                "All computation in the exchange is carefully optimized to exploit the structure of the bid-trees and to avoid enumerating trades.",
                "A proxied interpretation of a revealedpreference activity rule ensures progress across rounds.",
                "A VCG-based payment scheme that has been shown to mitigate opportunities for bargaining and strategic behavior is used to determine final payments.",
                "The exchange is fully implemented and in a validation phase.",
                "Categories and Subject Descriptors: I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Combinatorial exchanges combine and generalize two different mechanisms: double auctions and combinatorial auctions.",
                "In a double auction (DA), multiple buyers and sellers trade units of an identical good [20].",
                "In a combinatorial auction (CA), a single seller has multiple heterogeneous items up for sale [11].",
                "Buyers may have complementarities or substitutabilities between goods, and are provided with an expressive <br>bidding</br> language.",
                "A common goal in both market designs is to determine the efficient allocation, which is the allocation that maximizes total value.",
                "A combinatorial exchange (CE) [24] is a combinatorial double auction that brings together multiple buyers and sellers to trade multiple heterogeneous goods.",
                "For example, in an exchange for wireless spectrum, a bidder may declare that she is willing to pay $1 million for a trade where she obtains licenses for New York City, Boston, and Philadelphia, and loses her license for Washington DC.",
                "Thus, unlike a DA, a CE allows all participants to express complex valuations via expressive bids.",
                "Unlike a CA, a CE allows for fragmented ownership, with multiple buyers and sellers and agents that are both buying and selling.",
                "CEs have received recent attention both in the context of wireless spectrum allocation [18] and for airport takeoff and landing slot allocation [3].",
                "In both of these domains there are incumbents with property rights, and it is important to facilitate a complex multi-way reallocation of resources.",
                "Another potential application domain for CEs is to resource allocation in shared distributed systems, such as PlanetLab [13].",
                "The instantiation of our general purpose design to specific domains is a compelling next step in our research.",
                "This paper presents the first design for an iterative combinatorial exchange (ICE).",
                "The genesis of this project was a class, CS 286r Topics at the Interface between Economics and Computer Science, taught at Harvard University in Spring 2004.1 The entire class was dedicated to the design and prototyping of an iterative CE.",
                "The ICE design problem is multi-faceted and quite hard.",
                "The main innovation in our design is an expressive yet concise tree-based <br>bidding</br> language (which generalizes known languages such as XOR/OR [23]), and the tight coupling of this language with efficient algorithms for price-feedback to guide <br>bidding</br>, winner-determination to determine trades, and revealed-preference activity rules to ensure progress across rounds.",
                "The exchange is iterative: bidders express upper and lower valuations on trades by annotating their bid-tree, and then tighten these bounds in response to price feedback in each round.",
                "The Threshold payment rule, introduced by Parkes et al. [24], is used to determine final payments.",
                "The exchange has a number of interesting theoretical properties.",
                "For instance, when there exist linear prices we establish soundness and completeness: for straightforward bidders that adjust their bounds to meet activity rules while keeping their true value within the bounds, the exchange will terminate with the efficient allocation.",
                "In addition, the 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Truth Agent Act Rule WD ACC FAIR BALClosing RuleVickreyThreshold DONE !",
                "DONE 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER 2,2 +A +15 +8 +B +15 +8 BUYER 2,2 -A -2 -6 -B -2 -6 SELLER BUYER, buy AB SELLER, sell AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PBUYER = 16 - (4-0) = 12 PSELLER = -12 - (4-0) = -16 PBUYER = 14 PSELLER = -14 Pessim istic O ptim istic = 1 Figure 1: ICE System Flow of Control efficient allocation can often be determined without bidders revealing, or even knowing, their exact value for all trades.",
                "This is essential in complex domains where the valuation problem can itself be very challenging for a participant [28].",
                "While we cannot claim that straightforward <br>bidding</br> is an equilibrium of the exchange (and indeed, should not expect to by the Myerson-Satterthwaite impossibility theorem [22]), the Threshold payment rule minimizes the ex post incentive to manipulate across all budget-balanced payment rules.",
                "The exchange is implemented in Java and is currently in validation.",
                "In describing the exchange we will first provide an overview of the main components and introduce several working examples.",
                "Then, we introduce the basic components for a simple one-shot variation in which bidders state their exact values for trades in a single round.",
                "We then describe the full iterative exchange, with upper and lower values, price-feedback, activity rules, and termination conditions.",
                "We state some theoretical properties of the exchange, and end with a discussion to motivate our main design decisions, and suggest some next steps. 2.",
                "AN OVERVIEW OF THE ICE DESIGN The design has four main components, which we will introduce in order through the rest of the paper: • Expressive and concise tree-based <br>bidding</br> language.",
                "The language describes values for trades, such as my value for selling AB and buying C is $100, or my value for selling ABC is -$50, with negative values indicating that a bidder must receive a payment for the trade to be acceptable.",
                "The language allows bidders to express upper and lower bounds on value, which can be tightened across rounds. • Winner Determination.",
                "Winner-determination (WD) is formulated as a mixed-integer program (MIP), with the structure of the bid-trees captured explicitly in the formulation.",
                "Comparing the solution at upper and lower values allows for a determination to be made about termination, with progress in intermediate rounds driven by an intermediate valuation and the lower values adopted on termination. • Payments.",
                "Payments are computed using the Threshold payment rule [24], with the intermediate valuations adopted in early rounds and lower values adopted on termination. • Price feedback.",
                "An approximate price is computed for each item in the exchange in each round, in terms of the intermediate valuations and the provisional trade.",
                "The prices are optimized to approximate competitive equilibrium prices, and further optimized to best approximate the current Threshold payments with remaining ties broken to favor prices that are balanced across different items.",
                "In computing the prices, we adopt the methods of constraint-generation to exploit the structure of the <br>bidding</br> language and avoid enumerating all feasible trades.",
                "The subproblem to generate new constraints is a variation of the WD problem. • Activity rule.",
                "A revealed-preference activity rule [1] ensures progress across rounds.",
                "In order to remain active, a bidder must tighten bounds so that there is enough information to define a trade that maximizes surplus at the current prices.",
                "Another variation on the WD problem is formulated, both to verify that the activity rule is met and also to provide feedback to a bidder to explain how to meet the rule.",
                "An outline of the ICE system flow of control is provided in Figure 1.",
                "We will return to this example later in the paper.",
                "For now, just observe in this two-agent example that the agents state lower and upper bounds that are checked in the activity rule, and then passed to winner-determination (WD), and then through three stages of pricing (accuracy, fairness, balance).",
                "On passing the closing rule (in which parameters αeff and αthresh are checked for convergence of the trade and payments), the exchange goes to a last-and-final round.",
                "At the end of this round, the trade and payments are finally determined, based on the lower valuations. 2.1 Related Work Many ascending-price one-sided CAs are known in the literature [10, 25, 29].",
                "Direct elicitation approaches have also been proposed for one-sided CAs in which agents respond to explicit queries about their valuations [8, 14, 19].",
                "A number of ascending CAs are designed to work with simple prices on items [12, 17].",
                "The price generation methods that we use in ICE generalize the methods in these earlier papers.",
                "Parkes et al. [24] studied sealed-bid combinatorial exchanges and introduced the Threshold payment rule.",
                "Subsequently, Krych [16] demonstrated experimentally that the Threshold rule promotes efficient allocations.",
                "We are not aware of any previous studies of iterative CEs.",
                "Dominant strategy DAs are known for unit demand [20] and also for single-minded agents [2].",
                "No dominant strategy mechanisms are known for the general CE problem.",
                "ICE is a hybrid auction design, in that it couples simple item prices to drive <br>bidding</br> in early rounds with combinatorial WD and payments, a feature it shares with the clock-proxy design of Ausubel et al. [1] for one-sided CAs.",
                "We adopt a variation on the clock-proxy auctionss revealedpreference activity rule.",
                "The <br>bidding</br> language shares some structural elements with the LGB language of Boutilier and Hoos [7], but has very different semantics.",
                "Rothkopf et al. [27] also describe a restricted tree-based <br>bidding</br> language.",
                "In LGB, the semantics are those of propositional logic, with the same items in an allocation able to satisfy a tree in multiple places.",
                "Although this can make LGB especially concise in some settings, the semantics that we propose appear to provide useful locality, so that the value of one component in a tree can be understood independently from the rest of the tree.",
                "The idea of capturing the structure of our <br>bidding</br> language explicitly within a mixed-integer programming formulation follows the developments in Boutilier [6]. 3.",
                "PRELIMINARIES In our model, we consider a set of goods, indexed {1, . . . , m} and a set of bidders, indexed {1, . . . , n}.",
                "The initial allocation of goods is denoted x0 = (x0 1, . . . , x0 n), with x0 i = (x0 i1, . . . , x0 im) and x0 ij ≥ 0 for good j indicating the number 250 of units of good j held by bidder i.",
                "A trade λ = (λ1, . . . , λn) denotes the change in allocation, with λi = (λi1, . . . , λim) where λij ∈   is the change in the number of units of item j to bidder i.",
                "So, the final allocation is x1 = x0 + λ.",
                "Each bidder has a value vi(λi) ∈ ¡ for a trade λi.",
                "This value can be positive or negative, and represents the change in value between the final allocation x0 i +λi and the initial allocation x0 i .",
                "Utility is quasi-linear, with ui(λi, p) = vi(λi)−p for trade λi and payment p ∈ ¡ .",
                "Price p can be negative, indicating the bidder receives a payment for the trade.",
                "We use the term payoff interchangeably with utility.",
                "Our goal in the ICE design is to implement the efficient trade.",
                "The efficient trade, λ∗ , maximizes the total increase in value across bidders.",
                "Definition 1 (Efficient trade).",
                "The efficient trade λ∗ solves max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Constraints (1) ensure that no agent sells more items than it has in its initial allocation.",
                "Constraints (2) provide free disposal, and allows feasible trades to sell more items than are purchased (but not vice versa).",
                "Later, we adopt Feas(x0 ) to denote the set of feasible trades, given these constraints and given an initial allocation x0 = (x0 1, . . . , x0 n). 3.1 Working Examples In this section, we provide three simple examples of instances that we will use to illustrate various components of the exchange.",
                "All three examples have only one seller, but this is purely illustrative.",
                "Example 1.",
                "One seller and one buyer, two goods {A, B}, with the seller having an initial allocation of AB.",
                "Changes in values for trades: seller buyer AND(−A, −B) AND(+A, +B) -10 +20 The AND indicates that both the buyer and the seller are only interested in trading both goods as a bundle.",
                "Here, the efficient (value-maximizing) trade is for the seller to sell AB to the buyer, denoted λ∗ = ([−1, −1], [+1, +1]).",
                "Example 2.",
                "One seller and four buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 buyer 3 buyer 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 The OR indicates that the seller is willing to sell any number of goods.",
                "The XOR indicates that buyers 2 and 4 are willing to buy at most one of the two goods in which they are interested.",
                "The efficient trade is for bundle AB to go to buyer 1 and bundle CD to buyer 3, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER Example 1: Example 3: 2,2 +C +D BUYER 2 2,2 +A +B BUYER 1 +11 +84,4 -B SELLER -A -C -D Example 2: 1,1 +A +B BUYER 2 2,2 +A +B BUYER 1 +6 +40,4 -B SELLER -C -D-A 1,1 +C +D BUYER 4 2,2 +C +D +3 +2 BUYER 3 -18 Figure 2: Example Bid Trees.",
                "Example 3.",
                "One seller and two buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 AND(−A, −B, −C, −D) AND(+A, +B) AND(+C, +D) -18 +11 +8 The efficient trade is for bundle AB to go to buyer 1 and bundle CD to go to buyer 2, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4.",
                "A ONE-SHOT EXCHANGE DESIGN The description of ICE is broken down into two sections: one-shot (sealed-bid) and iterative.",
                "In this section we abstract away the iterative aspect and introduce a specialization of the tree-based language that supports only exact values on nodes. 4.1 Tree-Based <br>bidding</br> Language The <br>bidding</br> language is designed to be expressive and concise, entirely symmetric with respect to buyers and sellers, and to extend to capture bids from mixed buyers and sellers, ranging from simple swaps to highly complex trades.",
                "Bids are expressed as annotated bid trees, and define a bidders value for all possible trades.",
                "The language defines changes in values on trades, with leaves annotated with traded items and nodes annotated with changes in values (either positive or negative).",
                "The main feature is that it has a general interval-choose logical operator on internal nodes, and that it defines careful semantics for propagating values within the tree.",
                "We illustrate the language on each of Examples 1-3 in Figure 2.",
                "The language has a tree structure, with trades on items defined on leaves and values annotated on nodes and leaves.",
                "The nodes have zero values where no value is indicated.",
                "Internal nodes are also labeled with interval-choose (IC) ranges.",
                "Given a trade, the semantics of the language define which nodes in the tree can be satisfied, or switched-on.",
                "First, if a child is on then its parent must be on.",
                "Second, if a parent node is on, then the number of children that are on must be within the IC range on the parent node.",
                "Finally, leaves in which the bidder is buying items can only be on if the items are provided in the trade.",
                "For instance, in Example 2 we can consider the efficient trade, and observe that in this trade all nodes in the trees of buyers 1 and 3 (and also the seller), but none of the nodes in the trees of buyers 2 and 4, can be on.",
                "On the other hand, in 251 the trade in which A goes to buyer 2 and D to buyer 4, then the root and appropriate leaf nodes can be on for buyers 2 and 4, but no nodes can be on for buyers 1 and 3.",
                "Given a trade there is often a number of ways to choose the set of satisfied nodes.",
                "The semantics of the language require that the nodes that maximize the summed value across satisfied nodes be activated.",
                "Consider bid tree Ti from bidder i.",
                "This defines nodes β ∈ Ti, of which some are leaves, Leaf (i) ⊆ Ti.",
                "Let Child(β) ⊆ Ti denote the children of a node β (that is not itself a leaf).",
                "All nodes except leaves are labeled with the interval-choose operator [IC x i (β), ICy i (β)].",
                "Every node is also labeled with a value, viβ ∈ ¡ .",
                "Each leaf β is labeled with a trade, qiβ ∈   m (i.e., leaves can define a bundled trade on more than one type of item.)",
                "Given a trade λi to bidder i, the interval-choose operators and trades on leaves define which nodes can be satisfied.",
                "There will often be a choice.",
                "Ties are broken to maximize value.",
                "Let satiβ ∈ {0, 1} denote whether node β is satisfied.",
                "Solution sati is valid given tree Ti and trade λi, written sati ∈ valid(Ti, λi), if and only if: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Child(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Leaf (i) (5) In words, a set of leaves can only be considered satisfied given trade λi if the total increase in quantity summed across all such leaves is covered by the trade, for all goods (Eq. 4).",
                "This works for sellers as well as buyers: for sellers a trade is negative and this requires that the total number of items indicated sold in the tree is at least the total number sold as defined in the trade.",
                "We also need upwards-propagation: any time a node other than the root is satisfied then its parent must be satisfied (by   β ∈Child(β) satiβ ≤ ICy i (β)satiβ in Eq. 5).",
                "Finally, we need downwards-propagation: any time an internal node is satisfied then the appropriate number of children must also be satisfied (Eq. 5).",
                "The total value of trade λi, given bid-tree Ti, is defined as: vi(Ti, λi) = max sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) The tree-based language generalizes existing languages.",
                "For instance: IC(2, 2) on a node with 2 children is equivalent to an AND operator; IC(1, 3) on a node with 3 children is equivalent to an OR operator; and IC(1, 1) on a node with 2 children is equivalent to an XOR operator.",
                "Similarly, the XOR/OR <br>bidding</br> languages can be directly expressed as a bid tree in our language.2 4.2 Winner Determination This section defines the winner determination problem, which is formulated as a MIP and solved in our implementation with a commercial solver.3 The solver uses branchand-bound search with dynamic cut generation and branching heuristics to solve large MIPs in economically feasible run times. 2 The OR* language is the OR language with dummy items to provide additional structure.",
                "OR* is known to be expressive and concise.",
                "However, it is not known whether OR* dominates XOR/OR in terms of conciseness [23]. 3 CPLEX, www.ilog.com In defining the MIP representation we are careful to avoid an XOR-based enumeration of all bundles.",
                "A variation on the WD problem is reused many times within the exchange, e.g. for column generation in pricing and for checking revealed preference.",
                "Given bid trees T = (T1, . . . , Tn) and initial allocation x0 , the mixed-integer formulation for WD is: WD(T, x0 ) : max λ,sat ¢ i ¢ β∈Ti viβ · satiβ s.t. (1), (2), satiβ ∈ {0, 1}, λij ∈   sati ∈ valid(Ti, λi), ∀i Some goods may go unassigned because free disposal is allowed within the clearing rules of winner determination.",
                "These items can be allocated back to agents that sold the items, i.e. for which λij < 0. 4.3 Computing Threshold Payments The Threshold payment rule is based on the payments in the Vickrey-Clarke-Groves (VCG) mechanism [15], which itself is truthful and efficient but does not satisfy budget balance.",
                "Budget-balance requires that the total payments to the exchange are equal to the total payments made by the exchange.",
                "In VCG, the payment paid by agent i is pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) where λ∗ is the efficient trade, V ∗ is the reported value of this trade, and V−i is the reported value of the efficient trade that would be implemented without bidder i.",
                "We call ∆vcg,i = V ∗ − V−i the VCG discount.",
                "For instance, in Example 1 pvcg,seller = −10 − (+10 − 0) = −20 and pvcg,buyer = +20 − (+10 − 0) = 10, and the exchange would run at a budget deficit of −20 + 10 = −10.",
                "The Threshold payment rule [24] determines budgetbalanced payments to minimize the maximal error across all agents to the VCG outcome.",
                "Definition 2.",
                "The Threshold payment scheme implements the efficient trade λ∗ given bids, and sets payments pthresh,i = ˆvi(λ∗ i ) − ∆i, where ∆ = (∆1, . . . , ∆n) is set to minimize maxi(∆vcg,i − ∆i) subject to ∆i ≤ ∆vcg,i and   i ∆i ≤ V ∗ (this gives budget-balance).",
                "Example 4.",
                "In Example 2, the VCG discounts are (9, 2, 0, 1, 0) to the seller and four buyers respectively, VCG payments are (−9, 4, 0, 2, 0) and the exchange runs at a deficit of -3.",
                "In Threshold, the discounts are (8, 1, 0, 0, 0) and the payments are (−8, 5, 0, 3, 0).",
                "This minimizes the worst-case error to VCG discounts across all budget-balanced payment schemes.",
                "Threshold payments are designed to minimize the maximal ex post incentive to manipulate.",
                "Krych [16] confirmed that Threshold promotes allocative efficiency in restricted and approximate Bayes-Nash equilibrium. 5.",
                "THE ICE DESIGN We are now ready to introduce the iterative combinatorial exchange (ICE) design.",
                "Several new components are introduced, relative to the design for the one-shot exchange.",
                "Rather than provide precise valuations, bidders can provide lower and upper valuations and revise this bid information across rounds.",
                "The exchange provides price-based feedback 252 to guide bidders in this process, and terminates with an efficient (or approximately-efficient) trade with respect to reported valuations.",
                "In each round t ∈ {0, 1, . . .} the current lower and upper bounds, vt and vt , are used to define a provisional valuation profile vα (the α-valuation), together with a provisional trade λt and provisional prices pt = (pt 1, . . . , pt m) on items.",
                "The α-valuation is a linear combination of the current upper and lower valuations, with αEFF ∈ [0, 1] chosen endogenously based on the closeness of the optimistic trade (at v) and the pessimistic trade (at v).",
                "Prices pt are used to inform an activity rule, and drive progress towards an efficient trade. 5.1 Upper and Lower Valuations The <br>bidding</br> language is extended to allow a bidder i to report a lower and upper value (viβ, viβ) on each node.",
                "These take the place of the exact value viβ defined in Section 4.1.",
                "Based on these labels, we can define the valuation functions vi(Ti, λi) and vi(Ti, λi), using the exact same semantics as in Eq. (6).",
                "We say that such a bid-tree is well-formed if viβ ≤ viβ for all nodes.",
                "The following lemma is useful: Lemma 1.",
                "Given a well-formed tree, T, then vi(Ti, λi) ≤ vi(Ti, λi) for all trades.",
                "Proof.",
                "Suppose there is some λi for which vi(Ti, λi) > vi(Ti, λi).",
                "Then, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ.",
                "But, this is a contradiction because the trade λ that defines vi(Ti, λi) is still feasible with upper bounds vi, and viβ ≥ viβ for all nodes β in a well-formed tree. 5.2 Price Feedback In each round, approximate competitive-equilibrium (CE) prices, pt = (pt 1, . . . , pt m), are determined.",
                "Given these provisional prices, the price on trade λi for bidder i is pt (λi) =   j≤m pt j · λij.",
                "Definition 3 (CE prices).",
                "Prices p∗ are competitive equilibrium prices if the efficient trade λ∗ is supported at prices p∗ , so that for each bidder: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) CE prices will not always exist and we will often need to compute approximate prices [5].",
                "We extend ideas due to Rassenti et al. [26], Kwasnica et al. [17] and Dunford et al. [12], and select approximate prices as follows: I: Accuracy.",
                "First, we compute prices that minimize the maximal error in the best-response constraints across all bidders.",
                "II: Fairness.",
                "Second, we break ties to prefer prices that minimize the maximal deviation from Threshold payments across all bidders.",
                "III: Balance.",
                "Third, we break ties to prefer prices that minimize the maximal price across all items.",
                "Taken together, these steps are designed to promote the informativeness of the prices in driving progress across rounds.",
                "In computing prices, we explain how to compute approximate (or otherwise) prices for structured <br>bidding</br> languages, and without enumerating all possible trades.",
                "For this, we adopt constraint generation to efficient handle an exponential number of constraints.",
                "Each step is described in detail below.",
                "I: Accuracy.",
                "We adopt a definition of price accuracy that generalizes the notions adopted in previous papers for unstructured <br>bidding</br> languages.",
                "Let λt denote the current provisional trade and suppose the provisional valuation is vα .",
                "To compute accurate CE prices, we consider: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j.",
                "This linear program (LP) is designed to find prices that minimize the worst-case error across all agents.",
                "From the definition of CE prices, it follows that CE prices would have δ = 0 as a solution to (9), at which point trade λt i would be in the best-response set of every agent (with λt i = ∅, i.e. no trade, for all agents with no surplus for trade at the prices.)",
                "Example 5.",
                "We can illustrate the formulation (9) on Example 2, assuming for simplicity that vα = v (i.e. truth).",
                "The efficient trade allocates AB to buyer 1 and CD to buyer 3.",
                "Accuracy will seek prices p(A), p(B), p(C) and p(D) to minimize the δ ≥ 0 required to satisfy constraints: p(A) + p(B) + p(C) + p(D) ≥ 0 (seller) p(A) + p(B) ≤ 6 + δ (buyer 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (buyer 2) p(C) + p(D) ≤ 3 (buyer 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (buyer 4) An optimal solution requires p(A) = p(B) = 10/3, with δ = 2/3, with p(C) and p(D) taking values such as p(C) = p(D) = 3/2.",
                "But, (9) has an exponential number of constraints (Eq. 10).",
                "Rather than solve it explicitly we use constraint generation [4] and dynamically generate a sufficient subset of constraints.",
                "Let   i denote a manageable subset of all possible feasible trades to bidder i.",
                "Then, a relaxed version of (9) (written ACC) is formulated by substituting (10) with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) where   i is a set of trades that are feasible for bidder i given the other bids.",
                "Fixing the prices p∗ , we then solve n subproblems (one for each bidder), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0 ), (12) to check whether solution (p∗ , δ∗ ) to ACC is feasible in problem (9).",
                "In R-WD(i) the objective is to determine a most preferred trade for each bidder at these prices.",
                "Let ˆλi denote the solution to R-WD(i).",
                "Check condition: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) and if this condition holds for all bidders i, then solution (p∗ , δ∗ ) is optimal for problem (9).",
                "Otherwise, trade ˆλi is added to   i for all bidders i for which this constraint is 253 violated and we re-solve the LP with the new set of constraints.4 II: Fairness.",
                "Second, we break remaining ties to prefer fair prices: choosing prices that minimize the worst-case error with respect to Threshold payoffs (i.e. utility to bidders with Threshold payments), but without choosing prices that are less accurate.5 Example 6.",
                "For example, accuracy in Example 1 (depicted in Figure 1) requires 12 ≤ pA +pB ≤ 16 (for vα = v).",
                "At these valuations the Threshold payoffs would be 2 to both the seller and the buyer.",
                "This can be exactly achieved in pricing with pA + pB = 14.",
                "The fairness tie-breaking method is formulated as the following LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution, from ACC.",
                "The objective here is the same as in the Threshold payment rule (see Section 4.3): minimize the maximal error between bidder payoff (at vα ) for the provisional trade and the VCG payoff (at vα ).",
                "Problem FAIR is also solved through constraint generation, using R-WD(i) to add additional violated constraints as necessary.",
                "III: Balance.",
                "Third, we break remaining ties to prefer balanced prices: choosing prices that minimize the maximal price across all items.",
                "Returning again to Example 1, depicted in Figure 1, we see that accuracy and fairness require p(A) + p(B) = 14.",
                "Finally, balance sets p(A) = p(B) = 7.",
                "Balance is justified when, all else being equal, items are more likely to have similar than dissimilar values.6 The LP for balance is formulated as follows: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution from ACC and π∗ represents the error in the optimal solution from FAIR.",
                "Constraint generation is also used to solve BAL, generating new trades for   i as necessary. 4 Problem R-WD(i) is a specialization of the WD problem, in which the objective is to maximize the payoff of a single bidder, rather than the total value across all bidders.",
                "It is solved as a MIP, by rewriting the objective in WD(T, x0 ) as max{viβ · satiβ −   j p∗ j · λij } for agent i.",
                "Thus, the structure of the bid-tree language is exploited in generating new constraints, because this is solved as a concise MIP.",
                "The other bidders are kept around in the MIP (but do not appear in the objective), and are used to define the space of feasible trades. 5 The methods of Dunford et al. [12], that use a nucleolus approach, are also closely related. 6 The use of balance was advocated by Kwasnica et al. [17].",
                "Dunford et al. [12] prefer to smooth prices across rounds.",
                "Comment 1: Lexicographical Refinement.",
                "For all three sub-problems we also perform lexicographical refinement (with respect to bidders in ACC and FAIR, and with respect to goods in BAL).",
                "For instance, in ACC we successively minimize the maximal error across all bidders.",
                "Given an initial solution we first pin down the error on all bidders for whom a constraint (11) is binding.",
                "For such a bidder i, the constraint is replaced with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) and the error to bidder i no longer appears explicitly in the objective.",
                "ACC is then re-solved, and makes progress by further minimizing the maximal error across all bidders yet to be pinned down.",
                "This continues, pinning down any new bidders for whom one of constraints (11) is binding, until the error is lexicographically optimized for all bidders.7 The exact same process is repeated for FAIR and BAL, with bidders pinned down and constraints (15) replaced with π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (where π∗ i is the current objective) in FAIR, and items pinned down and constraints (18) replaced with p∗ j ≥ pj (where p∗ j represents the target for the maximal price on that item) in BAL.",
                "Comment 2: Computation.",
                "All constraints in   i are retained, and this set grows across all stages and across all rounds of the exchange.",
                "Thus, the computational effort in constraint generation is re-used.",
                "In implementation we are careful to address a number of -issues that arise due to floating-point issues.",
                "We prefer to err on the side of being conservative in determining whether or not to add another constraint in performing check (13).",
                "This avoids later infeasibility issues.",
                "In addition, when pinning-down bidders for the purpose of lexicographical refinement we relax the associated bidder-constraints with a small > 0 on the righthand side. 5.3 Revealed-Preference Activity Rules The role of activity rules in the auction is to ensure both consistency and progress across rounds [21].",
                "Consistency in our exchange requires that bidders tighten bounds as the exchange progresses.",
                "Activity rules ensure that bidders are active during early rounds, and promote useful elicitation throughout the exchange.",
                "We adopt a simple revealed-preference (RP) activity rule.",
                "The idea is loosely based around the RP-rule in Ausubel et al. [1], where it is used for one-sided CAs.",
                "The motivation is to require more than simply consistency: we need bidders to provide enough information for the system to be able to to prove that an allocation is (approximately) efficient.",
                "It is helpful to think about the bidders interacting with proxy agents that will act on their behalf in responding to provisional prices pt−1 determined at the end of round t − 1.",
                "The only knowledge that such a proxy has of the valuation of a bidder is through the bid-tree.",
                "Suppose a proxy was queried by the exchange and asked which trade the bidder was most interested in at the provisional prices.",
                "The RP rule says the following: the proxy must have enough 7 For example, applying this to accuracy on Example 2 we solve once and find bidders 1 and 2 are binding, for error δ∗ = 2/3.",
                "We pin these down and then minimize the error to bidders 3 and 4.",
                "Finally, this gives p(A) = p(B) = 10/3 and p(C) = p(D) = 5/3, with accuracy 2/3 to bidders 1 and 2 and 1/3 to bidders 3 and 4. 254 information to be able to determine this surplus-maximizing trade at current prices.",
                "Consider the following examples: Example 7.",
                "A bidder has XOR(+A, +B) and a value of +5 on the leaf +A and a value range of [5,10] on leaf +B.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the proxy knows that however the remaining value uncertainty on +B is resolved the bidder will always (weakly) prefer +B to +A.",
                "Example 8.",
                "A bidder has XOR(+A, +B) and value bounds [5, 10] on the root node and a value of 1 on leaf +A.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the bidder will always prefer +A to +B at equal prices, whichever way the uncertain value on the root node is ultimately resolved.",
                "Overloading notation, let vi ∈ Ti denote a valuation that is consistent with lower and upper valuations in bid tree Ti.",
                "Definition 4.",
                "Bid tree Ti satisfies RP at prices pt−1 if and only if there exists some feasible trade L∗ for which, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. (20) To make this determination for bidder i we solve a sequence of problems, each of which is a variation on the WD problem.",
                "First, we construct a candidate lower-bound trade, which is a feasible trade that solves: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) The solution π∗ l to RP1(i) represents the maximal payoff that bidder i can achieve across all feasible trades, given its pessimistic valuation.",
                "Second, we break ties to find a trade with maximal value uncertainty across all possible solutions to RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] s.t. λ ∈ Feas(x0 ) (22) vi(λi) − pt−1 (λi) ≥ π∗ l (23) We adopt solution L∗ i as our candidate for the trade that may satisfy RP.",
                "To understand the importance of this tiebreaking rule consider Example 7.",
                "The proxy can prove +B but not +A is a best-response for all vi ∈ Ti, and should choose +B as its candidate.",
                "Notice that +B is a counterexample to +A, but not the other way round.",
                "Now, we construct a modified valuation ˜vi, by setting ˜viβ =   viβ , if β ∈ sat(L∗ i ) viβ , otherwise. (24) where sat(L∗ i ) is the set of nodes that are satisfied in the lower-bound tree for trade L∗ i .",
                "Given this modified valuation, we find U∗ to solve: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Let π∗ u denote the payoff from this optimal trade at modified values ˜v.",
                "We call trade U∗ i the witness trade.",
                "We show in Proposition 1 that the RP rule is satisfied if and only if π∗ l ≥ π∗ u. Constructing the modified valuation as ˜vi recognizes that there is shared uncertainty across trades that satisfy the same nodes in a bid tree.",
                "Example 8 helps to illustrate this.",
                "Just using vi in RP3(i), we would find L∗ i is buy A with payoff π∗ l = 3 but then find U∗ i is buy B with π∗ u = 7 and fail RP.",
                "We must recognize that however the uncertainty on the root node is resolved it will affect +A and +B in exactly the same way.",
                "For this reason, we set ˜viβ = viβ = 5 on the root node, which is exactly the same value that was adopted in determining π∗ l .",
                "Then, RP3(i) applied to U∗ i gives buy A and the RP test is judged to be passed.",
                "Proposition 1.",
                "Bid tree Ti satisfies RP given prices pt−1 if and only if any lower-bound trade L∗ i that solves RP1(i) and RP2(i) satisfies: vi(Ti, L∗ i ) − pt−1 (L∗ i ) ≥ ˜vi(Ti, U∗ i ) − pt−1 (U∗ i ), (26) where ˜vi is the modified valuation in Eq. (24).",
                "Proof.",
                "For sufficiency, notice that the difference in payoff between trade L∗ i and another trade λi is unaffected by the way uncertainty is resolved on any node that is satisfied in both L∗ i and λi.",
                "Fixing the values in ˜vi on nodes satisfied in L∗ i has the effect of removing this consideration when a trade U∗ i is selected that satisfies one of these nodes.",
                "On the other hand, fixing the values on these nodes has no effect on trades considered in RP3(i) that do not share a node with L∗ i .",
                "For the necessary direction, we first show that any trade that satisfies RP must solve RP1(i).",
                "Suppose otherwise, that some λi with payoff greater than π∗ l satisfies RP.",
                "But, valuation vi ∈ Ti together with L∗ i presents a counterexample to RP (Eq. 20).",
                "Now, suppose (for contradiction) that some λi with maximal payoff π∗ l but uncertainty less than L∗ i satisfies RP.",
                "Proceed by case analysis.",
                "Case a): only one solution to RP1(i) has uncertain value and so λi has certain value.",
                "But, this cannot satisfy RP because L∗ i with uncertain value would be a counterexample to RP (Eq. 20).",
                "Case b): two or more solutions to RP1(i) have uncertain value.",
                "Here, we first argue that one of these trades must satisfy a (weak) superset of all the nodes with uncertain value that are satisfied by all other trades in this set.",
                "This is by RP.",
                "Without this, then for any choice of trade that solves RP1(i), there is another trade with a disjoint set of uncertain but satisfied nodes that provides a counterexample to RP (Eq. 20).",
                "Now, consider the case that some trade contains a superset of all the uncertain satisfied nodes of the other trades.",
                "Clearly RP2(i) will choose this trade, L∗ i , and λi must satisfy a subset of these nodes (by assumption).",
                "But, we now see that λi cannot satisfy RP because L∗ i would be a counterexample to RP.",
                "Failure to meet the activity rule must have some consequence.",
                "In the current rules, the default action we choose is to set the upper bounds in valuations down to the maximal value of the provisional price on a node8 and the lowerbound value on that node.9 Such a bidder can remain active 8 The provisional price on a node is defined as the minimal total price across all feasible trades for which the subtree rooted at the tree is satisfied. 9 This is entirely analogous to when a bidder in an ascending clock auction stops <br>bidding</br> at a price: she is not permitted to bid at a higher price again in future rounds. 255 within the exchange, but only with valuations that are consistent with these new bounds. 5.4 Bidder Feedback In each round, our default design provides every bidder with the provisional trade and also with the current provisional prices.",
                "See 7 for an additional discussion.",
                "We also provide guidance to help a bidder meet the RP rule.",
                "Let sat(L∗ i ) and sat(U∗ i ) denote the nodes that are satisfied in trades L∗ i and U∗ i , as computed in RP1-RP3.",
                "Lemma 2.",
                "When RP fails, a bidder must increase a lower bound on at least one node in sat(L∗ i ) \\ sat(U∗ i ) or decrease an upper bound on at least one node in sat(U∗ i ) \\ sat(L∗ i ) in order to meet the activity rule.",
                "Proof.",
                "Changing the upper- or lower- values on nodes that are not satisfied by either trade does not change L∗ i or U∗ i , and does not change the payoff from these trades.",
                "Thus, the RP condition will continue to fail.",
                "Similarly, changing the bounds on nodes that are satisfied in both trades has no effect on revealed preference.",
                "A change to a lower bound on a shared node affects both L∗ i and U∗ i identically because of the use of the modified valuation to determine U∗ i .",
                "A change to an upper bound on a shared node has no effect in determining either L∗ i or U∗ i .",
                "Note that when sat(U∗ i ) = sat(L∗ i ) then condition (26) is always trivially satisfied, and so the guidance in the lemma is always well-defined when RP fails.",
                "This is an elegant feedback mechanism because it is adaptive.",
                "Once a bidder makes some changes on some subset of these nodes, the bidder can query the exchange.",
                "The exchange can then respond yes, or can revise the set of nodes sat(λ∗ l ) and sat(λ∗ u) as necessary. 5.5 Termination Conditions Once each bidder has committed its new bids (and either met the RP rule or suffered the penalty) then round t closes.",
                "At this point, the task is to determine the new α-valuation, and in turn the provisional allocation λt and provisional prices pt .",
                "A termination condition is also checked, to determine whether to move the exchange to a last-and-final round.",
                "To define the α-valuation we compute the following two quantities: Pessimistic at Pessimistic (PP) Determine an efficient trade, λ∗ l , at pessimistic values, i.e. to solve maxλ   i vi(λi), and set PP=  i vi(λ∗ li).",
                "Pessimistic at Optimistic (PO) Determine an efficient trade, λ∗ u, at optimistic values, i.e. to solve maxλ   i vi(λi), and set PO=  i vi(λ∗ ui).",
                "First, note that PP ≥ PO and PP ≥ 0 by definition, for all bid-trees, although PO can be negative (because the right trade at v is not currently a useful trade at v).",
                "Recognizing this, define γeff (PP, PO) = 1 + PP − PO PP , (27) when PP > 0, and observe that γeff (PP, PO) ≥ 1 when this is defined, and that γeff (PP, PO) will start large and then trend towards 1 as the optimistic allocation converges towards the pessimistic allocation.",
                "In each round, we define αeff ∈ [0, 1] as: αeff =   0 when PP is 0 1/γeff otherwise (28) which is 0 while PP is 0 and then trends towards 1 once PP> 0 in some round.",
                "This is used to define α-valuation vα i = αeff vi + (1 − αeff )vi, ∀i, (29) which is used to define the provisional allocation and provisional prices.",
                "The effect is to endogenously define a schedule for moving from optimistic to pessimistic values across rounds, based on how close the trades are to one another.",
                "Termination Condition.",
                "In moving to the last-and-final round, and finally closing, we also care about the convergence of payments, in addition to the convergence towards an efficient trade.",
                "For this we introduce another parameter, αthresh ∈ [0, 1], that trends from 0 to 1 as the Threshold payments at lower and upper valuations converge.",
                "Consider the following parameter: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive) , (30) which is defined for PP > 0, where pthresh(v) denotes the Threshold payments at valuation profile v, Nactive is the number of bidders that are actively engaged in trade in the PP trade, and || · ||2 is the L2-norm.",
                "Note that γthresh is defined for payments and not payoffs.",
                "This is appropriate because it is the accuracy of the outcome of the exchange that matters: i.e. the trade and the payments.",
                "Given this, we define αthresh =   0 when PP is 0 1/γthresh otherwise (31) which is 0 while PP is 0 and then trends towards 1 as progress is made.",
                "Definition 5 (termination).",
                "ICE transitions to a lastand-final round when one of the following holds: 1. αeff ≥ CUTOFFeff and αthresh ≥ CUTOFFthresh, 2. there is no trade at the optimistic values, where CUTOFFeff , CUTOFFthresh ∈ (0, 1] determine the accuracy required for termination.",
                "At the end of the last-and-final round vα = v is used to define the final trade and the final Threshold payments.",
                "Example 9.",
                "Consider again Example 1, and consider the upper and lower bounds as depicted in Figure 1.",
                "First, if the sellers bounds were [−20, −4] then there is an optimistic trade but no pessimistic trade, and PO = −4 and PP = 0, and αeff = 0.",
                "At the bounds depicted, both the optimistic and the pessimistic trades occur and PO = PP = 4 and αeff = 1.",
                "However, we can see the Threshold payments are (17, −17) at v but (14, −14) at v. Evaluating γthresh , we have γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, and αthresh = 2/5.",
                "For CUTOFFthresh < 2/5 the exchange would remain open.",
                "On the other hand, if the buyers value for +AB was between [18, 24] and the sellers value for −AB was between [−12, −6], the Threshold payments are (15, −15) at both upper and lower bounds, and αthresh = 1. 256 Component Purpose Lines Agent.",
                "Captures strategic behavior and information revelation decisions 762 Model Support Provides XML support to load goods and valuations into world 200 World Keeps track of all agent, good, and valuation details 998 Exchange Driver & Communication Controls exchange, and coordinates remote agent behavior 585 <br>bidding</br> Language Implements the tree-based <br>bidding</br> language 1119 Activity Rule Engine Implements the revealed preference rule with range support 203 Closing Rule Engine Checks if auction termination condition reached 137 WD Engine Provides WD-related logic 377 Pricing Engine Provides Pricing-related logic 460 MIP Builders Translates logic used by engines into our general optimizer formulation 346 Pricing Builders Used by three pricing stages 256 Winner Determination Builders Used by WD, activity rule, closing rule, and pricing constraint generation 365 Framework Support code; eases modular replacement of above components 510 Table 1: Exchange Component and Code Breakdown. 6.",
                "SYSTEMS INFRASTRUCTURE ICE is approximately 6502 lines of Java code, broken up into the functional packages described in Table 1.10 The prototype is modular so that researchers may easily replace components for experimentation.",
                "In addition to the core exchange discussed in this paper, we have developed an agent component that allows a user to simulate the behavior and knowledge of other players in the system, better allowing a user to formulate their strategy in advance of actual play.",
                "A user specifies a valuation model in an XMLinterpretation of our <br>bidding</br> language, which is revealed to the exchange via the agents strategy.",
                "Major exchange tasks are handled by engines that dictate the non-optimizer specific logic.",
                "These engines drive the appropriate MIP/LP builders.",
                "We realized that all of our optimization formulations boil down to two classes of optimization problem.",
                "The first, used by winner determination, activity rule, closing rule, and constraint generation in pricing, is a MIP that finds trades that maximize value, holding prices and slacks constant.",
                "The second, used by the three pricing stages, is an LP that holds trades constant, seeking to minimize slack, profit, or prices.",
                "We take advantage of the commonality of these problems by using common LP/MIP builders that differ only by a few functional hooks to provide the correct variables for optimization.",
                "We have generalized our back-end optimization solver interface11 (we currently support CPLEX and the LGPL- licensed LPSolve), and can take advantage of the load-balancing and parallel MIP/LP solving capability that this library provides. 7.",
                "DISCUSSION The <br>bidding</br> language was defined to allow for perfect symmetry between buyers and sellers and provide expressiveness in an exchange domain, for instance for mixed bidders interested in executing trades such as swaps.",
                "This proved especially challenging.",
                "The breakthrough came when we focused on changes in value for trades rather than providing absolute values for allocations.",
                "For simplicity, we require the same tree structure for both the upper and lower valuations. 10 Code size is measured in physical source line of code (SLOC), as generated using David A. Wheelers SLOC Count.",
                "The total of 6502 includes 184 for instrumentation (not shown in the table).",
                "The JOpt solver interface is another 1964 lines, and Castor automatically generates around 5200 lines of code for XML file manipulation. 11 http://econcs.eecs.harvard.edu/jopt This allows the language itself to ensure consistency (with the upper value at least the lower value on all trades) and enforce monotonic tightening of these bounds for all trades across rounds.",
                "It also provides for an efficient method to check the RP activity rule, because it makes it simple to reason about shared uncertainty between trades.",
                "The decision to adopt a direct and proxied approach in which bidders express their upper and lower values to a trusted proxy agent that interacts with the exchange was made early in the design process.",
                "In many ways this is the clearest and most immediate way to generalize the design in Parkes et al. [24] and make it iterative.",
                "In addition, this removes much opportunity for strategic manipulation: bidders are restricted to making (incremental) statements about their valuations.",
                "Another advantage is that it makes the activity rule easy to explain: bidders can always meet the activity rule by tightening bounds such that their true value remains in the support.12 Perhaps most importantly, having explicit information on upper and lower values permits progress in early rounds, even while there is no efficient trade at pessimistic values.",
                "Upper and lower bound information also provides guidance about when to terminate.",
                "Note that taken by itself, PP = PO does not imply that the current provisional trade is efficient with respect to all values consistent with current value information.",
                "The difference in values between different trades, aggregated across all bidders, could be similar at lower and upper bounds but quite different at intermediate values (including truth).",
                "Nevertheless, we conjecture that PP = PO will prove an excellent indicator of efficiency in practical settings where the shape of the upper and lower valuations does convey useful information.",
                "This is worthy of experimental investigation.",
                "Moreover, the use of price and RP activity provides additional guarantees.",
                "We adopted linear prices (prices on individual items) rather than non-linear prices (with prices on a trade not equal to the sum of the prices on the component items) early in the design process.",
                "The conciseness of this price representation is very important for computational tractability within the exchange and also to promote simplicity and transparency for bidders.",
                "The RP activity rule was adopted later, and is a good choice because of its excellent theoretical properties when coupled with CE prices.",
                "The following can be easily established: given exact CE prices pt−1 for provisional trade 12 This is in contrast to indirect price-based approaches, such as clock-proxy [1], in which bidders must be able to reason about the RP-constraints implied by bids in each round. 257 λt−1 at valuations vα , then if the upper and lower values at the start of round t already satisfy the RP rule (and without the need for any tie-breaking), the provisional trade is efficient for all valuations consistent with the current bid trees.",
                "When linear CE prices exist, this provides for a soundness and completeness statement: if PP = PO, linear CE prices exist, and the RP rule is satisfied, the provisional trade is efficient (soundness); if prices are exact CE prices for the provisional trade at vα , but the trade is inefficient with respect to some valuation profile consistent with the current bid trees, then at least one bidder must fail RP with her current bid tree and progress will be made (completeness).",
                "Future work must study convergence experimentally, and extend this theory to allow for approximate prices.",
                "Some strategic aspects of our ICE design deserve comment, and further study.",
                "First, we do not claim that truthfully responding to the RP rule is an ex post equilibrium.13 However, the exchange is designed to mimic the Threshold rule in its payment scheme, which is known to have useful incentive properties [16].",
                "We must be careful, though.",
                "For instance we do not suggest to provide αeff to bidders, because as αeff approaches 1 it would inform bidders that bid values are becoming irrelevant to determining the trade but merely used to determine payments (and bidders would become increasingly reluctant to increase their lower valuations).",
                "Also, no consideration has been given in this work to collusion by bidders.",
                "This is an issue that deserves some attention in future work. 8.",
                "CONCLUSIONS In this work we designed and prototyped a scalable and highly-expressive iterative combinatorial exchange.",
                "The design includes many interesting features, including: a new bid-tree language for exchanges, a new method to construct approximate linear prices from expressive languages, and a proxied elicitation method with optimistic and pessimistic valuations with a new method to evaluate a revealed- preference activity rule.",
                "The exchange is fully implemented in Java and is in a validation phase.",
                "The next steps for our work are to allow bidders to refine the structure of the bid tree in addition to values on the tree.",
                "We intend to study the elicitation properties of the exchange and we have put together a test suite of exchange problem instances.",
                "In addition, we are beginning to engage in collaborations to apply the design to airline takeoff and landing slot scheduling and to resource allocation in widearea network distributed computational systems.",
                "Acknowledgments We would like to dedicate this paper to all of the participants in CS 286r at Harvard University in Spring 2004.",
                "This work is supported in part by NSF grant IIS-0238147. 9.",
                "REFERENCES [1] L. Ausubel, P. Cramton, and P. Milgrom.",
                "The clock-proxy auction: A practical combinatorial auction design.",
                "In Cramton et al. [9], chapter 5. [2] M. Babaioff, N. Nisan, and E. Pavlov.",
                "Mechanisms for a spatially distributed market.",
                "In Proc. 5th ACM Conf. on Electronic Commerce, pages 9-20.",
                "ACM Press, 2001. 13 Given the Myerson-Satterthwaite impossibility theorem [22] and the method by which we determine the trade we should not expect this. [3] M. Ball, G. Donohue, and K. Hoffman.",
                "Auctions for the safe, efficient, and equitable allocation of airspace system resources.",
                "In S. Cramton, Shoham, editor, Combinatorial Auctions. 2004.",
                "Forthcoming. [4] D. Bertsimas and J. Tsitsiklis.",
                "Introduction to Linear Optimization.",
                "Athena Scientific, 1997. [5] S. Bikhchandani and J. M. Ostroy.",
                "The package assignment model.",
                "Journal of Economic Theory, 107(2):377-406, 2002. [6] C. Boutilier.",
                "A pomdp formulation of preference elicitation problems.",
                "In Proc. 18th National Conference on Artificial Intelligence (AAAI-02), 2002. [7] C. Boutilier and H. Hoos.",
                "<br>bidding</br> languages for combinatorial auctions.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), 2001. [8] W. Conen and T. Sandholm.",
                "Preference elicitation in combinatorial auctions.",
                "In Proc. 3rd ACM Conf. on Electronic Commerce (EC-01), pages 256-259.",
                "ACM Press, New York, 2001. [9] P. Cramton, Y. Shoham, and R. Steinberg, editors.",
                "Combinatorial Auctions.",
                "MIT Press, 2004. [10] S. de Vries, J. Schummer, and R. V. Vohra.",
                "On ascending Vickrey auctions for heterogeneous objects.",
                "Technical report, MEDS, Kellogg School, Northwestern University, 2003. [11] S. de Vries and R. V. Vohra.",
                "Combinatorial auctions: A survey.",
                "Informs Journal on Computing, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana, and T. Wilson.",
                "Testing linear pricing algorithms for use in ascending combinatorial auctions.",
                "Technical report, SEOR, George Mason University, 2003. [13] Y. Fu, J.",
                "Chase, B. Chun, S. Schwab, and A. Vahdat.",
                "Sharp: an architecture for secure resource peering.",
                "In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 133-148.",
                "ACM Press, 2003. [14] B. Hudson and T. Sandholm.",
                "Effectiveness of query types and policies for preference elicitation in combinatorial auctions.",
                "In Proc. 3rd Int.",
                "Joint.",
                "Conf. on Autonomous Agents and Multi Agent Systems, pages 386-393, 2004. [15] V. Krishna.",
                "Auction Theory.",
                "Academic Press, 2002. [16] D. Krych.",
                "Calculation and analysis of Nash equilibria of Vickrey-based payment rules for combinatorial exchanges, Harvard College, April 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter, and C. DeMartini.",
                "A new and improved design for multi-object iterative auctions.",
                "Management Science, 2004.",
                "To appear. [18] E. Kwerel and J. Williams.",
                "A proposal for a rapid transition to market allocation of spectrum.",
                "Technical report, FCC Office of Plans and Policy, Nov 2002. [19] S. M. Lahaie and D. C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In Proc.",
                "ACM Conf. on Electronic Commerce, pages 180-188, 2004. [20] R. P. McAfee.",
                "A dominant strategy double auction.",
                "J. of Economic Theory, 56:434-450, 1992. [21] P. Milgrom.",
                "Putting auction theory to work: The simultaneous ascending auction.",
                "J.Pol.",
                "Econ., 108:245-272, 2000. [22] R. B. Myerson and M. A. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [23] N. Nisan.",
                "<br>bidding</br> and allocation in combinatorial auctions.",
                "In Proc. 2nd ACM Conf. on Electronic Commerce (EC-00), pages 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), pages 1161-1168, 2001. [25] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, July 2000. [26] S. J. Rassenti, V. L. Smith, and R. L. Bulfin.",
                "A combinatorial mechanism for airport time slot allocation.",
                "Bell Journal of Economics, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc, and R. M. Harstad.",
                "Computationally manageable combinatorial auctions.",
                "Management Science, 44(8):1131-1147, 1998. [28] T. Sandholm and C. Boutilier.",
                "Preference elicitation in combinatorial auctions.",
                "In Cramton et al. [9], chapter 10. [29] P. R. Wurman and M. P. Wellman.",
                "AkBA: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, pages 21-29, 2000. 258"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El intercambio incorpora un lenguaje de \"licitación\" basado en árboles que es conciso y expresivo para el CES.",
                "Los compradores pueden tener complementariedades o sustitutabilidad entre bienes, y se les proporciona un lenguaje expresivo de \"licitación\".",
                "La principal innovación en nuestro diseño es un lenguaje expresivo pero conciso de \"licitación\" basado en árboles (que generaliza los idiomas conocidos como Xor/o [23]), y el acoplamiento apretado de este lenguaje con algoritmos eficientes para que el retroalimentación de precios guíe para guiar \"licitación \", determinación del ganador para determinar las operaciones y las reglas de actividad de preferencia reveladas para garantizar el progreso en las rondas.",
                "Si bien no podemos afirmar que la \"oferta\" directa es un equilibrio del intercambio (y de hecho, no deberían esperar por el teorema de imposibilidad de Myerson-Satterthwaite [22]), la regla de pago umbral minimiza el incentivo ex post para manipular todo el presupuesto-Reglas de pago equilibradas.",
                "Una descripción general del diseño de hielo El diseño tiene cuatro componentes principales, que presentaremos en orden a través del resto del documento: • lenguaje expresivo y conciso de \"licitación\" basado en árboles.",
                "Al calcular los precios, adoptamos los métodos de generación de restricciones para explotar la estructura del lenguaje de \"licitación\" y evitar enumerar todos los oficios factibles.",
                "ICE es un diseño de subasta híbrida, ya que combina los precios simples de los artículos para impulsar la \"oferta\" en las primeras rondas con WD y pagos combinatorios, una característica que comparte con el diseño de los propósitos de reloj de Ausubel et al.[1] Para CAS unilateral.",
                "El lenguaje de \"licitación\" comparte algunos elementos estructurales con el lenguaje LGB de Boutilier y Hoos [7], pero tiene una semántica muy diferente.",
                "Rothkopf et al.[27] también describe un lenguaje restringido de \"licitación\" basado en árboles.",
                "La idea de capturar la estructura de nuestro lenguaje de \"oferta\" explícitamente dentro de una formulación de programación de intendencias mixtas sigue los desarrollos en Boutilier [6].3."
            ],
            "translated_text": "",
            "candidates": [
                "ofertas",
                "licitación",
                "ofertas",
                "licitación",
                "ofertas",
                "licitación",
                "licitación ",
                "ofertas",
                "oferta",
                "ofertas",
                "licitación",
                "ofertas",
                "licitación",
                "ofertas",
                "oferta",
                "ofertas",
                "licitación",
                "ofertas",
                "licitación",
                "Pidiendo",
                "oferta"
            ],
            "error": []
        },
        "threshold payment": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "ICE: An Iterative Combinatorial Exchange David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an iterative combinatorial exchange (ICE).",
                "The exchange incorporates a tree-based bidding language that is concise and expressive for CEs.",
                "Bidders specify lower and upper bounds on their value for different trades.",
                "These bounds allow price discovery and useful preference elicitation in early rounds, and allow termination with an efficient trade despite partial information on bidder valuations.",
                "All computation in the exchange is carefully optimized to exploit the structure of the bid-trees and to avoid enumerating trades.",
                "A proxied interpretation of a revealedpreference activity rule ensures progress across rounds.",
                "A VCG-based payment scheme that has been shown to mitigate opportunities for bargaining and strategic behavior is used to determine final payments.",
                "The exchange is fully implemented and in a validation phase.",
                "Categories and Subject Descriptors: I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Combinatorial exchanges combine and generalize two different mechanisms: double auctions and combinatorial auctions.",
                "In a double auction (DA), multiple buyers and sellers trade units of an identical good [20].",
                "In a combinatorial auction (CA), a single seller has multiple heterogeneous items up for sale [11].",
                "Buyers may have complementarities or substitutabilities between goods, and are provided with an expressive bidding language.",
                "A common goal in both market designs is to determine the efficient allocation, which is the allocation that maximizes total value.",
                "A combinatorial exchange (CE) [24] is a combinatorial double auction that brings together multiple buyers and sellers to trade multiple heterogeneous goods.",
                "For example, in an exchange for wireless spectrum, a bidder may declare that she is willing to pay $1 million for a trade where she obtains licenses for New York City, Boston, and Philadelphia, and loses her license for Washington DC.",
                "Thus, unlike a DA, a CE allows all participants to express complex valuations via expressive bids.",
                "Unlike a CA, a CE allows for fragmented ownership, with multiple buyers and sellers and agents that are both buying and selling.",
                "CEs have received recent attention both in the context of wireless spectrum allocation [18] and for airport takeoff and landing slot allocation [3].",
                "In both of these domains there are incumbents with property rights, and it is important to facilitate a complex multi-way reallocation of resources.",
                "Another potential application domain for CEs is to resource allocation in shared distributed systems, such as PlanetLab [13].",
                "The instantiation of our general purpose design to specific domains is a compelling next step in our research.",
                "This paper presents the first design for an iterative combinatorial exchange (ICE).",
                "The genesis of this project was a class, CS 286r Topics at the Interface between Economics and Computer Science, taught at Harvard University in Spring 2004.1 The entire class was dedicated to the design and prototyping of an iterative CE.",
                "The ICE design problem is multi-faceted and quite hard.",
                "The main innovation in our design is an expressive yet concise tree-based bidding language (which generalizes known languages such as XOR/OR [23]), and the tight coupling of this language with efficient algorithms for price-feedback to guide bidding, winner-determination to determine trades, and revealed-preference activity rules to ensure progress across rounds.",
                "The exchange is iterative: bidders express upper and lower valuations on trades by annotating their bid-tree, and then tighten these bounds in response to price feedback in each round.",
                "The <br>threshold payment</br> rule, introduced by Parkes et al. [24], is used to determine final payments.",
                "The exchange has a number of interesting theoretical properties.",
                "For instance, when there exist linear prices we establish soundness and completeness: for straightforward bidders that adjust their bounds to meet activity rules while keeping their true value within the bounds, the exchange will terminate with the efficient allocation.",
                "In addition, the 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Truth Agent Act Rule WD ACC FAIR BALClosing RuleVickreyThreshold DONE !",
                "DONE 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER 2,2 +A +15 +8 +B +15 +8 BUYER 2,2 -A -2 -6 -B -2 -6 SELLER BUYER, buy AB SELLER, sell AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PBUYER = 16 - (4-0) = 12 PSELLER = -12 - (4-0) = -16 PBUYER = 14 PSELLER = -14 Pessim istic O ptim istic = 1 Figure 1: ICE System Flow of Control efficient allocation can often be determined without bidders revealing, or even knowing, their exact value for all trades.",
                "This is essential in complex domains where the valuation problem can itself be very challenging for a participant [28].",
                "While we cannot claim that straightforward bidding is an equilibrium of the exchange (and indeed, should not expect to by the Myerson-Satterthwaite impossibility theorem [22]), the <br>threshold payment</br> rule minimizes the ex post incentive to manipulate across all budget-balanced payment rules.",
                "The exchange is implemented in Java and is currently in validation.",
                "In describing the exchange we will first provide an overview of the main components and introduce several working examples.",
                "Then, we introduce the basic components for a simple one-shot variation in which bidders state their exact values for trades in a single round.",
                "We then describe the full iterative exchange, with upper and lower values, price-feedback, activity rules, and termination conditions.",
                "We state some theoretical properties of the exchange, and end with a discussion to motivate our main design decisions, and suggest some next steps. 2.",
                "AN OVERVIEW OF THE ICE DESIGN The design has four main components, which we will introduce in order through the rest of the paper: • Expressive and concise tree-based bidding language.",
                "The language describes values for trades, such as my value for selling AB and buying C is $100, or my value for selling ABC is -$50, with negative values indicating that a bidder must receive a payment for the trade to be acceptable.",
                "The language allows bidders to express upper and lower bounds on value, which can be tightened across rounds. • Winner Determination.",
                "Winner-determination (WD) is formulated as a mixed-integer program (MIP), with the structure of the bid-trees captured explicitly in the formulation.",
                "Comparing the solution at upper and lower values allows for a determination to be made about termination, with progress in intermediate rounds driven by an intermediate valuation and the lower values adopted on termination. • Payments.",
                "Payments are computed using the <br>threshold payment</br> rule [24], with the intermediate valuations adopted in early rounds and lower values adopted on termination. • Price feedback.",
                "An approximate price is computed for each item in the exchange in each round, in terms of the intermediate valuations and the provisional trade.",
                "The prices are optimized to approximate competitive equilibrium prices, and further optimized to best approximate the current Threshold payments with remaining ties broken to favor prices that are balanced across different items.",
                "In computing the prices, we adopt the methods of constraint-generation to exploit the structure of the bidding language and avoid enumerating all feasible trades.",
                "The subproblem to generate new constraints is a variation of the WD problem. • Activity rule.",
                "A revealed-preference activity rule [1] ensures progress across rounds.",
                "In order to remain active, a bidder must tighten bounds so that there is enough information to define a trade that maximizes surplus at the current prices.",
                "Another variation on the WD problem is formulated, both to verify that the activity rule is met and also to provide feedback to a bidder to explain how to meet the rule.",
                "An outline of the ICE system flow of control is provided in Figure 1.",
                "We will return to this example later in the paper.",
                "For now, just observe in this two-agent example that the agents state lower and upper bounds that are checked in the activity rule, and then passed to winner-determination (WD), and then through three stages of pricing (accuracy, fairness, balance).",
                "On passing the closing rule (in which parameters αeff and αthresh are checked for convergence of the trade and payments), the exchange goes to a last-and-final round.",
                "At the end of this round, the trade and payments are finally determined, based on the lower valuations. 2.1 Related Work Many ascending-price one-sided CAs are known in the literature [10, 25, 29].",
                "Direct elicitation approaches have also been proposed for one-sided CAs in which agents respond to explicit queries about their valuations [8, 14, 19].",
                "A number of ascending CAs are designed to work with simple prices on items [12, 17].",
                "The price generation methods that we use in ICE generalize the methods in these earlier papers.",
                "Parkes et al. [24] studied sealed-bid combinatorial exchanges and introduced the <br>threshold payment</br> rule.",
                "Subsequently, Krych [16] demonstrated experimentally that the Threshold rule promotes efficient allocations.",
                "We are not aware of any previous studies of iterative CEs.",
                "Dominant strategy DAs are known for unit demand [20] and also for single-minded agents [2].",
                "No dominant strategy mechanisms are known for the general CE problem.",
                "ICE is a hybrid auction design, in that it couples simple item prices to drive bidding in early rounds with combinatorial WD and payments, a feature it shares with the clock-proxy design of Ausubel et al. [1] for one-sided CAs.",
                "We adopt a variation on the clock-proxy auctionss revealedpreference activity rule.",
                "The bidding language shares some structural elements with the LGB language of Boutilier and Hoos [7], but has very different semantics.",
                "Rothkopf et al. [27] also describe a restricted tree-based bidding language.",
                "In LGB, the semantics are those of propositional logic, with the same items in an allocation able to satisfy a tree in multiple places.",
                "Although this can make LGB especially concise in some settings, the semantics that we propose appear to provide useful locality, so that the value of one component in a tree can be understood independently from the rest of the tree.",
                "The idea of capturing the structure of our bidding language explicitly within a mixed-integer programming formulation follows the developments in Boutilier [6]. 3.",
                "PRELIMINARIES In our model, we consider a set of goods, indexed {1, . . . , m} and a set of bidders, indexed {1, . . . , n}.",
                "The initial allocation of goods is denoted x0 = (x0 1, . . . , x0 n), with x0 i = (x0 i1, . . . , x0 im) and x0 ij ≥ 0 for good j indicating the number 250 of units of good j held by bidder i.",
                "A trade λ = (λ1, . . . , λn) denotes the change in allocation, with λi = (λi1, . . . , λim) where λij ∈   is the change in the number of units of item j to bidder i.",
                "So, the final allocation is x1 = x0 + λ.",
                "Each bidder has a value vi(λi) ∈ ¡ for a trade λi.",
                "This value can be positive or negative, and represents the change in value between the final allocation x0 i +λi and the initial allocation x0 i .",
                "Utility is quasi-linear, with ui(λi, p) = vi(λi)−p for trade λi and payment p ∈ ¡ .",
                "Price p can be negative, indicating the bidder receives a payment for the trade.",
                "We use the term payoff interchangeably with utility.",
                "Our goal in the ICE design is to implement the efficient trade.",
                "The efficient trade, λ∗ , maximizes the total increase in value across bidders.",
                "Definition 1 (Efficient trade).",
                "The efficient trade λ∗ solves max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Constraints (1) ensure that no agent sells more items than it has in its initial allocation.",
                "Constraints (2) provide free disposal, and allows feasible trades to sell more items than are purchased (but not vice versa).",
                "Later, we adopt Feas(x0 ) to denote the set of feasible trades, given these constraints and given an initial allocation x0 = (x0 1, . . . , x0 n). 3.1 Working Examples In this section, we provide three simple examples of instances that we will use to illustrate various components of the exchange.",
                "All three examples have only one seller, but this is purely illustrative.",
                "Example 1.",
                "One seller and one buyer, two goods {A, B}, with the seller having an initial allocation of AB.",
                "Changes in values for trades: seller buyer AND(−A, −B) AND(+A, +B) -10 +20 The AND indicates that both the buyer and the seller are only interested in trading both goods as a bundle.",
                "Here, the efficient (value-maximizing) trade is for the seller to sell AB to the buyer, denoted λ∗ = ([−1, −1], [+1, +1]).",
                "Example 2.",
                "One seller and four buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 buyer 3 buyer 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 The OR indicates that the seller is willing to sell any number of goods.",
                "The XOR indicates that buyers 2 and 4 are willing to buy at most one of the two goods in which they are interested.",
                "The efficient trade is for bundle AB to go to buyer 1 and bundle CD to buyer 3, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER Example 1: Example 3: 2,2 +C +D BUYER 2 2,2 +A +B BUYER 1 +11 +84,4 -B SELLER -A -C -D Example 2: 1,1 +A +B BUYER 2 2,2 +A +B BUYER 1 +6 +40,4 -B SELLER -C -D-A 1,1 +C +D BUYER 4 2,2 +C +D +3 +2 BUYER 3 -18 Figure 2: Example Bid Trees.",
                "Example 3.",
                "One seller and two buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 AND(−A, −B, −C, −D) AND(+A, +B) AND(+C, +D) -18 +11 +8 The efficient trade is for bundle AB to go to buyer 1 and bundle CD to go to buyer 2, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4.",
                "A ONE-SHOT EXCHANGE DESIGN The description of ICE is broken down into two sections: one-shot (sealed-bid) and iterative.",
                "In this section we abstract away the iterative aspect and introduce a specialization of the tree-based language that supports only exact values on nodes. 4.1 Tree-Based Bidding Language The bidding language is designed to be expressive and concise, entirely symmetric with respect to buyers and sellers, and to extend to capture bids from mixed buyers and sellers, ranging from simple swaps to highly complex trades.",
                "Bids are expressed as annotated bid trees, and define a bidders value for all possible trades.",
                "The language defines changes in values on trades, with leaves annotated with traded items and nodes annotated with changes in values (either positive or negative).",
                "The main feature is that it has a general interval-choose logical operator on internal nodes, and that it defines careful semantics for propagating values within the tree.",
                "We illustrate the language on each of Examples 1-3 in Figure 2.",
                "The language has a tree structure, with trades on items defined on leaves and values annotated on nodes and leaves.",
                "The nodes have zero values where no value is indicated.",
                "Internal nodes are also labeled with interval-choose (IC) ranges.",
                "Given a trade, the semantics of the language define which nodes in the tree can be satisfied, or switched-on.",
                "First, if a child is on then its parent must be on.",
                "Second, if a parent node is on, then the number of children that are on must be within the IC range on the parent node.",
                "Finally, leaves in which the bidder is buying items can only be on if the items are provided in the trade.",
                "For instance, in Example 2 we can consider the efficient trade, and observe that in this trade all nodes in the trees of buyers 1 and 3 (and also the seller), but none of the nodes in the trees of buyers 2 and 4, can be on.",
                "On the other hand, in 251 the trade in which A goes to buyer 2 and D to buyer 4, then the root and appropriate leaf nodes can be on for buyers 2 and 4, but no nodes can be on for buyers 1 and 3.",
                "Given a trade there is often a number of ways to choose the set of satisfied nodes.",
                "The semantics of the language require that the nodes that maximize the summed value across satisfied nodes be activated.",
                "Consider bid tree Ti from bidder i.",
                "This defines nodes β ∈ Ti, of which some are leaves, Leaf (i) ⊆ Ti.",
                "Let Child(β) ⊆ Ti denote the children of a node β (that is not itself a leaf).",
                "All nodes except leaves are labeled with the interval-choose operator [IC x i (β), ICy i (β)].",
                "Every node is also labeled with a value, viβ ∈ ¡ .",
                "Each leaf β is labeled with a trade, qiβ ∈   m (i.e., leaves can define a bundled trade on more than one type of item.)",
                "Given a trade λi to bidder i, the interval-choose operators and trades on leaves define which nodes can be satisfied.",
                "There will often be a choice.",
                "Ties are broken to maximize value.",
                "Let satiβ ∈ {0, 1} denote whether node β is satisfied.",
                "Solution sati is valid given tree Ti and trade λi, written sati ∈ valid(Ti, λi), if and only if: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Child(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Leaf (i) (5) In words, a set of leaves can only be considered satisfied given trade λi if the total increase in quantity summed across all such leaves is covered by the trade, for all goods (Eq. 4).",
                "This works for sellers as well as buyers: for sellers a trade is negative and this requires that the total number of items indicated sold in the tree is at least the total number sold as defined in the trade.",
                "We also need upwards-propagation: any time a node other than the root is satisfied then its parent must be satisfied (by   β ∈Child(β) satiβ ≤ ICy i (β)satiβ in Eq. 5).",
                "Finally, we need downwards-propagation: any time an internal node is satisfied then the appropriate number of children must also be satisfied (Eq. 5).",
                "The total value of trade λi, given bid-tree Ti, is defined as: vi(Ti, λi) = max sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) The tree-based language generalizes existing languages.",
                "For instance: IC(2, 2) on a node with 2 children is equivalent to an AND operator; IC(1, 3) on a node with 3 children is equivalent to an OR operator; and IC(1, 1) on a node with 2 children is equivalent to an XOR operator.",
                "Similarly, the XOR/OR bidding languages can be directly expressed as a bid tree in our language.2 4.2 Winner Determination This section defines the winner determination problem, which is formulated as a MIP and solved in our implementation with a commercial solver.3 The solver uses branchand-bound search with dynamic cut generation and branching heuristics to solve large MIPs in economically feasible run times. 2 The OR* language is the OR language with dummy items to provide additional structure.",
                "OR* is known to be expressive and concise.",
                "However, it is not known whether OR* dominates XOR/OR in terms of conciseness [23]. 3 CPLEX, www.ilog.com In defining the MIP representation we are careful to avoid an XOR-based enumeration of all bundles.",
                "A variation on the WD problem is reused many times within the exchange, e.g. for column generation in pricing and for checking revealed preference.",
                "Given bid trees T = (T1, . . . , Tn) and initial allocation x0 , the mixed-integer formulation for WD is: WD(T, x0 ) : max λ,sat ¢ i ¢ β∈Ti viβ · satiβ s.t. (1), (2), satiβ ∈ {0, 1}, λij ∈   sati ∈ valid(Ti, λi), ∀i Some goods may go unassigned because free disposal is allowed within the clearing rules of winner determination.",
                "These items can be allocated back to agents that sold the items, i.e. for which λij < 0. 4.3 Computing Threshold Payments The <br>threshold payment</br> rule is based on the payments in the Vickrey-Clarke-Groves (VCG) mechanism [15], which itself is truthful and efficient but does not satisfy budget balance.",
                "Budget-balance requires that the total payments to the exchange are equal to the total payments made by the exchange.",
                "In VCG, the payment paid by agent i is pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) where λ∗ is the efficient trade, V ∗ is the reported value of this trade, and V−i is the reported value of the efficient trade that would be implemented without bidder i.",
                "We call ∆vcg,i = V ∗ − V−i the VCG discount.",
                "For instance, in Example 1 pvcg,seller = −10 − (+10 − 0) = −20 and pvcg,buyer = +20 − (+10 − 0) = 10, and the exchange would run at a budget deficit of −20 + 10 = −10.",
                "The <br>threshold payment</br> rule [24] determines budgetbalanced payments to minimize the maximal error across all agents to the VCG outcome.",
                "Definition 2.",
                "The <br>threshold payment</br> scheme implements the efficient trade λ∗ given bids, and sets payments pthresh,i = ˆvi(λ∗ i ) − ∆i, where ∆ = (∆1, . . . , ∆n) is set to minimize maxi(∆vcg,i − ∆i) subject to ∆i ≤ ∆vcg,i and   i ∆i ≤ V ∗ (this gives budget-balance).",
                "Example 4.",
                "In Example 2, the VCG discounts are (9, 2, 0, 1, 0) to the seller and four buyers respectively, VCG payments are (−9, 4, 0, 2, 0) and the exchange runs at a deficit of -3.",
                "In Threshold, the discounts are (8, 1, 0, 0, 0) and the payments are (−8, 5, 0, 3, 0).",
                "This minimizes the worst-case error to VCG discounts across all budget-balanced payment schemes.",
                "Threshold payments are designed to minimize the maximal ex post incentive to manipulate.",
                "Krych [16] confirmed that Threshold promotes allocative efficiency in restricted and approximate Bayes-Nash equilibrium. 5.",
                "THE ICE DESIGN We are now ready to introduce the iterative combinatorial exchange (ICE) design.",
                "Several new components are introduced, relative to the design for the one-shot exchange.",
                "Rather than provide precise valuations, bidders can provide lower and upper valuations and revise this bid information across rounds.",
                "The exchange provides price-based feedback 252 to guide bidders in this process, and terminates with an efficient (or approximately-efficient) trade with respect to reported valuations.",
                "In each round t ∈ {0, 1, . . .} the current lower and upper bounds, vt and vt , are used to define a provisional valuation profile vα (the α-valuation), together with a provisional trade λt and provisional prices pt = (pt 1, . . . , pt m) on items.",
                "The α-valuation is a linear combination of the current upper and lower valuations, with αEFF ∈ [0, 1] chosen endogenously based on the closeness of the optimistic trade (at v) and the pessimistic trade (at v).",
                "Prices pt are used to inform an activity rule, and drive progress towards an efficient trade. 5.1 Upper and Lower Valuations The bidding language is extended to allow a bidder i to report a lower and upper value (viβ, viβ) on each node.",
                "These take the place of the exact value viβ defined in Section 4.1.",
                "Based on these labels, we can define the valuation functions vi(Ti, λi) and vi(Ti, λi), using the exact same semantics as in Eq. (6).",
                "We say that such a bid-tree is well-formed if viβ ≤ viβ for all nodes.",
                "The following lemma is useful: Lemma 1.",
                "Given a well-formed tree, T, then vi(Ti, λi) ≤ vi(Ti, λi) for all trades.",
                "Proof.",
                "Suppose there is some λi for which vi(Ti, λi) > vi(Ti, λi).",
                "Then, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ.",
                "But, this is a contradiction because the trade λ that defines vi(Ti, λi) is still feasible with upper bounds vi, and viβ ≥ viβ for all nodes β in a well-formed tree. 5.2 Price Feedback In each round, approximate competitive-equilibrium (CE) prices, pt = (pt 1, . . . , pt m), are determined.",
                "Given these provisional prices, the price on trade λi for bidder i is pt (λi) =   j≤m pt j · λij.",
                "Definition 3 (CE prices).",
                "Prices p∗ are competitive equilibrium prices if the efficient trade λ∗ is supported at prices p∗ , so that for each bidder: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) CE prices will not always exist and we will often need to compute approximate prices [5].",
                "We extend ideas due to Rassenti et al. [26], Kwasnica et al. [17] and Dunford et al. [12], and select approximate prices as follows: I: Accuracy.",
                "First, we compute prices that minimize the maximal error in the best-response constraints across all bidders.",
                "II: Fairness.",
                "Second, we break ties to prefer prices that minimize the maximal deviation from Threshold payments across all bidders.",
                "III: Balance.",
                "Third, we break ties to prefer prices that minimize the maximal price across all items.",
                "Taken together, these steps are designed to promote the informativeness of the prices in driving progress across rounds.",
                "In computing prices, we explain how to compute approximate (or otherwise) prices for structured bidding languages, and without enumerating all possible trades.",
                "For this, we adopt constraint generation to efficient handle an exponential number of constraints.",
                "Each step is described in detail below.",
                "I: Accuracy.",
                "We adopt a definition of price accuracy that generalizes the notions adopted in previous papers for unstructured bidding languages.",
                "Let λt denote the current provisional trade and suppose the provisional valuation is vα .",
                "To compute accurate CE prices, we consider: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j.",
                "This linear program (LP) is designed to find prices that minimize the worst-case error across all agents.",
                "From the definition of CE prices, it follows that CE prices would have δ = 0 as a solution to (9), at which point trade λt i would be in the best-response set of every agent (with λt i = ∅, i.e. no trade, for all agents with no surplus for trade at the prices.)",
                "Example 5.",
                "We can illustrate the formulation (9) on Example 2, assuming for simplicity that vα = v (i.e. truth).",
                "The efficient trade allocates AB to buyer 1 and CD to buyer 3.",
                "Accuracy will seek prices p(A), p(B), p(C) and p(D) to minimize the δ ≥ 0 required to satisfy constraints: p(A) + p(B) + p(C) + p(D) ≥ 0 (seller) p(A) + p(B) ≤ 6 + δ (buyer 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (buyer 2) p(C) + p(D) ≤ 3 (buyer 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (buyer 4) An optimal solution requires p(A) = p(B) = 10/3, with δ = 2/3, with p(C) and p(D) taking values such as p(C) = p(D) = 3/2.",
                "But, (9) has an exponential number of constraints (Eq. 10).",
                "Rather than solve it explicitly we use constraint generation [4] and dynamically generate a sufficient subset of constraints.",
                "Let   i denote a manageable subset of all possible feasible trades to bidder i.",
                "Then, a relaxed version of (9) (written ACC) is formulated by substituting (10) with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) where   i is a set of trades that are feasible for bidder i given the other bids.",
                "Fixing the prices p∗ , we then solve n subproblems (one for each bidder), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0 ), (12) to check whether solution (p∗ , δ∗ ) to ACC is feasible in problem (9).",
                "In R-WD(i) the objective is to determine a most preferred trade for each bidder at these prices.",
                "Let ˆλi denote the solution to R-WD(i).",
                "Check condition: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) and if this condition holds for all bidders i, then solution (p∗ , δ∗ ) is optimal for problem (9).",
                "Otherwise, trade ˆλi is added to   i for all bidders i for which this constraint is 253 violated and we re-solve the LP with the new set of constraints.4 II: Fairness.",
                "Second, we break remaining ties to prefer fair prices: choosing prices that minimize the worst-case error with respect to Threshold payoffs (i.e. utility to bidders with Threshold payments), but without choosing prices that are less accurate.5 Example 6.",
                "For example, accuracy in Example 1 (depicted in Figure 1) requires 12 ≤ pA +pB ≤ 16 (for vα = v).",
                "At these valuations the Threshold payoffs would be 2 to both the seller and the buyer.",
                "This can be exactly achieved in pricing with pA + pB = 14.",
                "The fairness tie-breaking method is formulated as the following LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution, from ACC.",
                "The objective here is the same as in the <br>threshold payment</br> rule (see Section 4.3): minimize the maximal error between bidder payoff (at vα ) for the provisional trade and the VCG payoff (at vα ).",
                "Problem FAIR is also solved through constraint generation, using R-WD(i) to add additional violated constraints as necessary.",
                "III: Balance.",
                "Third, we break remaining ties to prefer balanced prices: choosing prices that minimize the maximal price across all items.",
                "Returning again to Example 1, depicted in Figure 1, we see that accuracy and fairness require p(A) + p(B) = 14.",
                "Finally, balance sets p(A) = p(B) = 7.",
                "Balance is justified when, all else being equal, items are more likely to have similar than dissimilar values.6 The LP for balance is formulated as follows: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution from ACC and π∗ represents the error in the optimal solution from FAIR.",
                "Constraint generation is also used to solve BAL, generating new trades for   i as necessary. 4 Problem R-WD(i) is a specialization of the WD problem, in which the objective is to maximize the payoff of a single bidder, rather than the total value across all bidders.",
                "It is solved as a MIP, by rewriting the objective in WD(T, x0 ) as max{viβ · satiβ −   j p∗ j · λij } for agent i.",
                "Thus, the structure of the bid-tree language is exploited in generating new constraints, because this is solved as a concise MIP.",
                "The other bidders are kept around in the MIP (but do not appear in the objective), and are used to define the space of feasible trades. 5 The methods of Dunford et al. [12], that use a nucleolus approach, are also closely related. 6 The use of balance was advocated by Kwasnica et al. [17].",
                "Dunford et al. [12] prefer to smooth prices across rounds.",
                "Comment 1: Lexicographical Refinement.",
                "For all three sub-problems we also perform lexicographical refinement (with respect to bidders in ACC and FAIR, and with respect to goods in BAL).",
                "For instance, in ACC we successively minimize the maximal error across all bidders.",
                "Given an initial solution we first pin down the error on all bidders for whom a constraint (11) is binding.",
                "For such a bidder i, the constraint is replaced with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) and the error to bidder i no longer appears explicitly in the objective.",
                "ACC is then re-solved, and makes progress by further minimizing the maximal error across all bidders yet to be pinned down.",
                "This continues, pinning down any new bidders for whom one of constraints (11) is binding, until the error is lexicographically optimized for all bidders.7 The exact same process is repeated for FAIR and BAL, with bidders pinned down and constraints (15) replaced with π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (where π∗ i is the current objective) in FAIR, and items pinned down and constraints (18) replaced with p∗ j ≥ pj (where p∗ j represents the target for the maximal price on that item) in BAL.",
                "Comment 2: Computation.",
                "All constraints in   i are retained, and this set grows across all stages and across all rounds of the exchange.",
                "Thus, the computational effort in constraint generation is re-used.",
                "In implementation we are careful to address a number of -issues that arise due to floating-point issues.",
                "We prefer to err on the side of being conservative in determining whether or not to add another constraint in performing check (13).",
                "This avoids later infeasibility issues.",
                "In addition, when pinning-down bidders for the purpose of lexicographical refinement we relax the associated bidder-constraints with a small > 0 on the righthand side. 5.3 Revealed-Preference Activity Rules The role of activity rules in the auction is to ensure both consistency and progress across rounds [21].",
                "Consistency in our exchange requires that bidders tighten bounds as the exchange progresses.",
                "Activity rules ensure that bidders are active during early rounds, and promote useful elicitation throughout the exchange.",
                "We adopt a simple revealed-preference (RP) activity rule.",
                "The idea is loosely based around the RP-rule in Ausubel et al. [1], where it is used for one-sided CAs.",
                "The motivation is to require more than simply consistency: we need bidders to provide enough information for the system to be able to to prove that an allocation is (approximately) efficient.",
                "It is helpful to think about the bidders interacting with proxy agents that will act on their behalf in responding to provisional prices pt−1 determined at the end of round t − 1.",
                "The only knowledge that such a proxy has of the valuation of a bidder is through the bid-tree.",
                "Suppose a proxy was queried by the exchange and asked which trade the bidder was most interested in at the provisional prices.",
                "The RP rule says the following: the proxy must have enough 7 For example, applying this to accuracy on Example 2 we solve once and find bidders 1 and 2 are binding, for error δ∗ = 2/3.",
                "We pin these down and then minimize the error to bidders 3 and 4.",
                "Finally, this gives p(A) = p(B) = 10/3 and p(C) = p(D) = 5/3, with accuracy 2/3 to bidders 1 and 2 and 1/3 to bidders 3 and 4. 254 information to be able to determine this surplus-maximizing trade at current prices.",
                "Consider the following examples: Example 7.",
                "A bidder has XOR(+A, +B) and a value of +5 on the leaf +A and a value range of [5,10] on leaf +B.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the proxy knows that however the remaining value uncertainty on +B is resolved the bidder will always (weakly) prefer +B to +A.",
                "Example 8.",
                "A bidder has XOR(+A, +B) and value bounds [5, 10] on the root node and a value of 1 on leaf +A.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the bidder will always prefer +A to +B at equal prices, whichever way the uncertain value on the root node is ultimately resolved.",
                "Overloading notation, let vi ∈ Ti denote a valuation that is consistent with lower and upper valuations in bid tree Ti.",
                "Definition 4.",
                "Bid tree Ti satisfies RP at prices pt−1 if and only if there exists some feasible trade L∗ for which, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. (20) To make this determination for bidder i we solve a sequence of problems, each of which is a variation on the WD problem.",
                "First, we construct a candidate lower-bound trade, which is a feasible trade that solves: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) The solution π∗ l to RP1(i) represents the maximal payoff that bidder i can achieve across all feasible trades, given its pessimistic valuation.",
                "Second, we break ties to find a trade with maximal value uncertainty across all possible solutions to RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] s.t. λ ∈ Feas(x0 ) (22) vi(λi) − pt−1 (λi) ≥ π∗ l (23) We adopt solution L∗ i as our candidate for the trade that may satisfy RP.",
                "To understand the importance of this tiebreaking rule consider Example 7.",
                "The proxy can prove +B but not +A is a best-response for all vi ∈ Ti, and should choose +B as its candidate.",
                "Notice that +B is a counterexample to +A, but not the other way round.",
                "Now, we construct a modified valuation ˜vi, by setting ˜viβ =   viβ , if β ∈ sat(L∗ i ) viβ , otherwise. (24) where sat(L∗ i ) is the set of nodes that are satisfied in the lower-bound tree for trade L∗ i .",
                "Given this modified valuation, we find U∗ to solve: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Let π∗ u denote the payoff from this optimal trade at modified values ˜v.",
                "We call trade U∗ i the witness trade.",
                "We show in Proposition 1 that the RP rule is satisfied if and only if π∗ l ≥ π∗ u. Constructing the modified valuation as ˜vi recognizes that there is shared uncertainty across trades that satisfy the same nodes in a bid tree.",
                "Example 8 helps to illustrate this.",
                "Just using vi in RP3(i), we would find L∗ i is buy A with payoff π∗ l = 3 but then find U∗ i is buy B with π∗ u = 7 and fail RP.",
                "We must recognize that however the uncertainty on the root node is resolved it will affect +A and +B in exactly the same way.",
                "For this reason, we set ˜viβ = viβ = 5 on the root node, which is exactly the same value that was adopted in determining π∗ l .",
                "Then, RP3(i) applied to U∗ i gives buy A and the RP test is judged to be passed.",
                "Proposition 1.",
                "Bid tree Ti satisfies RP given prices pt−1 if and only if any lower-bound trade L∗ i that solves RP1(i) and RP2(i) satisfies: vi(Ti, L∗ i ) − pt−1 (L∗ i ) ≥ ˜vi(Ti, U∗ i ) − pt−1 (U∗ i ), (26) where ˜vi is the modified valuation in Eq. (24).",
                "Proof.",
                "For sufficiency, notice that the difference in payoff between trade L∗ i and another trade λi is unaffected by the way uncertainty is resolved on any node that is satisfied in both L∗ i and λi.",
                "Fixing the values in ˜vi on nodes satisfied in L∗ i has the effect of removing this consideration when a trade U∗ i is selected that satisfies one of these nodes.",
                "On the other hand, fixing the values on these nodes has no effect on trades considered in RP3(i) that do not share a node with L∗ i .",
                "For the necessary direction, we first show that any trade that satisfies RP must solve RP1(i).",
                "Suppose otherwise, that some λi with payoff greater than π∗ l satisfies RP.",
                "But, valuation vi ∈ Ti together with L∗ i presents a counterexample to RP (Eq. 20).",
                "Now, suppose (for contradiction) that some λi with maximal payoff π∗ l but uncertainty less than L∗ i satisfies RP.",
                "Proceed by case analysis.",
                "Case a): only one solution to RP1(i) has uncertain value and so λi has certain value.",
                "But, this cannot satisfy RP because L∗ i with uncertain value would be a counterexample to RP (Eq. 20).",
                "Case b): two or more solutions to RP1(i) have uncertain value.",
                "Here, we first argue that one of these trades must satisfy a (weak) superset of all the nodes with uncertain value that are satisfied by all other trades in this set.",
                "This is by RP.",
                "Without this, then for any choice of trade that solves RP1(i), there is another trade with a disjoint set of uncertain but satisfied nodes that provides a counterexample to RP (Eq. 20).",
                "Now, consider the case that some trade contains a superset of all the uncertain satisfied nodes of the other trades.",
                "Clearly RP2(i) will choose this trade, L∗ i , and λi must satisfy a subset of these nodes (by assumption).",
                "But, we now see that λi cannot satisfy RP because L∗ i would be a counterexample to RP.",
                "Failure to meet the activity rule must have some consequence.",
                "In the current rules, the default action we choose is to set the upper bounds in valuations down to the maximal value of the provisional price on a node8 and the lowerbound value on that node.9 Such a bidder can remain active 8 The provisional price on a node is defined as the minimal total price across all feasible trades for which the subtree rooted at the tree is satisfied. 9 This is entirely analogous to when a bidder in an ascending clock auction stops bidding at a price: she is not permitted to bid at a higher price again in future rounds. 255 within the exchange, but only with valuations that are consistent with these new bounds. 5.4 Bidder Feedback In each round, our default design provides every bidder with the provisional trade and also with the current provisional prices.",
                "See 7 for an additional discussion.",
                "We also provide guidance to help a bidder meet the RP rule.",
                "Let sat(L∗ i ) and sat(U∗ i ) denote the nodes that are satisfied in trades L∗ i and U∗ i , as computed in RP1-RP3.",
                "Lemma 2.",
                "When RP fails, a bidder must increase a lower bound on at least one node in sat(L∗ i ) \\ sat(U∗ i ) or decrease an upper bound on at least one node in sat(U∗ i ) \\ sat(L∗ i ) in order to meet the activity rule.",
                "Proof.",
                "Changing the upper- or lower- values on nodes that are not satisfied by either trade does not change L∗ i or U∗ i , and does not change the payoff from these trades.",
                "Thus, the RP condition will continue to fail.",
                "Similarly, changing the bounds on nodes that are satisfied in both trades has no effect on revealed preference.",
                "A change to a lower bound on a shared node affects both L∗ i and U∗ i identically because of the use of the modified valuation to determine U∗ i .",
                "A change to an upper bound on a shared node has no effect in determining either L∗ i or U∗ i .",
                "Note that when sat(U∗ i ) = sat(L∗ i ) then condition (26) is always trivially satisfied, and so the guidance in the lemma is always well-defined when RP fails.",
                "This is an elegant feedback mechanism because it is adaptive.",
                "Once a bidder makes some changes on some subset of these nodes, the bidder can query the exchange.",
                "The exchange can then respond yes, or can revise the set of nodes sat(λ∗ l ) and sat(λ∗ u) as necessary. 5.5 Termination Conditions Once each bidder has committed its new bids (and either met the RP rule or suffered the penalty) then round t closes.",
                "At this point, the task is to determine the new α-valuation, and in turn the provisional allocation λt and provisional prices pt .",
                "A termination condition is also checked, to determine whether to move the exchange to a last-and-final round.",
                "To define the α-valuation we compute the following two quantities: Pessimistic at Pessimistic (PP) Determine an efficient trade, λ∗ l , at pessimistic values, i.e. to solve maxλ   i vi(λi), and set PP=  i vi(λ∗ li).",
                "Pessimistic at Optimistic (PO) Determine an efficient trade, λ∗ u, at optimistic values, i.e. to solve maxλ   i vi(λi), and set PO=  i vi(λ∗ ui).",
                "First, note that PP ≥ PO and PP ≥ 0 by definition, for all bid-trees, although PO can be negative (because the right trade at v is not currently a useful trade at v).",
                "Recognizing this, define γeff (PP, PO) = 1 + PP − PO PP , (27) when PP > 0, and observe that γeff (PP, PO) ≥ 1 when this is defined, and that γeff (PP, PO) will start large and then trend towards 1 as the optimistic allocation converges towards the pessimistic allocation.",
                "In each round, we define αeff ∈ [0, 1] as: αeff =   0 when PP is 0 1/γeff otherwise (28) which is 0 while PP is 0 and then trends towards 1 once PP> 0 in some round.",
                "This is used to define α-valuation vα i = αeff vi + (1 − αeff )vi, ∀i, (29) which is used to define the provisional allocation and provisional prices.",
                "The effect is to endogenously define a schedule for moving from optimistic to pessimistic values across rounds, based on how close the trades are to one another.",
                "Termination Condition.",
                "In moving to the last-and-final round, and finally closing, we also care about the convergence of payments, in addition to the convergence towards an efficient trade.",
                "For this we introduce another parameter, αthresh ∈ [0, 1], that trends from 0 to 1 as the Threshold payments at lower and upper valuations converge.",
                "Consider the following parameter: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive) , (30) which is defined for PP > 0, where pthresh(v) denotes the Threshold payments at valuation profile v, Nactive is the number of bidders that are actively engaged in trade in the PP trade, and || · ||2 is the L2-norm.",
                "Note that γthresh is defined for payments and not payoffs.",
                "This is appropriate because it is the accuracy of the outcome of the exchange that matters: i.e. the trade and the payments.",
                "Given this, we define αthresh =   0 when PP is 0 1/γthresh otherwise (31) which is 0 while PP is 0 and then trends towards 1 as progress is made.",
                "Definition 5 (termination).",
                "ICE transitions to a lastand-final round when one of the following holds: 1. αeff ≥ CUTOFFeff and αthresh ≥ CUTOFFthresh, 2. there is no trade at the optimistic values, where CUTOFFeff , CUTOFFthresh ∈ (0, 1] determine the accuracy required for termination.",
                "At the end of the last-and-final round vα = v is used to define the final trade and the final Threshold payments.",
                "Example 9.",
                "Consider again Example 1, and consider the upper and lower bounds as depicted in Figure 1.",
                "First, if the sellers bounds were [−20, −4] then there is an optimistic trade but no pessimistic trade, and PO = −4 and PP = 0, and αeff = 0.",
                "At the bounds depicted, both the optimistic and the pessimistic trades occur and PO = PP = 4 and αeff = 1.",
                "However, we can see the Threshold payments are (17, −17) at v but (14, −14) at v. Evaluating γthresh , we have γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, and αthresh = 2/5.",
                "For CUTOFFthresh < 2/5 the exchange would remain open.",
                "On the other hand, if the buyers value for +AB was between [18, 24] and the sellers value for −AB was between [−12, −6], the Threshold payments are (15, −15) at both upper and lower bounds, and αthresh = 1. 256 Component Purpose Lines Agent.",
                "Captures strategic behavior and information revelation decisions 762 Model Support Provides XML support to load goods and valuations into world 200 World Keeps track of all agent, good, and valuation details 998 Exchange Driver & Communication Controls exchange, and coordinates remote agent behavior 585 Bidding Language Implements the tree-based bidding language 1119 Activity Rule Engine Implements the revealed preference rule with range support 203 Closing Rule Engine Checks if auction termination condition reached 137 WD Engine Provides WD-related logic 377 Pricing Engine Provides Pricing-related logic 460 MIP Builders Translates logic used by engines into our general optimizer formulation 346 Pricing Builders Used by three pricing stages 256 Winner Determination Builders Used by WD, activity rule, closing rule, and pricing constraint generation 365 Framework Support code; eases modular replacement of above components 510 Table 1: Exchange Component and Code Breakdown. 6.",
                "SYSTEMS INFRASTRUCTURE ICE is approximately 6502 lines of Java code, broken up into the functional packages described in Table 1.10 The prototype is modular so that researchers may easily replace components for experimentation.",
                "In addition to the core exchange discussed in this paper, we have developed an agent component that allows a user to simulate the behavior and knowledge of other players in the system, better allowing a user to formulate their strategy in advance of actual play.",
                "A user specifies a valuation model in an XMLinterpretation of our bidding language, which is revealed to the exchange via the agents strategy.",
                "Major exchange tasks are handled by engines that dictate the non-optimizer specific logic.",
                "These engines drive the appropriate MIP/LP builders.",
                "We realized that all of our optimization formulations boil down to two classes of optimization problem.",
                "The first, used by winner determination, activity rule, closing rule, and constraint generation in pricing, is a MIP that finds trades that maximize value, holding prices and slacks constant.",
                "The second, used by the three pricing stages, is an LP that holds trades constant, seeking to minimize slack, profit, or prices.",
                "We take advantage of the commonality of these problems by using common LP/MIP builders that differ only by a few functional hooks to provide the correct variables for optimization.",
                "We have generalized our back-end optimization solver interface11 (we currently support CPLEX and the LGPL- licensed LPSolve), and can take advantage of the load-balancing and parallel MIP/LP solving capability that this library provides. 7.",
                "DISCUSSION The bidding language was defined to allow for perfect symmetry between buyers and sellers and provide expressiveness in an exchange domain, for instance for mixed bidders interested in executing trades such as swaps.",
                "This proved especially challenging.",
                "The breakthrough came when we focused on changes in value for trades rather than providing absolute values for allocations.",
                "For simplicity, we require the same tree structure for both the upper and lower valuations. 10 Code size is measured in physical source line of code (SLOC), as generated using David A. Wheelers SLOC Count.",
                "The total of 6502 includes 184 for instrumentation (not shown in the table).",
                "The JOpt solver interface is another 1964 lines, and Castor automatically generates around 5200 lines of code for XML file manipulation. 11 http://econcs.eecs.harvard.edu/jopt This allows the language itself to ensure consistency (with the upper value at least the lower value on all trades) and enforce monotonic tightening of these bounds for all trades across rounds.",
                "It also provides for an efficient method to check the RP activity rule, because it makes it simple to reason about shared uncertainty between trades.",
                "The decision to adopt a direct and proxied approach in which bidders express their upper and lower values to a trusted proxy agent that interacts with the exchange was made early in the design process.",
                "In many ways this is the clearest and most immediate way to generalize the design in Parkes et al. [24] and make it iterative.",
                "In addition, this removes much opportunity for strategic manipulation: bidders are restricted to making (incremental) statements about their valuations.",
                "Another advantage is that it makes the activity rule easy to explain: bidders can always meet the activity rule by tightening bounds such that their true value remains in the support.12 Perhaps most importantly, having explicit information on upper and lower values permits progress in early rounds, even while there is no efficient trade at pessimistic values.",
                "Upper and lower bound information also provides guidance about when to terminate.",
                "Note that taken by itself, PP = PO does not imply that the current provisional trade is efficient with respect to all values consistent with current value information.",
                "The difference in values between different trades, aggregated across all bidders, could be similar at lower and upper bounds but quite different at intermediate values (including truth).",
                "Nevertheless, we conjecture that PP = PO will prove an excellent indicator of efficiency in practical settings where the shape of the upper and lower valuations does convey useful information.",
                "This is worthy of experimental investigation.",
                "Moreover, the use of price and RP activity provides additional guarantees.",
                "We adopted linear prices (prices on individual items) rather than non-linear prices (with prices on a trade not equal to the sum of the prices on the component items) early in the design process.",
                "The conciseness of this price representation is very important for computational tractability within the exchange and also to promote simplicity and transparency for bidders.",
                "The RP activity rule was adopted later, and is a good choice because of its excellent theoretical properties when coupled with CE prices.",
                "The following can be easily established: given exact CE prices pt−1 for provisional trade 12 This is in contrast to indirect price-based approaches, such as clock-proxy [1], in which bidders must be able to reason about the RP-constraints implied by bids in each round. 257 λt−1 at valuations vα , then if the upper and lower values at the start of round t already satisfy the RP rule (and without the need for any tie-breaking), the provisional trade is efficient for all valuations consistent with the current bid trees.",
                "When linear CE prices exist, this provides for a soundness and completeness statement: if PP = PO, linear CE prices exist, and the RP rule is satisfied, the provisional trade is efficient (soundness); if prices are exact CE prices for the provisional trade at vα , but the trade is inefficient with respect to some valuation profile consistent with the current bid trees, then at least one bidder must fail RP with her current bid tree and progress will be made (completeness).",
                "Future work must study convergence experimentally, and extend this theory to allow for approximate prices.",
                "Some strategic aspects of our ICE design deserve comment, and further study.",
                "First, we do not claim that truthfully responding to the RP rule is an ex post equilibrium.13 However, the exchange is designed to mimic the Threshold rule in its payment scheme, which is known to have useful incentive properties [16].",
                "We must be careful, though.",
                "For instance we do not suggest to provide αeff to bidders, because as αeff approaches 1 it would inform bidders that bid values are becoming irrelevant to determining the trade but merely used to determine payments (and bidders would become increasingly reluctant to increase their lower valuations).",
                "Also, no consideration has been given in this work to collusion by bidders.",
                "This is an issue that deserves some attention in future work. 8.",
                "CONCLUSIONS In this work we designed and prototyped a scalable and highly-expressive iterative combinatorial exchange.",
                "The design includes many interesting features, including: a new bid-tree language for exchanges, a new method to construct approximate linear prices from expressive languages, and a proxied elicitation method with optimistic and pessimistic valuations with a new method to evaluate a revealed- preference activity rule.",
                "The exchange is fully implemented in Java and is in a validation phase.",
                "The next steps for our work are to allow bidders to refine the structure of the bid tree in addition to values on the tree.",
                "We intend to study the elicitation properties of the exchange and we have put together a test suite of exchange problem instances.",
                "In addition, we are beginning to engage in collaborations to apply the design to airline takeoff and landing slot scheduling and to resource allocation in widearea network distributed computational systems.",
                "Acknowledgments We would like to dedicate this paper to all of the participants in CS 286r at Harvard University in Spring 2004.",
                "This work is supported in part by NSF grant IIS-0238147. 9.",
                "REFERENCES [1] L. Ausubel, P. Cramton, and P. Milgrom.",
                "The clock-proxy auction: A practical combinatorial auction design.",
                "In Cramton et al. [9], chapter 5. [2] M. Babaioff, N. Nisan, and E. Pavlov.",
                "Mechanisms for a spatially distributed market.",
                "In Proc. 5th ACM Conf. on Electronic Commerce, pages 9-20.",
                "ACM Press, 2001. 13 Given the Myerson-Satterthwaite impossibility theorem [22] and the method by which we determine the trade we should not expect this. [3] M. Ball, G. Donohue, and K. Hoffman.",
                "Auctions for the safe, efficient, and equitable allocation of airspace system resources.",
                "In S. Cramton, Shoham, editor, Combinatorial Auctions. 2004.",
                "Forthcoming. [4] D. Bertsimas and J. Tsitsiklis.",
                "Introduction to Linear Optimization.",
                "Athena Scientific, 1997. [5] S. Bikhchandani and J. M. Ostroy.",
                "The package assignment model.",
                "Journal of Economic Theory, 107(2):377-406, 2002. [6] C. Boutilier.",
                "A pomdp formulation of preference elicitation problems.",
                "In Proc. 18th National Conference on Artificial Intelligence (AAAI-02), 2002. [7] C. Boutilier and H. Hoos.",
                "Bidding languages for combinatorial auctions.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), 2001. [8] W. Conen and T. Sandholm.",
                "Preference elicitation in combinatorial auctions.",
                "In Proc. 3rd ACM Conf. on Electronic Commerce (EC-01), pages 256-259.",
                "ACM Press, New York, 2001. [9] P. Cramton, Y. Shoham, and R. Steinberg, editors.",
                "Combinatorial Auctions.",
                "MIT Press, 2004. [10] S. de Vries, J. Schummer, and R. V. Vohra.",
                "On ascending Vickrey auctions for heterogeneous objects.",
                "Technical report, MEDS, Kellogg School, Northwestern University, 2003. [11] S. de Vries and R. V. Vohra.",
                "Combinatorial auctions: A survey.",
                "Informs Journal on Computing, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana, and T. Wilson.",
                "Testing linear pricing algorithms for use in ascending combinatorial auctions.",
                "Technical report, SEOR, George Mason University, 2003. [13] Y. Fu, J.",
                "Chase, B. Chun, S. Schwab, and A. Vahdat.",
                "Sharp: an architecture for secure resource peering.",
                "In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 133-148.",
                "ACM Press, 2003. [14] B. Hudson and T. Sandholm.",
                "Effectiveness of query types and policies for preference elicitation in combinatorial auctions.",
                "In Proc. 3rd Int.",
                "Joint.",
                "Conf. on Autonomous Agents and Multi Agent Systems, pages 386-393, 2004. [15] V. Krishna.",
                "Auction Theory.",
                "Academic Press, 2002. [16] D. Krych.",
                "Calculation and analysis of Nash equilibria of Vickrey-based payment rules for combinatorial exchanges, Harvard College, April 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter, and C. DeMartini.",
                "A new and improved design for multi-object iterative auctions.",
                "Management Science, 2004.",
                "To appear. [18] E. Kwerel and J. Williams.",
                "A proposal for a rapid transition to market allocation of spectrum.",
                "Technical report, FCC Office of Plans and Policy, Nov 2002. [19] S. M. Lahaie and D. C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In Proc.",
                "ACM Conf. on Electronic Commerce, pages 180-188, 2004. [20] R. P. McAfee.",
                "A dominant strategy double auction.",
                "J. of Economic Theory, 56:434-450, 1992. [21] P. Milgrom.",
                "Putting auction theory to work: The simultaneous ascending auction.",
                "J.Pol.",
                "Econ., 108:245-272, 2000. [22] R. B. Myerson and M. A. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [23] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. 2nd ACM Conf. on Electronic Commerce (EC-00), pages 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), pages 1161-1168, 2001. [25] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, July 2000. [26] S. J. Rassenti, V. L. Smith, and R. L. Bulfin.",
                "A combinatorial mechanism for airport time slot allocation.",
                "Bell Journal of Economics, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc, and R. M. Harstad.",
                "Computationally manageable combinatorial auctions.",
                "Management Science, 44(8):1131-1147, 1998. [28] T. Sandholm and C. Boutilier.",
                "Preference elicitation in combinatorial auctions.",
                "In Cramton et al. [9], chapter 10. [29] P. R. Wurman and M. P. Wellman.",
                "AkBA: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, pages 21-29, 2000. 258"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La regla del \"pago umbral\", introducida por Parkes et al.[24], se usa para determinar los pagos finales.",
                "Si bien no podemos afirmar que la licitación sencilla es un equilibrio del intercambio (y de hecho, no deberían esperar por el teorema de imposibilidad de Myerson-Satterthwaite [22]), la regla de \"pago umbral\" minimiza el incentivo ex post para manipular todo el presupuesto.Reglas de pago equilibradas.",
                "Los pagos se calculan utilizando la regla de \"pago umbral\" [24], con las valoraciones intermedias adoptadas en rondas tempranas y valores más bajos adoptados en la terminación.• Comentarios de precios.",
                "Parkes et al.[24] estudiaron intercambios combinatorios de licitación sellada e introdujo la regla de \"pago umbral\".",
                "Estos elementos se pueden volver a los agentes que vendieron los artículos, es decir, para los cuales λij <0. 4.3 Pagos de umbral informático La regla de \"pago de umbral\" se basa en los pagos en el mecanismo de Groves Vickrey-Clarke (VCG) [15],que en sí mismo es sincero y eficiente, pero no satisface el equilibrio presupuestario.",
                "La regla de \"pago umbral\" [24] determina los pagos con balanza de presupuesto para minimizar el error máximo en todos los agentes al resultado de VCG.",
                "El esquema de \"pago de umbral\" implementa el comercio eficiente λ ∗ dadas ofertas y establece pagos pthresh, i = ˆvi (λ ∗ i) - ∆i, donde ∆ = (∆1, ..., ∆n) se establece para minimizarMaxi (∆VCG, I-∆I) sujeto a ∆I ≤ ∆VCG, I e I ∆I ≤ V ∗ (esto da el equilibrio del presupuesto).",
                "El objetivo aquí es el mismo que en la regla de \"pago umbral\" (ver Sección 4.3): minimice el error máximo entre el pago del postor (en Vα) para el comercio provisional y el pago de VCG (en Vα)."
            ],
            "translated_text": "",
            "candidates": [
                "pago umbral",
                "pago umbral",
                "pago umbral",
                "pago umbral",
                "pago umbral",
                "pago umbral",
                "pago umbral",
                "pago umbral",
                "pago umbral",
                "pago de umbral",
                "pago umbral",
                "pago umbral",
                "pago umbral",
                "pago de umbral",
                "pago umbral",
                "pago umbral"
            ],
            "error": []
        },
        "combinatorial exchange": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "ICE: An Iterative <br>combinatorial exchange</br> David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an iterative <br>combinatorial exchange</br> (ICE).",
                "The exchange incorporates a tree-based bidding language that is concise and expressive for CEs.",
                "Bidders specify lower and upper bounds on their value for different trades.",
                "These bounds allow price discovery and useful preference elicitation in early rounds, and allow termination with an efficient trade despite partial information on bidder valuations.",
                "All computation in the exchange is carefully optimized to exploit the structure of the bid-trees and to avoid enumerating trades.",
                "A proxied interpretation of a revealedpreference activity rule ensures progress across rounds.",
                "A VCG-based payment scheme that has been shown to mitigate opportunities for bargaining and strategic behavior is used to determine final payments.",
                "The exchange is fully implemented and in a validation phase.",
                "Categories and Subject Descriptors: I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Combinatorial exchanges combine and generalize two different mechanisms: double auctions and combinatorial auctions.",
                "In a double auction (DA), multiple buyers and sellers trade units of an identical good [20].",
                "In a combinatorial auction (CA), a single seller has multiple heterogeneous items up for sale [11].",
                "Buyers may have complementarities or substitutabilities between goods, and are provided with an expressive bidding language.",
                "A common goal in both market designs is to determine the efficient allocation, which is the allocation that maximizes total value.",
                "A <br>combinatorial exchange</br> (CE) [24] is a combinatorial double auction that brings together multiple buyers and sellers to trade multiple heterogeneous goods.",
                "For example, in an exchange for wireless spectrum, a bidder may declare that she is willing to pay $1 million for a trade where she obtains licenses for New York City, Boston, and Philadelphia, and loses her license for Washington DC.",
                "Thus, unlike a DA, a CE allows all participants to express complex valuations via expressive bids.",
                "Unlike a CA, a CE allows for fragmented ownership, with multiple buyers and sellers and agents that are both buying and selling.",
                "CEs have received recent attention both in the context of wireless spectrum allocation [18] and for airport takeoff and landing slot allocation [3].",
                "In both of these domains there are incumbents with property rights, and it is important to facilitate a complex multi-way reallocation of resources.",
                "Another potential application domain for CEs is to resource allocation in shared distributed systems, such as PlanetLab [13].",
                "The instantiation of our general purpose design to specific domains is a compelling next step in our research.",
                "This paper presents the first design for an iterative <br>combinatorial exchange</br> (ICE).",
                "The genesis of this project was a class, CS 286r Topics at the Interface between Economics and Computer Science, taught at Harvard University in Spring 2004.1 The entire class was dedicated to the design and prototyping of an iterative CE.",
                "The ICE design problem is multi-faceted and quite hard.",
                "The main innovation in our design is an expressive yet concise tree-based bidding language (which generalizes known languages such as XOR/OR [23]), and the tight coupling of this language with efficient algorithms for price-feedback to guide bidding, winner-determination to determine trades, and revealed-preference activity rules to ensure progress across rounds.",
                "The exchange is iterative: bidders express upper and lower valuations on trades by annotating their bid-tree, and then tighten these bounds in response to price feedback in each round.",
                "The Threshold payment rule, introduced by Parkes et al. [24], is used to determine final payments.",
                "The exchange has a number of interesting theoretical properties.",
                "For instance, when there exist linear prices we establish soundness and completeness: for straightforward bidders that adjust their bounds to meet activity rules while keeping their true value within the bounds, the exchange will terminate with the efficient allocation.",
                "In addition, the 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Truth Agent Act Rule WD ACC FAIR BALClosing RuleVickreyThreshold DONE !",
                "DONE 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER 2,2 +A +15 +8 +B +15 +8 BUYER 2,2 -A -2 -6 -B -2 -6 SELLER BUYER, buy AB SELLER, sell AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PBUYER = 16 - (4-0) = 12 PSELLER = -12 - (4-0) = -16 PBUYER = 14 PSELLER = -14 Pessim istic O ptim istic = 1 Figure 1: ICE System Flow of Control efficient allocation can often be determined without bidders revealing, or even knowing, their exact value for all trades.",
                "This is essential in complex domains where the valuation problem can itself be very challenging for a participant [28].",
                "While we cannot claim that straightforward bidding is an equilibrium of the exchange (and indeed, should not expect to by the Myerson-Satterthwaite impossibility theorem [22]), the Threshold payment rule minimizes the ex post incentive to manipulate across all budget-balanced payment rules.",
                "The exchange is implemented in Java and is currently in validation.",
                "In describing the exchange we will first provide an overview of the main components and introduce several working examples.",
                "Then, we introduce the basic components for a simple one-shot variation in which bidders state their exact values for trades in a single round.",
                "We then describe the full iterative exchange, with upper and lower values, price-feedback, activity rules, and termination conditions.",
                "We state some theoretical properties of the exchange, and end with a discussion to motivate our main design decisions, and suggest some next steps. 2.",
                "AN OVERVIEW OF THE ICE DESIGN The design has four main components, which we will introduce in order through the rest of the paper: • Expressive and concise tree-based bidding language.",
                "The language describes values for trades, such as my value for selling AB and buying C is $100, or my value for selling ABC is -$50, with negative values indicating that a bidder must receive a payment for the trade to be acceptable.",
                "The language allows bidders to express upper and lower bounds on value, which can be tightened across rounds. • Winner Determination.",
                "Winner-determination (WD) is formulated as a mixed-integer program (MIP), with the structure of the bid-trees captured explicitly in the formulation.",
                "Comparing the solution at upper and lower values allows for a determination to be made about termination, with progress in intermediate rounds driven by an intermediate valuation and the lower values adopted on termination. • Payments.",
                "Payments are computed using the Threshold payment rule [24], with the intermediate valuations adopted in early rounds and lower values adopted on termination. • Price feedback.",
                "An approximate price is computed for each item in the exchange in each round, in terms of the intermediate valuations and the provisional trade.",
                "The prices are optimized to approximate competitive equilibrium prices, and further optimized to best approximate the current Threshold payments with remaining ties broken to favor prices that are balanced across different items.",
                "In computing the prices, we adopt the methods of constraint-generation to exploit the structure of the bidding language and avoid enumerating all feasible trades.",
                "The subproblem to generate new constraints is a variation of the WD problem. • Activity rule.",
                "A revealed-preference activity rule [1] ensures progress across rounds.",
                "In order to remain active, a bidder must tighten bounds so that there is enough information to define a trade that maximizes surplus at the current prices.",
                "Another variation on the WD problem is formulated, both to verify that the activity rule is met and also to provide feedback to a bidder to explain how to meet the rule.",
                "An outline of the ICE system flow of control is provided in Figure 1.",
                "We will return to this example later in the paper.",
                "For now, just observe in this two-agent example that the agents state lower and upper bounds that are checked in the activity rule, and then passed to winner-determination (WD), and then through three stages of pricing (accuracy, fairness, balance).",
                "On passing the closing rule (in which parameters αeff and αthresh are checked for convergence of the trade and payments), the exchange goes to a last-and-final round.",
                "At the end of this round, the trade and payments are finally determined, based on the lower valuations. 2.1 Related Work Many ascending-price one-sided CAs are known in the literature [10, 25, 29].",
                "Direct elicitation approaches have also been proposed for one-sided CAs in which agents respond to explicit queries about their valuations [8, 14, 19].",
                "A number of ascending CAs are designed to work with simple prices on items [12, 17].",
                "The price generation methods that we use in ICE generalize the methods in these earlier papers.",
                "Parkes et al. [24] studied sealed-bid combinatorial exchanges and introduced the Threshold payment rule.",
                "Subsequently, Krych [16] demonstrated experimentally that the Threshold rule promotes efficient allocations.",
                "We are not aware of any previous studies of iterative CEs.",
                "Dominant strategy DAs are known for unit demand [20] and also for single-minded agents [2].",
                "No dominant strategy mechanisms are known for the general CE problem.",
                "ICE is a hybrid auction design, in that it couples simple item prices to drive bidding in early rounds with combinatorial WD and payments, a feature it shares with the clock-proxy design of Ausubel et al. [1] for one-sided CAs.",
                "We adopt a variation on the clock-proxy auctionss revealedpreference activity rule.",
                "The bidding language shares some structural elements with the LGB language of Boutilier and Hoos [7], but has very different semantics.",
                "Rothkopf et al. [27] also describe a restricted tree-based bidding language.",
                "In LGB, the semantics are those of propositional logic, with the same items in an allocation able to satisfy a tree in multiple places.",
                "Although this can make LGB especially concise in some settings, the semantics that we propose appear to provide useful locality, so that the value of one component in a tree can be understood independently from the rest of the tree.",
                "The idea of capturing the structure of our bidding language explicitly within a mixed-integer programming formulation follows the developments in Boutilier [6]. 3.",
                "PRELIMINARIES In our model, we consider a set of goods, indexed {1, . . . , m} and a set of bidders, indexed {1, . . . , n}.",
                "The initial allocation of goods is denoted x0 = (x0 1, . . . , x0 n), with x0 i = (x0 i1, . . . , x0 im) and x0 ij ≥ 0 for good j indicating the number 250 of units of good j held by bidder i.",
                "A trade λ = (λ1, . . . , λn) denotes the change in allocation, with λi = (λi1, . . . , λim) where λij ∈   is the change in the number of units of item j to bidder i.",
                "So, the final allocation is x1 = x0 + λ.",
                "Each bidder has a value vi(λi) ∈ ¡ for a trade λi.",
                "This value can be positive or negative, and represents the change in value between the final allocation x0 i +λi and the initial allocation x0 i .",
                "Utility is quasi-linear, with ui(λi, p) = vi(λi)−p for trade λi and payment p ∈ ¡ .",
                "Price p can be negative, indicating the bidder receives a payment for the trade.",
                "We use the term payoff interchangeably with utility.",
                "Our goal in the ICE design is to implement the efficient trade.",
                "The efficient trade, λ∗ , maximizes the total increase in value across bidders.",
                "Definition 1 (Efficient trade).",
                "The efficient trade λ∗ solves max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Constraints (1) ensure that no agent sells more items than it has in its initial allocation.",
                "Constraints (2) provide free disposal, and allows feasible trades to sell more items than are purchased (but not vice versa).",
                "Later, we adopt Feas(x0 ) to denote the set of feasible trades, given these constraints and given an initial allocation x0 = (x0 1, . . . , x0 n). 3.1 Working Examples In this section, we provide three simple examples of instances that we will use to illustrate various components of the exchange.",
                "All three examples have only one seller, but this is purely illustrative.",
                "Example 1.",
                "One seller and one buyer, two goods {A, B}, with the seller having an initial allocation of AB.",
                "Changes in values for trades: seller buyer AND(−A, −B) AND(+A, +B) -10 +20 The AND indicates that both the buyer and the seller are only interested in trading both goods as a bundle.",
                "Here, the efficient (value-maximizing) trade is for the seller to sell AB to the buyer, denoted λ∗ = ([−1, −1], [+1, +1]).",
                "Example 2.",
                "One seller and four buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 buyer 3 buyer 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 The OR indicates that the seller is willing to sell any number of goods.",
                "The XOR indicates that buyers 2 and 4 are willing to buy at most one of the two goods in which they are interested.",
                "The efficient trade is for bundle AB to go to buyer 1 and bundle CD to buyer 3, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER Example 1: Example 3: 2,2 +C +D BUYER 2 2,2 +A +B BUYER 1 +11 +84,4 -B SELLER -A -C -D Example 2: 1,1 +A +B BUYER 2 2,2 +A +B BUYER 1 +6 +40,4 -B SELLER -C -D-A 1,1 +C +D BUYER 4 2,2 +C +D +3 +2 BUYER 3 -18 Figure 2: Example Bid Trees.",
                "Example 3.",
                "One seller and two buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 AND(−A, −B, −C, −D) AND(+A, +B) AND(+C, +D) -18 +11 +8 The efficient trade is for bundle AB to go to buyer 1 and bundle CD to go to buyer 2, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4.",
                "A ONE-SHOT EXCHANGE DESIGN The description of ICE is broken down into two sections: one-shot (sealed-bid) and iterative.",
                "In this section we abstract away the iterative aspect and introduce a specialization of the tree-based language that supports only exact values on nodes. 4.1 Tree-Based Bidding Language The bidding language is designed to be expressive and concise, entirely symmetric with respect to buyers and sellers, and to extend to capture bids from mixed buyers and sellers, ranging from simple swaps to highly complex trades.",
                "Bids are expressed as annotated bid trees, and define a bidders value for all possible trades.",
                "The language defines changes in values on trades, with leaves annotated with traded items and nodes annotated with changes in values (either positive or negative).",
                "The main feature is that it has a general interval-choose logical operator on internal nodes, and that it defines careful semantics for propagating values within the tree.",
                "We illustrate the language on each of Examples 1-3 in Figure 2.",
                "The language has a tree structure, with trades on items defined on leaves and values annotated on nodes and leaves.",
                "The nodes have zero values where no value is indicated.",
                "Internal nodes are also labeled with interval-choose (IC) ranges.",
                "Given a trade, the semantics of the language define which nodes in the tree can be satisfied, or switched-on.",
                "First, if a child is on then its parent must be on.",
                "Second, if a parent node is on, then the number of children that are on must be within the IC range on the parent node.",
                "Finally, leaves in which the bidder is buying items can only be on if the items are provided in the trade.",
                "For instance, in Example 2 we can consider the efficient trade, and observe that in this trade all nodes in the trees of buyers 1 and 3 (and also the seller), but none of the nodes in the trees of buyers 2 and 4, can be on.",
                "On the other hand, in 251 the trade in which A goes to buyer 2 and D to buyer 4, then the root and appropriate leaf nodes can be on for buyers 2 and 4, but no nodes can be on for buyers 1 and 3.",
                "Given a trade there is often a number of ways to choose the set of satisfied nodes.",
                "The semantics of the language require that the nodes that maximize the summed value across satisfied nodes be activated.",
                "Consider bid tree Ti from bidder i.",
                "This defines nodes β ∈ Ti, of which some are leaves, Leaf (i) ⊆ Ti.",
                "Let Child(β) ⊆ Ti denote the children of a node β (that is not itself a leaf).",
                "All nodes except leaves are labeled with the interval-choose operator [IC x i (β), ICy i (β)].",
                "Every node is also labeled with a value, viβ ∈ ¡ .",
                "Each leaf β is labeled with a trade, qiβ ∈   m (i.e., leaves can define a bundled trade on more than one type of item.)",
                "Given a trade λi to bidder i, the interval-choose operators and trades on leaves define which nodes can be satisfied.",
                "There will often be a choice.",
                "Ties are broken to maximize value.",
                "Let satiβ ∈ {0, 1} denote whether node β is satisfied.",
                "Solution sati is valid given tree Ti and trade λi, written sati ∈ valid(Ti, λi), if and only if: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Child(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Leaf (i) (5) In words, a set of leaves can only be considered satisfied given trade λi if the total increase in quantity summed across all such leaves is covered by the trade, for all goods (Eq. 4).",
                "This works for sellers as well as buyers: for sellers a trade is negative and this requires that the total number of items indicated sold in the tree is at least the total number sold as defined in the trade.",
                "We also need upwards-propagation: any time a node other than the root is satisfied then its parent must be satisfied (by   β ∈Child(β) satiβ ≤ ICy i (β)satiβ in Eq. 5).",
                "Finally, we need downwards-propagation: any time an internal node is satisfied then the appropriate number of children must also be satisfied (Eq. 5).",
                "The total value of trade λi, given bid-tree Ti, is defined as: vi(Ti, λi) = max sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) The tree-based language generalizes existing languages.",
                "For instance: IC(2, 2) on a node with 2 children is equivalent to an AND operator; IC(1, 3) on a node with 3 children is equivalent to an OR operator; and IC(1, 1) on a node with 2 children is equivalent to an XOR operator.",
                "Similarly, the XOR/OR bidding languages can be directly expressed as a bid tree in our language.2 4.2 Winner Determination This section defines the winner determination problem, which is formulated as a MIP and solved in our implementation with a commercial solver.3 The solver uses branchand-bound search with dynamic cut generation and branching heuristics to solve large MIPs in economically feasible run times. 2 The OR* language is the OR language with dummy items to provide additional structure.",
                "OR* is known to be expressive and concise.",
                "However, it is not known whether OR* dominates XOR/OR in terms of conciseness [23]. 3 CPLEX, www.ilog.com In defining the MIP representation we are careful to avoid an XOR-based enumeration of all bundles.",
                "A variation on the WD problem is reused many times within the exchange, e.g. for column generation in pricing and for checking revealed preference.",
                "Given bid trees T = (T1, . . . , Tn) and initial allocation x0 , the mixed-integer formulation for WD is: WD(T, x0 ) : max λ,sat ¢ i ¢ β∈Ti viβ · satiβ s.t. (1), (2), satiβ ∈ {0, 1}, λij ∈   sati ∈ valid(Ti, λi), ∀i Some goods may go unassigned because free disposal is allowed within the clearing rules of winner determination.",
                "These items can be allocated back to agents that sold the items, i.e. for which λij < 0. 4.3 Computing Threshold Payments The Threshold payment rule is based on the payments in the Vickrey-Clarke-Groves (VCG) mechanism [15], which itself is truthful and efficient but does not satisfy budget balance.",
                "Budget-balance requires that the total payments to the exchange are equal to the total payments made by the exchange.",
                "In VCG, the payment paid by agent i is pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) where λ∗ is the efficient trade, V ∗ is the reported value of this trade, and V−i is the reported value of the efficient trade that would be implemented without bidder i.",
                "We call ∆vcg,i = V ∗ − V−i the VCG discount.",
                "For instance, in Example 1 pvcg,seller = −10 − (+10 − 0) = −20 and pvcg,buyer = +20 − (+10 − 0) = 10, and the exchange would run at a budget deficit of −20 + 10 = −10.",
                "The Threshold payment rule [24] determines budgetbalanced payments to minimize the maximal error across all agents to the VCG outcome.",
                "Definition 2.",
                "The Threshold payment scheme implements the efficient trade λ∗ given bids, and sets payments pthresh,i = ˆvi(λ∗ i ) − ∆i, where ∆ = (∆1, . . . , ∆n) is set to minimize maxi(∆vcg,i − ∆i) subject to ∆i ≤ ∆vcg,i and   i ∆i ≤ V ∗ (this gives budget-balance).",
                "Example 4.",
                "In Example 2, the VCG discounts are (9, 2, 0, 1, 0) to the seller and four buyers respectively, VCG payments are (−9, 4, 0, 2, 0) and the exchange runs at a deficit of -3.",
                "In Threshold, the discounts are (8, 1, 0, 0, 0) and the payments are (−8, 5, 0, 3, 0).",
                "This minimizes the worst-case error to VCG discounts across all budget-balanced payment schemes.",
                "Threshold payments are designed to minimize the maximal ex post incentive to manipulate.",
                "Krych [16] confirmed that Threshold promotes allocative efficiency in restricted and approximate Bayes-Nash equilibrium. 5.",
                "THE ICE DESIGN We are now ready to introduce the iterative <br>combinatorial exchange</br> (ICE) design.",
                "Several new components are introduced, relative to the design for the one-shot exchange.",
                "Rather than provide precise valuations, bidders can provide lower and upper valuations and revise this bid information across rounds.",
                "The exchange provides price-based feedback 252 to guide bidders in this process, and terminates with an efficient (or approximately-efficient) trade with respect to reported valuations.",
                "In each round t ∈ {0, 1, . . .} the current lower and upper bounds, vt and vt , are used to define a provisional valuation profile vα (the α-valuation), together with a provisional trade λt and provisional prices pt = (pt 1, . . . , pt m) on items.",
                "The α-valuation is a linear combination of the current upper and lower valuations, with αEFF ∈ [0, 1] chosen endogenously based on the closeness of the optimistic trade (at v) and the pessimistic trade (at v).",
                "Prices pt are used to inform an activity rule, and drive progress towards an efficient trade. 5.1 Upper and Lower Valuations The bidding language is extended to allow a bidder i to report a lower and upper value (viβ, viβ) on each node.",
                "These take the place of the exact value viβ defined in Section 4.1.",
                "Based on these labels, we can define the valuation functions vi(Ti, λi) and vi(Ti, λi), using the exact same semantics as in Eq. (6).",
                "We say that such a bid-tree is well-formed if viβ ≤ viβ for all nodes.",
                "The following lemma is useful: Lemma 1.",
                "Given a well-formed tree, T, then vi(Ti, λi) ≤ vi(Ti, λi) for all trades.",
                "Proof.",
                "Suppose there is some λi for which vi(Ti, λi) > vi(Ti, λi).",
                "Then, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ.",
                "But, this is a contradiction because the trade λ that defines vi(Ti, λi) is still feasible with upper bounds vi, and viβ ≥ viβ for all nodes β in a well-formed tree. 5.2 Price Feedback In each round, approximate competitive-equilibrium (CE) prices, pt = (pt 1, . . . , pt m), are determined.",
                "Given these provisional prices, the price on trade λi for bidder i is pt (λi) =   j≤m pt j · λij.",
                "Definition 3 (CE prices).",
                "Prices p∗ are competitive equilibrium prices if the efficient trade λ∗ is supported at prices p∗ , so that for each bidder: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) CE prices will not always exist and we will often need to compute approximate prices [5].",
                "We extend ideas due to Rassenti et al. [26], Kwasnica et al. [17] and Dunford et al. [12], and select approximate prices as follows: I: Accuracy.",
                "First, we compute prices that minimize the maximal error in the best-response constraints across all bidders.",
                "II: Fairness.",
                "Second, we break ties to prefer prices that minimize the maximal deviation from Threshold payments across all bidders.",
                "III: Balance.",
                "Third, we break ties to prefer prices that minimize the maximal price across all items.",
                "Taken together, these steps are designed to promote the informativeness of the prices in driving progress across rounds.",
                "In computing prices, we explain how to compute approximate (or otherwise) prices for structured bidding languages, and without enumerating all possible trades.",
                "For this, we adopt constraint generation to efficient handle an exponential number of constraints.",
                "Each step is described in detail below.",
                "I: Accuracy.",
                "We adopt a definition of price accuracy that generalizes the notions adopted in previous papers for unstructured bidding languages.",
                "Let λt denote the current provisional trade and suppose the provisional valuation is vα .",
                "To compute accurate CE prices, we consider: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j.",
                "This linear program (LP) is designed to find prices that minimize the worst-case error across all agents.",
                "From the definition of CE prices, it follows that CE prices would have δ = 0 as a solution to (9), at which point trade λt i would be in the best-response set of every agent (with λt i = ∅, i.e. no trade, for all agents with no surplus for trade at the prices.)",
                "Example 5.",
                "We can illustrate the formulation (9) on Example 2, assuming for simplicity that vα = v (i.e. truth).",
                "The efficient trade allocates AB to buyer 1 and CD to buyer 3.",
                "Accuracy will seek prices p(A), p(B), p(C) and p(D) to minimize the δ ≥ 0 required to satisfy constraints: p(A) + p(B) + p(C) + p(D) ≥ 0 (seller) p(A) + p(B) ≤ 6 + δ (buyer 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (buyer 2) p(C) + p(D) ≤ 3 (buyer 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (buyer 4) An optimal solution requires p(A) = p(B) = 10/3, with δ = 2/3, with p(C) and p(D) taking values such as p(C) = p(D) = 3/2.",
                "But, (9) has an exponential number of constraints (Eq. 10).",
                "Rather than solve it explicitly we use constraint generation [4] and dynamically generate a sufficient subset of constraints.",
                "Let   i denote a manageable subset of all possible feasible trades to bidder i.",
                "Then, a relaxed version of (9) (written ACC) is formulated by substituting (10) with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) where   i is a set of trades that are feasible for bidder i given the other bids.",
                "Fixing the prices p∗ , we then solve n subproblems (one for each bidder), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0 ), (12) to check whether solution (p∗ , δ∗ ) to ACC is feasible in problem (9).",
                "In R-WD(i) the objective is to determine a most preferred trade for each bidder at these prices.",
                "Let ˆλi denote the solution to R-WD(i).",
                "Check condition: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) and if this condition holds for all bidders i, then solution (p∗ , δ∗ ) is optimal for problem (9).",
                "Otherwise, trade ˆλi is added to   i for all bidders i for which this constraint is 253 violated and we re-solve the LP with the new set of constraints.4 II: Fairness.",
                "Second, we break remaining ties to prefer fair prices: choosing prices that minimize the worst-case error with respect to Threshold payoffs (i.e. utility to bidders with Threshold payments), but without choosing prices that are less accurate.5 Example 6.",
                "For example, accuracy in Example 1 (depicted in Figure 1) requires 12 ≤ pA +pB ≤ 16 (for vα = v).",
                "At these valuations the Threshold payoffs would be 2 to both the seller and the buyer.",
                "This can be exactly achieved in pricing with pA + pB = 14.",
                "The fairness tie-breaking method is formulated as the following LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution, from ACC.",
                "The objective here is the same as in the Threshold payment rule (see Section 4.3): minimize the maximal error between bidder payoff (at vα ) for the provisional trade and the VCG payoff (at vα ).",
                "Problem FAIR is also solved through constraint generation, using R-WD(i) to add additional violated constraints as necessary.",
                "III: Balance.",
                "Third, we break remaining ties to prefer balanced prices: choosing prices that minimize the maximal price across all items.",
                "Returning again to Example 1, depicted in Figure 1, we see that accuracy and fairness require p(A) + p(B) = 14.",
                "Finally, balance sets p(A) = p(B) = 7.",
                "Balance is justified when, all else being equal, items are more likely to have similar than dissimilar values.6 The LP for balance is formulated as follows: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution from ACC and π∗ represents the error in the optimal solution from FAIR.",
                "Constraint generation is also used to solve BAL, generating new trades for   i as necessary. 4 Problem R-WD(i) is a specialization of the WD problem, in which the objective is to maximize the payoff of a single bidder, rather than the total value across all bidders.",
                "It is solved as a MIP, by rewriting the objective in WD(T, x0 ) as max{viβ · satiβ −   j p∗ j · λij } for agent i.",
                "Thus, the structure of the bid-tree language is exploited in generating new constraints, because this is solved as a concise MIP.",
                "The other bidders are kept around in the MIP (but do not appear in the objective), and are used to define the space of feasible trades. 5 The methods of Dunford et al. [12], that use a nucleolus approach, are also closely related. 6 The use of balance was advocated by Kwasnica et al. [17].",
                "Dunford et al. [12] prefer to smooth prices across rounds.",
                "Comment 1: Lexicographical Refinement.",
                "For all three sub-problems we also perform lexicographical refinement (with respect to bidders in ACC and FAIR, and with respect to goods in BAL).",
                "For instance, in ACC we successively minimize the maximal error across all bidders.",
                "Given an initial solution we first pin down the error on all bidders for whom a constraint (11) is binding.",
                "For such a bidder i, the constraint is replaced with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) and the error to bidder i no longer appears explicitly in the objective.",
                "ACC is then re-solved, and makes progress by further minimizing the maximal error across all bidders yet to be pinned down.",
                "This continues, pinning down any new bidders for whom one of constraints (11) is binding, until the error is lexicographically optimized for all bidders.7 The exact same process is repeated for FAIR and BAL, with bidders pinned down and constraints (15) replaced with π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (where π∗ i is the current objective) in FAIR, and items pinned down and constraints (18) replaced with p∗ j ≥ pj (where p∗ j represents the target for the maximal price on that item) in BAL.",
                "Comment 2: Computation.",
                "All constraints in   i are retained, and this set grows across all stages and across all rounds of the exchange.",
                "Thus, the computational effort in constraint generation is re-used.",
                "In implementation we are careful to address a number of -issues that arise due to floating-point issues.",
                "We prefer to err on the side of being conservative in determining whether or not to add another constraint in performing check (13).",
                "This avoids later infeasibility issues.",
                "In addition, when pinning-down bidders for the purpose of lexicographical refinement we relax the associated bidder-constraints with a small > 0 on the righthand side. 5.3 Revealed-Preference Activity Rules The role of activity rules in the auction is to ensure both consistency and progress across rounds [21].",
                "Consistency in our exchange requires that bidders tighten bounds as the exchange progresses.",
                "Activity rules ensure that bidders are active during early rounds, and promote useful elicitation throughout the exchange.",
                "We adopt a simple revealed-preference (RP) activity rule.",
                "The idea is loosely based around the RP-rule in Ausubel et al. [1], where it is used for one-sided CAs.",
                "The motivation is to require more than simply consistency: we need bidders to provide enough information for the system to be able to to prove that an allocation is (approximately) efficient.",
                "It is helpful to think about the bidders interacting with proxy agents that will act on their behalf in responding to provisional prices pt−1 determined at the end of round t − 1.",
                "The only knowledge that such a proxy has of the valuation of a bidder is through the bid-tree.",
                "Suppose a proxy was queried by the exchange and asked which trade the bidder was most interested in at the provisional prices.",
                "The RP rule says the following: the proxy must have enough 7 For example, applying this to accuracy on Example 2 we solve once and find bidders 1 and 2 are binding, for error δ∗ = 2/3.",
                "We pin these down and then minimize the error to bidders 3 and 4.",
                "Finally, this gives p(A) = p(B) = 10/3 and p(C) = p(D) = 5/3, with accuracy 2/3 to bidders 1 and 2 and 1/3 to bidders 3 and 4. 254 information to be able to determine this surplus-maximizing trade at current prices.",
                "Consider the following examples: Example 7.",
                "A bidder has XOR(+A, +B) and a value of +5 on the leaf +A and a value range of [5,10] on leaf +B.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the proxy knows that however the remaining value uncertainty on +B is resolved the bidder will always (weakly) prefer +B to +A.",
                "Example 8.",
                "A bidder has XOR(+A, +B) and value bounds [5, 10] on the root node and a value of 1 on leaf +A.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the bidder will always prefer +A to +B at equal prices, whichever way the uncertain value on the root node is ultimately resolved.",
                "Overloading notation, let vi ∈ Ti denote a valuation that is consistent with lower and upper valuations in bid tree Ti.",
                "Definition 4.",
                "Bid tree Ti satisfies RP at prices pt−1 if and only if there exists some feasible trade L∗ for which, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. (20) To make this determination for bidder i we solve a sequence of problems, each of which is a variation on the WD problem.",
                "First, we construct a candidate lower-bound trade, which is a feasible trade that solves: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) The solution π∗ l to RP1(i) represents the maximal payoff that bidder i can achieve across all feasible trades, given its pessimistic valuation.",
                "Second, we break ties to find a trade with maximal value uncertainty across all possible solutions to RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] s.t. λ ∈ Feas(x0 ) (22) vi(λi) − pt−1 (λi) ≥ π∗ l (23) We adopt solution L∗ i as our candidate for the trade that may satisfy RP.",
                "To understand the importance of this tiebreaking rule consider Example 7.",
                "The proxy can prove +B but not +A is a best-response for all vi ∈ Ti, and should choose +B as its candidate.",
                "Notice that +B is a counterexample to +A, but not the other way round.",
                "Now, we construct a modified valuation ˜vi, by setting ˜viβ =   viβ , if β ∈ sat(L∗ i ) viβ , otherwise. (24) where sat(L∗ i ) is the set of nodes that are satisfied in the lower-bound tree for trade L∗ i .",
                "Given this modified valuation, we find U∗ to solve: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Let π∗ u denote the payoff from this optimal trade at modified values ˜v.",
                "We call trade U∗ i the witness trade.",
                "We show in Proposition 1 that the RP rule is satisfied if and only if π∗ l ≥ π∗ u. Constructing the modified valuation as ˜vi recognizes that there is shared uncertainty across trades that satisfy the same nodes in a bid tree.",
                "Example 8 helps to illustrate this.",
                "Just using vi in RP3(i), we would find L∗ i is buy A with payoff π∗ l = 3 but then find U∗ i is buy B with π∗ u = 7 and fail RP.",
                "We must recognize that however the uncertainty on the root node is resolved it will affect +A and +B in exactly the same way.",
                "For this reason, we set ˜viβ = viβ = 5 on the root node, which is exactly the same value that was adopted in determining π∗ l .",
                "Then, RP3(i) applied to U∗ i gives buy A and the RP test is judged to be passed.",
                "Proposition 1.",
                "Bid tree Ti satisfies RP given prices pt−1 if and only if any lower-bound trade L∗ i that solves RP1(i) and RP2(i) satisfies: vi(Ti, L∗ i ) − pt−1 (L∗ i ) ≥ ˜vi(Ti, U∗ i ) − pt−1 (U∗ i ), (26) where ˜vi is the modified valuation in Eq. (24).",
                "Proof.",
                "For sufficiency, notice that the difference in payoff between trade L∗ i and another trade λi is unaffected by the way uncertainty is resolved on any node that is satisfied in both L∗ i and λi.",
                "Fixing the values in ˜vi on nodes satisfied in L∗ i has the effect of removing this consideration when a trade U∗ i is selected that satisfies one of these nodes.",
                "On the other hand, fixing the values on these nodes has no effect on trades considered in RP3(i) that do not share a node with L∗ i .",
                "For the necessary direction, we first show that any trade that satisfies RP must solve RP1(i).",
                "Suppose otherwise, that some λi with payoff greater than π∗ l satisfies RP.",
                "But, valuation vi ∈ Ti together with L∗ i presents a counterexample to RP (Eq. 20).",
                "Now, suppose (for contradiction) that some λi with maximal payoff π∗ l but uncertainty less than L∗ i satisfies RP.",
                "Proceed by case analysis.",
                "Case a): only one solution to RP1(i) has uncertain value and so λi has certain value.",
                "But, this cannot satisfy RP because L∗ i with uncertain value would be a counterexample to RP (Eq. 20).",
                "Case b): two or more solutions to RP1(i) have uncertain value.",
                "Here, we first argue that one of these trades must satisfy a (weak) superset of all the nodes with uncertain value that are satisfied by all other trades in this set.",
                "This is by RP.",
                "Without this, then for any choice of trade that solves RP1(i), there is another trade with a disjoint set of uncertain but satisfied nodes that provides a counterexample to RP (Eq. 20).",
                "Now, consider the case that some trade contains a superset of all the uncertain satisfied nodes of the other trades.",
                "Clearly RP2(i) will choose this trade, L∗ i , and λi must satisfy a subset of these nodes (by assumption).",
                "But, we now see that λi cannot satisfy RP because L∗ i would be a counterexample to RP.",
                "Failure to meet the activity rule must have some consequence.",
                "In the current rules, the default action we choose is to set the upper bounds in valuations down to the maximal value of the provisional price on a node8 and the lowerbound value on that node.9 Such a bidder can remain active 8 The provisional price on a node is defined as the minimal total price across all feasible trades for which the subtree rooted at the tree is satisfied. 9 This is entirely analogous to when a bidder in an ascending clock auction stops bidding at a price: she is not permitted to bid at a higher price again in future rounds. 255 within the exchange, but only with valuations that are consistent with these new bounds. 5.4 Bidder Feedback In each round, our default design provides every bidder with the provisional trade and also with the current provisional prices.",
                "See 7 for an additional discussion.",
                "We also provide guidance to help a bidder meet the RP rule.",
                "Let sat(L∗ i ) and sat(U∗ i ) denote the nodes that are satisfied in trades L∗ i and U∗ i , as computed in RP1-RP3.",
                "Lemma 2.",
                "When RP fails, a bidder must increase a lower bound on at least one node in sat(L∗ i ) \\ sat(U∗ i ) or decrease an upper bound on at least one node in sat(U∗ i ) \\ sat(L∗ i ) in order to meet the activity rule.",
                "Proof.",
                "Changing the upper- or lower- values on nodes that are not satisfied by either trade does not change L∗ i or U∗ i , and does not change the payoff from these trades.",
                "Thus, the RP condition will continue to fail.",
                "Similarly, changing the bounds on nodes that are satisfied in both trades has no effect on revealed preference.",
                "A change to a lower bound on a shared node affects both L∗ i and U∗ i identically because of the use of the modified valuation to determine U∗ i .",
                "A change to an upper bound on a shared node has no effect in determining either L∗ i or U∗ i .",
                "Note that when sat(U∗ i ) = sat(L∗ i ) then condition (26) is always trivially satisfied, and so the guidance in the lemma is always well-defined when RP fails.",
                "This is an elegant feedback mechanism because it is adaptive.",
                "Once a bidder makes some changes on some subset of these nodes, the bidder can query the exchange.",
                "The exchange can then respond yes, or can revise the set of nodes sat(λ∗ l ) and sat(λ∗ u) as necessary. 5.5 Termination Conditions Once each bidder has committed its new bids (and either met the RP rule or suffered the penalty) then round t closes.",
                "At this point, the task is to determine the new α-valuation, and in turn the provisional allocation λt and provisional prices pt .",
                "A termination condition is also checked, to determine whether to move the exchange to a last-and-final round.",
                "To define the α-valuation we compute the following two quantities: Pessimistic at Pessimistic (PP) Determine an efficient trade, λ∗ l , at pessimistic values, i.e. to solve maxλ   i vi(λi), and set PP=  i vi(λ∗ li).",
                "Pessimistic at Optimistic (PO) Determine an efficient trade, λ∗ u, at optimistic values, i.e. to solve maxλ   i vi(λi), and set PO=  i vi(λ∗ ui).",
                "First, note that PP ≥ PO and PP ≥ 0 by definition, for all bid-trees, although PO can be negative (because the right trade at v is not currently a useful trade at v).",
                "Recognizing this, define γeff (PP, PO) = 1 + PP − PO PP , (27) when PP > 0, and observe that γeff (PP, PO) ≥ 1 when this is defined, and that γeff (PP, PO) will start large and then trend towards 1 as the optimistic allocation converges towards the pessimistic allocation.",
                "In each round, we define αeff ∈ [0, 1] as: αeff =   0 when PP is 0 1/γeff otherwise (28) which is 0 while PP is 0 and then trends towards 1 once PP> 0 in some round.",
                "This is used to define α-valuation vα i = αeff vi + (1 − αeff )vi, ∀i, (29) which is used to define the provisional allocation and provisional prices.",
                "The effect is to endogenously define a schedule for moving from optimistic to pessimistic values across rounds, based on how close the trades are to one another.",
                "Termination Condition.",
                "In moving to the last-and-final round, and finally closing, we also care about the convergence of payments, in addition to the convergence towards an efficient trade.",
                "For this we introduce another parameter, αthresh ∈ [0, 1], that trends from 0 to 1 as the Threshold payments at lower and upper valuations converge.",
                "Consider the following parameter: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive) , (30) which is defined for PP > 0, where pthresh(v) denotes the Threshold payments at valuation profile v, Nactive is the number of bidders that are actively engaged in trade in the PP trade, and || · ||2 is the L2-norm.",
                "Note that γthresh is defined for payments and not payoffs.",
                "This is appropriate because it is the accuracy of the outcome of the exchange that matters: i.e. the trade and the payments.",
                "Given this, we define αthresh =   0 when PP is 0 1/γthresh otherwise (31) which is 0 while PP is 0 and then trends towards 1 as progress is made.",
                "Definition 5 (termination).",
                "ICE transitions to a lastand-final round when one of the following holds: 1. αeff ≥ CUTOFFeff and αthresh ≥ CUTOFFthresh, 2. there is no trade at the optimistic values, where CUTOFFeff , CUTOFFthresh ∈ (0, 1] determine the accuracy required for termination.",
                "At the end of the last-and-final round vα = v is used to define the final trade and the final Threshold payments.",
                "Example 9.",
                "Consider again Example 1, and consider the upper and lower bounds as depicted in Figure 1.",
                "First, if the sellers bounds were [−20, −4] then there is an optimistic trade but no pessimistic trade, and PO = −4 and PP = 0, and αeff = 0.",
                "At the bounds depicted, both the optimistic and the pessimistic trades occur and PO = PP = 4 and αeff = 1.",
                "However, we can see the Threshold payments are (17, −17) at v but (14, −14) at v. Evaluating γthresh , we have γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, and αthresh = 2/5.",
                "For CUTOFFthresh < 2/5 the exchange would remain open.",
                "On the other hand, if the buyers value for +AB was between [18, 24] and the sellers value for −AB was between [−12, −6], the Threshold payments are (15, −15) at both upper and lower bounds, and αthresh = 1. 256 Component Purpose Lines Agent.",
                "Captures strategic behavior and information revelation decisions 762 Model Support Provides XML support to load goods and valuations into world 200 World Keeps track of all agent, good, and valuation details 998 Exchange Driver & Communication Controls exchange, and coordinates remote agent behavior 585 Bidding Language Implements the tree-based bidding language 1119 Activity Rule Engine Implements the revealed preference rule with range support 203 Closing Rule Engine Checks if auction termination condition reached 137 WD Engine Provides WD-related logic 377 Pricing Engine Provides Pricing-related logic 460 MIP Builders Translates logic used by engines into our general optimizer formulation 346 Pricing Builders Used by three pricing stages 256 Winner Determination Builders Used by WD, activity rule, closing rule, and pricing constraint generation 365 Framework Support code; eases modular replacement of above components 510 Table 1: Exchange Component and Code Breakdown. 6.",
                "SYSTEMS INFRASTRUCTURE ICE is approximately 6502 lines of Java code, broken up into the functional packages described in Table 1.10 The prototype is modular so that researchers may easily replace components for experimentation.",
                "In addition to the core exchange discussed in this paper, we have developed an agent component that allows a user to simulate the behavior and knowledge of other players in the system, better allowing a user to formulate their strategy in advance of actual play.",
                "A user specifies a valuation model in an XMLinterpretation of our bidding language, which is revealed to the exchange via the agents strategy.",
                "Major exchange tasks are handled by engines that dictate the non-optimizer specific logic.",
                "These engines drive the appropriate MIP/LP builders.",
                "We realized that all of our optimization formulations boil down to two classes of optimization problem.",
                "The first, used by winner determination, activity rule, closing rule, and constraint generation in pricing, is a MIP that finds trades that maximize value, holding prices and slacks constant.",
                "The second, used by the three pricing stages, is an LP that holds trades constant, seeking to minimize slack, profit, or prices.",
                "We take advantage of the commonality of these problems by using common LP/MIP builders that differ only by a few functional hooks to provide the correct variables for optimization.",
                "We have generalized our back-end optimization solver interface11 (we currently support CPLEX and the LGPL- licensed LPSolve), and can take advantage of the load-balancing and parallel MIP/LP solving capability that this library provides. 7.",
                "DISCUSSION The bidding language was defined to allow for perfect symmetry between buyers and sellers and provide expressiveness in an exchange domain, for instance for mixed bidders interested in executing trades such as swaps.",
                "This proved especially challenging.",
                "The breakthrough came when we focused on changes in value for trades rather than providing absolute values for allocations.",
                "For simplicity, we require the same tree structure for both the upper and lower valuations. 10 Code size is measured in physical source line of code (SLOC), as generated using David A. Wheelers SLOC Count.",
                "The total of 6502 includes 184 for instrumentation (not shown in the table).",
                "The JOpt solver interface is another 1964 lines, and Castor automatically generates around 5200 lines of code for XML file manipulation. 11 http://econcs.eecs.harvard.edu/jopt This allows the language itself to ensure consistency (with the upper value at least the lower value on all trades) and enforce monotonic tightening of these bounds for all trades across rounds.",
                "It also provides for an efficient method to check the RP activity rule, because it makes it simple to reason about shared uncertainty between trades.",
                "The decision to adopt a direct and proxied approach in which bidders express their upper and lower values to a trusted proxy agent that interacts with the exchange was made early in the design process.",
                "In many ways this is the clearest and most immediate way to generalize the design in Parkes et al. [24] and make it iterative.",
                "In addition, this removes much opportunity for strategic manipulation: bidders are restricted to making (incremental) statements about their valuations.",
                "Another advantage is that it makes the activity rule easy to explain: bidders can always meet the activity rule by tightening bounds such that their true value remains in the support.12 Perhaps most importantly, having explicit information on upper and lower values permits progress in early rounds, even while there is no efficient trade at pessimistic values.",
                "Upper and lower bound information also provides guidance about when to terminate.",
                "Note that taken by itself, PP = PO does not imply that the current provisional trade is efficient with respect to all values consistent with current value information.",
                "The difference in values between different trades, aggregated across all bidders, could be similar at lower and upper bounds but quite different at intermediate values (including truth).",
                "Nevertheless, we conjecture that PP = PO will prove an excellent indicator of efficiency in practical settings where the shape of the upper and lower valuations does convey useful information.",
                "This is worthy of experimental investigation.",
                "Moreover, the use of price and RP activity provides additional guarantees.",
                "We adopted linear prices (prices on individual items) rather than non-linear prices (with prices on a trade not equal to the sum of the prices on the component items) early in the design process.",
                "The conciseness of this price representation is very important for computational tractability within the exchange and also to promote simplicity and transparency for bidders.",
                "The RP activity rule was adopted later, and is a good choice because of its excellent theoretical properties when coupled with CE prices.",
                "The following can be easily established: given exact CE prices pt−1 for provisional trade 12 This is in contrast to indirect price-based approaches, such as clock-proxy [1], in which bidders must be able to reason about the RP-constraints implied by bids in each round. 257 λt−1 at valuations vα , then if the upper and lower values at the start of round t already satisfy the RP rule (and without the need for any tie-breaking), the provisional trade is efficient for all valuations consistent with the current bid trees.",
                "When linear CE prices exist, this provides for a soundness and completeness statement: if PP = PO, linear CE prices exist, and the RP rule is satisfied, the provisional trade is efficient (soundness); if prices are exact CE prices for the provisional trade at vα , but the trade is inefficient with respect to some valuation profile consistent with the current bid trees, then at least one bidder must fail RP with her current bid tree and progress will be made (completeness).",
                "Future work must study convergence experimentally, and extend this theory to allow for approximate prices.",
                "Some strategic aspects of our ICE design deserve comment, and further study.",
                "First, we do not claim that truthfully responding to the RP rule is an ex post equilibrium.13 However, the exchange is designed to mimic the Threshold rule in its payment scheme, which is known to have useful incentive properties [16].",
                "We must be careful, though.",
                "For instance we do not suggest to provide αeff to bidders, because as αeff approaches 1 it would inform bidders that bid values are becoming irrelevant to determining the trade but merely used to determine payments (and bidders would become increasingly reluctant to increase their lower valuations).",
                "Also, no consideration has been given in this work to collusion by bidders.",
                "This is an issue that deserves some attention in future work. 8.",
                "CONCLUSIONS In this work we designed and prototyped a scalable and highly-expressive iterative <br>combinatorial exchange</br>.",
                "The design includes many interesting features, including: a new bid-tree language for exchanges, a new method to construct approximate linear prices from expressive languages, and a proxied elicitation method with optimistic and pessimistic valuations with a new method to evaluate a revealed- preference activity rule.",
                "The exchange is fully implemented in Java and is in a validation phase.",
                "The next steps for our work are to allow bidders to refine the structure of the bid tree in addition to values on the tree.",
                "We intend to study the elicitation properties of the exchange and we have put together a test suite of exchange problem instances.",
                "In addition, we are beginning to engage in collaborations to apply the design to airline takeoff and landing slot scheduling and to resource allocation in widearea network distributed computational systems.",
                "Acknowledgments We would like to dedicate this paper to all of the participants in CS 286r at Harvard University in Spring 2004.",
                "This work is supported in part by NSF grant IIS-0238147. 9.",
                "REFERENCES [1] L. Ausubel, P. Cramton, and P. Milgrom.",
                "The clock-proxy auction: A practical combinatorial auction design.",
                "In Cramton et al. [9], chapter 5. [2] M. Babaioff, N. Nisan, and E. Pavlov.",
                "Mechanisms for a spatially distributed market.",
                "In Proc. 5th ACM Conf. on Electronic Commerce, pages 9-20.",
                "ACM Press, 2001. 13 Given the Myerson-Satterthwaite impossibility theorem [22] and the method by which we determine the trade we should not expect this. [3] M. Ball, G. Donohue, and K. Hoffman.",
                "Auctions for the safe, efficient, and equitable allocation of airspace system resources.",
                "In S. Cramton, Shoham, editor, Combinatorial Auctions. 2004.",
                "Forthcoming. [4] D. Bertsimas and J. Tsitsiklis.",
                "Introduction to Linear Optimization.",
                "Athena Scientific, 1997. [5] S. Bikhchandani and J. M. Ostroy.",
                "The package assignment model.",
                "Journal of Economic Theory, 107(2):377-406, 2002. [6] C. Boutilier.",
                "A pomdp formulation of preference elicitation problems.",
                "In Proc. 18th National Conference on Artificial Intelligence (AAAI-02), 2002. [7] C. Boutilier and H. Hoos.",
                "Bidding languages for combinatorial auctions.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), 2001. [8] W. Conen and T. Sandholm.",
                "Preference elicitation in combinatorial auctions.",
                "In Proc. 3rd ACM Conf. on Electronic Commerce (EC-01), pages 256-259.",
                "ACM Press, New York, 2001. [9] P. Cramton, Y. Shoham, and R. Steinberg, editors.",
                "Combinatorial Auctions.",
                "MIT Press, 2004. [10] S. de Vries, J. Schummer, and R. V. Vohra.",
                "On ascending Vickrey auctions for heterogeneous objects.",
                "Technical report, MEDS, Kellogg School, Northwestern University, 2003. [11] S. de Vries and R. V. Vohra.",
                "Combinatorial auctions: A survey.",
                "Informs Journal on Computing, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana, and T. Wilson.",
                "Testing linear pricing algorithms for use in ascending combinatorial auctions.",
                "Technical report, SEOR, George Mason University, 2003. [13] Y. Fu, J.",
                "Chase, B. Chun, S. Schwab, and A. Vahdat.",
                "Sharp: an architecture for secure resource peering.",
                "In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 133-148.",
                "ACM Press, 2003. [14] B. Hudson and T. Sandholm.",
                "Effectiveness of query types and policies for preference elicitation in combinatorial auctions.",
                "In Proc. 3rd Int.",
                "Joint.",
                "Conf. on Autonomous Agents and Multi Agent Systems, pages 386-393, 2004. [15] V. Krishna.",
                "Auction Theory.",
                "Academic Press, 2002. [16] D. Krych.",
                "Calculation and analysis of Nash equilibria of Vickrey-based payment rules for combinatorial exchanges, Harvard College, April 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter, and C. DeMartini.",
                "A new and improved design for multi-object iterative auctions.",
                "Management Science, 2004.",
                "To appear. [18] E. Kwerel and J. Williams.",
                "A proposal for a rapid transition to market allocation of spectrum.",
                "Technical report, FCC Office of Plans and Policy, Nov 2002. [19] S. M. Lahaie and D. C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In Proc.",
                "ACM Conf. on Electronic Commerce, pages 180-188, 2004. [20] R. P. McAfee.",
                "A dominant strategy double auction.",
                "J. of Economic Theory, 56:434-450, 1992. [21] P. Milgrom.",
                "Putting auction theory to work: The simultaneous ascending auction.",
                "J.Pol.",
                "Econ., 108:245-272, 2000. [22] R. B. Myerson and M. A. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [23] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. 2nd ACM Conf. on Electronic Commerce (EC-00), pages 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), pages 1161-1168, 2001. [25] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, July 2000. [26] S. J. Rassenti, V. L. Smith, and R. L. Bulfin.",
                "A combinatorial mechanism for airport time slot allocation.",
                "Bell Journal of Economics, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc, and R. M. Harstad.",
                "Computationally manageable combinatorial auctions.",
                "Management Science, 44(8):1131-1147, 1998. [28] T. Sandholm and C. Boutilier.",
                "Preference elicitation in combinatorial auctions.",
                "In Cramton et al. [9], chapter 10. [29] P. R. Wurman and M. P. Wellman.",
                "AkBA: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, pages 21-29, 2000. 258"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "ICE: un \"intercambio combinatorial\" iterativo David C. Parkes † † Ruggiero Cavallo † Nick Elprin † Adam Juda † S´ebastien Lahaie † Benjamin Lubin † Loizos Michael † Jeffrey Shneidman † Hassan Sultan † Resumen Resumen Presentamos el primer diseño para un Iterativo \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\"Intercambio combinatorio \"(ICE).",
                "Un \"intercambio combinatorial\" (CE) [24] es una subasta doble combinatoria que reúne a múltiples compradores y vendedores para intercambiar múltiples productos heterogéneos.",
                "Este artículo presenta el primer diseño para un \"intercambio combinatorial\" iterativo (ICE).",
                "El diseño de hielo ahora estamos listos para introducir el diseño iterativo de \"intercambio combinatorial\" (ICE).",
                "Conclusiones En este trabajo diseñamos y prototipos de un \"intercambio combinatorial\" escalable y altamente expresivo."
            ],
            "translated_text": "",
            "candidates": [
                "intercambio combinatorio",
                "intercambio combinatorial",
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
                " ",
                "Intercambio combinatorio ",
                "intercambio combinatorio",
                "intercambio combinatorial",
                "intercambio combinatorio",
                "intercambio combinatorial",
                "intercambio combinatorio",
                "intercambio combinatorial",
                "intercambio combinatorio",
                "intercambio combinatorial"
            ],
            "error": []
        },
        "vcg": {
            "translated_key": "VCG",
            "is_in_text": true,
            "original_annotated_sentences": [
                "ICE: An Iterative Combinatorial Exchange David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an iterative combinatorial exchange (ICE).",
                "The exchange incorporates a tree-based bidding language that is concise and expressive for CEs.",
                "Bidders specify lower and upper bounds on their value for different trades.",
                "These bounds allow price discovery and useful preference elicitation in early rounds, and allow termination with an efficient trade despite partial information on bidder valuations.",
                "All computation in the exchange is carefully optimized to exploit the structure of the bid-trees and to avoid enumerating trades.",
                "A proxied interpretation of a revealedpreference activity rule ensures progress across rounds.",
                "A <br>vcg</br>-based payment scheme that has been shown to mitigate opportunities for bargaining and strategic behavior is used to determine final payments.",
                "The exchange is fully implemented and in a validation phase.",
                "Categories and Subject Descriptors: I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Combinatorial exchanges combine and generalize two different mechanisms: double auctions and combinatorial auctions.",
                "In a double auction (DA), multiple buyers and sellers trade units of an identical good [20].",
                "In a combinatorial auction (CA), a single seller has multiple heterogeneous items up for sale [11].",
                "Buyers may have complementarities or substitutabilities between goods, and are provided with an expressive bidding language.",
                "A common goal in both market designs is to determine the efficient allocation, which is the allocation that maximizes total value.",
                "A combinatorial exchange (CE) [24] is a combinatorial double auction that brings together multiple buyers and sellers to trade multiple heterogeneous goods.",
                "For example, in an exchange for wireless spectrum, a bidder may declare that she is willing to pay $1 million for a trade where she obtains licenses for New York City, Boston, and Philadelphia, and loses her license for Washington DC.",
                "Thus, unlike a DA, a CE allows all participants to express complex valuations via expressive bids.",
                "Unlike a CA, a CE allows for fragmented ownership, with multiple buyers and sellers and agents that are both buying and selling.",
                "CEs have received recent attention both in the context of wireless spectrum allocation [18] and for airport takeoff and landing slot allocation [3].",
                "In both of these domains there are incumbents with property rights, and it is important to facilitate a complex multi-way reallocation of resources.",
                "Another potential application domain for CEs is to resource allocation in shared distributed systems, such as PlanetLab [13].",
                "The instantiation of our general purpose design to specific domains is a compelling next step in our research.",
                "This paper presents the first design for an iterative combinatorial exchange (ICE).",
                "The genesis of this project was a class, CS 286r Topics at the Interface between Economics and Computer Science, taught at Harvard University in Spring 2004.1 The entire class was dedicated to the design and prototyping of an iterative CE.",
                "The ICE design problem is multi-faceted and quite hard.",
                "The main innovation in our design is an expressive yet concise tree-based bidding language (which generalizes known languages such as XOR/OR [23]), and the tight coupling of this language with efficient algorithms for price-feedback to guide bidding, winner-determination to determine trades, and revealed-preference activity rules to ensure progress across rounds.",
                "The exchange is iterative: bidders express upper and lower valuations on trades by annotating their bid-tree, and then tighten these bounds in response to price feedback in each round.",
                "The Threshold payment rule, introduced by Parkes et al. [24], is used to determine final payments.",
                "The exchange has a number of interesting theoretical properties.",
                "For instance, when there exist linear prices we establish soundness and completeness: for straightforward bidders that adjust their bounds to meet activity rules while keeping their true value within the bounds, the exchange will terminate with the efficient allocation.",
                "In addition, the 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Truth Agent Act Rule WD ACC FAIR BALClosing RuleVickreyThreshold DONE !",
                "DONE 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER 2,2 +A +15 +8 +B +15 +8 BUYER 2,2 -A -2 -6 -B -2 -6 SELLER BUYER, buy AB SELLER, sell AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PBUYER = 16 - (4-0) = 12 PSELLER = -12 - (4-0) = -16 PBUYER = 14 PSELLER = -14 Pessim istic O ptim istic = 1 Figure 1: ICE System Flow of Control efficient allocation can often be determined without bidders revealing, or even knowing, their exact value for all trades.",
                "This is essential in complex domains where the valuation problem can itself be very challenging for a participant [28].",
                "While we cannot claim that straightforward bidding is an equilibrium of the exchange (and indeed, should not expect to by the Myerson-Satterthwaite impossibility theorem [22]), the Threshold payment rule minimizes the ex post incentive to manipulate across all budget-balanced payment rules.",
                "The exchange is implemented in Java and is currently in validation.",
                "In describing the exchange we will first provide an overview of the main components and introduce several working examples.",
                "Then, we introduce the basic components for a simple one-shot variation in which bidders state their exact values for trades in a single round.",
                "We then describe the full iterative exchange, with upper and lower values, price-feedback, activity rules, and termination conditions.",
                "We state some theoretical properties of the exchange, and end with a discussion to motivate our main design decisions, and suggest some next steps. 2.",
                "AN OVERVIEW OF THE ICE DESIGN The design has four main components, which we will introduce in order through the rest of the paper: • Expressive and concise tree-based bidding language.",
                "The language describes values for trades, such as my value for selling AB and buying C is $100, or my value for selling ABC is -$50, with negative values indicating that a bidder must receive a payment for the trade to be acceptable.",
                "The language allows bidders to express upper and lower bounds on value, which can be tightened across rounds. • Winner Determination.",
                "Winner-determination (WD) is formulated as a mixed-integer program (MIP), with the structure of the bid-trees captured explicitly in the formulation.",
                "Comparing the solution at upper and lower values allows for a determination to be made about termination, with progress in intermediate rounds driven by an intermediate valuation and the lower values adopted on termination. • Payments.",
                "Payments are computed using the Threshold payment rule [24], with the intermediate valuations adopted in early rounds and lower values adopted on termination. • Price feedback.",
                "An approximate price is computed for each item in the exchange in each round, in terms of the intermediate valuations and the provisional trade.",
                "The prices are optimized to approximate competitive equilibrium prices, and further optimized to best approximate the current Threshold payments with remaining ties broken to favor prices that are balanced across different items.",
                "In computing the prices, we adopt the methods of constraint-generation to exploit the structure of the bidding language and avoid enumerating all feasible trades.",
                "The subproblem to generate new constraints is a variation of the WD problem. • Activity rule.",
                "A revealed-preference activity rule [1] ensures progress across rounds.",
                "In order to remain active, a bidder must tighten bounds so that there is enough information to define a trade that maximizes surplus at the current prices.",
                "Another variation on the WD problem is formulated, both to verify that the activity rule is met and also to provide feedback to a bidder to explain how to meet the rule.",
                "An outline of the ICE system flow of control is provided in Figure 1.",
                "We will return to this example later in the paper.",
                "For now, just observe in this two-agent example that the agents state lower and upper bounds that are checked in the activity rule, and then passed to winner-determination (WD), and then through three stages of pricing (accuracy, fairness, balance).",
                "On passing the closing rule (in which parameters αeff and αthresh are checked for convergence of the trade and payments), the exchange goes to a last-and-final round.",
                "At the end of this round, the trade and payments are finally determined, based on the lower valuations. 2.1 Related Work Many ascending-price one-sided CAs are known in the literature [10, 25, 29].",
                "Direct elicitation approaches have also been proposed for one-sided CAs in which agents respond to explicit queries about their valuations [8, 14, 19].",
                "A number of ascending CAs are designed to work with simple prices on items [12, 17].",
                "The price generation methods that we use in ICE generalize the methods in these earlier papers.",
                "Parkes et al. [24] studied sealed-bid combinatorial exchanges and introduced the Threshold payment rule.",
                "Subsequently, Krych [16] demonstrated experimentally that the Threshold rule promotes efficient allocations.",
                "We are not aware of any previous studies of iterative CEs.",
                "Dominant strategy DAs are known for unit demand [20] and also for single-minded agents [2].",
                "No dominant strategy mechanisms are known for the general CE problem.",
                "ICE is a hybrid auction design, in that it couples simple item prices to drive bidding in early rounds with combinatorial WD and payments, a feature it shares with the clock-proxy design of Ausubel et al. [1] for one-sided CAs.",
                "We adopt a variation on the clock-proxy auctionss revealedpreference activity rule.",
                "The bidding language shares some structural elements with the LGB language of Boutilier and Hoos [7], but has very different semantics.",
                "Rothkopf et al. [27] also describe a restricted tree-based bidding language.",
                "In LGB, the semantics are those of propositional logic, with the same items in an allocation able to satisfy a tree in multiple places.",
                "Although this can make LGB especially concise in some settings, the semantics that we propose appear to provide useful locality, so that the value of one component in a tree can be understood independently from the rest of the tree.",
                "The idea of capturing the structure of our bidding language explicitly within a mixed-integer programming formulation follows the developments in Boutilier [6]. 3.",
                "PRELIMINARIES In our model, we consider a set of goods, indexed {1, . . . , m} and a set of bidders, indexed {1, . . . , n}.",
                "The initial allocation of goods is denoted x0 = (x0 1, . . . , x0 n), with x0 i = (x0 i1, . . . , x0 im) and x0 ij ≥ 0 for good j indicating the number 250 of units of good j held by bidder i.",
                "A trade λ = (λ1, . . . , λn) denotes the change in allocation, with λi = (λi1, . . . , λim) where λij ∈   is the change in the number of units of item j to bidder i.",
                "So, the final allocation is x1 = x0 + λ.",
                "Each bidder has a value vi(λi) ∈ ¡ for a trade λi.",
                "This value can be positive or negative, and represents the change in value between the final allocation x0 i +λi and the initial allocation x0 i .",
                "Utility is quasi-linear, with ui(λi, p) = vi(λi)−p for trade λi and payment p ∈ ¡ .",
                "Price p can be negative, indicating the bidder receives a payment for the trade.",
                "We use the term payoff interchangeably with utility.",
                "Our goal in the ICE design is to implement the efficient trade.",
                "The efficient trade, λ∗ , maximizes the total increase in value across bidders.",
                "Definition 1 (Efficient trade).",
                "The efficient trade λ∗ solves max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Constraints (1) ensure that no agent sells more items than it has in its initial allocation.",
                "Constraints (2) provide free disposal, and allows feasible trades to sell more items than are purchased (but not vice versa).",
                "Later, we adopt Feas(x0 ) to denote the set of feasible trades, given these constraints and given an initial allocation x0 = (x0 1, . . . , x0 n). 3.1 Working Examples In this section, we provide three simple examples of instances that we will use to illustrate various components of the exchange.",
                "All three examples have only one seller, but this is purely illustrative.",
                "Example 1.",
                "One seller and one buyer, two goods {A, B}, with the seller having an initial allocation of AB.",
                "Changes in values for trades: seller buyer AND(−A, −B) AND(+A, +B) -10 +20 The AND indicates that both the buyer and the seller are only interested in trading both goods as a bundle.",
                "Here, the efficient (value-maximizing) trade is for the seller to sell AB to the buyer, denoted λ∗ = ([−1, −1], [+1, +1]).",
                "Example 2.",
                "One seller and four buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 buyer 3 buyer 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 The OR indicates that the seller is willing to sell any number of goods.",
                "The XOR indicates that buyers 2 and 4 are willing to buy at most one of the two goods in which they are interested.",
                "The efficient trade is for bundle AB to go to buyer 1 and bundle CD to buyer 3, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER Example 1: Example 3: 2,2 +C +D BUYER 2 2,2 +A +B BUYER 1 +11 +84,4 -B SELLER -A -C -D Example 2: 1,1 +A +B BUYER 2 2,2 +A +B BUYER 1 +6 +40,4 -B SELLER -C -D-A 1,1 +C +D BUYER 4 2,2 +C +D +3 +2 BUYER 3 -18 Figure 2: Example Bid Trees.",
                "Example 3.",
                "One seller and two buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 AND(−A, −B, −C, −D) AND(+A, +B) AND(+C, +D) -18 +11 +8 The efficient trade is for bundle AB to go to buyer 1 and bundle CD to go to buyer 2, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4.",
                "A ONE-SHOT EXCHANGE DESIGN The description of ICE is broken down into two sections: one-shot (sealed-bid) and iterative.",
                "In this section we abstract away the iterative aspect and introduce a specialization of the tree-based language that supports only exact values on nodes. 4.1 Tree-Based Bidding Language The bidding language is designed to be expressive and concise, entirely symmetric with respect to buyers and sellers, and to extend to capture bids from mixed buyers and sellers, ranging from simple swaps to highly complex trades.",
                "Bids are expressed as annotated bid trees, and define a bidders value for all possible trades.",
                "The language defines changes in values on trades, with leaves annotated with traded items and nodes annotated with changes in values (either positive or negative).",
                "The main feature is that it has a general interval-choose logical operator on internal nodes, and that it defines careful semantics for propagating values within the tree.",
                "We illustrate the language on each of Examples 1-3 in Figure 2.",
                "The language has a tree structure, with trades on items defined on leaves and values annotated on nodes and leaves.",
                "The nodes have zero values where no value is indicated.",
                "Internal nodes are also labeled with interval-choose (IC) ranges.",
                "Given a trade, the semantics of the language define which nodes in the tree can be satisfied, or switched-on.",
                "First, if a child is on then its parent must be on.",
                "Second, if a parent node is on, then the number of children that are on must be within the IC range on the parent node.",
                "Finally, leaves in which the bidder is buying items can only be on if the items are provided in the trade.",
                "For instance, in Example 2 we can consider the efficient trade, and observe that in this trade all nodes in the trees of buyers 1 and 3 (and also the seller), but none of the nodes in the trees of buyers 2 and 4, can be on.",
                "On the other hand, in 251 the trade in which A goes to buyer 2 and D to buyer 4, then the root and appropriate leaf nodes can be on for buyers 2 and 4, but no nodes can be on for buyers 1 and 3.",
                "Given a trade there is often a number of ways to choose the set of satisfied nodes.",
                "The semantics of the language require that the nodes that maximize the summed value across satisfied nodes be activated.",
                "Consider bid tree Ti from bidder i.",
                "This defines nodes β ∈ Ti, of which some are leaves, Leaf (i) ⊆ Ti.",
                "Let Child(β) ⊆ Ti denote the children of a node β (that is not itself a leaf).",
                "All nodes except leaves are labeled with the interval-choose operator [IC x i (β), ICy i (β)].",
                "Every node is also labeled with a value, viβ ∈ ¡ .",
                "Each leaf β is labeled with a trade, qiβ ∈   m (i.e., leaves can define a bundled trade on more than one type of item.)",
                "Given a trade λi to bidder i, the interval-choose operators and trades on leaves define which nodes can be satisfied.",
                "There will often be a choice.",
                "Ties are broken to maximize value.",
                "Let satiβ ∈ {0, 1} denote whether node β is satisfied.",
                "Solution sati is valid given tree Ti and trade λi, written sati ∈ valid(Ti, λi), if and only if: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Child(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Leaf (i) (5) In words, a set of leaves can only be considered satisfied given trade λi if the total increase in quantity summed across all such leaves is covered by the trade, for all goods (Eq. 4).",
                "This works for sellers as well as buyers: for sellers a trade is negative and this requires that the total number of items indicated sold in the tree is at least the total number sold as defined in the trade.",
                "We also need upwards-propagation: any time a node other than the root is satisfied then its parent must be satisfied (by   β ∈Child(β) satiβ ≤ ICy i (β)satiβ in Eq. 5).",
                "Finally, we need downwards-propagation: any time an internal node is satisfied then the appropriate number of children must also be satisfied (Eq. 5).",
                "The total value of trade λi, given bid-tree Ti, is defined as: vi(Ti, λi) = max sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) The tree-based language generalizes existing languages.",
                "For instance: IC(2, 2) on a node with 2 children is equivalent to an AND operator; IC(1, 3) on a node with 3 children is equivalent to an OR operator; and IC(1, 1) on a node with 2 children is equivalent to an XOR operator.",
                "Similarly, the XOR/OR bidding languages can be directly expressed as a bid tree in our language.2 4.2 Winner Determination This section defines the winner determination problem, which is formulated as a MIP and solved in our implementation with a commercial solver.3 The solver uses branchand-bound search with dynamic cut generation and branching heuristics to solve large MIPs in economically feasible run times. 2 The OR* language is the OR language with dummy items to provide additional structure.",
                "OR* is known to be expressive and concise.",
                "However, it is not known whether OR* dominates XOR/OR in terms of conciseness [23]. 3 CPLEX, www.ilog.com In defining the MIP representation we are careful to avoid an XOR-based enumeration of all bundles.",
                "A variation on the WD problem is reused many times within the exchange, e.g. for column generation in pricing and for checking revealed preference.",
                "Given bid trees T = (T1, . . . , Tn) and initial allocation x0 , the mixed-integer formulation for WD is: WD(T, x0 ) : max λ,sat ¢ i ¢ β∈Ti viβ · satiβ s.t. (1), (2), satiβ ∈ {0, 1}, λij ∈   sati ∈ valid(Ti, λi), ∀i Some goods may go unassigned because free disposal is allowed within the clearing rules of winner determination.",
                "These items can be allocated back to agents that sold the items, i.e. for which λij < 0. 4.3 Computing Threshold Payments The Threshold payment rule is based on the payments in the Vickrey-Clarke-Groves (<br>vcg</br>) mechanism [15], which itself is truthful and efficient but does not satisfy budget balance.",
                "Budget-balance requires that the total payments to the exchange are equal to the total payments made by the exchange.",
                "In <br>vcg</br>, the payment paid by agent i is pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) where λ∗ is the efficient trade, V ∗ is the reported value of this trade, and V−i is the reported value of the efficient trade that would be implemented without bidder i.",
                "We call ∆<br>vcg</br>i = V ∗ − V−i the <br>vcg</br> discount.",
                "For instance, in Example 1 pvcg,seller = −10 − (+10 − 0) = −20 and pvcg,buyer = +20 − (+10 − 0) = 10, and the exchange would run at a budget deficit of −20 + 10 = −10.",
                "The Threshold payment rule [24] determines budgetbalanced payments to minimize the maximal error across all agents to the <br>vcg</br> outcome.",
                "Definition 2.",
                "The Threshold payment scheme implements the efficient trade λ∗ given bids, and sets payments pthresh,i = ˆvi(λ∗ i ) − ∆i, where ∆ = (∆1, . . . , ∆n) is set to minimize maxi(∆<br>vcg</br>i − ∆i) subject to ∆i ≤ ∆<br>vcg</br>i and   i ∆i ≤ V ∗ (this gives budget-balance).",
                "Example 4.",
                "In Example 2, the <br>vcg</br> discounts are (9, 2, 0, 1, 0) to the seller and four buyers respectively, <br>vcg</br> payments are (−9, 4, 0, 2, 0) and the exchange runs at a deficit of -3.",
                "In Threshold, the discounts are (8, 1, 0, 0, 0) and the payments are (−8, 5, 0, 3, 0).",
                "This minimizes the worst-case error to <br>vcg</br> discounts across all budget-balanced payment schemes.",
                "Threshold payments are designed to minimize the maximal ex post incentive to manipulate.",
                "Krych [16] confirmed that Threshold promotes allocative efficiency in restricted and approximate Bayes-Nash equilibrium. 5.",
                "THE ICE DESIGN We are now ready to introduce the iterative combinatorial exchange (ICE) design.",
                "Several new components are introduced, relative to the design for the one-shot exchange.",
                "Rather than provide precise valuations, bidders can provide lower and upper valuations and revise this bid information across rounds.",
                "The exchange provides price-based feedback 252 to guide bidders in this process, and terminates with an efficient (or approximately-efficient) trade with respect to reported valuations.",
                "In each round t ∈ {0, 1, . . .} the current lower and upper bounds, vt and vt , are used to define a provisional valuation profile vα (the α-valuation), together with a provisional trade λt and provisional prices pt = (pt 1, . . . , pt m) on items.",
                "The α-valuation is a linear combination of the current upper and lower valuations, with αEFF ∈ [0, 1] chosen endogenously based on the closeness of the optimistic trade (at v) and the pessimistic trade (at v).",
                "Prices pt are used to inform an activity rule, and drive progress towards an efficient trade. 5.1 Upper and Lower Valuations The bidding language is extended to allow a bidder i to report a lower and upper value (viβ, viβ) on each node.",
                "These take the place of the exact value viβ defined in Section 4.1.",
                "Based on these labels, we can define the valuation functions vi(Ti, λi) and vi(Ti, λi), using the exact same semantics as in Eq. (6).",
                "We say that such a bid-tree is well-formed if viβ ≤ viβ for all nodes.",
                "The following lemma is useful: Lemma 1.",
                "Given a well-formed tree, T, then vi(Ti, λi) ≤ vi(Ti, λi) for all trades.",
                "Proof.",
                "Suppose there is some λi for which vi(Ti, λi) > vi(Ti, λi).",
                "Then, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ.",
                "But, this is a contradiction because the trade λ that defines vi(Ti, λi) is still feasible with upper bounds vi, and viβ ≥ viβ for all nodes β in a well-formed tree. 5.2 Price Feedback In each round, approximate competitive-equilibrium (CE) prices, pt = (pt 1, . . . , pt m), are determined.",
                "Given these provisional prices, the price on trade λi for bidder i is pt (λi) =   j≤m pt j · λij.",
                "Definition 3 (CE prices).",
                "Prices p∗ are competitive equilibrium prices if the efficient trade λ∗ is supported at prices p∗ , so that for each bidder: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) CE prices will not always exist and we will often need to compute approximate prices [5].",
                "We extend ideas due to Rassenti et al. [26], Kwasnica et al. [17] and Dunford et al. [12], and select approximate prices as follows: I: Accuracy.",
                "First, we compute prices that minimize the maximal error in the best-response constraints across all bidders.",
                "II: Fairness.",
                "Second, we break ties to prefer prices that minimize the maximal deviation from Threshold payments across all bidders.",
                "III: Balance.",
                "Third, we break ties to prefer prices that minimize the maximal price across all items.",
                "Taken together, these steps are designed to promote the informativeness of the prices in driving progress across rounds.",
                "In computing prices, we explain how to compute approximate (or otherwise) prices for structured bidding languages, and without enumerating all possible trades.",
                "For this, we adopt constraint generation to efficient handle an exponential number of constraints.",
                "Each step is described in detail below.",
                "I: Accuracy.",
                "We adopt a definition of price accuracy that generalizes the notions adopted in previous papers for unstructured bidding languages.",
                "Let λt denote the current provisional trade and suppose the provisional valuation is vα .",
                "To compute accurate CE prices, we consider: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j.",
                "This linear program (LP) is designed to find prices that minimize the worst-case error across all agents.",
                "From the definition of CE prices, it follows that CE prices would have δ = 0 as a solution to (9), at which point trade λt i would be in the best-response set of every agent (with λt i = ∅, i.e. no trade, for all agents with no surplus for trade at the prices.)",
                "Example 5.",
                "We can illustrate the formulation (9) on Example 2, assuming for simplicity that vα = v (i.e. truth).",
                "The efficient trade allocates AB to buyer 1 and CD to buyer 3.",
                "Accuracy will seek prices p(A), p(B), p(C) and p(D) to minimize the δ ≥ 0 required to satisfy constraints: p(A) + p(B) + p(C) + p(D) ≥ 0 (seller) p(A) + p(B) ≤ 6 + δ (buyer 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (buyer 2) p(C) + p(D) ≤ 3 (buyer 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (buyer 4) An optimal solution requires p(A) = p(B) = 10/3, with δ = 2/3, with p(C) and p(D) taking values such as p(C) = p(D) = 3/2.",
                "But, (9) has an exponential number of constraints (Eq. 10).",
                "Rather than solve it explicitly we use constraint generation [4] and dynamically generate a sufficient subset of constraints.",
                "Let   i denote a manageable subset of all possible feasible trades to bidder i.",
                "Then, a relaxed version of (9) (written ACC) is formulated by substituting (10) with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) where   i is a set of trades that are feasible for bidder i given the other bids.",
                "Fixing the prices p∗ , we then solve n subproblems (one for each bidder), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0 ), (12) to check whether solution (p∗ , δ∗ ) to ACC is feasible in problem (9).",
                "In R-WD(i) the objective is to determine a most preferred trade for each bidder at these prices.",
                "Let ˆλi denote the solution to R-WD(i).",
                "Check condition: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) and if this condition holds for all bidders i, then solution (p∗ , δ∗ ) is optimal for problem (9).",
                "Otherwise, trade ˆλi is added to   i for all bidders i for which this constraint is 253 violated and we re-solve the LP with the new set of constraints.4 II: Fairness.",
                "Second, we break remaining ties to prefer fair prices: choosing prices that minimize the worst-case error with respect to Threshold payoffs (i.e. utility to bidders with Threshold payments), but without choosing prices that are less accurate.5 Example 6.",
                "For example, accuracy in Example 1 (depicted in Figure 1) requires 12 ≤ pA +pB ≤ 16 (for vα = v).",
                "At these valuations the Threshold payoffs would be 2 to both the seller and the buyer.",
                "This can be exactly achieved in pricing with pA + pB = 14.",
                "The fairness tie-breaking method is formulated as the following LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution, from ACC.",
                "The objective here is the same as in the Threshold payment rule (see Section 4.3): minimize the maximal error between bidder payoff (at vα ) for the provisional trade and the <br>vcg</br> payoff (at vα ).",
                "Problem FAIR is also solved through constraint generation, using R-WD(i) to add additional violated constraints as necessary.",
                "III: Balance.",
                "Third, we break remaining ties to prefer balanced prices: choosing prices that minimize the maximal price across all items.",
                "Returning again to Example 1, depicted in Figure 1, we see that accuracy and fairness require p(A) + p(B) = 14.",
                "Finally, balance sets p(A) = p(B) = 7.",
                "Balance is justified when, all else being equal, items are more likely to have similar than dissimilar values.6 The LP for balance is formulated as follows: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution from ACC and π∗ represents the error in the optimal solution from FAIR.",
                "Constraint generation is also used to solve BAL, generating new trades for   i as necessary. 4 Problem R-WD(i) is a specialization of the WD problem, in which the objective is to maximize the payoff of a single bidder, rather than the total value across all bidders.",
                "It is solved as a MIP, by rewriting the objective in WD(T, x0 ) as max{viβ · satiβ −   j p∗ j · λij } for agent i.",
                "Thus, the structure of the bid-tree language is exploited in generating new constraints, because this is solved as a concise MIP.",
                "The other bidders are kept around in the MIP (but do not appear in the objective), and are used to define the space of feasible trades. 5 The methods of Dunford et al. [12], that use a nucleolus approach, are also closely related. 6 The use of balance was advocated by Kwasnica et al. [17].",
                "Dunford et al. [12] prefer to smooth prices across rounds.",
                "Comment 1: Lexicographical Refinement.",
                "For all three sub-problems we also perform lexicographical refinement (with respect to bidders in ACC and FAIR, and with respect to goods in BAL).",
                "For instance, in ACC we successively minimize the maximal error across all bidders.",
                "Given an initial solution we first pin down the error on all bidders for whom a constraint (11) is binding.",
                "For such a bidder i, the constraint is replaced with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) and the error to bidder i no longer appears explicitly in the objective.",
                "ACC is then re-solved, and makes progress by further minimizing the maximal error across all bidders yet to be pinned down.",
                "This continues, pinning down any new bidders for whom one of constraints (11) is binding, until the error is lexicographically optimized for all bidders.7 The exact same process is repeated for FAIR and BAL, with bidders pinned down and constraints (15) replaced with π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (where π∗ i is the current objective) in FAIR, and items pinned down and constraints (18) replaced with p∗ j ≥ pj (where p∗ j represents the target for the maximal price on that item) in BAL.",
                "Comment 2: Computation.",
                "All constraints in   i are retained, and this set grows across all stages and across all rounds of the exchange.",
                "Thus, the computational effort in constraint generation is re-used.",
                "In implementation we are careful to address a number of -issues that arise due to floating-point issues.",
                "We prefer to err on the side of being conservative in determining whether or not to add another constraint in performing check (13).",
                "This avoids later infeasibility issues.",
                "In addition, when pinning-down bidders for the purpose of lexicographical refinement we relax the associated bidder-constraints with a small > 0 on the righthand side. 5.3 Revealed-Preference Activity Rules The role of activity rules in the auction is to ensure both consistency and progress across rounds [21].",
                "Consistency in our exchange requires that bidders tighten bounds as the exchange progresses.",
                "Activity rules ensure that bidders are active during early rounds, and promote useful elicitation throughout the exchange.",
                "We adopt a simple revealed-preference (RP) activity rule.",
                "The idea is loosely based around the RP-rule in Ausubel et al. [1], where it is used for one-sided CAs.",
                "The motivation is to require more than simply consistency: we need bidders to provide enough information for the system to be able to to prove that an allocation is (approximately) efficient.",
                "It is helpful to think about the bidders interacting with proxy agents that will act on their behalf in responding to provisional prices pt−1 determined at the end of round t − 1.",
                "The only knowledge that such a proxy has of the valuation of a bidder is through the bid-tree.",
                "Suppose a proxy was queried by the exchange and asked which trade the bidder was most interested in at the provisional prices.",
                "The RP rule says the following: the proxy must have enough 7 For example, applying this to accuracy on Example 2 we solve once and find bidders 1 and 2 are binding, for error δ∗ = 2/3.",
                "We pin these down and then minimize the error to bidders 3 and 4.",
                "Finally, this gives p(A) = p(B) = 10/3 and p(C) = p(D) = 5/3, with accuracy 2/3 to bidders 1 and 2 and 1/3 to bidders 3 and 4. 254 information to be able to determine this surplus-maximizing trade at current prices.",
                "Consider the following examples: Example 7.",
                "A bidder has XOR(+A, +B) and a value of +5 on the leaf +A and a value range of [5,10] on leaf +B.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the proxy knows that however the remaining value uncertainty on +B is resolved the bidder will always (weakly) prefer +B to +A.",
                "Example 8.",
                "A bidder has XOR(+A, +B) and value bounds [5, 10] on the root node and a value of 1 on leaf +A.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the bidder will always prefer +A to +B at equal prices, whichever way the uncertain value on the root node is ultimately resolved.",
                "Overloading notation, let vi ∈ Ti denote a valuation that is consistent with lower and upper valuations in bid tree Ti.",
                "Definition 4.",
                "Bid tree Ti satisfies RP at prices pt−1 if and only if there exists some feasible trade L∗ for which, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. (20) To make this determination for bidder i we solve a sequence of problems, each of which is a variation on the WD problem.",
                "First, we construct a candidate lower-bound trade, which is a feasible trade that solves: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) The solution π∗ l to RP1(i) represents the maximal payoff that bidder i can achieve across all feasible trades, given its pessimistic valuation.",
                "Second, we break ties to find a trade with maximal value uncertainty across all possible solutions to RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] s.t. λ ∈ Feas(x0 ) (22) vi(λi) − pt−1 (λi) ≥ π∗ l (23) We adopt solution L∗ i as our candidate for the trade that may satisfy RP.",
                "To understand the importance of this tiebreaking rule consider Example 7.",
                "The proxy can prove +B but not +A is a best-response for all vi ∈ Ti, and should choose +B as its candidate.",
                "Notice that +B is a counterexample to +A, but not the other way round.",
                "Now, we construct a modified valuation ˜vi, by setting ˜viβ =   viβ , if β ∈ sat(L∗ i ) viβ , otherwise. (24) where sat(L∗ i ) is the set of nodes that are satisfied in the lower-bound tree for trade L∗ i .",
                "Given this modified valuation, we find U∗ to solve: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Let π∗ u denote the payoff from this optimal trade at modified values ˜v.",
                "We call trade U∗ i the witness trade.",
                "We show in Proposition 1 that the RP rule is satisfied if and only if π∗ l ≥ π∗ u. Constructing the modified valuation as ˜vi recognizes that there is shared uncertainty across trades that satisfy the same nodes in a bid tree.",
                "Example 8 helps to illustrate this.",
                "Just using vi in RP3(i), we would find L∗ i is buy A with payoff π∗ l = 3 but then find U∗ i is buy B with π∗ u = 7 and fail RP.",
                "We must recognize that however the uncertainty on the root node is resolved it will affect +A and +B in exactly the same way.",
                "For this reason, we set ˜viβ = viβ = 5 on the root node, which is exactly the same value that was adopted in determining π∗ l .",
                "Then, RP3(i) applied to U∗ i gives buy A and the RP test is judged to be passed.",
                "Proposition 1.",
                "Bid tree Ti satisfies RP given prices pt−1 if and only if any lower-bound trade L∗ i that solves RP1(i) and RP2(i) satisfies: vi(Ti, L∗ i ) − pt−1 (L∗ i ) ≥ ˜vi(Ti, U∗ i ) − pt−1 (U∗ i ), (26) where ˜vi is the modified valuation in Eq. (24).",
                "Proof.",
                "For sufficiency, notice that the difference in payoff between trade L∗ i and another trade λi is unaffected by the way uncertainty is resolved on any node that is satisfied in both L∗ i and λi.",
                "Fixing the values in ˜vi on nodes satisfied in L∗ i has the effect of removing this consideration when a trade U∗ i is selected that satisfies one of these nodes.",
                "On the other hand, fixing the values on these nodes has no effect on trades considered in RP3(i) that do not share a node with L∗ i .",
                "For the necessary direction, we first show that any trade that satisfies RP must solve RP1(i).",
                "Suppose otherwise, that some λi with payoff greater than π∗ l satisfies RP.",
                "But, valuation vi ∈ Ti together with L∗ i presents a counterexample to RP (Eq. 20).",
                "Now, suppose (for contradiction) that some λi with maximal payoff π∗ l but uncertainty less than L∗ i satisfies RP.",
                "Proceed by case analysis.",
                "Case a): only one solution to RP1(i) has uncertain value and so λi has certain value.",
                "But, this cannot satisfy RP because L∗ i with uncertain value would be a counterexample to RP (Eq. 20).",
                "Case b): two or more solutions to RP1(i) have uncertain value.",
                "Here, we first argue that one of these trades must satisfy a (weak) superset of all the nodes with uncertain value that are satisfied by all other trades in this set.",
                "This is by RP.",
                "Without this, then for any choice of trade that solves RP1(i), there is another trade with a disjoint set of uncertain but satisfied nodes that provides a counterexample to RP (Eq. 20).",
                "Now, consider the case that some trade contains a superset of all the uncertain satisfied nodes of the other trades.",
                "Clearly RP2(i) will choose this trade, L∗ i , and λi must satisfy a subset of these nodes (by assumption).",
                "But, we now see that λi cannot satisfy RP because L∗ i would be a counterexample to RP.",
                "Failure to meet the activity rule must have some consequence.",
                "In the current rules, the default action we choose is to set the upper bounds in valuations down to the maximal value of the provisional price on a node8 and the lowerbound value on that node.9 Such a bidder can remain active 8 The provisional price on a node is defined as the minimal total price across all feasible trades for which the subtree rooted at the tree is satisfied. 9 This is entirely analogous to when a bidder in an ascending clock auction stops bidding at a price: she is not permitted to bid at a higher price again in future rounds. 255 within the exchange, but only with valuations that are consistent with these new bounds. 5.4 Bidder Feedback In each round, our default design provides every bidder with the provisional trade and also with the current provisional prices.",
                "See 7 for an additional discussion.",
                "We also provide guidance to help a bidder meet the RP rule.",
                "Let sat(L∗ i ) and sat(U∗ i ) denote the nodes that are satisfied in trades L∗ i and U∗ i , as computed in RP1-RP3.",
                "Lemma 2.",
                "When RP fails, a bidder must increase a lower bound on at least one node in sat(L∗ i ) \\ sat(U∗ i ) or decrease an upper bound on at least one node in sat(U∗ i ) \\ sat(L∗ i ) in order to meet the activity rule.",
                "Proof.",
                "Changing the upper- or lower- values on nodes that are not satisfied by either trade does not change L∗ i or U∗ i , and does not change the payoff from these trades.",
                "Thus, the RP condition will continue to fail.",
                "Similarly, changing the bounds on nodes that are satisfied in both trades has no effect on revealed preference.",
                "A change to a lower bound on a shared node affects both L∗ i and U∗ i identically because of the use of the modified valuation to determine U∗ i .",
                "A change to an upper bound on a shared node has no effect in determining either L∗ i or U∗ i .",
                "Note that when sat(U∗ i ) = sat(L∗ i ) then condition (26) is always trivially satisfied, and so the guidance in the lemma is always well-defined when RP fails.",
                "This is an elegant feedback mechanism because it is adaptive.",
                "Once a bidder makes some changes on some subset of these nodes, the bidder can query the exchange.",
                "The exchange can then respond yes, or can revise the set of nodes sat(λ∗ l ) and sat(λ∗ u) as necessary. 5.5 Termination Conditions Once each bidder has committed its new bids (and either met the RP rule or suffered the penalty) then round t closes.",
                "At this point, the task is to determine the new α-valuation, and in turn the provisional allocation λt and provisional prices pt .",
                "A termination condition is also checked, to determine whether to move the exchange to a last-and-final round.",
                "To define the α-valuation we compute the following two quantities: Pessimistic at Pessimistic (PP) Determine an efficient trade, λ∗ l , at pessimistic values, i.e. to solve maxλ   i vi(λi), and set PP=  i vi(λ∗ li).",
                "Pessimistic at Optimistic (PO) Determine an efficient trade, λ∗ u, at optimistic values, i.e. to solve maxλ   i vi(λi), and set PO=  i vi(λ∗ ui).",
                "First, note that PP ≥ PO and PP ≥ 0 by definition, for all bid-trees, although PO can be negative (because the right trade at v is not currently a useful trade at v).",
                "Recognizing this, define γeff (PP, PO) = 1 + PP − PO PP , (27) when PP > 0, and observe that γeff (PP, PO) ≥ 1 when this is defined, and that γeff (PP, PO) will start large and then trend towards 1 as the optimistic allocation converges towards the pessimistic allocation.",
                "In each round, we define αeff ∈ [0, 1] as: αeff =   0 when PP is 0 1/γeff otherwise (28) which is 0 while PP is 0 and then trends towards 1 once PP> 0 in some round.",
                "This is used to define α-valuation vα i = αeff vi + (1 − αeff )vi, ∀i, (29) which is used to define the provisional allocation and provisional prices.",
                "The effect is to endogenously define a schedule for moving from optimistic to pessimistic values across rounds, based on how close the trades are to one another.",
                "Termination Condition.",
                "In moving to the last-and-final round, and finally closing, we also care about the convergence of payments, in addition to the convergence towards an efficient trade.",
                "For this we introduce another parameter, αthresh ∈ [0, 1], that trends from 0 to 1 as the Threshold payments at lower and upper valuations converge.",
                "Consider the following parameter: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive) , (30) which is defined for PP > 0, where pthresh(v) denotes the Threshold payments at valuation profile v, Nactive is the number of bidders that are actively engaged in trade in the PP trade, and || · ||2 is the L2-norm.",
                "Note that γthresh is defined for payments and not payoffs.",
                "This is appropriate because it is the accuracy of the outcome of the exchange that matters: i.e. the trade and the payments.",
                "Given this, we define αthresh =   0 when PP is 0 1/γthresh otherwise (31) which is 0 while PP is 0 and then trends towards 1 as progress is made.",
                "Definition 5 (termination).",
                "ICE transitions to a lastand-final round when one of the following holds: 1. αeff ≥ CUTOFFeff and αthresh ≥ CUTOFFthresh, 2. there is no trade at the optimistic values, where CUTOFFeff , CUTOFFthresh ∈ (0, 1] determine the accuracy required for termination.",
                "At the end of the last-and-final round vα = v is used to define the final trade and the final Threshold payments.",
                "Example 9.",
                "Consider again Example 1, and consider the upper and lower bounds as depicted in Figure 1.",
                "First, if the sellers bounds were [−20, −4] then there is an optimistic trade but no pessimistic trade, and PO = −4 and PP = 0, and αeff = 0.",
                "At the bounds depicted, both the optimistic and the pessimistic trades occur and PO = PP = 4 and αeff = 1.",
                "However, we can see the Threshold payments are (17, −17) at v but (14, −14) at v. Evaluating γthresh , we have γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, and αthresh = 2/5.",
                "For CUTOFFthresh < 2/5 the exchange would remain open.",
                "On the other hand, if the buyers value for +AB was between [18, 24] and the sellers value for −AB was between [−12, −6], the Threshold payments are (15, −15) at both upper and lower bounds, and αthresh = 1. 256 Component Purpose Lines Agent.",
                "Captures strategic behavior and information revelation decisions 762 Model Support Provides XML support to load goods and valuations into world 200 World Keeps track of all agent, good, and valuation details 998 Exchange Driver & Communication Controls exchange, and coordinates remote agent behavior 585 Bidding Language Implements the tree-based bidding language 1119 Activity Rule Engine Implements the revealed preference rule with range support 203 Closing Rule Engine Checks if auction termination condition reached 137 WD Engine Provides WD-related logic 377 Pricing Engine Provides Pricing-related logic 460 MIP Builders Translates logic used by engines into our general optimizer formulation 346 Pricing Builders Used by three pricing stages 256 Winner Determination Builders Used by WD, activity rule, closing rule, and pricing constraint generation 365 Framework Support code; eases modular replacement of above components 510 Table 1: Exchange Component and Code Breakdown. 6.",
                "SYSTEMS INFRASTRUCTURE ICE is approximately 6502 lines of Java code, broken up into the functional packages described in Table 1.10 The prototype is modular so that researchers may easily replace components for experimentation.",
                "In addition to the core exchange discussed in this paper, we have developed an agent component that allows a user to simulate the behavior and knowledge of other players in the system, better allowing a user to formulate their strategy in advance of actual play.",
                "A user specifies a valuation model in an XMLinterpretation of our bidding language, which is revealed to the exchange via the agents strategy.",
                "Major exchange tasks are handled by engines that dictate the non-optimizer specific logic.",
                "These engines drive the appropriate MIP/LP builders.",
                "We realized that all of our optimization formulations boil down to two classes of optimization problem.",
                "The first, used by winner determination, activity rule, closing rule, and constraint generation in pricing, is a MIP that finds trades that maximize value, holding prices and slacks constant.",
                "The second, used by the three pricing stages, is an LP that holds trades constant, seeking to minimize slack, profit, or prices.",
                "We take advantage of the commonality of these problems by using common LP/MIP builders that differ only by a few functional hooks to provide the correct variables for optimization.",
                "We have generalized our back-end optimization solver interface11 (we currently support CPLEX and the LGPL- licensed LPSolve), and can take advantage of the load-balancing and parallel MIP/LP solving capability that this library provides. 7.",
                "DISCUSSION The bidding language was defined to allow for perfect symmetry between buyers and sellers and provide expressiveness in an exchange domain, for instance for mixed bidders interested in executing trades such as swaps.",
                "This proved especially challenging.",
                "The breakthrough came when we focused on changes in value for trades rather than providing absolute values for allocations.",
                "For simplicity, we require the same tree structure for both the upper and lower valuations. 10 Code size is measured in physical source line of code (SLOC), as generated using David A. Wheelers SLOC Count.",
                "The total of 6502 includes 184 for instrumentation (not shown in the table).",
                "The JOpt solver interface is another 1964 lines, and Castor automatically generates around 5200 lines of code for XML file manipulation. 11 http://econcs.eecs.harvard.edu/jopt This allows the language itself to ensure consistency (with the upper value at least the lower value on all trades) and enforce monotonic tightening of these bounds for all trades across rounds.",
                "It also provides for an efficient method to check the RP activity rule, because it makes it simple to reason about shared uncertainty between trades.",
                "The decision to adopt a direct and proxied approach in which bidders express their upper and lower values to a trusted proxy agent that interacts with the exchange was made early in the design process.",
                "In many ways this is the clearest and most immediate way to generalize the design in Parkes et al. [24] and make it iterative.",
                "In addition, this removes much opportunity for strategic manipulation: bidders are restricted to making (incremental) statements about their valuations.",
                "Another advantage is that it makes the activity rule easy to explain: bidders can always meet the activity rule by tightening bounds such that their true value remains in the support.12 Perhaps most importantly, having explicit information on upper and lower values permits progress in early rounds, even while there is no efficient trade at pessimistic values.",
                "Upper and lower bound information also provides guidance about when to terminate.",
                "Note that taken by itself, PP = PO does not imply that the current provisional trade is efficient with respect to all values consistent with current value information.",
                "The difference in values between different trades, aggregated across all bidders, could be similar at lower and upper bounds but quite different at intermediate values (including truth).",
                "Nevertheless, we conjecture that PP = PO will prove an excellent indicator of efficiency in practical settings where the shape of the upper and lower valuations does convey useful information.",
                "This is worthy of experimental investigation.",
                "Moreover, the use of price and RP activity provides additional guarantees.",
                "We adopted linear prices (prices on individual items) rather than non-linear prices (with prices on a trade not equal to the sum of the prices on the component items) early in the design process.",
                "The conciseness of this price representation is very important for computational tractability within the exchange and also to promote simplicity and transparency for bidders.",
                "The RP activity rule was adopted later, and is a good choice because of its excellent theoretical properties when coupled with CE prices.",
                "The following can be easily established: given exact CE prices pt−1 for provisional trade 12 This is in contrast to indirect price-based approaches, such as clock-proxy [1], in which bidders must be able to reason about the RP-constraints implied by bids in each round. 257 λt−1 at valuations vα , then if the upper and lower values at the start of round t already satisfy the RP rule (and without the need for any tie-breaking), the provisional trade is efficient for all valuations consistent with the current bid trees.",
                "When linear CE prices exist, this provides for a soundness and completeness statement: if PP = PO, linear CE prices exist, and the RP rule is satisfied, the provisional trade is efficient (soundness); if prices are exact CE prices for the provisional trade at vα , but the trade is inefficient with respect to some valuation profile consistent with the current bid trees, then at least one bidder must fail RP with her current bid tree and progress will be made (completeness).",
                "Future work must study convergence experimentally, and extend this theory to allow for approximate prices.",
                "Some strategic aspects of our ICE design deserve comment, and further study.",
                "First, we do not claim that truthfully responding to the RP rule is an ex post equilibrium.13 However, the exchange is designed to mimic the Threshold rule in its payment scheme, which is known to have useful incentive properties [16].",
                "We must be careful, though.",
                "For instance we do not suggest to provide αeff to bidders, because as αeff approaches 1 it would inform bidders that bid values are becoming irrelevant to determining the trade but merely used to determine payments (and bidders would become increasingly reluctant to increase their lower valuations).",
                "Also, no consideration has been given in this work to collusion by bidders.",
                "This is an issue that deserves some attention in future work. 8.",
                "CONCLUSIONS In this work we designed and prototyped a scalable and highly-expressive iterative combinatorial exchange.",
                "The design includes many interesting features, including: a new bid-tree language for exchanges, a new method to construct approximate linear prices from expressive languages, and a proxied elicitation method with optimistic and pessimistic valuations with a new method to evaluate a revealed- preference activity rule.",
                "The exchange is fully implemented in Java and is in a validation phase.",
                "The next steps for our work are to allow bidders to refine the structure of the bid tree in addition to values on the tree.",
                "We intend to study the elicitation properties of the exchange and we have put together a test suite of exchange problem instances.",
                "In addition, we are beginning to engage in collaborations to apply the design to airline takeoff and landing slot scheduling and to resource allocation in widearea network distributed computational systems.",
                "Acknowledgments We would like to dedicate this paper to all of the participants in CS 286r at Harvard University in Spring 2004.",
                "This work is supported in part by NSF grant IIS-0238147. 9.",
                "REFERENCES [1] L. Ausubel, P. Cramton, and P. Milgrom.",
                "The clock-proxy auction: A practical combinatorial auction design.",
                "In Cramton et al. [9], chapter 5. [2] M. Babaioff, N. Nisan, and E. Pavlov.",
                "Mechanisms for a spatially distributed market.",
                "In Proc. 5th ACM Conf. on Electronic Commerce, pages 9-20.",
                "ACM Press, 2001. 13 Given the Myerson-Satterthwaite impossibility theorem [22] and the method by which we determine the trade we should not expect this. [3] M. Ball, G. Donohue, and K. Hoffman.",
                "Auctions for the safe, efficient, and equitable allocation of airspace system resources.",
                "In S. Cramton, Shoham, editor, Combinatorial Auctions. 2004.",
                "Forthcoming. [4] D. Bertsimas and J. Tsitsiklis.",
                "Introduction to Linear Optimization.",
                "Athena Scientific, 1997. [5] S. Bikhchandani and J. M. Ostroy.",
                "The package assignment model.",
                "Journal of Economic Theory, 107(2):377-406, 2002. [6] C. Boutilier.",
                "A pomdp formulation of preference elicitation problems.",
                "In Proc. 18th National Conference on Artificial Intelligence (AAAI-02), 2002. [7] C. Boutilier and H. Hoos.",
                "Bidding languages for combinatorial auctions.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), 2001. [8] W. Conen and T. Sandholm.",
                "Preference elicitation in combinatorial auctions.",
                "In Proc. 3rd ACM Conf. on Electronic Commerce (EC-01), pages 256-259.",
                "ACM Press, New York, 2001. [9] P. Cramton, Y. Shoham, and R. Steinberg, editors.",
                "Combinatorial Auctions.",
                "MIT Press, 2004. [10] S. de Vries, J. Schummer, and R. V. Vohra.",
                "On ascending Vickrey auctions for heterogeneous objects.",
                "Technical report, MEDS, Kellogg School, Northwestern University, 2003. [11] S. de Vries and R. V. Vohra.",
                "Combinatorial auctions: A survey.",
                "Informs Journal on Computing, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana, and T. Wilson.",
                "Testing linear pricing algorithms for use in ascending combinatorial auctions.",
                "Technical report, SEOR, George Mason University, 2003. [13] Y. Fu, J.",
                "Chase, B. Chun, S. Schwab, and A. Vahdat.",
                "Sharp: an architecture for secure resource peering.",
                "In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 133-148.",
                "ACM Press, 2003. [14] B. Hudson and T. Sandholm.",
                "Effectiveness of query types and policies for preference elicitation in combinatorial auctions.",
                "In Proc. 3rd Int.",
                "Joint.",
                "Conf. on Autonomous Agents and Multi Agent Systems, pages 386-393, 2004. [15] V. Krishna.",
                "Auction Theory.",
                "Academic Press, 2002. [16] D. Krych.",
                "Calculation and analysis of Nash equilibria of Vickrey-based payment rules for combinatorial exchanges, Harvard College, April 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter, and C. DeMartini.",
                "A new and improved design for multi-object iterative auctions.",
                "Management Science, 2004.",
                "To appear. [18] E. Kwerel and J. Williams.",
                "A proposal for a rapid transition to market allocation of spectrum.",
                "Technical report, FCC Office of Plans and Policy, Nov 2002. [19] S. M. Lahaie and D. C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In Proc.",
                "ACM Conf. on Electronic Commerce, pages 180-188, 2004. [20] R. P. McAfee.",
                "A dominant strategy double auction.",
                "J. of Economic Theory, 56:434-450, 1992. [21] P. Milgrom.",
                "Putting auction theory to work: The simultaneous ascending auction.",
                "J.Pol.",
                "Econ., 108:245-272, 2000. [22] R. B. Myerson and M. A. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [23] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. 2nd ACM Conf. on Electronic Commerce (EC-00), pages 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), pages 1161-1168, 2001. [25] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, July 2000. [26] S. J. Rassenti, V. L. Smith, and R. L. Bulfin.",
                "A combinatorial mechanism for airport time slot allocation.",
                "Bell Journal of Economics, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc, and R. M. Harstad.",
                "Computationally manageable combinatorial auctions.",
                "Management Science, 44(8):1131-1147, 1998. [28] T. Sandholm and C. Boutilier.",
                "Preference elicitation in combinatorial auctions.",
                "In Cramton et al. [9], chapter 10. [29] P. R. Wurman and M. P. Wellman.",
                "AkBA: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, pages 21-29, 2000. 258"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Se utiliza un esquema de pago basado en \"VCG\" que se ha demostrado que mitiga las oportunidades de negociación y el comportamiento estratégico para determinar los pagos finales.",
                "Estos elementos se pueden volver a los agentes que vendieron los artículos, es decir, para los cuales λij <0. 4.3 Pagos de umbral informático La regla de pago de umbral se basa en los pagos en el mecanismo Vickrey-Clarke-Groves (\"VCG\") [15],que en sí mismo es sincero y eficiente, pero no satisface el equilibrio presupuestario.",
                "En \"VCG\", el pago pagado por el Agente I es PVCG, I = ˆV (λ ∗ I) - (V ∗ - V - I) (7) donde λ ∗ es el comercio eficiente, V ∗ es el valor informado de estoEl comercio, y V - I es el valor reportado del comercio eficiente que se implementaría sin licitador i.",
                "Llamamos ∆ \"VCG\" I = V ∗ - V - I el descuento de \"VCG\".",
                "La regla de pago de umbral [24] determina los pagos balanceados con presupuesto para minimizar el error máximo en todos los agentes al resultado \"VCG\".",
                "El esquema de pago de umbral implementa el comercio eficiente λ ∗ dadas ofertas y establece pagos pthresh, i = ˆVi (λ ∗ i) - ∆i, donde ∆ = (∆1, ..., ∆n) está configurado para minimizar maxi (∆ \"VCG\" I-∆I) sujeto a ∆I ≤ ∆ \"VCG\" I e I ∆I ≤ V ∗ (esto da un equilibrio presupuestario).",
                "En el Ejemplo 2, los descuentos \"VCG\" son (9, 2, 0, 1, 0) para el vendedor y cuatro compradores, respectivamente, los pagos \"VCG\" son (−9, 4, 0, 2, 0) y el intercambio se ejecutacon un déficit de -3.",
                "Esto minimiza el peor error de los casos a los descuentos \"VCG\" en todos los esquemas de pago equilibrados del presupuesto.",
                "El objetivo aquí es el mismo que en la regla de pago umbral (ver Sección 4.3): minimice el error máximo entre el pago del postor (en Vα) para el comercio provisional y el pago \"VCG\" (en Vα)."
            ],
            "translated_text": "",
            "candidates": [
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG",
                "VCG"
            ],
            "error": []
        },
        "preference elicitation": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "ICE: An Iterative Combinatorial Exchange David C. Parkes∗ † Ruggiero Cavallo† Nick Elprin† Adam Juda† S´ebastien Lahaie† Benjamin Lubin† Loizos Michael† Jeffrey Shneidman† Hassan Sultan† ABSTRACT We present the first design for an iterative combinatorial exchange (ICE).",
                "The exchange incorporates a tree-based bidding language that is concise and expressive for CEs.",
                "Bidders specify lower and upper bounds on their value for different trades.",
                "These bounds allow price discovery and useful <br>preference elicitation</br> in early rounds, and allow termination with an efficient trade despite partial information on bidder valuations.",
                "All computation in the exchange is carefully optimized to exploit the structure of the bid-trees and to avoid enumerating trades.",
                "A proxied interpretation of a revealedpreference activity rule ensures progress across rounds.",
                "A VCG-based payment scheme that has been shown to mitigate opportunities for bargaining and strategic behavior is used to determine final payments.",
                "The exchange is fully implemented and in a validation phase.",
                "Categories and Subject Descriptors: I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence; J.4 [Computer Applications]: Social and Behavioral Sciences -Economics General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION Combinatorial exchanges combine and generalize two different mechanisms: double auctions and combinatorial auctions.",
                "In a double auction (DA), multiple buyers and sellers trade units of an identical good [20].",
                "In a combinatorial auction (CA), a single seller has multiple heterogeneous items up for sale [11].",
                "Buyers may have complementarities or substitutabilities between goods, and are provided with an expressive bidding language.",
                "A common goal in both market designs is to determine the efficient allocation, which is the allocation that maximizes total value.",
                "A combinatorial exchange (CE) [24] is a combinatorial double auction that brings together multiple buyers and sellers to trade multiple heterogeneous goods.",
                "For example, in an exchange for wireless spectrum, a bidder may declare that she is willing to pay $1 million for a trade where she obtains licenses for New York City, Boston, and Philadelphia, and loses her license for Washington DC.",
                "Thus, unlike a DA, a CE allows all participants to express complex valuations via expressive bids.",
                "Unlike a CA, a CE allows for fragmented ownership, with multiple buyers and sellers and agents that are both buying and selling.",
                "CEs have received recent attention both in the context of wireless spectrum allocation [18] and for airport takeoff and landing slot allocation [3].",
                "In both of these domains there are incumbents with property rights, and it is important to facilitate a complex multi-way reallocation of resources.",
                "Another potential application domain for CEs is to resource allocation in shared distributed systems, such as PlanetLab [13].",
                "The instantiation of our general purpose design to specific domains is a compelling next step in our research.",
                "This paper presents the first design for an iterative combinatorial exchange (ICE).",
                "The genesis of this project was a class, CS 286r Topics at the Interface between Economics and Computer Science, taught at Harvard University in Spring 2004.1 The entire class was dedicated to the design and prototyping of an iterative CE.",
                "The ICE design problem is multi-faceted and quite hard.",
                "The main innovation in our design is an expressive yet concise tree-based bidding language (which generalizes known languages such as XOR/OR [23]), and the tight coupling of this language with efficient algorithms for price-feedback to guide bidding, winner-determination to determine trades, and revealed-preference activity rules to ensure progress across rounds.",
                "The exchange is iterative: bidders express upper and lower valuations on trades by annotating their bid-tree, and then tighten these bounds in response to price feedback in each round.",
                "The Threshold payment rule, introduced by Parkes et al. [24], is used to determine final payments.",
                "The exchange has a number of interesting theoretical properties.",
                "For instance, when there exist linear prices we establish soundness and completeness: for straightforward bidders that adjust their bounds to meet activity rules while keeping their true value within the bounds, the exchange will terminate with the efficient allocation.",
                "In addition, the 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Truth Agent Act Rule WD ACC FAIR BALClosing RuleVickreyThreshold DONE !",
                "DONE 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER 2,2 +A +15 +8 +B +15 +8 BUYER 2,2 -A -2 -6 -B -2 -6 SELLER BUYER, buy AB SELLER, sell AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PBUYER = 16 - (4-0) = 12 PSELLER = -12 - (4-0) = -16 PBUYER = 14 PSELLER = -14 Pessim istic O ptim istic = 1 Figure 1: ICE System Flow of Control efficient allocation can often be determined without bidders revealing, or even knowing, their exact value for all trades.",
                "This is essential in complex domains where the valuation problem can itself be very challenging for a participant [28].",
                "While we cannot claim that straightforward bidding is an equilibrium of the exchange (and indeed, should not expect to by the Myerson-Satterthwaite impossibility theorem [22]), the Threshold payment rule minimizes the ex post incentive to manipulate across all budget-balanced payment rules.",
                "The exchange is implemented in Java and is currently in validation.",
                "In describing the exchange we will first provide an overview of the main components and introduce several working examples.",
                "Then, we introduce the basic components for a simple one-shot variation in which bidders state their exact values for trades in a single round.",
                "We then describe the full iterative exchange, with upper and lower values, price-feedback, activity rules, and termination conditions.",
                "We state some theoretical properties of the exchange, and end with a discussion to motivate our main design decisions, and suggest some next steps. 2.",
                "AN OVERVIEW OF THE ICE DESIGN The design has four main components, which we will introduce in order through the rest of the paper: • Expressive and concise tree-based bidding language.",
                "The language describes values for trades, such as my value for selling AB and buying C is $100, or my value for selling ABC is -$50, with negative values indicating that a bidder must receive a payment for the trade to be acceptable.",
                "The language allows bidders to express upper and lower bounds on value, which can be tightened across rounds. • Winner Determination.",
                "Winner-determination (WD) is formulated as a mixed-integer program (MIP), with the structure of the bid-trees captured explicitly in the formulation.",
                "Comparing the solution at upper and lower values allows for a determination to be made about termination, with progress in intermediate rounds driven by an intermediate valuation and the lower values adopted on termination. • Payments.",
                "Payments are computed using the Threshold payment rule [24], with the intermediate valuations adopted in early rounds and lower values adopted on termination. • Price feedback.",
                "An approximate price is computed for each item in the exchange in each round, in terms of the intermediate valuations and the provisional trade.",
                "The prices are optimized to approximate competitive equilibrium prices, and further optimized to best approximate the current Threshold payments with remaining ties broken to favor prices that are balanced across different items.",
                "In computing the prices, we adopt the methods of constraint-generation to exploit the structure of the bidding language and avoid enumerating all feasible trades.",
                "The subproblem to generate new constraints is a variation of the WD problem. • Activity rule.",
                "A revealed-preference activity rule [1] ensures progress across rounds.",
                "In order to remain active, a bidder must tighten bounds so that there is enough information to define a trade that maximizes surplus at the current prices.",
                "Another variation on the WD problem is formulated, both to verify that the activity rule is met and also to provide feedback to a bidder to explain how to meet the rule.",
                "An outline of the ICE system flow of control is provided in Figure 1.",
                "We will return to this example later in the paper.",
                "For now, just observe in this two-agent example that the agents state lower and upper bounds that are checked in the activity rule, and then passed to winner-determination (WD), and then through three stages of pricing (accuracy, fairness, balance).",
                "On passing the closing rule (in which parameters αeff and αthresh are checked for convergence of the trade and payments), the exchange goes to a last-and-final round.",
                "At the end of this round, the trade and payments are finally determined, based on the lower valuations. 2.1 Related Work Many ascending-price one-sided CAs are known in the literature [10, 25, 29].",
                "Direct elicitation approaches have also been proposed for one-sided CAs in which agents respond to explicit queries about their valuations [8, 14, 19].",
                "A number of ascending CAs are designed to work with simple prices on items [12, 17].",
                "The price generation methods that we use in ICE generalize the methods in these earlier papers.",
                "Parkes et al. [24] studied sealed-bid combinatorial exchanges and introduced the Threshold payment rule.",
                "Subsequently, Krych [16] demonstrated experimentally that the Threshold rule promotes efficient allocations.",
                "We are not aware of any previous studies of iterative CEs.",
                "Dominant strategy DAs are known for unit demand [20] and also for single-minded agents [2].",
                "No dominant strategy mechanisms are known for the general CE problem.",
                "ICE is a hybrid auction design, in that it couples simple item prices to drive bidding in early rounds with combinatorial WD and payments, a feature it shares with the clock-proxy design of Ausubel et al. [1] for one-sided CAs.",
                "We adopt a variation on the clock-proxy auctionss revealedpreference activity rule.",
                "The bidding language shares some structural elements with the LGB language of Boutilier and Hoos [7], but has very different semantics.",
                "Rothkopf et al. [27] also describe a restricted tree-based bidding language.",
                "In LGB, the semantics are those of propositional logic, with the same items in an allocation able to satisfy a tree in multiple places.",
                "Although this can make LGB especially concise in some settings, the semantics that we propose appear to provide useful locality, so that the value of one component in a tree can be understood independently from the rest of the tree.",
                "The idea of capturing the structure of our bidding language explicitly within a mixed-integer programming formulation follows the developments in Boutilier [6]. 3.",
                "PRELIMINARIES In our model, we consider a set of goods, indexed {1, . . . , m} and a set of bidders, indexed {1, . . . , n}.",
                "The initial allocation of goods is denoted x0 = (x0 1, . . . , x0 n), with x0 i = (x0 i1, . . . , x0 im) and x0 ij ≥ 0 for good j indicating the number 250 of units of good j held by bidder i.",
                "A trade λ = (λ1, . . . , λn) denotes the change in allocation, with λi = (λi1, . . . , λim) where λij ∈   is the change in the number of units of item j to bidder i.",
                "So, the final allocation is x1 = x0 + λ.",
                "Each bidder has a value vi(λi) ∈ ¡ for a trade λi.",
                "This value can be positive or negative, and represents the change in value between the final allocation x0 i +λi and the initial allocation x0 i .",
                "Utility is quasi-linear, with ui(λi, p) = vi(λi)−p for trade λi and payment p ∈ ¡ .",
                "Price p can be negative, indicating the bidder receives a payment for the trade.",
                "We use the term payoff interchangeably with utility.",
                "Our goal in the ICE design is to implement the efficient trade.",
                "The efficient trade, λ∗ , maximizes the total increase in value across bidders.",
                "Definition 1 (Efficient trade).",
                "The efficient trade λ∗ solves max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Constraints (1) ensure that no agent sells more items than it has in its initial allocation.",
                "Constraints (2) provide free disposal, and allows feasible trades to sell more items than are purchased (but not vice versa).",
                "Later, we adopt Feas(x0 ) to denote the set of feasible trades, given these constraints and given an initial allocation x0 = (x0 1, . . . , x0 n). 3.1 Working Examples In this section, we provide three simple examples of instances that we will use to illustrate various components of the exchange.",
                "All three examples have only one seller, but this is purely illustrative.",
                "Example 1.",
                "One seller and one buyer, two goods {A, B}, with the seller having an initial allocation of AB.",
                "Changes in values for trades: seller buyer AND(−A, −B) AND(+A, +B) -10 +20 The AND indicates that both the buyer and the seller are only interested in trading both goods as a bundle.",
                "Here, the efficient (value-maximizing) trade is for the seller to sell AB to the buyer, denoted λ∗ = ([−1, −1], [+1, +1]).",
                "Example 2.",
                "One seller and four buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 buyer 3 buyer 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 The OR indicates that the seller is willing to sell any number of goods.",
                "The XOR indicates that buyers 2 and 4 are willing to buy at most one of the two goods in which they are interested.",
                "The efficient trade is for bundle AB to go to buyer 1 and bundle CD to buyer 3, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 BUYER 2,2 -A -5 -B -5 SELLER Example 1: Example 3: 2,2 +C +D BUYER 2 2,2 +A +B BUYER 1 +11 +84,4 -B SELLER -A -C -D Example 2: 1,1 +A +B BUYER 2 2,2 +A +B BUYER 1 +6 +40,4 -B SELLER -C -D-A 1,1 +C +D BUYER 4 2,2 +C +D +3 +2 BUYER 3 -18 Figure 2: Example Bid Trees.",
                "Example 3.",
                "One seller and two buyers, four goods {A, B, C, D}, with the seller having an initial allocation of ABCD.",
                "Changes in values for trades: seller buyer1 buyer 2 AND(−A, −B, −C, −D) AND(+A, +B) AND(+C, +D) -18 +11 +8 The efficient trade is for bundle AB to go to buyer 1 and bundle CD to go to buyer 2, denoted λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4.",
                "A ONE-SHOT EXCHANGE DESIGN The description of ICE is broken down into two sections: one-shot (sealed-bid) and iterative.",
                "In this section we abstract away the iterative aspect and introduce a specialization of the tree-based language that supports only exact values on nodes. 4.1 Tree-Based Bidding Language The bidding language is designed to be expressive and concise, entirely symmetric with respect to buyers and sellers, and to extend to capture bids from mixed buyers and sellers, ranging from simple swaps to highly complex trades.",
                "Bids are expressed as annotated bid trees, and define a bidders value for all possible trades.",
                "The language defines changes in values on trades, with leaves annotated with traded items and nodes annotated with changes in values (either positive or negative).",
                "The main feature is that it has a general interval-choose logical operator on internal nodes, and that it defines careful semantics for propagating values within the tree.",
                "We illustrate the language on each of Examples 1-3 in Figure 2.",
                "The language has a tree structure, with trades on items defined on leaves and values annotated on nodes and leaves.",
                "The nodes have zero values where no value is indicated.",
                "Internal nodes are also labeled with interval-choose (IC) ranges.",
                "Given a trade, the semantics of the language define which nodes in the tree can be satisfied, or switched-on.",
                "First, if a child is on then its parent must be on.",
                "Second, if a parent node is on, then the number of children that are on must be within the IC range on the parent node.",
                "Finally, leaves in which the bidder is buying items can only be on if the items are provided in the trade.",
                "For instance, in Example 2 we can consider the efficient trade, and observe that in this trade all nodes in the trees of buyers 1 and 3 (and also the seller), but none of the nodes in the trees of buyers 2 and 4, can be on.",
                "On the other hand, in 251 the trade in which A goes to buyer 2 and D to buyer 4, then the root and appropriate leaf nodes can be on for buyers 2 and 4, but no nodes can be on for buyers 1 and 3.",
                "Given a trade there is often a number of ways to choose the set of satisfied nodes.",
                "The semantics of the language require that the nodes that maximize the summed value across satisfied nodes be activated.",
                "Consider bid tree Ti from bidder i.",
                "This defines nodes β ∈ Ti, of which some are leaves, Leaf (i) ⊆ Ti.",
                "Let Child(β) ⊆ Ti denote the children of a node β (that is not itself a leaf).",
                "All nodes except leaves are labeled with the interval-choose operator [IC x i (β), ICy i (β)].",
                "Every node is also labeled with a value, viβ ∈ ¡ .",
                "Each leaf β is labeled with a trade, qiβ ∈   m (i.e., leaves can define a bundled trade on more than one type of item.)",
                "Given a trade λi to bidder i, the interval-choose operators and trades on leaves define which nodes can be satisfied.",
                "There will often be a choice.",
                "Ties are broken to maximize value.",
                "Let satiβ ∈ {0, 1} denote whether node β is satisfied.",
                "Solution sati is valid given tree Ti and trade λi, written sati ∈ valid(Ti, λi), if and only if: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Child(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Leaf (i) (5) In words, a set of leaves can only be considered satisfied given trade λi if the total increase in quantity summed across all such leaves is covered by the trade, for all goods (Eq. 4).",
                "This works for sellers as well as buyers: for sellers a trade is negative and this requires that the total number of items indicated sold in the tree is at least the total number sold as defined in the trade.",
                "We also need upwards-propagation: any time a node other than the root is satisfied then its parent must be satisfied (by   β ∈Child(β) satiβ ≤ ICy i (β)satiβ in Eq. 5).",
                "Finally, we need downwards-propagation: any time an internal node is satisfied then the appropriate number of children must also be satisfied (Eq. 5).",
                "The total value of trade λi, given bid-tree Ti, is defined as: vi(Ti, λi) = max sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) The tree-based language generalizes existing languages.",
                "For instance: IC(2, 2) on a node with 2 children is equivalent to an AND operator; IC(1, 3) on a node with 3 children is equivalent to an OR operator; and IC(1, 1) on a node with 2 children is equivalent to an XOR operator.",
                "Similarly, the XOR/OR bidding languages can be directly expressed as a bid tree in our language.2 4.2 Winner Determination This section defines the winner determination problem, which is formulated as a MIP and solved in our implementation with a commercial solver.3 The solver uses branchand-bound search with dynamic cut generation and branching heuristics to solve large MIPs in economically feasible run times. 2 The OR* language is the OR language with dummy items to provide additional structure.",
                "OR* is known to be expressive and concise.",
                "However, it is not known whether OR* dominates XOR/OR in terms of conciseness [23]. 3 CPLEX, www.ilog.com In defining the MIP representation we are careful to avoid an XOR-based enumeration of all bundles.",
                "A variation on the WD problem is reused many times within the exchange, e.g. for column generation in pricing and for checking revealed preference.",
                "Given bid trees T = (T1, . . . , Tn) and initial allocation x0 , the mixed-integer formulation for WD is: WD(T, x0 ) : max λ,sat ¢ i ¢ β∈Ti viβ · satiβ s.t. (1), (2), satiβ ∈ {0, 1}, λij ∈   sati ∈ valid(Ti, λi), ∀i Some goods may go unassigned because free disposal is allowed within the clearing rules of winner determination.",
                "These items can be allocated back to agents that sold the items, i.e. for which λij < 0. 4.3 Computing Threshold Payments The Threshold payment rule is based on the payments in the Vickrey-Clarke-Groves (VCG) mechanism [15], which itself is truthful and efficient but does not satisfy budget balance.",
                "Budget-balance requires that the total payments to the exchange are equal to the total payments made by the exchange.",
                "In VCG, the payment paid by agent i is pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) where λ∗ is the efficient trade, V ∗ is the reported value of this trade, and V−i is the reported value of the efficient trade that would be implemented without bidder i.",
                "We call ∆vcg,i = V ∗ − V−i the VCG discount.",
                "For instance, in Example 1 pvcg,seller = −10 − (+10 − 0) = −20 and pvcg,buyer = +20 − (+10 − 0) = 10, and the exchange would run at a budget deficit of −20 + 10 = −10.",
                "The Threshold payment rule [24] determines budgetbalanced payments to minimize the maximal error across all agents to the VCG outcome.",
                "Definition 2.",
                "The Threshold payment scheme implements the efficient trade λ∗ given bids, and sets payments pthresh,i = ˆvi(λ∗ i ) − ∆i, where ∆ = (∆1, . . . , ∆n) is set to minimize maxi(∆vcg,i − ∆i) subject to ∆i ≤ ∆vcg,i and   i ∆i ≤ V ∗ (this gives budget-balance).",
                "Example 4.",
                "In Example 2, the VCG discounts are (9, 2, 0, 1, 0) to the seller and four buyers respectively, VCG payments are (−9, 4, 0, 2, 0) and the exchange runs at a deficit of -3.",
                "In Threshold, the discounts are (8, 1, 0, 0, 0) and the payments are (−8, 5, 0, 3, 0).",
                "This minimizes the worst-case error to VCG discounts across all budget-balanced payment schemes.",
                "Threshold payments are designed to minimize the maximal ex post incentive to manipulate.",
                "Krych [16] confirmed that Threshold promotes allocative efficiency in restricted and approximate Bayes-Nash equilibrium. 5.",
                "THE ICE DESIGN We are now ready to introduce the iterative combinatorial exchange (ICE) design.",
                "Several new components are introduced, relative to the design for the one-shot exchange.",
                "Rather than provide precise valuations, bidders can provide lower and upper valuations and revise this bid information across rounds.",
                "The exchange provides price-based feedback 252 to guide bidders in this process, and terminates with an efficient (or approximately-efficient) trade with respect to reported valuations.",
                "In each round t ∈ {0, 1, . . .} the current lower and upper bounds, vt and vt , are used to define a provisional valuation profile vα (the α-valuation), together with a provisional trade λt and provisional prices pt = (pt 1, . . . , pt m) on items.",
                "The α-valuation is a linear combination of the current upper and lower valuations, with αEFF ∈ [0, 1] chosen endogenously based on the closeness of the optimistic trade (at v) and the pessimistic trade (at v).",
                "Prices pt are used to inform an activity rule, and drive progress towards an efficient trade. 5.1 Upper and Lower Valuations The bidding language is extended to allow a bidder i to report a lower and upper value (viβ, viβ) on each node.",
                "These take the place of the exact value viβ defined in Section 4.1.",
                "Based on these labels, we can define the valuation functions vi(Ti, λi) and vi(Ti, λi), using the exact same semantics as in Eq. (6).",
                "We say that such a bid-tree is well-formed if viβ ≤ viβ for all nodes.",
                "The following lemma is useful: Lemma 1.",
                "Given a well-formed tree, T, then vi(Ti, λi) ≤ vi(Ti, λi) for all trades.",
                "Proof.",
                "Suppose there is some λi for which vi(Ti, λi) > vi(Ti, λi).",
                "Then, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ.",
                "But, this is a contradiction because the trade λ that defines vi(Ti, λi) is still feasible with upper bounds vi, and viβ ≥ viβ for all nodes β in a well-formed tree. 5.2 Price Feedback In each round, approximate competitive-equilibrium (CE) prices, pt = (pt 1, . . . , pt m), are determined.",
                "Given these provisional prices, the price on trade λi for bidder i is pt (λi) =   j≤m pt j · λij.",
                "Definition 3 (CE prices).",
                "Prices p∗ are competitive equilibrium prices if the efficient trade λ∗ is supported at prices p∗ , so that for each bidder: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) CE prices will not always exist and we will often need to compute approximate prices [5].",
                "We extend ideas due to Rassenti et al. [26], Kwasnica et al. [17] and Dunford et al. [12], and select approximate prices as follows: I: Accuracy.",
                "First, we compute prices that minimize the maximal error in the best-response constraints across all bidders.",
                "II: Fairness.",
                "Second, we break ties to prefer prices that minimize the maximal deviation from Threshold payments across all bidders.",
                "III: Balance.",
                "Third, we break ties to prefer prices that minimize the maximal price across all items.",
                "Taken together, these steps are designed to promote the informativeness of the prices in driving progress across rounds.",
                "In computing prices, we explain how to compute approximate (or otherwise) prices for structured bidding languages, and without enumerating all possible trades.",
                "For this, we adopt constraint generation to efficient handle an exponential number of constraints.",
                "Each step is described in detail below.",
                "I: Accuracy.",
                "We adopt a definition of price accuracy that generalizes the notions adopted in previous papers for unstructured bidding languages.",
                "Let λt denote the current provisional trade and suppose the provisional valuation is vα .",
                "To compute accurate CE prices, we consider: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j.",
                "This linear program (LP) is designed to find prices that minimize the worst-case error across all agents.",
                "From the definition of CE prices, it follows that CE prices would have δ = 0 as a solution to (9), at which point trade λt i would be in the best-response set of every agent (with λt i = ∅, i.e. no trade, for all agents with no surplus for trade at the prices.)",
                "Example 5.",
                "We can illustrate the formulation (9) on Example 2, assuming for simplicity that vα = v (i.e. truth).",
                "The efficient trade allocates AB to buyer 1 and CD to buyer 3.",
                "Accuracy will seek prices p(A), p(B), p(C) and p(D) to minimize the δ ≥ 0 required to satisfy constraints: p(A) + p(B) + p(C) + p(D) ≥ 0 (seller) p(A) + p(B) ≤ 6 + δ (buyer 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (buyer 2) p(C) + p(D) ≤ 3 (buyer 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (buyer 4) An optimal solution requires p(A) = p(B) = 10/3, with δ = 2/3, with p(C) and p(D) taking values such as p(C) = p(D) = 3/2.",
                "But, (9) has an exponential number of constraints (Eq. 10).",
                "Rather than solve it explicitly we use constraint generation [4] and dynamically generate a sufficient subset of constraints.",
                "Let   i denote a manageable subset of all possible feasible trades to bidder i.",
                "Then, a relaxed version of (9) (written ACC) is formulated by substituting (10) with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) where   i is a set of trades that are feasible for bidder i given the other bids.",
                "Fixing the prices p∗ , we then solve n subproblems (one for each bidder), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0 ), (12) to check whether solution (p∗ , δ∗ ) to ACC is feasible in problem (9).",
                "In R-WD(i) the objective is to determine a most preferred trade for each bidder at these prices.",
                "Let ˆλi denote the solution to R-WD(i).",
                "Check condition: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) and if this condition holds for all bidders i, then solution (p∗ , δ∗ ) is optimal for problem (9).",
                "Otherwise, trade ˆλi is added to   i for all bidders i for which this constraint is 253 violated and we re-solve the LP with the new set of constraints.4 II: Fairness.",
                "Second, we break remaining ties to prefer fair prices: choosing prices that minimize the worst-case error with respect to Threshold payoffs (i.e. utility to bidders with Threshold payments), but without choosing prices that are less accurate.5 Example 6.",
                "For example, accuracy in Example 1 (depicted in Figure 1) requires 12 ≤ pA +pB ≤ 16 (for vα = v).",
                "At these valuations the Threshold payoffs would be 2 to both the seller and the buyer.",
                "This can be exactly achieved in pricing with pA + pB = 14.",
                "The fairness tie-breaking method is formulated as the following LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution, from ACC.",
                "The objective here is the same as in the Threshold payment rule (see Section 4.3): minimize the maximal error between bidder payoff (at vα ) for the provisional trade and the VCG payoff (at vα ).",
                "Problem FAIR is also solved through constraint generation, using R-WD(i) to add additional violated constraints as necessary.",
                "III: Balance.",
                "Third, we break remaining ties to prefer balanced prices: choosing prices that minimize the maximal price across all items.",
                "Returning again to Example 1, depicted in Figure 1, we see that accuracy and fairness require p(A) + p(B) = 14.",
                "Finally, balance sets p(A) = p(B) = 7.",
                "Balance is justified when, all else being equal, items are more likely to have similar than dissimilar values.6 The LP for balance is formulated as follows: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, where δ∗ represents the error in the optimal solution from ACC and π∗ represents the error in the optimal solution from FAIR.",
                "Constraint generation is also used to solve BAL, generating new trades for   i as necessary. 4 Problem R-WD(i) is a specialization of the WD problem, in which the objective is to maximize the payoff of a single bidder, rather than the total value across all bidders.",
                "It is solved as a MIP, by rewriting the objective in WD(T, x0 ) as max{viβ · satiβ −   j p∗ j · λij } for agent i.",
                "Thus, the structure of the bid-tree language is exploited in generating new constraints, because this is solved as a concise MIP.",
                "The other bidders are kept around in the MIP (but do not appear in the objective), and are used to define the space of feasible trades. 5 The methods of Dunford et al. [12], that use a nucleolus approach, are also closely related. 6 The use of balance was advocated by Kwasnica et al. [17].",
                "Dunford et al. [12] prefer to smooth prices across rounds.",
                "Comment 1: Lexicographical Refinement.",
                "For all three sub-problems we also perform lexicographical refinement (with respect to bidders in ACC and FAIR, and with respect to goods in BAL).",
                "For instance, in ACC we successively minimize the maximal error across all bidders.",
                "Given an initial solution we first pin down the error on all bidders for whom a constraint (11) is binding.",
                "For such a bidder i, the constraint is replaced with vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) and the error to bidder i no longer appears explicitly in the objective.",
                "ACC is then re-solved, and makes progress by further minimizing the maximal error across all bidders yet to be pinned down.",
                "This continues, pinning down any new bidders for whom one of constraints (11) is binding, until the error is lexicographically optimized for all bidders.7 The exact same process is repeated for FAIR and BAL, with bidders pinned down and constraints (15) replaced with π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (where π∗ i is the current objective) in FAIR, and items pinned down and constraints (18) replaced with p∗ j ≥ pj (where p∗ j represents the target for the maximal price on that item) in BAL.",
                "Comment 2: Computation.",
                "All constraints in   i are retained, and this set grows across all stages and across all rounds of the exchange.",
                "Thus, the computational effort in constraint generation is re-used.",
                "In implementation we are careful to address a number of -issues that arise due to floating-point issues.",
                "We prefer to err on the side of being conservative in determining whether or not to add another constraint in performing check (13).",
                "This avoids later infeasibility issues.",
                "In addition, when pinning-down bidders for the purpose of lexicographical refinement we relax the associated bidder-constraints with a small > 0 on the righthand side. 5.3 Revealed-Preference Activity Rules The role of activity rules in the auction is to ensure both consistency and progress across rounds [21].",
                "Consistency in our exchange requires that bidders tighten bounds as the exchange progresses.",
                "Activity rules ensure that bidders are active during early rounds, and promote useful elicitation throughout the exchange.",
                "We adopt a simple revealed-preference (RP) activity rule.",
                "The idea is loosely based around the RP-rule in Ausubel et al. [1], where it is used for one-sided CAs.",
                "The motivation is to require more than simply consistency: we need bidders to provide enough information for the system to be able to to prove that an allocation is (approximately) efficient.",
                "It is helpful to think about the bidders interacting with proxy agents that will act on their behalf in responding to provisional prices pt−1 determined at the end of round t − 1.",
                "The only knowledge that such a proxy has of the valuation of a bidder is through the bid-tree.",
                "Suppose a proxy was queried by the exchange and asked which trade the bidder was most interested in at the provisional prices.",
                "The RP rule says the following: the proxy must have enough 7 For example, applying this to accuracy on Example 2 we solve once and find bidders 1 and 2 are binding, for error δ∗ = 2/3.",
                "We pin these down and then minimize the error to bidders 3 and 4.",
                "Finally, this gives p(A) = p(B) = 10/3 and p(C) = p(D) = 5/3, with accuracy 2/3 to bidders 1 and 2 and 1/3 to bidders 3 and 4. 254 information to be able to determine this surplus-maximizing trade at current prices.",
                "Consider the following examples: Example 7.",
                "A bidder has XOR(+A, +B) and a value of +5 on the leaf +A and a value range of [5,10] on leaf +B.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the proxy knows that however the remaining value uncertainty on +B is resolved the bidder will always (weakly) prefer +B to +A.",
                "Example 8.",
                "A bidder has XOR(+A, +B) and value bounds [5, 10] on the root node and a value of 1 on leaf +A.",
                "Suppose prices are currently 3 for each of A and B.",
                "The RP rule is satisfied because the bidder will always prefer +A to +B at equal prices, whichever way the uncertain value on the root node is ultimately resolved.",
                "Overloading notation, let vi ∈ Ti denote a valuation that is consistent with lower and upper valuations in bid tree Ti.",
                "Definition 4.",
                "Bid tree Ti satisfies RP at prices pt−1 if and only if there exists some feasible trade L∗ for which, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. (20) To make this determination for bidder i we solve a sequence of problems, each of which is a variation on the WD problem.",
                "First, we construct a candidate lower-bound trade, which is a feasible trade that solves: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) The solution π∗ l to RP1(i) represents the maximal payoff that bidder i can achieve across all feasible trades, given its pessimistic valuation.",
                "Second, we break ties to find a trade with maximal value uncertainty across all possible solutions to RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] s.t. λ ∈ Feas(x0 ) (22) vi(λi) − pt−1 (λi) ≥ π∗ l (23) We adopt solution L∗ i as our candidate for the trade that may satisfy RP.",
                "To understand the importance of this tiebreaking rule consider Example 7.",
                "The proxy can prove +B but not +A is a best-response for all vi ∈ Ti, and should choose +B as its candidate.",
                "Notice that +B is a counterexample to +A, but not the other way round.",
                "Now, we construct a modified valuation ˜vi, by setting ˜viβ =   viβ , if β ∈ sat(L∗ i ) viβ , otherwise. (24) where sat(L∗ i ) is the set of nodes that are satisfied in the lower-bound tree for trade L∗ i .",
                "Given this modified valuation, we find U∗ to solve: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Let π∗ u denote the payoff from this optimal trade at modified values ˜v.",
                "We call trade U∗ i the witness trade.",
                "We show in Proposition 1 that the RP rule is satisfied if and only if π∗ l ≥ π∗ u. Constructing the modified valuation as ˜vi recognizes that there is shared uncertainty across trades that satisfy the same nodes in a bid tree.",
                "Example 8 helps to illustrate this.",
                "Just using vi in RP3(i), we would find L∗ i is buy A with payoff π∗ l = 3 but then find U∗ i is buy B with π∗ u = 7 and fail RP.",
                "We must recognize that however the uncertainty on the root node is resolved it will affect +A and +B in exactly the same way.",
                "For this reason, we set ˜viβ = viβ = 5 on the root node, which is exactly the same value that was adopted in determining π∗ l .",
                "Then, RP3(i) applied to U∗ i gives buy A and the RP test is judged to be passed.",
                "Proposition 1.",
                "Bid tree Ti satisfies RP given prices pt−1 if and only if any lower-bound trade L∗ i that solves RP1(i) and RP2(i) satisfies: vi(Ti, L∗ i ) − pt−1 (L∗ i ) ≥ ˜vi(Ti, U∗ i ) − pt−1 (U∗ i ), (26) where ˜vi is the modified valuation in Eq. (24).",
                "Proof.",
                "For sufficiency, notice that the difference in payoff between trade L∗ i and another trade λi is unaffected by the way uncertainty is resolved on any node that is satisfied in both L∗ i and λi.",
                "Fixing the values in ˜vi on nodes satisfied in L∗ i has the effect of removing this consideration when a trade U∗ i is selected that satisfies one of these nodes.",
                "On the other hand, fixing the values on these nodes has no effect on trades considered in RP3(i) that do not share a node with L∗ i .",
                "For the necessary direction, we first show that any trade that satisfies RP must solve RP1(i).",
                "Suppose otherwise, that some λi with payoff greater than π∗ l satisfies RP.",
                "But, valuation vi ∈ Ti together with L∗ i presents a counterexample to RP (Eq. 20).",
                "Now, suppose (for contradiction) that some λi with maximal payoff π∗ l but uncertainty less than L∗ i satisfies RP.",
                "Proceed by case analysis.",
                "Case a): only one solution to RP1(i) has uncertain value and so λi has certain value.",
                "But, this cannot satisfy RP because L∗ i with uncertain value would be a counterexample to RP (Eq. 20).",
                "Case b): two or more solutions to RP1(i) have uncertain value.",
                "Here, we first argue that one of these trades must satisfy a (weak) superset of all the nodes with uncertain value that are satisfied by all other trades in this set.",
                "This is by RP.",
                "Without this, then for any choice of trade that solves RP1(i), there is another trade with a disjoint set of uncertain but satisfied nodes that provides a counterexample to RP (Eq. 20).",
                "Now, consider the case that some trade contains a superset of all the uncertain satisfied nodes of the other trades.",
                "Clearly RP2(i) will choose this trade, L∗ i , and λi must satisfy a subset of these nodes (by assumption).",
                "But, we now see that λi cannot satisfy RP because L∗ i would be a counterexample to RP.",
                "Failure to meet the activity rule must have some consequence.",
                "In the current rules, the default action we choose is to set the upper bounds in valuations down to the maximal value of the provisional price on a node8 and the lowerbound value on that node.9 Such a bidder can remain active 8 The provisional price on a node is defined as the minimal total price across all feasible trades for which the subtree rooted at the tree is satisfied. 9 This is entirely analogous to when a bidder in an ascending clock auction stops bidding at a price: she is not permitted to bid at a higher price again in future rounds. 255 within the exchange, but only with valuations that are consistent with these new bounds. 5.4 Bidder Feedback In each round, our default design provides every bidder with the provisional trade and also with the current provisional prices.",
                "See 7 for an additional discussion.",
                "We also provide guidance to help a bidder meet the RP rule.",
                "Let sat(L∗ i ) and sat(U∗ i ) denote the nodes that are satisfied in trades L∗ i and U∗ i , as computed in RP1-RP3.",
                "Lemma 2.",
                "When RP fails, a bidder must increase a lower bound on at least one node in sat(L∗ i ) \\ sat(U∗ i ) or decrease an upper bound on at least one node in sat(U∗ i ) \\ sat(L∗ i ) in order to meet the activity rule.",
                "Proof.",
                "Changing the upper- or lower- values on nodes that are not satisfied by either trade does not change L∗ i or U∗ i , and does not change the payoff from these trades.",
                "Thus, the RP condition will continue to fail.",
                "Similarly, changing the bounds on nodes that are satisfied in both trades has no effect on revealed preference.",
                "A change to a lower bound on a shared node affects both L∗ i and U∗ i identically because of the use of the modified valuation to determine U∗ i .",
                "A change to an upper bound on a shared node has no effect in determining either L∗ i or U∗ i .",
                "Note that when sat(U∗ i ) = sat(L∗ i ) then condition (26) is always trivially satisfied, and so the guidance in the lemma is always well-defined when RP fails.",
                "This is an elegant feedback mechanism because it is adaptive.",
                "Once a bidder makes some changes on some subset of these nodes, the bidder can query the exchange.",
                "The exchange can then respond yes, or can revise the set of nodes sat(λ∗ l ) and sat(λ∗ u) as necessary. 5.5 Termination Conditions Once each bidder has committed its new bids (and either met the RP rule or suffered the penalty) then round t closes.",
                "At this point, the task is to determine the new α-valuation, and in turn the provisional allocation λt and provisional prices pt .",
                "A termination condition is also checked, to determine whether to move the exchange to a last-and-final round.",
                "To define the α-valuation we compute the following two quantities: Pessimistic at Pessimistic (PP) Determine an efficient trade, λ∗ l , at pessimistic values, i.e. to solve maxλ   i vi(λi), and set PP=  i vi(λ∗ li).",
                "Pessimistic at Optimistic (PO) Determine an efficient trade, λ∗ u, at optimistic values, i.e. to solve maxλ   i vi(λi), and set PO=  i vi(λ∗ ui).",
                "First, note that PP ≥ PO and PP ≥ 0 by definition, for all bid-trees, although PO can be negative (because the right trade at v is not currently a useful trade at v).",
                "Recognizing this, define γeff (PP, PO) = 1 + PP − PO PP , (27) when PP > 0, and observe that γeff (PP, PO) ≥ 1 when this is defined, and that γeff (PP, PO) will start large and then trend towards 1 as the optimistic allocation converges towards the pessimistic allocation.",
                "In each round, we define αeff ∈ [0, 1] as: αeff =   0 when PP is 0 1/γeff otherwise (28) which is 0 while PP is 0 and then trends towards 1 once PP> 0 in some round.",
                "This is used to define α-valuation vα i = αeff vi + (1 − αeff )vi, ∀i, (29) which is used to define the provisional allocation and provisional prices.",
                "The effect is to endogenously define a schedule for moving from optimistic to pessimistic values across rounds, based on how close the trades are to one another.",
                "Termination Condition.",
                "In moving to the last-and-final round, and finally closing, we also care about the convergence of payments, in addition to the convergence towards an efficient trade.",
                "For this we introduce another parameter, αthresh ∈ [0, 1], that trends from 0 to 1 as the Threshold payments at lower and upper valuations converge.",
                "Consider the following parameter: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive) , (30) which is defined for PP > 0, where pthresh(v) denotes the Threshold payments at valuation profile v, Nactive is the number of bidders that are actively engaged in trade in the PP trade, and || · ||2 is the L2-norm.",
                "Note that γthresh is defined for payments and not payoffs.",
                "This is appropriate because it is the accuracy of the outcome of the exchange that matters: i.e. the trade and the payments.",
                "Given this, we define αthresh =   0 when PP is 0 1/γthresh otherwise (31) which is 0 while PP is 0 and then trends towards 1 as progress is made.",
                "Definition 5 (termination).",
                "ICE transitions to a lastand-final round when one of the following holds: 1. αeff ≥ CUTOFFeff and αthresh ≥ CUTOFFthresh, 2. there is no trade at the optimistic values, where CUTOFFeff , CUTOFFthresh ∈ (0, 1] determine the accuracy required for termination.",
                "At the end of the last-and-final round vα = v is used to define the final trade and the final Threshold payments.",
                "Example 9.",
                "Consider again Example 1, and consider the upper and lower bounds as depicted in Figure 1.",
                "First, if the sellers bounds were [−20, −4] then there is an optimistic trade but no pessimistic trade, and PO = −4 and PP = 0, and αeff = 0.",
                "At the bounds depicted, both the optimistic and the pessimistic trades occur and PO = PP = 4 and αeff = 1.",
                "However, we can see the Threshold payments are (17, −17) at v but (14, −14) at v. Evaluating γthresh , we have γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, and αthresh = 2/5.",
                "For CUTOFFthresh < 2/5 the exchange would remain open.",
                "On the other hand, if the buyers value for +AB was between [18, 24] and the sellers value for −AB was between [−12, −6], the Threshold payments are (15, −15) at both upper and lower bounds, and αthresh = 1. 256 Component Purpose Lines Agent.",
                "Captures strategic behavior and information revelation decisions 762 Model Support Provides XML support to load goods and valuations into world 200 World Keeps track of all agent, good, and valuation details 998 Exchange Driver & Communication Controls exchange, and coordinates remote agent behavior 585 Bidding Language Implements the tree-based bidding language 1119 Activity Rule Engine Implements the revealed preference rule with range support 203 Closing Rule Engine Checks if auction termination condition reached 137 WD Engine Provides WD-related logic 377 Pricing Engine Provides Pricing-related logic 460 MIP Builders Translates logic used by engines into our general optimizer formulation 346 Pricing Builders Used by three pricing stages 256 Winner Determination Builders Used by WD, activity rule, closing rule, and pricing constraint generation 365 Framework Support code; eases modular replacement of above components 510 Table 1: Exchange Component and Code Breakdown. 6.",
                "SYSTEMS INFRASTRUCTURE ICE is approximately 6502 lines of Java code, broken up into the functional packages described in Table 1.10 The prototype is modular so that researchers may easily replace components for experimentation.",
                "In addition to the core exchange discussed in this paper, we have developed an agent component that allows a user to simulate the behavior and knowledge of other players in the system, better allowing a user to formulate their strategy in advance of actual play.",
                "A user specifies a valuation model in an XMLinterpretation of our bidding language, which is revealed to the exchange via the agents strategy.",
                "Major exchange tasks are handled by engines that dictate the non-optimizer specific logic.",
                "These engines drive the appropriate MIP/LP builders.",
                "We realized that all of our optimization formulations boil down to two classes of optimization problem.",
                "The first, used by winner determination, activity rule, closing rule, and constraint generation in pricing, is a MIP that finds trades that maximize value, holding prices and slacks constant.",
                "The second, used by the three pricing stages, is an LP that holds trades constant, seeking to minimize slack, profit, or prices.",
                "We take advantage of the commonality of these problems by using common LP/MIP builders that differ only by a few functional hooks to provide the correct variables for optimization.",
                "We have generalized our back-end optimization solver interface11 (we currently support CPLEX and the LGPL- licensed LPSolve), and can take advantage of the load-balancing and parallel MIP/LP solving capability that this library provides. 7.",
                "DISCUSSION The bidding language was defined to allow for perfect symmetry between buyers and sellers and provide expressiveness in an exchange domain, for instance for mixed bidders interested in executing trades such as swaps.",
                "This proved especially challenging.",
                "The breakthrough came when we focused on changes in value for trades rather than providing absolute values for allocations.",
                "For simplicity, we require the same tree structure for both the upper and lower valuations. 10 Code size is measured in physical source line of code (SLOC), as generated using David A. Wheelers SLOC Count.",
                "The total of 6502 includes 184 for instrumentation (not shown in the table).",
                "The JOpt solver interface is another 1964 lines, and Castor automatically generates around 5200 lines of code for XML file manipulation. 11 http://econcs.eecs.harvard.edu/jopt This allows the language itself to ensure consistency (with the upper value at least the lower value on all trades) and enforce monotonic tightening of these bounds for all trades across rounds.",
                "It also provides for an efficient method to check the RP activity rule, because it makes it simple to reason about shared uncertainty between trades.",
                "The decision to adopt a direct and proxied approach in which bidders express their upper and lower values to a trusted proxy agent that interacts with the exchange was made early in the design process.",
                "In many ways this is the clearest and most immediate way to generalize the design in Parkes et al. [24] and make it iterative.",
                "In addition, this removes much opportunity for strategic manipulation: bidders are restricted to making (incremental) statements about their valuations.",
                "Another advantage is that it makes the activity rule easy to explain: bidders can always meet the activity rule by tightening bounds such that their true value remains in the support.12 Perhaps most importantly, having explicit information on upper and lower values permits progress in early rounds, even while there is no efficient trade at pessimistic values.",
                "Upper and lower bound information also provides guidance about when to terminate.",
                "Note that taken by itself, PP = PO does not imply that the current provisional trade is efficient with respect to all values consistent with current value information.",
                "The difference in values between different trades, aggregated across all bidders, could be similar at lower and upper bounds but quite different at intermediate values (including truth).",
                "Nevertheless, we conjecture that PP = PO will prove an excellent indicator of efficiency in practical settings where the shape of the upper and lower valuations does convey useful information.",
                "This is worthy of experimental investigation.",
                "Moreover, the use of price and RP activity provides additional guarantees.",
                "We adopted linear prices (prices on individual items) rather than non-linear prices (with prices on a trade not equal to the sum of the prices on the component items) early in the design process.",
                "The conciseness of this price representation is very important for computational tractability within the exchange and also to promote simplicity and transparency for bidders.",
                "The RP activity rule was adopted later, and is a good choice because of its excellent theoretical properties when coupled with CE prices.",
                "The following can be easily established: given exact CE prices pt−1 for provisional trade 12 This is in contrast to indirect price-based approaches, such as clock-proxy [1], in which bidders must be able to reason about the RP-constraints implied by bids in each round. 257 λt−1 at valuations vα , then if the upper and lower values at the start of round t already satisfy the RP rule (and without the need for any tie-breaking), the provisional trade is efficient for all valuations consistent with the current bid trees.",
                "When linear CE prices exist, this provides for a soundness and completeness statement: if PP = PO, linear CE prices exist, and the RP rule is satisfied, the provisional trade is efficient (soundness); if prices are exact CE prices for the provisional trade at vα , but the trade is inefficient with respect to some valuation profile consistent with the current bid trees, then at least one bidder must fail RP with her current bid tree and progress will be made (completeness).",
                "Future work must study convergence experimentally, and extend this theory to allow for approximate prices.",
                "Some strategic aspects of our ICE design deserve comment, and further study.",
                "First, we do not claim that truthfully responding to the RP rule is an ex post equilibrium.13 However, the exchange is designed to mimic the Threshold rule in its payment scheme, which is known to have useful incentive properties [16].",
                "We must be careful, though.",
                "For instance we do not suggest to provide αeff to bidders, because as αeff approaches 1 it would inform bidders that bid values are becoming irrelevant to determining the trade but merely used to determine payments (and bidders would become increasingly reluctant to increase their lower valuations).",
                "Also, no consideration has been given in this work to collusion by bidders.",
                "This is an issue that deserves some attention in future work. 8.",
                "CONCLUSIONS In this work we designed and prototyped a scalable and highly-expressive iterative combinatorial exchange.",
                "The design includes many interesting features, including: a new bid-tree language for exchanges, a new method to construct approximate linear prices from expressive languages, and a proxied elicitation method with optimistic and pessimistic valuations with a new method to evaluate a revealed- preference activity rule.",
                "The exchange is fully implemented in Java and is in a validation phase.",
                "The next steps for our work are to allow bidders to refine the structure of the bid tree in addition to values on the tree.",
                "We intend to study the elicitation properties of the exchange and we have put together a test suite of exchange problem instances.",
                "In addition, we are beginning to engage in collaborations to apply the design to airline takeoff and landing slot scheduling and to resource allocation in widearea network distributed computational systems.",
                "Acknowledgments We would like to dedicate this paper to all of the participants in CS 286r at Harvard University in Spring 2004.",
                "This work is supported in part by NSF grant IIS-0238147. 9.",
                "REFERENCES [1] L. Ausubel, P. Cramton, and P. Milgrom.",
                "The clock-proxy auction: A practical combinatorial auction design.",
                "In Cramton et al. [9], chapter 5. [2] M. Babaioff, N. Nisan, and E. Pavlov.",
                "Mechanisms for a spatially distributed market.",
                "In Proc. 5th ACM Conf. on Electronic Commerce, pages 9-20.",
                "ACM Press, 2001. 13 Given the Myerson-Satterthwaite impossibility theorem [22] and the method by which we determine the trade we should not expect this. [3] M. Ball, G. Donohue, and K. Hoffman.",
                "Auctions for the safe, efficient, and equitable allocation of airspace system resources.",
                "In S. Cramton, Shoham, editor, Combinatorial Auctions. 2004.",
                "Forthcoming. [4] D. Bertsimas and J. Tsitsiklis.",
                "Introduction to Linear Optimization.",
                "Athena Scientific, 1997. [5] S. Bikhchandani and J. M. Ostroy.",
                "The package assignment model.",
                "Journal of Economic Theory, 107(2):377-406, 2002. [6] C. Boutilier.",
                "A pomdp formulation of <br>preference elicitation</br> problems.",
                "In Proc. 18th National Conference on Artificial Intelligence (AAAI-02), 2002. [7] C. Boutilier and H. Hoos.",
                "Bidding languages for combinatorial auctions.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), 2001. [8] W. Conen and T. Sandholm.",
                "<br>preference elicitation</br> in combinatorial auctions.",
                "In Proc. 3rd ACM Conf. on Electronic Commerce (EC-01), pages 256-259.",
                "ACM Press, New York, 2001. [9] P. Cramton, Y. Shoham, and R. Steinberg, editors.",
                "Combinatorial Auctions.",
                "MIT Press, 2004. [10] S. de Vries, J. Schummer, and R. V. Vohra.",
                "On ascending Vickrey auctions for heterogeneous objects.",
                "Technical report, MEDS, Kellogg School, Northwestern University, 2003. [11] S. de Vries and R. V. Vohra.",
                "Combinatorial auctions: A survey.",
                "Informs Journal on Computing, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana, and T. Wilson.",
                "Testing linear pricing algorithms for use in ascending combinatorial auctions.",
                "Technical report, SEOR, George Mason University, 2003. [13] Y. Fu, J.",
                "Chase, B. Chun, S. Schwab, and A. Vahdat.",
                "Sharp: an architecture for secure resource peering.",
                "In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 133-148.",
                "ACM Press, 2003. [14] B. Hudson and T. Sandholm.",
                "Effectiveness of query types and policies for <br>preference elicitation</br> in combinatorial auctions.",
                "In Proc. 3rd Int.",
                "Joint.",
                "Conf. on Autonomous Agents and Multi Agent Systems, pages 386-393, 2004. [15] V. Krishna.",
                "Auction Theory.",
                "Academic Press, 2002. [16] D. Krych.",
                "Calculation and analysis of Nash equilibria of Vickrey-based payment rules for combinatorial exchanges, Harvard College, April 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter, and C. DeMartini.",
                "A new and improved design for multi-object iterative auctions.",
                "Management Science, 2004.",
                "To appear. [18] E. Kwerel and J. Williams.",
                "A proposal for a rapid transition to market allocation of spectrum.",
                "Technical report, FCC Office of Plans and Policy, Nov 2002. [19] S. M. Lahaie and D. C. Parkes.",
                "Applying learning algorithms to <br>preference elicitation</br>.",
                "In Proc.",
                "ACM Conf. on Electronic Commerce, pages 180-188, 2004. [20] R. P. McAfee.",
                "A dominant strategy double auction.",
                "J. of Economic Theory, 56:434-450, 1992. [21] P. Milgrom.",
                "Putting auction theory to work: The simultaneous ascending auction.",
                "J.Pol.",
                "Econ., 108:245-272, 2000. [22] R. B. Myerson and M. A. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [23] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. 2nd ACM Conf. on Electronic Commerce (EC-00), pages 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "In Proc. 17th International Joint Conference on Artificial Intelligence (IJCAI-01), pages 1161-1168, 2001. [25] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, July 2000. [26] S. J. Rassenti, V. L. Smith, and R. L. Bulfin.",
                "A combinatorial mechanism for airport time slot allocation.",
                "Bell Journal of Economics, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc, and R. M. Harstad.",
                "Computationally manageable combinatorial auctions.",
                "Management Science, 44(8):1131-1147, 1998. [28] T. Sandholm and C. Boutilier.",
                "<br>preference elicitation</br> in combinatorial auctions.",
                "In Cramton et al. [9], chapter 10. [29] P. R. Wurman and M. P. Wellman.",
                "AkBA: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, pages 21-29, 2000. 258"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Estos límites permiten el descubrimiento de precios y la \"obtención de preferencias\" útil en las primeras rondas, y permiten la terminación con un comercio eficiente a pesar de la información parcial sobre las valoraciones de los postor.",
                "Una formulación POMDP de problemas de \"obtención de preferencia\".",
                "\"PREVENTACIÓN DE PEREFICIDAD\" en subastas combinatorias.",
                "Efectividad de los tipos de consultas y políticas para la \"obtención de preferencias\" en las subastas combinatorias.",
                "Aplicación de algoritmos de aprendizaje a la \"obtención de preferencias\".",
                "\"PREVENTACIÓN DE PEREFICIDAD\" en subastas combinatorias."
            ],
            "translated_text": "",
            "candidates": [
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencia",
                "obtención de preferencias",
                "PREVENTACIÓN DE PEREFICIDAD",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "PREVENTACIÓN DE PEREFICIDAD"
            ],
            "error": []
        }
    }
}