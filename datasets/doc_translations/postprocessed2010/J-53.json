{
    "id": "J-53",
    "original_text": "A Price-Anticipating Resource Allocation Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget resource allocation game to understand the performance of a distributed marketbased resource allocation system. Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual utility. We look at both the efficiency and the fairness of the allocation at the equilibrium, where fairness is evaluated through the measures of utility uniformity and envy-freeness. We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high efficiency but poor fairness, the proposed allocation scheme achieves a nice balance of high degrees of efficiency and fairness at the equilibrium. Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1. INTRODUCTION The primary advantage of distributed shared clusters like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources. This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users. Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users. Finally, sharing allows greater reliability because of redundancy in hosts and network connections. However, resource allocation in these systems remains the major challenge. The problem is how to allocate a shared resource both fairly and efficiently (where efficiency is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests. Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator. However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set. Instead, we examine a market-based resource allocation system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a bidding mechanism. In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource. This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26]. Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets. In this work, we examine a price-anticipating scheme in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6). In this paper, we formulate the fixed budget resource allocation game and study the existence and performance of the Nash equilibria of this game. For evaluating the Nash equilibria, we consider both their efficiency, measuring how close the social welfare at equilibrium is to the social optimum, and fairness, measuring how different the users utilities are. Although rarely considered in previous game theoretical study, we believe fairness is a critical metric for a resource allocation schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair resource allocation in favor of one with less efficient, more fair resource allocation. We use both utility uniformity and envy-freeness to measure fairness. Utility uniformity, which is common in Computer Science work, measures the closeness of utilities of different users. Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others. Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria. Using analysis, we show that there is always a Nash equilibrium in the fixed budget game if the utility functions satisfy a fairly weak and natural condition of strong competitiveness. We also show the worst case performance bounds: for m players the efficiency at equilibrium is Ω(1/ √ m), the utility uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83. Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their utility. As part of the fixed budget game analysis, we show that strategic users with linear utility functions can calculate their bids using a best response algorithm that quickly results in an allocation with high efficiency with little computational and communication overhead. We present variations of the best response algorithm for both finite and infinite parallelism tasks. In addition, we present a local greedy adjustment algorithm that converges more slowly than best response, but allows for non-linear or unformulatable utility functions. • We show that the price-anticipating resource allocation mechanism achieves a high degree of efficiency and fairness. Using simulation, we find that although the socially optimal allocation results in perfect efficiency, it also results in very poor fairness. Likewise, allocating according to only users preference weights results in a high fairness, but a mediocre efficiency. Intuition would suggest that efficiency and fairness are exclusive. Surprisingly, the Nash equilibrium, reached by each user iteratively applying the best response algorithm to adapt his bids, achieves nearly the efficiency of the social optimum and nearly the fairness of the weight-proportional allocation: the efficiency is ≥ 0.90, the utility uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system. In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy. The local adjustment algorithm performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize. As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of efficiency and fairness. The rest of the paper is organized as follows. We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite parallelism model in Section 3. In Section 4, we describe algorithms for users to optimize their own utility in the fixed budget game. In Section 5, we describe our simulator and simulation results. We describe related work in Section 6. We conclude by discussing some limit of our model and future work in Section 7. 2. THE MODEL Price-Anticipating Resource Allocation. We study the problem of allocating a set of divisible resources (or machines). Suppose that there are m users and n machines. Each machine can be continuously divided for allocation to multiple users. An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1. Let Ω denote the set of all the allocation schemes. We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed. Formally, suppose that user i submits a non-negative bid xij to machine j. The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j. When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone. We call xi = (xi1, . . . , xin) the bidding vector of user i. The additional consideration we have is that each user i has a budget constraint Xi. Therefore, user is total bids have to sum up to his budget, i.e. Pn j=1 xij = Xi. The budget constraints come from the fact that the users do not have infinite budget. Utility Functions. Each user is utility is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine. Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines. Therefore, the basic utility function we consider is the linear utility function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j. For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications. As a result, w11 > w12 and w21 < w22. Our definition of utility functions corresponds to the user having enough jobs or enough parallelism within jobs to utilize all the machines. Consequently, the users goal is to grab as much of a resource as possible. We call this the infinite parallelism model. In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity). To model this, we also consider the more realistic finite parallelism model, where the users parallelism is bounded by ki, and the users utility Ui is the sum of the ki largest wijrij. In this model, the user only submits bids to up to ki machines. Our abstraction is to capture the essense of the problem and facilitate our analysis. In Section 7, we discuss the limit of the above definition of utility functions. Best Response. As typically, we assume the users are selfish and strategic - they all act to maximize their own utility, defined by their utility functions. From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0. The difficulty of the above optimization problem depends on the formulation of Ui. We will show later how to solve it for the infinite parallelism model and provide a heuristic for finite parallelism model. Nash Equilibrium. By the assumption that the user is selfish, each users bidding vector is the best response to the system. The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users. Such a state is known as the Nash equilibrium, a central concept in Game Theory. Formally, the bidding vectors x1, . . . , xm is a Nash equilibrium if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) . The Nash equilibrium is desirable because it is a stable state at which no one has incentive to change his strategy. But a game may not have an equilibrium. Indeed, a Nash equilibrium may not exist in the price anticipating scheme we define above. This can be shown by a simple example of two players and two machines. For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2. Then player 1 should never bid on machine 2 because it has no value to him. Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the Nash equilibrium. We should note that even the mixed strategy equilibrium does not exist in this example. Clearly, this happens whenever there is a resource that is wanted by only one player. To rule out this case, we consider those strongly competitive games.1 Under the infinite parallelism model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0. Under such a condition, we have that (see [5] for a proof), Theorem 1. There always exists a pure strategy Nash equilibrium in a strongly competitive game. Given the existence of the Nash equilibrium, the next important question is the performance at the Nash equilibrium, which is often measured by its efficiency and fairness. Efficiency (Price of Anarchy). For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω. Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities. The efficiency at an allocation scheme ω is defined as π(ω) = U(ω) U∗ . Let Ω0 denote the set of the allocation at the Nash equilibrium. When there exists Nash equilibrium, i.e. Ω0 = ∅, define the efficiency of a game Q to be π(Q) = minω∈Ω0 π(ω). It is usually the case that π < 1, i.e. there is an efficiency loss at a Nash equilibrium. This is the price of anarchy [18] paid for not having central enforcement of the users good behavior. This price is interesting because central control results in the best possible outcome, but is not possible in most cases. Fairness. While the definition of efficiency is standard, there are multiple ways to define fairness. We consider two metrics. One is by comparing the users utilities. The utility uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum utility and the maximum utility among the users. Such definition (or utility discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature. Under this definition, the utility uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω). The other metric extensively studied in Economics is the concept of envy-freeness [25]. Unlike the utility uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive. Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine. These alternatives, however, introduce the problem of coming up with the right price or limit. When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme. Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3. NASH EQUILIBRIUM In this section, we present some theoretical results regarding the performance at Nash equilibrium under the infinite parallelism model. We assume that the game is strongly competitive to guarantee the existence of equilibria. For a meaningful discussion of efficiency and fairness, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same utility when they own all the resources. This precludes the case when a user has an extremely high budget, resulting in very low efficiency or low fairness at equilibrium. We first provide a characterization of the equilibria. By definition, the bidding vectors x1, . . . , xm is a Nash equilibrium if and only if each players strategy is the best response to the groups bids. Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid. Under the infinite parallelism model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e. U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties. We start with two special cases to provide some intuition about the game. The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games. Let x and y denote the respective bids of users 1 and 2 on machine 1. Denote by s = x + y and δ = (2 − s)/s. Equal-weight game. In Figure 1, both users have equal valuations for the two machines. By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α. Thus, there exists a unique Nash equilibrium of the game where the two users have the same bidding vector. At the equilibrium, the utility of each user is 1/2, and the social welfare is 1. On the other hand, the social optimum is clearly 1. Thus, the equal-weight game is ideal as the efficiency, utility uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games. Opposite-weight game. The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines. Assume that α ≥ 1/2. Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each Nash equilibrium corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1. Clearly, δ = 1 is a root of f(δ). When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine. At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828. However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria. Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid. In this case, user 1 gets most of machine 1 and almost half of machine 2. The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4. This solves to α0 = 2+ √ 2 4 ≈ 0.854. Those asymmetric equilibria at δ = 1 are bad as they yield lower efficiency than the symmetric equilibrium. Let δ0 be the minimum root. When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0. Then, x, y → 1. Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75. From the above simple game, we already observe that the Nash equilibrium may not be unique, which is different from many congestion games in which the Nash equilibrium is unique. For the general two player game, we can show that 0.75 is actually the worst efficiency bound with a proof in [5]. Further, at the asymmetric equilibrium, the utility uniformity approaches 1/2 when α → 1. This is the worst possible for two player games because as we show in Section 3.2, a users utility at any Nash equilibrium is at least 1/m in the m-player game. Another consequence is that the two player game is always envy-free. Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively. Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free. Theorem 2. For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1. All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large. The following example shows the worst case bound. Consider a system with m = n2 + n players and n machines. Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine. The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines. Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine. Hence, the total money on each machine is n + 1. At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total utility of n3 · 1 n2(n+1) < 1. The other n players each receives 1 n+1 on their favorite machine, resulting in a total utility of n · 1 n+1 < 1. Therefore, the total utility of the equilibrium is < 2, while the social optimum is n = Θ( √ m). This bound is the worst possible. What about the utility uniformity of the multi-player allocation game? We next show that the utility uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i. User i can ensure a utility of 1/m by distributing his budget proportionally to the current bids. That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1. Therefore, rij = 1 1+m−1 = 1 m . The total utility of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m . Since each users utility cannot exceed 1, the minimal possible uniformity is 1/m. While the utility uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29]. To summarize, we have that Theorem 3. For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2. All of these bounds are tight in the worst case. 4. ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite parallelism model. However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the Nash equilibrium for the typical distribution of utility functions. In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response algorithm leads to the equilibrium. To answer these questions, we resort to simulations. In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments. We consider both the infinite parallelism and finite parallelism model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most. We now present the algorithm for computing the best response. Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0. To compute the best response, we first sort wj yj in decreasing order. Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn . Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution. We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too. Suppose this were not true. Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) . Thus it contradicts with the optimality condition (1). Suppose that k = max{i|x∗ i > 0}. Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 . Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi . The remaining question is how to determine k. It is the largest value such that x∗ k > 0. Thus, we obtain the following algorithm to compute the best response of a user: 1. Sort the machines according to wi yi in decreasing order. 2. Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3. Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj. The computational complexity of this algorithm is O(n log n), dominated by the sorting. In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible. The best response algorithm must send and receive O(n) messages because each user must obtain the total bids from each host. In practice, this is more significant than the computational cost. Note that hosts only reveal to users the sum of the bids on them. As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite Parallelism Model Recall that in the finite parallelism model, each user i only places bids on at most ki machines. Of course, the infinite parallelism model is just a special case of finite parallelism model in which ki = n for all the is. In the finite parallelism model, computing the social optimum is no longer trivial due to bounded parallelism. It can instead be computed by using the maximum matching algorithm. Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj). A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching. As a result, the following lemma holds. Lemma 1. The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching algorithm to compute the social optimum. The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14]. We choose to implement the Hungarian algorithm [14, 19] because of its simplicity. There may exist a more efficient algorithm for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question. However, we do not know an efficient algorithm to compute the best response under the finite parallelism model. Instead, we provide the following local search heuristic. Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn. Let the users budget be X and the parallelism bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users utility. For a subset of machines A, denote by x(A) the best response on A without parallelism bound and by U(A) the utility obtained by the best response algorithm. The local search works as follows: 1. Set A to be the k machines with the highest wi/yi. 2. Compute U(A) by the infinite parallelism best response algorithm (Sec 4.1) on A. 3. For each i ∈ A and each j /∈ A, repeat 4. Let B = A − {i} + {j}, compute U(B). 5. If(U(B) > U(A)), let A ← B, and goto 2. 6. Output x(A). Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response utility. If yes, we swap the machines and repeat the process. Otherwise, we have reached a local maxima and output that value. We suspect that the local maxima that this algorithm finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it. However, in our simulations, this algorithm quickly converges to a high (≥ .7) efficiency. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear utility functions described earlier. In practice, utility functions may have more a complicated form, or even worse, a user may not have a formulation of his utility function. We do assume that the user still has a way to measure his utility, which is the minimum assumption necessary for any market-based resource allocation mechanism. In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows. A user finds the two machines that provide him with the highest and lowest marginal utility. He then moves a fixed small amount of money from the machine with low marginal utility to the machine with the higher one. This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same. This condition guarantees the allocation is the optimum when the utility function is concave. The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5. SIMULATION RESULTS While the analytic results provide us with worst-case analysis for the infinite parallelism model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite parallelism model. First, we determine whether the user bidding process converges, and if so, what the rate of convergence is. Second, in cases of convergence, we look at the performance at equilibrium, using the efficiency and fairness metrics defined above. Iterative Method. In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met. The initial bid is set proportional to the users weights on the machines. We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3. Convergence Criteria. Convergence time measures how quickly the system reaches equilibrium. It is particularly important in the highly dynamic environment of distributed shared clusters, in which the systems conditions may change before reaching the equilibrium. Thus, a high convergence rate may be more significant than the efficiency at the equilibrium. There are several different criteria for convergence. The strongest criterion is to require that there is only negligible change in the bids of each user. The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged. The less strict utility gap criterion requires there to be only negligible change in the users utility. Given users concern for utility, this is a more natural definition. Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small utility gain. Therefore, we use the utility gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the utility gap of each user is smaller than (0.001 in our experiments). However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in utility as they move money around. For this method, we use the marginal utility gap criterion. We compare the highest and lowest utility margins on the machines. If the difference is negligible, then we consider the system to be converged. In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion. Under this criterion, a system has stabilized if the change in social welfare is ≤ . Individual users utility may not have converged. This criterion is useful to evaluate how quickly the system as a whole reaches a particular efficiency level. User preferences. We experiment with two models of user preferences, random distribution and correlated distribution. With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution. In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run. To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth). For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk. By using these profiles, we compress the parameter space and introduce correlations between users and machines. In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users). Sections 5.1 and 5.2 present the simulation results when we apply the infinite parallelism and finite parallelism models, respectively. If the system converges, we report the number of iterations until convergence. A convergence time of 200 iterations indicates non-convergence, in which case we report the efficiency and fairness values at the point we terminate the simulation. 5.1 Infinite parallelism In this section, we apply the infinite parallelism model, which assumes that users can use an unlimited number of machines. We present the efficiency and fairness at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively). We present results for the two user preference models. With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter). In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1). Convergence Time. Figure 2 shows the convergence time, efficiency and fairness of the infinite parallelism model under uniform (left) and correlated (right) preferences. Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: Efficiency, utility uniformity, enviness and convergence time as a function of the number of users under the infinite parallelism model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite parallelism model. number of users = 40. n = 100. The best-response algorithm converges within a few number of iterations for any number of users. In contrast, the local greedy adjustment algorithm does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users. We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc. Regardless, the local greedy adjustment method stabilizes within 100 iterations. Figure 3 presents the efficiency over time for a system with 40 users. It demonstrates that while both adjustment methods reach the same social welfare, the best-response algorithm is faster. In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it. Efficiency. Figure 2 (c) and (d) present the efficiency as a function of the number of users. We present the efficiency at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison. Social optimum provides an efficient allocation by definition. For both user preference models, the efficiency at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum. The efficiency at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences. Fairness. Figure 2(e) and (f) present the utility uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness. While the social optimum yields perfect efficiency, it has poor fairness. The weightproportional method achieves the highest fairness among the three allocation methods, but the fairness at the equilibrium is close. The utility uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other. Although utility uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point. At the social optimum, utility uniformity can be infinitely poor, as some users may be allocated no resources at all. The same is true with respect to envy-freeness. The difference between uniform and correlated preferences is best demonstrated in the social optimum results. When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both utility uniformity and envy-freeness go to zero. As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation. These results demonstrate the tradeoff between the different allocation methods. The efficiency at the equilibrium is lower than the social optimum, but it performs much better with respect to fairness. The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite parallelism 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite parallelism model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 Efficiency Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: Efficiency level over time under the finite parallelism model with local search algorithm. n = 100. We also consider the finite parallelism model and use the local search algorithm, as described in Section 4.2, to adjust users bids. We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the simulation results for only the uniform distribution. In our experiments, the local search algorithm stops quickly - it usually discovers a local maximum within two iterations. As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high efficiency. 134 Convergence time. Let ∆ denote the parallelism bound that limits the maximum number of machines each user can bid on. We experiment with ∆ = 5 and ∆ = 20. In both cases, we use 100 machines and vary the number of users. Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly. The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20. We believe that the non-convergence is caused by moderate competition. No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids. High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence. However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids. In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2]. Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall efficiency after a few iterations (as shown in Figure 5). Performance. In Figure 6, we present the efficiency, utility uniformity, and envy-freeness at the Nash equilibrium for the finite parallelism model. When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations. When ∆ = 5, there is a performance drop, in particular with respect to the fairness metrics, in the range between 20 and 40 users (where it does not converge). For a larger number of users, the system converges and achieves a lower level of utility uniformity, but a high degree of efficiency and envy-freeness, similar to those under the infinite parallelism model. As described above, this is due the competition ratio falling into the head-to-head range. When the parallelism bound is large (∆ = 20), the performance is closer to the infinite parallelism model, and we do not observe this drop in performance. 6. RELATED WORK There are two main groups of related work in resource allocation: those that incorporate an economic mechanism, and those that do not. One non-economic approach is scheduling (surveyed by Pinedo [20]). Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19]. These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users. We view scheduling and resource allocation as two separate functions. Resource allocation divides a resource among different users while scheduling takes a given allocation and orders a users jobs. Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]). Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated. Unfortunately, reservations have a high latency to acquire resources, unlike the price-anticipating scheme we consider. The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive. Bellagio[3] uses the SHARE centralized allocator. SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities. Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation. The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some efficiency, but it also avoids the complexity and overhead of combinatorial auctions. There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows. Their methodology follows the study of congestion (potential) games [17, 22] by relating the Nash equilibrium to the solution of a (usually convex) global optimization problem. But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines. For example, unlike those games, there may exist multiple Nash equilibria in our game. Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7. CONCLUSIONS This work studies the performance of a market-based mechanism for distributed shared clusters using both analyatical and simulation methods. We show that despite the worst case bounds, the system can reach a high performance level at the Nash equilibrium in terms of both efficiency and fairness metrics. In addition, with a few exceptions under the finite parallelism model, the system reaches equilibrium quickly by using the best response algorithm and, when the number of users is not too small, by the greedy local adjustment method. While our work indicates that the price-anticipating scheme may work well for resource allocation for shared clusters, there are many interesting directions for future work. One direction is to consider more realistic utility functions. For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine. In practice, both assumptions may not be correct. For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine. When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling. Another assumption is that users have infinite work, so the more resources they can acquire, the better. In practice, users have finite work. One approach to address this is to model the users utility according to the time to finish a task rather than the amount of resources he receives. Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model. In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user Efficiency Utility uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user Efficiency Utility uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite parallelism model. n = 100. 8. ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions. We also thank the anonymous reviewers for their useful comments. 9. REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat. Resource Allocation in Federated Distributed Computing Infrastructures. In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat. Computational Resource Exchanges for Distributed Resource Allocation. 2004. [4] B. N. Chun and D. E. Culler. Market-based Proportional Resource Sharing for Clusters. Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang. A Price-anticipating Resource Allocation Mechanism for Distributed Shared Clusters. Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou. Microeconomic Algorithms for Load Balancing in Distributed Computer Systems. In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I. Foster and C. Kesselman. Globus: A Metacomputing Infrastructure Toolkit. The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan. Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms. Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow. Data Structures for Weighted Matching and Nearest Common Ancestors with Linking. In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang. Strategic Buyers in a Sum Bid Game for Flat Networks. Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis. Efficiency Loss in a Network Resource Allocation Game. Mathematics of Operations Research, 2004. [12] F. P. Kelly. Charging and Rate Control for Elastic Traffic. European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo. Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability. Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn. The Hungarian Method for the Assignment Problem. Naval Res. Logis. Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B. A. Huberman. Tycoon: an Implemention of a Distributed Market-Based Resource Allocation System. Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich. Congestion Games with Player-Specific Payoff Functions. Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley. Potential Games. Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou. Algorithms, Games, and the Internet. In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz. Combinatorial Optimization. Dover Publications, Inc., 1982. [20] M. Pinedo. Scheduling. Prentice Hall, 2002. [21] O. Regev and N. Nisan. The Popcorn Market: Online Markets for Computational Resources. In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal. A Class of Games Possessing Pure-Strategy Nash Equilibria. Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek. Optimal Allocation of a Divisible Good to Strategic Buyers. Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen. A Microeconomic Scheduler for Parallel Computers. In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian. Equity, Envy, and Efficiency. Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B. A. Huberman, J. O. Kephart, and S. Stornetta. Spawn: A Distributed Computational Economy. IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason. Auction Protocols for Decentralized Scheduling. Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter. Classifying Scheduling Policies with respect to Unfairness in an M/GI/1. In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang. On the Efficiency and Fairness of a Fixed Budget Resource Allocation Game. Manuscript, 2004. 136",
    "original_translation": "Un mecanismo de asignación de recursos de anticipación de precio para grupos compartidos distribuidos Michal Feldman ∗ mfeldman@sims.berkeley.edu kevin lai † kevin.lai@hp.com li zhang † l.zhang@hp.com Resumen En este documento, formulamos el presupuesto fijo del presupuesto fijo.Juego de asignación de recursos para comprender el rendimiento de un sistema distribuido de asignación de recursos basado en el mercado. Múltiples usuarios deciden cómo distribuir su presupuesto (ofertas) entre múltiples máquinas de acuerdo con sus preferencias individuales para maximizar su utilidad individual. Observamos tanto la eficiencia como la equidad de la asignación en el equilibrio, donde la equidad se evalúa a través de las medidas de uniformidad de utilidad y la envidia. Mostramos analíticamente y a través de simulaciones de que a pesar de estar altamente descentralizado, dicho sistema converge rápidamente a un equilibrio y, a diferencia del óptimo social que logra una alta eficiencia, pero una mala equidad, el esquema de asignación propuesto logra un buen equilibrio de altos grados de eficiencia y justicia en la justicia.equilibrio. Categorías y descriptores de sujetos C.2.4 [Redes de comunicación por computadora]: sistemas distribuidos;C.4 [rendimiento de los sistemas];F.2.2 [Análisis de algoritmos y complejidad de problemas]: algoritmos y problemas no numéricos;J.4 [Ciencias sociales y conductuales]: Economía General de Algoritmos, Performance, Diseño, Economía 1. Introducción La principal ventaja de grupos compartidos distribuidos como la cuadrícula [7] y PlanetLab [1] es su capacidad para reunir recursos computacionales compartidos. Esto permite un mayor rendimiento debido a la multiplexación estadística y al patrón de utilización de ráfaga de los usuarios típicos. Compartir nodos dispersos en la red permite un retraso más bajo porque las aplicaciones pueden almacenar datos cercanos a los usuarios. Finalmente, compartir permite una mayor confiabilidad debido a la redundancia en hosts y conexiones de red. Sin embargo, la asignación de recursos en estos sistemas sigue siendo el principal desafío. El problema es cómo asignar un recurso compartido, tanto de manera justa y eficiente (donde la eficiencia es la relación del bienestar social logrado para lo social óptimo) con la presencia de usuarios estratégicos que actúan en sus propios intereses. Se han propuesto varios algoritmos de asignación no económicos, pero estos típicamente suponen que los valores de las tareas (es decir, su importancia) son los mismos, o son inversamente proporcionales a los recursos requeridos, o son establecidos por un administrador omnisciente. Sin embargo, en muchos casos, los valores de la tarea varían significativamente, no están correlacionados con los requisitos de recursos, y son difíciles y requieren mucho tiempo para que un administrador establezca. En cambio, examinamos un sistema de asignación de recursos basado en el mercado (otros se describen en [2, 4, 6, 21, 26, 27]) que permite a los usuarios expresar sus preferencias por los recursos a través de un mecanismo de licitación. En particular, consideramos un esquema de anticipación de precio [12] en el que un usuario ofrece un recurso y recibe la relación de su oferta a la suma de ofertas para ese recurso. Este esquema proporcional es más simple, más escalable y más receptivo [15] que los esquemas basados en la subasta [6, 21, 26]. El trabajo anterior ha analizado esquemas de anticipación de precios en el contexto de la asignación de la capacidad de red para flujos para usuarios con presupuestos ilimitados. En este trabajo, examinamos un esquema de anticipación de precios en el contexto de la asignación de la capacidad computacional para usuarios con preferencias privadas y presupuestos limitados, lo que resulta en un juego cualitativamente diferente (como se discutió en la Sección 6). En este artículo, formulamos el juego de asignación de recursos presupuestarios fijos y estudiamos la existencia y el rendimiento de los equilibrios NASH de este juego. Para evaluar los equilibrios de NASH, consideramos tanto su eficiencia, midiendo cuán cerca está el bienestar social en el equilibrio para el óptimo social y la equidad, midiendo cuán diferentes son las empresas de servicios públicos. Aunque rara vez se considera en el estudio teórico del juego anterior, creemos que la equidad es una métrica crítica para un esquema de asignación de recursos porque la percepción de injusticia hará que algunos usuarios rechacen un sistema con una asignación de recursos más eficiente pero menos justa a favor de uno con menos eficiente, más asignación de recursos justos. Utilizamos tanto la uniformidad de la utilidad como la envidia de la envidia para medir la equidad. La uniformidad de servicios públicos, que es común en el trabajo de informática, mide la cercanía de los servicios públicos de diferentes usuarios. EnvyFeeness, que es más desde la perspectiva económica, mide la felicidad de los usuarios con sus propios recursos en comparación con los recursos de los demás. Nuestras contribuciones son las siguientes: • Analizamos la existencia y el rendimiento de 127 equilibrios Nash. Usando el análisis, mostramos que siempre hay un equilibrio de Nash en el juego de presupuesto fijo si las funciones de utilidad satisfacen una condición bastante débil y natural de fuerte competitividad. También mostramos los peores límites de rendimiento: para los jugadores M, la eficiencia en el equilibrio es Ω (1/ √ m), la uniformidad de utilidad es ≥ 1/ m y la envidia ≥ 2 √ 2-2 ≈ 0.83. Aunque estos límites son bastante bajos, las simulaciones descritas a continuación indican que estos límites son demasiado pesimistas.• Describimos algoritmos que permiten a los usuarios estratégicos optimizar su utilidad. Como parte del análisis de juegos de presupuesto fijo, mostramos que los usuarios estratégicos con funciones de utilidad lineal pueden calcular sus ofertas utilizando un algoritmo de respuesta mejor que resulta rápidamente en una asignación con alta eficiencia con poca sobrecarga computacional y de comunicación. Presentamos variaciones del mejor algoritmo de respuesta para tareas de paralelismo finitas e infinitas. Además, presentamos un algoritmo de ajuste codicioso local que converge más lentamente que la mejor respuesta, pero permite funciones de utilidad no lineales o no formulables.• Mostramos que el mecanismo de asignación de recursos que supera el precio logra un alto grado de eficiencia y equidad. Usando la simulación, encontramos que, aunque la asignación socialmente óptima da como resultado una eficiencia perfecta, también resulta en una justicia muy pobre. Del mismo modo, la asignación de acuerdo con solo los pesos de preferencia de los usuarios da como resultado una alta equidad, pero una eficiencia mediocre. La intuición sugeriría que la eficiencia y la justicia son exclusivas. Sorprendentemente, el equilibrio NASH, alcanzado por cada usuario, aplica iterativamente el mejor algoritmo de respuesta para adaptar sus ofertas, logra casi la eficiencia de la óptima social y casi la equidad de la asignación de poste de peso: la eficiencia es ≥ 0.90, la uniformidad de utilidad es≥ 0.65, y la envidia es ≥ 0.97, independiente del número de usuarios en el sistema. Además, el tiempo para converger al equilibrio es ≤ 5 iteraciones cuando todos los usuarios usan la mejor estrategia de respuesta. El algoritmo de ajuste local funciona de manera similar cuando hay suficiente competitividad, pero tarda de 25 a 90 iteraciones para estabilizarse. Como resultado, creemos que los sistemas distribuidos compartidos basados en el juego de presupuesto fijo pueden ser altamente descentralizados, pero lograr un alto grado de eficiencia y justicia. El resto del documento está organizado de la siguiente manera. Describimos el modelo en la Sección 2 y derivamos el rendimiento en los equilibrios NASH para el modelo de paralelismo infinito en la Sección 3. En la Sección 4, describimos algoritmos para que los usuarios optimicen su propia utilidad en el juego de presupuesto fijo. En la Sección 5, describimos nuestro simulador y resultados de simulación. Describimos el trabajo relacionado en la Sección 6. Concluimos discutiendo algún límite de nuestro modelo y trabajo futuro en la Sección 7. 2. La asignación de recursos de anticipación del precio del modelo. Estudiamos el problema de asignar un conjunto de recursos divisibles (o máquinas). Supongamos que hay M Usuarios y N Máquinas. Cada máquina se puede dividir continuamente para la asignación a múltiples usuarios. Un esquema de asignación Ω = (R1, ..., Rm), donde Ri = (Ri1, · · ·, Rin) con RIJ que representa la participación de la máquina J asignada al usuario I, satisface que para cualquier 1 ≤ I ≤ my1 ≤ j ≤ n, rij ≥ 0 y pm i = 1 rij ≤ 1. Deje que Ω denote el conjunto de todos los esquemas de asignación. Consideramos el mecanismo de anticipación de precios en el que cada usuario coloca una oferta a cada máquina, y el precio de la máquina está determinado por las ofertas totales realizadas. Formalmente, suponga que el usuario I presenta una oferta no negativa xij a la máquina j. El precio de la máquina J se establece en yj = pn i = 1 xij, las ofertas totales colocadas en la máquina j.En consecuencia, el usuario I recibe una fracción de rij = xij yj de j. Cuando yj = 0, es decir, cuando no hay oferta en una máquina, la máquina no se asigna a nadie. Llamamos a xi = (xi1, ..., xin) el vector de licitación del usuario i. La consideración adicional que tenemos es que cada usuario I tiene una restricción de presupuesto XI. Por lo tanto, el usuario es que las ofertas totales tienen que resumir su presupuesto, es decir, Pn j = 1 xij = xi. Las limitaciones presupuestarias provienen del hecho de que los usuarios no tienen un presupuesto infinito. Funciones de utilidad. Cada usuario es la utilidad está representada por una interfaz de usuario de la fracción (RI1, ..., Rin) que el usuario recibe de cada máquina. Dado el dominio del problema que consideramos, suponemos que cada usuario tiene preferencias diferentes y relativamente independientes para diferentes máquinas. Por lo tanto, la función de utilidad básica que consideramos es la función de utilidad lineal: ui (ri1, · · ·, rin) = wi1ri1 +· · · +winrin, donde wij ≥ 0 es el usuario preferencia privada, también llamada su peso, en la máquinaj. Por ejemplo, suponga que la máquina 1 tiene una CPU más rápida pero menos memoria que la máquina 2, y el usuario 1 ejecuta aplicaciones limitadas de CPU, mientras que el usuario 2 ejecuta aplicaciones limitadas de memoria. Como resultado, W11> W12 y W21 <W22. Nuestra definición de funciones de utilidad corresponde a que el usuario tenga suficientes trabajos o suficiente paralelismo dentro de los trabajos para utilizar todas las máquinas. En consecuencia, el objetivo de los usuarios es obtener el mayor recurso posible. Llamamos a esto el modelo de paralelismo infinito. En la práctica, una aplicación de usuarios puede tener un límite inherente en la paralelización (por ejemplo, algunos cálculos deben hacerse secuencialmente) o puede haber un límite del sistema (por ejemplo, los datos de aplicaciones se están atendiendo desde un servidor de archivos con capacidad limitada). Para modelar esto, también consideramos el modelo de paralelismo finito más realista, donde el paralelismo de los usuarios está limitado por KI, y la interfaz de usuario de la utilidad de los usuarios es la suma de la Wijrij más grande de KI. En este modelo, el usuario solo envía ofertas a máquinas hasta KI. Nuestra abstracción es capturar la esencia del problema y facilitar nuestro análisis. En la Sección 7, discutimos el límite de la definición anterior de funciones de utilidad. Mejor respuesta. Como normalmente, asumimos que los usuarios son egoístas y estratégicos: todos actúan para maximizar su propia utilidad, definida por sus funciones de utilidad. Desde la perspectiva del usuario I, si las ofertas totales de los otros usuarios colocados en cada máquina J es YJ, entonces la mejor respuesta del usuario I al sistema es la solución del siguiente problema de optimización: maximice la UI (xij xij +yj)Sujeto a pn j = 1 xij = xi, y xij ≥ 0. La dificultad del problema de optimización anterior depende de la formulación de la interfaz de usuario. Más tarde mostraremos cómo resolverlo para el modelo de paralelismo infinito y proporcionaremos una heurística para el modelo de paralelismo finito. Equilibrio de Nash. Suponiendo que el usuario es egoísta, cada vector de oferta de los usuarios es la mejor respuesta al sistema. La pregunta que más nos interesa es si existe una colección de vectores de licitación, uno para cada usuario, de modo que cada vector de oferta de cada usuarios sea la mejor respuesta a las de los otros usuarios. Tal estado se conoce como el equilibrio Nash, un concepto central en la teoría del juego. Formalmente, los vectores de licitación x1 ,..., XM es un equilibrio de Nash si para 128 cualquier 1 ≤ i ≤ m, xi es la mejor respuesta al sistema o, para cualquier otro vector de licitación xi, ui (x1, .., xi, ..., xm)≥ ui (x1, ..., xi, ..., xm). El equilibrio de Nash es deseable porque es un estado estable en el que nadie tiene incentivos para cambiar su estrategia. Pero un juego puede no tener un equilibrio. De hecho, un equilibrio de Nash puede no existir en el esquema de anticipación de precios que definimos anteriormente. Esto se puede mostrar con un ejemplo simple de dos jugadores y dos máquinas. Por ejemplo, deje U1 (R1, R2) = R1 y U2 (R1, R2) = R1 + R2. Entonces, el jugador 1 nunca debe ofertar en la máquina 2 porque no tiene valor para él. Ahora, el Jugador 2 tiene que presentar una oferta positiva en la máquina 2 para reclamar la máquina, pero no hay límite inferior, lo que resulta en la inexistencia del equilibrio de Nash. Debemos tener en cuenta que incluso el equilibrio de estrategia mixta no existe en este ejemplo. Claramente, esto sucede cuando hay un recurso que solo un jugador desea. Para descartar este caso, consideramos esos juegos fuertemente competitivos.1 Bajo el modelo de paralelismo infinito, un juego se llama muy competitivo si por 1 ≤ j ≤ n, existe un i = k tal que wij, wkj> 0. En tal condición, tenemos que (ver [5] para una prueba), Teorema 1. Siempre existe una estrategia pura Nash Equilibrium en un juego muy competitivo. Dada la existencia del equilibrio de Nash, la siguiente pregunta importante es el rendimiento en el equilibrio de Nash, que a menudo se mide por su eficiencia y equidad. Eficiencia (precio de la anarquía). Para un esquema de asignación Ω ∈ ω, denota por u (ω) = p i ui (ri) el bienestar social bajo Ω. Deje u ∗ = maxω∈ω u (ω) denota el bienestar social óptimo: las utilidades de usuario agregadas máximas posibles. La eficiencia en un esquema de asignación Ω se define como π (ω) = u (ω) u ∗. Deje que ω0 denote el conjunto de la asignación en el equilibrio de Nash. Cuando existe el equilibrio de Nash, es decir, Ω0 = ∅, defina la eficiencia de un juego Q como π (q) = minω∈ω0 π (Ω). Por lo general, es el caso que π <1, es decir, hay una pérdida de eficiencia en un equilibrio de Nash. Este es el precio de la anarquía [18] pagado por no tener la aplicación central del buen comportamiento de los usuarios. Este precio es interesante porque el control central da como resultado el mejor resultado posible, pero no es posible en la mayoría de los casos. Justicia. Si bien la definición de eficiencia es estándar, hay múltiples formas de definir la equidad. Consideramos dos métricas. Uno es comparando los servicios públicos de los usuarios. La uniformidad de utilidad τ (Ω) de un esquema de asignación Ω se define como mini ui (ω) maxi ui (Ω), la relación de la utilidad mínima y la utilidad máxima entre los usuarios. Dicha definición (o discrepancia de utilidad definida de manera similar como maxi ui (ω) mini ui (ω)) se usa ampliamente en la literatura de informática. Según esta definición, la uniformidad de utilidad τ (Q) de un juego Q se define como τ (q) = minω∈ω0 τ (Ω). La otra métrica ampliamente estudiada en economía es el concepto de envidia de envidia [25]. A diferencia de la métrica de uniformidad de utilidad, la envidia se refiere a cómo el usuario percibe el valor de la acción que le asignó, en comparación con las acciones que reciben otros usuarios. Dentro de dicho marco, defina la frenilidad de envidia de un esquema de asignación ω por ρ (ω) = mini, J ui (ri) ui (rj).Los alternativos incluyen agregar un precio de reserva o limitar la oferta más baja permitida a cada máquina. Sin embargo, estas alternativas introducen el problema de obtener el precio o el límite correctos. Cuando ρ (Ω) ≥ 1, el esquema se conoce como un esquema de asignación sin envidia. Del mismo modo, la envolía de envidia ρ (Q) de un juego Q se define como ρ (Q) = minω∈ω0 ρ (ω).3. Equilibrio de Nash En esta sección, presentamos algunos resultados teóricos con respecto al rendimiento en el equilibrio de Nash bajo el modelo de paralelismo infinito. Suponemos que el juego es fuertemente competitivo para garantizar la existencia de equilibrios. Para una discusión significativa de la eficiencia y la justicia, suponemos que los usuarios son simétricos al exigir que Xi = 1 ypn J = 1 wij = 1 para todos los 1 ≤ i ≤ m.O informalmente, requerimos que todos los usuarios tengan el mismo presupuesto, y tienen la misma utilidad cuando poseen todos los recursos. Esto impide el caso cuando un usuario tiene un presupuesto extremadamente alto, lo que resulta en muy baja eficiencia o baja equidad en equilibrio. Primero proporcionamos una caracterización de los equilibrios. Por definición, los vectores de licitación x1 ,..., XM es un equilibrio de Nash si y solo si cada estrategia de jugadores es la mejor respuesta a las ofertas de los grupos. Dado que UI es una función lineal y el dominio de cada usuarios ofrece {(xi1, ..., xin) |P j xij = xi, y xij ≥ 0} es un conjunto convexo, la condición de optimización es que existe λi> 0 tal que ∂ui ∂xij = wij yj - xij y 2 j  = λi si xij> 0, y <λi Si xij = 0. (1) o intuitivamente, en un equilibrio, cada usuario tiene el mismo valor marginal en las máquinas donde colocan ofertas positivas y tiene valores marginales más bajos en aquellas máquinas donde no ofertan. Según el modelo de paralelismo infinito, es fácil calcular el óptimo social U ∗ a medida que se logra cuando asignamos cada máquina totalmente a la persona que tiene el peso máximo en la máquina, i.e. U ∗ = pn j = 1 max1≤i≤m wij.3.1 Juegos de dos jugadores Primero mostramos que incluso en el caso no trivial más simple cuando hay dos usuarios y dos máquinas, el juego tiene propiedades interesantes. Comenzamos con dos casos especiales para proporcionar alguna intuición sobre el juego. Las matrices de peso se muestran en la Figura 1 (a) y (b), que corresponden respectivamente a los juegos de peso igual y de peso opuesto. Deje que X e Y denoten las ofertas respectivas de los usuarios 1 y 2 en la máquina 1. Denota por s = x + y y δ = (2 - s)/s. Juego de igual peso. En la Figura 1, ambos usuarios tienen valoraciones iguales para las dos máquinas. Por la condición de optimización, para que los vectores de oferta estén en equilibrio, necesitan satisfacer las siguientes ecuaciones de acuerdo con (1) α y (x + y) 2 = (1 - α) 1 - y (2 - x - y)2 α x (x + y) 2 = (1 - α) 1 - x (2 - x - y) 2 simplificando las ecuaciones anteriores, obtenemos que δ = 1 - 1/α y x = y = α. Por lo tanto, existe un equilibrio NASH único del juego donde los dos usuarios tienen el mismo vector de licitación. En el equilibrio, la utilidad de cada usuario es 1/2, y el bienestar social es 1. Por otro lado, el óptimo social es claramente 1. Por lo tanto, el juego de igual peso es ideal como la eficiencia, la uniformidad de la utilidad y la envidia son todas 1. 129 m1 m2 u1 α 1-α u2 α 1-α m1 m2 u1 α 1-α u2 1-α α (A) Juego de igual peso (b) Juego de peso opuesto Figura 1: Dos casos especiales de juegos de dos jugadores. Juego de peso opuesto. La situación es diferente para el juego opuesto en el que los dos usuarios colocan exactamente los pesos opuestos en las dos máquinas. Suponga que α ≥ 1/2. Del mismo modo, para que los vectores BID estén en el equilibrio, necesitan satisfacer α y (x + y) 2 = (1 - α) 1 - y (2 - x - y) 2 (1 - α) x (x +y) 2 = α 1 - x (2 - x - y) 2 al simplificar las ecuaciones anteriores, tenemos que cada equilibrio de Nash corresponde a una raíz no negativa de la ecuación cúbica F (Δ) = Δ3 - CΔ2 + Cδ - 1 =0, donde C = 1 2α (1 - α) - 1. Claramente, δ = 1 es una raíz de F (δ). Cuando δ = 1, tenemos que x = α, y = 1 - α, que es el equilibrio simétrico que es consistente con nuestra intuición: cada usuario pone una oferta proporcional a su preferencia de la máquina. En este equilibrio, u = 2 - 4α (1 - α), u ∗ = 2α y u/u ∗ = (2α + 1 α) - 2, que se minimiza cuando α = √ 2 2 con el valor mínimo de 2√ 2 - 2 ≈ 0.828. Sin embargo, cuando α es lo suficientemente grande, existen otras dos raíces, correspondientes a equilibrios asimétricos menos intuitivos. Intuitivamente, el equilibrio asimétrico surge cuando el usuario 1 valora la máquina 1 mucho, pero al colocar incluso una oferta relativamente pequeña en la máquina 1, puede obtener la mayor parte de la máquina porque el usuario 2 valora la máquina 1 de la máquina 1 y, por lo tanto, coloca una oferta aún más pequeña. En este caso, el usuario 1 obtiene la mayor parte de la máquina 1 y casi la mitad de la máquina 2. El umbral está en cuando F (1) = 0, es decir, cuando C = 1 2α (1 - α) = 4. Esto se resuelve a α0 = 2+ √ 2 4 ≈ 0.854. Esos equilibrios asimétricos en δ = 1 son malos, ya que producen una eficiencia más baja que el equilibrio simétrico. Sea Δ0 la raíz mínima. Cuando α → 0, C → + ∞, y Δ0 = 1/C + O (1/C) → 0. Entonces, x, y → 1. Por lo tanto, U → 3/2, U ∗ → 2 y U/U ∗ → 0.75. Desde el juego simple anterior, ya observamos que el equilibrio de Nash puede no ser único, lo que es diferente de muchos juegos de congestión en los que el equilibrio de Nash es único. Para el juego general de dos jugadores, podemos demostrar que 0.75 es en realidad la peor eficiencia con una prueba en [5]. Además, en el equilibrio asimétrico, la uniformidad de utilidad se acerca a 1/2 cuando α → 1. Este es lo peor posible para los juegos de dos jugadores porque, como mostramos en la Sección 3.2, una utilidad de los usuarios en cualquier equilibrio de Nash es al menos 1/m en el juego M-jugador. Otra consecuencia es que el juego de dos jugadores siempre está libre de envidia. Suponga que las dos acciones de los dos usuarios son R1 = (R11, ..., R1n) y R2 = (R21, ..., R2n) respectivamente. Entonces u1 (r1) + u1 (r2) = u1 (r1 + r2) = u1 (1, ..., 1) = 1 porque ri1 + ri2 = 1 para todos 1 ≤ i ≤ n.Nuevamente por eso U1 (R1) ≥ 1/2, tenemos que U1 (R1) ≥ U1 (R2), es decir, cualquier asignación de equilibrio está libre de envidia. Teorema 2. Para un juego de dos jugadores, π (Q) ≥ 3/4, τ (Q) ≥ 0.5 y ρ (Q) = 1. Todos los límites están apretados en el peor de los casos.3.2 Juego múltiple para grandes cantidades de jugadores, la pérdida en el bienestar social puede ser desafortunadamente grande. El siguiente ejemplo muestra el peor de los casos. Considere un sistema con M = N2 + N Players y N Máquinas. De los jugadores, hay N2 que tienen los mismos pesos en todas las máquinas, es decir, 1/n en cada máquina. Los otros jugadores N tienen peso 1, cada uno en una máquina diferente y 0 (o un poco suficientemente pequeño) en todas las demás máquinas. Claramente, u ∗ = n.La siguiente asignación es un equilibrio: los primeros jugadores de N2 distribuyen uniformemente su dinero entre todas las máquinas, el otro jugador N invierte todo su dinero en su máquina favorita respectiva. Por lo tanto, el dinero total en cada máquina es n + 1. En este equilibrio, cada uno de los primeros jugadores de N2 recibe 1 N 1/N n+1 = 1 n2 (n+1) en cada máquina, lo que resulta en una utilidad total de N3 · 1 n2 (n+1) <1. Los otros jugadores N reciben 1 n+1 en su máquina favorita, lo que resulta en una utilidad total de N · 1 n+1 <1. Por lo tanto, la utilidad total del equilibrio es <2, mientras que el óptimo social es n = θ (√ m). Este límite es el peor posible. ¿Qué pasa con la uniformidad de utilidad del juego de asignación de múltiples jugadores? Luego mostramos que la uniformidad de utilidad del juego de asignación de jugador M no puede exceder m.Sea (S1, ..., Sn) las ofertas totales actuales en las máquinas n, excluyendo el usuario i. Usuario puedo asegurar una utilidad de 1/m distribuyendo su presupuesto proporcionalmente a las ofertas actuales. Es decir, el usuario i, al ofertar sij = xi/ pn i = 1 si en la máquina j, obtiene un nivel de recurso de: rij = sij sij + sj = sj/ pn i = 1 si sj/ pn i = 1 si + sj= 1 1 + pn i = 1 si, donde pn j = 1 sj = pm j = 1 xj - xi = m - 1. Por lo tanto, rij = 1 1+m - 1 = 1 m. La utilidad total del usuario I es nx j = 1 rijwij = (1/m) nx j = 1 wij = 1/m. Dado que cada utilidad de los usuarios no puede exceder 1, la uniformidad mínima posible es 1/m. Mientras que la uniformidad de la utilidad puede ser pequeña, la introducción de la envidia, por otro lado, está limitada por una constante de 2 √ 2-2 ≈ 0.828, como se muestra en [29]. Para resumir, tenemos ese teorema 3. Para el juego del jugador M, π (q) = Ω (1/ √ m), τ (q) ≥ 1/ m y ρ (q) ≥ 2 √ 2-2. Todos estos límites están apretados en el peor de los casos.4. Algoritmos En la sección anterior, presentamos los límites de rendimiento del juego bajo el modelo de paralelismo infinito. Sin embargo, las preguntas más interesantes en la práctica son cómo se puede alcanzar el equilibrio y cuál es el rendimiento en el equilibrio de Nash para la distribución típica de las funciones de utilidad. En particular, nos gustaría saber si la estrategia intuitiva de cada jugador reajustando constantemente sus ofertas de acuerdo con el mejor algoritmo de respuesta conduce al equilibrio. Para responder a estas preguntas, recurrimos a simulaciones. En esta sección, presentamos los algoritmos que usamos para calcular o aproximar la mejor respuesta y el óptimo social en nuestros experimentos. Consideramos tanto el paralelismo infinito como el modelo de paralelismo finito.130 4.1 Modelo de paralelismo infinito Como mencionamos antes, es fácil calcular el óptimo social bajo el modelo de paralelismo infinito: simplemente asignamos cada máquina al usuario que más le gusta. Ahora presentamos el algoritmo para calcular la mejor respuesta. Recuerde que para los pesos W1 ,..., Wn, Total Bids Y1 ,..., yn, y el presupuesto X, la mejor respuesta es resolver el siguiente problema de optimización Maximizar u = pn j = 1 wj xj xj +yj sujeto a pn j = 1 xj = x, y xj ≥ 0. Para calcular la mejor respuesta, primero clasificamos a WJ YJ en orden decreciente. Sin pérdida de generalidad, suponga que W1 Y1 ≥ W2 Y2 ≥...wn yn. Suponga que x ∗ = (x ∗ 1, ..., x ∗ n) es la solución óptima. Mostramos que si x ∗ i = 0, entonces para cualquier j> i, x ∗ j = 0 también. Supongamos que esto no era cierto. Entonces ∂u ∂xj (x ∗) = wj yj (x ∗ j + yj) 2 <wj yj y2 j = wj yj ≤ wi yi = ∂u ∂xi (x ∗). Por lo tanto, contradice con la condición de optimización (1). Supongamos que k = max {i | x ∗ i> 0}. Nuevamente, por la condición de optimización, existe λ de tal manera que wi yi (x ∗ i +yi) 2 = λ para 1 ≤ i ≤ k, y x ∗ i = 0 para i> k.De manera equivalente, tenemos que: x ∗ i = r wiyi λ - yi, para 1 ≤ i ≤ k, y x ∗ i = 0 para i> k.Reemplazándolos en la ecuación pn i = 1 x ∗ i = x, podemos resolver para λ = (pk i = 1 √ wiyi) 2 (x+ pk i = 1 yi) 2. Por lo tanto, x ∗ i = √ wiyi pk i = 1 √ wiyi (x + kx i = 1 yi) - yi. La pregunta restante es cómo determinar k.Es el valor más grande de tal manera que x ∗ k> 0. Por lo tanto, obtenemos el siguiente algoritmo para calcular la mejor respuesta de un usuario: 1. Ordene las máquinas de acuerdo con Wi Yi en orden decreciente.2. Calcule la k más grande de tal manera que √ wkyk pk i = 1 √ wiyi (x + kx i = 1 yi) - yk ≥ 0. 3. Establecer xj = 0 para j> k, y para 1 ≤ j ≤ k, establecido: xj = √ wjyj pk i = 1 √ wiyi (x + kx i = 1 yi) - yj. La complejidad computacional de este algoritmo es O (n log n), dominado por la clasificación. En la práctica, la mejor respuesta se puede calcular con poca frecuencia (por ejemplo, una vez por minuto), por lo que para un host moderno típicamente poderoso, este costo es insignificante. El mejor algoritmo de respuesta debe enviar y recibir mensajes O (n) porque cada usuario debe obtener las ofertas totales de cada host. En la práctica, esto es más significativo que el costo computacional. Tenga en cuenta que los hosts solo revelan a los usuarios la suma de las ofertas en ellos. Como resultado, los anfitriones no revelan las preferencias privadas e incluso las ofertas individuales de un usuario a otro.4.2 Modelo de paralelismo finito Recuerde que en el modelo de paralelismo finito, cada usuario solo realiza ofertas en la mayoría de las máquinas KI. Por supuesto, el modelo de paralelismo infinito es solo un caso especial de modelo de paralelismo finito en el que Ki = n para todos los IS. En el modelo de paralelismo finito, calcular el óptimo social ya no es trivial debido al paralelismo limitado. En su lugar, se puede calcular utilizando el algoritmo de coincidencia máximo. Considere el gráfico bipartito completo ponderado G = U × V, donde u = {ui | 1 ≤ i ≤ m, y 1 ≤ ≤ ki}, v = {1, 2 ,..., n} con peso de borde asignado al borde (ui, vj). Una coincidencia de G es un conjunto de bordes con nodos disjuntos, y el peso de una coincidencia son los pesos totales de los bordes en la coincidencia. Como resultado, se mantiene el siguiente lema. Lema 1. El óptimo social es lo mismo que la coincidencia de peso máxima de G. Por lo tanto, podemos usar el algoritmo de coincidencia de peso máximo para calcular el óptimo social. La coincidencia de peso máxima es un problema de red clásica y se puede resolver en el tiempo polinomial [8, 9, 14]. Elegimos implementar el algoritmo húngaro [14, 19] debido a su simplicidad. Puede existir un algoritmo más eficiente para calcular la coincidencia máxima explotando la estructura especial de G. Esta sigue siendo una pregunta abierta interesante. Sin embargo, no conocemos un algoritmo eficiente para calcular la mejor respuesta bajo el modelo de paralelismo finito. En cambio, proporcionamos la siguiente heurística de búsqueda local. Supongamos que nuevamente tenemos n máquinas con pesas w1 ,..., WN y Total Bids Y1 ,..., yn. Deje que el presupuesto de los usuarios sea x y el paralelismo vinculado sea k.Nuestro objetivo es calcular una asignación de X a las máquinas hasta K para maximizar la utilidad de los usuarios. Para un subconjunto de máquinas A, denota por x (a) la mejor respuesta en un sin paralelismo unido y por u (a) la utilidad obtenida por el algoritmo de mejor respuesta. La búsqueda local funciona de la siguiente manera: 1. Establezca A para ser las máquinas K con la WI/YI más alta.2. Calcule u (a) por el algoritmo de mejor respuesta del paralelismo infinito (Sec 4.1) en A. 3. Para cada i ∈ A y cada j /∈ A, repita 4. Sea b = a - {i} + {j}, calcule u (b).5. If (u (b)> u (a)), deje que A ← B y GOTO 2. 6. Salida x (a). Intuitivamente, por la heurística de búsqueda local, probamos si podemos intercambiar una máquina en una que no esté en A para mejorar la mejor utilidad de respuesta. En caso afirmativo, intercambiamos las máquinas y repetimos el proceso. De lo contrario, hemos alcanzado un máximo local y una salida ese valor. Sospechamos que los máximos locales que encuentra este algoritmo también es el máximo global (con respecto a un usuario individual) y que este proceso se detiene después de unas pocas iteraciones, pero no podemos establecerlo. Sin embargo, en nuestras simulaciones, este algoritmo converge rápidamente a una eficiencia alta (≥ .7).131 4.3 Ajuste de codicioso local Los algoritmos de respuesta de los mejores de respuesta anteriores solo funcionan para las funciones de utilidad lineal descritas anteriormente. En la práctica, las funciones de utilidad pueden tener una forma más complicada, o lo que es peor, un usuario puede no tener una formulación de su función de utilidad. Suponemos que el usuario todavía tiene una manera de medir su utilidad, que es la suposición mínima necesaria para cualquier mecanismo de asignación de recursos basado en el mercado. En estas situaciones, los usuarios pueden usar una estrategia más general, el método local de ajuste codicioso, que funciona de la siguiente manera. Un usuario encuentra las dos máquinas que le proporcionan la utilidad marginal más alta y más baja. Luego mueve una pequeña cantidad fija de dinero de la máquina con baja utilidad marginal a la máquina con la más alta. Esta estrategia tiene como objetivo ajustar las ofertas para que los valores marginales en cada máquina que se oferten sean los mismos. Esta condición garantiza que la asignación es la óptima cuando la función de utilidad es cóncava. La compensación para el ajuste codicioso local es que lleva más tiempo estabilizarse que la mejor respuesta.5. Resultados de la simulación Si bien los resultados analíticos nos proporcionan un análisis en el peor de los casos para el modelo de paralelismo infinito, en esta sección empleamos simulaciones para estudiar las propiedades de los equilibrios NASH en escenarios más realistas y para el modelo de paralelismo finito. Primero, determinamos si el proceso de licitación del usuario converge y, de ser así, cuál es la tasa de convergencia. En segundo lugar, en casos de convergencia, observamos el rendimiento en equilibrio, utilizando las métricas de eficiencia y equidad definidas anteriormente. Método iterativo. En nuestras simulaciones, cada usuario comienza con un vector de oferta inicial y luego actualiza iterativamente sus ofertas hasta que se cumple un criterio de convergencia (que se describe a continuación). La oferta inicial se establece proporcional a los pesos de los usuarios en las máquinas. Experimentamos con dos métodos de actualización, los mejores métodos de respuesta, como se describe en la Sección 4.1 y 4.2, y el método local de ajuste codicioso, como se describe en la Sección 4.3. Criterios de convergencia. El tiempo de convergencia mide la rapidez con que el sistema alcanza el equilibrio. Es particularmente importante en el entorno altamente dinámico de los grupos compartidos distribuidos, en los que las condiciones de los sistemas pueden cambiar antes de alcanzar el equilibrio. Por lo tanto, una alta tasa de convergencia puede ser más significativa que la eficiencia en el equilibrio. Hay varios criterios diferentes para la convergencia. El criterio más fuerte es exigir que solo haya un cambio insignificante en las ofertas de cada usuario. El problema con este criterio es que es demasiado estricto: los usuarios pueden ver un cambio insignificante en sus utilidades, pero de acuerdo con esta definición, el sistema no ha convergido. El criterio de brecha de utilidad menos estricto requiere que solo haya un cambio insignificante en la utilidad de los usuarios. Dada la preocupación de los usuarios por la utilidad, esta es una definición más natural. De hecho, en la práctica, el usuario probablemente no esté dispuesto a reasignar sus ofertas dramáticamente para una pequeña ganancia de servicios públicos. Por lo tanto, utilizamos el criterio de brecha de utilidad para medir el tiempo de convergencia para el mejor método de actualización de respuesta, es decir, consideramos que el sistema ha convergido si la brecha de utilidad de cada usuario es menor que (0.001 en nuestros experimentos). Sin embargo, este criterio no funciona para el método de ajuste codicioso local porque los usuarios de ese método experimentarán fluctuaciones constantes en la utilidad a medida que avanzan el dinero. Para este método, utilizamos el criterio de brecha de utilidad marginal. Comparamos los márgenes de utilidad más altos y más bajos en las máquinas. Si la diferencia es insignificante, consideramos que el sistema está convergente. Además de la convergencia al equilibrio, también consideramos el criterio de la visión de los proveedores del sistema, el criterio de estabilización del bienestar social. Bajo este criterio, un sistema se ha estabilizado si el cambio en el bienestar social es ≤. La utilidad de los usuarios individuales puede no haber convergido. Este criterio es útil para evaluar qué tan rápido el sistema en su conjunto alcanza un nivel de eficiencia particular. Preferencias del usuario. Experimentamos con dos modelos de preferencias de usuario, distribución aleatoria y distribución correlacionada. Con una distribución aleatoria, los pesos de los usuarios en las diferentes máquinas se distribuyen de forma independiente e idéntica, según la distribución uniforme. En la práctica, las preferencias de los usuarios probablemente estén correlacionadas en función de factores como la ubicación de los hosts y los tipos de aplicaciones que ejecutan los usuarios. Para capturar estas correlaciones, asociamos con cada usuario y máquina de un vector de perfil de recursos donde cada dimensión del vector representa un recurso (por ejemplo, CPU, memoria y ancho de banda de red). Para un usuario I con un perfil Pi = (PI1, ..., PI), PIK representa el usuario es necesario para recursos k.Para la máquina J con perfil Qj = (QJ1, ..., Qj), QJK representa la fuerza de la máquina JS con respecto al recurso k.Entonces, WIJ es el producto DOT del usuario y los perfiles de recursos de la máquina JS, es decir, wij = pi · qj = p k = 1 pikqjk. Al usar estos perfiles, comprimimos el espacio de parámetros e introducimos correlaciones entre usuarios y máquinas. En las siguientes simulaciones, solucionamos el número de máquinas a 100 y variamos el número de usuarios de 5 a 250 (pero solo informamos los resultados para el rango de 5 - 150 usuarios, ya que los resultados siguen siendo similar para un mayor número de usuarios). Las secciones 5.1 y 5.2 presentan los resultados de la simulación cuando aplicamos el paralelismo infinito y los modelos de paralelismo finitos, respectivamente. Si el sistema converge, informamos el número de iteraciones hasta la convergencia. Un tiempo de convergencia de 200 iteraciones indica no convergencia, en cuyo caso informamos los valores de eficiencia y equidad en el punto en que terminamos la simulación.5.1 Paralelismo infinito En esta sección, aplicamos el modelo de paralelismo infinito, que supone que los usuarios pueden usar un número ilimitado de máquinas. Presentamos la eficiencia y la justicia en el equilibrio, en comparación con dos métodos de asignación de referencia: óptimo social y proporción de peso, en el que los usuarios distribuyen sus ofertas proporcionalmente a sus pesos en las máquinas (lo que puede parecer un método de distribución razonable de manera intuitiva). Presentamos resultados para los dos modelos de preferencia de usuario. Con las preferencias uniformes, los pesos de los usuarios para las diferentes máquinas se distribuyen de forma independiente e idéntica de acuerdo con la distribución uniforme, u ∼ (0, 1) (y se normalizan a partir de entonces). En las preferencias correlacionadas, cada vector de perfil de recursos de los usuarios y cada máquinas tiene tres dimensiones, y sus valores también se toman de la distribución uniforme, u ∼ (0, 1). Tiempo de convergencia. La Figura 2 muestra el tiempo de convergencia, la eficiencia y la equidad del modelo de paralelismo infinito bajo preferencias uniformes (izquierda) y correlacionada (derecha). Las parcelas (a) y (b) muestran el tiempo de convergencia y estabilización de los métodos de ajuste locales y de ajuste locales.132 0 50 100 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime (#Iterations) Número de usuarios Preferencias uniformes (a) Best-respuesta codiciosa (convergencia) codicioso (estabilización) 0 50 100 150 200 0 20 40 60 100 100 100120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional SocialÓptimo 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de usuarios (D) Equilibrio de Nash Pesaje Proporciones Social 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 UtilityuniformityNúmero de usuarios (e) equilibrio NASH peso-proporción óptimo social 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 0.9 1 0 20 40 60 80 100 120 140 160 Número de usuarios (F) Equilibrio NASH Peso Proporción Social óptimo 0 0.2 0.4 0.6 0.8 0.8 0.8 0.8 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.81 0 20 40 60 80 100 120 140 160 Número de envidia de envidia de usuarios (g) Equilibrio de Nash Peso proporcional Optimo Social 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de usuarios (H) Equilibrio NASH PROPORTALSocial Optimum Figura 2: Eficiencia, uniformidad de utilidad, envidia y tiempo de convergencia en función del número de usuarios bajo el modelo de paralelismo infinito, con preferencias uniformes y correlacionadas.n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Eficiencia Número de iteración Mejor respuesta codiciosa Figura 3: Nivel de eficiencia con el tiempo bajo el modelo de paralelismo infinito.Número de usuarios = 40. n = 100. El algoritmo de mejor respuesta converge en unas pocas número de iteraciones para cualquier número de usuarios. En contraste, el algoritmo de ajuste codicioso local no converge incluso dentro de 500 iteraciones cuando el número de usuarios es menor que 60, pero converge para un mayor número de usuarios. Creemos que para un pequeño número de usuarios, hay ciclos de dependencia entre los usuarios que evitan que el sistema convergue porque las decisiones de los usuarios afectan a otro usuario, cuyas decisiones afectan a otro usuario, etc. De todos modos, el método de ajuste codicioso local se estabiliza dentro de 100 iteraciones. La Figura 3 presenta la eficiencia con el tiempo para un sistema con 40 usuarios. Demuestra que si bien ambos métodos de ajuste alcanzan el mismo bienestar social, el algoritmo de mejor respuesta es más rápido. En el resto de este documento, nos referiremos al equilibrio (NASH), independientemente del método de ajuste utilizado para alcanzarlo. Eficiencia. La Figura 2 (c) y (d) presentan la eficiencia en función del número de usuarios. Presentamos la eficiencia en el equilibrio y utilizamos el óptimo social y los métodos de asignación estática de pesoproporcionado para la comparación. Social Optimum proporciona una asignación eficiente por definición. Para ambos modelos de preferencia de usuario, la eficiencia en el equilibrio es aproximadamente 0.9, independiente del número de usuarios, que es solo ligeramente peor que el óptimo social. La eficiencia en el equilibrio es de ≈ 50% de mejora sobre el método de asignación proporción de peso para preferencias uniformes, y una mejora de ≈ 30% para las preferencias correlacionadas. Justicia. La Figura 2 (e) y (f) presentan la uniformidad de la utilidad en función del número de usuarios, y las figuras (g) y (h) presentan la introducción de la envidia. Si bien el óptimo social produce una eficiencia perfecta, tiene mala equidad. El método de propiedad de peso logra la mayor equidad entre los tres métodos de asignación, pero la equidad en el equilibrio está cerca. La uniformidad de la utilidad es ligeramente mejor en el equilibrio bajo preferencias uniformes (> 0.7) que bajo preferencias correlacionadas (> 0.6), ya que cuando las preferencias de los usuarios están más alineadas, la felicidad de los usuarios es más probable que sea a expensas entre sí. Aunque la uniformidad de utilidad disminuye en el número de usuarios, sigue siendo razonable incluso para una gran cantidad de usuarios y se aplana en algún momento. En Social Optimum, la uniformidad de la utilidad puede ser infinitamente pobre, ya que a algunos usuarios no se les puede asignar recursos en absoluto. Lo mismo es cierto con respecto a la envidia de envidia. La diferencia entre las preferencias uniformes y correlacionadas se demuestra mejor en los resultados óptimos sociales. Cuando el número de usuarios es pequeño, puede ser posible satisfacer a todos los usuarios hasta cierto punto si sus preferencias no están alineadas, pero si están alineados, incluso con un número muy pequeño de usuarios, algunos usuarios no obtienen recursos, por lo tanto, ambas utilidadLa uniformidad y la envidia de la envidia van a cero. A medida que aumenta el número de usuarios, es casi imposible satisfacer a todos los usuarios independientemente de la existencia de correlación. Estos resultados demuestran la compensación entre los diferentes métodos de asignación. La eficiencia en el equilibrio es más baja que la óptima social, pero funciona mucho mejor con respecto a la equidad. La asignación de equilibrio es completamente libre de envidia bajo preferencias uniformes y casi sin envidia bajo preferencias correlacionadas.5.2 Paralelismo finito 0 50 100 100 150 200 0 10 20 30 40 50 60 70 80 90 ConvergenceTime (#iteraciones) Número de usuarios 5 máquinas/usuario 20 máquinas/usuario Figura 4: Tiempo de convergencia bajo el modelo de paralelismo finito.n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 iteración de eficiencia Número 5-máquinas/usuario (40 usuarios) 20 máquinas/usuario (10 usuarios) Figura 5: nivel de eficiencia con el tiempo bajo el modelo de paralelismo finito con localAlgoritmo de búsqueda.n = 100. También consideramos el modelo de paralelismo finito y utilizamos el algoritmo de búsqueda local, como se describe en la Sección 4.2, para ajustar las ofertas de los usuarios. Nuevamente experimentamos con las distribuciones de preferencias uniformes y correlacionadas y no encontramos diferencias significativas en los resultados, por lo que presentamos los resultados de la simulación solo para la distribución uniforme. En nuestros experimentos, el algoritmo de búsqueda local se detiene rápidamente; generalmente descubre un máximo local dentro de dos iteraciones. Como se mencionó anteriormente, no podemos demostrar que un máximo local es el máximo global, pero nuestros experimentos indican que la heurística de búsqueda local conduce a una alta eficiencia.134 Tiempo de convergencia. Deje que ∆ denote el paralelismo límite que limita el número máximo de máquinas en las que puede ofertar cada usuario. Experimentamos con ∆ = 5 y ∆ = 20. En ambos casos, usamos 100 máquinas y variamos el número de usuarios. La Figura 4 muestra que el sistema no siempre converge, pero si lo hace, la convergencia ocurre rápidamente. La no convergencia ocurre cuando el número de usuarios está entre 20 y 40 para ∆ = 5, entre 5 y 10 para ∆ = 20. Creemos que la no convergencia es causada por una competencia moderada. Ninguna competencia permite que el sistema se equilibre rápidamente porque los usuarios no tienen que cambiar sus ofertas en reacción a los cambios en otras ofertas. La alta competencia también permite la convergencia porque la decisión de cada usuarios solo tiene un pequeño impacto en otros usuarios, por lo que el sistema es más estable y puede alcanzar gradualmente la convergencia. Sin embargo, cuando hay una competencia moderada, las decisiones de los usuarios pueden causar cambios dramáticos en las decisiones de otros y causar grandes fluctuaciones en las ofertas. En ambos casos de no convergencia, la relación de competidores por máquina, δ = m × ∆/n para uss y n máquinas, está en el intervalo [1, 2]. Aunque el sistema no converge en estos rangos malos, el sistema no logra y mantiene un alto nivel de eficiencia general después de algunas iteraciones (como se muestra en la Figura 5). Actuación. En la Figura 6, presentamos la eficiencia, la uniformidad de la utilidad y la envidia de envidia en el equilibrio de Nash para el modelo de paralelismo finito. Cuando el sistema no converge, medimos el rendimiento tomando el valor mínimo que observamos después de ejecutarse para muchas iteraciones. Cuando ∆ = 5, hay una caída de rendimiento, en particular con respecto a las métricas de equidad, en el rango entre 20 y 40 usuarios (donde no converge). Para un mayor número de usuarios, el sistema converge y logra un nivel más bajo de uniformidad de utilidad, pero un alto grado de eficiencia y envidia de envidia, similar a las del modelo de paralelismo infinito. Como se describió anteriormente, esto se debe a la relación de competencia que cae en el rango de cabeza a cabeza. Cuando el paralelismo unido es grande (∆ = 20), el rendimiento está más cerca del modelo de paralelismo infinito, y no observamos esta caída en el rendimiento.6. Trabajo relacionado Hay dos grupos principales de trabajos relacionados en la asignación de recursos: aquellos que incorporan un mecanismo económico y los que no lo hacen. Un enfoque no económico es la programación (encuestado por Pinedo [20]). Ejemplos de este enfoque son hacer cola en orden de primera llegada, por orden de llegada (FCFS), hacer cola utilizando el consumo de recursos de tareas (por ejemplo, [28]) y la programación utilizando la optimización combinatoria [19]. Todos estos suponen que los valores y el consumo de recursos de las tareas se informan con precisión, lo que no se aplica en presencia de usuarios estratégicos. Vemos la programación y la asignación de recursos como dos funciones separadas. La asignación de recursos divide un recurso entre los diferentes usuarios mientras la programación requiere una asignación dada y ordena los trabajos de los usuarios. Ejemplos del enfoque económico son el engendro [26]), el trabajo de Stoica, et al.[24]., El asignador de recursos del milenio [4], trabajo de Wellman, et al.[27], Bellagio [2]) y magnate [15]). Spawn y el trabajo de Wellman, et al.Utiliza una abstracción de reserva similar a la forma en que se asignan los asientos de la aerolínea. Desafortunadamente, las reservas tienen una alta latencia para adquirir recursos, a diferencia del esquema de anticipación de precio que consideramos. La compensación de los esquemas de anticipación de precio es que los usuarios tienen incertidumbre sobre la cantidad de los recursos que recibirán. Bellagio [3] utiliza el asignador centralizado de compartir. Share asigna recursos utilizando una subasta combinatoria centralizada que permite a los usuarios expresar preferencias con complementaridades. Resolver el problema de la subasta combinatoria de NP-NP proporciona una asignación óptima eficiente. El esquema de licencia previa que consideramos no opera explícitamente en las complementaridades, posiblemente pierda cierta eficiencia, pero también evita la complejidad y la sobrecarga de las subastas combinatorias. Ha habido varios análisis [10, 11, 12, 13, 23] de variaciones de esquemas de asignación de anticipación de precios en el contexto de la asignación de la capacidad de red para los flujos. Su metodología sigue al estudio de los juegos de congestión (potencial) [17, 22] al relacionar el equilibrio de Nash con la solución de un problema de optimización global (generalmente convexo). Pero esas técnicas ya no se aplican a nuestro juego porque modelamos a los usuarios que tienen presupuestos fijos y preferencias privadas para las máquinas. Por ejemplo, a diferencia de esos juegos, puede existir múltiples equilibrios de Nash en nuestro juego. Milchtaich [16] estudió juegos de congestión con preferencias privadas, pero la técnica en [16] es específica del juego de congestión.7. Conclusiones Este trabajo estudia el desempeño de un mecanismo basado en el mercado para grupos compartidos distribuidos utilizando métodos analáticos y de simulación. Mostramos que a pesar de los peores límites de los casos, el sistema puede alcanzar un alto nivel de rendimiento en el equilibrio de Nash en términos de métricas de eficiencia y justicia. Además, con algunas excepciones bajo el modelo de paralelismo finito, el sistema alcanza el equilibrio rápidamente utilizando el mejor algoritmo de respuesta y, cuando el número de usuarios no es demasiado pequeño, por el método de ajuste local codicioso. Si bien nuestro trabajo indica que el esquema de anticipación de precios puede funcionar bien para la asignación de recursos para grupos compartidos, hay muchas direcciones interesantes para el trabajo futuro. Una dirección es considerar funciones de utilidad más realistas. Por ejemplo, suponemos que no hay costo de paralelización, y no hay degradación del rendimiento cuando varios usuarios comparten la misma máquina. En la práctica, ambos supuestos pueden no ser correctos. Para ejemplos, el usuario debe copiar código y datos a una máquina antes de ejecutar su aplicación allí, y hay sobrecarga para multiplexar recursos en una sola máquina. Cuando el tamaño del trabajo es lo suficientemente grande y el grado de multiplexación es lo suficientemente bajo, probablemente podamos ignorar esos efectos, pero esos costos deben tenerse en cuenta para un modelado más realista. Otra suposición es que los usuarios tienen un trabajo infinito, por lo que cuantos más recursos puedan adquirir, mejor. En la práctica, los usuarios tienen trabajo finito. Un enfoque para abordar esto es modelar la utilidad de los usuarios de acuerdo con el tiempo para finalizar una tarea en lugar de la cantidad de recursos que recibe. Otra dirección es estudiar las propiedades dinámicas del sistema cuando los usuarios necesitan cambian con el tiempo, según algún modelo estadístico. Además de las preguntas habituales sobre los juegos repetidos, también sería importante comprender cómo los usuarios deben asignar sus presupuestos sabiamente con el tiempo para acomodar las necesidades futuras.135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de usuarios (a) Límite: 5 máquinas/eficiencia de usuario Utility Uniformity Envy-Freenness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 30 50 60 70 80 90Número de usuarios (b) Límite: 20 máquinas/eficiencia del usuario Utility UNIFORITY Envy-Freenness Figura 6: Eficiencia, uniformidad de servicios públicos y envidia de envidia bajo el modelo de paralelismo finito.n = 100. 8. Agradecimientos Agradecemos a Bernardo Huberman, Lars Rasmusson, Eytan Adar y Moshe Babaioff por sus fructíferas discusiones. También agradecemos a los revisores anónimos por sus útiles comentarios.9. Referencias [1] http://planet-lab.org.[2] A. Auyoung, B. N. Chun, A. C. Snoeren y A. Vahdat. Asignación de recursos en infraestructuras informáticas distribuidas federadas. En Actas del primer taller sobre el sistema operativo y el soporte arquitectónico para la infraestructura de TI bajo demanda, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes y A. Vahdat. Intercambios de recursos computacionales para la asignación de recursos distribuidos.2004. [4] B. N. Chun y D. E. Culler. Compartir recursos proporcionales basados en el mercado para grupos. Informe técnico CSD-1092, Universidad de California en Berkeley, División de Ciencias de la Computación, enero de 2000. [5] M. Feldman, K. Lai y L. Zhang. Un mecanismo de asignación de recursos de anticipación de precio para grupos compartidos distribuidos. Informe técnico, Arxiv, 2005. http://arxiv.org/abs/cs.dc/0502019.[6] D. Ferguson, Y. Yemimi y C. Nikolaou. Algoritmos microeconómicos para el equilibrio de carga en sistemas informáticos distribuidos. En la Conferencia Internacional sobre Sistemas de Computación Distribuido, páginas 491-499, 1988. [7] I. Foster y C. Kesselman. Globus: un kit de herramientas de infraestructura metacomputación. The International Journal of SuperComputer Aplications and High Performance Computing, 11 (2): 115-128, verano de 1997. [8] M. L. Fredman y R. E. Tarjan. Los montones de fibonacci y sus usos en algoritmos mejorados de optimización de red. Journal of the ACM, 34 (3): 596-615, 1987. [9] H. N. Gabow. Estructuras de datos para coincidencia ponderada y antepasados comunes más cercanos con vinculación. En Actas del primer Simposio ACM-SIAM anual sobre algoritmos discretos, páginas 434-443, 1990. [10] B. Hajek y S. Yang. Compradores estratégicos en un juego de oferta de suma para redes planas. Manuscrito, http: //tesla.csl.uiuc.edu/~hajek/papers/hajekyang.pdf, 2004. [11] R. Johari y J. N. Tsitsiklis. Pérdida de eficiencia en un juego de asignación de recursos de red. Matemáticas de la investigación de operaciones, 2004. [12] F. P. Kelly. La carga y el porcentaje de control de tráfico elástico. Transacciones europeas sobre telecomunicaciones, 8: 33-37, 1997. [13] F. P. Kelly y A. K. Maulloo. Control de tarifas en redes de comunicación: precios en la sombra, justicia proporcional y estabilidad. Operational Research Society, 49: 237-252, 1998. [14] H. W. Kuhn. El método húngaro para el problema de asignación. Res. Naval. Logis. Quart., 2: 83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang y B. A. Huberman. Tycoon: una implementación de un sistema distribuido de asignación de recursos basado en el mercado. Manuscrito, http://www.hpl.hp.com/research/tycoon/papers_and_ presentaciones, 2004. [16] I. Milchtaich. Juegos de congestión con funciones de pago específicas del jugador. Juegos y comportamiento económico, 13: 111-124, 1996. [17] D. Monderer y L. S. Sharpley. Juegos potenciales. Juegos y comportamiento económico, 14: 124-143, 1996. [18] C. Papadimitriou. Algoritmos, juegos e Internet. En Actas del 33º STOC, 2001. [19] C. H. Papadimitriou y K. Steiglitz. Optimización combinatoria. Dover Publications, Inc., 1982. [20] M. Pinedo. Planificación. Prentice Hall, 2002. [21] O. Regev y N. Nisan. El mercado de palomitas de maíz: mercados en línea para recursos computacionales. En Actas de la Primera Conferencia Internacional sobre Economías de Información y Computación, páginas 148-157, 1998. [22] R. W. Rosenthal. Una clase de juegos que posee equilibrios Nash de estrategia pura. International Journal of Game Theory, 2: 65-67, 1973. [23] S. Sanghvi y B. Hajek. Asignación óptima de un bien divisible para compradores estratégicos. Manuscrito, http: //tesla.csl.uiuc.edu/~hajek/papers/optdivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab y A. Pothen. Un programador microeconómico para computadoras paralelas. En Actas del taller sobre estrategias de programación de empleo para el procesamiento paralelo, páginas 122-135, abril de 1995. [25] H. R. Varian. Equidad, envidia y eficiencia. Journal of Economic Theory, 9: 63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B. A. Huberman, J. O. Kephart y S. Stornetta. Spawn: una economía computacional distribuida. IEEE Transactions on Software Engineering, 18 (2): 103-117, febrero de 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman y J. K. Mackie-Mason. Protocolos de subastas para la programación descentralizada. Juegos y comportamiento económico, 35: 271-303, 2001. [28] A. Wierman y M. Harchol-Balter. Clasificación de políticas de programación con respecto a la injusticia en un m/gi/1. En Actas de la Conferencia ACM Sigmetrics 2003 sobre medición y modelado de sistemas informáticos, 2003. [29] L. Zhang. Sobre la eficiencia y la justicia de un juego de asignación de recursos presupuestarios fijos. Manuscrito, 2004. 136",
    "original_sentences": [
        "A Price-Anticipating Resource Allocation Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget resource allocation game to understand the performance of a distributed marketbased resource allocation system.",
        "Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual utility.",
        "We look at both the efficiency and the fairness of the allocation at the equilibrium, where fairness is evaluated through the measures of utility uniformity and envy-freeness.",
        "We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high efficiency but poor fairness, the proposed allocation scheme achieves a nice balance of high degrees of efficiency and fairness at the equilibrium.",
        "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1.",
        "INTRODUCTION The primary advantage of distributed shared clusters like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources.",
        "This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users.",
        "Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users.",
        "Finally, sharing allows greater reliability because of redundancy in hosts and network connections.",
        "However, resource allocation in these systems remains the major challenge.",
        "The problem is how to allocate a shared resource both fairly and efficiently (where efficiency is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests.",
        "Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator.",
        "However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set.",
        "Instead, we examine a market-based resource allocation system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a bidding mechanism.",
        "In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource.",
        "This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26].",
        "Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets.",
        "In this work, we examine a price-anticipating scheme in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6).",
        "In this paper, we formulate the fixed budget resource allocation game and study the existence and performance of the Nash equilibria of this game.",
        "For evaluating the Nash equilibria, we consider both their efficiency, measuring how close the social welfare at equilibrium is to the social optimum, and fairness, measuring how different the users utilities are.",
        "Although rarely considered in previous game theoretical study, we believe fairness is a critical metric for a resource allocation schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair resource allocation in favor of one with less efficient, more fair resource allocation.",
        "We use both utility uniformity and envy-freeness to measure fairness.",
        "Utility uniformity, which is common in Computer Science work, measures the closeness of utilities of different users.",
        "Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others.",
        "Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria.",
        "Using analysis, we show that there is always a Nash equilibrium in the fixed budget game if the utility functions satisfy a fairly weak and natural condition of strong competitiveness.",
        "We also show the worst case performance bounds: for m players the efficiency at equilibrium is Ω(1/ √ m), the utility uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83.",
        "Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their utility.",
        "As part of the fixed budget game analysis, we show that strategic users with linear utility functions can calculate their bids using a best response algorithm that quickly results in an allocation with high efficiency with little computational and communication overhead.",
        "We present variations of the best response algorithm for both finite and infinite parallelism tasks.",
        "In addition, we present a local greedy adjustment algorithm that converges more slowly than best response, but allows for non-linear or unformulatable utility functions. • We show that the price-anticipating resource allocation mechanism achieves a high degree of efficiency and fairness.",
        "Using simulation, we find that although the socially optimal allocation results in perfect efficiency, it also results in very poor fairness.",
        "Likewise, allocating according to only users preference weights results in a high fairness, but a mediocre efficiency.",
        "Intuition would suggest that efficiency and fairness are exclusive.",
        "Surprisingly, the Nash equilibrium, reached by each user iteratively applying the best response algorithm to adapt his bids, achieves nearly the efficiency of the social optimum and nearly the fairness of the weight-proportional allocation: the efficiency is ≥ 0.90, the utility uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system.",
        "In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy.",
        "The local adjustment algorithm performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize.",
        "As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of efficiency and fairness.",
        "The rest of the paper is organized as follows.",
        "We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite parallelism model in Section 3.",
        "In Section 4, we describe algorithms for users to optimize their own utility in the fixed budget game.",
        "In Section 5, we describe our simulator and simulation results.",
        "We describe related work in Section 6.",
        "We conclude by discussing some limit of our model and future work in Section 7. 2.",
        "THE MODEL Price-Anticipating Resource Allocation.",
        "We study the problem of allocating a set of divisible resources (or machines).",
        "Suppose that there are m users and n machines.",
        "Each machine can be continuously divided for allocation to multiple users.",
        "An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1.",
        "Let Ω denote the set of all the allocation schemes.",
        "We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed.",
        "Formally, suppose that user i submits a non-negative bid xij to machine j.",
        "The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j.",
        "When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone.",
        "We call xi = (xi1, . . . , xin) the bidding vector of user i.",
        "The additional consideration we have is that each user i has a budget constraint Xi.",
        "Therefore, user is total bids have to sum up to his budget, i.e.",
        "Pn j=1 xij = Xi.",
        "The budget constraints come from the fact that the users do not have infinite budget.",
        "Utility Functions.",
        "Each user is utility is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine.",
        "Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines.",
        "Therefore, the basic utility function we consider is the linear utility function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j.",
        "For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications.",
        "As a result, w11 > w12 and w21 < w22.",
        "Our definition of utility functions corresponds to the user having enough jobs or enough parallelism within jobs to utilize all the machines.",
        "Consequently, the users goal is to grab as much of a resource as possible.",
        "We call this the infinite parallelism model.",
        "In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity).",
        "To model this, we also consider the more realistic finite parallelism model, where the users parallelism is bounded by ki, and the users utility Ui is the sum of the ki largest wijrij.",
        "In this model, the user only submits bids to up to ki machines.",
        "Our abstraction is to capture the essense of the problem and facilitate our analysis.",
        "In Section 7, we discuss the limit of the above definition of utility functions.",
        "Best Response.",
        "As typically, we assume the users are selfish and strategic - they all act to maximize their own utility, defined by their utility functions.",
        "From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0.",
        "The difficulty of the above optimization problem depends on the formulation of Ui.",
        "We will show later how to solve it for the infinite parallelism model and provide a heuristic for finite parallelism model.",
        "Nash Equilibrium.",
        "By the assumption that the user is selfish, each users bidding vector is the best response to the system.",
        "The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users.",
        "Such a state is known as the Nash equilibrium, a central concept in Game Theory.",
        "Formally, the bidding vectors x1, . . . , xm is a Nash equilibrium if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) .",
        "The Nash equilibrium is desirable because it is a stable state at which no one has incentive to change his strategy.",
        "But a game may not have an equilibrium.",
        "Indeed, a Nash equilibrium may not exist in the price anticipating scheme we define above.",
        "This can be shown by a simple example of two players and two machines.",
        "For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2.",
        "Then player 1 should never bid on machine 2 because it has no value to him.",
        "Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the Nash equilibrium.",
        "We should note that even the mixed strategy equilibrium does not exist in this example.",
        "Clearly, this happens whenever there is a resource that is wanted by only one player.",
        "To rule out this case, we consider those strongly competitive games.1 Under the infinite parallelism model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0.",
        "Under such a condition, we have that (see [5] for a proof), Theorem 1.",
        "There always exists a pure strategy Nash equilibrium in a strongly competitive game.",
        "Given the existence of the Nash equilibrium, the next important question is the performance at the Nash equilibrium, which is often measured by its efficiency and fairness.",
        "Efficiency (Price of Anarchy).",
        "For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω.",
        "Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities.",
        "The efficiency at an allocation scheme ω is defined as π(ω) = U(ω) U∗ .",
        "Let Ω0 denote the set of the allocation at the Nash equilibrium.",
        "When there exists Nash equilibrium, i.e.",
        "Ω0 = ∅, define the efficiency of a game Q to be π(Q) = minω∈Ω0 π(ω).",
        "It is usually the case that π < 1, i.e. there is an efficiency loss at a Nash equilibrium.",
        "This is the price of anarchy [18] paid for not having central enforcement of the users good behavior.",
        "This price is interesting because central control results in the best possible outcome, but is not possible in most cases.",
        "Fairness.",
        "While the definition of efficiency is standard, there are multiple ways to define fairness.",
        "We consider two metrics.",
        "One is by comparing the users utilities.",
        "The utility uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum utility and the maximum utility among the users.",
        "Such definition (or utility discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature.",
        "Under this definition, the utility uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω).",
        "The other metric extensively studied in Economics is the concept of envy-freeness [25].",
        "Unlike the utility uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive.",
        "Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine.",
        "These alternatives, however, introduce the problem of coming up with the right price or limit.",
        "When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme.",
        "Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3.",
        "NASH EQUILIBRIUM In this section, we present some theoretical results regarding the performance at Nash equilibrium under the infinite parallelism model.",
        "We assume that the game is strongly competitive to guarantee the existence of equilibria.",
        "For a meaningful discussion of efficiency and fairness, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same utility when they own all the resources.",
        "This precludes the case when a user has an extremely high budget, resulting in very low efficiency or low fairness at equilibrium.",
        "We first provide a characterization of the equilibria.",
        "By definition, the bidding vectors x1, . . . , xm is a Nash equilibrium if and only if each players strategy is the best response to the groups bids.",
        "Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid.",
        "Under the infinite parallelism model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e.",
        "U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties.",
        "We start with two special cases to provide some intuition about the game.",
        "The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games.",
        "Let x and y denote the respective bids of users 1 and 2 on machine 1.",
        "Denote by s = x + y and δ = (2 − s)/s.",
        "Equal-weight game.",
        "In Figure 1, both users have equal valuations for the two machines.",
        "By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α.",
        "Thus, there exists a unique Nash equilibrium of the game where the two users have the same bidding vector.",
        "At the equilibrium, the utility of each user is 1/2, and the social welfare is 1.",
        "On the other hand, the social optimum is clearly 1.",
        "Thus, the equal-weight game is ideal as the efficiency, utility uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games.",
        "Opposite-weight game.",
        "The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines.",
        "Assume that α ≥ 1/2.",
        "Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each Nash equilibrium corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1.",
        "Clearly, δ = 1 is a root of f(δ).",
        "When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine.",
        "At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828.",
        "However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria.",
        "Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid.",
        "In this case, user 1 gets most of machine 1 and almost half of machine 2.",
        "The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4.",
        "This solves to α0 = 2+ √ 2 4 ≈ 0.854.",
        "Those asymmetric equilibria at δ = 1 are bad as they yield lower efficiency than the symmetric equilibrium.",
        "Let δ0 be the minimum root.",
        "When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0.",
        "Then, x, y → 1.",
        "Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75.",
        "From the above simple game, we already observe that the Nash equilibrium may not be unique, which is different from many congestion games in which the Nash equilibrium is unique.",
        "For the general two player game, we can show that 0.75 is actually the worst efficiency bound with a proof in [5].",
        "Further, at the asymmetric equilibrium, the utility uniformity approaches 1/2 when α → 1.",
        "This is the worst possible for two player games because as we show in Section 3.2, a users utility at any Nash equilibrium is at least 1/m in the m-player game.",
        "Another consequence is that the two player game is always envy-free.",
        "Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively.",
        "Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free.",
        "Theorem 2.",
        "For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1.",
        "All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large.",
        "The following example shows the worst case bound.",
        "Consider a system with m = n2 + n players and n machines.",
        "Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine.",
        "The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines.",
        "Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine.",
        "Hence, the total money on each machine is n + 1.",
        "At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total utility of n3 · 1 n2(n+1) < 1.",
        "The other n players each receives 1 n+1 on their favorite machine, resulting in a total utility of n · 1 n+1 < 1.",
        "Therefore, the total utility of the equilibrium is < 2, while the social optimum is n = Θ( √ m).",
        "This bound is the worst possible.",
        "What about the utility uniformity of the multi-player allocation game?",
        "We next show that the utility uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i.",
        "User i can ensure a utility of 1/m by distributing his budget proportionally to the current bids.",
        "That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1.",
        "Therefore, rij = 1 1+m−1 = 1 m .",
        "The total utility of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m .",
        "Since each users utility cannot exceed 1, the minimal possible uniformity is 1/m.",
        "While the utility uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29].",
        "To summarize, we have that Theorem 3.",
        "For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2.",
        "All of these bounds are tight in the worst case. 4.",
        "ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite parallelism model.",
        "However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the Nash equilibrium for the typical distribution of utility functions.",
        "In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response algorithm leads to the equilibrium.",
        "To answer these questions, we resort to simulations.",
        "In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments.",
        "We consider both the infinite parallelism and finite parallelism model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most.",
        "We now present the algorithm for computing the best response.",
        "Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0.",
        "To compute the best response, we first sort wj yj in decreasing order.",
        "Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn .",
        "Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution.",
        "We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too.",
        "Suppose this were not true.",
        "Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) .",
        "Thus it contradicts with the optimality condition (1).",
        "Suppose that k = max{i|x∗ i > 0}.",
        "Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 .",
        "Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi .",
        "The remaining question is how to determine k. It is the largest value such that x∗ k > 0.",
        "Thus, we obtain the following algorithm to compute the best response of a user: 1.",
        "Sort the machines according to wi yi in decreasing order. 2.",
        "Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3.",
        "Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj.",
        "The computational complexity of this algorithm is O(n log n), dominated by the sorting.",
        "In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible.",
        "The best response algorithm must send and receive O(n) messages because each user must obtain the total bids from each host.",
        "In practice, this is more significant than the computational cost.",
        "Note that hosts only reveal to users the sum of the bids on them.",
        "As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite Parallelism Model Recall that in the finite parallelism model, each user i only places bids on at most ki machines.",
        "Of course, the infinite parallelism model is just a special case of finite parallelism model in which ki = n for all the is.",
        "In the finite parallelism model, computing the social optimum is no longer trivial due to bounded parallelism.",
        "It can instead be computed by using the maximum matching algorithm.",
        "Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj).",
        "A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching.",
        "As a result, the following lemma holds.",
        "Lemma 1.",
        "The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching algorithm to compute the social optimum.",
        "The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14].",
        "We choose to implement the Hungarian algorithm [14, 19] because of its simplicity.",
        "There may exist a more efficient algorithm for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question.",
        "However, we do not know an efficient algorithm to compute the best response under the finite parallelism model.",
        "Instead, we provide the following local search heuristic.",
        "Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn.",
        "Let the users budget be X and the parallelism bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users utility.",
        "For a subset of machines A, denote by x(A) the best response on A without parallelism bound and by U(A) the utility obtained by the best response algorithm.",
        "The local search works as follows: 1.",
        "Set A to be the k machines with the highest wi/yi. 2.",
        "Compute U(A) by the infinite parallelism best response algorithm (Sec 4.1) on A. 3.",
        "For each i ∈ A and each j /∈ A, repeat 4.",
        "Let B = A − {i} + {j}, compute U(B). 5.",
        "If(U(B) > U(A)), let A ← B, and goto 2. 6.",
        "Output x(A).",
        "Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response utility.",
        "If yes, we swap the machines and repeat the process.",
        "Otherwise, we have reached a local maxima and output that value.",
        "We suspect that the local maxima that this algorithm finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it.",
        "However, in our simulations, this algorithm quickly converges to a high (≥ .7) efficiency. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear utility functions described earlier.",
        "In practice, utility functions may have more a complicated form, or even worse, a user may not have a formulation of his utility function.",
        "We do assume that the user still has a way to measure his utility, which is the minimum assumption necessary for any market-based resource allocation mechanism.",
        "In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows.",
        "A user finds the two machines that provide him with the highest and lowest marginal utility.",
        "He then moves a fixed small amount of money from the machine with low marginal utility to the machine with the higher one.",
        "This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same.",
        "This condition guarantees the allocation is the optimum when the utility function is concave.",
        "The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5.",
        "SIMULATION RESULTS While the analytic results provide us with worst-case analysis for the infinite parallelism model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite parallelism model.",
        "First, we determine whether the user bidding process converges, and if so, what the rate of convergence is.",
        "Second, in cases of convergence, we look at the performance at equilibrium, using the efficiency and fairness metrics defined above.",
        "Iterative Method.",
        "In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met.",
        "The initial bid is set proportional to the users weights on the machines.",
        "We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3.",
        "Convergence Criteria.",
        "Convergence time measures how quickly the system reaches equilibrium.",
        "It is particularly important in the highly dynamic environment of distributed shared clusters, in which the systems conditions may change before reaching the equilibrium.",
        "Thus, a high convergence rate may be more significant than the efficiency at the equilibrium.",
        "There are several different criteria for convergence.",
        "The strongest criterion is to require that there is only negligible change in the bids of each user.",
        "The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged.",
        "The less strict utility gap criterion requires there to be only negligible change in the users utility.",
        "Given users concern for utility, this is a more natural definition.",
        "Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small utility gain.",
        "Therefore, we use the utility gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the utility gap of each user is smaller than (0.001 in our experiments).",
        "However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in utility as they move money around.",
        "For this method, we use the marginal utility gap criterion.",
        "We compare the highest and lowest utility margins on the machines.",
        "If the difference is negligible, then we consider the system to be converged.",
        "In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion.",
        "Under this criterion, a system has stabilized if the change in social welfare is ≤ .",
        "Individual users utility may not have converged.",
        "This criterion is useful to evaluate how quickly the system as a whole reaches a particular efficiency level.",
        "User preferences.",
        "We experiment with two models of user preferences, random distribution and correlated distribution.",
        "With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution.",
        "In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run.",
        "To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth).",
        "For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk.",
        "By using these profiles, we compress the parameter space and introduce correlations between users and machines.",
        "In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users).",
        "Sections 5.1 and 5.2 present the simulation results when we apply the infinite parallelism and finite parallelism models, respectively.",
        "If the system converges, we report the number of iterations until convergence.",
        "A convergence time of 200 iterations indicates non-convergence, in which case we report the efficiency and fairness values at the point we terminate the simulation. 5.1 Infinite parallelism In this section, we apply the infinite parallelism model, which assumes that users can use an unlimited number of machines.",
        "We present the efficiency and fairness at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively).",
        "We present results for the two user preference models.",
        "With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter).",
        "In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1).",
        "Convergence Time.",
        "Figure 2 shows the convergence time, efficiency and fairness of the infinite parallelism model under uniform (left) and correlated (right) preferences.",
        "Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: Efficiency, utility uniformity, enviness and convergence time as a function of the number of users under the infinite parallelism model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite parallelism model. number of users = 40. n = 100.",
        "The best-response algorithm converges within a few number of iterations for any number of users.",
        "In contrast, the local greedy adjustment algorithm does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users.",
        "We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc.",
        "Regardless, the local greedy adjustment method stabilizes within 100 iterations.",
        "Figure 3 presents the efficiency over time for a system with 40 users.",
        "It demonstrates that while both adjustment methods reach the same social welfare, the best-response algorithm is faster.",
        "In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it.",
        "Efficiency.",
        "Figure 2 (c) and (d) present the efficiency as a function of the number of users.",
        "We present the efficiency at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison.",
        "Social optimum provides an efficient allocation by definition.",
        "For both user preference models, the efficiency at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum.",
        "The efficiency at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences.",
        "Fairness.",
        "Figure 2(e) and (f) present the utility uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness.",
        "While the social optimum yields perfect efficiency, it has poor fairness.",
        "The weightproportional method achieves the highest fairness among the three allocation methods, but the fairness at the equilibrium is close.",
        "The utility uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other.",
        "Although utility uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point.",
        "At the social optimum, utility uniformity can be infinitely poor, as some users may be allocated no resources at all.",
        "The same is true with respect to envy-freeness.",
        "The difference between uniform and correlated preferences is best demonstrated in the social optimum results.",
        "When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both utility uniformity and envy-freeness go to zero.",
        "As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation.",
        "These results demonstrate the tradeoff between the different allocation methods.",
        "The efficiency at the equilibrium is lower than the social optimum, but it performs much better with respect to fairness.",
        "The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite parallelism 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite parallelism model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 Efficiency Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: Efficiency level over time under the finite parallelism model with local search algorithm. n = 100.",
        "We also consider the finite parallelism model and use the local search algorithm, as described in Section 4.2, to adjust users bids.",
        "We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the simulation results for only the uniform distribution.",
        "In our experiments, the local search algorithm stops quickly - it usually discovers a local maximum within two iterations.",
        "As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high efficiency. 134 Convergence time.",
        "Let ∆ denote the parallelism bound that limits the maximum number of machines each user can bid on.",
        "We experiment with ∆ = 5 and ∆ = 20.",
        "In both cases, we use 100 machines and vary the number of users.",
        "Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly.",
        "The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20.",
        "We believe that the non-convergence is caused by moderate competition.",
        "No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids.",
        "High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence.",
        "However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids.",
        "In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2].",
        "Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall efficiency after a few iterations (as shown in Figure 5).",
        "Performance.",
        "In Figure 6, we present the efficiency, utility uniformity, and envy-freeness at the Nash equilibrium for the finite parallelism model.",
        "When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations.",
        "When ∆ = 5, there is a performance drop, in particular with respect to the fairness metrics, in the range between 20 and 40 users (where it does not converge).",
        "For a larger number of users, the system converges and achieves a lower level of utility uniformity, but a high degree of efficiency and envy-freeness, similar to those under the infinite parallelism model.",
        "As described above, this is due the competition ratio falling into the head-to-head range.",
        "When the parallelism bound is large (∆ = 20), the performance is closer to the infinite parallelism model, and we do not observe this drop in performance. 6.",
        "RELATED WORK There are two main groups of related work in resource allocation: those that incorporate an economic mechanism, and those that do not.",
        "One non-economic approach is scheduling (surveyed by Pinedo [20]).",
        "Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19].",
        "These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users.",
        "We view scheduling and resource allocation as two separate functions.",
        "Resource allocation divides a resource among different users while scheduling takes a given allocation and orders a users jobs.",
        "Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]).",
        "Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated.",
        "Unfortunately, reservations have a high latency to acquire resources, unlike the price-anticipating scheme we consider.",
        "The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive.",
        "Bellagio[3] uses the SHARE centralized allocator.",
        "SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities.",
        "Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation.",
        "The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some efficiency, but it also avoids the complexity and overhead of combinatorial auctions.",
        "There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows.",
        "Their methodology follows the study of congestion (potential) games [17, 22] by relating the Nash equilibrium to the solution of a (usually convex) global optimization problem.",
        "But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines.",
        "For example, unlike those games, there may exist multiple Nash equilibria in our game.",
        "Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7.",
        "CONCLUSIONS This work studies the performance of a market-based mechanism for distributed shared clusters using both analyatical and simulation methods.",
        "We show that despite the worst case bounds, the system can reach a high performance level at the Nash equilibrium in terms of both efficiency and fairness metrics.",
        "In addition, with a few exceptions under the finite parallelism model, the system reaches equilibrium quickly by using the best response algorithm and, when the number of users is not too small, by the greedy local adjustment method.",
        "While our work indicates that the price-anticipating scheme may work well for resource allocation for shared clusters, there are many interesting directions for future work.",
        "One direction is to consider more realistic utility functions.",
        "For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine.",
        "In practice, both assumptions may not be correct.",
        "For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine.",
        "When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling.",
        "Another assumption is that users have infinite work, so the more resources they can acquire, the better.",
        "In practice, users have finite work.",
        "One approach to address this is to model the users utility according to the time to finish a task rather than the amount of resources he receives.",
        "Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model.",
        "In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user Efficiency Utility uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user Efficiency Utility uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite parallelism model. n = 100. 8.",
        "ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions.",
        "We also thank the anonymous reviewers for their useful comments. 9.",
        "REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat.",
        "Resource Allocation in Federated Distributed Computing Infrastructures.",
        "In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat.",
        "Computational Resource Exchanges for Distributed Resource Allocation. 2004. [4] B. N. Chun and D. E. Culler.",
        "Market-based Proportional Resource Sharing for Clusters.",
        "Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang.",
        "A Price-anticipating Resource Allocation Mechanism for Distributed Shared Clusters.",
        "Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou.",
        "Microeconomic Algorithms for Load Balancing in Distributed Computer Systems.",
        "In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I.",
        "Foster and C. Kesselman.",
        "Globus: A Metacomputing Infrastructure Toolkit.",
        "The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan.",
        "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.",
        "Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow.",
        "Data Structures for Weighted Matching and Nearest Common Ancestors with Linking.",
        "In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang.",
        "Strategic Buyers in a Sum Bid Game for Flat Networks.",
        "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis.",
        "Efficiency Loss in a Network Resource Allocation Game.",
        "Mathematics of Operations Research, 2004. [12] F. P. Kelly.",
        "Charging and Rate Control for Elastic Traffic.",
        "European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo.",
        "Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability.",
        "Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn.",
        "The Hungarian Method for the Assignment Problem.",
        "Naval Res.",
        "Logis.",
        "Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B.",
        "A. Huberman.",
        "Tycoon: an Implemention of a Distributed Market-Based Resource Allocation System.",
        "Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich.",
        "Congestion Games with Player-Specific Payoff Functions.",
        "Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley.",
        "Potential Games.",
        "Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou.",
        "Algorithms, Games, and the Internet.",
        "In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz.",
        "Combinatorial Optimization.",
        "Dover Publications, Inc., 1982. [20] M. Pinedo.",
        "Scheduling.",
        "Prentice Hall, 2002. [21] O. Regev and N. Nisan.",
        "The Popcorn Market: Online Markets for Computational Resources.",
        "In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal.",
        "A Class of Games Possessing Pure-Strategy Nash Equilibria.",
        "Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek.",
        "Optimal Allocation of a Divisible Good to Strategic Buyers.",
        "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen.",
        "A Microeconomic Scheduler for Parallel Computers.",
        "In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian.",
        "Equity, Envy, and Efficiency.",
        "Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B.",
        "A. Huberman, J. O. Kephart, and S. Stornetta.",
        "Spawn: A Distributed Computational Economy.",
        "IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason.",
        "Auction Protocols for Decentralized Scheduling.",
        "Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter.",
        "Classifying Scheduling Policies with respect to Unfairness in an M/GI/1.",
        "In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang.",
        "On the Efficiency and Fairness of a Fixed Budget Resource Allocation Game.",
        "Manuscript, 2004. 136"
    ],
    "error_count": 0,
    "keys": {
        "distributed shared cluster": {
            "translated_key": "clúster compartido distribuido",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Price-Anticipating Resource Allocation Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget resource allocation game to understand the performance of a distributed marketbased resource allocation system.",
                "Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual utility.",
                "We look at both the efficiency and the fairness of the allocation at the equilibrium, where fairness is evaluated through the measures of utility uniformity and envy-freeness.",
                "We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high efficiency but poor fairness, the proposed allocation scheme achieves a nice balance of high degrees of efficiency and fairness at the equilibrium.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1.",
                "INTRODUCTION The primary advantage of <br>distributed shared cluster</br>s like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources.",
                "This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users.",
                "Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users.",
                "Finally, sharing allows greater reliability because of redundancy in hosts and network connections.",
                "However, resource allocation in these systems remains the major challenge.",
                "The problem is how to allocate a shared resource both fairly and efficiently (where efficiency is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests.",
                "Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator.",
                "However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set.",
                "Instead, we examine a market-based resource allocation system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a bidding mechanism.",
                "In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource.",
                "This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26].",
                "Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets.",
                "In this work, we examine a price-anticipating scheme in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6).",
                "In this paper, we formulate the fixed budget resource allocation game and study the existence and performance of the Nash equilibria of this game.",
                "For evaluating the Nash equilibria, we consider both their efficiency, measuring how close the social welfare at equilibrium is to the social optimum, and fairness, measuring how different the users utilities are.",
                "Although rarely considered in previous game theoretical study, we believe fairness is a critical metric for a resource allocation schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair resource allocation in favor of one with less efficient, more fair resource allocation.",
                "We use both utility uniformity and envy-freeness to measure fairness.",
                "Utility uniformity, which is common in Computer Science work, measures the closeness of utilities of different users.",
                "Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others.",
                "Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria.",
                "Using analysis, we show that there is always a Nash equilibrium in the fixed budget game if the utility functions satisfy a fairly weak and natural condition of strong competitiveness.",
                "We also show the worst case performance bounds: for m players the efficiency at equilibrium is Ω(1/ √ m), the utility uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83.",
                "Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their utility.",
                "As part of the fixed budget game analysis, we show that strategic users with linear utility functions can calculate their bids using a best response algorithm that quickly results in an allocation with high efficiency with little computational and communication overhead.",
                "We present variations of the best response algorithm for both finite and infinite parallelism tasks.",
                "In addition, we present a local greedy adjustment algorithm that converges more slowly than best response, but allows for non-linear or unformulatable utility functions. • We show that the price-anticipating resource allocation mechanism achieves a high degree of efficiency and fairness.",
                "Using simulation, we find that although the socially optimal allocation results in perfect efficiency, it also results in very poor fairness.",
                "Likewise, allocating according to only users preference weights results in a high fairness, but a mediocre efficiency.",
                "Intuition would suggest that efficiency and fairness are exclusive.",
                "Surprisingly, the Nash equilibrium, reached by each user iteratively applying the best response algorithm to adapt his bids, achieves nearly the efficiency of the social optimum and nearly the fairness of the weight-proportional allocation: the efficiency is ≥ 0.90, the utility uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system.",
                "In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy.",
                "The local adjustment algorithm performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize.",
                "As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of efficiency and fairness.",
                "The rest of the paper is organized as follows.",
                "We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite parallelism model in Section 3.",
                "In Section 4, we describe algorithms for users to optimize their own utility in the fixed budget game.",
                "In Section 5, we describe our simulator and simulation results.",
                "We describe related work in Section 6.",
                "We conclude by discussing some limit of our model and future work in Section 7. 2.",
                "THE MODEL Price-Anticipating Resource Allocation.",
                "We study the problem of allocating a set of divisible resources (or machines).",
                "Suppose that there are m users and n machines.",
                "Each machine can be continuously divided for allocation to multiple users.",
                "An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1.",
                "Let Ω denote the set of all the allocation schemes.",
                "We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed.",
                "Formally, suppose that user i submits a non-negative bid xij to machine j.",
                "The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j.",
                "When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone.",
                "We call xi = (xi1, . . . , xin) the bidding vector of user i.",
                "The additional consideration we have is that each user i has a budget constraint Xi.",
                "Therefore, user is total bids have to sum up to his budget, i.e.",
                "Pn j=1 xij = Xi.",
                "The budget constraints come from the fact that the users do not have infinite budget.",
                "Utility Functions.",
                "Each user is utility is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine.",
                "Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines.",
                "Therefore, the basic utility function we consider is the linear utility function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j.",
                "For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications.",
                "As a result, w11 > w12 and w21 < w22.",
                "Our definition of utility functions corresponds to the user having enough jobs or enough parallelism within jobs to utilize all the machines.",
                "Consequently, the users goal is to grab as much of a resource as possible.",
                "We call this the infinite parallelism model.",
                "In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity).",
                "To model this, we also consider the more realistic finite parallelism model, where the users parallelism is bounded by ki, and the users utility Ui is the sum of the ki largest wijrij.",
                "In this model, the user only submits bids to up to ki machines.",
                "Our abstraction is to capture the essense of the problem and facilitate our analysis.",
                "In Section 7, we discuss the limit of the above definition of utility functions.",
                "Best Response.",
                "As typically, we assume the users are selfish and strategic - they all act to maximize their own utility, defined by their utility functions.",
                "From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0.",
                "The difficulty of the above optimization problem depends on the formulation of Ui.",
                "We will show later how to solve it for the infinite parallelism model and provide a heuristic for finite parallelism model.",
                "Nash Equilibrium.",
                "By the assumption that the user is selfish, each users bidding vector is the best response to the system.",
                "The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users.",
                "Such a state is known as the Nash equilibrium, a central concept in Game Theory.",
                "Formally, the bidding vectors x1, . . . , xm is a Nash equilibrium if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) .",
                "The Nash equilibrium is desirable because it is a stable state at which no one has incentive to change his strategy.",
                "But a game may not have an equilibrium.",
                "Indeed, a Nash equilibrium may not exist in the price anticipating scheme we define above.",
                "This can be shown by a simple example of two players and two machines.",
                "For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2.",
                "Then player 1 should never bid on machine 2 because it has no value to him.",
                "Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the Nash equilibrium.",
                "We should note that even the mixed strategy equilibrium does not exist in this example.",
                "Clearly, this happens whenever there is a resource that is wanted by only one player.",
                "To rule out this case, we consider those strongly competitive games.1 Under the infinite parallelism model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0.",
                "Under such a condition, we have that (see [5] for a proof), Theorem 1.",
                "There always exists a pure strategy Nash equilibrium in a strongly competitive game.",
                "Given the existence of the Nash equilibrium, the next important question is the performance at the Nash equilibrium, which is often measured by its efficiency and fairness.",
                "Efficiency (Price of Anarchy).",
                "For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω.",
                "Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities.",
                "The efficiency at an allocation scheme ω is defined as π(ω) = U(ω) U∗ .",
                "Let Ω0 denote the set of the allocation at the Nash equilibrium.",
                "When there exists Nash equilibrium, i.e.",
                "Ω0 = ∅, define the efficiency of a game Q to be π(Q) = minω∈Ω0 π(ω).",
                "It is usually the case that π < 1, i.e. there is an efficiency loss at a Nash equilibrium.",
                "This is the price of anarchy [18] paid for not having central enforcement of the users good behavior.",
                "This price is interesting because central control results in the best possible outcome, but is not possible in most cases.",
                "Fairness.",
                "While the definition of efficiency is standard, there are multiple ways to define fairness.",
                "We consider two metrics.",
                "One is by comparing the users utilities.",
                "The utility uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum utility and the maximum utility among the users.",
                "Such definition (or utility discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature.",
                "Under this definition, the utility uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω).",
                "The other metric extensively studied in Economics is the concept of envy-freeness [25].",
                "Unlike the utility uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive.",
                "Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine.",
                "These alternatives, however, introduce the problem of coming up with the right price or limit.",
                "When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme.",
                "Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3.",
                "NASH EQUILIBRIUM In this section, we present some theoretical results regarding the performance at Nash equilibrium under the infinite parallelism model.",
                "We assume that the game is strongly competitive to guarantee the existence of equilibria.",
                "For a meaningful discussion of efficiency and fairness, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same utility when they own all the resources.",
                "This precludes the case when a user has an extremely high budget, resulting in very low efficiency or low fairness at equilibrium.",
                "We first provide a characterization of the equilibria.",
                "By definition, the bidding vectors x1, . . . , xm is a Nash equilibrium if and only if each players strategy is the best response to the groups bids.",
                "Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid.",
                "Under the infinite parallelism model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e.",
                "U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties.",
                "We start with two special cases to provide some intuition about the game.",
                "The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games.",
                "Let x and y denote the respective bids of users 1 and 2 on machine 1.",
                "Denote by s = x + y and δ = (2 − s)/s.",
                "Equal-weight game.",
                "In Figure 1, both users have equal valuations for the two machines.",
                "By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α.",
                "Thus, there exists a unique Nash equilibrium of the game where the two users have the same bidding vector.",
                "At the equilibrium, the utility of each user is 1/2, and the social welfare is 1.",
                "On the other hand, the social optimum is clearly 1.",
                "Thus, the equal-weight game is ideal as the efficiency, utility uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games.",
                "Opposite-weight game.",
                "The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines.",
                "Assume that α ≥ 1/2.",
                "Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each Nash equilibrium corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1.",
                "Clearly, δ = 1 is a root of f(δ).",
                "When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine.",
                "At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828.",
                "However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria.",
                "Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid.",
                "In this case, user 1 gets most of machine 1 and almost half of machine 2.",
                "The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4.",
                "This solves to α0 = 2+ √ 2 4 ≈ 0.854.",
                "Those asymmetric equilibria at δ = 1 are bad as they yield lower efficiency than the symmetric equilibrium.",
                "Let δ0 be the minimum root.",
                "When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0.",
                "Then, x, y → 1.",
                "Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75.",
                "From the above simple game, we already observe that the Nash equilibrium may not be unique, which is different from many congestion games in which the Nash equilibrium is unique.",
                "For the general two player game, we can show that 0.75 is actually the worst efficiency bound with a proof in [5].",
                "Further, at the asymmetric equilibrium, the utility uniformity approaches 1/2 when α → 1.",
                "This is the worst possible for two player games because as we show in Section 3.2, a users utility at any Nash equilibrium is at least 1/m in the m-player game.",
                "Another consequence is that the two player game is always envy-free.",
                "Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively.",
                "Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free.",
                "Theorem 2.",
                "For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1.",
                "All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large.",
                "The following example shows the worst case bound.",
                "Consider a system with m = n2 + n players and n machines.",
                "Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine.",
                "The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines.",
                "Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine.",
                "Hence, the total money on each machine is n + 1.",
                "At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total utility of n3 · 1 n2(n+1) < 1.",
                "The other n players each receives 1 n+1 on their favorite machine, resulting in a total utility of n · 1 n+1 < 1.",
                "Therefore, the total utility of the equilibrium is < 2, while the social optimum is n = Θ( √ m).",
                "This bound is the worst possible.",
                "What about the utility uniformity of the multi-player allocation game?",
                "We next show that the utility uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i.",
                "User i can ensure a utility of 1/m by distributing his budget proportionally to the current bids.",
                "That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1.",
                "Therefore, rij = 1 1+m−1 = 1 m .",
                "The total utility of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m .",
                "Since each users utility cannot exceed 1, the minimal possible uniformity is 1/m.",
                "While the utility uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29].",
                "To summarize, we have that Theorem 3.",
                "For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2.",
                "All of these bounds are tight in the worst case. 4.",
                "ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite parallelism model.",
                "However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the Nash equilibrium for the typical distribution of utility functions.",
                "In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response algorithm leads to the equilibrium.",
                "To answer these questions, we resort to simulations.",
                "In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments.",
                "We consider both the infinite parallelism and finite parallelism model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most.",
                "We now present the algorithm for computing the best response.",
                "Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0.",
                "To compute the best response, we first sort wj yj in decreasing order.",
                "Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn .",
                "Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution.",
                "We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too.",
                "Suppose this were not true.",
                "Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) .",
                "Thus it contradicts with the optimality condition (1).",
                "Suppose that k = max{i|x∗ i > 0}.",
                "Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 .",
                "Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi .",
                "The remaining question is how to determine k. It is the largest value such that x∗ k > 0.",
                "Thus, we obtain the following algorithm to compute the best response of a user: 1.",
                "Sort the machines according to wi yi in decreasing order. 2.",
                "Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3.",
                "Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj.",
                "The computational complexity of this algorithm is O(n log n), dominated by the sorting.",
                "In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible.",
                "The best response algorithm must send and receive O(n) messages because each user must obtain the total bids from each host.",
                "In practice, this is more significant than the computational cost.",
                "Note that hosts only reveal to users the sum of the bids on them.",
                "As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite Parallelism Model Recall that in the finite parallelism model, each user i only places bids on at most ki machines.",
                "Of course, the infinite parallelism model is just a special case of finite parallelism model in which ki = n for all the is.",
                "In the finite parallelism model, computing the social optimum is no longer trivial due to bounded parallelism.",
                "It can instead be computed by using the maximum matching algorithm.",
                "Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj).",
                "A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching.",
                "As a result, the following lemma holds.",
                "Lemma 1.",
                "The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching algorithm to compute the social optimum.",
                "The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14].",
                "We choose to implement the Hungarian algorithm [14, 19] because of its simplicity.",
                "There may exist a more efficient algorithm for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question.",
                "However, we do not know an efficient algorithm to compute the best response under the finite parallelism model.",
                "Instead, we provide the following local search heuristic.",
                "Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn.",
                "Let the users budget be X and the parallelism bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users utility.",
                "For a subset of machines A, denote by x(A) the best response on A without parallelism bound and by U(A) the utility obtained by the best response algorithm.",
                "The local search works as follows: 1.",
                "Set A to be the k machines with the highest wi/yi. 2.",
                "Compute U(A) by the infinite parallelism best response algorithm (Sec 4.1) on A. 3.",
                "For each i ∈ A and each j /∈ A, repeat 4.",
                "Let B = A − {i} + {j}, compute U(B). 5.",
                "If(U(B) > U(A)), let A ← B, and goto 2. 6.",
                "Output x(A).",
                "Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response utility.",
                "If yes, we swap the machines and repeat the process.",
                "Otherwise, we have reached a local maxima and output that value.",
                "We suspect that the local maxima that this algorithm finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it.",
                "However, in our simulations, this algorithm quickly converges to a high (≥ .7) efficiency. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear utility functions described earlier.",
                "In practice, utility functions may have more a complicated form, or even worse, a user may not have a formulation of his utility function.",
                "We do assume that the user still has a way to measure his utility, which is the minimum assumption necessary for any market-based resource allocation mechanism.",
                "In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows.",
                "A user finds the two machines that provide him with the highest and lowest marginal utility.",
                "He then moves a fixed small amount of money from the machine with low marginal utility to the machine with the higher one.",
                "This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same.",
                "This condition guarantees the allocation is the optimum when the utility function is concave.",
                "The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5.",
                "SIMULATION RESULTS While the analytic results provide us with worst-case analysis for the infinite parallelism model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite parallelism model.",
                "First, we determine whether the user bidding process converges, and if so, what the rate of convergence is.",
                "Second, in cases of convergence, we look at the performance at equilibrium, using the efficiency and fairness metrics defined above.",
                "Iterative Method.",
                "In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met.",
                "The initial bid is set proportional to the users weights on the machines.",
                "We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3.",
                "Convergence Criteria.",
                "Convergence time measures how quickly the system reaches equilibrium.",
                "It is particularly important in the highly dynamic environment of <br>distributed shared cluster</br>s, in which the systems conditions may change before reaching the equilibrium.",
                "Thus, a high convergence rate may be more significant than the efficiency at the equilibrium.",
                "There are several different criteria for convergence.",
                "The strongest criterion is to require that there is only negligible change in the bids of each user.",
                "The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged.",
                "The less strict utility gap criterion requires there to be only negligible change in the users utility.",
                "Given users concern for utility, this is a more natural definition.",
                "Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small utility gain.",
                "Therefore, we use the utility gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the utility gap of each user is smaller than (0.001 in our experiments).",
                "However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in utility as they move money around.",
                "For this method, we use the marginal utility gap criterion.",
                "We compare the highest and lowest utility margins on the machines.",
                "If the difference is negligible, then we consider the system to be converged.",
                "In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion.",
                "Under this criterion, a system has stabilized if the change in social welfare is ≤ .",
                "Individual users utility may not have converged.",
                "This criterion is useful to evaluate how quickly the system as a whole reaches a particular efficiency level.",
                "User preferences.",
                "We experiment with two models of user preferences, random distribution and correlated distribution.",
                "With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution.",
                "In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run.",
                "To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth).",
                "For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk.",
                "By using these profiles, we compress the parameter space and introduce correlations between users and machines.",
                "In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users).",
                "Sections 5.1 and 5.2 present the simulation results when we apply the infinite parallelism and finite parallelism models, respectively.",
                "If the system converges, we report the number of iterations until convergence.",
                "A convergence time of 200 iterations indicates non-convergence, in which case we report the efficiency and fairness values at the point we terminate the simulation. 5.1 Infinite parallelism In this section, we apply the infinite parallelism model, which assumes that users can use an unlimited number of machines.",
                "We present the efficiency and fairness at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively).",
                "We present results for the two user preference models.",
                "With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter).",
                "In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1).",
                "Convergence Time.",
                "Figure 2 shows the convergence time, efficiency and fairness of the infinite parallelism model under uniform (left) and correlated (right) preferences.",
                "Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: Efficiency, utility uniformity, enviness and convergence time as a function of the number of users under the infinite parallelism model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite parallelism model. number of users = 40. n = 100.",
                "The best-response algorithm converges within a few number of iterations for any number of users.",
                "In contrast, the local greedy adjustment algorithm does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users.",
                "We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc.",
                "Regardless, the local greedy adjustment method stabilizes within 100 iterations.",
                "Figure 3 presents the efficiency over time for a system with 40 users.",
                "It demonstrates that while both adjustment methods reach the same social welfare, the best-response algorithm is faster.",
                "In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it.",
                "Efficiency.",
                "Figure 2 (c) and (d) present the efficiency as a function of the number of users.",
                "We present the efficiency at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison.",
                "Social optimum provides an efficient allocation by definition.",
                "For both user preference models, the efficiency at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum.",
                "The efficiency at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences.",
                "Fairness.",
                "Figure 2(e) and (f) present the utility uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness.",
                "While the social optimum yields perfect efficiency, it has poor fairness.",
                "The weightproportional method achieves the highest fairness among the three allocation methods, but the fairness at the equilibrium is close.",
                "The utility uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other.",
                "Although utility uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point.",
                "At the social optimum, utility uniformity can be infinitely poor, as some users may be allocated no resources at all.",
                "The same is true with respect to envy-freeness.",
                "The difference between uniform and correlated preferences is best demonstrated in the social optimum results.",
                "When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both utility uniformity and envy-freeness go to zero.",
                "As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation.",
                "These results demonstrate the tradeoff between the different allocation methods.",
                "The efficiency at the equilibrium is lower than the social optimum, but it performs much better with respect to fairness.",
                "The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite parallelism 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite parallelism model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 Efficiency Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: Efficiency level over time under the finite parallelism model with local search algorithm. n = 100.",
                "We also consider the finite parallelism model and use the local search algorithm, as described in Section 4.2, to adjust users bids.",
                "We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the simulation results for only the uniform distribution.",
                "In our experiments, the local search algorithm stops quickly - it usually discovers a local maximum within two iterations.",
                "As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high efficiency. 134 Convergence time.",
                "Let ∆ denote the parallelism bound that limits the maximum number of machines each user can bid on.",
                "We experiment with ∆ = 5 and ∆ = 20.",
                "In both cases, we use 100 machines and vary the number of users.",
                "Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly.",
                "The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20.",
                "We believe that the non-convergence is caused by moderate competition.",
                "No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids.",
                "High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence.",
                "However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids.",
                "In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2].",
                "Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall efficiency after a few iterations (as shown in Figure 5).",
                "Performance.",
                "In Figure 6, we present the efficiency, utility uniformity, and envy-freeness at the Nash equilibrium for the finite parallelism model.",
                "When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations.",
                "When ∆ = 5, there is a performance drop, in particular with respect to the fairness metrics, in the range between 20 and 40 users (where it does not converge).",
                "For a larger number of users, the system converges and achieves a lower level of utility uniformity, but a high degree of efficiency and envy-freeness, similar to those under the infinite parallelism model.",
                "As described above, this is due the competition ratio falling into the head-to-head range.",
                "When the parallelism bound is large (∆ = 20), the performance is closer to the infinite parallelism model, and we do not observe this drop in performance. 6.",
                "RELATED WORK There are two main groups of related work in resource allocation: those that incorporate an economic mechanism, and those that do not.",
                "One non-economic approach is scheduling (surveyed by Pinedo [20]).",
                "Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19].",
                "These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users.",
                "We view scheduling and resource allocation as two separate functions.",
                "Resource allocation divides a resource among different users while scheduling takes a given allocation and orders a users jobs.",
                "Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]).",
                "Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated.",
                "Unfortunately, reservations have a high latency to acquire resources, unlike the price-anticipating scheme we consider.",
                "The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive.",
                "Bellagio[3] uses the SHARE centralized allocator.",
                "SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities.",
                "Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation.",
                "The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some efficiency, but it also avoids the complexity and overhead of combinatorial auctions.",
                "There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows.",
                "Their methodology follows the study of congestion (potential) games [17, 22] by relating the Nash equilibrium to the solution of a (usually convex) global optimization problem.",
                "But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines.",
                "For example, unlike those games, there may exist multiple Nash equilibria in our game.",
                "Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7.",
                "CONCLUSIONS This work studies the performance of a market-based mechanism for <br>distributed shared cluster</br>s using both analyatical and simulation methods.",
                "We show that despite the worst case bounds, the system can reach a high performance level at the Nash equilibrium in terms of both efficiency and fairness metrics.",
                "In addition, with a few exceptions under the finite parallelism model, the system reaches equilibrium quickly by using the best response algorithm and, when the number of users is not too small, by the greedy local adjustment method.",
                "While our work indicates that the price-anticipating scheme may work well for resource allocation for shared clusters, there are many interesting directions for future work.",
                "One direction is to consider more realistic utility functions.",
                "For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine.",
                "In practice, both assumptions may not be correct.",
                "For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine.",
                "When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling.",
                "Another assumption is that users have infinite work, so the more resources they can acquire, the better.",
                "In practice, users have finite work.",
                "One approach to address this is to model the users utility according to the time to finish a task rather than the amount of resources he receives.",
                "Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model.",
                "In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user Efficiency Utility uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user Efficiency Utility uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite parallelism model. n = 100. 8.",
                "ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions.",
                "We also thank the anonymous reviewers for their useful comments. 9.",
                "REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat.",
                "Resource Allocation in Federated Distributed Computing Infrastructures.",
                "In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat.",
                "Computational Resource Exchanges for Distributed Resource Allocation. 2004. [4] B. N. Chun and D. E. Culler.",
                "Market-based Proportional Resource Sharing for Clusters.",
                "Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang.",
                "A Price-anticipating Resource Allocation Mechanism for Distributed Shared Clusters.",
                "Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou.",
                "Microeconomic Algorithms for Load Balancing in Distributed Computer Systems.",
                "In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan.",
                "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.",
                "Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow.",
                "Data Structures for Weighted Matching and Nearest Common Ancestors with Linking.",
                "In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang.",
                "Strategic Buyers in a Sum Bid Game for Flat Networks.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis.",
                "Efficiency Loss in a Network Resource Allocation Game.",
                "Mathematics of Operations Research, 2004. [12] F. P. Kelly.",
                "Charging and Rate Control for Elastic Traffic.",
                "European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo.",
                "Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability.",
                "Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn.",
                "The Hungarian Method for the Assignment Problem.",
                "Naval Res.",
                "Logis.",
                "Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B.",
                "A. Huberman.",
                "Tycoon: an Implemention of a Distributed Market-Based Resource Allocation System.",
                "Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich.",
                "Congestion Games with Player-Specific Payoff Functions.",
                "Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley.",
                "Potential Games.",
                "Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou.",
                "Algorithms, Games, and the Internet.",
                "In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz.",
                "Combinatorial Optimization.",
                "Dover Publications, Inc., 1982. [20] M. Pinedo.",
                "Scheduling.",
                "Prentice Hall, 2002. [21] O. Regev and N. Nisan.",
                "The Popcorn Market: Online Markets for Computational Resources.",
                "In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal.",
                "A Class of Games Possessing Pure-Strategy Nash Equilibria.",
                "Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek.",
                "Optimal Allocation of a Divisible Good to Strategic Buyers.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen.",
                "A Microeconomic Scheduler for Parallel Computers.",
                "In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian.",
                "Equity, Envy, and Efficiency.",
                "Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B.",
                "A. Huberman, J. O. Kephart, and S. Stornetta.",
                "Spawn: A Distributed Computational Economy.",
                "IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason.",
                "Auction Protocols for Decentralized Scheduling.",
                "Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter.",
                "Classifying Scheduling Policies with respect to Unfairness in an M/GI/1.",
                "In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang.",
                "On the Efficiency and Fairness of a Fixed Budget Resource Allocation Game.",
                "Manuscript, 2004. 136"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Introducción La principal ventaja del \"clúster compartido distribuido\" como la cuadrícula [7] y PlanetLab [1] es su capacidad para reunir recursos computacionales compartidos.",
                "Es particularmente importante en el entorno altamente dinámico del \"clúster compartido distribuido\" s, en el que las condiciones de los sistemas pueden cambiar antes de alcanzar el equilibrio.",
                "Conclusiones Este trabajo estudia el desempeño de un mecanismo basado en el mercado para el \"clúster compartido distribuido\" s utilizando métodos analáticos y de simulación."
            ],
            "translated_text": "",
            "candidates": [
                "clúster compartido distribuido",
                "clúster compartido distribuido",
                "clúster compartido distribuido",
                "clúster compartido distribuido",
                "clúster compartido distribuido",
                "clúster compartido distribuido"
            ],
            "error": []
        },
        "resource allocation": {
            "translated_key": "Asignación de recursos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Price-Anticipating <br>resource allocation</br> Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget <br>resource allocation</br> game to understand the performance of a distributed marketbased resource allocation system.",
                "Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual utility.",
                "We look at both the efficiency and the fairness of the allocation at the equilibrium, where fairness is evaluated through the measures of utility uniformity and envy-freeness.",
                "We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high efficiency but poor fairness, the proposed allocation scheme achieves a nice balance of high degrees of efficiency and fairness at the equilibrium.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1.",
                "INTRODUCTION The primary advantage of distributed shared clusters like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources.",
                "This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users.",
                "Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users.",
                "Finally, sharing allows greater reliability because of redundancy in hosts and network connections.",
                "However, <br>resource allocation</br> in these systems remains the major challenge.",
                "The problem is how to allocate a shared resource both fairly and efficiently (where efficiency is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests.",
                "Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator.",
                "However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set.",
                "Instead, we examine a market-based <br>resource allocation</br> system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a bidding mechanism.",
                "In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource.",
                "This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26].",
                "Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets.",
                "In this work, we examine a price-anticipating scheme in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6).",
                "In this paper, we formulate the fixed budget <br>resource allocation</br> game and study the existence and performance of the Nash equilibria of this game.",
                "For evaluating the Nash equilibria, we consider both their efficiency, measuring how close the social welfare at equilibrium is to the social optimum, and fairness, measuring how different the users utilities are.",
                "Although rarely considered in previous game theoretical study, we believe fairness is a critical metric for a <br>resource allocation</br> schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair <br>resource allocation</br> in favor of one with less efficient, more fair resource allocation.",
                "We use both utility uniformity and envy-freeness to measure fairness.",
                "Utility uniformity, which is common in Computer Science work, measures the closeness of utilities of different users.",
                "Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others.",
                "Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria.",
                "Using analysis, we show that there is always a Nash equilibrium in the fixed budget game if the utility functions satisfy a fairly weak and natural condition of strong competitiveness.",
                "We also show the worst case performance bounds: for m players the efficiency at equilibrium is Ω(1/ √ m), the utility uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83.",
                "Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their utility.",
                "As part of the fixed budget game analysis, we show that strategic users with linear utility functions can calculate their bids using a best response algorithm that quickly results in an allocation with high efficiency with little computational and communication overhead.",
                "We present variations of the best response algorithm for both finite and infinite parallelism tasks.",
                "In addition, we present a local greedy adjustment algorithm that converges more slowly than best response, but allows for non-linear or unformulatable utility functions. • We show that the price-anticipating <br>resource allocation</br> mechanism achieves a high degree of efficiency and fairness.",
                "Using simulation, we find that although the socially optimal allocation results in perfect efficiency, it also results in very poor fairness.",
                "Likewise, allocating according to only users preference weights results in a high fairness, but a mediocre efficiency.",
                "Intuition would suggest that efficiency and fairness are exclusive.",
                "Surprisingly, the Nash equilibrium, reached by each user iteratively applying the best response algorithm to adapt his bids, achieves nearly the efficiency of the social optimum and nearly the fairness of the weight-proportional allocation: the efficiency is ≥ 0.90, the utility uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system.",
                "In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy.",
                "The local adjustment algorithm performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize.",
                "As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of efficiency and fairness.",
                "The rest of the paper is organized as follows.",
                "We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite parallelism model in Section 3.",
                "In Section 4, we describe algorithms for users to optimize their own utility in the fixed budget game.",
                "In Section 5, we describe our simulator and simulation results.",
                "We describe related work in Section 6.",
                "We conclude by discussing some limit of our model and future work in Section 7. 2.",
                "THE MODEL Price-Anticipating <br>resource allocation</br>.",
                "We study the problem of allocating a set of divisible resources (or machines).",
                "Suppose that there are m users and n machines.",
                "Each machine can be continuously divided for allocation to multiple users.",
                "An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1.",
                "Let Ω denote the set of all the allocation schemes.",
                "We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed.",
                "Formally, suppose that user i submits a non-negative bid xij to machine j.",
                "The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j.",
                "When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone.",
                "We call xi = (xi1, . . . , xin) the bidding vector of user i.",
                "The additional consideration we have is that each user i has a budget constraint Xi.",
                "Therefore, user is total bids have to sum up to his budget, i.e.",
                "Pn j=1 xij = Xi.",
                "The budget constraints come from the fact that the users do not have infinite budget.",
                "Utility Functions.",
                "Each user is utility is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine.",
                "Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines.",
                "Therefore, the basic utility function we consider is the linear utility function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j.",
                "For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications.",
                "As a result, w11 > w12 and w21 < w22.",
                "Our definition of utility functions corresponds to the user having enough jobs or enough parallelism within jobs to utilize all the machines.",
                "Consequently, the users goal is to grab as much of a resource as possible.",
                "We call this the infinite parallelism model.",
                "In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity).",
                "To model this, we also consider the more realistic finite parallelism model, where the users parallelism is bounded by ki, and the users utility Ui is the sum of the ki largest wijrij.",
                "In this model, the user only submits bids to up to ki machines.",
                "Our abstraction is to capture the essense of the problem and facilitate our analysis.",
                "In Section 7, we discuss the limit of the above definition of utility functions.",
                "Best Response.",
                "As typically, we assume the users are selfish and strategic - they all act to maximize their own utility, defined by their utility functions.",
                "From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0.",
                "The difficulty of the above optimization problem depends on the formulation of Ui.",
                "We will show later how to solve it for the infinite parallelism model and provide a heuristic for finite parallelism model.",
                "Nash Equilibrium.",
                "By the assumption that the user is selfish, each users bidding vector is the best response to the system.",
                "The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users.",
                "Such a state is known as the Nash equilibrium, a central concept in Game Theory.",
                "Formally, the bidding vectors x1, . . . , xm is a Nash equilibrium if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) .",
                "The Nash equilibrium is desirable because it is a stable state at which no one has incentive to change his strategy.",
                "But a game may not have an equilibrium.",
                "Indeed, a Nash equilibrium may not exist in the price anticipating scheme we define above.",
                "This can be shown by a simple example of two players and two machines.",
                "For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2.",
                "Then player 1 should never bid on machine 2 because it has no value to him.",
                "Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the Nash equilibrium.",
                "We should note that even the mixed strategy equilibrium does not exist in this example.",
                "Clearly, this happens whenever there is a resource that is wanted by only one player.",
                "To rule out this case, we consider those strongly competitive games.1 Under the infinite parallelism model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0.",
                "Under such a condition, we have that (see [5] for a proof), Theorem 1.",
                "There always exists a pure strategy Nash equilibrium in a strongly competitive game.",
                "Given the existence of the Nash equilibrium, the next important question is the performance at the Nash equilibrium, which is often measured by its efficiency and fairness.",
                "Efficiency (Price of Anarchy).",
                "For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω.",
                "Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities.",
                "The efficiency at an allocation scheme ω is defined as π(ω) = U(ω) U∗ .",
                "Let Ω0 denote the set of the allocation at the Nash equilibrium.",
                "When there exists Nash equilibrium, i.e.",
                "Ω0 = ∅, define the efficiency of a game Q to be π(Q) = minω∈Ω0 π(ω).",
                "It is usually the case that π < 1, i.e. there is an efficiency loss at a Nash equilibrium.",
                "This is the price of anarchy [18] paid for not having central enforcement of the users good behavior.",
                "This price is interesting because central control results in the best possible outcome, but is not possible in most cases.",
                "Fairness.",
                "While the definition of efficiency is standard, there are multiple ways to define fairness.",
                "We consider two metrics.",
                "One is by comparing the users utilities.",
                "The utility uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum utility and the maximum utility among the users.",
                "Such definition (or utility discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature.",
                "Under this definition, the utility uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω).",
                "The other metric extensively studied in Economics is the concept of envy-freeness [25].",
                "Unlike the utility uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive.",
                "Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine.",
                "These alternatives, however, introduce the problem of coming up with the right price or limit.",
                "When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme.",
                "Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3.",
                "NASH EQUILIBRIUM In this section, we present some theoretical results regarding the performance at Nash equilibrium under the infinite parallelism model.",
                "We assume that the game is strongly competitive to guarantee the existence of equilibria.",
                "For a meaningful discussion of efficiency and fairness, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same utility when they own all the resources.",
                "This precludes the case when a user has an extremely high budget, resulting in very low efficiency or low fairness at equilibrium.",
                "We first provide a characterization of the equilibria.",
                "By definition, the bidding vectors x1, . . . , xm is a Nash equilibrium if and only if each players strategy is the best response to the groups bids.",
                "Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid.",
                "Under the infinite parallelism model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e.",
                "U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties.",
                "We start with two special cases to provide some intuition about the game.",
                "The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games.",
                "Let x and y denote the respective bids of users 1 and 2 on machine 1.",
                "Denote by s = x + y and δ = (2 − s)/s.",
                "Equal-weight game.",
                "In Figure 1, both users have equal valuations for the two machines.",
                "By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α.",
                "Thus, there exists a unique Nash equilibrium of the game where the two users have the same bidding vector.",
                "At the equilibrium, the utility of each user is 1/2, and the social welfare is 1.",
                "On the other hand, the social optimum is clearly 1.",
                "Thus, the equal-weight game is ideal as the efficiency, utility uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games.",
                "Opposite-weight game.",
                "The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines.",
                "Assume that α ≥ 1/2.",
                "Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each Nash equilibrium corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1.",
                "Clearly, δ = 1 is a root of f(δ).",
                "When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine.",
                "At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828.",
                "However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria.",
                "Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid.",
                "In this case, user 1 gets most of machine 1 and almost half of machine 2.",
                "The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4.",
                "This solves to α0 = 2+ √ 2 4 ≈ 0.854.",
                "Those asymmetric equilibria at δ = 1 are bad as they yield lower efficiency than the symmetric equilibrium.",
                "Let δ0 be the minimum root.",
                "When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0.",
                "Then, x, y → 1.",
                "Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75.",
                "From the above simple game, we already observe that the Nash equilibrium may not be unique, which is different from many congestion games in which the Nash equilibrium is unique.",
                "For the general two player game, we can show that 0.75 is actually the worst efficiency bound with a proof in [5].",
                "Further, at the asymmetric equilibrium, the utility uniformity approaches 1/2 when α → 1.",
                "This is the worst possible for two player games because as we show in Section 3.2, a users utility at any Nash equilibrium is at least 1/m in the m-player game.",
                "Another consequence is that the two player game is always envy-free.",
                "Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively.",
                "Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free.",
                "Theorem 2.",
                "For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1.",
                "All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large.",
                "The following example shows the worst case bound.",
                "Consider a system with m = n2 + n players and n machines.",
                "Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine.",
                "The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines.",
                "Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine.",
                "Hence, the total money on each machine is n + 1.",
                "At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total utility of n3 · 1 n2(n+1) < 1.",
                "The other n players each receives 1 n+1 on their favorite machine, resulting in a total utility of n · 1 n+1 < 1.",
                "Therefore, the total utility of the equilibrium is < 2, while the social optimum is n = Θ( √ m).",
                "This bound is the worst possible.",
                "What about the utility uniformity of the multi-player allocation game?",
                "We next show that the utility uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i.",
                "User i can ensure a utility of 1/m by distributing his budget proportionally to the current bids.",
                "That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1.",
                "Therefore, rij = 1 1+m−1 = 1 m .",
                "The total utility of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m .",
                "Since each users utility cannot exceed 1, the minimal possible uniformity is 1/m.",
                "While the utility uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29].",
                "To summarize, we have that Theorem 3.",
                "For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2.",
                "All of these bounds are tight in the worst case. 4.",
                "ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite parallelism model.",
                "However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the Nash equilibrium for the typical distribution of utility functions.",
                "In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response algorithm leads to the equilibrium.",
                "To answer these questions, we resort to simulations.",
                "In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments.",
                "We consider both the infinite parallelism and finite parallelism model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most.",
                "We now present the algorithm for computing the best response.",
                "Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0.",
                "To compute the best response, we first sort wj yj in decreasing order.",
                "Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn .",
                "Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution.",
                "We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too.",
                "Suppose this were not true.",
                "Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) .",
                "Thus it contradicts with the optimality condition (1).",
                "Suppose that k = max{i|x∗ i > 0}.",
                "Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 .",
                "Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi .",
                "The remaining question is how to determine k. It is the largest value such that x∗ k > 0.",
                "Thus, we obtain the following algorithm to compute the best response of a user: 1.",
                "Sort the machines according to wi yi in decreasing order. 2.",
                "Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3.",
                "Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj.",
                "The computational complexity of this algorithm is O(n log n), dominated by the sorting.",
                "In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible.",
                "The best response algorithm must send and receive O(n) messages because each user must obtain the total bids from each host.",
                "In practice, this is more significant than the computational cost.",
                "Note that hosts only reveal to users the sum of the bids on them.",
                "As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite Parallelism Model Recall that in the finite parallelism model, each user i only places bids on at most ki machines.",
                "Of course, the infinite parallelism model is just a special case of finite parallelism model in which ki = n for all the is.",
                "In the finite parallelism model, computing the social optimum is no longer trivial due to bounded parallelism.",
                "It can instead be computed by using the maximum matching algorithm.",
                "Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj).",
                "A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching.",
                "As a result, the following lemma holds.",
                "Lemma 1.",
                "The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching algorithm to compute the social optimum.",
                "The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14].",
                "We choose to implement the Hungarian algorithm [14, 19] because of its simplicity.",
                "There may exist a more efficient algorithm for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question.",
                "However, we do not know an efficient algorithm to compute the best response under the finite parallelism model.",
                "Instead, we provide the following local search heuristic.",
                "Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn.",
                "Let the users budget be X and the parallelism bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users utility.",
                "For a subset of machines A, denote by x(A) the best response on A without parallelism bound and by U(A) the utility obtained by the best response algorithm.",
                "The local search works as follows: 1.",
                "Set A to be the k machines with the highest wi/yi. 2.",
                "Compute U(A) by the infinite parallelism best response algorithm (Sec 4.1) on A. 3.",
                "For each i ∈ A and each j /∈ A, repeat 4.",
                "Let B = A − {i} + {j}, compute U(B). 5.",
                "If(U(B) > U(A)), let A ← B, and goto 2. 6.",
                "Output x(A).",
                "Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response utility.",
                "If yes, we swap the machines and repeat the process.",
                "Otherwise, we have reached a local maxima and output that value.",
                "We suspect that the local maxima that this algorithm finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it.",
                "However, in our simulations, this algorithm quickly converges to a high (≥ .7) efficiency. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear utility functions described earlier.",
                "In practice, utility functions may have more a complicated form, or even worse, a user may not have a formulation of his utility function.",
                "We do assume that the user still has a way to measure his utility, which is the minimum assumption necessary for any market-based <br>resource allocation</br> mechanism.",
                "In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows.",
                "A user finds the two machines that provide him with the highest and lowest marginal utility.",
                "He then moves a fixed small amount of money from the machine with low marginal utility to the machine with the higher one.",
                "This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same.",
                "This condition guarantees the allocation is the optimum when the utility function is concave.",
                "The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5.",
                "SIMULATION RESULTS While the analytic results provide us with worst-case analysis for the infinite parallelism model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite parallelism model.",
                "First, we determine whether the user bidding process converges, and if so, what the rate of convergence is.",
                "Second, in cases of convergence, we look at the performance at equilibrium, using the efficiency and fairness metrics defined above.",
                "Iterative Method.",
                "In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met.",
                "The initial bid is set proportional to the users weights on the machines.",
                "We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3.",
                "Convergence Criteria.",
                "Convergence time measures how quickly the system reaches equilibrium.",
                "It is particularly important in the highly dynamic environment of distributed shared clusters, in which the systems conditions may change before reaching the equilibrium.",
                "Thus, a high convergence rate may be more significant than the efficiency at the equilibrium.",
                "There are several different criteria for convergence.",
                "The strongest criterion is to require that there is only negligible change in the bids of each user.",
                "The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged.",
                "The less strict utility gap criterion requires there to be only negligible change in the users utility.",
                "Given users concern for utility, this is a more natural definition.",
                "Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small utility gain.",
                "Therefore, we use the utility gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the utility gap of each user is smaller than (0.001 in our experiments).",
                "However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in utility as they move money around.",
                "For this method, we use the marginal utility gap criterion.",
                "We compare the highest and lowest utility margins on the machines.",
                "If the difference is negligible, then we consider the system to be converged.",
                "In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion.",
                "Under this criterion, a system has stabilized if the change in social welfare is ≤ .",
                "Individual users utility may not have converged.",
                "This criterion is useful to evaluate how quickly the system as a whole reaches a particular efficiency level.",
                "User preferences.",
                "We experiment with two models of user preferences, random distribution and correlated distribution.",
                "With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution.",
                "In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run.",
                "To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth).",
                "For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk.",
                "By using these profiles, we compress the parameter space and introduce correlations between users and machines.",
                "In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users).",
                "Sections 5.1 and 5.2 present the simulation results when we apply the infinite parallelism and finite parallelism models, respectively.",
                "If the system converges, we report the number of iterations until convergence.",
                "A convergence time of 200 iterations indicates non-convergence, in which case we report the efficiency and fairness values at the point we terminate the simulation. 5.1 Infinite parallelism In this section, we apply the infinite parallelism model, which assumes that users can use an unlimited number of machines.",
                "We present the efficiency and fairness at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively).",
                "We present results for the two user preference models.",
                "With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter).",
                "In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1).",
                "Convergence Time.",
                "Figure 2 shows the convergence time, efficiency and fairness of the infinite parallelism model under uniform (left) and correlated (right) preferences.",
                "Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: Efficiency, utility uniformity, enviness and convergence time as a function of the number of users under the infinite parallelism model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite parallelism model. number of users = 40. n = 100.",
                "The best-response algorithm converges within a few number of iterations for any number of users.",
                "In contrast, the local greedy adjustment algorithm does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users.",
                "We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc.",
                "Regardless, the local greedy adjustment method stabilizes within 100 iterations.",
                "Figure 3 presents the efficiency over time for a system with 40 users.",
                "It demonstrates that while both adjustment methods reach the same social welfare, the best-response algorithm is faster.",
                "In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it.",
                "Efficiency.",
                "Figure 2 (c) and (d) present the efficiency as a function of the number of users.",
                "We present the efficiency at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison.",
                "Social optimum provides an efficient allocation by definition.",
                "For both user preference models, the efficiency at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum.",
                "The efficiency at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences.",
                "Fairness.",
                "Figure 2(e) and (f) present the utility uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness.",
                "While the social optimum yields perfect efficiency, it has poor fairness.",
                "The weightproportional method achieves the highest fairness among the three allocation methods, but the fairness at the equilibrium is close.",
                "The utility uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other.",
                "Although utility uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point.",
                "At the social optimum, utility uniformity can be infinitely poor, as some users may be allocated no resources at all.",
                "The same is true with respect to envy-freeness.",
                "The difference between uniform and correlated preferences is best demonstrated in the social optimum results.",
                "When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both utility uniformity and envy-freeness go to zero.",
                "As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation.",
                "These results demonstrate the tradeoff between the different allocation methods.",
                "The efficiency at the equilibrium is lower than the social optimum, but it performs much better with respect to fairness.",
                "The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite parallelism 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite parallelism model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 Efficiency Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: Efficiency level over time under the finite parallelism model with local search algorithm. n = 100.",
                "We also consider the finite parallelism model and use the local search algorithm, as described in Section 4.2, to adjust users bids.",
                "We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the simulation results for only the uniform distribution.",
                "In our experiments, the local search algorithm stops quickly - it usually discovers a local maximum within two iterations.",
                "As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high efficiency. 134 Convergence time.",
                "Let ∆ denote the parallelism bound that limits the maximum number of machines each user can bid on.",
                "We experiment with ∆ = 5 and ∆ = 20.",
                "In both cases, we use 100 machines and vary the number of users.",
                "Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly.",
                "The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20.",
                "We believe that the non-convergence is caused by moderate competition.",
                "No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids.",
                "High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence.",
                "However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids.",
                "In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2].",
                "Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall efficiency after a few iterations (as shown in Figure 5).",
                "Performance.",
                "In Figure 6, we present the efficiency, utility uniformity, and envy-freeness at the Nash equilibrium for the finite parallelism model.",
                "When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations.",
                "When ∆ = 5, there is a performance drop, in particular with respect to the fairness metrics, in the range between 20 and 40 users (where it does not converge).",
                "For a larger number of users, the system converges and achieves a lower level of utility uniformity, but a high degree of efficiency and envy-freeness, similar to those under the infinite parallelism model.",
                "As described above, this is due the competition ratio falling into the head-to-head range.",
                "When the parallelism bound is large (∆ = 20), the performance is closer to the infinite parallelism model, and we do not observe this drop in performance. 6.",
                "RELATED WORK There are two main groups of related work in <br>resource allocation</br>: those that incorporate an economic mechanism, and those that do not.",
                "One non-economic approach is scheduling (surveyed by Pinedo [20]).",
                "Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19].",
                "These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users.",
                "We view scheduling and <br>resource allocation</br> as two separate functions.",
                "<br>resource allocation</br> divides a resource among different users while scheduling takes a given allocation and orders a users jobs.",
                "Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]).",
                "Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated.",
                "Unfortunately, reservations have a high latency to acquire resources, unlike the price-anticipating scheme we consider.",
                "The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive.",
                "Bellagio[3] uses the SHARE centralized allocator.",
                "SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities.",
                "Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation.",
                "The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some efficiency, but it also avoids the complexity and overhead of combinatorial auctions.",
                "There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows.",
                "Their methodology follows the study of congestion (potential) games [17, 22] by relating the Nash equilibrium to the solution of a (usually convex) global optimization problem.",
                "But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines.",
                "For example, unlike those games, there may exist multiple Nash equilibria in our game.",
                "Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7.",
                "CONCLUSIONS This work studies the performance of a market-based mechanism for distributed shared clusters using both analyatical and simulation methods.",
                "We show that despite the worst case bounds, the system can reach a high performance level at the Nash equilibrium in terms of both efficiency and fairness metrics.",
                "In addition, with a few exceptions under the finite parallelism model, the system reaches equilibrium quickly by using the best response algorithm and, when the number of users is not too small, by the greedy local adjustment method.",
                "While our work indicates that the price-anticipating scheme may work well for <br>resource allocation</br> for shared clusters, there are many interesting directions for future work.",
                "One direction is to consider more realistic utility functions.",
                "For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine.",
                "In practice, both assumptions may not be correct.",
                "For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine.",
                "When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling.",
                "Another assumption is that users have infinite work, so the more resources they can acquire, the better.",
                "In practice, users have finite work.",
                "One approach to address this is to model the users utility according to the time to finish a task rather than the amount of resources he receives.",
                "Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model.",
                "In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user Efficiency Utility uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user Efficiency Utility uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite parallelism model. n = 100. 8.",
                "ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions.",
                "We also thank the anonymous reviewers for their useful comments. 9.",
                "REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat.",
                "<br>resource allocation</br> in Federated Distributed Computing Infrastructures.",
                "In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat.",
                "Computational Resource Exchanges for Distributed <br>resource allocation</br>. 2004. [4] B. N. Chun and D. E. Culler.",
                "Market-based Proportional Resource Sharing for Clusters.",
                "Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang.",
                "A Price-anticipating <br>resource allocation</br> Mechanism for Distributed Shared Clusters.",
                "Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou.",
                "Microeconomic Algorithms for Load Balancing in Distributed Computer Systems.",
                "In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan.",
                "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.",
                "Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow.",
                "Data Structures for Weighted Matching and Nearest Common Ancestors with Linking.",
                "In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang.",
                "Strategic Buyers in a Sum Bid Game for Flat Networks.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis.",
                "Efficiency Loss in a Network <br>resource allocation</br> Game.",
                "Mathematics of Operations Research, 2004. [12] F. P. Kelly.",
                "Charging and Rate Control for Elastic Traffic.",
                "European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo.",
                "Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability.",
                "Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn.",
                "The Hungarian Method for the Assignment Problem.",
                "Naval Res.",
                "Logis.",
                "Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B.",
                "A. Huberman.",
                "Tycoon: an Implemention of a Distributed Market-Based <br>resource allocation</br> System.",
                "Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich.",
                "Congestion Games with Player-Specific Payoff Functions.",
                "Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley.",
                "Potential Games.",
                "Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou.",
                "Algorithms, Games, and the Internet.",
                "In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz.",
                "Combinatorial Optimization.",
                "Dover Publications, Inc., 1982. [20] M. Pinedo.",
                "Scheduling.",
                "Prentice Hall, 2002. [21] O. Regev and N. Nisan.",
                "The Popcorn Market: Online Markets for Computational Resources.",
                "In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal.",
                "A Class of Games Possessing Pure-Strategy Nash Equilibria.",
                "Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek.",
                "Optimal Allocation of a Divisible Good to Strategic Buyers.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen.",
                "A Microeconomic Scheduler for Parallel Computers.",
                "In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian.",
                "Equity, Envy, and Efficiency.",
                "Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B.",
                "A. Huberman, J. O. Kephart, and S. Stornetta.",
                "Spawn: A Distributed Computational Economy.",
                "IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason.",
                "Auction Protocols for Decentralized Scheduling.",
                "Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter.",
                "Classifying Scheduling Policies with respect to Unfairness in an M/GI/1.",
                "In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang.",
                "On the Efficiency and Fairness of a Fixed Budget <br>resource allocation</br> Game.",
                "Manuscript, 2004. 136"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Un mecanismo de \"asignación de recursos\" para la anticipación del precio para los grupos compartidos distribuidos Michal Feldman ∗ mfeldman@sims.berkeley.edu kevin lai † kevin.lai@hp.com li zhang † l.zhang@hp.com Resumen En este documento, formulamos elJuego de \"asignación de recursos\" de presupuesto fijo para comprender el rendimiento de un sistema de asignación de recursos basado en el mercado distribuido.",
                "Sin embargo, la \"asignación de recursos\" en estos sistemas sigue siendo el principal desafío.",
                "En cambio, examinamos un sistema de \"asignación de recursos\" basado en el mercado (otros se describen en [2, 4, 6, 21, 26, 27]) que permite a los usuarios expresar sus preferencias de recursos a través de un mecanismo de licitación.",
                "En este artículo, formulamos el juego de \"asignación de recursos\" de presupuesto fijo y estudiamos la existencia y el rendimiento de los equilibrios NASH de este juego.",
                "Aunque rara vez se considera en el estudio teórico del juego anterior, creemos que la equidad es una métrica crítica para una \"asignación de recursos\" porque la percepción de la injusticia hará que algunos usuarios rechacen un sistema con una \"asignación de recursos\" más eficiente pero menos justa a favor deuno con asignación de recursos menos eficiente y más justa.",
                "Además, presentamos un algoritmo de ajuste codicioso local que converge más lentamente que la mejor respuesta, pero permite funciones de utilidad no lineales o no formulables.• Mostramos que el mecanismo de \"asignación de recursos\" que esperaba el precio logra un alto grado de eficiencia y equidad.",
                "La \"asignación de recursos\" que anticipa el precio modelo.",
                "Suponemos que el usuario todavía tiene una manera de medir su utilidad, que es la suposición mínima necesaria para cualquier mecanismo de \"asignación de recursos\" basado en el mercado.",
                "Trabajo relacionado Hay dos grupos principales de trabajos relacionados en la \"asignación de recursos\": aquellos que incorporan un mecanismo económico y los que no lo hacen.",
                "Vemos la programación y la \"asignación de recursos\" como dos funciones separadas.",
                "La \"asignación de recursos\" divide un recurso entre los diferentes usuarios, mientras que la programación toma una asignación dada y ordena los trabajos de los usuarios.",
                "Si bien nuestro trabajo indica que el esquema de anticipación de precios puede funcionar bien para la \"asignación de recursos\" para grupos compartidos, hay muchas direcciones interesantes para el trabajo futuro.",
                "\"Asignación de recursos\" en infraestructuras informáticas distribuidas federadas.",
                "Intercambios de recursos computacionales para la \"asignación de recursos\" distribuidas.2004. [4] B. N. Chun y D. E. Culler.",
                "Un mecanismo de \"asignación de recursos\" para la anticipación del precio para grupos compartidos distribuidos.",
                "Pérdida de eficiencia en un juego de \"asignación de recursos\" de red.",
                "Tycoon: una implementación de un sistema distribuido de \"asignación de recursos\" basado en el mercado.",
                "Sobre la eficiencia y la justicia de un juego de \"asignación de recursos\" de presupuesto fijo."
            ],
            "translated_text": "",
            "candidates": [
                "Asignación de recursos",
                "asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "Asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos",
                "Asignación de recursos",
                "asignación de recursos"
            ],
            "error": []
        },
        "algorithm": {
            "translated_key": "algoritmo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Price-Anticipating Resource Allocation Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget resource allocation game to understand the performance of a distributed marketbased resource allocation system.",
                "Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual utility.",
                "We look at both the efficiency and the fairness of the allocation at the equilibrium, where fairness is evaluated through the measures of utility uniformity and envy-freeness.",
                "We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high efficiency but poor fairness, the proposed allocation scheme achieves a nice balance of high degrees of efficiency and fairness at the equilibrium.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1.",
                "INTRODUCTION The primary advantage of distributed shared clusters like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources.",
                "This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users.",
                "Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users.",
                "Finally, sharing allows greater reliability because of redundancy in hosts and network connections.",
                "However, resource allocation in these systems remains the major challenge.",
                "The problem is how to allocate a shared resource both fairly and efficiently (where efficiency is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests.",
                "Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator.",
                "However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set.",
                "Instead, we examine a market-based resource allocation system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a bidding mechanism.",
                "In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource.",
                "This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26].",
                "Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets.",
                "In this work, we examine a price-anticipating scheme in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6).",
                "In this paper, we formulate the fixed budget resource allocation game and study the existence and performance of the Nash equilibria of this game.",
                "For evaluating the Nash equilibria, we consider both their efficiency, measuring how close the social welfare at equilibrium is to the social optimum, and fairness, measuring how different the users utilities are.",
                "Although rarely considered in previous game theoretical study, we believe fairness is a critical metric for a resource allocation schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair resource allocation in favor of one with less efficient, more fair resource allocation.",
                "We use both utility uniformity and envy-freeness to measure fairness.",
                "Utility uniformity, which is common in Computer Science work, measures the closeness of utilities of different users.",
                "Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others.",
                "Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria.",
                "Using analysis, we show that there is always a Nash equilibrium in the fixed budget game if the utility functions satisfy a fairly weak and natural condition of strong competitiveness.",
                "We also show the worst case performance bounds: for m players the efficiency at equilibrium is Ω(1/ √ m), the utility uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83.",
                "Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their utility.",
                "As part of the fixed budget game analysis, we show that strategic users with linear utility functions can calculate their bids using a best response <br>algorithm</br> that quickly results in an allocation with high efficiency with little computational and communication overhead.",
                "We present variations of the best response <br>algorithm</br> for both finite and infinite parallelism tasks.",
                "In addition, we present a local greedy adjustment <br>algorithm</br> that converges more slowly than best response, but allows for non-linear or unformulatable utility functions. • We show that the price-anticipating resource allocation mechanism achieves a high degree of efficiency and fairness.",
                "Using simulation, we find that although the socially optimal allocation results in perfect efficiency, it also results in very poor fairness.",
                "Likewise, allocating according to only users preference weights results in a high fairness, but a mediocre efficiency.",
                "Intuition would suggest that efficiency and fairness are exclusive.",
                "Surprisingly, the Nash equilibrium, reached by each user iteratively applying the best response <br>algorithm</br> to adapt his bids, achieves nearly the efficiency of the social optimum and nearly the fairness of the weight-proportional allocation: the efficiency is ≥ 0.90, the utility uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system.",
                "In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy.",
                "The local adjustment <br>algorithm</br> performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize.",
                "As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of efficiency and fairness.",
                "The rest of the paper is organized as follows.",
                "We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite parallelism model in Section 3.",
                "In Section 4, we describe algorithms for users to optimize their own utility in the fixed budget game.",
                "In Section 5, we describe our simulator and simulation results.",
                "We describe related work in Section 6.",
                "We conclude by discussing some limit of our model and future work in Section 7. 2.",
                "THE MODEL Price-Anticipating Resource Allocation.",
                "We study the problem of allocating a set of divisible resources (or machines).",
                "Suppose that there are m users and n machines.",
                "Each machine can be continuously divided for allocation to multiple users.",
                "An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1.",
                "Let Ω denote the set of all the allocation schemes.",
                "We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed.",
                "Formally, suppose that user i submits a non-negative bid xij to machine j.",
                "The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j.",
                "When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone.",
                "We call xi = (xi1, . . . , xin) the bidding vector of user i.",
                "The additional consideration we have is that each user i has a budget constraint Xi.",
                "Therefore, user is total bids have to sum up to his budget, i.e.",
                "Pn j=1 xij = Xi.",
                "The budget constraints come from the fact that the users do not have infinite budget.",
                "Utility Functions.",
                "Each user is utility is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine.",
                "Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines.",
                "Therefore, the basic utility function we consider is the linear utility function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j.",
                "For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications.",
                "As a result, w11 > w12 and w21 < w22.",
                "Our definition of utility functions corresponds to the user having enough jobs or enough parallelism within jobs to utilize all the machines.",
                "Consequently, the users goal is to grab as much of a resource as possible.",
                "We call this the infinite parallelism model.",
                "In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity).",
                "To model this, we also consider the more realistic finite parallelism model, where the users parallelism is bounded by ki, and the users utility Ui is the sum of the ki largest wijrij.",
                "In this model, the user only submits bids to up to ki machines.",
                "Our abstraction is to capture the essense of the problem and facilitate our analysis.",
                "In Section 7, we discuss the limit of the above definition of utility functions.",
                "Best Response.",
                "As typically, we assume the users are selfish and strategic - they all act to maximize their own utility, defined by their utility functions.",
                "From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0.",
                "The difficulty of the above optimization problem depends on the formulation of Ui.",
                "We will show later how to solve it for the infinite parallelism model and provide a heuristic for finite parallelism model.",
                "Nash Equilibrium.",
                "By the assumption that the user is selfish, each users bidding vector is the best response to the system.",
                "The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users.",
                "Such a state is known as the Nash equilibrium, a central concept in Game Theory.",
                "Formally, the bidding vectors x1, . . . , xm is a Nash equilibrium if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) .",
                "The Nash equilibrium is desirable because it is a stable state at which no one has incentive to change his strategy.",
                "But a game may not have an equilibrium.",
                "Indeed, a Nash equilibrium may not exist in the price anticipating scheme we define above.",
                "This can be shown by a simple example of two players and two machines.",
                "For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2.",
                "Then player 1 should never bid on machine 2 because it has no value to him.",
                "Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the Nash equilibrium.",
                "We should note that even the mixed strategy equilibrium does not exist in this example.",
                "Clearly, this happens whenever there is a resource that is wanted by only one player.",
                "To rule out this case, we consider those strongly competitive games.1 Under the infinite parallelism model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0.",
                "Under such a condition, we have that (see [5] for a proof), Theorem 1.",
                "There always exists a pure strategy Nash equilibrium in a strongly competitive game.",
                "Given the existence of the Nash equilibrium, the next important question is the performance at the Nash equilibrium, which is often measured by its efficiency and fairness.",
                "Efficiency (Price of Anarchy).",
                "For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω.",
                "Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities.",
                "The efficiency at an allocation scheme ω is defined as π(ω) = U(ω) U∗ .",
                "Let Ω0 denote the set of the allocation at the Nash equilibrium.",
                "When there exists Nash equilibrium, i.e.",
                "Ω0 = ∅, define the efficiency of a game Q to be π(Q) = minω∈Ω0 π(ω).",
                "It is usually the case that π < 1, i.e. there is an efficiency loss at a Nash equilibrium.",
                "This is the price of anarchy [18] paid for not having central enforcement of the users good behavior.",
                "This price is interesting because central control results in the best possible outcome, but is not possible in most cases.",
                "Fairness.",
                "While the definition of efficiency is standard, there are multiple ways to define fairness.",
                "We consider two metrics.",
                "One is by comparing the users utilities.",
                "The utility uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum utility and the maximum utility among the users.",
                "Such definition (or utility discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature.",
                "Under this definition, the utility uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω).",
                "The other metric extensively studied in Economics is the concept of envy-freeness [25].",
                "Unlike the utility uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive.",
                "Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine.",
                "These alternatives, however, introduce the problem of coming up with the right price or limit.",
                "When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme.",
                "Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3.",
                "NASH EQUILIBRIUM In this section, we present some theoretical results regarding the performance at Nash equilibrium under the infinite parallelism model.",
                "We assume that the game is strongly competitive to guarantee the existence of equilibria.",
                "For a meaningful discussion of efficiency and fairness, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same utility when they own all the resources.",
                "This precludes the case when a user has an extremely high budget, resulting in very low efficiency or low fairness at equilibrium.",
                "We first provide a characterization of the equilibria.",
                "By definition, the bidding vectors x1, . . . , xm is a Nash equilibrium if and only if each players strategy is the best response to the groups bids.",
                "Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid.",
                "Under the infinite parallelism model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e.",
                "U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties.",
                "We start with two special cases to provide some intuition about the game.",
                "The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games.",
                "Let x and y denote the respective bids of users 1 and 2 on machine 1.",
                "Denote by s = x + y and δ = (2 − s)/s.",
                "Equal-weight game.",
                "In Figure 1, both users have equal valuations for the two machines.",
                "By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α.",
                "Thus, there exists a unique Nash equilibrium of the game where the two users have the same bidding vector.",
                "At the equilibrium, the utility of each user is 1/2, and the social welfare is 1.",
                "On the other hand, the social optimum is clearly 1.",
                "Thus, the equal-weight game is ideal as the efficiency, utility uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games.",
                "Opposite-weight game.",
                "The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines.",
                "Assume that α ≥ 1/2.",
                "Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each Nash equilibrium corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1.",
                "Clearly, δ = 1 is a root of f(δ).",
                "When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine.",
                "At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828.",
                "However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria.",
                "Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid.",
                "In this case, user 1 gets most of machine 1 and almost half of machine 2.",
                "The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4.",
                "This solves to α0 = 2+ √ 2 4 ≈ 0.854.",
                "Those asymmetric equilibria at δ = 1 are bad as they yield lower efficiency than the symmetric equilibrium.",
                "Let δ0 be the minimum root.",
                "When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0.",
                "Then, x, y → 1.",
                "Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75.",
                "From the above simple game, we already observe that the Nash equilibrium may not be unique, which is different from many congestion games in which the Nash equilibrium is unique.",
                "For the general two player game, we can show that 0.75 is actually the worst efficiency bound with a proof in [5].",
                "Further, at the asymmetric equilibrium, the utility uniformity approaches 1/2 when α → 1.",
                "This is the worst possible for two player games because as we show in Section 3.2, a users utility at any Nash equilibrium is at least 1/m in the m-player game.",
                "Another consequence is that the two player game is always envy-free.",
                "Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively.",
                "Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free.",
                "Theorem 2.",
                "For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1.",
                "All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large.",
                "The following example shows the worst case bound.",
                "Consider a system with m = n2 + n players and n machines.",
                "Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine.",
                "The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines.",
                "Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine.",
                "Hence, the total money on each machine is n + 1.",
                "At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total utility of n3 · 1 n2(n+1) < 1.",
                "The other n players each receives 1 n+1 on their favorite machine, resulting in a total utility of n · 1 n+1 < 1.",
                "Therefore, the total utility of the equilibrium is < 2, while the social optimum is n = Θ( √ m).",
                "This bound is the worst possible.",
                "What about the utility uniformity of the multi-player allocation game?",
                "We next show that the utility uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i.",
                "User i can ensure a utility of 1/m by distributing his budget proportionally to the current bids.",
                "That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1.",
                "Therefore, rij = 1 1+m−1 = 1 m .",
                "The total utility of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m .",
                "Since each users utility cannot exceed 1, the minimal possible uniformity is 1/m.",
                "While the utility uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29].",
                "To summarize, we have that Theorem 3.",
                "For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2.",
                "All of these bounds are tight in the worst case. 4.",
                "ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite parallelism model.",
                "However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the Nash equilibrium for the typical distribution of utility functions.",
                "In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response <br>algorithm</br> leads to the equilibrium.",
                "To answer these questions, we resort to simulations.",
                "In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments.",
                "We consider both the infinite parallelism and finite parallelism model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most.",
                "We now present the <br>algorithm</br> for computing the best response.",
                "Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0.",
                "To compute the best response, we first sort wj yj in decreasing order.",
                "Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn .",
                "Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution.",
                "We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too.",
                "Suppose this were not true.",
                "Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) .",
                "Thus it contradicts with the optimality condition (1).",
                "Suppose that k = max{i|x∗ i > 0}.",
                "Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 .",
                "Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi .",
                "The remaining question is how to determine k. It is the largest value such that x∗ k > 0.",
                "Thus, we obtain the following <br>algorithm</br> to compute the best response of a user: 1.",
                "Sort the machines according to wi yi in decreasing order. 2.",
                "Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3.",
                "Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj.",
                "The computational complexity of this <br>algorithm</br> is O(n log n), dominated by the sorting.",
                "In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible.",
                "The best response <br>algorithm</br> must send and receive O(n) messages because each user must obtain the total bids from each host.",
                "In practice, this is more significant than the computational cost.",
                "Note that hosts only reveal to users the sum of the bids on them.",
                "As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite Parallelism Model Recall that in the finite parallelism model, each user i only places bids on at most ki machines.",
                "Of course, the infinite parallelism model is just a special case of finite parallelism model in which ki = n for all the is.",
                "In the finite parallelism model, computing the social optimum is no longer trivial due to bounded parallelism.",
                "It can instead be computed by using the maximum matching <br>algorithm</br>.",
                "Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj).",
                "A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching.",
                "As a result, the following lemma holds.",
                "Lemma 1.",
                "The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching <br>algorithm</br> to compute the social optimum.",
                "The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14].",
                "We choose to implement the Hungarian <br>algorithm</br> [14, 19] because of its simplicity.",
                "There may exist a more efficient <br>algorithm</br> for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question.",
                "However, we do not know an efficient <br>algorithm</br> to compute the best response under the finite parallelism model.",
                "Instead, we provide the following local search heuristic.",
                "Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn.",
                "Let the users budget be X and the parallelism bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users utility.",
                "For a subset of machines A, denote by x(A) the best response on A without parallelism bound and by U(A) the utility obtained by the best response <br>algorithm</br>.",
                "The local search works as follows: 1.",
                "Set A to be the k machines with the highest wi/yi. 2.",
                "Compute U(A) by the infinite parallelism best response <br>algorithm</br> (Sec 4.1) on A. 3.",
                "For each i ∈ A and each j /∈ A, repeat 4.",
                "Let B = A − {i} + {j}, compute U(B). 5.",
                "If(U(B) > U(A)), let A ← B, and goto 2. 6.",
                "Output x(A).",
                "Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response utility.",
                "If yes, we swap the machines and repeat the process.",
                "Otherwise, we have reached a local maxima and output that value.",
                "We suspect that the local maxima that this <br>algorithm</br> finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it.",
                "However, in our simulations, this <br>algorithm</br> quickly converges to a high (≥ .7) efficiency. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear utility functions described earlier.",
                "In practice, utility functions may have more a complicated form, or even worse, a user may not have a formulation of his utility function.",
                "We do assume that the user still has a way to measure his utility, which is the minimum assumption necessary for any market-based resource allocation mechanism.",
                "In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows.",
                "A user finds the two machines that provide him with the highest and lowest marginal utility.",
                "He then moves a fixed small amount of money from the machine with low marginal utility to the machine with the higher one.",
                "This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same.",
                "This condition guarantees the allocation is the optimum when the utility function is concave.",
                "The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5.",
                "SIMULATION RESULTS While the analytic results provide us with worst-case analysis for the infinite parallelism model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite parallelism model.",
                "First, we determine whether the user bidding process converges, and if so, what the rate of convergence is.",
                "Second, in cases of convergence, we look at the performance at equilibrium, using the efficiency and fairness metrics defined above.",
                "Iterative Method.",
                "In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met.",
                "The initial bid is set proportional to the users weights on the machines.",
                "We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3.",
                "Convergence Criteria.",
                "Convergence time measures how quickly the system reaches equilibrium.",
                "It is particularly important in the highly dynamic environment of distributed shared clusters, in which the systems conditions may change before reaching the equilibrium.",
                "Thus, a high convergence rate may be more significant than the efficiency at the equilibrium.",
                "There are several different criteria for convergence.",
                "The strongest criterion is to require that there is only negligible change in the bids of each user.",
                "The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged.",
                "The less strict utility gap criterion requires there to be only negligible change in the users utility.",
                "Given users concern for utility, this is a more natural definition.",
                "Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small utility gain.",
                "Therefore, we use the utility gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the utility gap of each user is smaller than (0.001 in our experiments).",
                "However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in utility as they move money around.",
                "For this method, we use the marginal utility gap criterion.",
                "We compare the highest and lowest utility margins on the machines.",
                "If the difference is negligible, then we consider the system to be converged.",
                "In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion.",
                "Under this criterion, a system has stabilized if the change in social welfare is ≤ .",
                "Individual users utility may not have converged.",
                "This criterion is useful to evaluate how quickly the system as a whole reaches a particular efficiency level.",
                "User preferences.",
                "We experiment with two models of user preferences, random distribution and correlated distribution.",
                "With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution.",
                "In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run.",
                "To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth).",
                "For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk.",
                "By using these profiles, we compress the parameter space and introduce correlations between users and machines.",
                "In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users).",
                "Sections 5.1 and 5.2 present the simulation results when we apply the infinite parallelism and finite parallelism models, respectively.",
                "If the system converges, we report the number of iterations until convergence.",
                "A convergence time of 200 iterations indicates non-convergence, in which case we report the efficiency and fairness values at the point we terminate the simulation. 5.1 Infinite parallelism In this section, we apply the infinite parallelism model, which assumes that users can use an unlimited number of machines.",
                "We present the efficiency and fairness at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively).",
                "We present results for the two user preference models.",
                "With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter).",
                "In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1).",
                "Convergence Time.",
                "Figure 2 shows the convergence time, efficiency and fairness of the infinite parallelism model under uniform (left) and correlated (right) preferences.",
                "Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: Efficiency, utility uniformity, enviness and convergence time as a function of the number of users under the infinite parallelism model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite parallelism model. number of users = 40. n = 100.",
                "The best-response <br>algorithm</br> converges within a few number of iterations for any number of users.",
                "In contrast, the local greedy adjustment <br>algorithm</br> does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users.",
                "We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc.",
                "Regardless, the local greedy adjustment method stabilizes within 100 iterations.",
                "Figure 3 presents the efficiency over time for a system with 40 users.",
                "It demonstrates that while both adjustment methods reach the same social welfare, the best-response <br>algorithm</br> is faster.",
                "In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it.",
                "Efficiency.",
                "Figure 2 (c) and (d) present the efficiency as a function of the number of users.",
                "We present the efficiency at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison.",
                "Social optimum provides an efficient allocation by definition.",
                "For both user preference models, the efficiency at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum.",
                "The efficiency at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences.",
                "Fairness.",
                "Figure 2(e) and (f) present the utility uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness.",
                "While the social optimum yields perfect efficiency, it has poor fairness.",
                "The weightproportional method achieves the highest fairness among the three allocation methods, but the fairness at the equilibrium is close.",
                "The utility uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other.",
                "Although utility uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point.",
                "At the social optimum, utility uniformity can be infinitely poor, as some users may be allocated no resources at all.",
                "The same is true with respect to envy-freeness.",
                "The difference between uniform and correlated preferences is best demonstrated in the social optimum results.",
                "When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both utility uniformity and envy-freeness go to zero.",
                "As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation.",
                "These results demonstrate the tradeoff between the different allocation methods.",
                "The efficiency at the equilibrium is lower than the social optimum, but it performs much better with respect to fairness.",
                "The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite parallelism 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite parallelism model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 Efficiency Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: Efficiency level over time under the finite parallelism model with local search <br>algorithm</br>. n = 100.",
                "We also consider the finite parallelism model and use the local search <br>algorithm</br>, as described in Section 4.2, to adjust users bids.",
                "We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the simulation results for only the uniform distribution.",
                "In our experiments, the local search <br>algorithm</br> stops quickly - it usually discovers a local maximum within two iterations.",
                "As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high efficiency. 134 Convergence time.",
                "Let ∆ denote the parallelism bound that limits the maximum number of machines each user can bid on.",
                "We experiment with ∆ = 5 and ∆ = 20.",
                "In both cases, we use 100 machines and vary the number of users.",
                "Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly.",
                "The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20.",
                "We believe that the non-convergence is caused by moderate competition.",
                "No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids.",
                "High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence.",
                "However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids.",
                "In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2].",
                "Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall efficiency after a few iterations (as shown in Figure 5).",
                "Performance.",
                "In Figure 6, we present the efficiency, utility uniformity, and envy-freeness at the Nash equilibrium for the finite parallelism model.",
                "When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations.",
                "When ∆ = 5, there is a performance drop, in particular with respect to the fairness metrics, in the range between 20 and 40 users (where it does not converge).",
                "For a larger number of users, the system converges and achieves a lower level of utility uniformity, but a high degree of efficiency and envy-freeness, similar to those under the infinite parallelism model.",
                "As described above, this is due the competition ratio falling into the head-to-head range.",
                "When the parallelism bound is large (∆ = 20), the performance is closer to the infinite parallelism model, and we do not observe this drop in performance. 6.",
                "RELATED WORK There are two main groups of related work in resource allocation: those that incorporate an economic mechanism, and those that do not.",
                "One non-economic approach is scheduling (surveyed by Pinedo [20]).",
                "Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19].",
                "These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users.",
                "We view scheduling and resource allocation as two separate functions.",
                "Resource allocation divides a resource among different users while scheduling takes a given allocation and orders a users jobs.",
                "Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]).",
                "Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated.",
                "Unfortunately, reservations have a high latency to acquire resources, unlike the price-anticipating scheme we consider.",
                "The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive.",
                "Bellagio[3] uses the SHARE centralized allocator.",
                "SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities.",
                "Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation.",
                "The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some efficiency, but it also avoids the complexity and overhead of combinatorial auctions.",
                "There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows.",
                "Their methodology follows the study of congestion (potential) games [17, 22] by relating the Nash equilibrium to the solution of a (usually convex) global optimization problem.",
                "But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines.",
                "For example, unlike those games, there may exist multiple Nash equilibria in our game.",
                "Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7.",
                "CONCLUSIONS This work studies the performance of a market-based mechanism for distributed shared clusters using both analyatical and simulation methods.",
                "We show that despite the worst case bounds, the system can reach a high performance level at the Nash equilibrium in terms of both efficiency and fairness metrics.",
                "In addition, with a few exceptions under the finite parallelism model, the system reaches equilibrium quickly by using the best response <br>algorithm</br> and, when the number of users is not too small, by the greedy local adjustment method.",
                "While our work indicates that the price-anticipating scheme may work well for resource allocation for shared clusters, there are many interesting directions for future work.",
                "One direction is to consider more realistic utility functions.",
                "For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine.",
                "In practice, both assumptions may not be correct.",
                "For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine.",
                "When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling.",
                "Another assumption is that users have infinite work, so the more resources they can acquire, the better.",
                "In practice, users have finite work.",
                "One approach to address this is to model the users utility according to the time to finish a task rather than the amount of resources he receives.",
                "Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model.",
                "In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user Efficiency Utility uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user Efficiency Utility uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite parallelism model. n = 100. 8.",
                "ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions.",
                "We also thank the anonymous reviewers for their useful comments. 9.",
                "REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat.",
                "Resource Allocation in Federated Distributed Computing Infrastructures.",
                "In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat.",
                "Computational Resource Exchanges for Distributed Resource Allocation. 2004. [4] B. N. Chun and D. E. Culler.",
                "Market-based Proportional Resource Sharing for Clusters.",
                "Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang.",
                "A Price-anticipating Resource Allocation Mechanism for Distributed Shared Clusters.",
                "Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou.",
                "Microeconomic Algorithms for Load Balancing in Distributed Computer Systems.",
                "In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan.",
                "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.",
                "Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow.",
                "Data Structures for Weighted Matching and Nearest Common Ancestors with Linking.",
                "In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang.",
                "Strategic Buyers in a Sum Bid Game for Flat Networks.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis.",
                "Efficiency Loss in a Network Resource Allocation Game.",
                "Mathematics of Operations Research, 2004. [12] F. P. Kelly.",
                "Charging and Rate Control for Elastic Traffic.",
                "European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo.",
                "Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability.",
                "Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn.",
                "The Hungarian Method for the Assignment Problem.",
                "Naval Res.",
                "Logis.",
                "Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B.",
                "A. Huberman.",
                "Tycoon: an Implemention of a Distributed Market-Based Resource Allocation System.",
                "Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich.",
                "Congestion Games with Player-Specific Payoff Functions.",
                "Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley.",
                "Potential Games.",
                "Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou.",
                "Algorithms, Games, and the Internet.",
                "In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz.",
                "Combinatorial Optimization.",
                "Dover Publications, Inc., 1982. [20] M. Pinedo.",
                "Scheduling.",
                "Prentice Hall, 2002. [21] O. Regev and N. Nisan.",
                "The Popcorn Market: Online Markets for Computational Resources.",
                "In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal.",
                "A Class of Games Possessing Pure-Strategy Nash Equilibria.",
                "Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek.",
                "Optimal Allocation of a Divisible Good to Strategic Buyers.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen.",
                "A Microeconomic Scheduler for Parallel Computers.",
                "In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian.",
                "Equity, Envy, and Efficiency.",
                "Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B.",
                "A. Huberman, J. O. Kephart, and S. Stornetta.",
                "Spawn: A Distributed Computational Economy.",
                "IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason.",
                "Auction Protocols for Decentralized Scheduling.",
                "Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter.",
                "Classifying Scheduling Policies with respect to Unfairness in an M/GI/1.",
                "In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang.",
                "On the Efficiency and Fairness of a Fixed Budget Resource Allocation Game.",
                "Manuscript, 2004. 136"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Como parte del análisis de juegos de presupuesto fijo, mostramos que los usuarios estratégicos con funciones de utilidad lineal pueden calcular sus ofertas utilizando una mejor respuesta \"algoritmo\" que resulta rápidamente en una asignación con alta eficiencia con poca sobrecarga computacional y de comunicación.",
                "Presentamos variaciones del mejor \"algoritmo\" de respuesta para tareas de paralelismo finitas e infinitas.",
                "Además, presentamos un \"algoritmo\" de ajuste codicioso local que converge más lentamente que la mejor respuesta, pero permite funciones de utilidad no lineales o no formulables.• Mostramos que el mecanismo de asignación de recursos que supera el precio logra un alto grado de eficiencia y equidad.",
                "Sorprendentemente, el equilibrio NASH, alcanzado por cada usuario, aplica iterativamente el mejor \"algoritmo\" de respuesta para adaptar sus ofertas, logra casi la eficiencia del óptimo social y casi la equidad de la asignación de proporción de peso: la eficiencia es ≥ 0.90, la utilidad, la utilidadLa uniformidad es ≥ 0.65, y la envidia es ≥ 0.97, independiente del número de usuarios en el sistema.",
                "El \"algoritmo\" de ajuste local funciona de manera similar cuando hay suficiente competitividad, pero tarda de 25 a 90 iteraciones para estabilizarse.",
                "En particular, nos gustaría saber si la estrategia intuitiva de cada jugador reajustando constantemente sus ofertas de acuerdo con el mejor \"algoritmo\" de respuesta conduce al equilibrio.",
                "Ahora presentamos el \"algoritmo\" para calcular la mejor respuesta.",
                "Por lo tanto, obtenemos el siguiente \"algoritmo\" para calcular la mejor respuesta de un usuario: 1.",
                "La complejidad computacional de este \"algoritmo\" es O (n log n), dominada por la clasificación.",
                "La mejor respuesta \"Algoritmo\" debe enviar y recibir mensajes O (n) porque cada usuario debe obtener las ofertas totales de cada host.",
                "En su lugar, se puede calcular utilizando el \"algoritmo\" de coincidencia máxima.",
                "El óptimo social es lo mismo que la coincidencia máxima de peso de G. Por lo tanto, podemos usar el \"algoritmo\" de coincidencia de peso máximo para calcular el óptimo social.",
                "Elegimos implementar el \"algoritmo\" húngaro [14, 19] debido a su simplicidad.",
                "Puede existir un \"algoritmo\" más eficiente para calcular la coincidencia máxima explotando la estructura especial de G. Esta sigue siendo una pregunta abierta interesante.",
                "Sin embargo, no conocemos un \"algoritmo\" eficiente para calcular la mejor respuesta bajo el modelo de paralelismo finito.",
                "Para un subconjunto de máquinas A, denota por x (a) la mejor respuesta en un sin paralelismo unido y por u (a) la utilidad obtenida por el mejor \"algoritmo\" de respuesta.",
                "Calcule u (a) por el paralelismo infinito mejor respuesta \"algoritmo\" (Sec 4.1) en A. 3.",
                "Sospechamos que los máximos locales que encuentra este \"algoritmo\" es también el máximo global (con respecto a un usuario individual) y que este proceso se detiene después de unas pocas iteraciones, pero no podemos establecerlo.",
                "Sin embargo, en nuestras simulaciones, este \"algoritmo\" converge rápidamente a una eficiencia alta (≥ .7).131 4.3 Ajuste de codicioso local Los algoritmos de respuesta de los mejores de respuesta anteriores solo funcionan para las funciones de utilidad lineal descritas anteriormente.",
                "El \"algoritmo\" de mejor respuesta converge en unas pocas número de iteraciones para cualquier número de usuarios.",
                "En contraste, el \"algoritmo\" de ajuste codicioso local no converge incluso dentro de 500 iteraciones cuando el número de usuarios es menor que 60, pero converge para un mayor número de usuarios.",
                "Demuestra que si bien ambos métodos de ajuste alcanzan el mismo bienestar social, el \"algoritmo\" de mejor respuesta es más rápido.",
                "La asignación de equilibrio es completamente libre de envidia bajo preferencias uniformes y casi sin envidia bajo preferencias correlacionadas.5.2 Paralelismo finito 0 50 100 100 150 200 0 10 20 30 40 50 60 70 80 90 ConvergenceTime (#iteraciones) Número de usuarios 5 máquinas/usuario 20 máquinas/usuario Figura 4: Tiempo de convergencia bajo el modelo de paralelismo finito.n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 iteración de eficiencia Número 5-máquinas/usuario (40 usuarios) 20 máquinas/usuario (10 usuarios) Figura 5: nivel de eficiencia con el tiempo bajo el modelo de paralelismo finito con localBuscar \"Algoritmo\".n = 100.",
                "También consideramos el modelo de paralelismo finito y utilizamos el \"algoritmo\" de búsqueda local, como se describe en la Sección 4.2, para ajustar las ofertas de los usuarios.",
                "En nuestros experimentos, el \"algoritmo\" de búsqueda local se detiene rápidamente; generalmente descubre un máximo local dentro de dos iteraciones.",
                "Además, con algunas excepciones bajo el modelo de paralelismo finito, el sistema alcanza el equilibrio rápidamente utilizando el mejor \"algoritmo\" de respuesta y, cuando el número de usuarios no es demasiado pequeño, por el método de ajuste local codicioso."
            ],
            "translated_text": "",
            "candidates": [
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "Algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "Algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "Algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "Algoritmo",
                "Algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo",
                "algoritmo"
            ],
            "error": []
        },
        "bidding mechanism": {
            "translated_key": "mecanismo de licitación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Price-Anticipating Resource Allocation Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget resource allocation game to understand the performance of a distributed marketbased resource allocation system.",
                "Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual utility.",
                "We look at both the efficiency and the fairness of the allocation at the equilibrium, where fairness is evaluated through the measures of utility uniformity and envy-freeness.",
                "We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high efficiency but poor fairness, the proposed allocation scheme achieves a nice balance of high degrees of efficiency and fairness at the equilibrium.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1.",
                "INTRODUCTION The primary advantage of distributed shared clusters like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources.",
                "This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users.",
                "Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users.",
                "Finally, sharing allows greater reliability because of redundancy in hosts and network connections.",
                "However, resource allocation in these systems remains the major challenge.",
                "The problem is how to allocate a shared resource both fairly and efficiently (where efficiency is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests.",
                "Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator.",
                "However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set.",
                "Instead, we examine a market-based resource allocation system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a <br>bidding mechanism</br>.",
                "In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource.",
                "This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26].",
                "Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets.",
                "In this work, we examine a price-anticipating scheme in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6).",
                "In this paper, we formulate the fixed budget resource allocation game and study the existence and performance of the Nash equilibria of this game.",
                "For evaluating the Nash equilibria, we consider both their efficiency, measuring how close the social welfare at equilibrium is to the social optimum, and fairness, measuring how different the users utilities are.",
                "Although rarely considered in previous game theoretical study, we believe fairness is a critical metric for a resource allocation schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair resource allocation in favor of one with less efficient, more fair resource allocation.",
                "We use both utility uniformity and envy-freeness to measure fairness.",
                "Utility uniformity, which is common in Computer Science work, measures the closeness of utilities of different users.",
                "Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others.",
                "Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria.",
                "Using analysis, we show that there is always a Nash equilibrium in the fixed budget game if the utility functions satisfy a fairly weak and natural condition of strong competitiveness.",
                "We also show the worst case performance bounds: for m players the efficiency at equilibrium is Ω(1/ √ m), the utility uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83.",
                "Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their utility.",
                "As part of the fixed budget game analysis, we show that strategic users with linear utility functions can calculate their bids using a best response algorithm that quickly results in an allocation with high efficiency with little computational and communication overhead.",
                "We present variations of the best response algorithm for both finite and infinite parallelism tasks.",
                "In addition, we present a local greedy adjustment algorithm that converges more slowly than best response, but allows for non-linear or unformulatable utility functions. • We show that the price-anticipating resource allocation mechanism achieves a high degree of efficiency and fairness.",
                "Using simulation, we find that although the socially optimal allocation results in perfect efficiency, it also results in very poor fairness.",
                "Likewise, allocating according to only users preference weights results in a high fairness, but a mediocre efficiency.",
                "Intuition would suggest that efficiency and fairness are exclusive.",
                "Surprisingly, the Nash equilibrium, reached by each user iteratively applying the best response algorithm to adapt his bids, achieves nearly the efficiency of the social optimum and nearly the fairness of the weight-proportional allocation: the efficiency is ≥ 0.90, the utility uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system.",
                "In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy.",
                "The local adjustment algorithm performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize.",
                "As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of efficiency and fairness.",
                "The rest of the paper is organized as follows.",
                "We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite parallelism model in Section 3.",
                "In Section 4, we describe algorithms for users to optimize their own utility in the fixed budget game.",
                "In Section 5, we describe our simulator and simulation results.",
                "We describe related work in Section 6.",
                "We conclude by discussing some limit of our model and future work in Section 7. 2.",
                "THE MODEL Price-Anticipating Resource Allocation.",
                "We study the problem of allocating a set of divisible resources (or machines).",
                "Suppose that there are m users and n machines.",
                "Each machine can be continuously divided for allocation to multiple users.",
                "An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1.",
                "Let Ω denote the set of all the allocation schemes.",
                "We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed.",
                "Formally, suppose that user i submits a non-negative bid xij to machine j.",
                "The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j.",
                "When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone.",
                "We call xi = (xi1, . . . , xin) the bidding vector of user i.",
                "The additional consideration we have is that each user i has a budget constraint Xi.",
                "Therefore, user is total bids have to sum up to his budget, i.e.",
                "Pn j=1 xij = Xi.",
                "The budget constraints come from the fact that the users do not have infinite budget.",
                "Utility Functions.",
                "Each user is utility is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine.",
                "Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines.",
                "Therefore, the basic utility function we consider is the linear utility function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j.",
                "For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications.",
                "As a result, w11 > w12 and w21 < w22.",
                "Our definition of utility functions corresponds to the user having enough jobs or enough parallelism within jobs to utilize all the machines.",
                "Consequently, the users goal is to grab as much of a resource as possible.",
                "We call this the infinite parallelism model.",
                "In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity).",
                "To model this, we also consider the more realistic finite parallelism model, where the users parallelism is bounded by ki, and the users utility Ui is the sum of the ki largest wijrij.",
                "In this model, the user only submits bids to up to ki machines.",
                "Our abstraction is to capture the essense of the problem and facilitate our analysis.",
                "In Section 7, we discuss the limit of the above definition of utility functions.",
                "Best Response.",
                "As typically, we assume the users are selfish and strategic - they all act to maximize their own utility, defined by their utility functions.",
                "From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0.",
                "The difficulty of the above optimization problem depends on the formulation of Ui.",
                "We will show later how to solve it for the infinite parallelism model and provide a heuristic for finite parallelism model.",
                "Nash Equilibrium.",
                "By the assumption that the user is selfish, each users bidding vector is the best response to the system.",
                "The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users.",
                "Such a state is known as the Nash equilibrium, a central concept in Game Theory.",
                "Formally, the bidding vectors x1, . . . , xm is a Nash equilibrium if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) .",
                "The Nash equilibrium is desirable because it is a stable state at which no one has incentive to change his strategy.",
                "But a game may not have an equilibrium.",
                "Indeed, a Nash equilibrium may not exist in the price anticipating scheme we define above.",
                "This can be shown by a simple example of two players and two machines.",
                "For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2.",
                "Then player 1 should never bid on machine 2 because it has no value to him.",
                "Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the Nash equilibrium.",
                "We should note that even the mixed strategy equilibrium does not exist in this example.",
                "Clearly, this happens whenever there is a resource that is wanted by only one player.",
                "To rule out this case, we consider those strongly competitive games.1 Under the infinite parallelism model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0.",
                "Under such a condition, we have that (see [5] for a proof), Theorem 1.",
                "There always exists a pure strategy Nash equilibrium in a strongly competitive game.",
                "Given the existence of the Nash equilibrium, the next important question is the performance at the Nash equilibrium, which is often measured by its efficiency and fairness.",
                "Efficiency (Price of Anarchy).",
                "For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω.",
                "Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities.",
                "The efficiency at an allocation scheme ω is defined as π(ω) = U(ω) U∗ .",
                "Let Ω0 denote the set of the allocation at the Nash equilibrium.",
                "When there exists Nash equilibrium, i.e.",
                "Ω0 = ∅, define the efficiency of a game Q to be π(Q) = minω∈Ω0 π(ω).",
                "It is usually the case that π < 1, i.e. there is an efficiency loss at a Nash equilibrium.",
                "This is the price of anarchy [18] paid for not having central enforcement of the users good behavior.",
                "This price is interesting because central control results in the best possible outcome, but is not possible in most cases.",
                "Fairness.",
                "While the definition of efficiency is standard, there are multiple ways to define fairness.",
                "We consider two metrics.",
                "One is by comparing the users utilities.",
                "The utility uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum utility and the maximum utility among the users.",
                "Such definition (or utility discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature.",
                "Under this definition, the utility uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω).",
                "The other metric extensively studied in Economics is the concept of envy-freeness [25].",
                "Unlike the utility uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive.",
                "Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine.",
                "These alternatives, however, introduce the problem of coming up with the right price or limit.",
                "When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme.",
                "Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3.",
                "NASH EQUILIBRIUM In this section, we present some theoretical results regarding the performance at Nash equilibrium under the infinite parallelism model.",
                "We assume that the game is strongly competitive to guarantee the existence of equilibria.",
                "For a meaningful discussion of efficiency and fairness, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same utility when they own all the resources.",
                "This precludes the case when a user has an extremely high budget, resulting in very low efficiency or low fairness at equilibrium.",
                "We first provide a characterization of the equilibria.",
                "By definition, the bidding vectors x1, . . . , xm is a Nash equilibrium if and only if each players strategy is the best response to the groups bids.",
                "Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid.",
                "Under the infinite parallelism model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e.",
                "U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties.",
                "We start with two special cases to provide some intuition about the game.",
                "The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games.",
                "Let x and y denote the respective bids of users 1 and 2 on machine 1.",
                "Denote by s = x + y and δ = (2 − s)/s.",
                "Equal-weight game.",
                "In Figure 1, both users have equal valuations for the two machines.",
                "By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α.",
                "Thus, there exists a unique Nash equilibrium of the game where the two users have the same bidding vector.",
                "At the equilibrium, the utility of each user is 1/2, and the social welfare is 1.",
                "On the other hand, the social optimum is clearly 1.",
                "Thus, the equal-weight game is ideal as the efficiency, utility uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games.",
                "Opposite-weight game.",
                "The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines.",
                "Assume that α ≥ 1/2.",
                "Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each Nash equilibrium corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1.",
                "Clearly, δ = 1 is a root of f(δ).",
                "When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine.",
                "At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828.",
                "However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria.",
                "Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid.",
                "In this case, user 1 gets most of machine 1 and almost half of machine 2.",
                "The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4.",
                "This solves to α0 = 2+ √ 2 4 ≈ 0.854.",
                "Those asymmetric equilibria at δ = 1 are bad as they yield lower efficiency than the symmetric equilibrium.",
                "Let δ0 be the minimum root.",
                "When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0.",
                "Then, x, y → 1.",
                "Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75.",
                "From the above simple game, we already observe that the Nash equilibrium may not be unique, which is different from many congestion games in which the Nash equilibrium is unique.",
                "For the general two player game, we can show that 0.75 is actually the worst efficiency bound with a proof in [5].",
                "Further, at the asymmetric equilibrium, the utility uniformity approaches 1/2 when α → 1.",
                "This is the worst possible for two player games because as we show in Section 3.2, a users utility at any Nash equilibrium is at least 1/m in the m-player game.",
                "Another consequence is that the two player game is always envy-free.",
                "Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively.",
                "Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free.",
                "Theorem 2.",
                "For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1.",
                "All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large.",
                "The following example shows the worst case bound.",
                "Consider a system with m = n2 + n players and n machines.",
                "Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine.",
                "The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines.",
                "Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine.",
                "Hence, the total money on each machine is n + 1.",
                "At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total utility of n3 · 1 n2(n+1) < 1.",
                "The other n players each receives 1 n+1 on their favorite machine, resulting in a total utility of n · 1 n+1 < 1.",
                "Therefore, the total utility of the equilibrium is < 2, while the social optimum is n = Θ( √ m).",
                "This bound is the worst possible.",
                "What about the utility uniformity of the multi-player allocation game?",
                "We next show that the utility uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i.",
                "User i can ensure a utility of 1/m by distributing his budget proportionally to the current bids.",
                "That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1.",
                "Therefore, rij = 1 1+m−1 = 1 m .",
                "The total utility of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m .",
                "Since each users utility cannot exceed 1, the minimal possible uniformity is 1/m.",
                "While the utility uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29].",
                "To summarize, we have that Theorem 3.",
                "For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2.",
                "All of these bounds are tight in the worst case. 4.",
                "ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite parallelism model.",
                "However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the Nash equilibrium for the typical distribution of utility functions.",
                "In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response algorithm leads to the equilibrium.",
                "To answer these questions, we resort to simulations.",
                "In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments.",
                "We consider both the infinite parallelism and finite parallelism model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most.",
                "We now present the algorithm for computing the best response.",
                "Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0.",
                "To compute the best response, we first sort wj yj in decreasing order.",
                "Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn .",
                "Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution.",
                "We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too.",
                "Suppose this were not true.",
                "Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) .",
                "Thus it contradicts with the optimality condition (1).",
                "Suppose that k = max{i|x∗ i > 0}.",
                "Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 .",
                "Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi .",
                "The remaining question is how to determine k. It is the largest value such that x∗ k > 0.",
                "Thus, we obtain the following algorithm to compute the best response of a user: 1.",
                "Sort the machines according to wi yi in decreasing order. 2.",
                "Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3.",
                "Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj.",
                "The computational complexity of this algorithm is O(n log n), dominated by the sorting.",
                "In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible.",
                "The best response algorithm must send and receive O(n) messages because each user must obtain the total bids from each host.",
                "In practice, this is more significant than the computational cost.",
                "Note that hosts only reveal to users the sum of the bids on them.",
                "As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite Parallelism Model Recall that in the finite parallelism model, each user i only places bids on at most ki machines.",
                "Of course, the infinite parallelism model is just a special case of finite parallelism model in which ki = n for all the is.",
                "In the finite parallelism model, computing the social optimum is no longer trivial due to bounded parallelism.",
                "It can instead be computed by using the maximum matching algorithm.",
                "Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj).",
                "A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching.",
                "As a result, the following lemma holds.",
                "Lemma 1.",
                "The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching algorithm to compute the social optimum.",
                "The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14].",
                "We choose to implement the Hungarian algorithm [14, 19] because of its simplicity.",
                "There may exist a more efficient algorithm for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question.",
                "However, we do not know an efficient algorithm to compute the best response under the finite parallelism model.",
                "Instead, we provide the following local search heuristic.",
                "Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn.",
                "Let the users budget be X and the parallelism bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users utility.",
                "For a subset of machines A, denote by x(A) the best response on A without parallelism bound and by U(A) the utility obtained by the best response algorithm.",
                "The local search works as follows: 1.",
                "Set A to be the k machines with the highest wi/yi. 2.",
                "Compute U(A) by the infinite parallelism best response algorithm (Sec 4.1) on A. 3.",
                "For each i ∈ A and each j /∈ A, repeat 4.",
                "Let B = A − {i} + {j}, compute U(B). 5.",
                "If(U(B) > U(A)), let A ← B, and goto 2. 6.",
                "Output x(A).",
                "Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response utility.",
                "If yes, we swap the machines and repeat the process.",
                "Otherwise, we have reached a local maxima and output that value.",
                "We suspect that the local maxima that this algorithm finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it.",
                "However, in our simulations, this algorithm quickly converges to a high (≥ .7) efficiency. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear utility functions described earlier.",
                "In practice, utility functions may have more a complicated form, or even worse, a user may not have a formulation of his utility function.",
                "We do assume that the user still has a way to measure his utility, which is the minimum assumption necessary for any market-based resource allocation mechanism.",
                "In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows.",
                "A user finds the two machines that provide him with the highest and lowest marginal utility.",
                "He then moves a fixed small amount of money from the machine with low marginal utility to the machine with the higher one.",
                "This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same.",
                "This condition guarantees the allocation is the optimum when the utility function is concave.",
                "The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5.",
                "SIMULATION RESULTS While the analytic results provide us with worst-case analysis for the infinite parallelism model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite parallelism model.",
                "First, we determine whether the user bidding process converges, and if so, what the rate of convergence is.",
                "Second, in cases of convergence, we look at the performance at equilibrium, using the efficiency and fairness metrics defined above.",
                "Iterative Method.",
                "In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met.",
                "The initial bid is set proportional to the users weights on the machines.",
                "We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3.",
                "Convergence Criteria.",
                "Convergence time measures how quickly the system reaches equilibrium.",
                "It is particularly important in the highly dynamic environment of distributed shared clusters, in which the systems conditions may change before reaching the equilibrium.",
                "Thus, a high convergence rate may be more significant than the efficiency at the equilibrium.",
                "There are several different criteria for convergence.",
                "The strongest criterion is to require that there is only negligible change in the bids of each user.",
                "The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged.",
                "The less strict utility gap criterion requires there to be only negligible change in the users utility.",
                "Given users concern for utility, this is a more natural definition.",
                "Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small utility gain.",
                "Therefore, we use the utility gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the utility gap of each user is smaller than (0.001 in our experiments).",
                "However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in utility as they move money around.",
                "For this method, we use the marginal utility gap criterion.",
                "We compare the highest and lowest utility margins on the machines.",
                "If the difference is negligible, then we consider the system to be converged.",
                "In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion.",
                "Under this criterion, a system has stabilized if the change in social welfare is ≤ .",
                "Individual users utility may not have converged.",
                "This criterion is useful to evaluate how quickly the system as a whole reaches a particular efficiency level.",
                "User preferences.",
                "We experiment with two models of user preferences, random distribution and correlated distribution.",
                "With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution.",
                "In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run.",
                "To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth).",
                "For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk.",
                "By using these profiles, we compress the parameter space and introduce correlations between users and machines.",
                "In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users).",
                "Sections 5.1 and 5.2 present the simulation results when we apply the infinite parallelism and finite parallelism models, respectively.",
                "If the system converges, we report the number of iterations until convergence.",
                "A convergence time of 200 iterations indicates non-convergence, in which case we report the efficiency and fairness values at the point we terminate the simulation. 5.1 Infinite parallelism In this section, we apply the infinite parallelism model, which assumes that users can use an unlimited number of machines.",
                "We present the efficiency and fairness at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively).",
                "We present results for the two user preference models.",
                "With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter).",
                "In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1).",
                "Convergence Time.",
                "Figure 2 shows the convergence time, efficiency and fairness of the infinite parallelism model under uniform (left) and correlated (right) preferences.",
                "Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: Efficiency, utility uniformity, enviness and convergence time as a function of the number of users under the infinite parallelism model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite parallelism model. number of users = 40. n = 100.",
                "The best-response algorithm converges within a few number of iterations for any number of users.",
                "In contrast, the local greedy adjustment algorithm does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users.",
                "We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc.",
                "Regardless, the local greedy adjustment method stabilizes within 100 iterations.",
                "Figure 3 presents the efficiency over time for a system with 40 users.",
                "It demonstrates that while both adjustment methods reach the same social welfare, the best-response algorithm is faster.",
                "In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it.",
                "Efficiency.",
                "Figure 2 (c) and (d) present the efficiency as a function of the number of users.",
                "We present the efficiency at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison.",
                "Social optimum provides an efficient allocation by definition.",
                "For both user preference models, the efficiency at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum.",
                "The efficiency at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences.",
                "Fairness.",
                "Figure 2(e) and (f) present the utility uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness.",
                "While the social optimum yields perfect efficiency, it has poor fairness.",
                "The weightproportional method achieves the highest fairness among the three allocation methods, but the fairness at the equilibrium is close.",
                "The utility uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other.",
                "Although utility uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point.",
                "At the social optimum, utility uniformity can be infinitely poor, as some users may be allocated no resources at all.",
                "The same is true with respect to envy-freeness.",
                "The difference between uniform and correlated preferences is best demonstrated in the social optimum results.",
                "When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both utility uniformity and envy-freeness go to zero.",
                "As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation.",
                "These results demonstrate the tradeoff between the different allocation methods.",
                "The efficiency at the equilibrium is lower than the social optimum, but it performs much better with respect to fairness.",
                "The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite parallelism 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite parallelism model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 Efficiency Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: Efficiency level over time under the finite parallelism model with local search algorithm. n = 100.",
                "We also consider the finite parallelism model and use the local search algorithm, as described in Section 4.2, to adjust users bids.",
                "We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the simulation results for only the uniform distribution.",
                "In our experiments, the local search algorithm stops quickly - it usually discovers a local maximum within two iterations.",
                "As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high efficiency. 134 Convergence time.",
                "Let ∆ denote the parallelism bound that limits the maximum number of machines each user can bid on.",
                "We experiment with ∆ = 5 and ∆ = 20.",
                "In both cases, we use 100 machines and vary the number of users.",
                "Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly.",
                "The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20.",
                "We believe that the non-convergence is caused by moderate competition.",
                "No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids.",
                "High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence.",
                "However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids.",
                "In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2].",
                "Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall efficiency after a few iterations (as shown in Figure 5).",
                "Performance.",
                "In Figure 6, we present the efficiency, utility uniformity, and envy-freeness at the Nash equilibrium for the finite parallelism model.",
                "When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations.",
                "When ∆ = 5, there is a performance drop, in particular with respect to the fairness metrics, in the range between 20 and 40 users (where it does not converge).",
                "For a larger number of users, the system converges and achieves a lower level of utility uniformity, but a high degree of efficiency and envy-freeness, similar to those under the infinite parallelism model.",
                "As described above, this is due the competition ratio falling into the head-to-head range.",
                "When the parallelism bound is large (∆ = 20), the performance is closer to the infinite parallelism model, and we do not observe this drop in performance. 6.",
                "RELATED WORK There are two main groups of related work in resource allocation: those that incorporate an economic mechanism, and those that do not.",
                "One non-economic approach is scheduling (surveyed by Pinedo [20]).",
                "Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19].",
                "These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users.",
                "We view scheduling and resource allocation as two separate functions.",
                "Resource allocation divides a resource among different users while scheduling takes a given allocation and orders a users jobs.",
                "Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]).",
                "Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated.",
                "Unfortunately, reservations have a high latency to acquire resources, unlike the price-anticipating scheme we consider.",
                "The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive.",
                "Bellagio[3] uses the SHARE centralized allocator.",
                "SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities.",
                "Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation.",
                "The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some efficiency, but it also avoids the complexity and overhead of combinatorial auctions.",
                "There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows.",
                "Their methodology follows the study of congestion (potential) games [17, 22] by relating the Nash equilibrium to the solution of a (usually convex) global optimization problem.",
                "But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines.",
                "For example, unlike those games, there may exist multiple Nash equilibria in our game.",
                "Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7.",
                "CONCLUSIONS This work studies the performance of a market-based mechanism for distributed shared clusters using both analyatical and simulation methods.",
                "We show that despite the worst case bounds, the system can reach a high performance level at the Nash equilibrium in terms of both efficiency and fairness metrics.",
                "In addition, with a few exceptions under the finite parallelism model, the system reaches equilibrium quickly by using the best response algorithm and, when the number of users is not too small, by the greedy local adjustment method.",
                "While our work indicates that the price-anticipating scheme may work well for resource allocation for shared clusters, there are many interesting directions for future work.",
                "One direction is to consider more realistic utility functions.",
                "For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine.",
                "In practice, both assumptions may not be correct.",
                "For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine.",
                "When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling.",
                "Another assumption is that users have infinite work, so the more resources they can acquire, the better.",
                "In practice, users have finite work.",
                "One approach to address this is to model the users utility according to the time to finish a task rather than the amount of resources he receives.",
                "Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model.",
                "In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user Efficiency Utility uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user Efficiency Utility uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite parallelism model. n = 100. 8.",
                "ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions.",
                "We also thank the anonymous reviewers for their useful comments. 9.",
                "REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat.",
                "Resource Allocation in Federated Distributed Computing Infrastructures.",
                "In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat.",
                "Computational Resource Exchanges for Distributed Resource Allocation. 2004. [4] B. N. Chun and D. E. Culler.",
                "Market-based Proportional Resource Sharing for Clusters.",
                "Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang.",
                "A Price-anticipating Resource Allocation Mechanism for Distributed Shared Clusters.",
                "Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou.",
                "Microeconomic Algorithms for Load Balancing in Distributed Computer Systems.",
                "In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan.",
                "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.",
                "Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow.",
                "Data Structures for Weighted Matching and Nearest Common Ancestors with Linking.",
                "In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang.",
                "Strategic Buyers in a Sum Bid Game for Flat Networks.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis.",
                "Efficiency Loss in a Network Resource Allocation Game.",
                "Mathematics of Operations Research, 2004. [12] F. P. Kelly.",
                "Charging and Rate Control for Elastic Traffic.",
                "European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo.",
                "Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability.",
                "Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn.",
                "The Hungarian Method for the Assignment Problem.",
                "Naval Res.",
                "Logis.",
                "Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B.",
                "A. Huberman.",
                "Tycoon: an Implemention of a Distributed Market-Based Resource Allocation System.",
                "Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich.",
                "Congestion Games with Player-Specific Payoff Functions.",
                "Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley.",
                "Potential Games.",
                "Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou.",
                "Algorithms, Games, and the Internet.",
                "In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz.",
                "Combinatorial Optimization.",
                "Dover Publications, Inc., 1982. [20] M. Pinedo.",
                "Scheduling.",
                "Prentice Hall, 2002. [21] O. Regev and N. Nisan.",
                "The Popcorn Market: Online Markets for Computational Resources.",
                "In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal.",
                "A Class of Games Possessing Pure-Strategy Nash Equilibria.",
                "Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek.",
                "Optimal Allocation of a Divisible Good to Strategic Buyers.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen.",
                "A Microeconomic Scheduler for Parallel Computers.",
                "In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian.",
                "Equity, Envy, and Efficiency.",
                "Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B.",
                "A. Huberman, J. O. Kephart, and S. Stornetta.",
                "Spawn: A Distributed Computational Economy.",
                "IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason.",
                "Auction Protocols for Decentralized Scheduling.",
                "Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter.",
                "Classifying Scheduling Policies with respect to Unfairness in an M/GI/1.",
                "In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang.",
                "On the Efficiency and Fairness of a Fixed Budget Resource Allocation Game.",
                "Manuscript, 2004. 136"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En cambio, examinamos un sistema de asignación de recursos basado en el mercado (otros se describen en [2, 4, 6, 21, 26, 27]) que permite a los usuarios expresar sus preferencias por los recursos a través de un \"mecanismo de licitación\"."
            ],
            "translated_text": "",
            "candidates": [
                "mecanismo de licitación",
                "mecanismo de licitación"
            ],
            "error": []
        },
        "price-anticipating scheme": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Price-Anticipating Resource Allocation Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget resource allocation game to understand the performance of a distributed marketbased resource allocation system.",
                "Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual utility.",
                "We look at both the efficiency and the fairness of the allocation at the equilibrium, where fairness is evaluated through the measures of utility uniformity and envy-freeness.",
                "We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high efficiency but poor fairness, the proposed allocation scheme achieves a nice balance of high degrees of efficiency and fairness at the equilibrium.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1.",
                "INTRODUCTION The primary advantage of distributed shared clusters like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources.",
                "This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users.",
                "Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users.",
                "Finally, sharing allows greater reliability because of redundancy in hosts and network connections.",
                "However, resource allocation in these systems remains the major challenge.",
                "The problem is how to allocate a shared resource both fairly and efficiently (where efficiency is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests.",
                "Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator.",
                "However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set.",
                "Instead, we examine a market-based resource allocation system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a bidding mechanism.",
                "In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource.",
                "This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26].",
                "Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets.",
                "In this work, we examine a <br>price-anticipating scheme</br> in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6).",
                "In this paper, we formulate the fixed budget resource allocation game and study the existence and performance of the Nash equilibria of this game.",
                "For evaluating the Nash equilibria, we consider both their efficiency, measuring how close the social welfare at equilibrium is to the social optimum, and fairness, measuring how different the users utilities are.",
                "Although rarely considered in previous game theoretical study, we believe fairness is a critical metric for a resource allocation schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair resource allocation in favor of one with less efficient, more fair resource allocation.",
                "We use both utility uniformity and envy-freeness to measure fairness.",
                "Utility uniformity, which is common in Computer Science work, measures the closeness of utilities of different users.",
                "Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others.",
                "Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria.",
                "Using analysis, we show that there is always a Nash equilibrium in the fixed budget game if the utility functions satisfy a fairly weak and natural condition of strong competitiveness.",
                "We also show the worst case performance bounds: for m players the efficiency at equilibrium is Ω(1/ √ m), the utility uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83.",
                "Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their utility.",
                "As part of the fixed budget game analysis, we show that strategic users with linear utility functions can calculate their bids using a best response algorithm that quickly results in an allocation with high efficiency with little computational and communication overhead.",
                "We present variations of the best response algorithm for both finite and infinite parallelism tasks.",
                "In addition, we present a local greedy adjustment algorithm that converges more slowly than best response, but allows for non-linear or unformulatable utility functions. • We show that the price-anticipating resource allocation mechanism achieves a high degree of efficiency and fairness.",
                "Using simulation, we find that although the socially optimal allocation results in perfect efficiency, it also results in very poor fairness.",
                "Likewise, allocating according to only users preference weights results in a high fairness, but a mediocre efficiency.",
                "Intuition would suggest that efficiency and fairness are exclusive.",
                "Surprisingly, the Nash equilibrium, reached by each user iteratively applying the best response algorithm to adapt his bids, achieves nearly the efficiency of the social optimum and nearly the fairness of the weight-proportional allocation: the efficiency is ≥ 0.90, the utility uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system.",
                "In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy.",
                "The local adjustment algorithm performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize.",
                "As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of efficiency and fairness.",
                "The rest of the paper is organized as follows.",
                "We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite parallelism model in Section 3.",
                "In Section 4, we describe algorithms for users to optimize their own utility in the fixed budget game.",
                "In Section 5, we describe our simulator and simulation results.",
                "We describe related work in Section 6.",
                "We conclude by discussing some limit of our model and future work in Section 7. 2.",
                "THE MODEL Price-Anticipating Resource Allocation.",
                "We study the problem of allocating a set of divisible resources (or machines).",
                "Suppose that there are m users and n machines.",
                "Each machine can be continuously divided for allocation to multiple users.",
                "An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1.",
                "Let Ω denote the set of all the allocation schemes.",
                "We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed.",
                "Formally, suppose that user i submits a non-negative bid xij to machine j.",
                "The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j.",
                "When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone.",
                "We call xi = (xi1, . . . , xin) the bidding vector of user i.",
                "The additional consideration we have is that each user i has a budget constraint Xi.",
                "Therefore, user is total bids have to sum up to his budget, i.e.",
                "Pn j=1 xij = Xi.",
                "The budget constraints come from the fact that the users do not have infinite budget.",
                "Utility Functions.",
                "Each user is utility is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine.",
                "Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines.",
                "Therefore, the basic utility function we consider is the linear utility function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j.",
                "For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications.",
                "As a result, w11 > w12 and w21 < w22.",
                "Our definition of utility functions corresponds to the user having enough jobs or enough parallelism within jobs to utilize all the machines.",
                "Consequently, the users goal is to grab as much of a resource as possible.",
                "We call this the infinite parallelism model.",
                "In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity).",
                "To model this, we also consider the more realistic finite parallelism model, where the users parallelism is bounded by ki, and the users utility Ui is the sum of the ki largest wijrij.",
                "In this model, the user only submits bids to up to ki machines.",
                "Our abstraction is to capture the essense of the problem and facilitate our analysis.",
                "In Section 7, we discuss the limit of the above definition of utility functions.",
                "Best Response.",
                "As typically, we assume the users are selfish and strategic - they all act to maximize their own utility, defined by their utility functions.",
                "From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0.",
                "The difficulty of the above optimization problem depends on the formulation of Ui.",
                "We will show later how to solve it for the infinite parallelism model and provide a heuristic for finite parallelism model.",
                "Nash Equilibrium.",
                "By the assumption that the user is selfish, each users bidding vector is the best response to the system.",
                "The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users.",
                "Such a state is known as the Nash equilibrium, a central concept in Game Theory.",
                "Formally, the bidding vectors x1, . . . , xm is a Nash equilibrium if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) .",
                "The Nash equilibrium is desirable because it is a stable state at which no one has incentive to change his strategy.",
                "But a game may not have an equilibrium.",
                "Indeed, a Nash equilibrium may not exist in the price anticipating scheme we define above.",
                "This can be shown by a simple example of two players and two machines.",
                "For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2.",
                "Then player 1 should never bid on machine 2 because it has no value to him.",
                "Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the Nash equilibrium.",
                "We should note that even the mixed strategy equilibrium does not exist in this example.",
                "Clearly, this happens whenever there is a resource that is wanted by only one player.",
                "To rule out this case, we consider those strongly competitive games.1 Under the infinite parallelism model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0.",
                "Under such a condition, we have that (see [5] for a proof), Theorem 1.",
                "There always exists a pure strategy Nash equilibrium in a strongly competitive game.",
                "Given the existence of the Nash equilibrium, the next important question is the performance at the Nash equilibrium, which is often measured by its efficiency and fairness.",
                "Efficiency (Price of Anarchy).",
                "For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω.",
                "Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities.",
                "The efficiency at an allocation scheme ω is defined as π(ω) = U(ω) U∗ .",
                "Let Ω0 denote the set of the allocation at the Nash equilibrium.",
                "When there exists Nash equilibrium, i.e.",
                "Ω0 = ∅, define the efficiency of a game Q to be π(Q) = minω∈Ω0 π(ω).",
                "It is usually the case that π < 1, i.e. there is an efficiency loss at a Nash equilibrium.",
                "This is the price of anarchy [18] paid for not having central enforcement of the users good behavior.",
                "This price is interesting because central control results in the best possible outcome, but is not possible in most cases.",
                "Fairness.",
                "While the definition of efficiency is standard, there are multiple ways to define fairness.",
                "We consider two metrics.",
                "One is by comparing the users utilities.",
                "The utility uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum utility and the maximum utility among the users.",
                "Such definition (or utility discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature.",
                "Under this definition, the utility uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω).",
                "The other metric extensively studied in Economics is the concept of envy-freeness [25].",
                "Unlike the utility uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive.",
                "Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine.",
                "These alternatives, however, introduce the problem of coming up with the right price or limit.",
                "When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme.",
                "Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3.",
                "NASH EQUILIBRIUM In this section, we present some theoretical results regarding the performance at Nash equilibrium under the infinite parallelism model.",
                "We assume that the game is strongly competitive to guarantee the existence of equilibria.",
                "For a meaningful discussion of efficiency and fairness, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same utility when they own all the resources.",
                "This precludes the case when a user has an extremely high budget, resulting in very low efficiency or low fairness at equilibrium.",
                "We first provide a characterization of the equilibria.",
                "By definition, the bidding vectors x1, . . . , xm is a Nash equilibrium if and only if each players strategy is the best response to the groups bids.",
                "Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid.",
                "Under the infinite parallelism model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e.",
                "U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties.",
                "We start with two special cases to provide some intuition about the game.",
                "The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games.",
                "Let x and y denote the respective bids of users 1 and 2 on machine 1.",
                "Denote by s = x + y and δ = (2 − s)/s.",
                "Equal-weight game.",
                "In Figure 1, both users have equal valuations for the two machines.",
                "By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α.",
                "Thus, there exists a unique Nash equilibrium of the game where the two users have the same bidding vector.",
                "At the equilibrium, the utility of each user is 1/2, and the social welfare is 1.",
                "On the other hand, the social optimum is clearly 1.",
                "Thus, the equal-weight game is ideal as the efficiency, utility uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games.",
                "Opposite-weight game.",
                "The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines.",
                "Assume that α ≥ 1/2.",
                "Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each Nash equilibrium corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1.",
                "Clearly, δ = 1 is a root of f(δ).",
                "When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine.",
                "At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828.",
                "However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria.",
                "Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid.",
                "In this case, user 1 gets most of machine 1 and almost half of machine 2.",
                "The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4.",
                "This solves to α0 = 2+ √ 2 4 ≈ 0.854.",
                "Those asymmetric equilibria at δ = 1 are bad as they yield lower efficiency than the symmetric equilibrium.",
                "Let δ0 be the minimum root.",
                "When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0.",
                "Then, x, y → 1.",
                "Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75.",
                "From the above simple game, we already observe that the Nash equilibrium may not be unique, which is different from many congestion games in which the Nash equilibrium is unique.",
                "For the general two player game, we can show that 0.75 is actually the worst efficiency bound with a proof in [5].",
                "Further, at the asymmetric equilibrium, the utility uniformity approaches 1/2 when α → 1.",
                "This is the worst possible for two player games because as we show in Section 3.2, a users utility at any Nash equilibrium is at least 1/m in the m-player game.",
                "Another consequence is that the two player game is always envy-free.",
                "Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively.",
                "Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free.",
                "Theorem 2.",
                "For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1.",
                "All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large.",
                "The following example shows the worst case bound.",
                "Consider a system with m = n2 + n players and n machines.",
                "Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine.",
                "The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines.",
                "Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine.",
                "Hence, the total money on each machine is n + 1.",
                "At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total utility of n3 · 1 n2(n+1) < 1.",
                "The other n players each receives 1 n+1 on their favorite machine, resulting in a total utility of n · 1 n+1 < 1.",
                "Therefore, the total utility of the equilibrium is < 2, while the social optimum is n = Θ( √ m).",
                "This bound is the worst possible.",
                "What about the utility uniformity of the multi-player allocation game?",
                "We next show that the utility uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i.",
                "User i can ensure a utility of 1/m by distributing his budget proportionally to the current bids.",
                "That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1.",
                "Therefore, rij = 1 1+m−1 = 1 m .",
                "The total utility of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m .",
                "Since each users utility cannot exceed 1, the minimal possible uniformity is 1/m.",
                "While the utility uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29].",
                "To summarize, we have that Theorem 3.",
                "For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2.",
                "All of these bounds are tight in the worst case. 4.",
                "ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite parallelism model.",
                "However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the Nash equilibrium for the typical distribution of utility functions.",
                "In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response algorithm leads to the equilibrium.",
                "To answer these questions, we resort to simulations.",
                "In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments.",
                "We consider both the infinite parallelism and finite parallelism model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most.",
                "We now present the algorithm for computing the best response.",
                "Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0.",
                "To compute the best response, we first sort wj yj in decreasing order.",
                "Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn .",
                "Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution.",
                "We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too.",
                "Suppose this were not true.",
                "Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) .",
                "Thus it contradicts with the optimality condition (1).",
                "Suppose that k = max{i|x∗ i > 0}.",
                "Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 .",
                "Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi .",
                "The remaining question is how to determine k. It is the largest value such that x∗ k > 0.",
                "Thus, we obtain the following algorithm to compute the best response of a user: 1.",
                "Sort the machines according to wi yi in decreasing order. 2.",
                "Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3.",
                "Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj.",
                "The computational complexity of this algorithm is O(n log n), dominated by the sorting.",
                "In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible.",
                "The best response algorithm must send and receive O(n) messages because each user must obtain the total bids from each host.",
                "In practice, this is more significant than the computational cost.",
                "Note that hosts only reveal to users the sum of the bids on them.",
                "As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite Parallelism Model Recall that in the finite parallelism model, each user i only places bids on at most ki machines.",
                "Of course, the infinite parallelism model is just a special case of finite parallelism model in which ki = n for all the is.",
                "In the finite parallelism model, computing the social optimum is no longer trivial due to bounded parallelism.",
                "It can instead be computed by using the maximum matching algorithm.",
                "Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj).",
                "A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching.",
                "As a result, the following lemma holds.",
                "Lemma 1.",
                "The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching algorithm to compute the social optimum.",
                "The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14].",
                "We choose to implement the Hungarian algorithm [14, 19] because of its simplicity.",
                "There may exist a more efficient algorithm for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question.",
                "However, we do not know an efficient algorithm to compute the best response under the finite parallelism model.",
                "Instead, we provide the following local search heuristic.",
                "Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn.",
                "Let the users budget be X and the parallelism bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users utility.",
                "For a subset of machines A, denote by x(A) the best response on A without parallelism bound and by U(A) the utility obtained by the best response algorithm.",
                "The local search works as follows: 1.",
                "Set A to be the k machines with the highest wi/yi. 2.",
                "Compute U(A) by the infinite parallelism best response algorithm (Sec 4.1) on A. 3.",
                "For each i ∈ A and each j /∈ A, repeat 4.",
                "Let B = A − {i} + {j}, compute U(B). 5.",
                "If(U(B) > U(A)), let A ← B, and goto 2. 6.",
                "Output x(A).",
                "Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response utility.",
                "If yes, we swap the machines and repeat the process.",
                "Otherwise, we have reached a local maxima and output that value.",
                "We suspect that the local maxima that this algorithm finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it.",
                "However, in our simulations, this algorithm quickly converges to a high (≥ .7) efficiency. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear utility functions described earlier.",
                "In practice, utility functions may have more a complicated form, or even worse, a user may not have a formulation of his utility function.",
                "We do assume that the user still has a way to measure his utility, which is the minimum assumption necessary for any market-based resource allocation mechanism.",
                "In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows.",
                "A user finds the two machines that provide him with the highest and lowest marginal utility.",
                "He then moves a fixed small amount of money from the machine with low marginal utility to the machine with the higher one.",
                "This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same.",
                "This condition guarantees the allocation is the optimum when the utility function is concave.",
                "The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5.",
                "SIMULATION RESULTS While the analytic results provide us with worst-case analysis for the infinite parallelism model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite parallelism model.",
                "First, we determine whether the user bidding process converges, and if so, what the rate of convergence is.",
                "Second, in cases of convergence, we look at the performance at equilibrium, using the efficiency and fairness metrics defined above.",
                "Iterative Method.",
                "In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met.",
                "The initial bid is set proportional to the users weights on the machines.",
                "We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3.",
                "Convergence Criteria.",
                "Convergence time measures how quickly the system reaches equilibrium.",
                "It is particularly important in the highly dynamic environment of distributed shared clusters, in which the systems conditions may change before reaching the equilibrium.",
                "Thus, a high convergence rate may be more significant than the efficiency at the equilibrium.",
                "There are several different criteria for convergence.",
                "The strongest criterion is to require that there is only negligible change in the bids of each user.",
                "The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged.",
                "The less strict utility gap criterion requires there to be only negligible change in the users utility.",
                "Given users concern for utility, this is a more natural definition.",
                "Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small utility gain.",
                "Therefore, we use the utility gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the utility gap of each user is smaller than (0.001 in our experiments).",
                "However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in utility as they move money around.",
                "For this method, we use the marginal utility gap criterion.",
                "We compare the highest and lowest utility margins on the machines.",
                "If the difference is negligible, then we consider the system to be converged.",
                "In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion.",
                "Under this criterion, a system has stabilized if the change in social welfare is ≤ .",
                "Individual users utility may not have converged.",
                "This criterion is useful to evaluate how quickly the system as a whole reaches a particular efficiency level.",
                "User preferences.",
                "We experiment with two models of user preferences, random distribution and correlated distribution.",
                "With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution.",
                "In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run.",
                "To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth).",
                "For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk.",
                "By using these profiles, we compress the parameter space and introduce correlations between users and machines.",
                "In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users).",
                "Sections 5.1 and 5.2 present the simulation results when we apply the infinite parallelism and finite parallelism models, respectively.",
                "If the system converges, we report the number of iterations until convergence.",
                "A convergence time of 200 iterations indicates non-convergence, in which case we report the efficiency and fairness values at the point we terminate the simulation. 5.1 Infinite parallelism In this section, we apply the infinite parallelism model, which assumes that users can use an unlimited number of machines.",
                "We present the efficiency and fairness at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively).",
                "We present results for the two user preference models.",
                "With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter).",
                "In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1).",
                "Convergence Time.",
                "Figure 2 shows the convergence time, efficiency and fairness of the infinite parallelism model under uniform (left) and correlated (right) preferences.",
                "Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: Efficiency, utility uniformity, enviness and convergence time as a function of the number of users under the infinite parallelism model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite parallelism model. number of users = 40. n = 100.",
                "The best-response algorithm converges within a few number of iterations for any number of users.",
                "In contrast, the local greedy adjustment algorithm does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users.",
                "We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc.",
                "Regardless, the local greedy adjustment method stabilizes within 100 iterations.",
                "Figure 3 presents the efficiency over time for a system with 40 users.",
                "It demonstrates that while both adjustment methods reach the same social welfare, the best-response algorithm is faster.",
                "In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it.",
                "Efficiency.",
                "Figure 2 (c) and (d) present the efficiency as a function of the number of users.",
                "We present the efficiency at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison.",
                "Social optimum provides an efficient allocation by definition.",
                "For both user preference models, the efficiency at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum.",
                "The efficiency at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences.",
                "Fairness.",
                "Figure 2(e) and (f) present the utility uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness.",
                "While the social optimum yields perfect efficiency, it has poor fairness.",
                "The weightproportional method achieves the highest fairness among the three allocation methods, but the fairness at the equilibrium is close.",
                "The utility uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other.",
                "Although utility uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point.",
                "At the social optimum, utility uniformity can be infinitely poor, as some users may be allocated no resources at all.",
                "The same is true with respect to envy-freeness.",
                "The difference between uniform and correlated preferences is best demonstrated in the social optimum results.",
                "When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both utility uniformity and envy-freeness go to zero.",
                "As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation.",
                "These results demonstrate the tradeoff between the different allocation methods.",
                "The efficiency at the equilibrium is lower than the social optimum, but it performs much better with respect to fairness.",
                "The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite parallelism 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite parallelism model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 Efficiency Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: Efficiency level over time under the finite parallelism model with local search algorithm. n = 100.",
                "We also consider the finite parallelism model and use the local search algorithm, as described in Section 4.2, to adjust users bids.",
                "We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the simulation results for only the uniform distribution.",
                "In our experiments, the local search algorithm stops quickly - it usually discovers a local maximum within two iterations.",
                "As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high efficiency. 134 Convergence time.",
                "Let ∆ denote the parallelism bound that limits the maximum number of machines each user can bid on.",
                "We experiment with ∆ = 5 and ∆ = 20.",
                "In both cases, we use 100 machines and vary the number of users.",
                "Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly.",
                "The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20.",
                "We believe that the non-convergence is caused by moderate competition.",
                "No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids.",
                "High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence.",
                "However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids.",
                "In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2].",
                "Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall efficiency after a few iterations (as shown in Figure 5).",
                "Performance.",
                "In Figure 6, we present the efficiency, utility uniformity, and envy-freeness at the Nash equilibrium for the finite parallelism model.",
                "When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations.",
                "When ∆ = 5, there is a performance drop, in particular with respect to the fairness metrics, in the range between 20 and 40 users (where it does not converge).",
                "For a larger number of users, the system converges and achieves a lower level of utility uniformity, but a high degree of efficiency and envy-freeness, similar to those under the infinite parallelism model.",
                "As described above, this is due the competition ratio falling into the head-to-head range.",
                "When the parallelism bound is large (∆ = 20), the performance is closer to the infinite parallelism model, and we do not observe this drop in performance. 6.",
                "RELATED WORK There are two main groups of related work in resource allocation: those that incorporate an economic mechanism, and those that do not.",
                "One non-economic approach is scheduling (surveyed by Pinedo [20]).",
                "Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19].",
                "These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users.",
                "We view scheduling and resource allocation as two separate functions.",
                "Resource allocation divides a resource among different users while scheduling takes a given allocation and orders a users jobs.",
                "Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]).",
                "Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated.",
                "Unfortunately, reservations have a high latency to acquire resources, unlike the <br>price-anticipating scheme</br> we consider.",
                "The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive.",
                "Bellagio[3] uses the SHARE centralized allocator.",
                "SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities.",
                "Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation.",
                "The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some efficiency, but it also avoids the complexity and overhead of combinatorial auctions.",
                "There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows.",
                "Their methodology follows the study of congestion (potential) games [17, 22] by relating the Nash equilibrium to the solution of a (usually convex) global optimization problem.",
                "But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines.",
                "For example, unlike those games, there may exist multiple Nash equilibria in our game.",
                "Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7.",
                "CONCLUSIONS This work studies the performance of a market-based mechanism for distributed shared clusters using both analyatical and simulation methods.",
                "We show that despite the worst case bounds, the system can reach a high performance level at the Nash equilibrium in terms of both efficiency and fairness metrics.",
                "In addition, with a few exceptions under the finite parallelism model, the system reaches equilibrium quickly by using the best response algorithm and, when the number of users is not too small, by the greedy local adjustment method.",
                "While our work indicates that the <br>price-anticipating scheme</br> may work well for resource allocation for shared clusters, there are many interesting directions for future work.",
                "One direction is to consider more realistic utility functions.",
                "For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine.",
                "In practice, both assumptions may not be correct.",
                "For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine.",
                "When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling.",
                "Another assumption is that users have infinite work, so the more resources they can acquire, the better.",
                "In practice, users have finite work.",
                "One approach to address this is to model the users utility according to the time to finish a task rather than the amount of resources he receives.",
                "Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model.",
                "In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user Efficiency Utility uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user Efficiency Utility uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite parallelism model. n = 100. 8.",
                "ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions.",
                "We also thank the anonymous reviewers for their useful comments. 9.",
                "REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat.",
                "Resource Allocation in Federated Distributed Computing Infrastructures.",
                "In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat.",
                "Computational Resource Exchanges for Distributed Resource Allocation. 2004. [4] B. N. Chun and D. E. Culler.",
                "Market-based Proportional Resource Sharing for Clusters.",
                "Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang.",
                "A Price-anticipating Resource Allocation Mechanism for Distributed Shared Clusters.",
                "Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou.",
                "Microeconomic Algorithms for Load Balancing in Distributed Computer Systems.",
                "In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan.",
                "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.",
                "Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow.",
                "Data Structures for Weighted Matching and Nearest Common Ancestors with Linking.",
                "In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang.",
                "Strategic Buyers in a Sum Bid Game for Flat Networks.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis.",
                "Efficiency Loss in a Network Resource Allocation Game.",
                "Mathematics of Operations Research, 2004. [12] F. P. Kelly.",
                "Charging and Rate Control for Elastic Traffic.",
                "European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo.",
                "Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability.",
                "Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn.",
                "The Hungarian Method for the Assignment Problem.",
                "Naval Res.",
                "Logis.",
                "Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B.",
                "A. Huberman.",
                "Tycoon: an Implemention of a Distributed Market-Based Resource Allocation System.",
                "Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich.",
                "Congestion Games with Player-Specific Payoff Functions.",
                "Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley.",
                "Potential Games.",
                "Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou.",
                "Algorithms, Games, and the Internet.",
                "In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz.",
                "Combinatorial Optimization.",
                "Dover Publications, Inc., 1982. [20] M. Pinedo.",
                "Scheduling.",
                "Prentice Hall, 2002. [21] O. Regev and N. Nisan.",
                "The Popcorn Market: Online Markets for Computational Resources.",
                "In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal.",
                "A Class of Games Possessing Pure-Strategy Nash Equilibria.",
                "Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek.",
                "Optimal Allocation of a Divisible Good to Strategic Buyers.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen.",
                "A Microeconomic Scheduler for Parallel Computers.",
                "In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian.",
                "Equity, Envy, and Efficiency.",
                "Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B.",
                "A. Huberman, J. O. Kephart, and S. Stornetta.",
                "Spawn: A Distributed Computational Economy.",
                "IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason.",
                "Auction Protocols for Decentralized Scheduling.",
                "Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter.",
                "Classifying Scheduling Policies with respect to Unfairness in an M/GI/1.",
                "In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang.",
                "On the Efficiency and Fairness of a Fixed Budget Resource Allocation Game.",
                "Manuscript, 2004. 136"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En este trabajo, examinamos un \"esquema de anticipación de precios\" en el contexto de la asignación de la capacidad computacional para usuarios con preferencias privadas y presupuestos limitados, lo que resulta en un juego cualitativamente diferente (como se discute en la Sección 6).",
                "Desafortunadamente, las reservas tienen una alta latencia para adquirir recursos, a diferencia del \"esquema de anticipación de precio\" que consideramos.",
                "Si bien nuestro trabajo indica que el \"esquema de anticipación de precios\" puede funcionar bien para la asignación de recursos para grupos compartidos, hay muchas direcciones interesantes para el trabajo futuro."
            ],
            "translated_text": "",
            "candidates": [
                "esquema de anexo",
                "esquema de anticipación de precios",
                "esquema de anexo",
                "esquema de anticipación de precio",
                "esquema de anexo",
                "esquema de anticipación de precios"
            ],
            "error": []
        },
        "nash equilibrium": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Price-Anticipating Resource Allocation Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget resource allocation game to understand the performance of a distributed marketbased resource allocation system.",
                "Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual utility.",
                "We look at both the efficiency and the fairness of the allocation at the equilibrium, where fairness is evaluated through the measures of utility uniformity and envy-freeness.",
                "We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high efficiency but poor fairness, the proposed allocation scheme achieves a nice balance of high degrees of efficiency and fairness at the equilibrium.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1.",
                "INTRODUCTION The primary advantage of distributed shared clusters like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources.",
                "This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users.",
                "Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users.",
                "Finally, sharing allows greater reliability because of redundancy in hosts and network connections.",
                "However, resource allocation in these systems remains the major challenge.",
                "The problem is how to allocate a shared resource both fairly and efficiently (where efficiency is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests.",
                "Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator.",
                "However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set.",
                "Instead, we examine a market-based resource allocation system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a bidding mechanism.",
                "In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource.",
                "This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26].",
                "Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets.",
                "In this work, we examine a price-anticipating scheme in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6).",
                "In this paper, we formulate the fixed budget resource allocation game and study the existence and performance of the Nash equilibria of this game.",
                "For evaluating the Nash equilibria, we consider both their efficiency, measuring how close the social welfare at equilibrium is to the social optimum, and fairness, measuring how different the users utilities are.",
                "Although rarely considered in previous game theoretical study, we believe fairness is a critical metric for a resource allocation schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair resource allocation in favor of one with less efficient, more fair resource allocation.",
                "We use both utility uniformity and envy-freeness to measure fairness.",
                "Utility uniformity, which is common in Computer Science work, measures the closeness of utilities of different users.",
                "Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others.",
                "Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria.",
                "Using analysis, we show that there is always a <br>nash equilibrium</br> in the fixed budget game if the utility functions satisfy a fairly weak and natural condition of strong competitiveness.",
                "We also show the worst case performance bounds: for m players the efficiency at equilibrium is Ω(1/ √ m), the utility uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83.",
                "Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their utility.",
                "As part of the fixed budget game analysis, we show that strategic users with linear utility functions can calculate their bids using a best response algorithm that quickly results in an allocation with high efficiency with little computational and communication overhead.",
                "We present variations of the best response algorithm for both finite and infinite parallelism tasks.",
                "In addition, we present a local greedy adjustment algorithm that converges more slowly than best response, but allows for non-linear or unformulatable utility functions. • We show that the price-anticipating resource allocation mechanism achieves a high degree of efficiency and fairness.",
                "Using simulation, we find that although the socially optimal allocation results in perfect efficiency, it also results in very poor fairness.",
                "Likewise, allocating according to only users preference weights results in a high fairness, but a mediocre efficiency.",
                "Intuition would suggest that efficiency and fairness are exclusive.",
                "Surprisingly, the <br>nash equilibrium</br>, reached by each user iteratively applying the best response algorithm to adapt his bids, achieves nearly the efficiency of the social optimum and nearly the fairness of the weight-proportional allocation: the efficiency is ≥ 0.90, the utility uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system.",
                "In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy.",
                "The local adjustment algorithm performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize.",
                "As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of efficiency and fairness.",
                "The rest of the paper is organized as follows.",
                "We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite parallelism model in Section 3.",
                "In Section 4, we describe algorithms for users to optimize their own utility in the fixed budget game.",
                "In Section 5, we describe our simulator and simulation results.",
                "We describe related work in Section 6.",
                "We conclude by discussing some limit of our model and future work in Section 7. 2.",
                "THE MODEL Price-Anticipating Resource Allocation.",
                "We study the problem of allocating a set of divisible resources (or machines).",
                "Suppose that there are m users and n machines.",
                "Each machine can be continuously divided for allocation to multiple users.",
                "An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1.",
                "Let Ω denote the set of all the allocation schemes.",
                "We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed.",
                "Formally, suppose that user i submits a non-negative bid xij to machine j.",
                "The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j.",
                "When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone.",
                "We call xi = (xi1, . . . , xin) the bidding vector of user i.",
                "The additional consideration we have is that each user i has a budget constraint Xi.",
                "Therefore, user is total bids have to sum up to his budget, i.e.",
                "Pn j=1 xij = Xi.",
                "The budget constraints come from the fact that the users do not have infinite budget.",
                "Utility Functions.",
                "Each user is utility is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine.",
                "Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines.",
                "Therefore, the basic utility function we consider is the linear utility function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j.",
                "For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications.",
                "As a result, w11 > w12 and w21 < w22.",
                "Our definition of utility functions corresponds to the user having enough jobs or enough parallelism within jobs to utilize all the machines.",
                "Consequently, the users goal is to grab as much of a resource as possible.",
                "We call this the infinite parallelism model.",
                "In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity).",
                "To model this, we also consider the more realistic finite parallelism model, where the users parallelism is bounded by ki, and the users utility Ui is the sum of the ki largest wijrij.",
                "In this model, the user only submits bids to up to ki machines.",
                "Our abstraction is to capture the essense of the problem and facilitate our analysis.",
                "In Section 7, we discuss the limit of the above definition of utility functions.",
                "Best Response.",
                "As typically, we assume the users are selfish and strategic - they all act to maximize their own utility, defined by their utility functions.",
                "From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0.",
                "The difficulty of the above optimization problem depends on the formulation of Ui.",
                "We will show later how to solve it for the infinite parallelism model and provide a heuristic for finite parallelism model.",
                "<br>nash equilibrium</br>.",
                "By the assumption that the user is selfish, each users bidding vector is the best response to the system.",
                "The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users.",
                "Such a state is known as the <br>nash equilibrium</br>, a central concept in Game Theory.",
                "Formally, the bidding vectors x1, . . . , xm is a <br>nash equilibrium</br> if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) .",
                "The <br>nash equilibrium</br> is desirable because it is a stable state at which no one has incentive to change his strategy.",
                "But a game may not have an equilibrium.",
                "Indeed, a <br>nash equilibrium</br> may not exist in the price anticipating scheme we define above.",
                "This can be shown by a simple example of two players and two machines.",
                "For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2.",
                "Then player 1 should never bid on machine 2 because it has no value to him.",
                "Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the <br>nash equilibrium</br>.",
                "We should note that even the mixed strategy equilibrium does not exist in this example.",
                "Clearly, this happens whenever there is a resource that is wanted by only one player.",
                "To rule out this case, we consider those strongly competitive games.1 Under the infinite parallelism model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0.",
                "Under such a condition, we have that (see [5] for a proof), Theorem 1.",
                "There always exists a pure strategy <br>nash equilibrium</br> in a strongly competitive game.",
                "Given the existence of the <br>nash equilibrium</br>, the next important question is the performance at the <br>nash equilibrium</br>, which is often measured by its efficiency and fairness.",
                "Efficiency (Price of Anarchy).",
                "For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω.",
                "Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities.",
                "The efficiency at an allocation scheme ω is defined as π(ω) = U(ω) U∗ .",
                "Let Ω0 denote the set of the allocation at the <br>nash equilibrium</br>.",
                "When there exists <br>nash equilibrium</br>, i.e.",
                "Ω0 = ∅, define the efficiency of a game Q to be π(Q) = minω∈Ω0 π(ω).",
                "It is usually the case that π < 1, i.e. there is an efficiency loss at a <br>nash equilibrium</br>.",
                "This is the price of anarchy [18] paid for not having central enforcement of the users good behavior.",
                "This price is interesting because central control results in the best possible outcome, but is not possible in most cases.",
                "Fairness.",
                "While the definition of efficiency is standard, there are multiple ways to define fairness.",
                "We consider two metrics.",
                "One is by comparing the users utilities.",
                "The utility uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum utility and the maximum utility among the users.",
                "Such definition (or utility discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature.",
                "Under this definition, the utility uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω).",
                "The other metric extensively studied in Economics is the concept of envy-freeness [25].",
                "Unlike the utility uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive.",
                "Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine.",
                "These alternatives, however, introduce the problem of coming up with the right price or limit.",
                "When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme.",
                "Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3.",
                "<br>nash equilibrium</br> In this section, we present some theoretical results regarding the performance at <br>nash equilibrium</br> under the infinite parallelism model.",
                "We assume that the game is strongly competitive to guarantee the existence of equilibria.",
                "For a meaningful discussion of efficiency and fairness, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same utility when they own all the resources.",
                "This precludes the case when a user has an extremely high budget, resulting in very low efficiency or low fairness at equilibrium.",
                "We first provide a characterization of the equilibria.",
                "By definition, the bidding vectors x1, . . . , xm is a <br>nash equilibrium</br> if and only if each players strategy is the best response to the groups bids.",
                "Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid.",
                "Under the infinite parallelism model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e.",
                "U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties.",
                "We start with two special cases to provide some intuition about the game.",
                "The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games.",
                "Let x and y denote the respective bids of users 1 and 2 on machine 1.",
                "Denote by s = x + y and δ = (2 − s)/s.",
                "Equal-weight game.",
                "In Figure 1, both users have equal valuations for the two machines.",
                "By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α.",
                "Thus, there exists a unique <br>nash equilibrium</br> of the game where the two users have the same bidding vector.",
                "At the equilibrium, the utility of each user is 1/2, and the social welfare is 1.",
                "On the other hand, the social optimum is clearly 1.",
                "Thus, the equal-weight game is ideal as the efficiency, utility uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games.",
                "Opposite-weight game.",
                "The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines.",
                "Assume that α ≥ 1/2.",
                "Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each <br>nash equilibrium</br> corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1.",
                "Clearly, δ = 1 is a root of f(δ).",
                "When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine.",
                "At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828.",
                "However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria.",
                "Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid.",
                "In this case, user 1 gets most of machine 1 and almost half of machine 2.",
                "The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4.",
                "This solves to α0 = 2+ √ 2 4 ≈ 0.854.",
                "Those asymmetric equilibria at δ = 1 are bad as they yield lower efficiency than the symmetric equilibrium.",
                "Let δ0 be the minimum root.",
                "When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0.",
                "Then, x, y → 1.",
                "Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75.",
                "From the above simple game, we already observe that the <br>nash equilibrium</br> may not be unique, which is different from many congestion games in which the <br>nash equilibrium</br> is unique.",
                "For the general two player game, we can show that 0.75 is actually the worst efficiency bound with a proof in [5].",
                "Further, at the asymmetric equilibrium, the utility uniformity approaches 1/2 when α → 1.",
                "This is the worst possible for two player games because as we show in Section 3.2, a users utility at any <br>nash equilibrium</br> is at least 1/m in the m-player game.",
                "Another consequence is that the two player game is always envy-free.",
                "Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively.",
                "Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free.",
                "Theorem 2.",
                "For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1.",
                "All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large.",
                "The following example shows the worst case bound.",
                "Consider a system with m = n2 + n players and n machines.",
                "Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine.",
                "The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines.",
                "Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine.",
                "Hence, the total money on each machine is n + 1.",
                "At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total utility of n3 · 1 n2(n+1) < 1.",
                "The other n players each receives 1 n+1 on their favorite machine, resulting in a total utility of n · 1 n+1 < 1.",
                "Therefore, the total utility of the equilibrium is < 2, while the social optimum is n = Θ( √ m).",
                "This bound is the worst possible.",
                "What about the utility uniformity of the multi-player allocation game?",
                "We next show that the utility uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i.",
                "User i can ensure a utility of 1/m by distributing his budget proportionally to the current bids.",
                "That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1.",
                "Therefore, rij = 1 1+m−1 = 1 m .",
                "The total utility of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m .",
                "Since each users utility cannot exceed 1, the minimal possible uniformity is 1/m.",
                "While the utility uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29].",
                "To summarize, we have that Theorem 3.",
                "For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2.",
                "All of these bounds are tight in the worst case. 4.",
                "ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite parallelism model.",
                "However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the <br>nash equilibrium</br> for the typical distribution of utility functions.",
                "In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response algorithm leads to the equilibrium.",
                "To answer these questions, we resort to simulations.",
                "In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments.",
                "We consider both the infinite parallelism and finite parallelism model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most.",
                "We now present the algorithm for computing the best response.",
                "Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0.",
                "To compute the best response, we first sort wj yj in decreasing order.",
                "Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn .",
                "Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution.",
                "We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too.",
                "Suppose this were not true.",
                "Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) .",
                "Thus it contradicts with the optimality condition (1).",
                "Suppose that k = max{i|x∗ i > 0}.",
                "Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 .",
                "Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi .",
                "The remaining question is how to determine k. It is the largest value such that x∗ k > 0.",
                "Thus, we obtain the following algorithm to compute the best response of a user: 1.",
                "Sort the machines according to wi yi in decreasing order. 2.",
                "Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3.",
                "Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj.",
                "The computational complexity of this algorithm is O(n log n), dominated by the sorting.",
                "In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible.",
                "The best response algorithm must send and receive O(n) messages because each user must obtain the total bids from each host.",
                "In practice, this is more significant than the computational cost.",
                "Note that hosts only reveal to users the sum of the bids on them.",
                "As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite Parallelism Model Recall that in the finite parallelism model, each user i only places bids on at most ki machines.",
                "Of course, the infinite parallelism model is just a special case of finite parallelism model in which ki = n for all the is.",
                "In the finite parallelism model, computing the social optimum is no longer trivial due to bounded parallelism.",
                "It can instead be computed by using the maximum matching algorithm.",
                "Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj).",
                "A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching.",
                "As a result, the following lemma holds.",
                "Lemma 1.",
                "The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching algorithm to compute the social optimum.",
                "The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14].",
                "We choose to implement the Hungarian algorithm [14, 19] because of its simplicity.",
                "There may exist a more efficient algorithm for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question.",
                "However, we do not know an efficient algorithm to compute the best response under the finite parallelism model.",
                "Instead, we provide the following local search heuristic.",
                "Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn.",
                "Let the users budget be X and the parallelism bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users utility.",
                "For a subset of machines A, denote by x(A) the best response on A without parallelism bound and by U(A) the utility obtained by the best response algorithm.",
                "The local search works as follows: 1.",
                "Set A to be the k machines with the highest wi/yi. 2.",
                "Compute U(A) by the infinite parallelism best response algorithm (Sec 4.1) on A. 3.",
                "For each i ∈ A and each j /∈ A, repeat 4.",
                "Let B = A − {i} + {j}, compute U(B). 5.",
                "If(U(B) > U(A)), let A ← B, and goto 2. 6.",
                "Output x(A).",
                "Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response utility.",
                "If yes, we swap the machines and repeat the process.",
                "Otherwise, we have reached a local maxima and output that value.",
                "We suspect that the local maxima that this algorithm finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it.",
                "However, in our simulations, this algorithm quickly converges to a high (≥ .7) efficiency. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear utility functions described earlier.",
                "In practice, utility functions may have more a complicated form, or even worse, a user may not have a formulation of his utility function.",
                "We do assume that the user still has a way to measure his utility, which is the minimum assumption necessary for any market-based resource allocation mechanism.",
                "In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows.",
                "A user finds the two machines that provide him with the highest and lowest marginal utility.",
                "He then moves a fixed small amount of money from the machine with low marginal utility to the machine with the higher one.",
                "This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same.",
                "This condition guarantees the allocation is the optimum when the utility function is concave.",
                "The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5.",
                "SIMULATION RESULTS While the analytic results provide us with worst-case analysis for the infinite parallelism model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite parallelism model.",
                "First, we determine whether the user bidding process converges, and if so, what the rate of convergence is.",
                "Second, in cases of convergence, we look at the performance at equilibrium, using the efficiency and fairness metrics defined above.",
                "Iterative Method.",
                "In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met.",
                "The initial bid is set proportional to the users weights on the machines.",
                "We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3.",
                "Convergence Criteria.",
                "Convergence time measures how quickly the system reaches equilibrium.",
                "It is particularly important in the highly dynamic environment of distributed shared clusters, in which the systems conditions may change before reaching the equilibrium.",
                "Thus, a high convergence rate may be more significant than the efficiency at the equilibrium.",
                "There are several different criteria for convergence.",
                "The strongest criterion is to require that there is only negligible change in the bids of each user.",
                "The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged.",
                "The less strict utility gap criterion requires there to be only negligible change in the users utility.",
                "Given users concern for utility, this is a more natural definition.",
                "Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small utility gain.",
                "Therefore, we use the utility gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the utility gap of each user is smaller than (0.001 in our experiments).",
                "However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in utility as they move money around.",
                "For this method, we use the marginal utility gap criterion.",
                "We compare the highest and lowest utility margins on the machines.",
                "If the difference is negligible, then we consider the system to be converged.",
                "In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion.",
                "Under this criterion, a system has stabilized if the change in social welfare is ≤ .",
                "Individual users utility may not have converged.",
                "This criterion is useful to evaluate how quickly the system as a whole reaches a particular efficiency level.",
                "User preferences.",
                "We experiment with two models of user preferences, random distribution and correlated distribution.",
                "With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution.",
                "In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run.",
                "To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth).",
                "For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk.",
                "By using these profiles, we compress the parameter space and introduce correlations between users and machines.",
                "In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users).",
                "Sections 5.1 and 5.2 present the simulation results when we apply the infinite parallelism and finite parallelism models, respectively.",
                "If the system converges, we report the number of iterations until convergence.",
                "A convergence time of 200 iterations indicates non-convergence, in which case we report the efficiency and fairness values at the point we terminate the simulation. 5.1 Infinite parallelism In this section, we apply the infinite parallelism model, which assumes that users can use an unlimited number of machines.",
                "We present the efficiency and fairness at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively).",
                "We present results for the two user preference models.",
                "With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter).",
                "In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1).",
                "Convergence Time.",
                "Figure 2 shows the convergence time, efficiency and fairness of the infinite parallelism model under uniform (left) and correlated (right) preferences.",
                "Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) <br>nash equilibrium</br> Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) <br>nash equilibrium</br> Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: Efficiency, utility uniformity, enviness and convergence time as a function of the number of users under the infinite parallelism model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite parallelism model. number of users = 40. n = 100.",
                "The best-response algorithm converges within a few number of iterations for any number of users.",
                "In contrast, the local greedy adjustment algorithm does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users.",
                "We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc.",
                "Regardless, the local greedy adjustment method stabilizes within 100 iterations.",
                "Figure 3 presents the efficiency over time for a system with 40 users.",
                "It demonstrates that while both adjustment methods reach the same social welfare, the best-response algorithm is faster.",
                "In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it.",
                "Efficiency.",
                "Figure 2 (c) and (d) present the efficiency as a function of the number of users.",
                "We present the efficiency at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison.",
                "Social optimum provides an efficient allocation by definition.",
                "For both user preference models, the efficiency at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum.",
                "The efficiency at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences.",
                "Fairness.",
                "Figure 2(e) and (f) present the utility uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness.",
                "While the social optimum yields perfect efficiency, it has poor fairness.",
                "The weightproportional method achieves the highest fairness among the three allocation methods, but the fairness at the equilibrium is close.",
                "The utility uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other.",
                "Although utility uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point.",
                "At the social optimum, utility uniformity can be infinitely poor, as some users may be allocated no resources at all.",
                "The same is true with respect to envy-freeness.",
                "The difference between uniform and correlated preferences is best demonstrated in the social optimum results.",
                "When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both utility uniformity and envy-freeness go to zero.",
                "As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation.",
                "These results demonstrate the tradeoff between the different allocation methods.",
                "The efficiency at the equilibrium is lower than the social optimum, but it performs much better with respect to fairness.",
                "The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite parallelism 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite parallelism model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 Efficiency Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: Efficiency level over time under the finite parallelism model with local search algorithm. n = 100.",
                "We also consider the finite parallelism model and use the local search algorithm, as described in Section 4.2, to adjust users bids.",
                "We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the simulation results for only the uniform distribution.",
                "In our experiments, the local search algorithm stops quickly - it usually discovers a local maximum within two iterations.",
                "As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high efficiency. 134 Convergence time.",
                "Let ∆ denote the parallelism bound that limits the maximum number of machines each user can bid on.",
                "We experiment with ∆ = 5 and ∆ = 20.",
                "In both cases, we use 100 machines and vary the number of users.",
                "Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly.",
                "The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20.",
                "We believe that the non-convergence is caused by moderate competition.",
                "No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids.",
                "High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence.",
                "However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids.",
                "In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2].",
                "Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall efficiency after a few iterations (as shown in Figure 5).",
                "Performance.",
                "In Figure 6, we present the efficiency, utility uniformity, and envy-freeness at the <br>nash equilibrium</br> for the finite parallelism model.",
                "When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations.",
                "When ∆ = 5, there is a performance drop, in particular with respect to the fairness metrics, in the range between 20 and 40 users (where it does not converge).",
                "For a larger number of users, the system converges and achieves a lower level of utility uniformity, but a high degree of efficiency and envy-freeness, similar to those under the infinite parallelism model.",
                "As described above, this is due the competition ratio falling into the head-to-head range.",
                "When the parallelism bound is large (∆ = 20), the performance is closer to the infinite parallelism model, and we do not observe this drop in performance. 6.",
                "RELATED WORK There are two main groups of related work in resource allocation: those that incorporate an economic mechanism, and those that do not.",
                "One non-economic approach is scheduling (surveyed by Pinedo [20]).",
                "Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19].",
                "These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users.",
                "We view scheduling and resource allocation as two separate functions.",
                "Resource allocation divides a resource among different users while scheduling takes a given allocation and orders a users jobs.",
                "Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]).",
                "Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated.",
                "Unfortunately, reservations have a high latency to acquire resources, unlike the price-anticipating scheme we consider.",
                "The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive.",
                "Bellagio[3] uses the SHARE centralized allocator.",
                "SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities.",
                "Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation.",
                "The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some efficiency, but it also avoids the complexity and overhead of combinatorial auctions.",
                "There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows.",
                "Their methodology follows the study of congestion (potential) games [17, 22] by relating the <br>nash equilibrium</br> to the solution of a (usually convex) global optimization problem.",
                "But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines.",
                "For example, unlike those games, there may exist multiple Nash equilibria in our game.",
                "Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7.",
                "CONCLUSIONS This work studies the performance of a market-based mechanism for distributed shared clusters using both analyatical and simulation methods.",
                "We show that despite the worst case bounds, the system can reach a high performance level at the <br>nash equilibrium</br> in terms of both efficiency and fairness metrics.",
                "In addition, with a few exceptions under the finite parallelism model, the system reaches equilibrium quickly by using the best response algorithm and, when the number of users is not too small, by the greedy local adjustment method.",
                "While our work indicates that the price-anticipating scheme may work well for resource allocation for shared clusters, there are many interesting directions for future work.",
                "One direction is to consider more realistic utility functions.",
                "For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine.",
                "In practice, both assumptions may not be correct.",
                "For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine.",
                "When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling.",
                "Another assumption is that users have infinite work, so the more resources they can acquire, the better.",
                "In practice, users have finite work.",
                "One approach to address this is to model the users utility according to the time to finish a task rather than the amount of resources he receives.",
                "Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model.",
                "In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user Efficiency Utility uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user Efficiency Utility uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite parallelism model. n = 100. 8.",
                "ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions.",
                "We also thank the anonymous reviewers for their useful comments. 9.",
                "REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat.",
                "Resource Allocation in Federated Distributed Computing Infrastructures.",
                "In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat.",
                "Computational Resource Exchanges for Distributed Resource Allocation. 2004. [4] B. N. Chun and D. E. Culler.",
                "Market-based Proportional Resource Sharing for Clusters.",
                "Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang.",
                "A Price-anticipating Resource Allocation Mechanism for Distributed Shared Clusters.",
                "Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou.",
                "Microeconomic Algorithms for Load Balancing in Distributed Computer Systems.",
                "In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan.",
                "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.",
                "Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow.",
                "Data Structures for Weighted Matching and Nearest Common Ancestors with Linking.",
                "In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang.",
                "Strategic Buyers in a Sum Bid Game for Flat Networks.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis.",
                "Efficiency Loss in a Network Resource Allocation Game.",
                "Mathematics of Operations Research, 2004. [12] F. P. Kelly.",
                "Charging and Rate Control for Elastic Traffic.",
                "European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo.",
                "Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability.",
                "Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn.",
                "The Hungarian Method for the Assignment Problem.",
                "Naval Res.",
                "Logis.",
                "Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B.",
                "A. Huberman.",
                "Tycoon: an Implemention of a Distributed Market-Based Resource Allocation System.",
                "Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich.",
                "Congestion Games with Player-Specific Payoff Functions.",
                "Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley.",
                "Potential Games.",
                "Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou.",
                "Algorithms, Games, and the Internet.",
                "In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz.",
                "Combinatorial Optimization.",
                "Dover Publications, Inc., 1982. [20] M. Pinedo.",
                "Scheduling.",
                "Prentice Hall, 2002. [21] O. Regev and N. Nisan.",
                "The Popcorn Market: Online Markets for Computational Resources.",
                "In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal.",
                "A Class of Games Possessing Pure-Strategy Nash Equilibria.",
                "Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek.",
                "Optimal Allocation of a Divisible Good to Strategic Buyers.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen.",
                "A Microeconomic Scheduler for Parallel Computers.",
                "In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian.",
                "Equity, Envy, and Efficiency.",
                "Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B.",
                "A. Huberman, J. O. Kephart, and S. Stornetta.",
                "Spawn: A Distributed Computational Economy.",
                "IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason.",
                "Auction Protocols for Decentralized Scheduling.",
                "Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter.",
                "Classifying Scheduling Policies with respect to Unfairness in an M/GI/1.",
                "In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang.",
                "On the Efficiency and Fairness of a Fixed Budget Resource Allocation Game.",
                "Manuscript, 2004. 136"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Usando el análisis, mostramos que siempre hay un \"equilibrio de Nash\" en el juego de presupuesto fijo si las funciones de utilidad satisfacen una condición bastante débil y natural de fuerte competitividad.equilibrio de Nash",
                "Sorprendentemente, el \"equilibrio de Nash\", alcanzado por cada usuario, aplicando iterativamente el mejor algoritmo de respuesta para adaptar sus ofertas, logra casi la eficiencia de la óptima social y casi la equidad de la asignación proporcional de peso: la eficiencia es ≥ 0.90, la utilidad, la utilidadLa uniformidad es ≥ 0.65, y la envidia es ≥ 0.97, independiente del número de usuarios en el sistema.equilibrio de Nash",
                "\"equilibrio de Nash\". equilibrio de Nash",
                "Tal estado se conoce como el \"equilibrio Nash\", un concepto central en la teoría del juego.equilibrio de Nash",
                "Formalmente, los vectores de licitación x1 ,..., XM es un \"equilibrio de Nash\" si por 128 cualquier 1 ≤ i ≤ m, xi es la mejor respuesta al sistema o, para cualquier otro vector de licitación xi, ui (x1, .., xi, .., ...,.xm) ≥ ui (x1, ..., xi, ..., xm).equilibrio de Nash",
                "El \"equilibrio de Nash\" es deseable porque es un estado estable en el que nadie tiene incentivos para cambiar su estrategia.equilibrio de Nash",
                "De hecho, puede no existir un \"equilibrio de Nash\" en el esquema de anticipación de precios que definimos anteriormente.equilibrio de Nash",
                "Ahora, el Jugador 2 tiene que presentar una oferta positiva en la máquina 2 para reclamar la máquina, pero no hay límite inferior, lo que resulta en la inexistencia del \"equilibrio NASH\".equilibrio de Nash",
                "Siempre existe una estrategia pura \"Equilibrio Nash\" en un juego muy competitivo.equilibrio de Nash",
                "Dada la existencia del \"equilibrio de Nash\", la siguiente pregunta importante es el rendimiento en el \"equilibrio Nash\", que a menudo se mide por su eficiencia y equidad.equilibrio de Nash",
                "Deje que ω0 denote el conjunto de la asignación en el \"equilibrio Nash\".equilibrio de Nash",
                "Cuando existe \"equilibrio de Nash\", es decir, equilibrio de Nash",
                "Por lo general, es el caso que π <1, es decir, hay una pérdida de eficiencia en un \"equilibrio NASH\".equilibrio de Nash",
                "\"Equilibrio de Nash\" En esta sección, presentamos algunos resultados teóricos con respecto al rendimiento en \"Equilibrio Nash\" bajo el modelo de paralelismo infinito.equilibrio de Nash",
                "Por definición, los vectores de licitación x1 ,..., XM es un \"equilibrio de Nash\" si y solo si cada estrategia de jugadores es la mejor respuesta a las ofertas de los grupos.equilibrio de Nash",
                "Por lo tanto, existe un \"equilibrio NASH\" único del juego donde los dos usuarios tienen el mismo vector de licitación.equilibrio de Nash",
                "Del mismo modo, para que los vectores BID estén en el equilibrio, necesitan satisfacer α y (x + y) 2 = (1 - α) 1 - y (2 - x - y) 2 (1 - α) x (x +y) 2 = α 1 - x (2 - x - y) 2 Al simplificar las ecuaciones anteriores, tenemos que cada \"equilibrio de Nash\" corresponde a una raíz no negativa de la ecuación cúbica F (δ) = Δ3 - cΔ2 + cΔ −1 = 0, donde C = 1 2α (1 - α) - 1. Equilibrio de Nash",
                "Desde el juego simple anterior, ya observamos que el \"equilibrio Nash\" puede no ser único, lo que es diferente de muchos juegos de congestión en los que el \"equilibrio Nash\" es único.equilibrio de Nash",
                "Este es lo peor posible para los juegos de dos jugadores porque, como mostramos en la Sección 3.2, una utilidad de los usuarios en cualquier \"equilibrio de Nash\" es de al menos 1/m en el juego M-jugador.equilibrio de Nash",
                "Sin embargo, las preguntas más interesantes en la práctica son cómo se puede alcanzar el equilibrio y cuál es el rendimiento en el \"equilibrio Nash\" para la distribución típica de las funciones de utilidad.equilibrio de Nash",
                "Las parcelas (a) y (b) muestran el tiempo de convergencia y estabilización de los métodos de ajuste locales y de ajuste locales.132 0 50 100 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime (#Iterations) Número de usuarios Preferencias uniformes (a) Best-respuesta codiciosa (convergencia) codicioso (estabilización) 0 50 100 150 200 0 20 40 60 100 100 100120 140 160 Número de usuarios Preferencias correlacionadas (b) Mejor respuesta codiciosa (convergencia) codiciosa (estabilización) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de eficiencia de usuarios (c) \"Equilibrio de Nash\" Peso-Optimo social proporcional 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de usuarios (D) \"NASH Equilibrio\" Proporción de peso óptimo social 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 80 100 100 100 100120 140 160 Utilityuniformity Número de usuarios (e) equilibrio Nash peso-proporción óptimo social 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Número de usuarios (F) Equilibrio de Nash Peso social Proporción 0 0.0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de envidia de envío de usuarios (g) Equilibrio Nash Peso proporcional Optimo Social 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de usuarios (H)Equilibrio NASH Peso Proporción Optimo Social Figura 2: Eficiencia, uniformidad de utilidad, envidia y tiempo de convergencia en función del número de usuarios bajo el modelo de paralelismo infinito, con preferencias uniformes y correlacionadas.n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Eficiencia Número de iteración Mejor respuesta codiciosa Figura 3: Nivel de eficiencia con el tiempo bajo el modelo de paralelismo infinito.Número de usuarios = 40. N = 100. Equilibrio de Nash",
                "En la Figura 6, presentamos la eficiencia, la uniformidad de la utilidad y la introducción de la envidia en el \"equilibrio Nash\" para el modelo de paralelismo finito.equilibrio de Nash",
                "Su metodología sigue el estudio de los juegos de congestión (potencial) [17, 22] al relacionar el \"equilibrio NASH\" con la solución de un problema de optimización global (generalmente convexo).equilibrio de Nash",
                "Mostramos que a pesar de los peores límites de los casos, el sistema puede alcanzar un alto nivel de rendimiento en el \"equilibrio Nash\" en términos de métricas de eficiencia y justicia.equilibrio de Nash"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "fairness": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Price-Anticipating Resource Allocation Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget resource allocation game to understand the performance of a distributed marketbased resource allocation system.",
                "Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual utility.",
                "We look at both the efficiency and the <br>fairness</br> of the allocation at the equilibrium, where <br>fairness</br> is evaluated through the measures of utility uniformity and envy-freeness.",
                "We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high efficiency but poor <br>fairness</br>, the proposed allocation scheme achieves a nice balance of high degrees of efficiency and <br>fairness</br> at the equilibrium.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1.",
                "INTRODUCTION The primary advantage of distributed shared clusters like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources.",
                "This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users.",
                "Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users.",
                "Finally, sharing allows greater reliability because of redundancy in hosts and network connections.",
                "However, resource allocation in these systems remains the major challenge.",
                "The problem is how to allocate a shared resource both fairly and efficiently (where efficiency is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests.",
                "Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator.",
                "However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set.",
                "Instead, we examine a market-based resource allocation system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a bidding mechanism.",
                "In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource.",
                "This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26].",
                "Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets.",
                "In this work, we examine a price-anticipating scheme in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6).",
                "In this paper, we formulate the fixed budget resource allocation game and study the existence and performance of the Nash equilibria of this game.",
                "For evaluating the Nash equilibria, we consider both their efficiency, measuring how close the social welfare at equilibrium is to the social optimum, and <br>fairness</br>, measuring how different the users utilities are.",
                "Although rarely considered in previous game theoretical study, we believe <br>fairness</br> is a critical metric for a resource allocation schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair resource allocation in favor of one with less efficient, more fair resource allocation.",
                "We use both utility uniformity and envy-freeness to measure <br>fairness</br>.",
                "Utility uniformity, which is common in Computer Science work, measures the closeness of utilities of different users.",
                "Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others.",
                "Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria.",
                "Using analysis, we show that there is always a Nash equilibrium in the fixed budget game if the utility functions satisfy a fairly weak and natural condition of strong competitiveness.",
                "We also show the worst case performance bounds: for m players the efficiency at equilibrium is Ω(1/ √ m), the utility uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83.",
                "Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their utility.",
                "As part of the fixed budget game analysis, we show that strategic users with linear utility functions can calculate their bids using a best response algorithm that quickly results in an allocation with high efficiency with little computational and communication overhead.",
                "We present variations of the best response algorithm for both finite and infinite parallelism tasks.",
                "In addition, we present a local greedy adjustment algorithm that converges more slowly than best response, but allows for non-linear or unformulatable utility functions. • We show that the price-anticipating resource allocation mechanism achieves a high degree of efficiency and <br>fairness</br>.",
                "Using simulation, we find that although the socially optimal allocation results in perfect efficiency, it also results in very poor <br>fairness</br>.",
                "Likewise, allocating according to only users preference weights results in a high <br>fairness</br>, but a mediocre efficiency.",
                "Intuition would suggest that efficiency and <br>fairness</br> are exclusive.",
                "Surprisingly, the Nash equilibrium, reached by each user iteratively applying the best response algorithm to adapt his bids, achieves nearly the efficiency of the social optimum and nearly the <br>fairness</br> of the weight-proportional allocation: the efficiency is ≥ 0.90, the utility uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system.",
                "In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy.",
                "The local adjustment algorithm performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize.",
                "As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of efficiency and <br>fairness</br>.",
                "The rest of the paper is organized as follows.",
                "We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite parallelism model in Section 3.",
                "In Section 4, we describe algorithms for users to optimize their own utility in the fixed budget game.",
                "In Section 5, we describe our simulator and simulation results.",
                "We describe related work in Section 6.",
                "We conclude by discussing some limit of our model and future work in Section 7. 2.",
                "THE MODEL Price-Anticipating Resource Allocation.",
                "We study the problem of allocating a set of divisible resources (or machines).",
                "Suppose that there are m users and n machines.",
                "Each machine can be continuously divided for allocation to multiple users.",
                "An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1.",
                "Let Ω denote the set of all the allocation schemes.",
                "We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed.",
                "Formally, suppose that user i submits a non-negative bid xij to machine j.",
                "The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j.",
                "When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone.",
                "We call xi = (xi1, . . . , xin) the bidding vector of user i.",
                "The additional consideration we have is that each user i has a budget constraint Xi.",
                "Therefore, user is total bids have to sum up to his budget, i.e.",
                "Pn j=1 xij = Xi.",
                "The budget constraints come from the fact that the users do not have infinite budget.",
                "Utility Functions.",
                "Each user is utility is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine.",
                "Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines.",
                "Therefore, the basic utility function we consider is the linear utility function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j.",
                "For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications.",
                "As a result, w11 > w12 and w21 < w22.",
                "Our definition of utility functions corresponds to the user having enough jobs or enough parallelism within jobs to utilize all the machines.",
                "Consequently, the users goal is to grab as much of a resource as possible.",
                "We call this the infinite parallelism model.",
                "In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity).",
                "To model this, we also consider the more realistic finite parallelism model, where the users parallelism is bounded by ki, and the users utility Ui is the sum of the ki largest wijrij.",
                "In this model, the user only submits bids to up to ki machines.",
                "Our abstraction is to capture the essense of the problem and facilitate our analysis.",
                "In Section 7, we discuss the limit of the above definition of utility functions.",
                "Best Response.",
                "As typically, we assume the users are selfish and strategic - they all act to maximize their own utility, defined by their utility functions.",
                "From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0.",
                "The difficulty of the above optimization problem depends on the formulation of Ui.",
                "We will show later how to solve it for the infinite parallelism model and provide a heuristic for finite parallelism model.",
                "Nash Equilibrium.",
                "By the assumption that the user is selfish, each users bidding vector is the best response to the system.",
                "The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users.",
                "Such a state is known as the Nash equilibrium, a central concept in Game Theory.",
                "Formally, the bidding vectors x1, . . . , xm is a Nash equilibrium if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) .",
                "The Nash equilibrium is desirable because it is a stable state at which no one has incentive to change his strategy.",
                "But a game may not have an equilibrium.",
                "Indeed, a Nash equilibrium may not exist in the price anticipating scheme we define above.",
                "This can be shown by a simple example of two players and two machines.",
                "For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2.",
                "Then player 1 should never bid on machine 2 because it has no value to him.",
                "Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the Nash equilibrium.",
                "We should note that even the mixed strategy equilibrium does not exist in this example.",
                "Clearly, this happens whenever there is a resource that is wanted by only one player.",
                "To rule out this case, we consider those strongly competitive games.1 Under the infinite parallelism model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0.",
                "Under such a condition, we have that (see [5] for a proof), Theorem 1.",
                "There always exists a pure strategy Nash equilibrium in a strongly competitive game.",
                "Given the existence of the Nash equilibrium, the next important question is the performance at the Nash equilibrium, which is often measured by its efficiency and <br>fairness</br>.",
                "Efficiency (Price of Anarchy).",
                "For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω.",
                "Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities.",
                "The efficiency at an allocation scheme ω is defined as π(ω) = U(ω) U∗ .",
                "Let Ω0 denote the set of the allocation at the Nash equilibrium.",
                "When there exists Nash equilibrium, i.e.",
                "Ω0 = ∅, define the efficiency of a game Q to be π(Q) = minω∈Ω0 π(ω).",
                "It is usually the case that π < 1, i.e. there is an efficiency loss at a Nash equilibrium.",
                "This is the price of anarchy [18] paid for not having central enforcement of the users good behavior.",
                "This price is interesting because central control results in the best possible outcome, but is not possible in most cases.",
                "<br>fairness</br>.",
                "While the definition of efficiency is standard, there are multiple ways to define <br>fairness</br>.",
                "We consider two metrics.",
                "One is by comparing the users utilities.",
                "The utility uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum utility and the maximum utility among the users.",
                "Such definition (or utility discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature.",
                "Under this definition, the utility uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω).",
                "The other metric extensively studied in Economics is the concept of envy-freeness [25].",
                "Unlike the utility uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive.",
                "Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine.",
                "These alternatives, however, introduce the problem of coming up with the right price or limit.",
                "When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme.",
                "Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3.",
                "NASH EQUILIBRIUM In this section, we present some theoretical results regarding the performance at Nash equilibrium under the infinite parallelism model.",
                "We assume that the game is strongly competitive to guarantee the existence of equilibria.",
                "For a meaningful discussion of efficiency and <br>fairness</br>, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same utility when they own all the resources.",
                "This precludes the case when a user has an extremely high budget, resulting in very low efficiency or low <br>fairness</br> at equilibrium.",
                "We first provide a characterization of the equilibria.",
                "By definition, the bidding vectors x1, . . . , xm is a Nash equilibrium if and only if each players strategy is the best response to the groups bids.",
                "Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid.",
                "Under the infinite parallelism model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e.",
                "U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties.",
                "We start with two special cases to provide some intuition about the game.",
                "The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games.",
                "Let x and y denote the respective bids of users 1 and 2 on machine 1.",
                "Denote by s = x + y and δ = (2 − s)/s.",
                "Equal-weight game.",
                "In Figure 1, both users have equal valuations for the two machines.",
                "By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α.",
                "Thus, there exists a unique Nash equilibrium of the game where the two users have the same bidding vector.",
                "At the equilibrium, the utility of each user is 1/2, and the social welfare is 1.",
                "On the other hand, the social optimum is clearly 1.",
                "Thus, the equal-weight game is ideal as the efficiency, utility uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games.",
                "Opposite-weight game.",
                "The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines.",
                "Assume that α ≥ 1/2.",
                "Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each Nash equilibrium corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1.",
                "Clearly, δ = 1 is a root of f(δ).",
                "When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine.",
                "At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828.",
                "However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria.",
                "Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid.",
                "In this case, user 1 gets most of machine 1 and almost half of machine 2.",
                "The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4.",
                "This solves to α0 = 2+ √ 2 4 ≈ 0.854.",
                "Those asymmetric equilibria at δ = 1 are bad as they yield lower efficiency than the symmetric equilibrium.",
                "Let δ0 be the minimum root.",
                "When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0.",
                "Then, x, y → 1.",
                "Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75.",
                "From the above simple game, we already observe that the Nash equilibrium may not be unique, which is different from many congestion games in which the Nash equilibrium is unique.",
                "For the general two player game, we can show that 0.75 is actually the worst efficiency bound with a proof in [5].",
                "Further, at the asymmetric equilibrium, the utility uniformity approaches 1/2 when α → 1.",
                "This is the worst possible for two player games because as we show in Section 3.2, a users utility at any Nash equilibrium is at least 1/m in the m-player game.",
                "Another consequence is that the two player game is always envy-free.",
                "Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively.",
                "Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free.",
                "Theorem 2.",
                "For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1.",
                "All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large.",
                "The following example shows the worst case bound.",
                "Consider a system with m = n2 + n players and n machines.",
                "Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine.",
                "The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines.",
                "Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine.",
                "Hence, the total money on each machine is n + 1.",
                "At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total utility of n3 · 1 n2(n+1) < 1.",
                "The other n players each receives 1 n+1 on their favorite machine, resulting in a total utility of n · 1 n+1 < 1.",
                "Therefore, the total utility of the equilibrium is < 2, while the social optimum is n = Θ( √ m).",
                "This bound is the worst possible.",
                "What about the utility uniformity of the multi-player allocation game?",
                "We next show that the utility uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i.",
                "User i can ensure a utility of 1/m by distributing his budget proportionally to the current bids.",
                "That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1.",
                "Therefore, rij = 1 1+m−1 = 1 m .",
                "The total utility of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m .",
                "Since each users utility cannot exceed 1, the minimal possible uniformity is 1/m.",
                "While the utility uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29].",
                "To summarize, we have that Theorem 3.",
                "For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2.",
                "All of these bounds are tight in the worst case. 4.",
                "ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite parallelism model.",
                "However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the Nash equilibrium for the typical distribution of utility functions.",
                "In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response algorithm leads to the equilibrium.",
                "To answer these questions, we resort to simulations.",
                "In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments.",
                "We consider both the infinite parallelism and finite parallelism model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most.",
                "We now present the algorithm for computing the best response.",
                "Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0.",
                "To compute the best response, we first sort wj yj in decreasing order.",
                "Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn .",
                "Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution.",
                "We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too.",
                "Suppose this were not true.",
                "Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) .",
                "Thus it contradicts with the optimality condition (1).",
                "Suppose that k = max{i|x∗ i > 0}.",
                "Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 .",
                "Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi .",
                "The remaining question is how to determine k. It is the largest value such that x∗ k > 0.",
                "Thus, we obtain the following algorithm to compute the best response of a user: 1.",
                "Sort the machines according to wi yi in decreasing order. 2.",
                "Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3.",
                "Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj.",
                "The computational complexity of this algorithm is O(n log n), dominated by the sorting.",
                "In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible.",
                "The best response algorithm must send and receive O(n) messages because each user must obtain the total bids from each host.",
                "In practice, this is more significant than the computational cost.",
                "Note that hosts only reveal to users the sum of the bids on them.",
                "As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite Parallelism Model Recall that in the finite parallelism model, each user i only places bids on at most ki machines.",
                "Of course, the infinite parallelism model is just a special case of finite parallelism model in which ki = n for all the is.",
                "In the finite parallelism model, computing the social optimum is no longer trivial due to bounded parallelism.",
                "It can instead be computed by using the maximum matching algorithm.",
                "Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj).",
                "A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching.",
                "As a result, the following lemma holds.",
                "Lemma 1.",
                "The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching algorithm to compute the social optimum.",
                "The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14].",
                "We choose to implement the Hungarian algorithm [14, 19] because of its simplicity.",
                "There may exist a more efficient algorithm for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question.",
                "However, we do not know an efficient algorithm to compute the best response under the finite parallelism model.",
                "Instead, we provide the following local search heuristic.",
                "Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn.",
                "Let the users budget be X and the parallelism bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users utility.",
                "For a subset of machines A, denote by x(A) the best response on A without parallelism bound and by U(A) the utility obtained by the best response algorithm.",
                "The local search works as follows: 1.",
                "Set A to be the k machines with the highest wi/yi. 2.",
                "Compute U(A) by the infinite parallelism best response algorithm (Sec 4.1) on A. 3.",
                "For each i ∈ A and each j /∈ A, repeat 4.",
                "Let B = A − {i} + {j}, compute U(B). 5.",
                "If(U(B) > U(A)), let A ← B, and goto 2. 6.",
                "Output x(A).",
                "Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response utility.",
                "If yes, we swap the machines and repeat the process.",
                "Otherwise, we have reached a local maxima and output that value.",
                "We suspect that the local maxima that this algorithm finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it.",
                "However, in our simulations, this algorithm quickly converges to a high (≥ .7) efficiency. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear utility functions described earlier.",
                "In practice, utility functions may have more a complicated form, or even worse, a user may not have a formulation of his utility function.",
                "We do assume that the user still has a way to measure his utility, which is the minimum assumption necessary for any market-based resource allocation mechanism.",
                "In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows.",
                "A user finds the two machines that provide him with the highest and lowest marginal utility.",
                "He then moves a fixed small amount of money from the machine with low marginal utility to the machine with the higher one.",
                "This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same.",
                "This condition guarantees the allocation is the optimum when the utility function is concave.",
                "The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5.",
                "SIMULATION RESULTS While the analytic results provide us with worst-case analysis for the infinite parallelism model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite parallelism model.",
                "First, we determine whether the user bidding process converges, and if so, what the rate of convergence is.",
                "Second, in cases of convergence, we look at the performance at equilibrium, using the efficiency and <br>fairness</br> metrics defined above.",
                "Iterative Method.",
                "In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met.",
                "The initial bid is set proportional to the users weights on the machines.",
                "We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3.",
                "Convergence Criteria.",
                "Convergence time measures how quickly the system reaches equilibrium.",
                "It is particularly important in the highly dynamic environment of distributed shared clusters, in which the systems conditions may change before reaching the equilibrium.",
                "Thus, a high convergence rate may be more significant than the efficiency at the equilibrium.",
                "There are several different criteria for convergence.",
                "The strongest criterion is to require that there is only negligible change in the bids of each user.",
                "The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged.",
                "The less strict utility gap criterion requires there to be only negligible change in the users utility.",
                "Given users concern for utility, this is a more natural definition.",
                "Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small utility gain.",
                "Therefore, we use the utility gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the utility gap of each user is smaller than (0.001 in our experiments).",
                "However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in utility as they move money around.",
                "For this method, we use the marginal utility gap criterion.",
                "We compare the highest and lowest utility margins on the machines.",
                "If the difference is negligible, then we consider the system to be converged.",
                "In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion.",
                "Under this criterion, a system has stabilized if the change in social welfare is ≤ .",
                "Individual users utility may not have converged.",
                "This criterion is useful to evaluate how quickly the system as a whole reaches a particular efficiency level.",
                "User preferences.",
                "We experiment with two models of user preferences, random distribution and correlated distribution.",
                "With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution.",
                "In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run.",
                "To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth).",
                "For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk.",
                "By using these profiles, we compress the parameter space and introduce correlations between users and machines.",
                "In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users).",
                "Sections 5.1 and 5.2 present the simulation results when we apply the infinite parallelism and finite parallelism models, respectively.",
                "If the system converges, we report the number of iterations until convergence.",
                "A convergence time of 200 iterations indicates non-convergence, in which case we report the efficiency and <br>fairness</br> values at the point we terminate the simulation. 5.1 Infinite parallelism In this section, we apply the infinite parallelism model, which assumes that users can use an unlimited number of machines.",
                "We present the efficiency and <br>fairness</br> at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively).",
                "We present results for the two user preference models.",
                "With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter).",
                "In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1).",
                "Convergence Time.",
                "Figure 2 shows the convergence time, efficiency and <br>fairness</br> of the infinite parallelism model under uniform (left) and correlated (right) preferences.",
                "Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: Efficiency, utility uniformity, enviness and convergence time as a function of the number of users under the infinite parallelism model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite parallelism model. number of users = 40. n = 100.",
                "The best-response algorithm converges within a few number of iterations for any number of users.",
                "In contrast, the local greedy adjustment algorithm does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users.",
                "We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc.",
                "Regardless, the local greedy adjustment method stabilizes within 100 iterations.",
                "Figure 3 presents the efficiency over time for a system with 40 users.",
                "It demonstrates that while both adjustment methods reach the same social welfare, the best-response algorithm is faster.",
                "In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it.",
                "Efficiency.",
                "Figure 2 (c) and (d) present the efficiency as a function of the number of users.",
                "We present the efficiency at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison.",
                "Social optimum provides an efficient allocation by definition.",
                "For both user preference models, the efficiency at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum.",
                "The efficiency at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences.",
                "<br>fairness</br>.",
                "Figure 2(e) and (f) present the utility uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness.",
                "While the social optimum yields perfect efficiency, it has poor <br>fairness</br>.",
                "The weightproportional method achieves the highest <br>fairness</br> among the three allocation methods, but the <br>fairness</br> at the equilibrium is close.",
                "The utility uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other.",
                "Although utility uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point.",
                "At the social optimum, utility uniformity can be infinitely poor, as some users may be allocated no resources at all.",
                "The same is true with respect to envy-freeness.",
                "The difference between uniform and correlated preferences is best demonstrated in the social optimum results.",
                "When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both utility uniformity and envy-freeness go to zero.",
                "As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation.",
                "These results demonstrate the tradeoff between the different allocation methods.",
                "The efficiency at the equilibrium is lower than the social optimum, but it performs much better with respect to <br>fairness</br>.",
                "The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite parallelism 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite parallelism model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 Efficiency Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: Efficiency level over time under the finite parallelism model with local search algorithm. n = 100.",
                "We also consider the finite parallelism model and use the local search algorithm, as described in Section 4.2, to adjust users bids.",
                "We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the simulation results for only the uniform distribution.",
                "In our experiments, the local search algorithm stops quickly - it usually discovers a local maximum within two iterations.",
                "As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high efficiency. 134 Convergence time.",
                "Let ∆ denote the parallelism bound that limits the maximum number of machines each user can bid on.",
                "We experiment with ∆ = 5 and ∆ = 20.",
                "In both cases, we use 100 machines and vary the number of users.",
                "Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly.",
                "The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20.",
                "We believe that the non-convergence is caused by moderate competition.",
                "No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids.",
                "High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence.",
                "However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids.",
                "In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2].",
                "Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall efficiency after a few iterations (as shown in Figure 5).",
                "Performance.",
                "In Figure 6, we present the efficiency, utility uniformity, and envy-freeness at the Nash equilibrium for the finite parallelism model.",
                "When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations.",
                "When ∆ = 5, there is a performance drop, in particular with respect to the <br>fairness</br> metrics, in the range between 20 and 40 users (where it does not converge).",
                "For a larger number of users, the system converges and achieves a lower level of utility uniformity, but a high degree of efficiency and envy-freeness, similar to those under the infinite parallelism model.",
                "As described above, this is due the competition ratio falling into the head-to-head range.",
                "When the parallelism bound is large (∆ = 20), the performance is closer to the infinite parallelism model, and we do not observe this drop in performance. 6.",
                "RELATED WORK There are two main groups of related work in resource allocation: those that incorporate an economic mechanism, and those that do not.",
                "One non-economic approach is scheduling (surveyed by Pinedo [20]).",
                "Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19].",
                "These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users.",
                "We view scheduling and resource allocation as two separate functions.",
                "Resource allocation divides a resource among different users while scheduling takes a given allocation and orders a users jobs.",
                "Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]).",
                "Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated.",
                "Unfortunately, reservations have a high latency to acquire resources, unlike the price-anticipating scheme we consider.",
                "The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive.",
                "Bellagio[3] uses the SHARE centralized allocator.",
                "SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities.",
                "Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation.",
                "The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some efficiency, but it also avoids the complexity and overhead of combinatorial auctions.",
                "There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows.",
                "Their methodology follows the study of congestion (potential) games [17, 22] by relating the Nash equilibrium to the solution of a (usually convex) global optimization problem.",
                "But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines.",
                "For example, unlike those games, there may exist multiple Nash equilibria in our game.",
                "Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7.",
                "CONCLUSIONS This work studies the performance of a market-based mechanism for distributed shared clusters using both analyatical and simulation methods.",
                "We show that despite the worst case bounds, the system can reach a high performance level at the Nash equilibrium in terms of both efficiency and <br>fairness</br> metrics.",
                "In addition, with a few exceptions under the finite parallelism model, the system reaches equilibrium quickly by using the best response algorithm and, when the number of users is not too small, by the greedy local adjustment method.",
                "While our work indicates that the price-anticipating scheme may work well for resource allocation for shared clusters, there are many interesting directions for future work.",
                "One direction is to consider more realistic utility functions.",
                "For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine.",
                "In practice, both assumptions may not be correct.",
                "For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine.",
                "When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling.",
                "Another assumption is that users have infinite work, so the more resources they can acquire, the better.",
                "In practice, users have finite work.",
                "One approach to address this is to model the users utility according to the time to finish a task rather than the amount of resources he receives.",
                "Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model.",
                "In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user Efficiency Utility uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user Efficiency Utility uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite parallelism model. n = 100. 8.",
                "ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions.",
                "We also thank the anonymous reviewers for their useful comments. 9.",
                "REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat.",
                "Resource Allocation in Federated Distributed Computing Infrastructures.",
                "In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat.",
                "Computational Resource Exchanges for Distributed Resource Allocation. 2004. [4] B. N. Chun and D. E. Culler.",
                "Market-based Proportional Resource Sharing for Clusters.",
                "Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang.",
                "A Price-anticipating Resource Allocation Mechanism for Distributed Shared Clusters.",
                "Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou.",
                "Microeconomic Algorithms for Load Balancing in Distributed Computer Systems.",
                "In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan.",
                "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.",
                "Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow.",
                "Data Structures for Weighted Matching and Nearest Common Ancestors with Linking.",
                "In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang.",
                "Strategic Buyers in a Sum Bid Game for Flat Networks.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis.",
                "Efficiency Loss in a Network Resource Allocation Game.",
                "Mathematics of Operations Research, 2004. [12] F. P. Kelly.",
                "Charging and Rate Control for Elastic Traffic.",
                "European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo.",
                "Rate Control in Communication Networks: Shadow Prices, Proportional <br>fairness</br> and Stability.",
                "Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn.",
                "The Hungarian Method for the Assignment Problem.",
                "Naval Res.",
                "Logis.",
                "Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B.",
                "A. Huberman.",
                "Tycoon: an Implemention of a Distributed Market-Based Resource Allocation System.",
                "Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich.",
                "Congestion Games with Player-Specific Payoff Functions.",
                "Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley.",
                "Potential Games.",
                "Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou.",
                "Algorithms, Games, and the Internet.",
                "In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz.",
                "Combinatorial Optimization.",
                "Dover Publications, Inc., 1982. [20] M. Pinedo.",
                "Scheduling.",
                "Prentice Hall, 2002. [21] O. Regev and N. Nisan.",
                "The Popcorn Market: Online Markets for Computational Resources.",
                "In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal.",
                "A Class of Games Possessing Pure-Strategy Nash Equilibria.",
                "Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek.",
                "Optimal Allocation of a Divisible Good to Strategic Buyers.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen.",
                "A Microeconomic Scheduler for Parallel Computers.",
                "In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian.",
                "Equity, Envy, and Efficiency.",
                "Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B.",
                "A. Huberman, J. O. Kephart, and S. Stornetta.",
                "Spawn: A Distributed Computational Economy.",
                "IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason.",
                "Auction Protocols for Decentralized Scheduling.",
                "Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter.",
                "Classifying Scheduling Policies with respect to Unfairness in an M/GI/1.",
                "In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang.",
                "On the Efficiency and <br>fairness</br> of a Fixed Budget Resource Allocation Game.",
                "Manuscript, 2004. 136"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Observamos tanto la eficiencia como la \"equidad\" de la asignación en el equilibrio, donde la \"equidad\" se evalúa a través de las medidas de la uniformidad de la utilidad y la envidia.justicia",
                "Mostramos analíticamente y a través de simulaciones de que, a pesar de estar altamente descentralizado, dicho sistema converge rápidamente a un equilibrio y, a diferencia del óptimo social que logra una alta eficiencia, pero una \"equidad\" deficiente, el esquema de asignación propuesto logra un buen equilibrio de altos grados de eficiencia y \"justicia \"en el equilibrio.justicia",
                "Para evaluar los equilibrios de NASH, consideramos tanto su eficiencia, midiendo cuán cerca está el bienestar social en el equilibrio para el óptimo social y la \"equidad\", midiendo cuán diferentes son las utilidades de los usuarios.justicia",
                "Aunque rara vez se considera en el estudio teórico anterior del juego, creemos que la \"equidad\" es una métrica crítica para un esquema de asignación de recursos porque la percepción de la injusticia hará que algunos usuarios rechacen un sistema con una asignación de recursos más eficiente pero menos justa a favor de uno con uno con uno con uno con uno con uno con uno con uno con uno con uno con uno con uno con uno con uno con uno con uno con uno con uno con uno con uno con unoAsignación de recursos menos eficiente y más justa.justicia",
                "Utilizamos tanto la uniformidad de la utilidad como la envidia de envidia para medir la \"equidad\".justicia",
                "Además, presentamos un algoritmo de ajuste codicioso local que converge más lentamente que la mejor respuesta, pero permite funciones de utilidad no lineales o no formulables.• Mostramos que el mecanismo de asignación de recursos de anticipación de precio logra un alto grado de eficiencia y \"equidad\".justicia",
                "Usando la simulación, encontramos que, aunque la asignación socialmente óptima da como resultado una eficiencia perfecta, también resulta en una \"equidad\" muy pobre.justicia",
                "Del mismo modo, la asignación de acuerdo con solo los pesos de preferencia de los usuarios da como resultado una alta \"equidad\", pero una eficiencia mediocre.justicia",
                "La intuición sugeriría que la eficiencia y la \"equidad\" son exclusivas.justicia",
                "Sorprendentemente, el equilibrio NASH, alcanzado por cada usuario, aplica iterativamente el mejor algoritmo de respuesta para adaptar sus ofertas, logra casi la eficiencia de la óptima social y casi la \"equidad\" de la asignación de peso proporsional: la eficiencia es ≥ 0.90, la utilidad, la utilidadLa uniformidad es ≥ 0.65, y la envidia es ≥ 0.97, independiente del número de usuarios en el sistema.justicia",
                "Como resultado, creemos que los sistemas distribuidos compartidos basados en el juego de presupuesto fijo pueden ser altamente descentralizados, pero lograr un alto grado de eficiencia y \"equidad\".justicia",
                "Dada la existencia del equilibrio de Nash, la siguiente pregunta importante es el rendimiento en el equilibrio de Nash, que a menudo se mide por su eficiencia y \"equidad\".justicia",
                "\"justicia\".justicia",
                "Si bien la definición de eficiencia es estándar, hay múltiples formas de definir la \"equidad\".justicia",
                "Para una discusión significativa de la eficiencia y la \"equidad\", suponemos que los usuarios son simétricos al exigir que xi = 1 ypn j = 1 wij = 1 para todos los 1 ≤ i ≤ m.O informalmente, requerimos que todos los usuarios tengan el mismo presupuesto, y tienen la misma utilidad cuando poseen todos los recursos.justicia",
                "Esto impide el caso cuando un usuario tiene un presupuesto extremadamente alto, lo que resulta en muy baja eficiencia o baja \"equidad\" en equilibrio.justicia",
                "En segundo lugar, en casos de convergencia, observamos el rendimiento en equilibrio, utilizando las métricas de eficiencia y \"equidad\" definidas anteriormente.justicia",
                "Un tiempo de convergencia de 200 iteraciones indica no convergencia, en cuyo caso informamos la eficiencia y los valores de \"equidad\" en el punto que terminamos la simulación.5.1 Paralelismo infinito En esta sección, aplicamos el modelo de paralelismo infinito, que supone que los usuarios pueden usar un número ilimitado de máquinas.justicia",
                "Presentamos la eficiencia y la \"equidad\" en el equilibrio, en comparación con dos métodos de asignación de línea de base: óptimo social y proporción de peso, en el que los usuarios distribuyen sus ofertas proporcionalmente a sus pesos en las máquinas (que pueden parecer un método de distribución razonable de manera intuitiva).justicia",
                "La Figura 2 muestra el tiempo de convergencia, la eficiencia y la \"equidad\" del modelo de paralelismo infinito bajo preferencias uniformes (izquierda) y correlacionada (derecha).justicia",
                "\"justicia\".justicia",
                "Si bien el óptimo social produce una eficiencia perfecta, tiene una \"equidad\" deficiente.justicia",
                "El método de PROPROPORTIVO de peso logra la \"equidad\" más alta entre los tres métodos de asignación, pero la \"equidad\" en el equilibrio está cerca.justicia",
                "La eficiencia en el equilibrio es más baja que la óptima social, pero funciona mucho mejor con respecto a la \"equidad\".justicia",
                "Cuando ∆ = 5, hay una caída de rendimiento, en particular con respecto a las métricas de \"equidad\", en el rango entre 20 y 40 usuarios (donde no converge).justicia",
                "Mostramos que a pesar de los peores límites de los casos, el sistema puede alcanzar un alto nivel de rendimiento en el equilibrio de Nash en términos de métricas de eficiencia y \"justicia\".justicia",
                "Control de tarifas en redes de comunicación: precios en la sombra, \"equidad\" proporcional y estabilidad.justicia",
                "Sobre la eficiencia y la \"equidad\" de un juego de asignación de recursos presupuestarios fijos.justicia"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "efficiency": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Price-Anticipating Resource Allocation Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget resource allocation game to understand the performance of a distributed marketbased resource allocation system.",
                "Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual utility.",
                "We look at both the <br>efficiency</br> and the fairness of the allocation at the equilibrium, where fairness is evaluated through the measures of utility uniformity and envy-freeness.",
                "We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high <br>efficiency</br> but poor fairness, the proposed allocation scheme achieves a nice balance of high degrees of <br>efficiency</br> and fairness at the equilibrium.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1.",
                "INTRODUCTION The primary advantage of distributed shared clusters like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources.",
                "This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users.",
                "Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users.",
                "Finally, sharing allows greater reliability because of redundancy in hosts and network connections.",
                "However, resource allocation in these systems remains the major challenge.",
                "The problem is how to allocate a shared resource both fairly and efficiently (where <br>efficiency</br> is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests.",
                "Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator.",
                "However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set.",
                "Instead, we examine a market-based resource allocation system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a bidding mechanism.",
                "In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource.",
                "This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26].",
                "Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets.",
                "In this work, we examine a price-anticipating scheme in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6).",
                "In this paper, we formulate the fixed budget resource allocation game and study the existence and performance of the Nash equilibria of this game.",
                "For evaluating the Nash equilibria, we consider both their <br>efficiency</br>, measuring how close the social welfare at equilibrium is to the social optimum, and fairness, measuring how different the users utilities are.",
                "Although rarely considered in previous game theoretical study, we believe fairness is a critical metric for a resource allocation schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair resource allocation in favor of one with less efficient, more fair resource allocation.",
                "We use both utility uniformity and envy-freeness to measure fairness.",
                "Utility uniformity, which is common in Computer Science work, measures the closeness of utilities of different users.",
                "Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others.",
                "Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria.",
                "Using analysis, we show that there is always a Nash equilibrium in the fixed budget game if the utility functions satisfy a fairly weak and natural condition of strong competitiveness.",
                "We also show the worst case performance bounds: for m players the <br>efficiency</br> at equilibrium is Ω(1/ √ m), the utility uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83.",
                "Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their utility.",
                "As part of the fixed budget game analysis, we show that strategic users with linear utility functions can calculate their bids using a best response algorithm that quickly results in an allocation with high <br>efficiency</br> with little computational and communication overhead.",
                "We present variations of the best response algorithm for both finite and infinite parallelism tasks.",
                "In addition, we present a local greedy adjustment algorithm that converges more slowly than best response, but allows for non-linear or unformulatable utility functions. • We show that the price-anticipating resource allocation mechanism achieves a high degree of <br>efficiency</br> and fairness.",
                "Using simulation, we find that although the socially optimal allocation results in perfect <br>efficiency</br>, it also results in very poor fairness.",
                "Likewise, allocating according to only users preference weights results in a high fairness, but a mediocre <br>efficiency</br>.",
                "Intuition would suggest that <br>efficiency</br> and fairness are exclusive.",
                "Surprisingly, the Nash equilibrium, reached by each user iteratively applying the best response algorithm to adapt his bids, achieves nearly the <br>efficiency</br> of the social optimum and nearly the fairness of the weight-proportional allocation: the <br>efficiency</br> is ≥ 0.90, the utility uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system.",
                "In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy.",
                "The local adjustment algorithm performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize.",
                "As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of <br>efficiency</br> and fairness.",
                "The rest of the paper is organized as follows.",
                "We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite parallelism model in Section 3.",
                "In Section 4, we describe algorithms for users to optimize their own utility in the fixed budget game.",
                "In Section 5, we describe our simulator and simulation results.",
                "We describe related work in Section 6.",
                "We conclude by discussing some limit of our model and future work in Section 7. 2.",
                "THE MODEL Price-Anticipating Resource Allocation.",
                "We study the problem of allocating a set of divisible resources (or machines).",
                "Suppose that there are m users and n machines.",
                "Each machine can be continuously divided for allocation to multiple users.",
                "An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1.",
                "Let Ω denote the set of all the allocation schemes.",
                "We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed.",
                "Formally, suppose that user i submits a non-negative bid xij to machine j.",
                "The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j.",
                "When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone.",
                "We call xi = (xi1, . . . , xin) the bidding vector of user i.",
                "The additional consideration we have is that each user i has a budget constraint Xi.",
                "Therefore, user is total bids have to sum up to his budget, i.e.",
                "Pn j=1 xij = Xi.",
                "The budget constraints come from the fact that the users do not have infinite budget.",
                "Utility Functions.",
                "Each user is utility is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine.",
                "Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines.",
                "Therefore, the basic utility function we consider is the linear utility function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j.",
                "For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications.",
                "As a result, w11 > w12 and w21 < w22.",
                "Our definition of utility functions corresponds to the user having enough jobs or enough parallelism within jobs to utilize all the machines.",
                "Consequently, the users goal is to grab as much of a resource as possible.",
                "We call this the infinite parallelism model.",
                "In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity).",
                "To model this, we also consider the more realistic finite parallelism model, where the users parallelism is bounded by ki, and the users utility Ui is the sum of the ki largest wijrij.",
                "In this model, the user only submits bids to up to ki machines.",
                "Our abstraction is to capture the essense of the problem and facilitate our analysis.",
                "In Section 7, we discuss the limit of the above definition of utility functions.",
                "Best Response.",
                "As typically, we assume the users are selfish and strategic - they all act to maximize their own utility, defined by their utility functions.",
                "From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0.",
                "The difficulty of the above optimization problem depends on the formulation of Ui.",
                "We will show later how to solve it for the infinite parallelism model and provide a heuristic for finite parallelism model.",
                "Nash Equilibrium.",
                "By the assumption that the user is selfish, each users bidding vector is the best response to the system.",
                "The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users.",
                "Such a state is known as the Nash equilibrium, a central concept in Game Theory.",
                "Formally, the bidding vectors x1, . . . , xm is a Nash equilibrium if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) .",
                "The Nash equilibrium is desirable because it is a stable state at which no one has incentive to change his strategy.",
                "But a game may not have an equilibrium.",
                "Indeed, a Nash equilibrium may not exist in the price anticipating scheme we define above.",
                "This can be shown by a simple example of two players and two machines.",
                "For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2.",
                "Then player 1 should never bid on machine 2 because it has no value to him.",
                "Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the Nash equilibrium.",
                "We should note that even the mixed strategy equilibrium does not exist in this example.",
                "Clearly, this happens whenever there is a resource that is wanted by only one player.",
                "To rule out this case, we consider those strongly competitive games.1 Under the infinite parallelism model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0.",
                "Under such a condition, we have that (see [5] for a proof), Theorem 1.",
                "There always exists a pure strategy Nash equilibrium in a strongly competitive game.",
                "Given the existence of the Nash equilibrium, the next important question is the performance at the Nash equilibrium, which is often measured by its <br>efficiency</br> and fairness.",
                "<br>efficiency</br> (Price of Anarchy).",
                "For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω.",
                "Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities.",
                "The <br>efficiency</br> at an allocation scheme ω is defined as π(ω) = U(ω) U∗ .",
                "Let Ω0 denote the set of the allocation at the Nash equilibrium.",
                "When there exists Nash equilibrium, i.e.",
                "Ω0 = ∅, define the <br>efficiency</br> of a game Q to be π(Q) = minω∈Ω0 π(ω).",
                "It is usually the case that π < 1, i.e. there is an <br>efficiency</br> loss at a Nash equilibrium.",
                "This is the price of anarchy [18] paid for not having central enforcement of the users good behavior.",
                "This price is interesting because central control results in the best possible outcome, but is not possible in most cases.",
                "Fairness.",
                "While the definition of <br>efficiency</br> is standard, there are multiple ways to define fairness.",
                "We consider two metrics.",
                "One is by comparing the users utilities.",
                "The utility uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum utility and the maximum utility among the users.",
                "Such definition (or utility discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature.",
                "Under this definition, the utility uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω).",
                "The other metric extensively studied in Economics is the concept of envy-freeness [25].",
                "Unlike the utility uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive.",
                "Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine.",
                "These alternatives, however, introduce the problem of coming up with the right price or limit.",
                "When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme.",
                "Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3.",
                "NASH EQUILIBRIUM In this section, we present some theoretical results regarding the performance at Nash equilibrium under the infinite parallelism model.",
                "We assume that the game is strongly competitive to guarantee the existence of equilibria.",
                "For a meaningful discussion of <br>efficiency</br> and fairness, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same utility when they own all the resources.",
                "This precludes the case when a user has an extremely high budget, resulting in very low <br>efficiency</br> or low fairness at equilibrium.",
                "We first provide a characterization of the equilibria.",
                "By definition, the bidding vectors x1, . . . , xm is a Nash equilibrium if and only if each players strategy is the best response to the groups bids.",
                "Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid.",
                "Under the infinite parallelism model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e.",
                "U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties.",
                "We start with two special cases to provide some intuition about the game.",
                "The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games.",
                "Let x and y denote the respective bids of users 1 and 2 on machine 1.",
                "Denote by s = x + y and δ = (2 − s)/s.",
                "Equal-weight game.",
                "In Figure 1, both users have equal valuations for the two machines.",
                "By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α.",
                "Thus, there exists a unique Nash equilibrium of the game where the two users have the same bidding vector.",
                "At the equilibrium, the utility of each user is 1/2, and the social welfare is 1.",
                "On the other hand, the social optimum is clearly 1.",
                "Thus, the equal-weight game is ideal as the <br>efficiency</br>, utility uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games.",
                "Opposite-weight game.",
                "The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines.",
                "Assume that α ≥ 1/2.",
                "Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each Nash equilibrium corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1.",
                "Clearly, δ = 1 is a root of f(δ).",
                "When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine.",
                "At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828.",
                "However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria.",
                "Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid.",
                "In this case, user 1 gets most of machine 1 and almost half of machine 2.",
                "The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4.",
                "This solves to α0 = 2+ √ 2 4 ≈ 0.854.",
                "Those asymmetric equilibria at δ = 1 are bad as they yield lower <br>efficiency</br> than the symmetric equilibrium.",
                "Let δ0 be the minimum root.",
                "When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0.",
                "Then, x, y → 1.",
                "Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75.",
                "From the above simple game, we already observe that the Nash equilibrium may not be unique, which is different from many congestion games in which the Nash equilibrium is unique.",
                "For the general two player game, we can show that 0.75 is actually the worst <br>efficiency</br> bound with a proof in [5].",
                "Further, at the asymmetric equilibrium, the utility uniformity approaches 1/2 when α → 1.",
                "This is the worst possible for two player games because as we show in Section 3.2, a users utility at any Nash equilibrium is at least 1/m in the m-player game.",
                "Another consequence is that the two player game is always envy-free.",
                "Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively.",
                "Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free.",
                "Theorem 2.",
                "For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1.",
                "All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large.",
                "The following example shows the worst case bound.",
                "Consider a system with m = n2 + n players and n machines.",
                "Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine.",
                "The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines.",
                "Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine.",
                "Hence, the total money on each machine is n + 1.",
                "At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total utility of n3 · 1 n2(n+1) < 1.",
                "The other n players each receives 1 n+1 on their favorite machine, resulting in a total utility of n · 1 n+1 < 1.",
                "Therefore, the total utility of the equilibrium is < 2, while the social optimum is n = Θ( √ m).",
                "This bound is the worst possible.",
                "What about the utility uniformity of the multi-player allocation game?",
                "We next show that the utility uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i.",
                "User i can ensure a utility of 1/m by distributing his budget proportionally to the current bids.",
                "That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1.",
                "Therefore, rij = 1 1+m−1 = 1 m .",
                "The total utility of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m .",
                "Since each users utility cannot exceed 1, the minimal possible uniformity is 1/m.",
                "While the utility uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29].",
                "To summarize, we have that Theorem 3.",
                "For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2.",
                "All of these bounds are tight in the worst case. 4.",
                "ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite parallelism model.",
                "However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the Nash equilibrium for the typical distribution of utility functions.",
                "In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response algorithm leads to the equilibrium.",
                "To answer these questions, we resort to simulations.",
                "In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments.",
                "We consider both the infinite parallelism and finite parallelism model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most.",
                "We now present the algorithm for computing the best response.",
                "Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0.",
                "To compute the best response, we first sort wj yj in decreasing order.",
                "Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn .",
                "Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution.",
                "We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too.",
                "Suppose this were not true.",
                "Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) .",
                "Thus it contradicts with the optimality condition (1).",
                "Suppose that k = max{i|x∗ i > 0}.",
                "Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 .",
                "Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi .",
                "The remaining question is how to determine k. It is the largest value such that x∗ k > 0.",
                "Thus, we obtain the following algorithm to compute the best response of a user: 1.",
                "Sort the machines according to wi yi in decreasing order. 2.",
                "Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3.",
                "Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj.",
                "The computational complexity of this algorithm is O(n log n), dominated by the sorting.",
                "In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible.",
                "The best response algorithm must send and receive O(n) messages because each user must obtain the total bids from each host.",
                "In practice, this is more significant than the computational cost.",
                "Note that hosts only reveal to users the sum of the bids on them.",
                "As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite Parallelism Model Recall that in the finite parallelism model, each user i only places bids on at most ki machines.",
                "Of course, the infinite parallelism model is just a special case of finite parallelism model in which ki = n for all the is.",
                "In the finite parallelism model, computing the social optimum is no longer trivial due to bounded parallelism.",
                "It can instead be computed by using the maximum matching algorithm.",
                "Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj).",
                "A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching.",
                "As a result, the following lemma holds.",
                "Lemma 1.",
                "The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching algorithm to compute the social optimum.",
                "The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14].",
                "We choose to implement the Hungarian algorithm [14, 19] because of its simplicity.",
                "There may exist a more efficient algorithm for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question.",
                "However, we do not know an efficient algorithm to compute the best response under the finite parallelism model.",
                "Instead, we provide the following local search heuristic.",
                "Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn.",
                "Let the users budget be X and the parallelism bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users utility.",
                "For a subset of machines A, denote by x(A) the best response on A without parallelism bound and by U(A) the utility obtained by the best response algorithm.",
                "The local search works as follows: 1.",
                "Set A to be the k machines with the highest wi/yi. 2.",
                "Compute U(A) by the infinite parallelism best response algorithm (Sec 4.1) on A. 3.",
                "For each i ∈ A and each j /∈ A, repeat 4.",
                "Let B = A − {i} + {j}, compute U(B). 5.",
                "If(U(B) > U(A)), let A ← B, and goto 2. 6.",
                "Output x(A).",
                "Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response utility.",
                "If yes, we swap the machines and repeat the process.",
                "Otherwise, we have reached a local maxima and output that value.",
                "We suspect that the local maxima that this algorithm finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it.",
                "However, in our simulations, this algorithm quickly converges to a high (≥ .7) <br>efficiency</br>. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear utility functions described earlier.",
                "In practice, utility functions may have more a complicated form, or even worse, a user may not have a formulation of his utility function.",
                "We do assume that the user still has a way to measure his utility, which is the minimum assumption necessary for any market-based resource allocation mechanism.",
                "In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows.",
                "A user finds the two machines that provide him with the highest and lowest marginal utility.",
                "He then moves a fixed small amount of money from the machine with low marginal utility to the machine with the higher one.",
                "This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same.",
                "This condition guarantees the allocation is the optimum when the utility function is concave.",
                "The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5.",
                "SIMULATION RESULTS While the analytic results provide us with worst-case analysis for the infinite parallelism model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite parallelism model.",
                "First, we determine whether the user bidding process converges, and if so, what the rate of convergence is.",
                "Second, in cases of convergence, we look at the performance at equilibrium, using the <br>efficiency</br> and fairness metrics defined above.",
                "Iterative Method.",
                "In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met.",
                "The initial bid is set proportional to the users weights on the machines.",
                "We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3.",
                "Convergence Criteria.",
                "Convergence time measures how quickly the system reaches equilibrium.",
                "It is particularly important in the highly dynamic environment of distributed shared clusters, in which the systems conditions may change before reaching the equilibrium.",
                "Thus, a high convergence rate may be more significant than the <br>efficiency</br> at the equilibrium.",
                "There are several different criteria for convergence.",
                "The strongest criterion is to require that there is only negligible change in the bids of each user.",
                "The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged.",
                "The less strict utility gap criterion requires there to be only negligible change in the users utility.",
                "Given users concern for utility, this is a more natural definition.",
                "Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small utility gain.",
                "Therefore, we use the utility gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the utility gap of each user is smaller than (0.001 in our experiments).",
                "However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in utility as they move money around.",
                "For this method, we use the marginal utility gap criterion.",
                "We compare the highest and lowest utility margins on the machines.",
                "If the difference is negligible, then we consider the system to be converged.",
                "In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion.",
                "Under this criterion, a system has stabilized if the change in social welfare is ≤ .",
                "Individual users utility may not have converged.",
                "This criterion is useful to evaluate how quickly the system as a whole reaches a particular <br>efficiency</br> level.",
                "User preferences.",
                "We experiment with two models of user preferences, random distribution and correlated distribution.",
                "With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution.",
                "In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run.",
                "To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth).",
                "For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk.",
                "By using these profiles, we compress the parameter space and introduce correlations between users and machines.",
                "In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users).",
                "Sections 5.1 and 5.2 present the simulation results when we apply the infinite parallelism and finite parallelism models, respectively.",
                "If the system converges, we report the number of iterations until convergence.",
                "A convergence time of 200 iterations indicates non-convergence, in which case we report the <br>efficiency</br> and fairness values at the point we terminate the simulation. 5.1 Infinite parallelism In this section, we apply the infinite parallelism model, which assumes that users can use an unlimited number of machines.",
                "We present the <br>efficiency</br> and fairness at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively).",
                "We present results for the two user preference models.",
                "With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter).",
                "In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1).",
                "Convergence Time.",
                "Figure 2 shows the convergence time, <br>efficiency</br> and fairness of the infinite parallelism model under uniform (left) and correlated (right) preferences.",
                "Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 <br>efficiency</br> Number of Users (c) Nash equilibrium Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: <br>efficiency</br>, utility uniformity, enviness and convergence time as a function of the number of users under the infinite parallelism model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite parallelism model. number of users = 40. n = 100.",
                "The best-response algorithm converges within a few number of iterations for any number of users.",
                "In contrast, the local greedy adjustment algorithm does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users.",
                "We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc.",
                "Regardless, the local greedy adjustment method stabilizes within 100 iterations.",
                "Figure 3 presents the <br>efficiency</br> over time for a system with 40 users.",
                "It demonstrates that while both adjustment methods reach the same social welfare, the best-response algorithm is faster.",
                "In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it.",
                "<br>efficiency</br>.",
                "Figure 2 (c) and (d) present the <br>efficiency</br> as a function of the number of users.",
                "We present the <br>efficiency</br> at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison.",
                "Social optimum provides an efficient allocation by definition.",
                "For both user preference models, the <br>efficiency</br> at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum.",
                "The <br>efficiency</br> at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences.",
                "Fairness.",
                "Figure 2(e) and (f) present the utility uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness.",
                "While the social optimum yields perfect <br>efficiency</br>, it has poor fairness.",
                "The weightproportional method achieves the highest fairness among the three allocation methods, but the fairness at the equilibrium is close.",
                "The utility uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other.",
                "Although utility uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point.",
                "At the social optimum, utility uniformity can be infinitely poor, as some users may be allocated no resources at all.",
                "The same is true with respect to envy-freeness.",
                "The difference between uniform and correlated preferences is best demonstrated in the social optimum results.",
                "When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both utility uniformity and envy-freeness go to zero.",
                "As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation.",
                "These results demonstrate the tradeoff between the different allocation methods.",
                "The <br>efficiency</br> at the equilibrium is lower than the social optimum, but it performs much better with respect to fairness.",
                "The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite parallelism 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite parallelism model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 <br>efficiency</br> Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: <br>efficiency</br> level over time under the finite parallelism model with local search algorithm. n = 100.",
                "We also consider the finite parallelism model and use the local search algorithm, as described in Section 4.2, to adjust users bids.",
                "We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the simulation results for only the uniform distribution.",
                "In our experiments, the local search algorithm stops quickly - it usually discovers a local maximum within two iterations.",
                "As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high <br>efficiency</br>. 134 Convergence time.",
                "Let ∆ denote the parallelism bound that limits the maximum number of machines each user can bid on.",
                "We experiment with ∆ = 5 and ∆ = 20.",
                "In both cases, we use 100 machines and vary the number of users.",
                "Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly.",
                "The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20.",
                "We believe that the non-convergence is caused by moderate competition.",
                "No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids.",
                "High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence.",
                "However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids.",
                "In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2].",
                "Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall <br>efficiency</br> after a few iterations (as shown in Figure 5).",
                "Performance.",
                "In Figure 6, we present the <br>efficiency</br>, utility uniformity, and envy-freeness at the Nash equilibrium for the finite parallelism model.",
                "When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations.",
                "When ∆ = 5, there is a performance drop, in particular with respect to the fairness metrics, in the range between 20 and 40 users (where it does not converge).",
                "For a larger number of users, the system converges and achieves a lower level of utility uniformity, but a high degree of <br>efficiency</br> and envy-freeness, similar to those under the infinite parallelism model.",
                "As described above, this is due the competition ratio falling into the head-to-head range.",
                "When the parallelism bound is large (∆ = 20), the performance is closer to the infinite parallelism model, and we do not observe this drop in performance. 6.",
                "RELATED WORK There are two main groups of related work in resource allocation: those that incorporate an economic mechanism, and those that do not.",
                "One non-economic approach is scheduling (surveyed by Pinedo [20]).",
                "Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19].",
                "These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users.",
                "We view scheduling and resource allocation as two separate functions.",
                "Resource allocation divides a resource among different users while scheduling takes a given allocation and orders a users jobs.",
                "Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]).",
                "Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated.",
                "Unfortunately, reservations have a high latency to acquire resources, unlike the price-anticipating scheme we consider.",
                "The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive.",
                "Bellagio[3] uses the SHARE centralized allocator.",
                "SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities.",
                "Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation.",
                "The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some <br>efficiency</br>, but it also avoids the complexity and overhead of combinatorial auctions.",
                "There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows.",
                "Their methodology follows the study of congestion (potential) games [17, 22] by relating the Nash equilibrium to the solution of a (usually convex) global optimization problem.",
                "But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines.",
                "For example, unlike those games, there may exist multiple Nash equilibria in our game.",
                "Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7.",
                "CONCLUSIONS This work studies the performance of a market-based mechanism for distributed shared clusters using both analyatical and simulation methods.",
                "We show that despite the worst case bounds, the system can reach a high performance level at the Nash equilibrium in terms of both <br>efficiency</br> and fairness metrics.",
                "In addition, with a few exceptions under the finite parallelism model, the system reaches equilibrium quickly by using the best response algorithm and, when the number of users is not too small, by the greedy local adjustment method.",
                "While our work indicates that the price-anticipating scheme may work well for resource allocation for shared clusters, there are many interesting directions for future work.",
                "One direction is to consider more realistic utility functions.",
                "For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine.",
                "In practice, both assumptions may not be correct.",
                "For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine.",
                "When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling.",
                "Another assumption is that users have infinite work, so the more resources they can acquire, the better.",
                "In practice, users have finite work.",
                "One approach to address this is to model the users utility according to the time to finish a task rather than the amount of resources he receives.",
                "Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model.",
                "In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user <br>efficiency</br> Utility uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user <br>efficiency</br> Utility uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite parallelism model. n = 100. 8.",
                "ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions.",
                "We also thank the anonymous reviewers for their useful comments. 9.",
                "REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat.",
                "Resource Allocation in Federated Distributed Computing Infrastructures.",
                "In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat.",
                "Computational Resource Exchanges for Distributed Resource Allocation. 2004. [4] B. N. Chun and D. E. Culler.",
                "Market-based Proportional Resource Sharing for Clusters.",
                "Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang.",
                "A Price-anticipating Resource Allocation Mechanism for Distributed Shared Clusters.",
                "Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou.",
                "Microeconomic Algorithms for Load Balancing in Distributed Computer Systems.",
                "In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan.",
                "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.",
                "Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow.",
                "Data Structures for Weighted Matching and Nearest Common Ancestors with Linking.",
                "In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang.",
                "Strategic Buyers in a Sum Bid Game for Flat Networks.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis.",
                "<br>efficiency</br> Loss in a Network Resource Allocation Game.",
                "Mathematics of Operations Research, 2004. [12] F. P. Kelly.",
                "Charging and Rate Control for Elastic Traffic.",
                "European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo.",
                "Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability.",
                "Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn.",
                "The Hungarian Method for the Assignment Problem.",
                "Naval Res.",
                "Logis.",
                "Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B.",
                "A. Huberman.",
                "Tycoon: an Implemention of a Distributed Market-Based Resource Allocation System.",
                "Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich.",
                "Congestion Games with Player-Specific Payoff Functions.",
                "Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley.",
                "Potential Games.",
                "Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou.",
                "Algorithms, Games, and the Internet.",
                "In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz.",
                "Combinatorial Optimization.",
                "Dover Publications, Inc., 1982. [20] M. Pinedo.",
                "Scheduling.",
                "Prentice Hall, 2002. [21] O. Regev and N. Nisan.",
                "The Popcorn Market: Online Markets for Computational Resources.",
                "In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal.",
                "A Class of Games Possessing Pure-Strategy Nash Equilibria.",
                "Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek.",
                "Optimal Allocation of a Divisible Good to Strategic Buyers.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen.",
                "A Microeconomic Scheduler for Parallel Computers.",
                "In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian.",
                "Equity, Envy, and <br>efficiency</br>.",
                "Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B.",
                "A. Huberman, J. O. Kephart, and S. Stornetta.",
                "Spawn: A Distributed Computational Economy.",
                "IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason.",
                "Auction Protocols for Decentralized Scheduling.",
                "Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter.",
                "Classifying Scheduling Policies with respect to Unfairness in an M/GI/1.",
                "In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang.",
                "On the <br>efficiency</br> and Fairness of a Fixed Budget Resource Allocation Game.",
                "Manuscript, 2004. 136"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Observamos tanto la \"eficiencia\" como la justicia de la asignación en el equilibrio, donde la equidad se evalúa a través de las medidas de uniformidad de utilidad y envidia.eficiencia",
                "Mostramos analíticamente y a través de simulaciones de que, a pesar de estar altamente descentralizado, dicho sistema converge rápidamente a un equilibrio y, a diferencia del óptimo social que logra una alta \"eficiencia\", pero mala equidad, el esquema de asignación propuesto logra un buen equilibrio de altos grados de \"eficiencia\"y justicia en el equilibrio.eficiencia",
                "El problema es cómo asignar un recurso compartido tanto de manera justa y eficiente (donde la \"eficiencia\" es la relación del bienestar social logrado para lo social óptimo) con la presencia de usuarios estratégicos que actúan en sus propios intereses.eficiencia",
                "Para evaluar los equilibrios de NASH, consideramos tanto su \"eficiencia\", midiendo cuán cerca está el bienestar social en el equilibrio para el óptimo social y la equidad, midiendo cuán diferentes están las utilidades de los usuarios.eficiencia",
                "También mostramos los peores límites de rendimiento: para los jugadores M, la \"eficiencia\" en equilibrio es Ω (1/ √ m), la uniformidad de utilidad es ≥ 1/ m y la envidia ≥ 2 √ 2-2 ≈ 0.83.eficiencia",
                "Como parte del análisis de juegos de presupuesto fijo, mostramos que los usuarios estratégicos con funciones de utilidad lineal pueden calcular sus ofertas utilizando un algoritmo de respuesta mejor que resulte rápidamente en una asignación con alta \"eficiencia\" con poca sobrecarga de computación y comunicación.eficiencia",
                "Además, presentamos un algoritmo de ajuste codicioso local que converge más lentamente que la mejor respuesta, pero permite funciones de utilidad no lineales o no formulables.• Mostramos que el mecanismo de asignación de recursos que supera el precio logra un alto grado de \"eficiencia\" y equidad.eficiencia",
                "Usando la simulación, encontramos que, aunque la asignación socialmente óptima da como resultado una \"eficiencia\" perfecta, también resulta en una justicia muy pobre.eficiencia",
                "Del mismo modo, la asignación de acuerdo con solo los pesos de preferencia de los usuarios da como resultado una alta equidad, pero una \"eficiencia\" mediocre.eficiencia",
                "La intuición sugeriría que la \"eficiencia\" y la equidad son exclusivas.eficiencia",
                "Sorprendentemente, el equilibrio de Nash, alcanzado por cada usuario, aplicando el mejor algoritmo de respuesta para adaptar sus ofertas, logra casi la \"eficiencia\" de la óptima social y casi la equidad de la asignación de peso proporsional: la \"eficiencia\" es ≥ 0.90,La uniformidad de la utilidad es ≥ 0.65, y la envidia es ≥ 0.97, independiente del número de usuarios en el sistema.eficiencia",
                "Como resultado, creemos que los sistemas distribuidos compartidos basados en el juego de presupuesto fijo pueden ser altamente descentralizados, pero lograr un alto grado de \"eficiencia\" y equidad.eficiencia",
                "Dada la existencia del equilibrio de Nash, la siguiente pregunta importante es el rendimiento en el equilibrio de Nash, que a menudo se mide por su \"eficiencia\" y equidad.eficiencia",
                "\"Eficiencia\" (precio de la anarquía).eficiencia",
                "La \"eficiencia\" en un esquema de asignación Ω se define como π (ω) = u (ω) u ∗.eficiencia",
                "Ω0 = ∅, defina la \"eficiencia\" de un juego Q como π (q) = minω∈ω0 π (Ω).eficiencia",
                "Por lo general, es el caso que π <1, es decir, hay una pérdida de \"eficiencia\" en un equilibrio de Nash.eficiencia",
                "Si bien la definición de \"eficiencia\" es estándar, hay múltiples formas de definir la equidad.eficiencia",
                "Para una discusión significativa de \"eficiencia\" y justicia, suponemos que los usuarios son simétricos al exigir que xi = 1 ypn j = 1 wij = 1 para todos los 1 ≤ i ≤ m.O informalmente, requerimos que todos los usuarios tengan el mismo presupuesto, y tienen la misma utilidad cuando poseen todos los recursos.eficiencia",
                "Esto impide el caso cuando un usuario tiene un presupuesto extremadamente alto, lo que resulta en una \"eficiencia\" muy baja o baja equidad en equilibrio.eficiencia",
                "Por lo tanto, el juego de igual peso es ideal como la \"eficiencia\", la uniformidad de la utilidad, y la envidia es todo 1. 129 m1 m2 u1 α 1-α u2 α 1-α m1 m2 u1 α 1-α u2 1-α α α α α α α(a) Juego de igual peso (b) Juego de peso opuesto Figura 1: Dos casos especiales de juegos de dos jugadores.eficiencia",
                "Esos equilibrios asimétricos en δ = 1 son malos, ya que producen una \"eficiencia\" más baja que el equilibrio simétrico.eficiencia",
                "Para el juego general de dos jugadores, podemos demostrar que 0.75 es en realidad la peor \"eficiencia\" vinculada a una prueba en [5].eficiencia",
                "Sin embargo, en nuestras simulaciones, este algoritmo converge rápidamente a una \"eficiencia\" alta (≥ .7).131 4.3 Ajuste de codicioso local Los algoritmos de respuesta de los mejores de respuesta anteriores solo funcionan para las funciones de utilidad lineal descritas anteriormente.eficiencia",
                "En segundo lugar, en casos de convergencia, observamos el rendimiento en equilibrio, utilizando la \"eficiencia\" y las métricas de equidad definidas anteriormente.eficiencia",
                "Por lo tanto, una alta tasa de convergencia puede ser más significativa que la \"eficiencia\" en el equilibrio.eficiencia",
                "Este criterio es útil para evaluar qué tan rápido el sistema en su conjunto alcanza un nivel particular de \"eficiencia\".eficiencia",
                "Un tiempo de convergencia de 200 iteraciones indica no convergencia, en cuyo caso informamos la \"eficiencia\" y los valores de equidad en el punto que terminamos la simulación.5.1 Paralelismo infinito En esta sección, aplicamos el modelo de paralelismo infinito, que supone que los usuarios pueden usar un número ilimitado de máquinas.eficiencia",
                "Presentamos la \"eficiencia\" y la equidad en el equilibrio, en comparación con dos métodos de asignación de línea de base: óptimo social y proporción de peso, en el que los usuarios distribuyen sus ofertas proporcionalmente a sus pesos en las máquinas (que pueden parecer un método de distribución razonable de manera intuitiva).eficiencia",
                "La Figura 2 muestra el tiempo de convergencia, la \"eficiencia\" y la equidad del modelo de paralelismo infinito bajo preferencias uniformes (izquierda) y correlacionada (derecha).eficiencia",
                "Las parcelas (a) y (b) muestran el tiempo de convergencia y estabilización de los métodos de ajuste locales y de ajuste locales.132 0 50 100 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime (#Iterations) Número de usuarios Preferencias uniformes (a) Best-respuesta codiciosa (convergencia) codicioso (estabilización) 0 50 100 150 200 0 20 40 60 100 100 100120 140 160 Número de usuarios Preferencias correlacionadas (b) Mejor respuesta codiciosa (convergencia) codiciosa (estabilización) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 \"Eficiencia\" Número de usuarios (c) Peso de equilibrio de Nash-Optimo social proporcional 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de usuarios (D) Equilibrio NASH Optimos sociales proporción de peso 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 140 140 140160 UtilityUniformity Número de usuarios (E) Equilibrio Nash Pesaje Proporción Social óptimo 0 0.1 0.2 0.3 0.4 0.5 0.6 0.6 0.7 0.8 0.9 1 0 20 40 60 80 80 120 140 160 Número de usuarios (F) Equilibrio Nash Proporción de peso social0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de envidia de envidia de usuarios (g) Equilibrio NASH Peso Proporcional Social óptimo 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de usuarios (H) Equilibrio de NASHPeso Proporcional Social óptimo Figura 2: \"Eficiencia\", uniformidad de utilidad, envidia y tiempo de convergencia en función del número de usuarios bajo el modelo de paralelismo infinito, con preferencias uniformes y correlacionadas.n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Eficiencia Número de iteración Mejor respuesta codiciosa Figura 3: Nivel de eficiencia con el tiempo bajo el modelo de paralelismo infinito.número de usuarios = 40. n = 100. Eficiencia",
                "La Figura 3 presenta la \"eficiencia\" con el tiempo para un sistema con 40 usuarios.eficiencia",
                "\"eficiencia\".eficiencia",
                "La Figura 2 (c) y (d) presentan la \"eficiencia\" en función del número de usuarios.eficiencia",
                "Presentamos la \"eficiencia\" en equilibrio, y utilizamos el óptimo social y los métodos de asignación estática de peso proporcional para la comparación.eficiencia",
                "Para ambos modelos de preferencia de usuario, la \"eficiencia\" en el equilibrio es de aproximadamente 0.9, independiente del número de usuarios, que es solo ligeramente peor que el óptimo social.eficiencia",
                "La \"eficiencia\" en el equilibrio es ≈ 50% de mejora sobre el método de asignación de proporción de peso para preferencias uniformes, y una mejora de ≈ 30% para las preferencias correlacionadas.eficiencia",
                "Si bien el óptimo social produce una \"eficiencia\" perfecta, tiene mala equidad.eficiencia",
                "La \"eficiencia\" en el equilibrio es más baja que la óptima social, pero funciona mucho mejor con respecto a la equidad.eficiencia",
                "La asignación de equilibrio es completamente libre de envidia bajo preferencias uniformes y casi sin envidia bajo preferencias correlacionadas.5.2 Paralelismo finito 0 50 100 100 150 200 0 10 20 30 40 50 60 70 80 90 ConvergenceTime (#iteraciones) Número de usuarios 5 máquinas/usuario 20 máquinas/usuario Figura 4: Tiempo de convergencia bajo el modelo de paralelismo finito.n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 \"Eficiencia\" Número de iteración 5-Machines/usuario (40 usuarios) 20 máquinas/usuario (10 usuarios) Figura 5: \"Eficiencia\" con el tiempo bajo el finitoModelo de paralelismo con algoritmo de búsqueda local.n = 100. Eficiencia",
                "Como se mencionó anteriormente, no podemos demostrar que un máximo local es el máximo global, pero nuestros experimentos indican que la heurística de búsqueda local conduce a una alta \"eficiencia\".134 Tiempo de convergencia.eficiencia",
                "Aunque el sistema no converge en estos rangos malos, el sistema no logra y mantiene un alto nivel de \"eficiencia\" general después de algunas iteraciones (como se muestra en la Figura 5).eficiencia",
                "En la Figura 6, presentamos la \"eficiencia\", la uniformidad de la utilidad y la intención de envidia en el equilibrio de Nash para el modelo de paralelismo finito.eficiencia",
                "Para un mayor número de usuarios, el sistema converge y logra un nivel más bajo de uniformidad de servicios públicos, pero un alto grado de \"eficiencia\" y la plantilla de envidia, similares a las del modelo de paralelismo infinito.eficiencia",
                "El esquema de licencia previa que consideramos no opera explícitamente en las complementarias, lo que posiblemente pierde cierta \"eficiencia\", pero también evita la complejidad y la sobrecarga de las subastas combinatorias.eficiencia",
                "Mostramos que a pesar de los peores límites de los casos, el sistema puede alcanzar un alto nivel de rendimiento en el equilibrio de Nash en términos de métricas de \"eficiencia\" y justicia.eficiencia",
                "Además de las preguntas habituales sobre los juegos repetidos, también sería importante comprender cómo los usuarios deben asignar sus presupuestos sabiamente con el tiempo para acomodar las necesidades futuras.135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de usuarios (a) Límite: 5 máquinas/Usuario \"Eficiencia\" Uniformidad de utilidad Envidia 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 60 60 7080 90 Número de usuarios (b) Límite: 20 máquinas/usuario \"Eficiencia\" Uniformidad de utilidad Envidia Figura 6: Eficiencia, uniformidad de utilidad y envidia de envidia bajo el modelo de paralelismo finito.n = 100. 8. Eficiencia",
                "Pérdida de \"eficiencia\" en un juego de asignación de recursos de red.eficiencia",
                "Equidad, envidia y \"eficiencia\".eficiencia",
                "Sobre la \"eficiencia\" y la equidad de un juego de asignación de recursos presupuestarios fijos.eficiencia"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "parallelism": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Price-Anticipating Resource Allocation Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget resource allocation game to understand the performance of a distributed marketbased resource allocation system.",
                "Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual utility.",
                "We look at both the efficiency and the fairness of the allocation at the equilibrium, where fairness is evaluated through the measures of utility uniformity and envy-freeness.",
                "We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high efficiency but poor fairness, the proposed allocation scheme achieves a nice balance of high degrees of efficiency and fairness at the equilibrium.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1.",
                "INTRODUCTION The primary advantage of distributed shared clusters like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources.",
                "This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users.",
                "Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users.",
                "Finally, sharing allows greater reliability because of redundancy in hosts and network connections.",
                "However, resource allocation in these systems remains the major challenge.",
                "The problem is how to allocate a shared resource both fairly and efficiently (where efficiency is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests.",
                "Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator.",
                "However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set.",
                "Instead, we examine a market-based resource allocation system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a bidding mechanism.",
                "In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource.",
                "This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26].",
                "Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets.",
                "In this work, we examine a price-anticipating scheme in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6).",
                "In this paper, we formulate the fixed budget resource allocation game and study the existence and performance of the Nash equilibria of this game.",
                "For evaluating the Nash equilibria, we consider both their efficiency, measuring how close the social welfare at equilibrium is to the social optimum, and fairness, measuring how different the users utilities are.",
                "Although rarely considered in previous game theoretical study, we believe fairness is a critical metric for a resource allocation schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair resource allocation in favor of one with less efficient, more fair resource allocation.",
                "We use both utility uniformity and envy-freeness to measure fairness.",
                "Utility uniformity, which is common in Computer Science work, measures the closeness of utilities of different users.",
                "Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others.",
                "Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria.",
                "Using analysis, we show that there is always a Nash equilibrium in the fixed budget game if the utility functions satisfy a fairly weak and natural condition of strong competitiveness.",
                "We also show the worst case performance bounds: for m players the efficiency at equilibrium is Ω(1/ √ m), the utility uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83.",
                "Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their utility.",
                "As part of the fixed budget game analysis, we show that strategic users with linear utility functions can calculate their bids using a best response algorithm that quickly results in an allocation with high efficiency with little computational and communication overhead.",
                "We present variations of the best response algorithm for both finite and infinite <br>parallelism</br> tasks.",
                "In addition, we present a local greedy adjustment algorithm that converges more slowly than best response, but allows for non-linear or unformulatable utility functions. • We show that the price-anticipating resource allocation mechanism achieves a high degree of efficiency and fairness.",
                "Using simulation, we find that although the socially optimal allocation results in perfect efficiency, it also results in very poor fairness.",
                "Likewise, allocating according to only users preference weights results in a high fairness, but a mediocre efficiency.",
                "Intuition would suggest that efficiency and fairness are exclusive.",
                "Surprisingly, the Nash equilibrium, reached by each user iteratively applying the best response algorithm to adapt his bids, achieves nearly the efficiency of the social optimum and nearly the fairness of the weight-proportional allocation: the efficiency is ≥ 0.90, the utility uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system.",
                "In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy.",
                "The local adjustment algorithm performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize.",
                "As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of efficiency and fairness.",
                "The rest of the paper is organized as follows.",
                "We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite <br>parallelism</br> model in Section 3.",
                "In Section 4, we describe algorithms for users to optimize their own utility in the fixed budget game.",
                "In Section 5, we describe our simulator and simulation results.",
                "We describe related work in Section 6.",
                "We conclude by discussing some limit of our model and future work in Section 7. 2.",
                "THE MODEL Price-Anticipating Resource Allocation.",
                "We study the problem of allocating a set of divisible resources (or machines).",
                "Suppose that there are m users and n machines.",
                "Each machine can be continuously divided for allocation to multiple users.",
                "An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1.",
                "Let Ω denote the set of all the allocation schemes.",
                "We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed.",
                "Formally, suppose that user i submits a non-negative bid xij to machine j.",
                "The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j.",
                "When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone.",
                "We call xi = (xi1, . . . , xin) the bidding vector of user i.",
                "The additional consideration we have is that each user i has a budget constraint Xi.",
                "Therefore, user is total bids have to sum up to his budget, i.e.",
                "Pn j=1 xij = Xi.",
                "The budget constraints come from the fact that the users do not have infinite budget.",
                "Utility Functions.",
                "Each user is utility is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine.",
                "Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines.",
                "Therefore, the basic utility function we consider is the linear utility function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j.",
                "For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications.",
                "As a result, w11 > w12 and w21 < w22.",
                "Our definition of utility functions corresponds to the user having enough jobs or enough <br>parallelism</br> within jobs to utilize all the machines.",
                "Consequently, the users goal is to grab as much of a resource as possible.",
                "We call this the infinite <br>parallelism</br> model.",
                "In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity).",
                "To model this, we also consider the more realistic finite <br>parallelism</br> model, where the users <br>parallelism</br> is bounded by ki, and the users utility Ui is the sum of the ki largest wijrij.",
                "In this model, the user only submits bids to up to ki machines.",
                "Our abstraction is to capture the essense of the problem and facilitate our analysis.",
                "In Section 7, we discuss the limit of the above definition of utility functions.",
                "Best Response.",
                "As typically, we assume the users are selfish and strategic - they all act to maximize their own utility, defined by their utility functions.",
                "From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0.",
                "The difficulty of the above optimization problem depends on the formulation of Ui.",
                "We will show later how to solve it for the infinite <br>parallelism</br> model and provide a heuristic for finite <br>parallelism</br> model.",
                "Nash Equilibrium.",
                "By the assumption that the user is selfish, each users bidding vector is the best response to the system.",
                "The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users.",
                "Such a state is known as the Nash equilibrium, a central concept in Game Theory.",
                "Formally, the bidding vectors x1, . . . , xm is a Nash equilibrium if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) .",
                "The Nash equilibrium is desirable because it is a stable state at which no one has incentive to change his strategy.",
                "But a game may not have an equilibrium.",
                "Indeed, a Nash equilibrium may not exist in the price anticipating scheme we define above.",
                "This can be shown by a simple example of two players and two machines.",
                "For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2.",
                "Then player 1 should never bid on machine 2 because it has no value to him.",
                "Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the Nash equilibrium.",
                "We should note that even the mixed strategy equilibrium does not exist in this example.",
                "Clearly, this happens whenever there is a resource that is wanted by only one player.",
                "To rule out this case, we consider those strongly competitive games.1 Under the infinite <br>parallelism</br> model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0.",
                "Under such a condition, we have that (see [5] for a proof), Theorem 1.",
                "There always exists a pure strategy Nash equilibrium in a strongly competitive game.",
                "Given the existence of the Nash equilibrium, the next important question is the performance at the Nash equilibrium, which is often measured by its efficiency and fairness.",
                "Efficiency (Price of Anarchy).",
                "For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω.",
                "Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities.",
                "The efficiency at an allocation scheme ω is defined as π(ω) = U(ω) U∗ .",
                "Let Ω0 denote the set of the allocation at the Nash equilibrium.",
                "When there exists Nash equilibrium, i.e.",
                "Ω0 = ∅, define the efficiency of a game Q to be π(Q) = minω∈Ω0 π(ω).",
                "It is usually the case that π < 1, i.e. there is an efficiency loss at a Nash equilibrium.",
                "This is the price of anarchy [18] paid for not having central enforcement of the users good behavior.",
                "This price is interesting because central control results in the best possible outcome, but is not possible in most cases.",
                "Fairness.",
                "While the definition of efficiency is standard, there are multiple ways to define fairness.",
                "We consider two metrics.",
                "One is by comparing the users utilities.",
                "The utility uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum utility and the maximum utility among the users.",
                "Such definition (or utility discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature.",
                "Under this definition, the utility uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω).",
                "The other metric extensively studied in Economics is the concept of envy-freeness [25].",
                "Unlike the utility uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive.",
                "Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine.",
                "These alternatives, however, introduce the problem of coming up with the right price or limit.",
                "When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme.",
                "Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3.",
                "NASH EQUILIBRIUM In this section, we present some theoretical results regarding the performance at Nash equilibrium under the infinite <br>parallelism</br> model.",
                "We assume that the game is strongly competitive to guarantee the existence of equilibria.",
                "For a meaningful discussion of efficiency and fairness, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same utility when they own all the resources.",
                "This precludes the case when a user has an extremely high budget, resulting in very low efficiency or low fairness at equilibrium.",
                "We first provide a characterization of the equilibria.",
                "By definition, the bidding vectors x1, . . . , xm is a Nash equilibrium if and only if each players strategy is the best response to the groups bids.",
                "Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid.",
                "Under the infinite <br>parallelism</br> model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e.",
                "U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties.",
                "We start with two special cases to provide some intuition about the game.",
                "The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games.",
                "Let x and y denote the respective bids of users 1 and 2 on machine 1.",
                "Denote by s = x + y and δ = (2 − s)/s.",
                "Equal-weight game.",
                "In Figure 1, both users have equal valuations for the two machines.",
                "By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α.",
                "Thus, there exists a unique Nash equilibrium of the game where the two users have the same bidding vector.",
                "At the equilibrium, the utility of each user is 1/2, and the social welfare is 1.",
                "On the other hand, the social optimum is clearly 1.",
                "Thus, the equal-weight game is ideal as the efficiency, utility uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games.",
                "Opposite-weight game.",
                "The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines.",
                "Assume that α ≥ 1/2.",
                "Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each Nash equilibrium corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1.",
                "Clearly, δ = 1 is a root of f(δ).",
                "When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine.",
                "At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828.",
                "However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria.",
                "Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid.",
                "In this case, user 1 gets most of machine 1 and almost half of machine 2.",
                "The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4.",
                "This solves to α0 = 2+ √ 2 4 ≈ 0.854.",
                "Those asymmetric equilibria at δ = 1 are bad as they yield lower efficiency than the symmetric equilibrium.",
                "Let δ0 be the minimum root.",
                "When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0.",
                "Then, x, y → 1.",
                "Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75.",
                "From the above simple game, we already observe that the Nash equilibrium may not be unique, which is different from many congestion games in which the Nash equilibrium is unique.",
                "For the general two player game, we can show that 0.75 is actually the worst efficiency bound with a proof in [5].",
                "Further, at the asymmetric equilibrium, the utility uniformity approaches 1/2 when α → 1.",
                "This is the worst possible for two player games because as we show in Section 3.2, a users utility at any Nash equilibrium is at least 1/m in the m-player game.",
                "Another consequence is that the two player game is always envy-free.",
                "Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively.",
                "Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free.",
                "Theorem 2.",
                "For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1.",
                "All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large.",
                "The following example shows the worst case bound.",
                "Consider a system with m = n2 + n players and n machines.",
                "Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine.",
                "The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines.",
                "Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine.",
                "Hence, the total money on each machine is n + 1.",
                "At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total utility of n3 · 1 n2(n+1) < 1.",
                "The other n players each receives 1 n+1 on their favorite machine, resulting in a total utility of n · 1 n+1 < 1.",
                "Therefore, the total utility of the equilibrium is < 2, while the social optimum is n = Θ( √ m).",
                "This bound is the worst possible.",
                "What about the utility uniformity of the multi-player allocation game?",
                "We next show that the utility uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i.",
                "User i can ensure a utility of 1/m by distributing his budget proportionally to the current bids.",
                "That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1.",
                "Therefore, rij = 1 1+m−1 = 1 m .",
                "The total utility of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m .",
                "Since each users utility cannot exceed 1, the minimal possible uniformity is 1/m.",
                "While the utility uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29].",
                "To summarize, we have that Theorem 3.",
                "For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2.",
                "All of these bounds are tight in the worst case. 4.",
                "ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite <br>parallelism</br> model.",
                "However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the Nash equilibrium for the typical distribution of utility functions.",
                "In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response algorithm leads to the equilibrium.",
                "To answer these questions, we resort to simulations.",
                "In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments.",
                "We consider both the infinite <br>parallelism</br> and finite <br>parallelism</br> model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most.",
                "We now present the algorithm for computing the best response.",
                "Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0.",
                "To compute the best response, we first sort wj yj in decreasing order.",
                "Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn .",
                "Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution.",
                "We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too.",
                "Suppose this were not true.",
                "Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) .",
                "Thus it contradicts with the optimality condition (1).",
                "Suppose that k = max{i|x∗ i > 0}.",
                "Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 .",
                "Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi .",
                "The remaining question is how to determine k. It is the largest value such that x∗ k > 0.",
                "Thus, we obtain the following algorithm to compute the best response of a user: 1.",
                "Sort the machines according to wi yi in decreasing order. 2.",
                "Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3.",
                "Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj.",
                "The computational complexity of this algorithm is O(n log n), dominated by the sorting.",
                "In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible.",
                "The best response algorithm must send and receive O(n) messages because each user must obtain the total bids from each host.",
                "In practice, this is more significant than the computational cost.",
                "Note that hosts only reveal to users the sum of the bids on them.",
                "As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite <br>parallelism</br> Model Recall that in the finite <br>parallelism</br> model, each user i only places bids on at most ki machines.",
                "Of course, the infinite <br>parallelism</br> model is just a special case of finite <br>parallelism</br> model in which ki = n for all the is.",
                "In the finite <br>parallelism</br> model, computing the social optimum is no longer trivial due to bounded <br>parallelism</br>.",
                "It can instead be computed by using the maximum matching algorithm.",
                "Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj).",
                "A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching.",
                "As a result, the following lemma holds.",
                "Lemma 1.",
                "The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching algorithm to compute the social optimum.",
                "The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14].",
                "We choose to implement the Hungarian algorithm [14, 19] because of its simplicity.",
                "There may exist a more efficient algorithm for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question.",
                "However, we do not know an efficient algorithm to compute the best response under the finite <br>parallelism</br> model.",
                "Instead, we provide the following local search heuristic.",
                "Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn.",
                "Let the users budget be X and the <br>parallelism</br> bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users utility.",
                "For a subset of machines A, denote by x(A) the best response on A without <br>parallelism</br> bound and by U(A) the utility obtained by the best response algorithm.",
                "The local search works as follows: 1.",
                "Set A to be the k machines with the highest wi/yi. 2.",
                "Compute U(A) by the infinite <br>parallelism</br> best response algorithm (Sec 4.1) on A. 3.",
                "For each i ∈ A and each j /∈ A, repeat 4.",
                "Let B = A − {i} + {j}, compute U(B). 5.",
                "If(U(B) > U(A)), let A ← B, and goto 2. 6.",
                "Output x(A).",
                "Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response utility.",
                "If yes, we swap the machines and repeat the process.",
                "Otherwise, we have reached a local maxima and output that value.",
                "We suspect that the local maxima that this algorithm finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it.",
                "However, in our simulations, this algorithm quickly converges to a high (≥ .7) efficiency. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear utility functions described earlier.",
                "In practice, utility functions may have more a complicated form, or even worse, a user may not have a formulation of his utility function.",
                "We do assume that the user still has a way to measure his utility, which is the minimum assumption necessary for any market-based resource allocation mechanism.",
                "In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows.",
                "A user finds the two machines that provide him with the highest and lowest marginal utility.",
                "He then moves a fixed small amount of money from the machine with low marginal utility to the machine with the higher one.",
                "This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same.",
                "This condition guarantees the allocation is the optimum when the utility function is concave.",
                "The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5.",
                "SIMULATION RESULTS While the analytic results provide us with worst-case analysis for the infinite <br>parallelism</br> model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite <br>parallelism</br> model.",
                "First, we determine whether the user bidding process converges, and if so, what the rate of convergence is.",
                "Second, in cases of convergence, we look at the performance at equilibrium, using the efficiency and fairness metrics defined above.",
                "Iterative Method.",
                "In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met.",
                "The initial bid is set proportional to the users weights on the machines.",
                "We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3.",
                "Convergence Criteria.",
                "Convergence time measures how quickly the system reaches equilibrium.",
                "It is particularly important in the highly dynamic environment of distributed shared clusters, in which the systems conditions may change before reaching the equilibrium.",
                "Thus, a high convergence rate may be more significant than the efficiency at the equilibrium.",
                "There are several different criteria for convergence.",
                "The strongest criterion is to require that there is only negligible change in the bids of each user.",
                "The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged.",
                "The less strict utility gap criterion requires there to be only negligible change in the users utility.",
                "Given users concern for utility, this is a more natural definition.",
                "Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small utility gain.",
                "Therefore, we use the utility gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the utility gap of each user is smaller than (0.001 in our experiments).",
                "However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in utility as they move money around.",
                "For this method, we use the marginal utility gap criterion.",
                "We compare the highest and lowest utility margins on the machines.",
                "If the difference is negligible, then we consider the system to be converged.",
                "In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion.",
                "Under this criterion, a system has stabilized if the change in social welfare is ≤ .",
                "Individual users utility may not have converged.",
                "This criterion is useful to evaluate how quickly the system as a whole reaches a particular efficiency level.",
                "User preferences.",
                "We experiment with two models of user preferences, random distribution and correlated distribution.",
                "With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution.",
                "In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run.",
                "To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth).",
                "For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk.",
                "By using these profiles, we compress the parameter space and introduce correlations between users and machines.",
                "In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users).",
                "Sections 5.1 and 5.2 present the simulation results when we apply the infinite <br>parallelism</br> and finite <br>parallelism</br> models, respectively.",
                "If the system converges, we report the number of iterations until convergence.",
                "A convergence time of 200 iterations indicates non-convergence, in which case we report the efficiency and fairness values at the point we terminate the simulation. 5.1 Infinite <br>parallelism</br> In this section, we apply the infinite <br>parallelism</br> model, which assumes that users can use an unlimited number of machines.",
                "We present the efficiency and fairness at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively).",
                "We present results for the two user preference models.",
                "With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter).",
                "In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1).",
                "Convergence Time.",
                "Figure 2 shows the convergence time, efficiency and fairness of the infinite <br>parallelism</br> model under uniform (left) and correlated (right) preferences.",
                "Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: Efficiency, utility uniformity, enviness and convergence time as a function of the number of users under the infinite <br>parallelism</br> model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite <br>parallelism</br> model. number of users = 40. n = 100.",
                "The best-response algorithm converges within a few number of iterations for any number of users.",
                "In contrast, the local greedy adjustment algorithm does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users.",
                "We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc.",
                "Regardless, the local greedy adjustment method stabilizes within 100 iterations.",
                "Figure 3 presents the efficiency over time for a system with 40 users.",
                "It demonstrates that while both adjustment methods reach the same social welfare, the best-response algorithm is faster.",
                "In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it.",
                "Efficiency.",
                "Figure 2 (c) and (d) present the efficiency as a function of the number of users.",
                "We present the efficiency at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison.",
                "Social optimum provides an efficient allocation by definition.",
                "For both user preference models, the efficiency at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum.",
                "The efficiency at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences.",
                "Fairness.",
                "Figure 2(e) and (f) present the utility uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness.",
                "While the social optimum yields perfect efficiency, it has poor fairness.",
                "The weightproportional method achieves the highest fairness among the three allocation methods, but the fairness at the equilibrium is close.",
                "The utility uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other.",
                "Although utility uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point.",
                "At the social optimum, utility uniformity can be infinitely poor, as some users may be allocated no resources at all.",
                "The same is true with respect to envy-freeness.",
                "The difference between uniform and correlated preferences is best demonstrated in the social optimum results.",
                "When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both utility uniformity and envy-freeness go to zero.",
                "As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation.",
                "These results demonstrate the tradeoff between the different allocation methods.",
                "The efficiency at the equilibrium is lower than the social optimum, but it performs much better with respect to fairness.",
                "The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite <br>parallelism</br> 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite <br>parallelism</br> model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 Efficiency Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: Efficiency level over time under the finite parallelism model with local search algorithm. n = 100.",
                "We also consider the finite <br>parallelism</br> model and use the local search algorithm, as described in Section 4.2, to adjust users bids.",
                "We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the simulation results for only the uniform distribution.",
                "In our experiments, the local search algorithm stops quickly - it usually discovers a local maximum within two iterations.",
                "As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high efficiency. 134 Convergence time.",
                "Let ∆ denote the <br>parallelism</br> bound that limits the maximum number of machines each user can bid on.",
                "We experiment with ∆ = 5 and ∆ = 20.",
                "In both cases, we use 100 machines and vary the number of users.",
                "Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly.",
                "The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20.",
                "We believe that the non-convergence is caused by moderate competition.",
                "No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids.",
                "High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence.",
                "However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids.",
                "In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2].",
                "Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall efficiency after a few iterations (as shown in Figure 5).",
                "Performance.",
                "In Figure 6, we present the efficiency, utility uniformity, and envy-freeness at the Nash equilibrium for the finite <br>parallelism</br> model.",
                "When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations.",
                "When ∆ = 5, there is a performance drop, in particular with respect to the fairness metrics, in the range between 20 and 40 users (where it does not converge).",
                "For a larger number of users, the system converges and achieves a lower level of utility uniformity, but a high degree of efficiency and envy-freeness, similar to those under the infinite <br>parallelism</br> model.",
                "As described above, this is due the competition ratio falling into the head-to-head range.",
                "When the <br>parallelism</br> bound is large (∆ = 20), the performance is closer to the infinite <br>parallelism</br> model, and we do not observe this drop in performance. 6.",
                "RELATED WORK There are two main groups of related work in resource allocation: those that incorporate an economic mechanism, and those that do not.",
                "One non-economic approach is scheduling (surveyed by Pinedo [20]).",
                "Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19].",
                "These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users.",
                "We view scheduling and resource allocation as two separate functions.",
                "Resource allocation divides a resource among different users while scheduling takes a given allocation and orders a users jobs.",
                "Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]).",
                "Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated.",
                "Unfortunately, reservations have a high latency to acquire resources, unlike the price-anticipating scheme we consider.",
                "The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive.",
                "Bellagio[3] uses the SHARE centralized allocator.",
                "SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities.",
                "Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation.",
                "The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some efficiency, but it also avoids the complexity and overhead of combinatorial auctions.",
                "There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows.",
                "Their methodology follows the study of congestion (potential) games [17, 22] by relating the Nash equilibrium to the solution of a (usually convex) global optimization problem.",
                "But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines.",
                "For example, unlike those games, there may exist multiple Nash equilibria in our game.",
                "Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7.",
                "CONCLUSIONS This work studies the performance of a market-based mechanism for distributed shared clusters using both analyatical and simulation methods.",
                "We show that despite the worst case bounds, the system can reach a high performance level at the Nash equilibrium in terms of both efficiency and fairness metrics.",
                "In addition, with a few exceptions under the finite <br>parallelism</br> model, the system reaches equilibrium quickly by using the best response algorithm and, when the number of users is not too small, by the greedy local adjustment method.",
                "While our work indicates that the price-anticipating scheme may work well for resource allocation for shared clusters, there are many interesting directions for future work.",
                "One direction is to consider more realistic utility functions.",
                "For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine.",
                "In practice, both assumptions may not be correct.",
                "For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine.",
                "When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling.",
                "Another assumption is that users have infinite work, so the more resources they can acquire, the better.",
                "In practice, users have finite work.",
                "One approach to address this is to model the users utility according to the time to finish a task rather than the amount of resources he receives.",
                "Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model.",
                "In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user Efficiency Utility uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user Efficiency Utility uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite <br>parallelism</br> model. n = 100. 8.",
                "ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions.",
                "We also thank the anonymous reviewers for their useful comments. 9.",
                "REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat.",
                "Resource Allocation in Federated Distributed Computing Infrastructures.",
                "In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat.",
                "Computational Resource Exchanges for Distributed Resource Allocation. 2004. [4] B. N. Chun and D. E. Culler.",
                "Market-based Proportional Resource Sharing for Clusters.",
                "Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang.",
                "A Price-anticipating Resource Allocation Mechanism for Distributed Shared Clusters.",
                "Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou.",
                "Microeconomic Algorithms for Load Balancing in Distributed Computer Systems.",
                "In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan.",
                "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.",
                "Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow.",
                "Data Structures for Weighted Matching and Nearest Common Ancestors with Linking.",
                "In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang.",
                "Strategic Buyers in a Sum Bid Game for Flat Networks.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis.",
                "Efficiency Loss in a Network Resource Allocation Game.",
                "Mathematics of Operations Research, 2004. [12] F. P. Kelly.",
                "Charging and Rate Control for Elastic Traffic.",
                "European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo.",
                "Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability.",
                "Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn.",
                "The Hungarian Method for the Assignment Problem.",
                "Naval Res.",
                "Logis.",
                "Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B.",
                "A. Huberman.",
                "Tycoon: an Implemention of a Distributed Market-Based Resource Allocation System.",
                "Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich.",
                "Congestion Games with Player-Specific Payoff Functions.",
                "Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley.",
                "Potential Games.",
                "Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou.",
                "Algorithms, Games, and the Internet.",
                "In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz.",
                "Combinatorial Optimization.",
                "Dover Publications, Inc., 1982. [20] M. Pinedo.",
                "Scheduling.",
                "Prentice Hall, 2002. [21] O. Regev and N. Nisan.",
                "The Popcorn Market: Online Markets for Computational Resources.",
                "In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal.",
                "A Class of Games Possessing Pure-Strategy Nash Equilibria.",
                "Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek.",
                "Optimal Allocation of a Divisible Good to Strategic Buyers.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen.",
                "A Microeconomic Scheduler for Parallel Computers.",
                "In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian.",
                "Equity, Envy, and Efficiency.",
                "Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B.",
                "A. Huberman, J. O. Kephart, and S. Stornetta.",
                "Spawn: A Distributed Computational Economy.",
                "IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason.",
                "Auction Protocols for Decentralized Scheduling.",
                "Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter.",
                "Classifying Scheduling Policies with respect to Unfairness in an M/GI/1.",
                "In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang.",
                "On the Efficiency and Fairness of a Fixed Budget Resource Allocation Game.",
                "Manuscript, 2004. 136"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Presentamos variaciones del mejor algoritmo de respuesta para tareas finitas e infinitas de \"paralelismo\".paralelismo",
                "Describimos el modelo en la Sección 2 y derivamos el rendimiento en los equilibrios de Nash para el modelo infinito de \"paralelismo\" en la Sección 3. Paralelismo",
                "Nuestra definición de funciones de utilidad corresponde a que el usuario tenga suficientes trabajos o suficiente \"paralelismo\" dentro de los trabajos para utilizar todas las máquinas.paralelismo",
                "Llamamos a esto el modelo infinito de \"paralelismo\".paralelismo",
                "Para modelar esto, también consideramos el modelo de \"paralelismo\" más realista, donde el \"paralelismo\" de los usuarios está limitado por KI, y la interfaz de usuario de la utilidad de los usuarios es la suma de la KI más grande Wijrij.paralelismo",
                "Más tarde mostraremos cómo resolverlo para el modelo infinito \"paralelismo\" y proporcionaremos una heurística para el modelo finito de \"paralelismo\".paralelismo",
                "Para descartar este caso, consideramos esos juegos fuertemente competitivos.1 bajo el modelo infinito \"paralelismo\", un juego se llama muy competitivo si por 1 ≤ j ≤ n, existe un i = k tal que wij, wkj> 0. Paralelismo",
                "Equilibrio de Nash En esta sección, presentamos algunos resultados teóricos con respecto al rendimiento en el equilibrio de Nash bajo el modelo infinito \"paralelismo\".paralelismo",
                "Bajo el modelo infinito de \"paralelismo\", es fácil calcular el óptimo social U ∗ a medida que se logra cuando asignamos cada máquina totalmente a la persona que tiene el peso máximo en la máquina, es decir, paralelismo",
                "Algoritmos En la sección anterior, presentamos los límites de rendimiento del juego bajo el modelo de \"paralelismo\" infinito.paralelismo",
                "Consideramos tanto el modelo infinito de \"paralelismo\" y finito \"paralelismo\".130 4.1 Modelo de paralelismo infinito Como mencionamos antes, es fácil calcular el óptimo social bajo el modelo de paralelismo infinito: simplemente asignamos cada máquina al usuario que más le gusta.paralelismo",
                "Como resultado, los anfitriones no revelan las preferencias privadas e incluso las ofertas individuales de un usuario a otro.4.2 El modelo de \"paralelismo\" finito recuerda que en el modelo finito \"paralelismo\", cada usuario que solo realiza ofertas en la mayoría de las máquinas KI.paralelismo",
                "Por supuesto, el modelo de \"paralelismo\" infinito es solo un caso especial de modelo de \"paralelismo finito\" en el que Ki = n para todo el IS.paralelismo",
                "En el modelo de \"paralelismo\" finito, calcular el óptimo social ya no es trivial debido al \"paralelismo\" limitado.paralelismo",
                "Sin embargo, no conocemos un algoritmo eficiente para calcular la mejor respuesta bajo el modelo de \"paralelismo\" finito.paralelismo",
                "Deje que el presupuesto de los usuarios sea x y el \"paralelismo\" vincule k.Nuestro objetivo es calcular una asignación de X a las máquinas hasta K para maximizar la utilidad de los usuarios.paralelismo",
                "Para un subconjunto de máquinas A, denota por x (a) la mejor respuesta en un sin \"paralelismo\" atado y por u (a) la utilidad obtenida por el algoritmo de mejor respuesta.paralelismo",
                "Calcule u (a) por el infinito algoritmo de mejor respuesta \"paralelismo\" (Sec 4.1) en A. 3. Paralelismo",
                "Resultados de la simulación Si bien los resultados analíticos nos proporcionan un análisis en el peor de los casos para el modelo de \"paralelismo\" infinito, en esta sección empleamos simulaciones para estudiar las propiedades de los equilibrios NASH en escenarios más realistas y para el modelo de \"paralelismo\" finito.paralelismo",
                "Las secciones 5.1 y 5.2 presentan los resultados de la simulación cuando aplicamos los modelos infinitos de \"paralelismo\" y \"paralelismo\" finitos, respectivamente.paralelismo",
                "Un tiempo de convergencia de 200 iteraciones indica no convergencia, en cuyo caso informamos los valores de eficiencia y equidad en el punto en que terminamos la simulación.5.1 \"Paralelismo\" infinito En esta sección, aplicamos el modelo infinito \"paralelismo\", que supone que los usuarios pueden usar un número ilimitado de máquinas.paralelismo",
                "La Figura 2 muestra el tiempo de convergencia, la eficiencia y la equidad del modelo infinito de \"paralelismo\" bajo preferencias uniformes (izquierda) y correlacionada (derecha).paralelismo",
                "Las parcelas (a) y (b) muestran el tiempo de convergencia y estabilización de los métodos de ajuste locales y de ajuste locales.132 0 50 100 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime (#Iterations) Número de usuarios Preferencias uniformes (a) Best-respuesta codiciosa (convergencia) codicioso (estabilización) 0 50 100 150 200 0 20 40 60 100 100 100120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional SocialÓptimo 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de usuarios (D) Equilibrio de Nash Pesaje Proporciones Social 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 UtilityuniformityNúmero de usuarios (e) equilibrio NASH peso-proporción óptimo social 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 0.9 1 0 20 40 60 80 100 120 140 160 Número de usuarios (F) Equilibrio NASH Peso Proporción Social óptimo 0 0.2 0.4 0.6 0.8 0.8 0.8 0.8 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.81 0 20 40 60 80 100 120 140 160 Número de envidia de envidia de usuarios (g) Equilibrio de Nash Peso proporcional Optimo Social 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de usuarios (H) Equilibrio NASH PROPORTALFigura 2 de óptimo social: eficiencia, uniformidad de utilidad, envidia y tiempo de convergencia en función del número de usuarios bajo el modelo infinito de \"paralelismo\", con preferencias uniformes y correlacionadas.n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Eficiencia Número de iteración Mejor respuesta codiciosa Figura 3: Eficiencia nivel con el tiempo bajo el modelo infinito \"paralelismo\".número de usuarios = 40. n = 100. Paralelismo",
                "La asignación de equilibrio es completamente libre de envidia bajo preferencias uniformes y casi sin envidia bajo preferencias correlacionadas.5.2 \"Paralelismo\" finito 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 ConvergenceTime (#Iterations) Número de usuarios 5 máquinas/usuario 20 máquinas/usuario Figura 4: Tiempo de convergencia bajo el modelo de \"paralelismo\" finito.n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 iteración de eficiencia Número 5-máquinas/usuario (40 usuarios) 20 máquinas/usuario (10 usuarios) Figura 5: nivel de eficiencia con el tiempo bajo el modelo de paralelismo finito con localAlgoritmo de búsqueda.n = 100. Paralelismo",
                "También consideramos el modelo de \"paralelismo\" finito y utilizamos el algoritmo de búsqueda local, como se describe en la Sección 4.2, para ajustar las ofertas de los usuarios.paralelismo",
                "Deje que ∆ denote el \"paralelismo\" que limita el número máximo de máquinas en las que puede ofertar cada usuario.paralelismo",
                "En la Figura 6, presentamos la eficiencia, la uniformidad de la utilidad y la intensidad de envidia en el equilibrio de Nash para el modelo finito \"paralelismo\".paralelismo",
                "Para un mayor número de usuarios, el sistema converge y logra un nivel más bajo de uniformidad de utilidad, pero un alto grado de eficiencia y envidia, similar a las del modelo infinito de \"paralelismo\".paralelismo",
                "Cuando el límite del \"paralelismo\" es grande (∆ = 20), el rendimiento está más cerca del modelo infinito \"paralelismo\", y no observamos esta caída en el rendimiento.6. Paralelismo",
                "Además, con algunas excepciones bajo el modelo de \"paralelismo\" finito, el sistema alcanza el equilibrio rápidamente al usar el mejor algoritmo de respuesta y, cuando el número de usuarios no es demasiado pequeño, por el método de ajuste local codicioso.paralelismo",
                "Además de las preguntas habituales sobre los juegos repetidos, también sería importante comprender cómo los usuarios deben asignar sus presupuestos sabiamente con el tiempo para acomodar las necesidades futuras.135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de usuarios (a) Límite: 5 máquinas/eficiencia de usuario Utility Uniformity Envy-Freenness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 30 50 60 70 80 90Número de usuarios (b) Límite: 20 máquinas/eficiencia del usuario Utilidad Uniformidad de envidia Figura 6: Eficiencia, uniformidad de utilidad y envidia de envidia bajo el modelo finito \"paralelismo\".n = 100. 8. Paralelismo"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "simulation": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Price-Anticipating Resource Allocation Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget resource allocation game to understand the performance of a distributed marketbased resource allocation system.",
                "Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual utility.",
                "We look at both the efficiency and the fairness of the allocation at the equilibrium, where fairness is evaluated through the measures of utility uniformity and envy-freeness.",
                "We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high efficiency but poor fairness, the proposed allocation scheme achieves a nice balance of high degrees of efficiency and fairness at the equilibrium.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1.",
                "INTRODUCTION The primary advantage of distributed shared clusters like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources.",
                "This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users.",
                "Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users.",
                "Finally, sharing allows greater reliability because of redundancy in hosts and network connections.",
                "However, resource allocation in these systems remains the major challenge.",
                "The problem is how to allocate a shared resource both fairly and efficiently (where efficiency is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests.",
                "Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator.",
                "However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set.",
                "Instead, we examine a market-based resource allocation system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a bidding mechanism.",
                "In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource.",
                "This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26].",
                "Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets.",
                "In this work, we examine a price-anticipating scheme in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6).",
                "In this paper, we formulate the fixed budget resource allocation game and study the existence and performance of the Nash equilibria of this game.",
                "For evaluating the Nash equilibria, we consider both their efficiency, measuring how close the social welfare at equilibrium is to the social optimum, and fairness, measuring how different the users utilities are.",
                "Although rarely considered in previous game theoretical study, we believe fairness is a critical metric for a resource allocation schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair resource allocation in favor of one with less efficient, more fair resource allocation.",
                "We use both utility uniformity and envy-freeness to measure fairness.",
                "Utility uniformity, which is common in Computer Science work, measures the closeness of utilities of different users.",
                "Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others.",
                "Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria.",
                "Using analysis, we show that there is always a Nash equilibrium in the fixed budget game if the utility functions satisfy a fairly weak and natural condition of strong competitiveness.",
                "We also show the worst case performance bounds: for m players the efficiency at equilibrium is Ω(1/ √ m), the utility uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83.",
                "Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their utility.",
                "As part of the fixed budget game analysis, we show that strategic users with linear utility functions can calculate their bids using a best response algorithm that quickly results in an allocation with high efficiency with little computational and communication overhead.",
                "We present variations of the best response algorithm for both finite and infinite parallelism tasks.",
                "In addition, we present a local greedy adjustment algorithm that converges more slowly than best response, but allows for non-linear or unformulatable utility functions. • We show that the price-anticipating resource allocation mechanism achieves a high degree of efficiency and fairness.",
                "Using <br>simulation</br>, we find that although the socially optimal allocation results in perfect efficiency, it also results in very poor fairness.",
                "Likewise, allocating according to only users preference weights results in a high fairness, but a mediocre efficiency.",
                "Intuition would suggest that efficiency and fairness are exclusive.",
                "Surprisingly, the Nash equilibrium, reached by each user iteratively applying the best response algorithm to adapt his bids, achieves nearly the efficiency of the social optimum and nearly the fairness of the weight-proportional allocation: the efficiency is ≥ 0.90, the utility uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system.",
                "In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy.",
                "The local adjustment algorithm performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize.",
                "As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of efficiency and fairness.",
                "The rest of the paper is organized as follows.",
                "We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite parallelism model in Section 3.",
                "In Section 4, we describe algorithms for users to optimize their own utility in the fixed budget game.",
                "In Section 5, we describe our simulator and <br>simulation</br> results.",
                "We describe related work in Section 6.",
                "We conclude by discussing some limit of our model and future work in Section 7. 2.",
                "THE MODEL Price-Anticipating Resource Allocation.",
                "We study the problem of allocating a set of divisible resources (or machines).",
                "Suppose that there are m users and n machines.",
                "Each machine can be continuously divided for allocation to multiple users.",
                "An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1.",
                "Let Ω denote the set of all the allocation schemes.",
                "We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed.",
                "Formally, suppose that user i submits a non-negative bid xij to machine j.",
                "The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j.",
                "When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone.",
                "We call xi = (xi1, . . . , xin) the bidding vector of user i.",
                "The additional consideration we have is that each user i has a budget constraint Xi.",
                "Therefore, user is total bids have to sum up to his budget, i.e.",
                "Pn j=1 xij = Xi.",
                "The budget constraints come from the fact that the users do not have infinite budget.",
                "Utility Functions.",
                "Each user is utility is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine.",
                "Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines.",
                "Therefore, the basic utility function we consider is the linear utility function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j.",
                "For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications.",
                "As a result, w11 > w12 and w21 < w22.",
                "Our definition of utility functions corresponds to the user having enough jobs or enough parallelism within jobs to utilize all the machines.",
                "Consequently, the users goal is to grab as much of a resource as possible.",
                "We call this the infinite parallelism model.",
                "In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity).",
                "To model this, we also consider the more realistic finite parallelism model, where the users parallelism is bounded by ki, and the users utility Ui is the sum of the ki largest wijrij.",
                "In this model, the user only submits bids to up to ki machines.",
                "Our abstraction is to capture the essense of the problem and facilitate our analysis.",
                "In Section 7, we discuss the limit of the above definition of utility functions.",
                "Best Response.",
                "As typically, we assume the users are selfish and strategic - they all act to maximize their own utility, defined by their utility functions.",
                "From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0.",
                "The difficulty of the above optimization problem depends on the formulation of Ui.",
                "We will show later how to solve it for the infinite parallelism model and provide a heuristic for finite parallelism model.",
                "Nash Equilibrium.",
                "By the assumption that the user is selfish, each users bidding vector is the best response to the system.",
                "The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users.",
                "Such a state is known as the Nash equilibrium, a central concept in Game Theory.",
                "Formally, the bidding vectors x1, . . . , xm is a Nash equilibrium if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) .",
                "The Nash equilibrium is desirable because it is a stable state at which no one has incentive to change his strategy.",
                "But a game may not have an equilibrium.",
                "Indeed, a Nash equilibrium may not exist in the price anticipating scheme we define above.",
                "This can be shown by a simple example of two players and two machines.",
                "For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2.",
                "Then player 1 should never bid on machine 2 because it has no value to him.",
                "Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the Nash equilibrium.",
                "We should note that even the mixed strategy equilibrium does not exist in this example.",
                "Clearly, this happens whenever there is a resource that is wanted by only one player.",
                "To rule out this case, we consider those strongly competitive games.1 Under the infinite parallelism model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0.",
                "Under such a condition, we have that (see [5] for a proof), Theorem 1.",
                "There always exists a pure strategy Nash equilibrium in a strongly competitive game.",
                "Given the existence of the Nash equilibrium, the next important question is the performance at the Nash equilibrium, which is often measured by its efficiency and fairness.",
                "Efficiency (Price of Anarchy).",
                "For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω.",
                "Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities.",
                "The efficiency at an allocation scheme ω is defined as π(ω) = U(ω) U∗ .",
                "Let Ω0 denote the set of the allocation at the Nash equilibrium.",
                "When there exists Nash equilibrium, i.e.",
                "Ω0 = ∅, define the efficiency of a game Q to be π(Q) = minω∈Ω0 π(ω).",
                "It is usually the case that π < 1, i.e. there is an efficiency loss at a Nash equilibrium.",
                "This is the price of anarchy [18] paid for not having central enforcement of the users good behavior.",
                "This price is interesting because central control results in the best possible outcome, but is not possible in most cases.",
                "Fairness.",
                "While the definition of efficiency is standard, there are multiple ways to define fairness.",
                "We consider two metrics.",
                "One is by comparing the users utilities.",
                "The utility uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum utility and the maximum utility among the users.",
                "Such definition (or utility discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature.",
                "Under this definition, the utility uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω).",
                "The other metric extensively studied in Economics is the concept of envy-freeness [25].",
                "Unlike the utility uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive.",
                "Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine.",
                "These alternatives, however, introduce the problem of coming up with the right price or limit.",
                "When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme.",
                "Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3.",
                "NASH EQUILIBRIUM In this section, we present some theoretical results regarding the performance at Nash equilibrium under the infinite parallelism model.",
                "We assume that the game is strongly competitive to guarantee the existence of equilibria.",
                "For a meaningful discussion of efficiency and fairness, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same utility when they own all the resources.",
                "This precludes the case when a user has an extremely high budget, resulting in very low efficiency or low fairness at equilibrium.",
                "We first provide a characterization of the equilibria.",
                "By definition, the bidding vectors x1, . . . , xm is a Nash equilibrium if and only if each players strategy is the best response to the groups bids.",
                "Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid.",
                "Under the infinite parallelism model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e.",
                "U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties.",
                "We start with two special cases to provide some intuition about the game.",
                "The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games.",
                "Let x and y denote the respective bids of users 1 and 2 on machine 1.",
                "Denote by s = x + y and δ = (2 − s)/s.",
                "Equal-weight game.",
                "In Figure 1, both users have equal valuations for the two machines.",
                "By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α.",
                "Thus, there exists a unique Nash equilibrium of the game where the two users have the same bidding vector.",
                "At the equilibrium, the utility of each user is 1/2, and the social welfare is 1.",
                "On the other hand, the social optimum is clearly 1.",
                "Thus, the equal-weight game is ideal as the efficiency, utility uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games.",
                "Opposite-weight game.",
                "The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines.",
                "Assume that α ≥ 1/2.",
                "Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each Nash equilibrium corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1.",
                "Clearly, δ = 1 is a root of f(δ).",
                "When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine.",
                "At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828.",
                "However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria.",
                "Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid.",
                "In this case, user 1 gets most of machine 1 and almost half of machine 2.",
                "The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4.",
                "This solves to α0 = 2+ √ 2 4 ≈ 0.854.",
                "Those asymmetric equilibria at δ = 1 are bad as they yield lower efficiency than the symmetric equilibrium.",
                "Let δ0 be the minimum root.",
                "When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0.",
                "Then, x, y → 1.",
                "Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75.",
                "From the above simple game, we already observe that the Nash equilibrium may not be unique, which is different from many congestion games in which the Nash equilibrium is unique.",
                "For the general two player game, we can show that 0.75 is actually the worst efficiency bound with a proof in [5].",
                "Further, at the asymmetric equilibrium, the utility uniformity approaches 1/2 when α → 1.",
                "This is the worst possible for two player games because as we show in Section 3.2, a users utility at any Nash equilibrium is at least 1/m in the m-player game.",
                "Another consequence is that the two player game is always envy-free.",
                "Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively.",
                "Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free.",
                "Theorem 2.",
                "For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1.",
                "All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large.",
                "The following example shows the worst case bound.",
                "Consider a system with m = n2 + n players and n machines.",
                "Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine.",
                "The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines.",
                "Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine.",
                "Hence, the total money on each machine is n + 1.",
                "At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total utility of n3 · 1 n2(n+1) < 1.",
                "The other n players each receives 1 n+1 on their favorite machine, resulting in a total utility of n · 1 n+1 < 1.",
                "Therefore, the total utility of the equilibrium is < 2, while the social optimum is n = Θ( √ m).",
                "This bound is the worst possible.",
                "What about the utility uniformity of the multi-player allocation game?",
                "We next show that the utility uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i.",
                "User i can ensure a utility of 1/m by distributing his budget proportionally to the current bids.",
                "That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1.",
                "Therefore, rij = 1 1+m−1 = 1 m .",
                "The total utility of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m .",
                "Since each users utility cannot exceed 1, the minimal possible uniformity is 1/m.",
                "While the utility uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29].",
                "To summarize, we have that Theorem 3.",
                "For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2.",
                "All of these bounds are tight in the worst case. 4.",
                "ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite parallelism model.",
                "However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the Nash equilibrium for the typical distribution of utility functions.",
                "In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response algorithm leads to the equilibrium.",
                "To answer these questions, we resort to simulations.",
                "In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments.",
                "We consider both the infinite parallelism and finite parallelism model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most.",
                "We now present the algorithm for computing the best response.",
                "Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0.",
                "To compute the best response, we first sort wj yj in decreasing order.",
                "Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn .",
                "Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution.",
                "We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too.",
                "Suppose this were not true.",
                "Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) .",
                "Thus it contradicts with the optimality condition (1).",
                "Suppose that k = max{i|x∗ i > 0}.",
                "Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 .",
                "Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi .",
                "The remaining question is how to determine k. It is the largest value such that x∗ k > 0.",
                "Thus, we obtain the following algorithm to compute the best response of a user: 1.",
                "Sort the machines according to wi yi in decreasing order. 2.",
                "Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3.",
                "Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj.",
                "The computational complexity of this algorithm is O(n log n), dominated by the sorting.",
                "In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible.",
                "The best response algorithm must send and receive O(n) messages because each user must obtain the total bids from each host.",
                "In practice, this is more significant than the computational cost.",
                "Note that hosts only reveal to users the sum of the bids on them.",
                "As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite Parallelism Model Recall that in the finite parallelism model, each user i only places bids on at most ki machines.",
                "Of course, the infinite parallelism model is just a special case of finite parallelism model in which ki = n for all the is.",
                "In the finite parallelism model, computing the social optimum is no longer trivial due to bounded parallelism.",
                "It can instead be computed by using the maximum matching algorithm.",
                "Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj).",
                "A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching.",
                "As a result, the following lemma holds.",
                "Lemma 1.",
                "The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching algorithm to compute the social optimum.",
                "The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14].",
                "We choose to implement the Hungarian algorithm [14, 19] because of its simplicity.",
                "There may exist a more efficient algorithm for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question.",
                "However, we do not know an efficient algorithm to compute the best response under the finite parallelism model.",
                "Instead, we provide the following local search heuristic.",
                "Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn.",
                "Let the users budget be X and the parallelism bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users utility.",
                "For a subset of machines A, denote by x(A) the best response on A without parallelism bound and by U(A) the utility obtained by the best response algorithm.",
                "The local search works as follows: 1.",
                "Set A to be the k machines with the highest wi/yi. 2.",
                "Compute U(A) by the infinite parallelism best response algorithm (Sec 4.1) on A. 3.",
                "For each i ∈ A and each j /∈ A, repeat 4.",
                "Let B = A − {i} + {j}, compute U(B). 5.",
                "If(U(B) > U(A)), let A ← B, and goto 2. 6.",
                "Output x(A).",
                "Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response utility.",
                "If yes, we swap the machines and repeat the process.",
                "Otherwise, we have reached a local maxima and output that value.",
                "We suspect that the local maxima that this algorithm finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it.",
                "However, in our simulations, this algorithm quickly converges to a high (≥ .7) efficiency. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear utility functions described earlier.",
                "In practice, utility functions may have more a complicated form, or even worse, a user may not have a formulation of his utility function.",
                "We do assume that the user still has a way to measure his utility, which is the minimum assumption necessary for any market-based resource allocation mechanism.",
                "In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows.",
                "A user finds the two machines that provide him with the highest and lowest marginal utility.",
                "He then moves a fixed small amount of money from the machine with low marginal utility to the machine with the higher one.",
                "This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same.",
                "This condition guarantees the allocation is the optimum when the utility function is concave.",
                "The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5.",
                "<br>simulation</br> RESULTS While the analytic results provide us with worst-case analysis for the infinite parallelism model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite parallelism model.",
                "First, we determine whether the user bidding process converges, and if so, what the rate of convergence is.",
                "Second, in cases of convergence, we look at the performance at equilibrium, using the efficiency and fairness metrics defined above.",
                "Iterative Method.",
                "In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met.",
                "The initial bid is set proportional to the users weights on the machines.",
                "We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3.",
                "Convergence Criteria.",
                "Convergence time measures how quickly the system reaches equilibrium.",
                "It is particularly important in the highly dynamic environment of distributed shared clusters, in which the systems conditions may change before reaching the equilibrium.",
                "Thus, a high convergence rate may be more significant than the efficiency at the equilibrium.",
                "There are several different criteria for convergence.",
                "The strongest criterion is to require that there is only negligible change in the bids of each user.",
                "The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged.",
                "The less strict utility gap criterion requires there to be only negligible change in the users utility.",
                "Given users concern for utility, this is a more natural definition.",
                "Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small utility gain.",
                "Therefore, we use the utility gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the utility gap of each user is smaller than (0.001 in our experiments).",
                "However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in utility as they move money around.",
                "For this method, we use the marginal utility gap criterion.",
                "We compare the highest and lowest utility margins on the machines.",
                "If the difference is negligible, then we consider the system to be converged.",
                "In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion.",
                "Under this criterion, a system has stabilized if the change in social welfare is ≤ .",
                "Individual users utility may not have converged.",
                "This criterion is useful to evaluate how quickly the system as a whole reaches a particular efficiency level.",
                "User preferences.",
                "We experiment with two models of user preferences, random distribution and correlated distribution.",
                "With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution.",
                "In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run.",
                "To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth).",
                "For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk.",
                "By using these profiles, we compress the parameter space and introduce correlations between users and machines.",
                "In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users).",
                "Sections 5.1 and 5.2 present the <br>simulation</br> results when we apply the infinite parallelism and finite parallelism models, respectively.",
                "If the system converges, we report the number of iterations until convergence.",
                "A convergence time of 200 iterations indicates non-convergence, in which case we report the efficiency and fairness values at the point we terminate the <br>simulation</br>. 5.1 Infinite parallelism In this section, we apply the infinite parallelism model, which assumes that users can use an unlimited number of machines.",
                "We present the efficiency and fairness at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively).",
                "We present results for the two user preference models.",
                "With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter).",
                "In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1).",
                "Convergence Time.",
                "Figure 2 shows the convergence time, efficiency and fairness of the infinite parallelism model under uniform (left) and correlated (right) preferences.",
                "Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: Efficiency, utility uniformity, enviness and convergence time as a function of the number of users under the infinite parallelism model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite parallelism model. number of users = 40. n = 100.",
                "The best-response algorithm converges within a few number of iterations for any number of users.",
                "In contrast, the local greedy adjustment algorithm does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users.",
                "We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc.",
                "Regardless, the local greedy adjustment method stabilizes within 100 iterations.",
                "Figure 3 presents the efficiency over time for a system with 40 users.",
                "It demonstrates that while both adjustment methods reach the same social welfare, the best-response algorithm is faster.",
                "In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it.",
                "Efficiency.",
                "Figure 2 (c) and (d) present the efficiency as a function of the number of users.",
                "We present the efficiency at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison.",
                "Social optimum provides an efficient allocation by definition.",
                "For both user preference models, the efficiency at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum.",
                "The efficiency at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences.",
                "Fairness.",
                "Figure 2(e) and (f) present the utility uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness.",
                "While the social optimum yields perfect efficiency, it has poor fairness.",
                "The weightproportional method achieves the highest fairness among the three allocation methods, but the fairness at the equilibrium is close.",
                "The utility uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other.",
                "Although utility uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point.",
                "At the social optimum, utility uniformity can be infinitely poor, as some users may be allocated no resources at all.",
                "The same is true with respect to envy-freeness.",
                "The difference between uniform and correlated preferences is best demonstrated in the social optimum results.",
                "When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both utility uniformity and envy-freeness go to zero.",
                "As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation.",
                "These results demonstrate the tradeoff between the different allocation methods.",
                "The efficiency at the equilibrium is lower than the social optimum, but it performs much better with respect to fairness.",
                "The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite parallelism 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite parallelism model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 Efficiency Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: Efficiency level over time under the finite parallelism model with local search algorithm. n = 100.",
                "We also consider the finite parallelism model and use the local search algorithm, as described in Section 4.2, to adjust users bids.",
                "We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the <br>simulation</br> results for only the uniform distribution.",
                "In our experiments, the local search algorithm stops quickly - it usually discovers a local maximum within two iterations.",
                "As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high efficiency. 134 Convergence time.",
                "Let ∆ denote the parallelism bound that limits the maximum number of machines each user can bid on.",
                "We experiment with ∆ = 5 and ∆ = 20.",
                "In both cases, we use 100 machines and vary the number of users.",
                "Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly.",
                "The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20.",
                "We believe that the non-convergence is caused by moderate competition.",
                "No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids.",
                "High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence.",
                "However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids.",
                "In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2].",
                "Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall efficiency after a few iterations (as shown in Figure 5).",
                "Performance.",
                "In Figure 6, we present the efficiency, utility uniformity, and envy-freeness at the Nash equilibrium for the finite parallelism model.",
                "When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations.",
                "When ∆ = 5, there is a performance drop, in particular with respect to the fairness metrics, in the range between 20 and 40 users (where it does not converge).",
                "For a larger number of users, the system converges and achieves a lower level of utility uniformity, but a high degree of efficiency and envy-freeness, similar to those under the infinite parallelism model.",
                "As described above, this is due the competition ratio falling into the head-to-head range.",
                "When the parallelism bound is large (∆ = 20), the performance is closer to the infinite parallelism model, and we do not observe this drop in performance. 6.",
                "RELATED WORK There are two main groups of related work in resource allocation: those that incorporate an economic mechanism, and those that do not.",
                "One non-economic approach is scheduling (surveyed by Pinedo [20]).",
                "Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19].",
                "These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users.",
                "We view scheduling and resource allocation as two separate functions.",
                "Resource allocation divides a resource among different users while scheduling takes a given allocation and orders a users jobs.",
                "Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]).",
                "Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated.",
                "Unfortunately, reservations have a high latency to acquire resources, unlike the price-anticipating scheme we consider.",
                "The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive.",
                "Bellagio[3] uses the SHARE centralized allocator.",
                "SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities.",
                "Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation.",
                "The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some efficiency, but it also avoids the complexity and overhead of combinatorial auctions.",
                "There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows.",
                "Their methodology follows the study of congestion (potential) games [17, 22] by relating the Nash equilibrium to the solution of a (usually convex) global optimization problem.",
                "But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines.",
                "For example, unlike those games, there may exist multiple Nash equilibria in our game.",
                "Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7.",
                "CONCLUSIONS This work studies the performance of a market-based mechanism for distributed shared clusters using both analyatical and <br>simulation</br> methods.",
                "We show that despite the worst case bounds, the system can reach a high performance level at the Nash equilibrium in terms of both efficiency and fairness metrics.",
                "In addition, with a few exceptions under the finite parallelism model, the system reaches equilibrium quickly by using the best response algorithm and, when the number of users is not too small, by the greedy local adjustment method.",
                "While our work indicates that the price-anticipating scheme may work well for resource allocation for shared clusters, there are many interesting directions for future work.",
                "One direction is to consider more realistic utility functions.",
                "For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine.",
                "In practice, both assumptions may not be correct.",
                "For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine.",
                "When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling.",
                "Another assumption is that users have infinite work, so the more resources they can acquire, the better.",
                "In practice, users have finite work.",
                "One approach to address this is to model the users utility according to the time to finish a task rather than the amount of resources he receives.",
                "Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model.",
                "In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user Efficiency Utility uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user Efficiency Utility uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite parallelism model. n = 100. 8.",
                "ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions.",
                "We also thank the anonymous reviewers for their useful comments. 9.",
                "REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat.",
                "Resource Allocation in Federated Distributed Computing Infrastructures.",
                "In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat.",
                "Computational Resource Exchanges for Distributed Resource Allocation. 2004. [4] B. N. Chun and D. E. Culler.",
                "Market-based Proportional Resource Sharing for Clusters.",
                "Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang.",
                "A Price-anticipating Resource Allocation Mechanism for Distributed Shared Clusters.",
                "Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou.",
                "Microeconomic Algorithms for Load Balancing in Distributed Computer Systems.",
                "In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan.",
                "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.",
                "Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow.",
                "Data Structures for Weighted Matching and Nearest Common Ancestors with Linking.",
                "In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang.",
                "Strategic Buyers in a Sum Bid Game for Flat Networks.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis.",
                "Efficiency Loss in a Network Resource Allocation Game.",
                "Mathematics of Operations Research, 2004. [12] F. P. Kelly.",
                "Charging and Rate Control for Elastic Traffic.",
                "European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo.",
                "Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability.",
                "Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn.",
                "The Hungarian Method for the Assignment Problem.",
                "Naval Res.",
                "Logis.",
                "Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B.",
                "A. Huberman.",
                "Tycoon: an Implemention of a Distributed Market-Based Resource Allocation System.",
                "Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich.",
                "Congestion Games with Player-Specific Payoff Functions.",
                "Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley.",
                "Potential Games.",
                "Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou.",
                "Algorithms, Games, and the Internet.",
                "In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz.",
                "Combinatorial Optimization.",
                "Dover Publications, Inc., 1982. [20] M. Pinedo.",
                "Scheduling.",
                "Prentice Hall, 2002. [21] O. Regev and N. Nisan.",
                "The Popcorn Market: Online Markets for Computational Resources.",
                "In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal.",
                "A Class of Games Possessing Pure-Strategy Nash Equilibria.",
                "Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek.",
                "Optimal Allocation of a Divisible Good to Strategic Buyers.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen.",
                "A Microeconomic Scheduler for Parallel Computers.",
                "In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian.",
                "Equity, Envy, and Efficiency.",
                "Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B.",
                "A. Huberman, J. O. Kephart, and S. Stornetta.",
                "Spawn: A Distributed Computational Economy.",
                "IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason.",
                "Auction Protocols for Decentralized Scheduling.",
                "Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter.",
                "Classifying Scheduling Policies with respect to Unfairness in an M/GI/1.",
                "In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang.",
                "On the Efficiency and Fairness of a Fixed Budget Resource Allocation Game.",
                "Manuscript, 2004. 136"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Usando \"simulación\", encontramos que, aunque la asignación socialmente óptima da como resultado una eficiencia perfecta, también resulta en una justicia muy pobre.simulación",
                "En la Sección 5, describimos nuestro simulador y resultados de \"simulación\".simulación",
                "Los resultados de \"simulación\", Si bien los resultados analíticos nos proporcionan un análisis en el peor de los casos para el modelo de paralelismo infinito, en esta sección empleamos simulaciones para estudiar las propiedades de los equilibrios NASH en escenarios más realistas y para el modelo de paralelismo finito.simulación",
                "Las secciones 5.1 y 5.2 presentan los resultados de \"simulación\" cuando aplicamos el paralelismo infinito y los modelos de paralelismo finitos, respectivamente.simulación",
                "Un tiempo de convergencia de 200 iteraciones indica no convergencia, en cuyo caso informamos los valores de eficiencia y equidad en el punto de terminar la \"simulación\".5.1 Paralelismo infinito En esta sección, aplicamos el modelo de paralelismo infinito, que supone que los usuarios pueden usar un número ilimitado de máquinas.simulación",
                "Nuevamente experimentamos con las distribuciones de preferencias uniformes y correlacionadas y no encontramos diferencias significativas en los resultados, por lo que presentamos los resultados de \"simulación\" solo para la distribución uniforme.simulación",
                "Conclusiones Este trabajo estudia el rendimiento de un mecanismo basado en el mercado para grupos compartidos distribuidos utilizando métodos analáticos y de \"simulación\".simulación"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "price of anarchy": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Price-Anticipating Resource Allocation Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget resource allocation game to understand the performance of a distributed marketbased resource allocation system.",
                "Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual utility.",
                "We look at both the efficiency and the fairness of the allocation at the equilibrium, where fairness is evaluated through the measures of utility uniformity and envy-freeness.",
                "We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high efficiency but poor fairness, the proposed allocation scheme achieves a nice balance of high degrees of efficiency and fairness at the equilibrium.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1.",
                "INTRODUCTION The primary advantage of distributed shared clusters like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources.",
                "This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users.",
                "Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users.",
                "Finally, sharing allows greater reliability because of redundancy in hosts and network connections.",
                "However, resource allocation in these systems remains the major challenge.",
                "The problem is how to allocate a shared resource both fairly and efficiently (where efficiency is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests.",
                "Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator.",
                "However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set.",
                "Instead, we examine a market-based resource allocation system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a bidding mechanism.",
                "In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource.",
                "This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26].",
                "Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets.",
                "In this work, we examine a price-anticipating scheme in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6).",
                "In this paper, we formulate the fixed budget resource allocation game and study the existence and performance of the Nash equilibria of this game.",
                "For evaluating the Nash equilibria, we consider both their efficiency, measuring how close the social welfare at equilibrium is to the social optimum, and fairness, measuring how different the users utilities are.",
                "Although rarely considered in previous game theoretical study, we believe fairness is a critical metric for a resource allocation schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair resource allocation in favor of one with less efficient, more fair resource allocation.",
                "We use both utility uniformity and envy-freeness to measure fairness.",
                "Utility uniformity, which is common in Computer Science work, measures the closeness of utilities of different users.",
                "Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others.",
                "Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria.",
                "Using analysis, we show that there is always a Nash equilibrium in the fixed budget game if the utility functions satisfy a fairly weak and natural condition of strong competitiveness.",
                "We also show the worst case performance bounds: for m players the efficiency at equilibrium is Ω(1/ √ m), the utility uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83.",
                "Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their utility.",
                "As part of the fixed budget game analysis, we show that strategic users with linear utility functions can calculate their bids using a best response algorithm that quickly results in an allocation with high efficiency with little computational and communication overhead.",
                "We present variations of the best response algorithm for both finite and infinite parallelism tasks.",
                "In addition, we present a local greedy adjustment algorithm that converges more slowly than best response, but allows for non-linear or unformulatable utility functions. • We show that the price-anticipating resource allocation mechanism achieves a high degree of efficiency and fairness.",
                "Using simulation, we find that although the socially optimal allocation results in perfect efficiency, it also results in very poor fairness.",
                "Likewise, allocating according to only users preference weights results in a high fairness, but a mediocre efficiency.",
                "Intuition would suggest that efficiency and fairness are exclusive.",
                "Surprisingly, the Nash equilibrium, reached by each user iteratively applying the best response algorithm to adapt his bids, achieves nearly the efficiency of the social optimum and nearly the fairness of the weight-proportional allocation: the efficiency is ≥ 0.90, the utility uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system.",
                "In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy.",
                "The local adjustment algorithm performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize.",
                "As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of efficiency and fairness.",
                "The rest of the paper is organized as follows.",
                "We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite parallelism model in Section 3.",
                "In Section 4, we describe algorithms for users to optimize their own utility in the fixed budget game.",
                "In Section 5, we describe our simulator and simulation results.",
                "We describe related work in Section 6.",
                "We conclude by discussing some limit of our model and future work in Section 7. 2.",
                "THE MODEL Price-Anticipating Resource Allocation.",
                "We study the problem of allocating a set of divisible resources (or machines).",
                "Suppose that there are m users and n machines.",
                "Each machine can be continuously divided for allocation to multiple users.",
                "An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1.",
                "Let Ω denote the set of all the allocation schemes.",
                "We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed.",
                "Formally, suppose that user i submits a non-negative bid xij to machine j.",
                "The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j.",
                "When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone.",
                "We call xi = (xi1, . . . , xin) the bidding vector of user i.",
                "The additional consideration we have is that each user i has a budget constraint Xi.",
                "Therefore, user is total bids have to sum up to his budget, i.e.",
                "Pn j=1 xij = Xi.",
                "The budget constraints come from the fact that the users do not have infinite budget.",
                "Utility Functions.",
                "Each user is utility is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine.",
                "Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines.",
                "Therefore, the basic utility function we consider is the linear utility function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j.",
                "For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications.",
                "As a result, w11 > w12 and w21 < w22.",
                "Our definition of utility functions corresponds to the user having enough jobs or enough parallelism within jobs to utilize all the machines.",
                "Consequently, the users goal is to grab as much of a resource as possible.",
                "We call this the infinite parallelism model.",
                "In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity).",
                "To model this, we also consider the more realistic finite parallelism model, where the users parallelism is bounded by ki, and the users utility Ui is the sum of the ki largest wijrij.",
                "In this model, the user only submits bids to up to ki machines.",
                "Our abstraction is to capture the essense of the problem and facilitate our analysis.",
                "In Section 7, we discuss the limit of the above definition of utility functions.",
                "Best Response.",
                "As typically, we assume the users are selfish and strategic - they all act to maximize their own utility, defined by their utility functions.",
                "From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0.",
                "The difficulty of the above optimization problem depends on the formulation of Ui.",
                "We will show later how to solve it for the infinite parallelism model and provide a heuristic for finite parallelism model.",
                "Nash Equilibrium.",
                "By the assumption that the user is selfish, each users bidding vector is the best response to the system.",
                "The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users.",
                "Such a state is known as the Nash equilibrium, a central concept in Game Theory.",
                "Formally, the bidding vectors x1, . . . , xm is a Nash equilibrium if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) .",
                "The Nash equilibrium is desirable because it is a stable state at which no one has incentive to change his strategy.",
                "But a game may not have an equilibrium.",
                "Indeed, a Nash equilibrium may not exist in the price anticipating scheme we define above.",
                "This can be shown by a simple example of two players and two machines.",
                "For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2.",
                "Then player 1 should never bid on machine 2 because it has no value to him.",
                "Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the Nash equilibrium.",
                "We should note that even the mixed strategy equilibrium does not exist in this example.",
                "Clearly, this happens whenever there is a resource that is wanted by only one player.",
                "To rule out this case, we consider those strongly competitive games.1 Under the infinite parallelism model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0.",
                "Under such a condition, we have that (see [5] for a proof), Theorem 1.",
                "There always exists a pure strategy Nash equilibrium in a strongly competitive game.",
                "Given the existence of the Nash equilibrium, the next important question is the performance at the Nash equilibrium, which is often measured by its efficiency and fairness.",
                "Efficiency (<br>price of anarchy</br>).",
                "For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω.",
                "Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities.",
                "The efficiency at an allocation scheme ω is defined as π(ω) = U(ω) U∗ .",
                "Let Ω0 denote the set of the allocation at the Nash equilibrium.",
                "When there exists Nash equilibrium, i.e.",
                "Ω0 = ∅, define the efficiency of a game Q to be π(Q) = minω∈Ω0 π(ω).",
                "It is usually the case that π < 1, i.e. there is an efficiency loss at a Nash equilibrium.",
                "This is the <br>price of anarchy</br> [18] paid for not having central enforcement of the users good behavior.",
                "This price is interesting because central control results in the best possible outcome, but is not possible in most cases.",
                "Fairness.",
                "While the definition of efficiency is standard, there are multiple ways to define fairness.",
                "We consider two metrics.",
                "One is by comparing the users utilities.",
                "The utility uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum utility and the maximum utility among the users.",
                "Such definition (or utility discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature.",
                "Under this definition, the utility uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω).",
                "The other metric extensively studied in Economics is the concept of envy-freeness [25].",
                "Unlike the utility uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive.",
                "Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine.",
                "These alternatives, however, introduce the problem of coming up with the right price or limit.",
                "When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme.",
                "Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3.",
                "NASH EQUILIBRIUM In this section, we present some theoretical results regarding the performance at Nash equilibrium under the infinite parallelism model.",
                "We assume that the game is strongly competitive to guarantee the existence of equilibria.",
                "For a meaningful discussion of efficiency and fairness, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same utility when they own all the resources.",
                "This precludes the case when a user has an extremely high budget, resulting in very low efficiency or low fairness at equilibrium.",
                "We first provide a characterization of the equilibria.",
                "By definition, the bidding vectors x1, . . . , xm is a Nash equilibrium if and only if each players strategy is the best response to the groups bids.",
                "Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid.",
                "Under the infinite parallelism model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e.",
                "U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties.",
                "We start with two special cases to provide some intuition about the game.",
                "The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games.",
                "Let x and y denote the respective bids of users 1 and 2 on machine 1.",
                "Denote by s = x + y and δ = (2 − s)/s.",
                "Equal-weight game.",
                "In Figure 1, both users have equal valuations for the two machines.",
                "By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α.",
                "Thus, there exists a unique Nash equilibrium of the game where the two users have the same bidding vector.",
                "At the equilibrium, the utility of each user is 1/2, and the social welfare is 1.",
                "On the other hand, the social optimum is clearly 1.",
                "Thus, the equal-weight game is ideal as the efficiency, utility uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games.",
                "Opposite-weight game.",
                "The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines.",
                "Assume that α ≥ 1/2.",
                "Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each Nash equilibrium corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1.",
                "Clearly, δ = 1 is a root of f(δ).",
                "When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine.",
                "At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828.",
                "However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria.",
                "Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid.",
                "In this case, user 1 gets most of machine 1 and almost half of machine 2.",
                "The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4.",
                "This solves to α0 = 2+ √ 2 4 ≈ 0.854.",
                "Those asymmetric equilibria at δ = 1 are bad as they yield lower efficiency than the symmetric equilibrium.",
                "Let δ0 be the minimum root.",
                "When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0.",
                "Then, x, y → 1.",
                "Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75.",
                "From the above simple game, we already observe that the Nash equilibrium may not be unique, which is different from many congestion games in which the Nash equilibrium is unique.",
                "For the general two player game, we can show that 0.75 is actually the worst efficiency bound with a proof in [5].",
                "Further, at the asymmetric equilibrium, the utility uniformity approaches 1/2 when α → 1.",
                "This is the worst possible for two player games because as we show in Section 3.2, a users utility at any Nash equilibrium is at least 1/m in the m-player game.",
                "Another consequence is that the two player game is always envy-free.",
                "Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively.",
                "Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free.",
                "Theorem 2.",
                "For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1.",
                "All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large.",
                "The following example shows the worst case bound.",
                "Consider a system with m = n2 + n players and n machines.",
                "Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine.",
                "The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines.",
                "Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine.",
                "Hence, the total money on each machine is n + 1.",
                "At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total utility of n3 · 1 n2(n+1) < 1.",
                "The other n players each receives 1 n+1 on their favorite machine, resulting in a total utility of n · 1 n+1 < 1.",
                "Therefore, the total utility of the equilibrium is < 2, while the social optimum is n = Θ( √ m).",
                "This bound is the worst possible.",
                "What about the utility uniformity of the multi-player allocation game?",
                "We next show that the utility uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i.",
                "User i can ensure a utility of 1/m by distributing his budget proportionally to the current bids.",
                "That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1.",
                "Therefore, rij = 1 1+m−1 = 1 m .",
                "The total utility of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m .",
                "Since each users utility cannot exceed 1, the minimal possible uniformity is 1/m.",
                "While the utility uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29].",
                "To summarize, we have that Theorem 3.",
                "For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2.",
                "All of these bounds are tight in the worst case. 4.",
                "ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite parallelism model.",
                "However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the Nash equilibrium for the typical distribution of utility functions.",
                "In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response algorithm leads to the equilibrium.",
                "To answer these questions, we resort to simulations.",
                "In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments.",
                "We consider both the infinite parallelism and finite parallelism model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most.",
                "We now present the algorithm for computing the best response.",
                "Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0.",
                "To compute the best response, we first sort wj yj in decreasing order.",
                "Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn .",
                "Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution.",
                "We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too.",
                "Suppose this were not true.",
                "Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) .",
                "Thus it contradicts with the optimality condition (1).",
                "Suppose that k = max{i|x∗ i > 0}.",
                "Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 .",
                "Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi .",
                "The remaining question is how to determine k. It is the largest value such that x∗ k > 0.",
                "Thus, we obtain the following algorithm to compute the best response of a user: 1.",
                "Sort the machines according to wi yi in decreasing order. 2.",
                "Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3.",
                "Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj.",
                "The computational complexity of this algorithm is O(n log n), dominated by the sorting.",
                "In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible.",
                "The best response algorithm must send and receive O(n) messages because each user must obtain the total bids from each host.",
                "In practice, this is more significant than the computational cost.",
                "Note that hosts only reveal to users the sum of the bids on them.",
                "As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite Parallelism Model Recall that in the finite parallelism model, each user i only places bids on at most ki machines.",
                "Of course, the infinite parallelism model is just a special case of finite parallelism model in which ki = n for all the is.",
                "In the finite parallelism model, computing the social optimum is no longer trivial due to bounded parallelism.",
                "It can instead be computed by using the maximum matching algorithm.",
                "Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj).",
                "A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching.",
                "As a result, the following lemma holds.",
                "Lemma 1.",
                "The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching algorithm to compute the social optimum.",
                "The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14].",
                "We choose to implement the Hungarian algorithm [14, 19] because of its simplicity.",
                "There may exist a more efficient algorithm for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question.",
                "However, we do not know an efficient algorithm to compute the best response under the finite parallelism model.",
                "Instead, we provide the following local search heuristic.",
                "Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn.",
                "Let the users budget be X and the parallelism bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users utility.",
                "For a subset of machines A, denote by x(A) the best response on A without parallelism bound and by U(A) the utility obtained by the best response algorithm.",
                "The local search works as follows: 1.",
                "Set A to be the k machines with the highest wi/yi. 2.",
                "Compute U(A) by the infinite parallelism best response algorithm (Sec 4.1) on A. 3.",
                "For each i ∈ A and each j /∈ A, repeat 4.",
                "Let B = A − {i} + {j}, compute U(B). 5.",
                "If(U(B) > U(A)), let A ← B, and goto 2. 6.",
                "Output x(A).",
                "Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response utility.",
                "If yes, we swap the machines and repeat the process.",
                "Otherwise, we have reached a local maxima and output that value.",
                "We suspect that the local maxima that this algorithm finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it.",
                "However, in our simulations, this algorithm quickly converges to a high (≥ .7) efficiency. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear utility functions described earlier.",
                "In practice, utility functions may have more a complicated form, or even worse, a user may not have a formulation of his utility function.",
                "We do assume that the user still has a way to measure his utility, which is the minimum assumption necessary for any market-based resource allocation mechanism.",
                "In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows.",
                "A user finds the two machines that provide him with the highest and lowest marginal utility.",
                "He then moves a fixed small amount of money from the machine with low marginal utility to the machine with the higher one.",
                "This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same.",
                "This condition guarantees the allocation is the optimum when the utility function is concave.",
                "The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5.",
                "SIMULATION RESULTS While the analytic results provide us with worst-case analysis for the infinite parallelism model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite parallelism model.",
                "First, we determine whether the user bidding process converges, and if so, what the rate of convergence is.",
                "Second, in cases of convergence, we look at the performance at equilibrium, using the efficiency and fairness metrics defined above.",
                "Iterative Method.",
                "In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met.",
                "The initial bid is set proportional to the users weights on the machines.",
                "We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3.",
                "Convergence Criteria.",
                "Convergence time measures how quickly the system reaches equilibrium.",
                "It is particularly important in the highly dynamic environment of distributed shared clusters, in which the systems conditions may change before reaching the equilibrium.",
                "Thus, a high convergence rate may be more significant than the efficiency at the equilibrium.",
                "There are several different criteria for convergence.",
                "The strongest criterion is to require that there is only negligible change in the bids of each user.",
                "The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged.",
                "The less strict utility gap criterion requires there to be only negligible change in the users utility.",
                "Given users concern for utility, this is a more natural definition.",
                "Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small utility gain.",
                "Therefore, we use the utility gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the utility gap of each user is smaller than (0.001 in our experiments).",
                "However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in utility as they move money around.",
                "For this method, we use the marginal utility gap criterion.",
                "We compare the highest and lowest utility margins on the machines.",
                "If the difference is negligible, then we consider the system to be converged.",
                "In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion.",
                "Under this criterion, a system has stabilized if the change in social welfare is ≤ .",
                "Individual users utility may not have converged.",
                "This criterion is useful to evaluate how quickly the system as a whole reaches a particular efficiency level.",
                "User preferences.",
                "We experiment with two models of user preferences, random distribution and correlated distribution.",
                "With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution.",
                "In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run.",
                "To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth).",
                "For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk.",
                "By using these profiles, we compress the parameter space and introduce correlations between users and machines.",
                "In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users).",
                "Sections 5.1 and 5.2 present the simulation results when we apply the infinite parallelism and finite parallelism models, respectively.",
                "If the system converges, we report the number of iterations until convergence.",
                "A convergence time of 200 iterations indicates non-convergence, in which case we report the efficiency and fairness values at the point we terminate the simulation. 5.1 Infinite parallelism In this section, we apply the infinite parallelism model, which assumes that users can use an unlimited number of machines.",
                "We present the efficiency and fairness at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively).",
                "We present results for the two user preference models.",
                "With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter).",
                "In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1).",
                "Convergence Time.",
                "Figure 2 shows the convergence time, efficiency and fairness of the infinite parallelism model under uniform (left) and correlated (right) preferences.",
                "Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: Efficiency, utility uniformity, enviness and convergence time as a function of the number of users under the infinite parallelism model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite parallelism model. number of users = 40. n = 100.",
                "The best-response algorithm converges within a few number of iterations for any number of users.",
                "In contrast, the local greedy adjustment algorithm does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users.",
                "We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc.",
                "Regardless, the local greedy adjustment method stabilizes within 100 iterations.",
                "Figure 3 presents the efficiency over time for a system with 40 users.",
                "It demonstrates that while both adjustment methods reach the same social welfare, the best-response algorithm is faster.",
                "In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it.",
                "Efficiency.",
                "Figure 2 (c) and (d) present the efficiency as a function of the number of users.",
                "We present the efficiency at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison.",
                "Social optimum provides an efficient allocation by definition.",
                "For both user preference models, the efficiency at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum.",
                "The efficiency at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences.",
                "Fairness.",
                "Figure 2(e) and (f) present the utility uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness.",
                "While the social optimum yields perfect efficiency, it has poor fairness.",
                "The weightproportional method achieves the highest fairness among the three allocation methods, but the fairness at the equilibrium is close.",
                "The utility uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other.",
                "Although utility uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point.",
                "At the social optimum, utility uniformity can be infinitely poor, as some users may be allocated no resources at all.",
                "The same is true with respect to envy-freeness.",
                "The difference between uniform and correlated preferences is best demonstrated in the social optimum results.",
                "When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both utility uniformity and envy-freeness go to zero.",
                "As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation.",
                "These results demonstrate the tradeoff between the different allocation methods.",
                "The efficiency at the equilibrium is lower than the social optimum, but it performs much better with respect to fairness.",
                "The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite parallelism 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite parallelism model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 Efficiency Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: Efficiency level over time under the finite parallelism model with local search algorithm. n = 100.",
                "We also consider the finite parallelism model and use the local search algorithm, as described in Section 4.2, to adjust users bids.",
                "We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the simulation results for only the uniform distribution.",
                "In our experiments, the local search algorithm stops quickly - it usually discovers a local maximum within two iterations.",
                "As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high efficiency. 134 Convergence time.",
                "Let ∆ denote the parallelism bound that limits the maximum number of machines each user can bid on.",
                "We experiment with ∆ = 5 and ∆ = 20.",
                "In both cases, we use 100 machines and vary the number of users.",
                "Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly.",
                "The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20.",
                "We believe that the non-convergence is caused by moderate competition.",
                "No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids.",
                "High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence.",
                "However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids.",
                "In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2].",
                "Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall efficiency after a few iterations (as shown in Figure 5).",
                "Performance.",
                "In Figure 6, we present the efficiency, utility uniformity, and envy-freeness at the Nash equilibrium for the finite parallelism model.",
                "When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations.",
                "When ∆ = 5, there is a performance drop, in particular with respect to the fairness metrics, in the range between 20 and 40 users (where it does not converge).",
                "For a larger number of users, the system converges and achieves a lower level of utility uniformity, but a high degree of efficiency and envy-freeness, similar to those under the infinite parallelism model.",
                "As described above, this is due the competition ratio falling into the head-to-head range.",
                "When the parallelism bound is large (∆ = 20), the performance is closer to the infinite parallelism model, and we do not observe this drop in performance. 6.",
                "RELATED WORK There are two main groups of related work in resource allocation: those that incorporate an economic mechanism, and those that do not.",
                "One non-economic approach is scheduling (surveyed by Pinedo [20]).",
                "Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19].",
                "These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users.",
                "We view scheduling and resource allocation as two separate functions.",
                "Resource allocation divides a resource among different users while scheduling takes a given allocation and orders a users jobs.",
                "Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]).",
                "Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated.",
                "Unfortunately, reservations have a high latency to acquire resources, unlike the price-anticipating scheme we consider.",
                "The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive.",
                "Bellagio[3] uses the SHARE centralized allocator.",
                "SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities.",
                "Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation.",
                "The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some efficiency, but it also avoids the complexity and overhead of combinatorial auctions.",
                "There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows.",
                "Their methodology follows the study of congestion (potential) games [17, 22] by relating the Nash equilibrium to the solution of a (usually convex) global optimization problem.",
                "But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines.",
                "For example, unlike those games, there may exist multiple Nash equilibria in our game.",
                "Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7.",
                "CONCLUSIONS This work studies the performance of a market-based mechanism for distributed shared clusters using both analyatical and simulation methods.",
                "We show that despite the worst case bounds, the system can reach a high performance level at the Nash equilibrium in terms of both efficiency and fairness metrics.",
                "In addition, with a few exceptions under the finite parallelism model, the system reaches equilibrium quickly by using the best response algorithm and, when the number of users is not too small, by the greedy local adjustment method.",
                "While our work indicates that the price-anticipating scheme may work well for resource allocation for shared clusters, there are many interesting directions for future work.",
                "One direction is to consider more realistic utility functions.",
                "For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine.",
                "In practice, both assumptions may not be correct.",
                "For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine.",
                "When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling.",
                "Another assumption is that users have infinite work, so the more resources they can acquire, the better.",
                "In practice, users have finite work.",
                "One approach to address this is to model the users utility according to the time to finish a task rather than the amount of resources he receives.",
                "Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model.",
                "In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user Efficiency Utility uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user Efficiency Utility uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite parallelism model. n = 100. 8.",
                "ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions.",
                "We also thank the anonymous reviewers for their useful comments. 9.",
                "REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat.",
                "Resource Allocation in Federated Distributed Computing Infrastructures.",
                "In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat.",
                "Computational Resource Exchanges for Distributed Resource Allocation. 2004. [4] B. N. Chun and D. E. Culler.",
                "Market-based Proportional Resource Sharing for Clusters.",
                "Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang.",
                "A Price-anticipating Resource Allocation Mechanism for Distributed Shared Clusters.",
                "Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou.",
                "Microeconomic Algorithms for Load Balancing in Distributed Computer Systems.",
                "In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan.",
                "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.",
                "Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow.",
                "Data Structures for Weighted Matching and Nearest Common Ancestors with Linking.",
                "In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang.",
                "Strategic Buyers in a Sum Bid Game for Flat Networks.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis.",
                "Efficiency Loss in a Network Resource Allocation Game.",
                "Mathematics of Operations Research, 2004. [12] F. P. Kelly.",
                "Charging and Rate Control for Elastic Traffic.",
                "European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo.",
                "Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability.",
                "Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn.",
                "The Hungarian Method for the Assignment Problem.",
                "Naval Res.",
                "Logis.",
                "Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B.",
                "A. Huberman.",
                "Tycoon: an Implemention of a Distributed Market-Based Resource Allocation System.",
                "Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich.",
                "Congestion Games with Player-Specific Payoff Functions.",
                "Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley.",
                "Potential Games.",
                "Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou.",
                "Algorithms, Games, and the Internet.",
                "In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz.",
                "Combinatorial Optimization.",
                "Dover Publications, Inc., 1982. [20] M. Pinedo.",
                "Scheduling.",
                "Prentice Hall, 2002. [21] O. Regev and N. Nisan.",
                "The Popcorn Market: Online Markets for Computational Resources.",
                "In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal.",
                "A Class of Games Possessing Pure-Strategy Nash Equilibria.",
                "Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek.",
                "Optimal Allocation of a Divisible Good to Strategic Buyers.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen.",
                "A Microeconomic Scheduler for Parallel Computers.",
                "In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian.",
                "Equity, Envy, and Efficiency.",
                "Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B.",
                "A. Huberman, J. O. Kephart, and S. Stornetta.",
                "Spawn: A Distributed Computational Economy.",
                "IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason.",
                "Auction Protocols for Decentralized Scheduling.",
                "Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter.",
                "Classifying Scheduling Policies with respect to Unfairness in an M/GI/1.",
                "In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang.",
                "On the Efficiency and Fairness of a Fixed Budget Resource Allocation Game.",
                "Manuscript, 2004. 136"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Eficiencia (\"Precio de la anarquía\").precio de la anarquía",
                "Este es el \"precio de la anarquía\" [18] pagado por no tener la aplicación central del buen comportamiento de los usuarios.precio de la anarquía"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "anarchy price": {
            "translated_key": "",
            "is_in_text": false,
            "original_annotated_sentences": [
                "A Price-Anticipating Resource Allocation Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget resource allocation game to understand the performance of a distributed marketbased resource allocation system.",
                "Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual utility.",
                "We look at both the efficiency and the fairness of the allocation at the equilibrium, where fairness is evaluated through the measures of utility uniformity and envy-freeness.",
                "We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high efficiency but poor fairness, the proposed allocation scheme achieves a nice balance of high degrees of efficiency and fairness at the equilibrium.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1.",
                "INTRODUCTION The primary advantage of distributed shared clusters like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources.",
                "This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users.",
                "Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users.",
                "Finally, sharing allows greater reliability because of redundancy in hosts and network connections.",
                "However, resource allocation in these systems remains the major challenge.",
                "The problem is how to allocate a shared resource both fairly and efficiently (where efficiency is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests.",
                "Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator.",
                "However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set.",
                "Instead, we examine a market-based resource allocation system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a bidding mechanism.",
                "In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource.",
                "This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26].",
                "Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets.",
                "In this work, we examine a price-anticipating scheme in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6).",
                "In this paper, we formulate the fixed budget resource allocation game and study the existence and performance of the Nash equilibria of this game.",
                "For evaluating the Nash equilibria, we consider both their efficiency, measuring how close the social welfare at equilibrium is to the social optimum, and fairness, measuring how different the users utilities are.",
                "Although rarely considered in previous game theoretical study, we believe fairness is a critical metric for a resource allocation schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair resource allocation in favor of one with less efficient, more fair resource allocation.",
                "We use both utility uniformity and envy-freeness to measure fairness.",
                "Utility uniformity, which is common in Computer Science work, measures the closeness of utilities of different users.",
                "Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others.",
                "Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria.",
                "Using analysis, we show that there is always a Nash equilibrium in the fixed budget game if the utility functions satisfy a fairly weak and natural condition of strong competitiveness.",
                "We also show the worst case performance bounds: for m players the efficiency at equilibrium is Ω(1/ √ m), the utility uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83.",
                "Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their utility.",
                "As part of the fixed budget game analysis, we show that strategic users with linear utility functions can calculate their bids using a best response algorithm that quickly results in an allocation with high efficiency with little computational and communication overhead.",
                "We present variations of the best response algorithm for both finite and infinite parallelism tasks.",
                "In addition, we present a local greedy adjustment algorithm that converges more slowly than best response, but allows for non-linear or unformulatable utility functions. • We show that the price-anticipating resource allocation mechanism achieves a high degree of efficiency and fairness.",
                "Using simulation, we find that although the socially optimal allocation results in perfect efficiency, it also results in very poor fairness.",
                "Likewise, allocating according to only users preference weights results in a high fairness, but a mediocre efficiency.",
                "Intuition would suggest that efficiency and fairness are exclusive.",
                "Surprisingly, the Nash equilibrium, reached by each user iteratively applying the best response algorithm to adapt his bids, achieves nearly the efficiency of the social optimum and nearly the fairness of the weight-proportional allocation: the efficiency is ≥ 0.90, the utility uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system.",
                "In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy.",
                "The local adjustment algorithm performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize.",
                "As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of efficiency and fairness.",
                "The rest of the paper is organized as follows.",
                "We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite parallelism model in Section 3.",
                "In Section 4, we describe algorithms for users to optimize their own utility in the fixed budget game.",
                "In Section 5, we describe our simulator and simulation results.",
                "We describe related work in Section 6.",
                "We conclude by discussing some limit of our model and future work in Section 7. 2.",
                "THE MODEL Price-Anticipating Resource Allocation.",
                "We study the problem of allocating a set of divisible resources (or machines).",
                "Suppose that there are m users and n machines.",
                "Each machine can be continuously divided for allocation to multiple users.",
                "An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1.",
                "Let Ω denote the set of all the allocation schemes.",
                "We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed.",
                "Formally, suppose that user i submits a non-negative bid xij to machine j.",
                "The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j.",
                "When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone.",
                "We call xi = (xi1, . . . , xin) the bidding vector of user i.",
                "The additional consideration we have is that each user i has a budget constraint Xi.",
                "Therefore, user is total bids have to sum up to his budget, i.e.",
                "Pn j=1 xij = Xi.",
                "The budget constraints come from the fact that the users do not have infinite budget.",
                "Utility Functions.",
                "Each user is utility is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine.",
                "Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines.",
                "Therefore, the basic utility function we consider is the linear utility function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j.",
                "For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications.",
                "As a result, w11 > w12 and w21 < w22.",
                "Our definition of utility functions corresponds to the user having enough jobs or enough parallelism within jobs to utilize all the machines.",
                "Consequently, the users goal is to grab as much of a resource as possible.",
                "We call this the infinite parallelism model.",
                "In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity).",
                "To model this, we also consider the more realistic finite parallelism model, where the users parallelism is bounded by ki, and the users utility Ui is the sum of the ki largest wijrij.",
                "In this model, the user only submits bids to up to ki machines.",
                "Our abstraction is to capture the essense of the problem and facilitate our analysis.",
                "In Section 7, we discuss the limit of the above definition of utility functions.",
                "Best Response.",
                "As typically, we assume the users are selfish and strategic - they all act to maximize their own utility, defined by their utility functions.",
                "From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0.",
                "The difficulty of the above optimization problem depends on the formulation of Ui.",
                "We will show later how to solve it for the infinite parallelism model and provide a heuristic for finite parallelism model.",
                "Nash Equilibrium.",
                "By the assumption that the user is selfish, each users bidding vector is the best response to the system.",
                "The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users.",
                "Such a state is known as the Nash equilibrium, a central concept in Game Theory.",
                "Formally, the bidding vectors x1, . . . , xm is a Nash equilibrium if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) .",
                "The Nash equilibrium is desirable because it is a stable state at which no one has incentive to change his strategy.",
                "But a game may not have an equilibrium.",
                "Indeed, a Nash equilibrium may not exist in the price anticipating scheme we define above.",
                "This can be shown by a simple example of two players and two machines.",
                "For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2.",
                "Then player 1 should never bid on machine 2 because it has no value to him.",
                "Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the Nash equilibrium.",
                "We should note that even the mixed strategy equilibrium does not exist in this example.",
                "Clearly, this happens whenever there is a resource that is wanted by only one player.",
                "To rule out this case, we consider those strongly competitive games.1 Under the infinite parallelism model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0.",
                "Under such a condition, we have that (see [5] for a proof), Theorem 1.",
                "There always exists a pure strategy Nash equilibrium in a strongly competitive game.",
                "Given the existence of the Nash equilibrium, the next important question is the performance at the Nash equilibrium, which is often measured by its efficiency and fairness.",
                "Efficiency (Price of Anarchy).",
                "For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω.",
                "Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities.",
                "The efficiency at an allocation scheme ω is defined as π(ω) = U(ω) U∗ .",
                "Let Ω0 denote the set of the allocation at the Nash equilibrium.",
                "When there exists Nash equilibrium, i.e.",
                "Ω0 = ∅, define the efficiency of a game Q to be π(Q) = minω∈Ω0 π(ω).",
                "It is usually the case that π < 1, i.e. there is an efficiency loss at a Nash equilibrium.",
                "This is the price of anarchy [18] paid for not having central enforcement of the users good behavior.",
                "This price is interesting because central control results in the best possible outcome, but is not possible in most cases.",
                "Fairness.",
                "While the definition of efficiency is standard, there are multiple ways to define fairness.",
                "We consider two metrics.",
                "One is by comparing the users utilities.",
                "The utility uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum utility and the maximum utility among the users.",
                "Such definition (or utility discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature.",
                "Under this definition, the utility uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω).",
                "The other metric extensively studied in Economics is the concept of envy-freeness [25].",
                "Unlike the utility uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive.",
                "Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine.",
                "These alternatives, however, introduce the problem of coming up with the right price or limit.",
                "When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme.",
                "Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3.",
                "NASH EQUILIBRIUM In this section, we present some theoretical results regarding the performance at Nash equilibrium under the infinite parallelism model.",
                "We assume that the game is strongly competitive to guarantee the existence of equilibria.",
                "For a meaningful discussion of efficiency and fairness, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same utility when they own all the resources.",
                "This precludes the case when a user has an extremely high budget, resulting in very low efficiency or low fairness at equilibrium.",
                "We first provide a characterization of the equilibria.",
                "By definition, the bidding vectors x1, . . . , xm is a Nash equilibrium if and only if each players strategy is the best response to the groups bids.",
                "Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid.",
                "Under the infinite parallelism model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e.",
                "U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties.",
                "We start with two special cases to provide some intuition about the game.",
                "The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games.",
                "Let x and y denote the respective bids of users 1 and 2 on machine 1.",
                "Denote by s = x + y and δ = (2 − s)/s.",
                "Equal-weight game.",
                "In Figure 1, both users have equal valuations for the two machines.",
                "By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α.",
                "Thus, there exists a unique Nash equilibrium of the game where the two users have the same bidding vector.",
                "At the equilibrium, the utility of each user is 1/2, and the social welfare is 1.",
                "On the other hand, the social optimum is clearly 1.",
                "Thus, the equal-weight game is ideal as the efficiency, utility uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games.",
                "Opposite-weight game.",
                "The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines.",
                "Assume that α ≥ 1/2.",
                "Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each Nash equilibrium corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1.",
                "Clearly, δ = 1 is a root of f(δ).",
                "When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine.",
                "At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828.",
                "However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria.",
                "Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid.",
                "In this case, user 1 gets most of machine 1 and almost half of machine 2.",
                "The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4.",
                "This solves to α0 = 2+ √ 2 4 ≈ 0.854.",
                "Those asymmetric equilibria at δ = 1 are bad as they yield lower efficiency than the symmetric equilibrium.",
                "Let δ0 be the minimum root.",
                "When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0.",
                "Then, x, y → 1.",
                "Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75.",
                "From the above simple game, we already observe that the Nash equilibrium may not be unique, which is different from many congestion games in which the Nash equilibrium is unique.",
                "For the general two player game, we can show that 0.75 is actually the worst efficiency bound with a proof in [5].",
                "Further, at the asymmetric equilibrium, the utility uniformity approaches 1/2 when α → 1.",
                "This is the worst possible for two player games because as we show in Section 3.2, a users utility at any Nash equilibrium is at least 1/m in the m-player game.",
                "Another consequence is that the two player game is always envy-free.",
                "Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively.",
                "Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free.",
                "Theorem 2.",
                "For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1.",
                "All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large.",
                "The following example shows the worst case bound.",
                "Consider a system with m = n2 + n players and n machines.",
                "Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine.",
                "The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines.",
                "Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine.",
                "Hence, the total money on each machine is n + 1.",
                "At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total utility of n3 · 1 n2(n+1) < 1.",
                "The other n players each receives 1 n+1 on their favorite machine, resulting in a total utility of n · 1 n+1 < 1.",
                "Therefore, the total utility of the equilibrium is < 2, while the social optimum is n = Θ( √ m).",
                "This bound is the worst possible.",
                "What about the utility uniformity of the multi-player allocation game?",
                "We next show that the utility uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i.",
                "User i can ensure a utility of 1/m by distributing his budget proportionally to the current bids.",
                "That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1.",
                "Therefore, rij = 1 1+m−1 = 1 m .",
                "The total utility of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m .",
                "Since each users utility cannot exceed 1, the minimal possible uniformity is 1/m.",
                "While the utility uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29].",
                "To summarize, we have that Theorem 3.",
                "For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2.",
                "All of these bounds are tight in the worst case. 4.",
                "ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite parallelism model.",
                "However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the Nash equilibrium for the typical distribution of utility functions.",
                "In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response algorithm leads to the equilibrium.",
                "To answer these questions, we resort to simulations.",
                "In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments.",
                "We consider both the infinite parallelism and finite parallelism model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most.",
                "We now present the algorithm for computing the best response.",
                "Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0.",
                "To compute the best response, we first sort wj yj in decreasing order.",
                "Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn .",
                "Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution.",
                "We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too.",
                "Suppose this were not true.",
                "Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) .",
                "Thus it contradicts with the optimality condition (1).",
                "Suppose that k = max{i|x∗ i > 0}.",
                "Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 .",
                "Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi .",
                "The remaining question is how to determine k. It is the largest value such that x∗ k > 0.",
                "Thus, we obtain the following algorithm to compute the best response of a user: 1.",
                "Sort the machines according to wi yi in decreasing order. 2.",
                "Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3.",
                "Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj.",
                "The computational complexity of this algorithm is O(n log n), dominated by the sorting.",
                "In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible.",
                "The best response algorithm must send and receive O(n) messages because each user must obtain the total bids from each host.",
                "In practice, this is more significant than the computational cost.",
                "Note that hosts only reveal to users the sum of the bids on them.",
                "As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite Parallelism Model Recall that in the finite parallelism model, each user i only places bids on at most ki machines.",
                "Of course, the infinite parallelism model is just a special case of finite parallelism model in which ki = n for all the is.",
                "In the finite parallelism model, computing the social optimum is no longer trivial due to bounded parallelism.",
                "It can instead be computed by using the maximum matching algorithm.",
                "Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj).",
                "A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching.",
                "As a result, the following lemma holds.",
                "Lemma 1.",
                "The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching algorithm to compute the social optimum.",
                "The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14].",
                "We choose to implement the Hungarian algorithm [14, 19] because of its simplicity.",
                "There may exist a more efficient algorithm for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question.",
                "However, we do not know an efficient algorithm to compute the best response under the finite parallelism model.",
                "Instead, we provide the following local search heuristic.",
                "Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn.",
                "Let the users budget be X and the parallelism bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users utility.",
                "For a subset of machines A, denote by x(A) the best response on A without parallelism bound and by U(A) the utility obtained by the best response algorithm.",
                "The local search works as follows: 1.",
                "Set A to be the k machines with the highest wi/yi. 2.",
                "Compute U(A) by the infinite parallelism best response algorithm (Sec 4.1) on A. 3.",
                "For each i ∈ A and each j /∈ A, repeat 4.",
                "Let B = A − {i} + {j}, compute U(B). 5.",
                "If(U(B) > U(A)), let A ← B, and goto 2. 6.",
                "Output x(A).",
                "Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response utility.",
                "If yes, we swap the machines and repeat the process.",
                "Otherwise, we have reached a local maxima and output that value.",
                "We suspect that the local maxima that this algorithm finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it.",
                "However, in our simulations, this algorithm quickly converges to a high (≥ .7) efficiency. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear utility functions described earlier.",
                "In practice, utility functions may have more a complicated form, or even worse, a user may not have a formulation of his utility function.",
                "We do assume that the user still has a way to measure his utility, which is the minimum assumption necessary for any market-based resource allocation mechanism.",
                "In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows.",
                "A user finds the two machines that provide him with the highest and lowest marginal utility.",
                "He then moves a fixed small amount of money from the machine with low marginal utility to the machine with the higher one.",
                "This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same.",
                "This condition guarantees the allocation is the optimum when the utility function is concave.",
                "The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5.",
                "SIMULATION RESULTS While the analytic results provide us with worst-case analysis for the infinite parallelism model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite parallelism model.",
                "First, we determine whether the user bidding process converges, and if so, what the rate of convergence is.",
                "Second, in cases of convergence, we look at the performance at equilibrium, using the efficiency and fairness metrics defined above.",
                "Iterative Method.",
                "In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met.",
                "The initial bid is set proportional to the users weights on the machines.",
                "We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3.",
                "Convergence Criteria.",
                "Convergence time measures how quickly the system reaches equilibrium.",
                "It is particularly important in the highly dynamic environment of distributed shared clusters, in which the systems conditions may change before reaching the equilibrium.",
                "Thus, a high convergence rate may be more significant than the efficiency at the equilibrium.",
                "There are several different criteria for convergence.",
                "The strongest criterion is to require that there is only negligible change in the bids of each user.",
                "The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged.",
                "The less strict utility gap criterion requires there to be only negligible change in the users utility.",
                "Given users concern for utility, this is a more natural definition.",
                "Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small utility gain.",
                "Therefore, we use the utility gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the utility gap of each user is smaller than (0.001 in our experiments).",
                "However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in utility as they move money around.",
                "For this method, we use the marginal utility gap criterion.",
                "We compare the highest and lowest utility margins on the machines.",
                "If the difference is negligible, then we consider the system to be converged.",
                "In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion.",
                "Under this criterion, a system has stabilized if the change in social welfare is ≤ .",
                "Individual users utility may not have converged.",
                "This criterion is useful to evaluate how quickly the system as a whole reaches a particular efficiency level.",
                "User preferences.",
                "We experiment with two models of user preferences, random distribution and correlated distribution.",
                "With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution.",
                "In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run.",
                "To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth).",
                "For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk.",
                "By using these profiles, we compress the parameter space and introduce correlations between users and machines.",
                "In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users).",
                "Sections 5.1 and 5.2 present the simulation results when we apply the infinite parallelism and finite parallelism models, respectively.",
                "If the system converges, we report the number of iterations until convergence.",
                "A convergence time of 200 iterations indicates non-convergence, in which case we report the efficiency and fairness values at the point we terminate the simulation. 5.1 Infinite parallelism In this section, we apply the infinite parallelism model, which assumes that users can use an unlimited number of machines.",
                "We present the efficiency and fairness at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively).",
                "We present results for the two user preference models.",
                "With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter).",
                "In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1).",
                "Convergence Time.",
                "Figure 2 shows the convergence time, efficiency and fairness of the infinite parallelism model under uniform (left) and correlated (right) preferences.",
                "Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: Efficiency, utility uniformity, enviness and convergence time as a function of the number of users under the infinite parallelism model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite parallelism model. number of users = 40. n = 100.",
                "The best-response algorithm converges within a few number of iterations for any number of users.",
                "In contrast, the local greedy adjustment algorithm does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users.",
                "We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc.",
                "Regardless, the local greedy adjustment method stabilizes within 100 iterations.",
                "Figure 3 presents the efficiency over time for a system with 40 users.",
                "It demonstrates that while both adjustment methods reach the same social welfare, the best-response algorithm is faster.",
                "In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it.",
                "Efficiency.",
                "Figure 2 (c) and (d) present the efficiency as a function of the number of users.",
                "We present the efficiency at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison.",
                "Social optimum provides an efficient allocation by definition.",
                "For both user preference models, the efficiency at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum.",
                "The efficiency at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences.",
                "Fairness.",
                "Figure 2(e) and (f) present the utility uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness.",
                "While the social optimum yields perfect efficiency, it has poor fairness.",
                "The weightproportional method achieves the highest fairness among the three allocation methods, but the fairness at the equilibrium is close.",
                "The utility uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other.",
                "Although utility uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point.",
                "At the social optimum, utility uniformity can be infinitely poor, as some users may be allocated no resources at all.",
                "The same is true with respect to envy-freeness.",
                "The difference between uniform and correlated preferences is best demonstrated in the social optimum results.",
                "When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both utility uniformity and envy-freeness go to zero.",
                "As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation.",
                "These results demonstrate the tradeoff between the different allocation methods.",
                "The efficiency at the equilibrium is lower than the social optimum, but it performs much better with respect to fairness.",
                "The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite parallelism 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite parallelism model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 Efficiency Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: Efficiency level over time under the finite parallelism model with local search algorithm. n = 100.",
                "We also consider the finite parallelism model and use the local search algorithm, as described in Section 4.2, to adjust users bids.",
                "We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the simulation results for only the uniform distribution.",
                "In our experiments, the local search algorithm stops quickly - it usually discovers a local maximum within two iterations.",
                "As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high efficiency. 134 Convergence time.",
                "Let ∆ denote the parallelism bound that limits the maximum number of machines each user can bid on.",
                "We experiment with ∆ = 5 and ∆ = 20.",
                "In both cases, we use 100 machines and vary the number of users.",
                "Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly.",
                "The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20.",
                "We believe that the non-convergence is caused by moderate competition.",
                "No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids.",
                "High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence.",
                "However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids.",
                "In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2].",
                "Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall efficiency after a few iterations (as shown in Figure 5).",
                "Performance.",
                "In Figure 6, we present the efficiency, utility uniformity, and envy-freeness at the Nash equilibrium for the finite parallelism model.",
                "When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations.",
                "When ∆ = 5, there is a performance drop, in particular with respect to the fairness metrics, in the range between 20 and 40 users (where it does not converge).",
                "For a larger number of users, the system converges and achieves a lower level of utility uniformity, but a high degree of efficiency and envy-freeness, similar to those under the infinite parallelism model.",
                "As described above, this is due the competition ratio falling into the head-to-head range.",
                "When the parallelism bound is large (∆ = 20), the performance is closer to the infinite parallelism model, and we do not observe this drop in performance. 6.",
                "RELATED WORK There are two main groups of related work in resource allocation: those that incorporate an economic mechanism, and those that do not.",
                "One non-economic approach is scheduling (surveyed by Pinedo [20]).",
                "Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19].",
                "These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users.",
                "We view scheduling and resource allocation as two separate functions.",
                "Resource allocation divides a resource among different users while scheduling takes a given allocation and orders a users jobs.",
                "Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]).",
                "Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated.",
                "Unfortunately, reservations have a high latency to acquire resources, unlike the price-anticipating scheme we consider.",
                "The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive.",
                "Bellagio[3] uses the SHARE centralized allocator.",
                "SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities.",
                "Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation.",
                "The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some efficiency, but it also avoids the complexity and overhead of combinatorial auctions.",
                "There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows.",
                "Their methodology follows the study of congestion (potential) games [17, 22] by relating the Nash equilibrium to the solution of a (usually convex) global optimization problem.",
                "But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines.",
                "For example, unlike those games, there may exist multiple Nash equilibria in our game.",
                "Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7.",
                "CONCLUSIONS This work studies the performance of a market-based mechanism for distributed shared clusters using both analyatical and simulation methods.",
                "We show that despite the worst case bounds, the system can reach a high performance level at the Nash equilibrium in terms of both efficiency and fairness metrics.",
                "In addition, with a few exceptions under the finite parallelism model, the system reaches equilibrium quickly by using the best response algorithm and, when the number of users is not too small, by the greedy local adjustment method.",
                "While our work indicates that the price-anticipating scheme may work well for resource allocation for shared clusters, there are many interesting directions for future work.",
                "One direction is to consider more realistic utility functions.",
                "For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine.",
                "In practice, both assumptions may not be correct.",
                "For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine.",
                "When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling.",
                "Another assumption is that users have infinite work, so the more resources they can acquire, the better.",
                "In practice, users have finite work.",
                "One approach to address this is to model the users utility according to the time to finish a task rather than the amount of resources he receives.",
                "Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model.",
                "In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user Efficiency Utility uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user Efficiency Utility uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite parallelism model. n = 100. 8.",
                "ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions.",
                "We also thank the anonymous reviewers for their useful comments. 9.",
                "REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat.",
                "Resource Allocation in Federated Distributed Computing Infrastructures.",
                "In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat.",
                "Computational Resource Exchanges for Distributed Resource Allocation. 2004. [4] B. N. Chun and D. E. Culler.",
                "Market-based Proportional Resource Sharing for Clusters.",
                "Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang.",
                "A Price-anticipating Resource Allocation Mechanism for Distributed Shared Clusters.",
                "Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou.",
                "Microeconomic Algorithms for Load Balancing in Distributed Computer Systems.",
                "In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan.",
                "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.",
                "Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow.",
                "Data Structures for Weighted Matching and Nearest Common Ancestors with Linking.",
                "In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang.",
                "Strategic Buyers in a Sum Bid Game for Flat Networks.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis.",
                "Efficiency Loss in a Network Resource Allocation Game.",
                "Mathematics of Operations Research, 2004. [12] F. P. Kelly.",
                "Charging and Rate Control for Elastic Traffic.",
                "European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo.",
                "Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability.",
                "Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn.",
                "The Hungarian Method for the Assignment Problem.",
                "Naval Res.",
                "Logis.",
                "Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B.",
                "A. Huberman.",
                "Tycoon: an Implemention of a Distributed Market-Based Resource Allocation System.",
                "Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich.",
                "Congestion Games with Player-Specific Payoff Functions.",
                "Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley.",
                "Potential Games.",
                "Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou.",
                "Algorithms, Games, and the Internet.",
                "In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz.",
                "Combinatorial Optimization.",
                "Dover Publications, Inc., 1982. [20] M. Pinedo.",
                "Scheduling.",
                "Prentice Hall, 2002. [21] O. Regev and N. Nisan.",
                "The Popcorn Market: Online Markets for Computational Resources.",
                "In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal.",
                "A Class of Games Possessing Pure-Strategy Nash Equilibria.",
                "Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek.",
                "Optimal Allocation of a Divisible Good to Strategic Buyers.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen.",
                "A Microeconomic Scheduler for Parallel Computers.",
                "In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian.",
                "Equity, Envy, and Efficiency.",
                "Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B.",
                "A. Huberman, J. O. Kephart, and S. Stornetta.",
                "Spawn: A Distributed Computational Economy.",
                "IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason.",
                "Auction Protocols for Decentralized Scheduling.",
                "Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter.",
                "Classifying Scheduling Policies with respect to Unfairness in an M/GI/1.",
                "In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang.",
                "On the Efficiency and Fairness of a Fixed Budget Resource Allocation Game.",
                "Manuscript, 2004. 136"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "utility": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Price-Anticipating Resource Allocation Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget resource allocation game to understand the performance of a distributed marketbased resource allocation system.",
                "Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual <br>utility</br>.",
                "We look at both the efficiency and the fairness of the allocation at the equilibrium, where fairness is evaluated through the measures of <br>utility</br> uniformity and envy-freeness.",
                "We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high efficiency but poor fairness, the proposed allocation scheme achieves a nice balance of high degrees of efficiency and fairness at the equilibrium.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1.",
                "INTRODUCTION The primary advantage of distributed shared clusters like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources.",
                "This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users.",
                "Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users.",
                "Finally, sharing allows greater reliability because of redundancy in hosts and network connections.",
                "However, resource allocation in these systems remains the major challenge.",
                "The problem is how to allocate a shared resource both fairly and efficiently (where efficiency is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests.",
                "Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator.",
                "However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set.",
                "Instead, we examine a market-based resource allocation system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a bidding mechanism.",
                "In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource.",
                "This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26].",
                "Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets.",
                "In this work, we examine a price-anticipating scheme in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6).",
                "In this paper, we formulate the fixed budget resource allocation game and study the existence and performance of the Nash equilibria of this game.",
                "For evaluating the Nash equilibria, we consider both their efficiency, measuring how close the social welfare at equilibrium is to the social optimum, and fairness, measuring how different the users utilities are.",
                "Although rarely considered in previous game theoretical study, we believe fairness is a critical metric for a resource allocation schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair resource allocation in favor of one with less efficient, more fair resource allocation.",
                "We use both <br>utility</br> uniformity and envy-freeness to measure fairness.",
                "<br>utility</br> uniformity, which is common in Computer Science work, measures the closeness of utilities of different users.",
                "Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others.",
                "Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria.",
                "Using analysis, we show that there is always a Nash equilibrium in the fixed budget game if the <br>utility</br> functions satisfy a fairly weak and natural condition of strong competitiveness.",
                "We also show the worst case performance bounds: for m players the efficiency at equilibrium is Ω(1/ √ m), the <br>utility</br> uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83.",
                "Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their <br>utility</br>.",
                "As part of the fixed budget game analysis, we show that strategic users with linear <br>utility</br> functions can calculate their bids using a best response algorithm that quickly results in an allocation with high efficiency with little computational and communication overhead.",
                "We present variations of the best response algorithm for both finite and infinite parallelism tasks.",
                "In addition, we present a local greedy adjustment algorithm that converges more slowly than best response, but allows for non-linear or unformulatable <br>utility</br> functions. • We show that the price-anticipating resource allocation mechanism achieves a high degree of efficiency and fairness.",
                "Using simulation, we find that although the socially optimal allocation results in perfect efficiency, it also results in very poor fairness.",
                "Likewise, allocating according to only users preference weights results in a high fairness, but a mediocre efficiency.",
                "Intuition would suggest that efficiency and fairness are exclusive.",
                "Surprisingly, the Nash equilibrium, reached by each user iteratively applying the best response algorithm to adapt his bids, achieves nearly the efficiency of the social optimum and nearly the fairness of the weight-proportional allocation: the efficiency is ≥ 0.90, the <br>utility</br> uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system.",
                "In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy.",
                "The local adjustment algorithm performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize.",
                "As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of efficiency and fairness.",
                "The rest of the paper is organized as follows.",
                "We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite parallelism model in Section 3.",
                "In Section 4, we describe algorithms for users to optimize their own <br>utility</br> in the fixed budget game.",
                "In Section 5, we describe our simulator and simulation results.",
                "We describe related work in Section 6.",
                "We conclude by discussing some limit of our model and future work in Section 7. 2.",
                "THE MODEL Price-Anticipating Resource Allocation.",
                "We study the problem of allocating a set of divisible resources (or machines).",
                "Suppose that there are m users and n machines.",
                "Each machine can be continuously divided for allocation to multiple users.",
                "An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1.",
                "Let Ω denote the set of all the allocation schemes.",
                "We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed.",
                "Formally, suppose that user i submits a non-negative bid xij to machine j.",
                "The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j.",
                "When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone.",
                "We call xi = (xi1, . . . , xin) the bidding vector of user i.",
                "The additional consideration we have is that each user i has a budget constraint Xi.",
                "Therefore, user is total bids have to sum up to his budget, i.e.",
                "Pn j=1 xij = Xi.",
                "The budget constraints come from the fact that the users do not have infinite budget.",
                "<br>utility</br> Functions.",
                "Each user is <br>utility</br> is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine.",
                "Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines.",
                "Therefore, the basic <br>utility</br> function we consider is the linear <br>utility</br> function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j.",
                "For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications.",
                "As a result, w11 > w12 and w21 < w22.",
                "Our definition of <br>utility</br> functions corresponds to the user having enough jobs or enough parallelism within jobs to utilize all the machines.",
                "Consequently, the users goal is to grab as much of a resource as possible.",
                "We call this the infinite parallelism model.",
                "In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity).",
                "To model this, we also consider the more realistic finite parallelism model, where the users parallelism is bounded by ki, and the users <br>utility</br> Ui is the sum of the ki largest wijrij.",
                "In this model, the user only submits bids to up to ki machines.",
                "Our abstraction is to capture the essense of the problem and facilitate our analysis.",
                "In Section 7, we discuss the limit of the above definition of <br>utility</br> functions.",
                "Best Response.",
                "As typically, we assume the users are selfish and strategic - they all act to maximize their own <br>utility</br>, defined by their <br>utility</br> functions.",
                "From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0.",
                "The difficulty of the above optimization problem depends on the formulation of Ui.",
                "We will show later how to solve it for the infinite parallelism model and provide a heuristic for finite parallelism model.",
                "Nash Equilibrium.",
                "By the assumption that the user is selfish, each users bidding vector is the best response to the system.",
                "The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users.",
                "Such a state is known as the Nash equilibrium, a central concept in Game Theory.",
                "Formally, the bidding vectors x1, . . . , xm is a Nash equilibrium if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) .",
                "The Nash equilibrium is desirable because it is a stable state at which no one has incentive to change his strategy.",
                "But a game may not have an equilibrium.",
                "Indeed, a Nash equilibrium may not exist in the price anticipating scheme we define above.",
                "This can be shown by a simple example of two players and two machines.",
                "For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2.",
                "Then player 1 should never bid on machine 2 because it has no value to him.",
                "Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the Nash equilibrium.",
                "We should note that even the mixed strategy equilibrium does not exist in this example.",
                "Clearly, this happens whenever there is a resource that is wanted by only one player.",
                "To rule out this case, we consider those strongly competitive games.1 Under the infinite parallelism model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0.",
                "Under such a condition, we have that (see [5] for a proof), Theorem 1.",
                "There always exists a pure strategy Nash equilibrium in a strongly competitive game.",
                "Given the existence of the Nash equilibrium, the next important question is the performance at the Nash equilibrium, which is often measured by its efficiency and fairness.",
                "Efficiency (Price of Anarchy).",
                "For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω.",
                "Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities.",
                "The efficiency at an allocation scheme ω is defined as π(ω) = U(ω) U∗ .",
                "Let Ω0 denote the set of the allocation at the Nash equilibrium.",
                "When there exists Nash equilibrium, i.e.",
                "Ω0 = ∅, define the efficiency of a game Q to be π(Q) = minω∈Ω0 π(ω).",
                "It is usually the case that π < 1, i.e. there is an efficiency loss at a Nash equilibrium.",
                "This is the price of anarchy [18] paid for not having central enforcement of the users good behavior.",
                "This price is interesting because central control results in the best possible outcome, but is not possible in most cases.",
                "Fairness.",
                "While the definition of efficiency is standard, there are multiple ways to define fairness.",
                "We consider two metrics.",
                "One is by comparing the users utilities.",
                "The <br>utility</br> uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum <br>utility</br> and the maximum utility among the users.",
                "Such definition (or <br>utility</br> discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature.",
                "Under this definition, the <br>utility</br> uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω).",
                "The other metric extensively studied in Economics is the concept of envy-freeness [25].",
                "Unlike the <br>utility</br> uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive.",
                "Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine.",
                "These alternatives, however, introduce the problem of coming up with the right price or limit.",
                "When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme.",
                "Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3.",
                "NASH EQUILIBRIUM In this section, we present some theoretical results regarding the performance at Nash equilibrium under the infinite parallelism model.",
                "We assume that the game is strongly competitive to guarantee the existence of equilibria.",
                "For a meaningful discussion of efficiency and fairness, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same <br>utility</br> when they own all the resources.",
                "This precludes the case when a user has an extremely high budget, resulting in very low efficiency or low fairness at equilibrium.",
                "We first provide a characterization of the equilibria.",
                "By definition, the bidding vectors x1, . . . , xm is a Nash equilibrium if and only if each players strategy is the best response to the groups bids.",
                "Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid.",
                "Under the infinite parallelism model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e.",
                "U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties.",
                "We start with two special cases to provide some intuition about the game.",
                "The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games.",
                "Let x and y denote the respective bids of users 1 and 2 on machine 1.",
                "Denote by s = x + y and δ = (2 − s)/s.",
                "Equal-weight game.",
                "In Figure 1, both users have equal valuations for the two machines.",
                "By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α.",
                "Thus, there exists a unique Nash equilibrium of the game where the two users have the same bidding vector.",
                "At the equilibrium, the <br>utility</br> of each user is 1/2, and the social welfare is 1.",
                "On the other hand, the social optimum is clearly 1.",
                "Thus, the equal-weight game is ideal as the efficiency, <br>utility</br> uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games.",
                "Opposite-weight game.",
                "The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines.",
                "Assume that α ≥ 1/2.",
                "Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each Nash equilibrium corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1.",
                "Clearly, δ = 1 is a root of f(δ).",
                "When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine.",
                "At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828.",
                "However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria.",
                "Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid.",
                "In this case, user 1 gets most of machine 1 and almost half of machine 2.",
                "The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4.",
                "This solves to α0 = 2+ √ 2 4 ≈ 0.854.",
                "Those asymmetric equilibria at δ = 1 are bad as they yield lower efficiency than the symmetric equilibrium.",
                "Let δ0 be the minimum root.",
                "When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0.",
                "Then, x, y → 1.",
                "Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75.",
                "From the above simple game, we already observe that the Nash equilibrium may not be unique, which is different from many congestion games in which the Nash equilibrium is unique.",
                "For the general two player game, we can show that 0.75 is actually the worst efficiency bound with a proof in [5].",
                "Further, at the asymmetric equilibrium, the <br>utility</br> uniformity approaches 1/2 when α → 1.",
                "This is the worst possible for two player games because as we show in Section 3.2, a users <br>utility</br> at any Nash equilibrium is at least 1/m in the m-player game.",
                "Another consequence is that the two player game is always envy-free.",
                "Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively.",
                "Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free.",
                "Theorem 2.",
                "For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1.",
                "All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large.",
                "The following example shows the worst case bound.",
                "Consider a system with m = n2 + n players and n machines.",
                "Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine.",
                "The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines.",
                "Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine.",
                "Hence, the total money on each machine is n + 1.",
                "At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total <br>utility</br> of n3 · 1 n2(n+1) < 1.",
                "The other n players each receives 1 n+1 on their favorite machine, resulting in a total <br>utility</br> of n · 1 n+1 < 1.",
                "Therefore, the total <br>utility</br> of the equilibrium is < 2, while the social optimum is n = Θ( √ m).",
                "This bound is the worst possible.",
                "What about the <br>utility</br> uniformity of the multi-player allocation game?",
                "We next show that the <br>utility</br> uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i.",
                "User i can ensure a <br>utility</br> of 1/m by distributing his budget proportionally to the current bids.",
                "That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1.",
                "Therefore, rij = 1 1+m−1 = 1 m .",
                "The total <br>utility</br> of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m .",
                "Since each users <br>utility</br> cannot exceed 1, the minimal possible uniformity is 1/m.",
                "While the <br>utility</br> uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29].",
                "To summarize, we have that Theorem 3.",
                "For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2.",
                "All of these bounds are tight in the worst case. 4.",
                "ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite parallelism model.",
                "However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the Nash equilibrium for the typical distribution of <br>utility</br> functions.",
                "In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response algorithm leads to the equilibrium.",
                "To answer these questions, we resort to simulations.",
                "In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments.",
                "We consider both the infinite parallelism and finite parallelism model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most.",
                "We now present the algorithm for computing the best response.",
                "Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0.",
                "To compute the best response, we first sort wj yj in decreasing order.",
                "Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn .",
                "Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution.",
                "We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too.",
                "Suppose this were not true.",
                "Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) .",
                "Thus it contradicts with the optimality condition (1).",
                "Suppose that k = max{i|x∗ i > 0}.",
                "Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 .",
                "Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi .",
                "The remaining question is how to determine k. It is the largest value such that x∗ k > 0.",
                "Thus, we obtain the following algorithm to compute the best response of a user: 1.",
                "Sort the machines according to wi yi in decreasing order. 2.",
                "Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3.",
                "Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj.",
                "The computational complexity of this algorithm is O(n log n), dominated by the sorting.",
                "In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible.",
                "The best response algorithm must send and receive O(n) messages because each user must obtain the total bids from each host.",
                "In practice, this is more significant than the computational cost.",
                "Note that hosts only reveal to users the sum of the bids on them.",
                "As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite Parallelism Model Recall that in the finite parallelism model, each user i only places bids on at most ki machines.",
                "Of course, the infinite parallelism model is just a special case of finite parallelism model in which ki = n for all the is.",
                "In the finite parallelism model, computing the social optimum is no longer trivial due to bounded parallelism.",
                "It can instead be computed by using the maximum matching algorithm.",
                "Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj).",
                "A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching.",
                "As a result, the following lemma holds.",
                "Lemma 1.",
                "The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching algorithm to compute the social optimum.",
                "The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14].",
                "We choose to implement the Hungarian algorithm [14, 19] because of its simplicity.",
                "There may exist a more efficient algorithm for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question.",
                "However, we do not know an efficient algorithm to compute the best response under the finite parallelism model.",
                "Instead, we provide the following local search heuristic.",
                "Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn.",
                "Let the users budget be X and the parallelism bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users <br>utility</br>.",
                "For a subset of machines A, denote by x(A) the best response on A without parallelism bound and by U(A) the <br>utility</br> obtained by the best response algorithm.",
                "The local search works as follows: 1.",
                "Set A to be the k machines with the highest wi/yi. 2.",
                "Compute U(A) by the infinite parallelism best response algorithm (Sec 4.1) on A. 3.",
                "For each i ∈ A and each j /∈ A, repeat 4.",
                "Let B = A − {i} + {j}, compute U(B). 5.",
                "If(U(B) > U(A)), let A ← B, and goto 2. 6.",
                "Output x(A).",
                "Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response <br>utility</br>.",
                "If yes, we swap the machines and repeat the process.",
                "Otherwise, we have reached a local maxima and output that value.",
                "We suspect that the local maxima that this algorithm finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it.",
                "However, in our simulations, this algorithm quickly converges to a high (≥ .7) efficiency. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear <br>utility</br> functions described earlier.",
                "In practice, <br>utility</br> functions may have more a complicated form, or even worse, a user may not have a formulation of his <br>utility</br> function.",
                "We do assume that the user still has a way to measure his <br>utility</br>, which is the minimum assumption necessary for any market-based resource allocation mechanism.",
                "In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows.",
                "A user finds the two machines that provide him with the highest and lowest marginal <br>utility</br>.",
                "He then moves a fixed small amount of money from the machine with low marginal <br>utility</br> to the machine with the higher one.",
                "This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same.",
                "This condition guarantees the allocation is the optimum when the <br>utility</br> function is concave.",
                "The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5.",
                "SIMULATION RESULTS While the analytic results provide us with worst-case analysis for the infinite parallelism model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite parallelism model.",
                "First, we determine whether the user bidding process converges, and if so, what the rate of convergence is.",
                "Second, in cases of convergence, we look at the performance at equilibrium, using the efficiency and fairness metrics defined above.",
                "Iterative Method.",
                "In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met.",
                "The initial bid is set proportional to the users weights on the machines.",
                "We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3.",
                "Convergence Criteria.",
                "Convergence time measures how quickly the system reaches equilibrium.",
                "It is particularly important in the highly dynamic environment of distributed shared clusters, in which the systems conditions may change before reaching the equilibrium.",
                "Thus, a high convergence rate may be more significant than the efficiency at the equilibrium.",
                "There are several different criteria for convergence.",
                "The strongest criterion is to require that there is only negligible change in the bids of each user.",
                "The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged.",
                "The less strict <br>utility</br> gap criterion requires there to be only negligible change in the users <br>utility</br>.",
                "Given users concern for <br>utility</br>, this is a more natural definition.",
                "Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small <br>utility</br> gain.",
                "Therefore, we use the <br>utility</br> gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the <br>utility</br> gap of each user is smaller than (0.001 in our experiments).",
                "However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in <br>utility</br> as they move money around.",
                "For this method, we use the marginal <br>utility</br> gap criterion.",
                "We compare the highest and lowest <br>utility</br> margins on the machines.",
                "If the difference is negligible, then we consider the system to be converged.",
                "In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion.",
                "Under this criterion, a system has stabilized if the change in social welfare is ≤ .",
                "Individual users <br>utility</br> may not have converged.",
                "This criterion is useful to evaluate how quickly the system as a whole reaches a particular efficiency level.",
                "User preferences.",
                "We experiment with two models of user preferences, random distribution and correlated distribution.",
                "With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution.",
                "In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run.",
                "To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth).",
                "For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk.",
                "By using these profiles, we compress the parameter space and introduce correlations between users and machines.",
                "In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users).",
                "Sections 5.1 and 5.2 present the simulation results when we apply the infinite parallelism and finite parallelism models, respectively.",
                "If the system converges, we report the number of iterations until convergence.",
                "A convergence time of 200 iterations indicates non-convergence, in which case we report the efficiency and fairness values at the point we terminate the simulation. 5.1 Infinite parallelism In this section, we apply the infinite parallelism model, which assumes that users can use an unlimited number of machines.",
                "We present the efficiency and fairness at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively).",
                "We present results for the two user preference models.",
                "With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter).",
                "In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1).",
                "Convergence Time.",
                "Figure 2 shows the convergence time, efficiency and fairness of the infinite parallelism model under uniform (left) and correlated (right) preferences.",
                "Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: Efficiency, <br>utility</br> uniformity, enviness and convergence time as a function of the number of users under the infinite parallelism model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite parallelism model. number of users = 40. n = 100.",
                "The best-response algorithm converges within a few number of iterations for any number of users.",
                "In contrast, the local greedy adjustment algorithm does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users.",
                "We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc.",
                "Regardless, the local greedy adjustment method stabilizes within 100 iterations.",
                "Figure 3 presents the efficiency over time for a system with 40 users.",
                "It demonstrates that while both adjustment methods reach the same social welfare, the best-response algorithm is faster.",
                "In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it.",
                "Efficiency.",
                "Figure 2 (c) and (d) present the efficiency as a function of the number of users.",
                "We present the efficiency at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison.",
                "Social optimum provides an efficient allocation by definition.",
                "For both user preference models, the efficiency at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum.",
                "The efficiency at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences.",
                "Fairness.",
                "Figure 2(e) and (f) present the <br>utility</br> uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness.",
                "While the social optimum yields perfect efficiency, it has poor fairness.",
                "The weightproportional method achieves the highest fairness among the three allocation methods, but the fairness at the equilibrium is close.",
                "The <br>utility</br> uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other.",
                "Although <br>utility</br> uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point.",
                "At the social optimum, <br>utility</br> uniformity can be infinitely poor, as some users may be allocated no resources at all.",
                "The same is true with respect to envy-freeness.",
                "The difference between uniform and correlated preferences is best demonstrated in the social optimum results.",
                "When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both <br>utility</br> uniformity and envy-freeness go to zero.",
                "As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation.",
                "These results demonstrate the tradeoff between the different allocation methods.",
                "The efficiency at the equilibrium is lower than the social optimum, but it performs much better with respect to fairness.",
                "The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite parallelism 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite parallelism model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 Efficiency Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: Efficiency level over time under the finite parallelism model with local search algorithm. n = 100.",
                "We also consider the finite parallelism model and use the local search algorithm, as described in Section 4.2, to adjust users bids.",
                "We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the simulation results for only the uniform distribution.",
                "In our experiments, the local search algorithm stops quickly - it usually discovers a local maximum within two iterations.",
                "As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high efficiency. 134 Convergence time.",
                "Let ∆ denote the parallelism bound that limits the maximum number of machines each user can bid on.",
                "We experiment with ∆ = 5 and ∆ = 20.",
                "In both cases, we use 100 machines and vary the number of users.",
                "Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly.",
                "The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20.",
                "We believe that the non-convergence is caused by moderate competition.",
                "No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids.",
                "High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence.",
                "However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids.",
                "In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2].",
                "Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall efficiency after a few iterations (as shown in Figure 5).",
                "Performance.",
                "In Figure 6, we present the efficiency, <br>utility</br> uniformity, and envy-freeness at the Nash equilibrium for the finite parallelism model.",
                "When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations.",
                "When ∆ = 5, there is a performance drop, in particular with respect to the fairness metrics, in the range between 20 and 40 users (where it does not converge).",
                "For a larger number of users, the system converges and achieves a lower level of <br>utility</br> uniformity, but a high degree of efficiency and envy-freeness, similar to those under the infinite parallelism model.",
                "As described above, this is due the competition ratio falling into the head-to-head range.",
                "When the parallelism bound is large (∆ = 20), the performance is closer to the infinite parallelism model, and we do not observe this drop in performance. 6.",
                "RELATED WORK There are two main groups of related work in resource allocation: those that incorporate an economic mechanism, and those that do not.",
                "One non-economic approach is scheduling (surveyed by Pinedo [20]).",
                "Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19].",
                "These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users.",
                "We view scheduling and resource allocation as two separate functions.",
                "Resource allocation divides a resource among different users while scheduling takes a given allocation and orders a users jobs.",
                "Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]).",
                "Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated.",
                "Unfortunately, reservations have a high latency to acquire resources, unlike the price-anticipating scheme we consider.",
                "The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive.",
                "Bellagio[3] uses the SHARE centralized allocator.",
                "SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities.",
                "Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation.",
                "The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some efficiency, but it also avoids the complexity and overhead of combinatorial auctions.",
                "There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows.",
                "Their methodology follows the study of congestion (potential) games [17, 22] by relating the Nash equilibrium to the solution of a (usually convex) global optimization problem.",
                "But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines.",
                "For example, unlike those games, there may exist multiple Nash equilibria in our game.",
                "Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7.",
                "CONCLUSIONS This work studies the performance of a market-based mechanism for distributed shared clusters using both analyatical and simulation methods.",
                "We show that despite the worst case bounds, the system can reach a high performance level at the Nash equilibrium in terms of both efficiency and fairness metrics.",
                "In addition, with a few exceptions under the finite parallelism model, the system reaches equilibrium quickly by using the best response algorithm and, when the number of users is not too small, by the greedy local adjustment method.",
                "While our work indicates that the price-anticipating scheme may work well for resource allocation for shared clusters, there are many interesting directions for future work.",
                "One direction is to consider more realistic <br>utility</br> functions.",
                "For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine.",
                "In practice, both assumptions may not be correct.",
                "For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine.",
                "When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling.",
                "Another assumption is that users have infinite work, so the more resources they can acquire, the better.",
                "In practice, users have finite work.",
                "One approach to address this is to model the users <br>utility</br> according to the time to finish a task rather than the amount of resources he receives.",
                "Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model.",
                "In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user Efficiency <br>utility</br> uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user Efficiency <br>utility</br> uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite parallelism model. n = 100. 8.",
                "ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions.",
                "We also thank the anonymous reviewers for their useful comments. 9.",
                "REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat.",
                "Resource Allocation in Federated Distributed Computing Infrastructures.",
                "In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat.",
                "Computational Resource Exchanges for Distributed Resource Allocation. 2004. [4] B. N. Chun and D. E. Culler.",
                "Market-based Proportional Resource Sharing for Clusters.",
                "Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang.",
                "A Price-anticipating Resource Allocation Mechanism for Distributed Shared Clusters.",
                "Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou.",
                "Microeconomic Algorithms for Load Balancing in Distributed Computer Systems.",
                "In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan.",
                "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.",
                "Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow.",
                "Data Structures for Weighted Matching and Nearest Common Ancestors with Linking.",
                "In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang.",
                "Strategic Buyers in a Sum Bid Game for Flat Networks.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis.",
                "Efficiency Loss in a Network Resource Allocation Game.",
                "Mathematics of Operations Research, 2004. [12] F. P. Kelly.",
                "Charging and Rate Control for Elastic Traffic.",
                "European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo.",
                "Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability.",
                "Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn.",
                "The Hungarian Method for the Assignment Problem.",
                "Naval Res.",
                "Logis.",
                "Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B.",
                "A. Huberman.",
                "Tycoon: an Implemention of a Distributed Market-Based Resource Allocation System.",
                "Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich.",
                "Congestion Games with Player-Specific Payoff Functions.",
                "Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley.",
                "Potential Games.",
                "Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou.",
                "Algorithms, Games, and the Internet.",
                "In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz.",
                "Combinatorial Optimization.",
                "Dover Publications, Inc., 1982. [20] M. Pinedo.",
                "Scheduling.",
                "Prentice Hall, 2002. [21] O. Regev and N. Nisan.",
                "The Popcorn Market: Online Markets for Computational Resources.",
                "In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal.",
                "A Class of Games Possessing Pure-Strategy Nash Equilibria.",
                "Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek.",
                "Optimal Allocation of a Divisible Good to Strategic Buyers.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen.",
                "A Microeconomic Scheduler for Parallel Computers.",
                "In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian.",
                "Equity, Envy, and Efficiency.",
                "Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B.",
                "A. Huberman, J. O. Kephart, and S. Stornetta.",
                "Spawn: A Distributed Computational Economy.",
                "IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason.",
                "Auction Protocols for Decentralized Scheduling.",
                "Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter.",
                "Classifying Scheduling Policies with respect to Unfairness in an M/GI/1.",
                "In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang.",
                "On the Efficiency and Fairness of a Fixed Budget Resource Allocation Game.",
                "Manuscript, 2004. 136"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Múltiples usuarios deciden cómo distribuir su presupuesto (ofertas) entre múltiples máquinas de acuerdo con sus preferencias individuales para maximizar su \"utilidad\" individual.utilidad",
                "Observamos tanto la eficiencia como la equidad de la asignación en el equilibrio, donde la equidad se evalúa a través de las medidas de la uniformidad de la \"utilidad\" y la envidia.utilidad",
                "Utilizamos tanto la uniformidad de la \"utilidad\" como la envidia de la envidia para medir la equidad.utilidad",
                "La uniformidad de \"utilidad\", que es común en el trabajo de informática, mide la cercanía de los servicios públicos de diferentes usuarios.utilidad",
                "Usando el análisis, mostramos que siempre hay un equilibrio de Nash en el juego de presupuesto fijo si las funciones de \"utilidad\" satisfacen una condición bastante débil y natural de fuerte competitividad.utilidad",
                "También mostramos los peores límites de rendimiento: para los jugadores M, la eficiencia en el equilibrio es Ω (1/ √ m), la uniformidad de \"utilidad\" es ≥ 1/ m, y la envidia ≥ 2 √ 2-2 ≈ 0.83.utilidad",
                "Aunque estos límites son bastante bajos, las simulaciones descritas a continuación indican que estos límites son demasiado pesimistas.• Describimos algoritmos que permiten a los usuarios estratégicos optimizar su \"utilidad\".utilidad",
                "Como parte del análisis de juegos de presupuesto fijo, mostramos que los usuarios estratégicos con funciones lineales de \"utilidad\" pueden calcular sus ofertas utilizando un algoritmo de respuesta mejor que resulte rápidamente en una asignación con alta eficiencia con poca sobrecarga computacional y de comunicación.utilidad",
                "Además, presentamos un algoritmo de ajuste codicioso local que converge más lentamente que la mejor respuesta, pero permite funciones de \"utilidad\" no lineales o no formulables.• Mostramos que el mecanismo de asignación de recursos que supera el precio logra un alto grado de eficiencia y equidad.utilidad",
                "Sorprendentemente, el equilibrio NASH, alcanzado por cada usuario, aplica iterativamente el mejor algoritmo de respuesta para adaptar sus ofertas, logra casi la eficiencia de la óptima social y casi la equidad de la asignación de proporción de peso: la eficiencia es ≥ 0.90, la \"utilidad\"La uniformidad es ≥ 0.65, y la envidia es ≥ 0.97, independiente del número de usuarios en el sistema.utilidad",
                "En la Sección 4, describimos algoritmos para que los usuarios optimicen su propia \"utilidad\" en el juego de presupuesto fijo.utilidad",
                "\"funciones de utilidad.utilidad",
                "Cada usuario es \"utilidad\" está representado por una interfaz de usuario de la función de la fracción (ri1, ..., rin) que el usuario recibe de cada máquina.utilidad",
                "Por lo tanto, la función básica de \"utilidad\" que consideramos es la función lineal de \"utilidad\": ui (ri1, · · ·, rin) = wi1ri1 +· · · +winrin, donde wij ≥ 0 es el usuario preferencia privada, también se llama suyapeso, en la máquina j.utilidad",
                "Nuestra definición de funciones de \"utilidad\" corresponde a que el usuario tenga suficientes trabajos o suficiente paralelismo dentro de los trabajos para utilizar todas las máquinas.utilidad",
                "Para modelar esto, también consideramos el modelo de paralelismo finito más realista, donde el paralelismo de los usuarios está limitado por KI, y la interfaz de usuario de \"utilidad\" de los usuarios es la suma de la KI más grande Wijrij.utilidad",
                "En la Sección 7, discutimos el límite de la definición anterior de funciones de \"utilidad\".utilidad",
                "Como normalmente, asumimos que los usuarios son egoístas y estratégicos: todos actúan para maximizar su propia \"utilidad\", definida por sus funciones de \"utilidad\".utilidad",
                "La uniformidad de \"utilidad\" τ (Ω) de un esquema de asignación Ω se define como mini ui (Ω) maxi ui (Ω), la relación de la \"utilidad\" mínima y la utilidad máxima entre los usuarios.utilidad",
                "Dicha definición (o discrepancia de \"utilidad\" definida de manera similar como maxi ui (Ω) mini ui (ω)) se usa ampliamente en la literatura de informática.utilidad",
                "Según esta definición, la uniformidad de \"utilidad\" τ (Q) de un juego Q se define como τ (q) = minω∈ω0 τ (Ω).utilidad",
                "A diferencia de la métrica de uniformidad de \"utilidad\", la envidia se refiere a cómo el usuario percibe el valor de la acción que le asignó, en comparación con las acciones que reciben otros usuarios.utilidad",
                "Para una discusión significativa de la eficiencia y la justicia, suponemos que los usuarios son simétricos al exigir que Xi = 1 ypn J = 1 wij = 1 para todos los 1 ≤ i ≤ m.O informalmente, requerimos que todos los usuarios tengan el mismo presupuesto, y tienen la misma \"utilidad\" cuando poseen todos los recursos.utilidad",
                "En el equilibrio, la \"utilidad\" de cada usuario es 1/2, y el bienestar social es 1. Utilidad",
                "Por lo tanto, el juego de igual peso es ideal como la eficiencia, la uniformidad de \"utilidad\", y la envidia es todo 1. 129 m1 m2 u1 α 1-α u2 α 1-α m1 m2 u1 α 1-α u2 1-α α α α α α α(a) Juego de igual peso (b) Juego de peso opuesto Figura 1: Dos casos especiales de juegos de dos jugadores.utilidad",
                "Además, en el equilibrio asimétrico, la uniformidad de la \"utilidad\" se acerca a 1/2 cuando α → 1. Utilidad",
                "Este es lo peor posible para los juegos de dos jugadores porque, como mostramos en la Sección 3.2, una \"utilidad\" de los usuarios en cualquier equilibrio de Nash es al menos 1/m en el juego M-jugador.utilidad",
                "En este equilibrio, cada uno de los primeros jugadores de N2 recibe 1 N 1/N n+1 = 1 n2 (n+1) en cada máquina, lo que resulta en una \"utilidad\" total de N3 · 1 n2 (n+1) <1. utilidad",
                "Los otros jugadores n reciben cada uno 1 n+1 en su máquina favorita, lo que resulta en una \"utilidad\" total de N · 1 n+1 <1. Utilidad",
                "Por lo tanto, la \"utilidad\" total del equilibrio es <2, mientras que el óptimo social es n = θ (√ m).utilidad",
                "¿Qué pasa con la uniformidad de \"utilidad\" del juego de asignación de múltiples jugadores?utilidad",
                "Luego mostramos que la uniformidad de \"utilidad\" del juego de asignación de jugadores M no puede exceder m.Sea (S1, ..., Sn) las ofertas totales actuales en las máquinas n, excluyendo el usuario i.utilidad",
                "Usuario puedo asegurar una \"utilidad\" de 1/m distribuyendo su presupuesto proporcionalmente a las ofertas actuales.utilidad",
                "La \"utilidad\" total del usuario I es nx j = 1 rijwij = (1/m) nx j = 1 wij = 1/m.utilidad",
                "Dado que cada \"utilidad\" de los usuarios no puede exceder 1, la uniformidad mínima posible es 1/m.utilidad",
                "Mientras que la uniformidad de la \"utilidad\" puede ser pequeña, la introducción de la envidia, por otro lado, está limitada por una constante de 2 √ 2-2 ≈ 0.828, como se muestra en [29].utilidad",
                "Sin embargo, las preguntas más interesantes en la práctica son cómo se puede alcanzar el equilibrio y cuál es el rendimiento en el equilibrio de Nash para la distribución típica de las funciones de \"utilidad\".utilidad",
                "Deje que el presupuesto de los usuarios sea x y el paralelismo vinculado sea k.Nuestro objetivo es calcular una asignación de X a las máquinas hasta K para maximizar la \"utilidad\" de los usuarios.utilidad",
                "Para un subconjunto de máquinas A, denota por x (a) la mejor respuesta en un sin paralelismo unido y por u (a) la \"utilidad\" obtenida por el algoritmo de mejor respuesta.utilidad",
                "Intuitivamente, por la heurística de búsqueda local, probamos si podemos intercambiar una máquina en una por una que no esté en A para mejorar la mejor \"utilidad\" de respuesta.utilidad",
                "Sin embargo, en nuestras simulaciones, este algoritmo converge rápidamente a una eficiencia alta (≥ .7).131 4.3 Ajuste de codicio local Los algoritmos de respuesta de los mejores de respuesta solo funcionan solo para las funciones lineales de \"utilidad\" descritas anteriormente.utilidad",
                "En la práctica, las funciones de \"utilidad\" pueden tener una forma más complicada, o peor aún, un usuario puede no tener una formulación de su función de \"utilidad\".utilidad",
                "Suponemos que el usuario todavía tiene una manera de medir su \"utilidad\", que es la suposición mínima necesaria para cualquier mecanismo de asignación de recursos basado en el mercado.utilidad",
                "Un usuario encuentra las dos máquinas que le proporcionan la \"utilidad\" marginal más alta y más baja.utilidad",
                "Luego mueve una pequeña cantidad fija de dinero de la máquina con una \"utilidad\" marginal baja a la máquina con la más alta.utilidad",
                "Esta condición garantiza que la asignación sea óptima cuando la función \"utilidad\" es cóncava.utilidad",
                "El criterio de brecha de \"utilidad\" menos estricto requiere que solo haya un cambio insignificante en la \"utilidad\" de los usuarios.utilidad",
                "Dada la preocupación de los usuarios por la \"utilidad\", esta es una definición más natural.utilidad",
                "De hecho, en la práctica, el usuario probablemente no esté dispuesto a reasignar sus ofertas dramáticamente para una pequeña ganancia de \"utilidad\".utilidad",
                "Por lo tanto, utilizamos el criterio de brecha de \"utilidad\" para medir el tiempo de convergencia para el mejor método de actualización de respuesta, es decir, consideramos que el sistema ha convergido si la brecha de \"utilidad\" de cada usuario es menor que (0.001 en nuestros experimentos).utilidad",
                "Sin embargo, este criterio no funciona para el método de ajuste codicioso local porque los usuarios de ese método experimentarán fluctuaciones constantes en la \"utilidad\" a medida que avanzan el dinero.utilidad",
                "Para este método, utilizamos el criterio de brecha marginal de \"utilidad\".utilidad",
                "Comparamos los márgenes de \"utilidad\" más altos y más bajos en las máquinas.utilidad",
                "Los usuarios individuales \"utilidad\" pueden no haber convergido.utilidad",
                "Las parcelas (a) y (b) muestran el tiempo de convergencia y estabilización de los métodos de ajuste locales y de ajuste locales.132 0 50 100 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime (#Iterations) Número de usuarios Preferencias uniformes (a) Best-respuesta codiciosa (convergencia) codicioso (estabilización) 0 50 100 150 200 0 20 40 60 100 100 100120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional SocialÓptimo 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de usuarios (D) Equilibrio de Nash Pesaje Proporciones Social 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 UtilityuniformityNúmero de usuarios (e) equilibrio NASH peso-proporción óptimo social 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 0.9 1 0 20 40 60 80 100 120 140 160 Número de usuarios (F) Equilibrio NASH Peso Proporción Social óptimo 0 0.2 0.4 0.6 0.8 0.8 0.8 0.8 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.81 0 20 40 60 80 100 120 140 160 Número de envidia de envidia de usuarios (g) Equilibrio de Nash Peso proporcional Optimo Social 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de usuarios (H) Equilibrio NASH PROPORTALSocial Optimum Figura 2: Eficiencia, uniformidad de \"utilidad\", envidia y tiempo de convergencia en función del número de usuarios bajo el modelo de paralelismo infinito, con preferencias uniformes y correlacionadas.n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Eficiencia Número de iteración Mejor respuesta codiciosa Figura 3: Nivel de eficiencia con el tiempo bajo el modelo de paralelismo infinito.número de usuarios = 40. N = 100. Utilidad",
                "La Figura 2 (e) y (f) presentan la uniformidad de la \"utilidad\" en función del número de usuarios, y las figuras (g) y (h) presentan la envolía de envidia.utilidad",
                "La uniformidad de la \"utilidad\" es ligeramente mejor en el equilibrio bajo preferencias uniformes (> 0.7) que bajo preferencias correlacionadas (> 0.6), ya que cuando las preferencias de los usuarios están más alineadas, la felicidad de los usuarios es más probable que sea a expensas entre sí.utilidad",
                "Aunque la uniformidad de \"utilidad\" disminuye en el número de usuarios, sigue siendo razonable incluso para una gran cantidad de usuarios y se aplana en algún momento.utilidad",
                "En el Social Optimum, la uniformidad de \"utilidad\" puede ser infinitamente pobre, ya que a algunos usuarios no se les puede asignar recursos en absoluto.utilidad",
                "Cuando el número de usuarios es pequeño, puede ser posible satisfacer a todos los usuarios hasta cierto punto si sus preferencias no están alineadas, pero si están alineadas, incluso con un número muy pequeño de usuarios, algunos usuarios no obtienen recursos, por lo tanto, ambos \"Utilidad \"Uniformidad y envidia de envidia van a cero.utilidad",
                "En la Figura 6, presentamos la eficiencia, la uniformidad de la \"utilidad\" y la fluidez de la envidia en el equilibrio de Nash para el modelo de paralelismo finito.utilidad",
                "Para un mayor número de usuarios, el sistema converge y logra un nivel más bajo de uniformidad de \"utilidad\", pero un alto grado de eficiencia y envidia, similar a las del modelo de paralelismo infinito.utilidad",
                "Una dirección es considerar funciones de \"utilidad\" más realistas.utilidad",
                "Un enfoque para abordar esto es modelar la \"utilidad\" de los usuarios de acuerdo con el momento de finalizar una tarea en lugar de la cantidad de recursos que recibe.utilidad",
                "Además de las preguntas habituales sobre los juegos repetidos, también sería importante comprender cómo los usuarios deben asignar sus presupuestos sabiamente con el tiempo para acomodar las necesidades futuras.135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Número de usuarios (a) Límite: 5 máquinas/eficiencia del usuario \"utilidad\" UNIFORITY Envy-Freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 60 60 7080 90 Número de usuarios (b) Límite: 20 máquinas/eficiencia del usuario \"Utilidad\" UNIFORMITY Envy-Freenness Figura 6: Eficiencia, uniformidad de utilidad y envidia de envidia bajo el modelo de paralelismo finito.n = 100. 8. utilidad"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "price-anticipate mechanism": {
            "translated_key": "",
            "is_in_text": false,
            "original_annotated_sentences": [
                "A Price-Anticipating Resource Allocation Mechanism for Distributed Shared Clusters Michal Feldman∗ mfeldman@sims.berkeley.edu Kevin Lai† kevin.lai@hp.com Li Zhang† l.zhang@hp.com ABSTRACT In this paper we formulate the fixed budget resource allocation game to understand the performance of a distributed marketbased resource allocation system.",
                "Multiple users decide how to distribute their budget (bids) among multiple machines according to their individual preferences to maximize their individual utility.",
                "We look at both the efficiency and the fairness of the allocation at the equilibrium, where fairness is evaluated through the measures of utility uniformity and envy-freeness.",
                "We show analytically and through simulations that despite being highly decentralized, such a system converges quickly to an equilibrium and unlike the social optimum that achieves high efficiency but poor fairness, the proposed allocation scheme achieves a nice balance of high degrees of efficiency and fairness at the equilibrium.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems; C.4 [Performance of Systems]; F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; J.4 [Social and Behavioral Sciences]: Economics General Terms Algorithms, Performance, Design, Economics 1.",
                "INTRODUCTION The primary advantage of distributed shared clusters like the Grid [7] and PlanetLab [1] is their ability to pool together shared computational resources.",
                "This allows increased throughput because of statistical multiplexing and the bursty utilization pattern of typical users.",
                "Sharing nodes that are dispersed in the network allows lower delay because applications can store data close to users.",
                "Finally, sharing allows greater reliability because of redundancy in hosts and network connections.",
                "However, resource allocation in these systems remains the major challenge.",
                "The problem is how to allocate a shared resource both fairly and efficiently (where efficiency is the ratio of the achieved social welfare to the social optimal) with the presence of strategic users who act in their own interests.",
                "Several non-economic allocation algorithms have been proposed, but these typically assume that task values (i.e., their importance) are the same, or are inversely proportional to the resources required, or are set by an omniscient administrator.",
                "However, in many cases, task values vary significantly, are not correlated to resource requirements, and are difficult and time-consuming for an administrator to set.",
                "Instead, we examine a market-based resource allocation system (others are described in [2, 4, 6, 21, 26, 27]) that allows users to express their preferences for resources through a bidding mechanism.",
                "In particular, we consider a price-anticipating [12] scheme in which a user bids for a resource and receives the ratio of his bid to the sum of bids for that resource.",
                "This proportional scheme is simpler, more scalable, and more responsive [15] than auction-based schemes [6, 21, 26].",
                "Previous work has analyzed price-anticipating schemes in the context of allocating network capacity for flows for users with unlimited budgets.",
                "In this work, we examine a price-anticipating scheme in the context of allocating computational capacity for users with private preferences and limited budgets, resulting in a qualitatively different game (as discussed in Section 6).",
                "In this paper, we formulate the fixed budget resource allocation game and study the existence and performance of the Nash equilibria of this game.",
                "For evaluating the Nash equilibria, we consider both their efficiency, measuring how close the social welfare at equilibrium is to the social optimum, and fairness, measuring how different the users utilities are.",
                "Although rarely considered in previous game theoretical study, we believe fairness is a critical metric for a resource allocation schemes because the perception of unfairness will cause some users to reject a system with more efficient, but less fair resource allocation in favor of one with less efficient, more fair resource allocation.",
                "We use both utility uniformity and envy-freeness to measure fairness.",
                "Utility uniformity, which is common in Computer Science work, measures the closeness of utilities of different users.",
                "Envyfreeness, which is more from the Economic perspective, measures the happiness of users with their own resources compared to the resources of others.",
                "Our contributions are as follows: • We analyze the existence and performance of 127 Nash equilibria.",
                "Using analysis, we show that there is always a Nash equilibrium in the fixed budget game if the utility functions satisfy a fairly weak and natural condition of strong competitiveness.",
                "We also show the worst case performance bounds: for m players the efficiency at equilibrium is Ω(1/ √ m), the utility uniformity is ≥ 1/m, and the envyfreeness ≥ 2 √ 2−2 ≈ 0.83.",
                "Although these bounds are quite low, the simulations described below indicate these bounds are overly pessimistic. • We describe algorithms that allow strategic users to optimize their utility.",
                "As part of the fixed budget game analysis, we show that strategic users with linear utility functions can calculate their bids using a best response algorithm that quickly results in an allocation with high efficiency with little computational and communication overhead.",
                "We present variations of the best response algorithm for both finite and infinite parallelism tasks.",
                "In addition, we present a local greedy adjustment algorithm that converges more slowly than best response, but allows for non-linear or unformulatable utility functions. • We show that the price-anticipating resource allocation mechanism achieves a high degree of efficiency and fairness.",
                "Using simulation, we find that although the socially optimal allocation results in perfect efficiency, it also results in very poor fairness.",
                "Likewise, allocating according to only users preference weights results in a high fairness, but a mediocre efficiency.",
                "Intuition would suggest that efficiency and fairness are exclusive.",
                "Surprisingly, the Nash equilibrium, reached by each user iteratively applying the best response algorithm to adapt his bids, achieves nearly the efficiency of the social optimum and nearly the fairness of the weight-proportional allocation: the efficiency is ≥ 0.90, the utility uniformity is ≥ 0.65, and the envyfreeness is ≥ 0.97, independent of the number of users in the system.",
                "In addition, the time to converge to the equilibrium is ≤ 5 iterations when all users use the best response strategy.",
                "The local adjustment algorithm performs similarly when there is sufficient competitiveness, but takes 25 to 90 iterations to stabilize.",
                "As a result, we believe that shared distributed systems based on the fixed budget game can be highly decentralized, yet achieve a high degree of efficiency and fairness.",
                "The rest of the paper is organized as follows.",
                "We describe the model in Section 2 and derive the performance at the Nash equilibria for the infinite parallelism model in Section 3.",
                "In Section 4, we describe algorithms for users to optimize their own utility in the fixed budget game.",
                "In Section 5, we describe our simulator and simulation results.",
                "We describe related work in Section 6.",
                "We conclude by discussing some limit of our model and future work in Section 7. 2.",
                "THE MODEL Price-Anticipating Resource Allocation.",
                "We study the problem of allocating a set of divisible resources (or machines).",
                "Suppose that there are m users and n machines.",
                "Each machine can be continuously divided for allocation to multiple users.",
                "An allocation scheme ω = (r1, . . . , rm), where ri = (ri1, · · · , rin) with rij representing the share of machine j allocated to user i, satisfies that for any 1 ≤ i ≤ m and 1 ≤ j ≤ n, rij ≥ 0 and Pm i=1 rij ≤ 1.",
                "Let Ω denote the set of all the allocation schemes.",
                "We consider the price anticipating mechanism in which each user places a bid to each machine, and the price of the machine is determined by the total bids placed.",
                "Formally, suppose that user i submits a non-negative bid xij to machine j.",
                "The price of machine j is then set to Yj = Pn i=1 xij, the total bids placed on the machine j. Consequently, user i receives a fraction of rij = xij Yj of j.",
                "When Yj = 0, i.e. when there is no bid on a machine, the machine is not allocated to anyone.",
                "We call xi = (xi1, . . . , xin) the bidding vector of user i.",
                "The additional consideration we have is that each user i has a budget constraint Xi.",
                "Therefore, user is total bids have to sum up to his budget, i.e.",
                "Pn j=1 xij = Xi.",
                "The budget constraints come from the fact that the users do not have infinite budget.",
                "Utility Functions.",
                "Each user is utility is represented by a function Ui of the fraction (ri1, . . . , rin) the user receives from each machine.",
                "Given the problem domain we consider, we assume that each user has different and relatively independent preferences for different machines.",
                "Therefore, the basic utility function we consider is the linear utility function: Ui(ri1, · · · , rin) = wi1ri1 +· · ·+winrin, where wij ≥ 0 is user is private preference, also called his weight, on machine j.",
                "For example, suppose machine 1 has a faster CPU but less memory than machine 2, and user 1 runs CPU bounded applications, while user 2 runs memory bounded applications.",
                "As a result, w11 > w12 and w21 < w22.",
                "Our definition of utility functions corresponds to the user having enough jobs or enough parallelism within jobs to utilize all the machines.",
                "Consequently, the users goal is to grab as much of a resource as possible.",
                "We call this the infinite parallelism model.",
                "In practice, a users application may have an inherent limit on parallelization (e.g., some computations must be done sequentially) or there may be a system limit (e.g., the applications data is being served from a file server with limited capacity).",
                "To model this, we also consider the more realistic finite parallelism model, where the users parallelism is bounded by ki, and the users utility Ui is the sum of the ki largest wijrij.",
                "In this model, the user only submits bids to up to ki machines.",
                "Our abstraction is to capture the essense of the problem and facilitate our analysis.",
                "In Section 7, we discuss the limit of the above definition of utility functions.",
                "Best Response.",
                "As typically, we assume the users are selfish and strategic - they all act to maximize their own utility, defined by their utility functions.",
                "From the perspective of user i, if the total bids of the other users placed on each machine j is yj, then the best response of user i to the system is the solution of the following optimization problem: maximize Ui( xij xij +yj ) subject to Pn j=1 xij = Xi, and xij ≥ 0.",
                "The difficulty of the above optimization problem depends on the formulation of Ui.",
                "We will show later how to solve it for the infinite parallelism model and provide a heuristic for finite parallelism model.",
                "Nash Equilibrium.",
                "By the assumption that the user is selfish, each users bidding vector is the best response to the system.",
                "The question we are most interested in is whether there exists a collection of bidding vectors, one for each user, such that each users bidding vector is the best response to those of the other users.",
                "Such a state is known as the Nash equilibrium, a central concept in Game Theory.",
                "Formally, the bidding vectors x1, . . . , xm is a Nash equilibrium if for 128 any 1 ≤ i ≤ m, xi is the best response to the system, or, for any other bidding vector xi, Ui(x1, . . . , xi, . . . , xm) ≥ Ui(x1, . . . , xi, . . . , xm) .",
                "The Nash equilibrium is desirable because it is a stable state at which no one has incentive to change his strategy.",
                "But a game may not have an equilibrium.",
                "Indeed, a Nash equilibrium may not exist in the price anticipating scheme we define above.",
                "This can be shown by a simple example of two players and two machines.",
                "For example, let U1(r1, r2) = r1 and U2(r1, r2) = r1 + r2.",
                "Then player 1 should never bid on machine 2 because it has no value to him.",
                "Now, player 2 has to put a positive bid on machine 2 to claim the machine, but there is no lower limit, resulting in the non-existence of the Nash equilibrium.",
                "We should note that even the mixed strategy equilibrium does not exist in this example.",
                "Clearly, this happens whenever there is a resource that is wanted by only one player.",
                "To rule out this case, we consider those strongly competitive games.1 Under the infinite parallelism model, a game is called strongly competitive if for any 1 ≤ j ≤ n, there exists an i = k such that wij, wkj > 0.",
                "Under such a condition, we have that (see [5] for a proof), Theorem 1.",
                "There always exists a pure strategy Nash equilibrium in a strongly competitive game.",
                "Given the existence of the Nash equilibrium, the next important question is the performance at the Nash equilibrium, which is often measured by its efficiency and fairness.",
                "Efficiency (Price of Anarchy).",
                "For an allocation scheme ω ∈ Ω, denote by U(ω) = P i Ui(ri) the social welfare under ω.",
                "Let U∗ = maxω∈Ω U(ω) denote the optimal social welfare - the maximum possible aggregated user utilities.",
                "The efficiency at an allocation scheme ω is defined as π(ω) = U(ω) U∗ .",
                "Let Ω0 denote the set of the allocation at the Nash equilibrium.",
                "When there exists Nash equilibrium, i.e.",
                "Ω0 = ∅, define the efficiency of a game Q to be π(Q) = minω∈Ω0 π(ω).",
                "It is usually the case that π < 1, i.e. there is an efficiency loss at a Nash equilibrium.",
                "This is the price of anarchy [18] paid for not having central enforcement of the users good behavior.",
                "This price is interesting because central control results in the best possible outcome, but is not possible in most cases.",
                "Fairness.",
                "While the definition of efficiency is standard, there are multiple ways to define fairness.",
                "We consider two metrics.",
                "One is by comparing the users utilities.",
                "The utility uniformity τ(ω) of an allocation scheme ω is defined to be mini Ui(ω) maxi Ui(ω) , the ratio of the minimum utility and the maximum utility among the users.",
                "Such definition (or utility discrepancy defined similarly as maxi Ui(ω) mini Ui(ω) ) is used extensively in Computer Science literature.",
                "Under this definition, the utility uniformity τ(Q) of a game Q is defined to be τ(Q) = minω∈Ω0 τ(ω).",
                "The other metric extensively studied in Economics is the concept of envy-freeness [25].",
                "Unlike the utility uniformity metric, the enviness concerns how the user perceives the value of the share assigned to him, compared to the shares other users receive.",
                "Within such a framework, define the envy-freeness of an allocation scheme ω by ρ(ω) = mini,j Ui(ri) Ui(rj ) . 1Alternatives include adding a reservation price or limiting the lowest allowable bid to each machine.",
                "These alternatives, however, introduce the problem of coming up with the right price or limit.",
                "When ρ(ω) ≥ 1, the scheme is known as an envy-free allocation scheme.",
                "Likewise, the envy-freeness ρ(Q) of a game Q is defined to be ρ(Q) = minω∈Ω0 ρ(ω). 3.",
                "NASH EQUILIBRIUM In this section, we present some theoretical results regarding the performance at Nash equilibrium under the infinite parallelism model.",
                "We assume that the game is strongly competitive to guarantee the existence of equilibria.",
                "For a meaningful discussion of efficiency and fairness, we assume that the users are symmetric by requiring that Xi = 1 andPn j=1 wij = 1 for all the 1 ≤ i ≤ m. Or informally, we require all the users have the same budget, and they have the same utility when they own all the resources.",
                "This precludes the case when a user has an extremely high budget, resulting in very low efficiency or low fairness at equilibrium.",
                "We first provide a characterization of the equilibria.",
                "By definition, the bidding vectors x1, . . . , xm is a Nash equilibrium if and only if each players strategy is the best response to the groups bids.",
                "Since Ui is a linear function and the domain of each users bids {(xi1, . . . , xin)| P j xij = Xi , and xij ≥ 0} is a convex set, the optimality condition is that there exists λi > 0 such that ∂Ui ∂xij = wij Yj − xij Y 2 j  = λi if xij > 0, and < λi if xij = 0. (1) Or intuitively, at an equilibrium, each user has the same marginal value on machines where they place positive bids and has lower marginal values on those machines where they do not bid.",
                "Under the infinite parallelism model, it is easy to compute the social optimum U∗ as it is achieved when we allocate each machine wholly to the person who has the maximum weight on the machine, i.e.",
                "U∗ = Pn j=1 max1≤i≤m wij. 3.1 Two-player Games We first show that even in the simplest nontrivial case when there are two users and two machines, the game has interesting properties.",
                "We start with two special cases to provide some intuition about the game.",
                "The weight matrices are shown in figure 1(a) and (b), which correspond respectively to the equal-weight and opposite-weight games.",
                "Let x and y denote the respective bids of users 1 and 2 on machine 1.",
                "Denote by s = x + y and δ = (2 − s)/s.",
                "Equal-weight game.",
                "In Figure 1, both users have equal valuations for the two machines.",
                "By the optimality condition, for the bid vectors to be in equilibrium, they need to satisfy the following equations according to (1) α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 α x (x + y)2 = (1 − α) 1 − x (2 − x − y)2 By simplifying the above equations, we obtain that δ = 1 − 1/α and x = y = α.",
                "Thus, there exists a unique Nash equilibrium of the game where the two users have the same bidding vector.",
                "At the equilibrium, the utility of each user is 1/2, and the social welfare is 1.",
                "On the other hand, the social optimum is clearly 1.",
                "Thus, the equal-weight game is ideal as the efficiency, utility uniformity, and the envyfreeness are all 1. 129 m1 m2 u1 α 1 − α u2 α 1 − α m1 m2 u1 α 1 − α u2 1 − α α (a) equal weight game (b) opposite weight game Figure 1: Two special cases of two-player games.",
                "Opposite-weight game.",
                "The situation is different for the opposite game in which the two users put the exact opposite weights on the two machines.",
                "Assume that α ≥ 1/2.",
                "Similarly, for the bid vectors to be at the equilibrium, they need to satisfy α y (x + y)2 = (1 − α) 1 − y (2 − x − y)2 (1 − α) x (x + y)2 = α 1 − x (2 − x − y)2 By simplifying the above equations, we have that each Nash equilibrium corresponds to a nonnegative root of the cubic equation f(δ) = δ3 − cδ2 + cδ − 1 = 0, where c = 1 2α(1−α) − 1.",
                "Clearly, δ = 1 is a root of f(δ).",
                "When δ = 1, we have that x = α, y = 1 − α, which is the symmetric equilibrium that is consistent with our intuition - each user puts a bid proportional to his preference of the machine.",
                "At this equilibrium, U = 2 − 4α(1 − α), U∗ = 2α, and U/U∗ = (2α + 1 α ) − 2, which is minimized when α = √ 2 2 with the minimum value of 2 √ 2 − 2 ≈ 0.828.",
                "However, when α is large enough, there exist two other roots, corresponding to less intuitive asymmetric equilibria.",
                "Intuitively, the asymmetric equilibrium arises when user 1 values machine 1 a lot, but by placing even a relatively small bid on machine 1, he can get most of the machine because user 2 values machine 1 very little, and thus places an even smaller bid.",
                "In this case, user 1 gets most of machine 1 and almost half of machine 2.",
                "The threshold is at when f (1) = 0, i.e. when c = 1 2α(1−α) = 4.",
                "This solves to α0 = 2+ √ 2 4 ≈ 0.854.",
                "Those asymmetric equilibria at δ = 1 are bad as they yield lower efficiency than the symmetric equilibrium.",
                "Let δ0 be the minimum root.",
                "When α → 0, c → +∞, and δ0 = 1/c + o(1/c) → 0.",
                "Then, x, y → 1.",
                "Thus, U → 3/2, U∗ → 2, and U/U∗ → 0.75.",
                "From the above simple game, we already observe that the Nash equilibrium may not be unique, which is different from many congestion games in which the Nash equilibrium is unique.",
                "For the general two player game, we can show that 0.75 is actually the worst efficiency bound with a proof in [5].",
                "Further, at the asymmetric equilibrium, the utility uniformity approaches 1/2 when α → 1.",
                "This is the worst possible for two player games because as we show in Section 3.2, a users utility at any Nash equilibrium is at least 1/m in the m-player game.",
                "Another consequence is that the two player game is always envy-free.",
                "Suppose that the two users shares are r1 = (r11, . . . , r1n) and r2 = (r21, . . . , r2n) respectively.",
                "Then U1(r1) + U1(r2) = U1(r1 + r2) = U1(1, . . . , 1) = 1 because ri1 + ri2 = 1 for all 1 ≤ i ≤ n. Again by that U1(r1) ≥ 1/2, we have that U1(r1) ≥ U1(r2), i.e. any equilibrium allocation is envy-free.",
                "Theorem 2.",
                "For a two player game, π(Q) ≥ 3/4, τ(Q) ≥ 0.5, and ρ(Q) = 1.",
                "All the bounds are tight in the worst case. 3.2 Multi-player Game For large numbers of players, the loss in social welfare can be unfortunately large.",
                "The following example shows the worst case bound.",
                "Consider a system with m = n2 + n players and n machines.",
                "Of the players, there are n2 who have the same weights on all the machines, i.e. 1/n on each machine.",
                "The other n players have weight 1, each on a different machine and 0 (or a sufficiently small ) on all the other machines.",
                "Clearly, U∗ = n. The following allocation is an equilibrium: the first n2 players evenly distribute their money among all the machines, the other n player invest all of their money on their respective favorite machine.",
                "Hence, the total money on each machine is n + 1.",
                "At this equilibrium, each of the first n2 players receives 1 n 1/n n+1 = 1 n2(n+1) on each machine, resulting in a total utility of n3 · 1 n2(n+1) < 1.",
                "The other n players each receives 1 n+1 on their favorite machine, resulting in a total utility of n · 1 n+1 < 1.",
                "Therefore, the total utility of the equilibrium is < 2, while the social optimum is n = Θ( √ m).",
                "This bound is the worst possible.",
                "What about the utility uniformity of the multi-player allocation game?",
                "We next show that the utility uniformity of the m-player allocation game cannot exceed m. Let (S1, . . . , Sn) be the current total bids on the n machines, excluding user i.",
                "User i can ensure a utility of 1/m by distributing his budget proportionally to the current bids.",
                "That is, user i, by bidding sij = Xi/ Pn i=1 Si on machine j, obtains a resource level of: rij = sij sij + Sj = Sj/ Pn i=1 Si Sj/ Pn i=1 Si + Sj = 1 1 + Pn i=1 Si , where Pn j=1 Sj = Pm j=1 Xj − Xi = m − 1.",
                "Therefore, rij = 1 1+m−1 = 1 m .",
                "The total utility of user i is nX j=1 rijwij = (1/m) nX j=1 wij = 1/m .",
                "Since each users utility cannot exceed 1, the minimal possible uniformity is 1/m.",
                "While the utility uniformity can be small, the envy-freeness, on the other hand, is bounded by a constant of 2 √ 2 − 2 ≈ 0.828, as shown in [29].",
                "To summarize, we have that Theorem 3.",
                "For the m-player game Q, π(Q) = Ω(1/ √ m), τ(Q) ≥ 1/m, and ρ(Q) ≥ 2 √ 2 − 2.",
                "All of these bounds are tight in the worst case. 4.",
                "ALGORITHMS In the previous section, we present the performance bounds of the game under the infinite parallelism model.",
                "However, the more interesting questions in practice are how the equilibrium can be reached and what is the performance at the Nash equilibrium for the typical distribution of utility functions.",
                "In particular, we would like to know if the intuitive strategy of each player constantly re-adjusting his bids according to the best response algorithm leads to the equilibrium.",
                "To answer these questions, we resort to simulations.",
                "In this section, we present the algorithms that we use to compute or approximate the best response and the social optimum in our experiments.",
                "We consider both the infinite parallelism and finite parallelism model. 130 4.1 Infinite Parallelism Model As we mentioned before, it is easy to compute the social optimum under the infinite parallelism model - we simply assign each machine to the user who likes it the most.",
                "We now present the algorithm for computing the best response.",
                "Recall that for weights w1, . . . , wn, total bids y1, . . . , yn, and the budget X, the best response is to solve the following optimization problem maximize U = Pn j=1 wj xj xj +yj subject to Pn j=1 xj = X, and xj ≥ 0.",
                "To compute the best response, we first sort wj yj in decreasing order.",
                "Without loss of generality, suppose that w1 y1 ≥ w2 y2 ≥ . . . wn yn .",
                "Suppose that x∗ = (x∗ 1, . . . , x∗ n) is the optimum solution.",
                "We show that if x∗ i = 0, then for any j > i, x∗ j = 0 too.",
                "Suppose this were not true.",
                "Then ∂U ∂xj (x∗ ) = wj yj (x∗ j + yj)2 < wj yj y2 j = wj yj ≤ wi yi = ∂U ∂xi (x∗ ) .",
                "Thus it contradicts with the optimality condition (1).",
                "Suppose that k = max{i|x∗ i > 0}.",
                "Again, by the optimality condition, there exists λ such that wi yi (x∗ i +yi)2 = λ for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Equivalently, we have that: x∗ i = r wiyi λ − yi , for 1 ≤ i ≤ k, and x∗ i = 0 for i > k. Replacing them in the equation Pn i=1 x∗ i = X, we can solve for λ = ( Pk i=1 √ wiyi)2 (X+ Pk i=1 yi)2 .",
                "Thus, x∗ i = √ wiyi Pk i=1 √ wiyi (X + kX i=1 yi) − yi .",
                "The remaining question is how to determine k. It is the largest value such that x∗ k > 0.",
                "Thus, we obtain the following algorithm to compute the best response of a user: 1.",
                "Sort the machines according to wi yi in decreasing order. 2.",
                "Compute the largest k such that √ wkyk Pk i=1 √ wiyi (X + kX i=1 yi) − yk ≥ 0. 3.",
                "Set xj = 0 for j > k, and for 1 ≤ j ≤ k, set: xj = √ wjyj Pk i=1 √ wiyi (X + kX i=1 yi) − yj.",
                "The computational complexity of this algorithm is O(n log n), dominated by the sorting.",
                "In practice, the best response can be computed infrequently (e.g. once a minute), so for a typically powerful modern host, this cost is negligible.",
                "The best response algorithm must send and receive O(n) messages because each user must obtain the total bids from each host.",
                "In practice, this is more significant than the computational cost.",
                "Note that hosts only reveal to users the sum of the bids on them.",
                "As a result, hosts do not reveal the private preferences and even the individual bids of one user to another. 4.2 Finite Parallelism Model Recall that in the finite parallelism model, each user i only places bids on at most ki machines.",
                "Of course, the infinite parallelism model is just a special case of finite parallelism model in which ki = n for all the is.",
                "In the finite parallelism model, computing the social optimum is no longer trivial due to bounded parallelism.",
                "It can instead be computed by using the maximum matching algorithm.",
                "Consider the weighted complete bipartite graph G = U × V , where U = {ui |1 ≤ i ≤ m , and 1 ≤ ≤ ki}, V = {1, 2, . . . , n} with edge weight wij assigned to the edge (ui , vj).",
                "A matching of G is a set of edges with disjoint nodes, and the weight of a matching is the total weights of the edges in the matching.",
                "As a result, the following lemma holds.",
                "Lemma 1.",
                "The social optimum is the same as the maximum weight matching of G. Thus, we can use the maximum weight matching algorithm to compute the social optimum.",
                "The maximum weight matching is a classical network problem and can be solved in polynomial time [8, 9, 14].",
                "We choose to implement the Hungarian algorithm [14, 19] because of its simplicity.",
                "There may exist a more efficient algorithm for computing the maximum matching by exploiting the special structure of G. This remains an interesting open question.",
                "However, we do not know an efficient algorithm to compute the best response under the finite parallelism model.",
                "Instead, we provide the following local search heuristic.",
                "Suppose we again have n machines with weights w1, . . . , wn and total bids y1, . . . , yn.",
                "Let the users budget be X and the parallelism bound be k. Our goal is to compute an allocation of X to up to k machines to maximize the users utility.",
                "For a subset of machines A, denote by x(A) the best response on A without parallelism bound and by U(A) the utility obtained by the best response algorithm.",
                "The local search works as follows: 1.",
                "Set A to be the k machines with the highest wi/yi. 2.",
                "Compute U(A) by the infinite parallelism best response algorithm (Sec 4.1) on A. 3.",
                "For each i ∈ A and each j /∈ A, repeat 4.",
                "Let B = A − {i} + {j}, compute U(B). 5.",
                "If(U(B) > U(A)), let A ← B, and goto 2. 6.",
                "Output x(A).",
                "Intuitively, by the local search heuristic, we test if we can swap a machine in A for one not in A to improve the best response utility.",
                "If yes, we swap the machines and repeat the process.",
                "Otherwise, we have reached a local maxima and output that value.",
                "We suspect that the local maxima that this algorithm finds is also the global maximum (with respect to an individual user) and that this process stop after a few number of iterations, but we are unable to establish it.",
                "However, in our simulations, this algorithm quickly converges to a high (≥ .7) efficiency. 131 4.3 Local Greedy Adjustment The above best response algorithms only work for the linear utility functions described earlier.",
                "In practice, utility functions may have more a complicated form, or even worse, a user may not have a formulation of his utility function.",
                "We do assume that the user still has a way to measure his utility, which is the minimum assumption necessary for any market-based resource allocation mechanism.",
                "In these situations, users can use a more general strategy, the local greedy adjustment method, which works as follows.",
                "A user finds the two machines that provide him with the highest and lowest marginal utility.",
                "He then moves a fixed small amount of money from the machine with low marginal utility to the machine with the higher one.",
                "This strategy aims to adjust the bids so that the marginal values at each machine being bid on are the same.",
                "This condition guarantees the allocation is the optimum when the utility function is concave.",
                "The tradeoff for local greedy adjustment is that it takes longer to stabilize than best-response. 5.",
                "SIMULATION RESULTS While the analytic results provide us with worst-case analysis for the infinite parallelism model, in this section we employ simulations to study the properties of the Nash equilibria in more realistic scenarios and for the finite parallelism model.",
                "First, we determine whether the user bidding process converges, and if so, what the rate of convergence is.",
                "Second, in cases of convergence, we look at the performance at equilibrium, using the efficiency and fairness metrics defined above.",
                "Iterative Method.",
                "In our simulations, each user starts with an initial bid vector and then iteratively updates his bids until a convergence criterion (described below) is met.",
                "The initial bid is set proportional to the users weights on the machines.",
                "We experiment with two update methods, the best response methods, as described in Section 4.1 and 4.2, and the local greedy adjustment method, as described in Section 4.3.",
                "Convergence Criteria.",
                "Convergence time measures how quickly the system reaches equilibrium.",
                "It is particularly important in the highly dynamic environment of distributed shared clusters, in which the systems conditions may change before reaching the equilibrium.",
                "Thus, a high convergence rate may be more significant than the efficiency at the equilibrium.",
                "There are several different criteria for convergence.",
                "The strongest criterion is to require that there is only negligible change in the bids of each user.",
                "The problem with this criterion is that it is too strict: users may see negligible change in their utilities, but according to this definition the system has not converged.",
                "The less strict utility gap criterion requires there to be only negligible change in the users utility.",
                "Given users concern for utility, this is a more natural definition.",
                "Indeed, in practice, the user is probably not willing to re-allocate their bids dramatically for a small utility gain.",
                "Therefore, we use the utility gap criterion to measure convergence time for the best response update method, i.e. we consider that the system has converged if the utility gap of each user is smaller than (0.001 in our experiments).",
                "However, this criterion does not work for the local greedy adjustment method because users of that method will experience constant fluctuations in utility as they move money around.",
                "For this method, we use the marginal utility gap criterion.",
                "We compare the highest and lowest utility margins on the machines.",
                "If the difference is negligible, then we consider the system to be converged.",
                "In addition to convergence to the equilibrium, we also consider the criterion from the system providers view, the social welfare stabilization criterion.",
                "Under this criterion, a system has stabilized if the change in social welfare is ≤ .",
                "Individual users utility may not have converged.",
                "This criterion is useful to evaluate how quickly the system as a whole reaches a particular efficiency level.",
                "User preferences.",
                "We experiment with two models of user preferences, random distribution and correlated distribution.",
                "With random distribution, users weights on the different machines are independently and identically distributed, according the uniform distribution.",
                "In practice, users preferences are probably correlated based on factors like the hosts location and the types of applications that users run.",
                "To capture these correlations, we associate with each user and machine a resource profile vector where each dimension of the vector represents one resource (e.g., CPU, memory, and network bandwidth).",
                "For a user i with a profile pi = (pi1, . . . , pi ), pik represents user is need for resource k. For machine j with profile qj = (qj1, . . . , qj ), qjk represents machine js strength with respect to resource k. Then, wij is the dot product of user is and machine js resource profiles, i.e. wij = pi · qj = P k=1 pikqjk.",
                "By using these profiles, we compress the parameter space and introduce correlations between users and machines.",
                "In the following simulations, we fix the number of machines to 100 and vary the number of users from 5 to 250 (but we only report the results for the range of 5 − 150 users since the results remain similar for a larger number of users).",
                "Sections 5.1 and 5.2 present the simulation results when we apply the infinite parallelism and finite parallelism models, respectively.",
                "If the system converges, we report the number of iterations until convergence.",
                "A convergence time of 200 iterations indicates non-convergence, in which case we report the efficiency and fairness values at the point we terminate the simulation. 5.1 Infinite parallelism In this section, we apply the infinite parallelism model, which assumes that users can use an unlimited number of machines.",
                "We present the efficiency and fairness at the equilibrium, compared to two baseline allocation methods: social optimum and weight-proportional, in which users distribute their bids proportionally to their weights on the machines (which may seem a reasonable distribution method intuitively).",
                "We present results for the two user preference models.",
                "With uniform preferences, users weights for the different machines are independently and identically distributed according to the uniform distribution, U ∼ (0, 1) (and are normalized thereafter).",
                "In correlated preferences, each users and each machines resource profile vector has three dimensions, and their values are also taken from the uniform distribution, U ∼ (0, 1).",
                "Convergence Time.",
                "Figure 2 shows the convergence time, efficiency and fairness of the infinite parallelism model under uniform (left) and correlated (right) preferences.",
                "Plots (a) and (b) show the convergence and stabilization time of the best-response and local greedy adjustment methods. 132 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Convergencetime(#iterations) Number of Users Uniform preferences (a) Best-Response Greedy (convergence) Greedy (stabilization) 0 50 100 150 200 0 20 40 60 80 100 120 140 160 Number of Users Correlated preferences (b) Best-response Greedy (convergence) Greedy (stabilization) 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Efficiency Number of Users (c) Nash equilibrium Weight-proportional Social Optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (d) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Utilityuniformity Number of Users (e) Nash equilibrium Weight-proportional Social optimum 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 120 140 160 Number of Users (f) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Envy-freeness Number of Users (g) Nash equilibrium Weight proportional Social optimum 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (h) Nash equilibrium Weight proportional Social optimum Figure 2: Efficiency, utility uniformity, enviness and convergence time as a function of the number of users under the infinite parallelism model, with uniform and correlated preferences. n = 100. 133 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 Efficiency Iteration number Best-Response Greedy Figure 3: Efficiency level over time under the infinite parallelism model. number of users = 40. n = 100.",
                "The best-response algorithm converges within a few number of iterations for any number of users.",
                "In contrast, the local greedy adjustment algorithm does not converge even within 500 iterations when the number of users is smaller than 60, but does converge for a larger number of users.",
                "We believe that for small numbers of users, there are dependency cycles among the users that prevent the system from converging because one users decisions affects another user, whose decisions affect another user, etc.",
                "Regardless, the local greedy adjustment method stabilizes within 100 iterations.",
                "Figure 3 presents the efficiency over time for a system with 40 users.",
                "It demonstrates that while both adjustment methods reach the same social welfare, the best-response algorithm is faster.",
                "In the remainder of this paper, we will refer to the (Nash) equilibrium, independent of the adjustment method used to reach it.",
                "Efficiency.",
                "Figure 2 (c) and (d) present the efficiency as a function of the number of users.",
                "We present the efficiency at equilibrium, and use the social optimum and the weightproportional static allocation methods for comparison.",
                "Social optimum provides an efficient allocation by definition.",
                "For both user preference models, the efficiency at the equilibrium is approximately 0.9, independent of the number of users, which is only slightly worse than the social optimum.",
                "The efficiency at the equilibrium is ≈ 50% improvement over the weight-proportional allocation method for uniform preferences, and ≈ 30% improvement for correlated preferences.",
                "Fairness.",
                "Figure 2(e) and (f) present the utility uniformity as a function of the number of users, and figures (g) and (h) present the envy-freeness.",
                "While the social optimum yields perfect efficiency, it has poor fairness.",
                "The weightproportional method achieves the highest fairness among the three allocation methods, but the fairness at the equilibrium is close.",
                "The utility uniformity is slightly better at the equilibrium under uniform preferences (> 0.7) than under correlated preferences (> 0.6), since when users preferences are more aligned, users happiness is more likely going to be at the expense of each other.",
                "Although utility uniformity decreases in the number of users, it remains reasonable even for a large number of users, and flattens out at some point.",
                "At the social optimum, utility uniformity can be infinitely poor, as some users may be allocated no resources at all.",
                "The same is true with respect to envy-freeness.",
                "The difference between uniform and correlated preferences is best demonstrated in the social optimum results.",
                "When the number of users is small, it may be possible to satisfy all users to some extent if their preferences are not aligned, but if they are aligned, even with a very small number of users, some users get no resources, thus both utility uniformity and envy-freeness go to zero.",
                "As the number of users increases, it becomes almost impossible to satisfy all users independent of the existence of correlation.",
                "These results demonstrate the tradeoff between the different allocation methods.",
                "The efficiency at the equilibrium is lower than the social optimum, but it performs much better with respect to fairness.",
                "The equilibrium allocation is completely envy-free under uniform preferences and almost envy-free under correlated preferences. 5.2 Finite parallelism 0 50 100 150 200 0 10 20 30 40 50 60 70 80 90 Convergencetime(#iterations) Number of Users 5 machines/user 20 machines/user Figure 4: Convergence time under the finite parallelism model. n = 100. 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100 Efficiency Iteration number 5-machines/user (40 users) 20-machines/user (10 users) Figure 5: Efficiency level over time under the finite parallelism model with local search algorithm. n = 100.",
                "We also consider the finite parallelism model and use the local search algorithm, as described in Section 4.2, to adjust users bids.",
                "We again experimented with both the uniform and correlated preferences distributions and did not find significant differences in the results so we present the simulation results for only the uniform distribution.",
                "In our experiments, the local search algorithm stops quickly - it usually discovers a local maximum within two iterations.",
                "As mentioned before, we cannot prove that a local maximum is the global maximum, but our experiments indicate that the local search heuristic leads to high efficiency. 134 Convergence time.",
                "Let ∆ denote the parallelism bound that limits the maximum number of machines each user can bid on.",
                "We experiment with ∆ = 5 and ∆ = 20.",
                "In both cases, we use 100 machines and vary the number of users.",
                "Figure 4 shows that the system does not always converge, but if it does, the convergence happens quickly.",
                "The nonconvergence occurs when the number of users is between 20 and 40 for ∆ = 5, between 5 and 10 for ∆ = 20.",
                "We believe that the non-convergence is caused by moderate competition.",
                "No competition allows the system to equilibrate quickly because users do not have to change their bids in reaction to changes in others bids.",
                "High competition also allows convergence because each users decision has only a small impact on other users, so the system is more stable and can gradually reach convergence.",
                "However, when there is moderate competition, one users decisions may cause dramatic changes in anothers decisions and cause large fluctuations in bids.",
                "In both cases of non-convergence, the ratio of competitors per machine, δ = m×∆/n for m users and n machines, is in the interval [1, 2].",
                "Although the system does not converge in these bad ranges, the system nontheless achieves and maintains a high level of overall efficiency after a few iterations (as shown in Figure 5).",
                "Performance.",
                "In Figure 6, we present the efficiency, utility uniformity, and envy-freeness at the Nash equilibrium for the finite parallelism model.",
                "When the system does not converge, we measure performance by taking the minimum value we observe after running for many iterations.",
                "When ∆ = 5, there is a performance drop, in particular with respect to the fairness metrics, in the range between 20 and 40 users (where it does not converge).",
                "For a larger number of users, the system converges and achieves a lower level of utility uniformity, but a high degree of efficiency and envy-freeness, similar to those under the infinite parallelism model.",
                "As described above, this is due the competition ratio falling into the head-to-head range.",
                "When the parallelism bound is large (∆ = 20), the performance is closer to the infinite parallelism model, and we do not observe this drop in performance. 6.",
                "RELATED WORK There are two main groups of related work in resource allocation: those that incorporate an economic mechanism, and those that do not.",
                "One non-economic approach is scheduling (surveyed by Pinedo [20]).",
                "Examples of this approach are queuing in first-come, first-served (FCFS) order, queueing using the resource consumption of tasks (e.g., [28]), and scheduling using combinatorial optimization [19].",
                "These all assume that the values and resource consumption of tasks are reported accurately, which does not apply in the presence of strategic users.",
                "We view scheduling and resource allocation as two separate functions.",
                "Resource allocation divides a resource among different users while scheduling takes a given allocation and orders a users jobs.",
                "Examples of the economic approach are Spawn [26]), work by Stoica, et al. [24]., the Millennium resource allocator [4], work by Wellman, et al. [27], Bellagio [2]), and Tycoon [15]).",
                "Spawn and the work by Wellman, et al. uses a reservation abstraction similar to the way airline seats are allocated.",
                "Unfortunately, reservations have a high latency to acquire resources, unlike the price-anticipating scheme we consider.",
                "The tradeoff of the price-anticipating schemes is that users have uncertainty about exactly how much of the resources they will receive.",
                "Bellagio[3] uses the SHARE centralized allocator.",
                "SHARE allocates resources using a centralized combinatorial auction that allows users to express preferences with complementarities.",
                "Solving the NP-complete combinatorial auction problem provides an optimally efficient allocation.",
                "The priceanticipating scheme that we consider does not explicitly operate on complementarities, thereby possibly losing some efficiency, but it also avoids the complexity and overhead of combinatorial auctions.",
                "There have been several analyses [10, 11, 12, 13, 23] of variations of price-anticipating allocation schemes in the context of allocation of network capacity for flows.",
                "Their methodology follows the study of congestion (potential) games [17, 22] by relating the Nash equilibrium to the solution of a (usually convex) global optimization problem.",
                "But those techniques no longer apply to our game because we model users as having fixed budgets and private preferences for machines.",
                "For example, unlike those games, there may exist multiple Nash equilibria in our game.",
                "Milchtaich [16] studied congestion games with private preferences but the technique in [16] is specific to the congestion game. 7.",
                "CONCLUSIONS This work studies the performance of a market-based mechanism for distributed shared clusters using both analyatical and simulation methods.",
                "We show that despite the worst case bounds, the system can reach a high performance level at the Nash equilibrium in terms of both efficiency and fairness metrics.",
                "In addition, with a few exceptions under the finite parallelism model, the system reaches equilibrium quickly by using the best response algorithm and, when the number of users is not too small, by the greedy local adjustment method.",
                "While our work indicates that the price-anticipating scheme may work well for resource allocation for shared clusters, there are many interesting directions for future work.",
                "One direction is to consider more realistic utility functions.",
                "For example, we assume that there is no parallelization cost, and there is no performance degradation when multiple users share the same machine.",
                "In practice, both assumptions may not be correct.",
                "For examples, the user must copy code and data to a machine before running his application there, and there is overhead for multiplexing resources on a single machine.",
                "When the job size is large enough and the degree of multiplexing is sufficiently low, we can probably ignore those effects, but those costs should be taken into account for a more realistic modeling.",
                "Another assumption is that users have infinite work, so the more resources they can acquire, the better.",
                "In practice, users have finite work.",
                "One approach to address this is to model the users utility according to the time to finish a task rather than the amount of resources he receives.",
                "Another direction is to study the dynamic properties of the system when the users needs change over time, according to some statistical model.",
                "In addition to the usual questions concerning repeated games, it would also be important to understand how users should allocate their budgets wisely over time to accomodate future needs. 135 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140 160 Number of Users (a) Limit: 5 machines/user Efficiency Utility uniformity Envy-freeness 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80 90 Number of Users (b) Limit: 20 machines/user Efficiency Utility uniformity Envy-freeness Figure 6: Efficiency, utility uniformity and envy-freeness under the finite parallelism model. n = 100. 8.",
                "ACKNOWLEDGEMENTS We thank Bernardo Huberman, Lars Rasmusson, Eytan Adar and Moshe Babaioff for fruitful discussions.",
                "We also thank the anonymous reviewers for their useful comments. 9.",
                "REFERENCES [1] http://planet-lab.org. [2] A. AuYoung, B. N. Chun, A. C. Snoeren, and A. Vahdat.",
                "Resource Allocation in Federated Distributed Computing Infrastructures.",
                "In Proceedings of the 1st Workshop on Operating System and Architectural Support for the On-demand IT InfraStructure, 2004. [3] B. Chun, C. Ng, J. Albrecht, D. C. Parkes, and A. Vahdat.",
                "Computational Resource Exchanges for Distributed Resource Allocation. 2004. [4] B. N. Chun and D. E. Culler.",
                "Market-based Proportional Resource Sharing for Clusters.",
                "Technical Report CSD-1092, University of California at Berkeley, Computer Science Division, January 2000. [5] M. Feldman, K. Lai, and L. Zhang.",
                "A Price-anticipating Resource Allocation Mechanism for Distributed Shared Clusters.",
                "Technical report, arXiv, 2005. http://arxiv.org/abs/cs.DC/0502019. [6] D. Ferguson, Y. Yemimi, and C. Nikolaou.",
                "Microeconomic Algorithms for Load Balancing in Distributed Computer Systems.",
                "In International Conference on Distributed Computer Systems, pages 491-499, 1988. [7] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "The International Journal of Supercomputer Applications and High Performance Computing, 11(2):115-128, Summer 1997. [8] M. L. Fredman and R. E. Tarjan.",
                "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.",
                "Journal of the ACM, 34(3):596-615, 1987. [9] H. N. Gabow.",
                "Data Structures for Weighted Matching and Nearest Common Ancestors with Linking.",
                "In Proceedings of 1st Annual ACM-SIAM Symposium on Discrete algorithms, pages 434-443, 1990. [10] B. Hajek and S. Yang.",
                "Strategic Buyers in a Sum Bid Game for Flat Networks.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/HajekYang.pdf, 2004. [11] R. Johari and J. N. Tsitsiklis.",
                "Efficiency Loss in a Network Resource Allocation Game.",
                "Mathematics of Operations Research, 2004. [12] F. P. Kelly.",
                "Charging and Rate Control for Elastic Traffic.",
                "European Transactions on Telecommunications, 8:33-37, 1997. [13] F. P. Kelly and A. K. Maulloo.",
                "Rate Control in Communication Networks: Shadow Prices, Proportional Fairness and Stability.",
                "Operational Research Society, 49:237-252, 1998. [14] H. W. Kuhn.",
                "The Hungarian Method for the Assignment Problem.",
                "Naval Res.",
                "Logis.",
                "Quart., 2:83-97, 1955. [15] K. Lai, L. Rasmusson, S. Sorkin, L. Zhang, and B.",
                "A. Huberman.",
                "Tycoon: an Implemention of a Distributed Market-Based Resource Allocation System.",
                "Manuscript, http://www.hpl.hp.com/research/tycoon/papers_and_ presentations, 2004. [16] I. Milchtaich.",
                "Congestion Games with Player-Specific Payoff Functions.",
                "Games and Economic Behavior, 13:111-124, 1996. [17] D. Monderer and L. S. Sharpley.",
                "Potential Games.",
                "Games and Economic Behavior, 14:124-143, 1996. [18] C. Papadimitriou.",
                "Algorithms, Games, and the Internet.",
                "In Proceedings of 33rd STOC, 2001. [19] C. H. Papadimitriou and K. Steiglitz.",
                "Combinatorial Optimization.",
                "Dover Publications, Inc., 1982. [20] M. Pinedo.",
                "Scheduling.",
                "Prentice Hall, 2002. [21] O. Regev and N. Nisan.",
                "The Popcorn Market: Online Markets for Computational Resources.",
                "In Proceedings of 1st International Conference on Information and Computation Economies, pages 148-157, 1998. [22] R. W. Rosenthal.",
                "A Class of Games Possessing Pure-Strategy Nash Equilibria.",
                "Internation Journal of Game Theory, 2:65-67, 1973. [23] S. Sanghavi and B. Hajek.",
                "Optimal Allocation of a Divisible Good to Strategic Buyers.",
                "Manuscript, http: //tesla.csl.uiuc.edu/~hajek/Papers/OptDivisible.pdf, 2004. [24] I. Stoica, H. Abdel-Wahab, and A. Pothen.",
                "A Microeconomic Scheduler for Parallel Computers.",
                "In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, pages 122-135, April 1995. [25] H. R. Varian.",
                "Equity, Envy, and Efficiency.",
                "Journal of Economic Theory, 9:63-91, 1974. [26] C. A. Waldspurger, T. Hogg, B.",
                "A. Huberman, J. O. Kephart, and S. Stornetta.",
                "Spawn: A Distributed Computational Economy.",
                "IEEE Transactions on Software Engineering, 18(2):103-117, February 1992. [27] M. P. Wellman, W. E. Walsh, P. R. Wurman, and J. K. MacKie-Mason.",
                "Auction Protocols for Decentralized Scheduling.",
                "Games and Economic Behavior, 35:271-303, 2001. [28] A. Wierman and M. Harchol-Balter.",
                "Classifying Scheduling Policies with respect to Unfairness in an M/GI/1.",
                "In Proceedings of the ACM SIGMETRICS 2003 Conference on Measurement and Modeling of Computer Systems, 2003. [29] L. Zhang.",
                "On the Efficiency and Fairness of a Fixed Budget Resource Allocation Game.",
                "Manuscript, 2004. 136"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        }
    }
}