{
    "id": "J-72",
    "original_text": "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory. We show that learning algorithms can be used as a basis for preference elicitation algorithms. The resulting elicitation algorithms perform a polynomial number of queries. We also give conditions under which the resulting algorithms have polynomial communication. Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions. In particular, we obtain an algorithm that elicits XOR bids with polynomial communication. Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1. INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone. Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic. Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large. Furthermore, it might even be hard for agents to determine their valuations for single bundles [14]. It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible. Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors. These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods. There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19]. In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs? In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation. Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other. We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries. The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries. Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme. Preference elicitation schemes have not traditionally considered this last parameter. We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter. Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone. Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions. Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query. The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations. There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing. We expect this to be an important consideration in practice. Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms. Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation. Related work. Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF. Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF. Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway). Their work only makes use of value queries, which are quite limited in power. Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions. Blum et al. [5] provide results relating the complexities of query learning and preference elicitation. They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation. They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa. In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning. We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem. Nisan and Segal [12] study the communication complexity of preference elicitation. They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential. Their results apply to the black-box model of computational complexity. In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations. This is in fact the basic framework of learning theory. Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results. Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2. THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2]. In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle. The target function is drawn from a function class C that is known to the algorithm. Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê. As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function. Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X. It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise. This function may simply be represented as a list of 2m values. Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct. The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm. Let size(f) be the size of the encoding of f with respect to the given representation class. Most representation classes have a natural measure of encoding size. The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example. We will usually only refer to representation classes; the corresponding function classes will be implied. For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions. Two types of queries are commonly used for exact learning: membership and equivalence queries. On a membership query, the learner presents some x ∈ X and the oracle replies with f(x). On an equivalence query, the learner presents its manifest hypothesis ˜f. The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x). An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented. We are interested in efficient learning algorithms. The following definitions are adapted from Kearns and Vazirani [9]: Definition 1. The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x. Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·). Here m is the dimension of the domain. Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations. Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency. We let n = |N| and m = |M|. An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations. Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles. Each valuation vi is drawn from a known class of valuations Vi. The valuation classes do not need to coincide. We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her). Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components. If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values. Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11]. A classic example which we will refer to again later is the XOR bidding language. In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value. To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ). As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied. For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B). We let size(v1, . . . , vn) = Èn i=1 size(vi). That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages). To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation. More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries. She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made. They may also simply be default or random values if no information has been acquired about certain bundles. The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations. Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting. In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids. Two typical queries used in preference elicitation are value and demand queries. On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8]. On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative. Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle. There may be more succinct ways of communicating this vector, as we show in section 5. We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2. The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si). Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·). There are some key differences here with the query learning definition. We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation. Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time. This reflects the fact that communication rather than runtime is the bottleneck in elicitation. Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes. It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm. We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods. In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle. This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice. These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting. Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case. We address this in the next section. 3. PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities. Value and membership queries are clear analogs. Slightly less obvious is the fact that equivalence and demand queries are also analogs. To see this, we need the concept of Lindahl prices. Lindahl prices are nonlinear and non-anonymous prices over the bundles. They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods. They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods. Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries. When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices. Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices. The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium. We say that the Lindahl prices support the optimal allocation. It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation. Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved. The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4]. The dual variables to this linear program are supporting Lindahl prices for the resulting allocation. The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller. There is usually a range of possible Lindahl prices supporting a given optimal allocation. The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices. Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare. Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices. Any Lindahl prices will do for our results, but some may have better elicitation properties than others. Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent. We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation. Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices. These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1). Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4). In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries. Lemma 1. Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation). Then either ˜v(S) = v(S) or ˜v(S ) = v(S ). Proof. We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation. Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query. If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction. Thus at least one of S and S is a counterexample to the agents manifest valuation. Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems. Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation. Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes). Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4. FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found. Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned. Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query. Theorem 1. The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries. Proof. Consider the elicitation algorithm in Figure 1. Each membership query in step 1 is simulated with a value query since these are in fact identical. Consider step 4. If all agents reply YES, condition (1) holds. Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations. Thus an optimal allocation has been found. Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1. We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query. This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents. The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms. Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm. That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation. Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries. It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned. The use of demand queries to simulate equivalence queries enables this early halting. We would not obtain this property with equivalence queries based on manifest valuations. 5. COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation. Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication. Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn). Theorem 2. The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries. Proof. The size of any value query is O(m): the message consists solely of the queried bundle. To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4). Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency. Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm. Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size. We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m). Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m). Thus the value and demand queries, and the responses to these queries, are always of polynomial size. An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters. There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation. These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm. We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2. We are likely to be able to do much better than this in practice. Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made. If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm. Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems. They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm. These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages. We consider these issues below. 6. APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations. We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively. Loop until there is a signal to halt: 1. Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2. Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3. Present the allocation and prices to the agents in the form of a demand query. 4. If they all reply YES, output the allocation and halt. Otherwise there is some agent i that has replied with some preferred bundle Si. Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai. Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately. This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly. We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way. We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively. We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18]. In interpreting the methods we emphasize the expressiveness and succinctness of each representation class. The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol. The equivalence queries made by this algorithm are all proper. Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1. A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4. A polynomial over the real numbers has coefficients drawn from the real numbers. Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17]. To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11]. In the additive valuation, the value of a bundle is the number of goods the bundle contains. In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item). It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation. Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients. The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17]. We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature. Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B). The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal. However, XOR is as expressive as required in most economic settings. Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation. Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use. Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature. A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5. Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions. These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2. An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries. Proof. The algorithm will identify each atomic bid in the target XOR bid in turn. Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids). Present ˜v as an equivalence query. If the response is YES, we are done. Otherwise we obtain a bundle S for which v(S) = ˜v(S). Create a bundle T as follows. First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}). If so set T = T − {i}. Otherwise leave T as is and proceed to the next item. We claim that (T, v(T)) is an atomic bid of the target XOR bid. For each item i in T, we have v(T) = v(T − {i}). To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T. Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items. Now assume v(T) = v(T − {i}). Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}. Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction. We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction. Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)). This assumption holds vacuously when the manifest valuation is initialized. Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function. We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption. Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T). Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation. From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF. Recall that Toolbox DNF are polynomials with non-negative coefficients. For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S). Then again from equation (9) it follows that v(S) < ˜v(S). This contradicts (8), so we in fact have v(T) = ˜v(T). Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis. We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified. After each equivalence query, an atomic bid is identified with at most m membership queries. Each counterexample leads to the discovery of a new atomic bid. Thus we make at most tm membership queries and exactly t + 1 equivalence queries. The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient. Applying Theorem 2, we therefore obtain the following corollary: Theorem 3. The representation class of XOR bids can be efficiently elicited from value and demand queries. This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11]. In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise. More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise. The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value. Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions. These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise. Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10]. To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown. The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values). Note that r-of-k threshold functions can always be succinctly represented in O(m) space. Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7. CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries. At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation. Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation. A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types. If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme. The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient. We do not require that agent valuations can be learned with value and demand queries. Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed. This is the preference elicitation problem. Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity. It would be interesting to find examples of valuation classes for which elicitation is easier than learning. Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4). In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms. In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility. We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15]. An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation? We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries. Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes. Acknowledgements We would like to thank Debasis Mishra for helpful discussions. This work is supported in part by NSF grant IIS0238147. 8. REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge. Integer programming for combinatorial auction winner determination. In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin. Learning regular sets from queries and counterexamples. Information and Computation, 75:87-106, November 1987. [3] D. Angluin. Queries and concept learning. Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy. The Package Assignment Model. Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich. Preference elicitation and query learning. In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm. Partial-revelation VCG mechanism for combinatorial auctions. In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham. Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches. In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm. Using value queries in combinatorial auctions. In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani. An Introduction to Computational Learning Theory. MIT Press, 1994. [10] N. Littlestone. Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm. Machine Learning, 2:285-318, 1988. [11] N. Nisan. Bidding and allocation in combinatorial auctions. In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal. The communication requirements of efficient allocations and supporting Lindahl prices. Working Paper, Hebrew University, 2003. [13] D. C. Parkes. Price-based information certificates for minimal-revelation combinatorial auctions. In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122. Springer-Verlag, 2002. [14] D. C. Parkes. Auction design with costly preference elicitation. In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar. Iterative combinatorial auctions: Theory and practice. In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine. CABOB: A fast optimal algorithm for combinatorial auctions. In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie. Learning sparse multivariate polynomials over a field with queries and counterexamples. In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26. ACM Press, 1993. 187 [18] L. Valiant. A theory of the learnable. Commun. ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm. On polynomial-time preference elicitation with value-queries. In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188",
    "original_translation": "Aplicación de algoritmos de aprendizaje a la obtención de preferencias Sebastien M. Lahaie División de Ingeniería y Ciencias Aplicadas Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes División de Ingeniería y Ciencias Aplicadas Harvard University Cambridge, MA 02138 Parkes@eecs.harvardResumen .edu Consideramos los paralelos entre el problema de obtención de preferencias en las subastas combinatorias y el problema de aprender una función desconocida de la teoría del aprendizaje. Mostramos que los algoritmos de aprendizaje pueden usarse como base para los algoritmos de obtención de preferencias. Los algoritmos de obtención resultantes realizan un número polinomial de consultas. También damos condiciones bajo las cuales los algoritmos resultantes tienen comunicación polinomial. Nuestro procedimiento de conversión nos permite generar protocolos de subastas combinatorias a partir de algoritmos de aprendizaje para polinomios, DNF monótono y funciones de umbral lineal. En particular, obtenemos un algoritmo que provoca ofertas de XOR con comunicación polinomial. Categorías y descriptores de sujetos F.2.0 [Análisis de algoritmos y complejidad del problema]: general;J.4 [Ciencias sociales y conductuales]: Economía;I.2.6 [Inteligencia artificial]: Algoritmos de aprendizaje de términos generales, Economía, Teoría 1. Introducción En una subasta combinatoria, los agentes pueden ofertar por paquetes de bienes en lugar de bienes individuales solos. Dado que hay un número exponencial de paquetes (en el número de bienes), la comunicación de valores sobre estos paquetes puede ser problemático. Comunicar las valoraciones de una manera única puede ser prohibitivamente costosa si el número de productos es solo moderadamente grande. Además, incluso podría ser difícil para los agentes determinar sus valoraciones para paquetes individuales [14]. Es de interés de tales agentes tener protocolos de subasta que requieran que oferten en la menor cantidad de paquetes posible. Incluso si los agentes pueden calcular de manera eficiente sus valoraciones, aún podrían ser reacios a revelarlos por completo en el curso de una subasta, porque dicha información puede ser valiosa para sus competidores. Estas consideraciones motivan la necesidad de protocolos de subasta que minimicen la comunicación y la revelación de información requerida para determinar una asignación óptima de bienes. Ha habido un trabajo reciente explorando los vínculos entre el problema de obtención de preferencias en las subastas combinatorias y el problema de aprender una función desconocida de la teoría del aprendizaje computacional [5, 19]. En la teoría del aprendizaje, el objetivo es aprender una función a través de varios tipos de consultas, como ¿cuál es el valor de las funciones en estas entradas? En la obtención de preferencias, el objetivo es obtener suficiente información parcial sobre las preferencias para poder calcular una asignación óptima. Aunque los objetivos de aprendizaje y obtención de preferencias difieren un poco, está claro que estos problemas comparten una estructura similar, y no debería sorprendernos que las técnicas de un campo sean relevantes para el otro. Mostramos que cualquier algoritmo de aprendizaje exacto con consultas de membresía y equivalencia puede convertirse en un algoritmo de obtención de preferencias con consultas de valor y demanda. El algoritmo de obtención resultante garantiza la obtención en un número polinomial de consultas de valor y demanda. Aquí nos referimos al polinomio en la cantidad de bienes, agentes y los tamaños de las funciones de valoración de los agentes en un esquema de codificación dado. Los esquemas de obtención de preferencias no han considerado tradicionalmente este último parámetro. Argumentamos que las garantías de complejidad para los esquemas de obtención deberían permitir la dependencia de este parámetro. La introducción de este parámetro también nos permite garantizar la comunicación polinomial en el peor de los casos, que generalmente no se puede lograr solo en el número de bienes y agentes. Finalmente, utilizamos nuestro procedimiento de conversión para generar protocolos de subastas combinatorias a partir de algoritmos de aprendizaje para polinomios, DNF monótono y funciones de umbral lineal. Por supuesto, una subasta combinatoria de un solo disparo donde los agentes proporcionan sus funciones de valoración completas a la vez también tendrían comunicación polinómica en el tamaño de las valoraciones de los agentes, y solo requieren una consulta. La ventaja de nuestro esquema es que los agentes pueden verse como cajas negras que proporcionan información incremental sobre sus valoraciones. No hay carga sobre los agentes de formular sus valoraciones en un esquema de codificación de los subastadores que eligen. Esperamos que esta sea una consideración importante en la práctica. Además, con nuestro esquema, toda la revelación solo ocurre en el peor de los casos.180 Por ahora, dejamos de lado el tema de los incentivos al derivar los algoritmos de obtención. Nuestro enfoque está en la complejidad del tiempo y la comunicación de la obtención de preferencias, independientemente de las limitaciones de incentivos, y en la relación entre las complejidades de aprendizaje y obtención de preferencias. Trabajo relacionado. Zinkevich et al.[19] Considere el problema de aprender clases restringidas de funciones de valoración que pueden representarse utilizando fórmulas de lectura y DNF de caja de herramientas. Las fórmulas de lectura pueden representar ciertas sustitutabilidades, pero no complementarias, mientras que lo opuesto es válido para la caja de herramientas DNF. Dado que su trabajo también se basa en la teoría del aprendizaje, permiten la dependencia del tamaño de la valoración objetivo como nosotros (aunque las valoraciones de lectura siempre se pueden representar sucintamente de todos modos). Su trabajo solo hace uso de consultas de valor, que son bastante limitadas en poder. Debido a que nos permitimos consultas de demanda, podemos obtener un esquema de obtención para las funciones de valoración general. Blum et al.[5] Proporcionar resultados relacionados con las complejidades del aprendizaje de consultas y la obtención de preferencias. Consideran modelos con consultas de membresía y equivalencia en el aprendizaje de consultas, y las consultas de valor y demanda en la obtención de preferencias. Muestran que ciertas clases de funciones pueden aprender eficientemente pero no provocadas de manera eficiente, y viceversa. En contraste, nuestro trabajo muestra que dada una versión más general (pero aún bastante estándar) de la consulta de demanda que el tipo que consideran, la complejidad de la obtención de preferencias no es mayor que la complejidad del aprendizaje. Mostraremos que las consultas de demanda pueden simular consultas de equivalencia hasta que tengamos suficiente información sobre valoraciones para implicar una solución al problema de obtención. Nisan y Segal [12] estudian la complejidad de la comunicación de la obtención de preferencias. Muestran que para muchas clases ricas de valoraciones, la peor complejidad de la comunicación de calcular una asignación óptima es exponencial. Sus resultados se aplican al modelo de complejidad computacional de caja negra. En este modelo, los algoritmos pueden hacer preguntas sobre las valoraciones de los agentes y recibir respuestas honestas, sin ninguna idea de cómo los agentes calculan internamente sus valoraciones. De hecho, este es el marco básico de la teoría del aprendizaje. Nuestro trabajo también aborda el tema de la complejidad de la comunicación, y podemos obtener algoritmos que proporcionan garantías de comunicación significativas a pesar de los resultados negativos de Nisan y Segals. Su trabajo motiva la necesidad de confiar en los tamaños de las funciones de valoración de los agentes en declarar los peores resultados.2. El aprendizaje de la consulta de los modelos 2.1 El modelo de aprendizaje de consulta que consideramos aquí se llama aprendizaje exacto de las consultas de membresía y equivalencia, introducido por Angluin [2]. En este modelo, el objetivo de los algoritmos de aprendizaje es identificar exactamente una función objetivo desconocida F: X → Y a través de consultas a un Oracle. La función de destino se extrae de una función de clase C que se conoce por el algoritmo. Típicamente, el dominio x es un subconjunto de {0, 1} m, y el rango y es {0, 1} o algún subconjunto de los números reales ê. A medida que avanza el algoritmo, construye una hipótesis manifiesta ˜f, que es su estimación actual de la función objetivo. Tras la terminación, la hipótesis manifiesta de un algoritmo de aprendizaje correcto satisface ˜f (x) = f (x) para todos x ∈ X. Es importante especificar la representación que se usará para codificar funciones de C. Por ejemplo, considere la siguiente función de {0, 1} m a ê: f (x) = 2 si x consiste en m 1s y f (x) = 0 de lo contrario. Esta función puede simplemente representarse como una lista de valores de 2M. O puede codificarse como el polinomio 2x1 · · · xm, que es mucho más sucinto. La elección de la codificación puede tener un impacto significativo en los requisitos de tiempo y espacio del algoritmo de aprendizaje. Deje que el tamaño (f) sea el tamaño de la codificación de F con respecto a la clase de representación dada. La mayoría de las clases de representación tienen una medida natural de tamaño de codificación. El tamaño de un polinomio se puede definir como el número de coeficientes no cero en el polinomio, por ejemplo. Por lo general, solo nos referiremos a las clases de representación;Las clases de función correspondientes estarán implícitas. Por ejemplo, la clase de representación de fórmulas DNF monótonas implica la clase de función de las funciones booleanas monótonas. Dos tipos de consultas se usan comúnmente para el aprendizaje exacto: consultas de membresía y equivalencia. En una consulta de membresía, el alumno presenta algunas x ∈ X y el Oracle responde con F (x). En una consulta de equivalencia, el alumno presenta su hipótesis manifiesta ˜f. El Oracle responde sí si ˜f = f, o devuelve un contraejemplo x tal que ˜f (x) = f (x). Una consulta de equivalencia es adecuada si el tamaño (˜f) ≤ tamaño (f) en el momento en que se presenta la hipótesis manifiesta. Estamos interesados en algoritmos de aprendizaje eficientes. Las siguientes definiciones están adaptadas de Kearns y Vazirani [9]: Definición 1. La clase C de representación es PolynomialQuery que se puede aprender exactamente de las consultas de membresía y equivalencia si hay un polinomio fijo P (·, ·) y un algoritmo L con acceso a consultas de membresía y equivalencia de un oráculo tal que para cualquier función objetivo f ∈ C, lsalidas después de la máximo p (tamaño (f), m) consulta una función ˜f ∈ C tal que ˜f (x) = f (x) para todas las instancias x. Del mismo modo, la clase C de representación se puede aprender de manera eficiente de las consultas de membresía y equivalencia si el algoritmo L genera una hipótesis correcta en el tiempo P (tamaño (F), M), para algún polinomio fijo P (·, ·). Aquí M es la dimensión del dominio. Dado que la función objetivo debe reconstruirse, también necesariamente permitimos la dependencia polinomial del tamaño (F).2.2 PREVENTACIÓN DE PREFERENCIA En una subasta combinatoria, se debe asignar un conjunto de bienes M entre un conjunto de agentes n para maximizar la suma de las valoraciones de los agentes. Tal asignación se llama eficiente en la literatura económica, pero nos referiremos a ella como óptimo y reservaremos el término eficiente para referirse a la eficiencia computacional. Dejamos que n = | n |y m = | m |. Una asignación es una partición de los objetos en los paquetes (S1, ..., Sn), de modo que si ∩ sj = ∅ para todos los distintos i, j ∈ N. Sea γ el conjunto de posibles asignaciones. Cada agente i ∈ N tiene una función de valoración VI: 2m → ê sobre el espacio de posibles paquetes. Cada valoración VI se extrae de una clase conocida de valoraciones vi. Las clases de valoración no necesitan coincidir. Asumiremos que todas las valoraciones consideradas están normalizadas, lo que significa V (∅) = 0, y que no hay externalidades, que significa VI (S1, ..., Sn) = vi (Si), para todos los agentes i ∈ N,Para cualquier asignación (S1, ..., sn) ∈ γ (es decir, un agente solo se preocupa por el paquete asignado a ella). Las valoraciones que satisfacen estas condiciones se denominan valoraciones generales.1 A menudo, las valoraciones generales están hechas para satisfacer los 181 adicionales también suponen que los agentes tienen funciones de utilidad cuasi lineales, lo que significa que los servicios públicos de agentes se pueden dividir en componentes monetarios y no monetarios. Si un agente I se asigna paquete S al precio P, deriva UI (S, P) = VI (S) - p.Una función de valoración puede verse como un vector de 2M-1 valores reales no negativos. Por supuesto, también puede haber representaciones más sucintas para ciertas clases de valoración, y ha habido mucha investigación sobre lenguajes de licitación concisos para varios tipos de valoraciones [11]. Un ejemplo clásico al que nos referiremos nuevamente más tarde es el lenguaje de ofertas XOR. En este idioma, el agente proporciona una lista de ofertas atómicas, que consisten en un paquete junto con su valor. Para determinar el valor de un paquete dado estas ofertas, se busca el paquete de más alto valor enumerado en las ofertas atómicas de tal manera que S ⊆ S. es entonces cuando v (s) = V (s). Como en el entorno de la teoría del aprendizaje, generalmente solo nos referiremos a los idiomas de licitación en lugar de las clases de valoración, porque las clases de valoración correspondientes estarán implícitas. Por ejemplo, el lenguaje de licitación XOR implica la clase de valoraciones que satisfacen la eliminación gratuita, que es la condición de que A ⊆ B ⇒ V (A) ≤ V (B). Dejamos el tamaño (V1, ..., Vn) = èn i = 1 tamaño (vi). Es decir, el tamaño de un vector de valoraciones es el tamaño de la concatenación de las representaciones de valoraciones en sus respectivos esquemas de codificación (idiomas de licitación). Para hacer una analogía con la teoría del aprendizaje computacional, suponemos que todas las clases de representación consideradas son interpretables polinomialmente [11], lo que significa que el valor de un paquete puede calcularse en tiempo polinómico dada la representación de las funciones de valoración. Más formalmente, una clase de representación (lenguaje de licitación) C es polinómicamente interpretable si existe un algoritmo que dada como entrada algunas v ∈ C y una instancia x ∈ X calcula el valor v (x) en el tiempo Q (tamaño (v), M), para algunas Q (·, ·) .2 fijas en las rondas intermedias de una subasta (iterativa), el subastador habrá obtenido información sobre las funciones de valoración de los agentes a través de varios tipos de consultas. Por lo tanto, habrá construido un conjunto de valoraciones manifiestas, denotadas ˜v1 ,..., ˜vn.3 Los valores de estas funciones pueden corresponder exactamente a los valores del agente verdadero, o pueden ser, por ejemplo, los límites superiores o inferiores en los valores verdaderos, dependiendo de los tipos de consultas hechas. También pueden ser simplemente valores predeterminados o aleatorios si no se ha adquirido información sobre ciertos paquetes. El objetivo en el problema de obtención de preferencias es construir un conjunto de valoraciones manifiestas de tal manera que: arg max (s1, ..., sn) ∈γ i∈N ˜Vi (Si) ⊆ arg max (s1, ..., sn) ∈γ i∈N VI (Si) es decir, las valoraciones manifiestas proporcionan suficiente información para calcular una asignación que es óptima con respecto a las verdaderas valoraciones. Tenga en cuenta que solo requerimos una de esas asignaciones óptimas.condición de libre disgusto (monotonicidad), pero no la necesitamos en este momento.2 Esto excluye o ∗, suponiendo P = NP, porque interpretar las ofertas de este lenguaje es NP-HARD mediante la reducción del empaque de sets ponderado, y no existe una clase de representación bien estudiada en la teoría del aprendizaje que sea claramente análoga o ∗.3 Esta visión de las subastas iterativas está destinada a ser paralelo a la configuración de aprendizaje. En muchas subastas combinatorias, las valoraciones manifiestas no se mantienen explícitamente, sino que simplemente implican la historia de las ofertas. Dos consultas típicas utilizadas en la obtención de preferencias son las consultas de valor y demanda. En una consulta de valor, el subastador presenta un paquete s ⊆ m y el agente responde con su valor (exacto) para el paquete V (s) [8]. En una consulta de demanda, el subastador presenta un vector de precios no negativos p ∈ ê (2m) sobre los paquetes junto con un paquete S. El agente responde sí si es el caso que s ∈ Arg max s ⊆m V (s) - p (s) ¡o de otra manera presenta un paquete s tal que v (s) - p (s)> v (s) - p (s) es decir, el agente confirma que el paquete presentado es más preferido en elPrecios cotizados, o indica uno mejor [15] .4 Tenga en cuenta que incluimos ∅ como un paquete, por lo que el agente solo responderá sí si su utilidad para el paquete propuesto no es negativo. Tenga en cuenta también que comunicar precios no lineales no implica necesariamente citar un precio para cada paquete posible. Puede haber formas más sucintas de comunicar este vector, como mostramos en la Sección 5. Hacemos las siguientes definiciones para paralelos a la configuración de aprendizaje de consultas y para simplificar las declaraciones de resultados posteriores: Definición 2. Las clases de representación V1 ,..., VN puede ser quirado polinomial provocado por consultas de valor y demanda si hay un polinomio fijo P (·, ·) y un algoritmo l con acceso a consultas de valor y demanda de los agentes de tal manera que para cualquier (v1, ..., ...vn) ∈ V1 ×...× VN, sal de L.VI (Si). Del mismo modo, la clase C de representación se puede provocar de manera eficiente de las consultas de valor y demanda si el algoritmo l genera una asignación óptima con la comunicación P (tamaño (V1, ..., VN), M), para algunos polinomiales fijos (·, ·, ·). Hay algunas diferencias clave aquí con la definición de aprendizaje de consultas. Hemos eliminado el término exactamente ya que las funciones de valoración no necesitan determinarse exactamente para calcular una asignación óptima. Además, un algoritmo de obtención eficiente es la comunicación polinómica, en lugar del tiempo polinomial. Esto refleja el hecho de que la comunicación en lugar del tiempo de ejecución es el cuello de botella en obtención. Calcular una asignación óptima de bienes incluso cuando se les da las valoraciones verdaderas es NP-Hard para una amplia gama de clases de valoración. Por lo tanto, no es razonable requerir tiempo polinomial en la definición de un algoritmo de obtención de preferencia eficiente. Nos complace centrarnos en la complejidad de comunicación de la obtención porque se cree ampliamente que este problema es más significativo en la práctica que el de la determinación del ganador [11] .5 4 Esto difiere ligeramente de la definición proporcionada por Blum et al.[5] Sus consultas de demanda están restringidas a precios lineales sobre los bienes, donde el precio de un paquete es la suma de los precios de sus bienes subyacentes. En contraste, nuestras consultas de demanda permiten precios no lineales, es decir, un precio distinto para cada paquete posible. Es por eso que el límite inferior en su teorema 2 no contradice nuestro resultado que sigue.5 Aunque el problema de determinación del ganador es NP-Hard para valoraciones generales, existen muchos algoritmos que lo resuelven de manera eficiente en la práctica. Estos van desde algoritmos de propósito especial [7, 16] hasta enfoques que utilizan solucionadores IP estándar [1].182 Dado que las valoraciones no necesitan ser provocadas exactamente, inicialmente está menos claro si la dependencia polinomial del tamaño (V1, ..., VN) está justificada en esta configuración. Intuitivamente, este parámetro está justificado porque debemos aprender valoraciones exactamente al realizar la obtención, en el peor de los casos. Abordamos esto en la siguiente sección.3. Entre los paralelos, entre las consultas de equivalencia y demanda, hemos descrito la configuración de obtención de aprendizaje y preferencia de consultas de una manera que resalte sus similitudes. Las consultas de valor y membresía son análogos claros. Un poco menos obvio es el hecho de que las consultas de equivalencia y demanda también son análogos. Para ver esto, necesitamos el concepto de precios de Lindahl. Los precios de Lindahl son precios no lineales y no anónimos sobre los paquetes. No son lineales en el sentido de que a cada paquete se le asigna un precio, y este precio no es necesariamente la suma de los precios sobre sus bienes subyacentes. No son anónimos en el sentido de que dos agentes pueden enfrentar diferentes precios para el mismo paquete de bienes. Por lo tanto, los precios de Lindahl son de la forma pi (s), para todos los s ⊆ m, para todos los precios de N. lindahl se presentan a los agentes en las consultas de demanda. Cuando los agentes han normalizado las funciones de utilidad cuasi-lineal, Bikhchandani y Ostroy [4] muestran que siempre existen precios de Lindahl de tal manera que (S1, ..., Sn) es una asignación óptima si y solo si Si ∈ Arg max SI VI (SI) - Pi (Si) ¡∀i ∈ N (1) (S1, ..., Sn) ∈ Arg max (S1, ..., sn) ∈γ i∈N pi (Si) (2) condición (1) establece que a cada agente se le asigna un paquete que maximiza su utilidad a los precios dados. La condición (2) establece que la asignación maximiza los ingresos de los subastadores a los precios dados. El escenario en el que se mantienen estas condiciones se llama equilibrio de Lindahl, o a menudo un equilibrio competitivo. Decimos que los precios de Lindahl apoyan la asignación óptima. Por lo tanto, es suficiente anunciar los precios de apoyo de Lindahl para verificar una asignación óptima. Una vez que hemos encontrado una asignación con los precios de apoyo de Lindahl, se resuelve el problema de obtención. El problema de encontrar una asignación óptima (con respecto a las valoraciones manifiestas) puede formularse como un programa lineal cuyas soluciones se garantiza que son integrales [4]. Las variables duales de este programa lineal están respaldando los precios de Lindahl para la asignación resultante. La función objetivo del programa dual es: min pi (s) πs + i∈N πi (3) con πi = max s⊆m (i (s) - pi (s)) πs = max (s1, ..., Sn) ∈γ i∈N pi (Si) Los valores óptimos de πi y πs corresponden a la utilidad máxima al agente I con respecto a su valoración manifiesta y los ingresos máximos para el vendedor. Por lo general, hay una gama de posibles precios de Lindahl que respalda una asignación óptima dada. Las valoraciones de los agentes manifiestan, de hecho, los precios válidos de Lindahl, y nos referimos a ellos como precios máximos de Lindahl. De todos los vectores posibles de los precios de Lindahl, los precios máximos de Lindahl maximizan la utilidad del subastador, de hecho, dándole todo el bienestar social. Por el contrario, los precios que maximizan el componente è i∈N πi del objetivo (la suma de los servicios públicos de los agentes) son precios mínimos de Lindahl. Cualquier precio de Lindahl servirá para nuestros resultados, pero algunos pueden tener mejores propiedades de obtención que otras. Tenga en cuenta que una consulta de demanda con precios máximos de Lindahl es casi idéntica a una consulta de equivalencia, ya que en ambos casos comunicamos la valoración manifiesta al agente. Dejamos para el trabajo futuro la cuestión de los precios de Lindahl para elegir minimizar la obtención de preferencias. Teniendo en cuenta ahora por qué las consultas de demanda y equivalencia son análogos directos, primero tenga en cuenta que, dado el πi en algún equilibrio de lindahl, configurando pi (s) = max {0, ˜vi (s) - πi} (4) para todos los i ∈ N y S⊆ M produce precios válidos de Lindahl. Estos precios dejan a todos los agentes indiferentes en todos los paquetes con precio positivo y satisfacen la condición (1). Por lo tanto, las consultas de demanda también pueden comunicar implícitamente las valoraciones manifiestas, ya que los precios de Lindahl generalmente serán una constante aditiva lejos de estas por la igualdad (4). En el siguiente lema mostramos cómo obtener contraejemplos para consultas de equivalencia a través de consultas de demanda. Lema 1. Supongamos que un agente responde con un paquete preferido cuando se propone un paquete y los precios de soporte de Lindahl P (s) (que respalda con respecto a la valoración del manifiesto de los agentes). Entonces ˜v (s) = v (s) o ˜v (s) = v (s). Prueba. Tenemos las siguientes desigualdades: ˜v (s) - p (s) ≥ ˜v (s) - p (s) ⇒ ˜v (s) - ˜v (s) ≤ p (s) - p (s) (s) (s) (5) V (S) - P (S)> V (S) - P (S) ⇒ V (S) - V (S)> P (S) - P (S) (6) Desigualdad (5) SostenLos precios respaldan la asignación propuesta con respecto a la valoración manifiesta. La desigualdad (6) se mantiene porque el agente de hecho prefiere S a S dada los precios, de acuerdo con su respuesta a la consulta de demanda. Si fuera el caso que ˜v (s) = V (s) y ˜v (s) = V (s), estas desigualdades representarían una contradicción. Por lo tanto, al menos uno de S y S es un contraejemplo para la valoración del manifiesto de los agentes. Finalmente, justificamos la dependencia del tamaño (V1, ..., VN) en problemas de obtención. Nisan y Segal (Proposición 1, [12]) y Parkes (Teorema 1, [13]) muestran que el apoyo a los precios de Lindahl necesariamente debe revelarse en el curso de cualquier protocolo de obtención de preferencia que termine con una asignación óptima. Además, Nisan y Segal (Lemma 1, [12]) indican que en el peor de los casos, los precios de los agentes deben coincidir con sus valoraciones (hasta una constante), cuando la clase de valoración es lo suficientemente rica como para contener valoraciones duales (como será lacaso con las clases más interesantes). Dado que revelar los precios de Lindahl es una condición necesaria para establecer una asignación óptima, y dado que los precios de Lindahl contienen la misma información que las funciones de valoración (en el peor de los casos), lo que permite la dependencia del tamaño (V1, ..., VN) en problemas de obtenciónes completamente natural.183 4. Desde el aprendizaje hasta la obtención de preferencias, la clave para convertir un algoritmo de aprendizaje hasta un algoritmo de obtención es simular consultas de equivalencia con consultas de demanda y valor hasta que se encuentre una asignación óptima. Debido a nuestra construcción de precios de Lindahl, cuando todos los agentes responden sí a una consulta de demanda, hemos encontrado una asignación óptima, análoga al caso en el que un agente responde sí a una consulta de equivalencia cuando la función objetivo se ha aprendido exactamente. De lo contrario, podemos obtener un contraejemplo a una consulta de equivalencia dada una respuesta de los agentes a una consulta de demanda. Teorema 1. Las clases de representación V1 ,..., VN puede ser quirado polinomial provocado por consultas de valor y demanda si pueden ser una quereria polinomial aprendida exactamente de las consultas de membresía y equivalencia. Prueba. Considere el algoritmo de obtención en la Figura 1. Cada consulta de membresía en el Paso 1 se simula con una consulta de valor ya que de hecho son idénticas. Considere el paso 4. Si todos los agentes responden que sí, la condición (1) se mantiene. La condición (2) se mantiene porque la asignación calculada es una maximización de ingresos para el subastador, independientemente de las verdaderas valoraciones de los agentes. Por lo tanto, se ha encontrado una asignación óptima. De lo contrario, al menos uno de SI o SI es un contraejemplo para ˜Vi, por Lemma 1. Identificamos un contraejemplo realizando consultas de valor en ambos paquetes y lo proporcionamos a la IA como respuesta a su consulta de equivalencia. Este procedimiento se detendrá, ya que en el peor de los casos se aprenderán exactamente las valoraciones de los agentes, en cuyo caso la asignación óptima y los precios de Lindahl serán aceptados por todos los agentes. El procedimiento realiza un número polinomial de consultas, desde A1 ,..., Y son todos los algoritmos de aprendizaje de la cuarta polinomio. Tenga en cuenta que el procedimiento de conversión da como resultado un algoritmo de obtención de preferencia, no un algoritmo de aprendizaje. Es decir, el algoritmo resultante no solo aprende las valoraciones exactamente, luego calcula una asignación óptima. Más bien, provoca información parcial sobre las valoraciones a través de consultas de valor, y prueba periódicamente si se ha recopilado suficiente información proponiendo una asignación a los agentes a través de consultas de demanda. Es posible generar un equilibrio de Lindahl para las valoraciones V1 ,..., VN utilizando una asignación y precios derivados utilizando valoraciones manifiestas ˜v1 ,..., ˜vn, y encontrar una asignación óptima no implica que las valoraciones de los agentes se hayan aprendido exactamente. El uso de consultas de demanda para simular consultas de equivalencia permite esta detención temprana. No obtendríamos esta propiedad con consultas de equivalencia basadas en valoraciones manifiestas.5. Complejidad de la comunicación En esta sección, pasamos al tema de la complejidad de la comunicación de la obtención. Nisan y Segal [12] muestran que para una variedad de espacios de valoración ricos (como valoraciones generales y submodulares), la carga de comunicación en el peor de los casos de determinar los precios de Lindahl es exponencial en la cantidad de bienes, m.La carga de comunicación se mide en términos del número de bits transmitidos entre agentes y subastadores en caso de comunicación discreta, o en términos del número de números reales transmitidos en el caso de la comunicación continua. La conversión de algoritmos de aprendizaje eficientes a un algoritmo de obtención produce un algoritmo cuyas consultas tienen tamaños polinomiales en los parámetros my tamaño (V1, .., VN). Teorema 2. Las clases de representación V1 ,..., VN se puede obtener de manera eficiente de las consultas de valor y demanda si se pueden aprender de manera eficiente de las consultas de membresía y equivalencia. Prueba. El tamaño de cualquier consulta de valor es O (m): el mensaje consiste únicamente en el paquete consultado. Para comunicar los precios de Lindahl al Agente I, es suficiente comunicar la función de valoración de los agentes y el valor πi, por igualdad (4). Tenga en cuenta que un algoritmo de aprendizaje eficiente nunca aumenta una hipótesis manifiesta del tamaño superpolinomial, porque el tiempo de ejecución de los algoritmos también sería superpolinomio, contradiciendo la eficiencia. Por lo tanto, la comunicación de la valoración de manifiesto requiere tamaño en la mayoría de P (tamaño (VI), M), para una P polinomial que es el tiempo de ejecución del algoritmo de aprendizaje eficiente. Que representan el excedente πi al agente No puedo requerir espacio mayor que Q (tamaño (˜Vi), m) para algún Q polinomio fijo, porque suponemos que la representación elegida es polinómicamente interpretable y, por lo tanto, cualquier valor generado será de tamaño polinomial. También debemos comunicarnos con i su paquete asignado, por lo que el tamaño total del mensaje para una consulta de demanda es como máximo p (tamaño (vi), m) + q (p (tamaño (vi), m), m) + o (m). Claramente, una respuesta de los agentes a una consulta de valor o demanda tiene un tamaño en la mayoría de Q (tamaño (vi), m) + o (m). Por lo tanto, las consultas de valor y demanda, y las respuestas a estas consultas, son siempre de tamaño polinómico. Un algoritmo de aprendizaje eficiente realiza un número polinomial de consultas, por lo que la comunicación total del algoritmo de obtención resultante es polinomio en los parámetros relevantes. A menudo habrá límites explícitos en el número de consultas de membresía y equivalencia realizadas por un algoritmo de aprendizaje, con constantes que no están enmascaradas por la notación Big-O. Estos límites pueden traducirse a límites explícitos en el número de consultas de valor y demanda realizadas por el algoritmo de obtención resultante. Superior limitamos el tamaño de la hipótesis manifiesta con el tiempo de ejecución del algoritmo de aprendizaje en el Teorema 2. Es probable que podamos hacer mucho mejor que esto en la práctica. Recuerde que una consulta de equivalencia es apropiada si el tamaño (˜f) ≤ tamaño (f) en el momento en que se realiza la consulta. Si las consultas de equivalencia de algoritmos de aprendizaje son apropiadas, también puede ser posible proporcionar límites estrechos en los requisitos de comunicación del algoritmo de obtención resultante. El teorema 2 muestra que los algoritmos de obtención que dependen del parámetro de tamaño (V1, ..., VN) evitan nisan y segals [12] resultados negativos en la peor complejidad de comunicación de problemas de asignación eficientes. Proporcionan garantías con respecto a los tamaños de las instancias de las funciones de valoración enfrentadas en cualquier ejecución del algoritmo. A estos algoritmos les irá bien si la clase de representación elegida proporciona representaciones sucintas para las valoraciones más simples y comunes, y por lo tanto el enfoque regresa a uno de lenguajes de licitación compactos pero expresivos. Consideramos estos problemas a continuación.6. Aplicaciones En esta sección, demostramos la aplicación de nuestros métodos a clases de representación particulares para valoraciones combinatorias. Hemos demostrado que el problema de obtención de preferencias para las clases de valoración V1 ,..., VN puede reducirse 184 Dado: Algoritmos de aprendizaje exactos A1 ,..., An para las clases de valoraciones v1 ,..., Vn respectivamente. Luce hasta que haya una señal para detener: 1. Ejecutar a1 ,..., Un paralelo en sus respectivos agentes hasta que cada uno requiera una respuesta a una consulta de equivalencia, o se ha detenido con la valoración exacta de los agentes.2. Calcule una asignación óptima (S1, ..., Sn) y los precios de Lindahl correspondientes con respecto a las valoraciones manifiestas ˜V1 ,..., ˜vn determinado hasta ahora.3. Presente la asignación y los precios a los agentes en forma de consulta de demanda.4. Si todos responden que sí, envíe la asignación y se detenga. De lo contrario, hay un agente que ha respondido con un paquete preferido si. Realice consultas de valor en SI y SI para encontrar un contraejemplo para ˜Vi y proporcionarlo a la IA. Figura 1: Algoritmos de aprendizaje de conversión a un algoritmo de obtención.al problema de encontrar un algoritmo de aprendizaje eficiente para cada una de estas clases por separado. Esto es significativo porque ya existen algoritmos de aprendizaje para una gran cantidad de clases de funciones, y porque a menudo puede ser más simple resolver cada subproblema de aprendizaje por separado que atacar el problema de obtención de preferencias directamente. Podemos desarrollar un algoritmo de obtención que se adapte a la valoración de cada agente, con los algoritmos de aprendizaje subyacentes vinculados juntos en las etapas de consulta de demanda de una manera independiente del algoritmo. Mostramos que los algoritmos de aprendizaje existentes para polinomios, fórmulas DNF monótonas y funciones de umbral lineal se pueden convertir en algoritmos de obtención de preferencias para valoraciones generales, valoraciones con desacuerdo y valoraciones con sustitutabilidades, respectivamente. Nos centramos en representaciones que son polinomialmente interpretables, porque la literatura de la teoría del aprendizaje computacional pone un gran énfasis en la tractabilidad computacional [18]. Al interpretar los métodos, enfatizamos la expresividad y la sucinción de cada clase de representación. La clase de representación, que en términos de subasta combinatoria define un lenguaje de licitación, debe ser necesariamente lo suficientemente expresiva como para representar todas las valoraciones posibles de interés, y también debe representar sucintamente las funciones más simples y comunes de la clase.6.1 Representaciones polinómicas Schapire y Sellie [17] dan un algoritmo de aprendizaje para polinomios multivariados dispersos que pueden usarse como base para un protocolo de subasta combinatoria. Las consultas de equivalencia hechas por este algoritmo son apropiadas. Específicamente, su algoritmo aprende la clase de representación de polinomios multivariados de T-Sparse sobre los números reales, donde las variables pueden tomar valores 0 o 1. Un polinomio de SPARS tiene en la mayoría de los términos T, donde un término es un producto de variables, p.x1x3x4. Un polinomio sobre los números reales tiene coeficientes extraídos de los números reales. Los polinomios son expresivos: cada función de valoración v: 2m → ê+ puede escribirse de manera única como polinomio [17]. Para tener una idea de la sucinción de los polinomios como lenguaje de licitación, considere las valoraciones aditivas y de un solo elemento presentadas por Nisan [11]. En la valoración aditiva, el valor de un paquete es el número de productos que contiene el paquete. En la valoración de un solo elemento, todos los paquetes tienen valor 1, excepto ∅ que tiene valor 0 (es decir, el agente está satisfecho tan pronto como ha adquirido un solo elemento). No es difícil demostrar que la valoración de un solo elemento requiere polinomios del tamaño 2M-1, mientras que los polinomios del tamaño M son suficientes para la valoración aditiva. Por lo tanto, los polinomios son apropiados para las valoraciones que son en su mayoría aditivas, con algunas sustitutabilidades y complementariedades que pueden introducirse ajustando los coeficientes. El algoritmo de aprendizaje para polinomios hace que en la mayoría de las consultas de equivalencia de MTI +2 y como máximo (MTI +1) (T2 I +3TI)/2 consultas de membresía a un Agente I, donde Ti es la escasez del polinomio que representa VI [17]. Por lo tanto, obtenemos un algoritmo que provoca valoraciones generales con un número polinómico de consultas y comunicación polinomial.6 6.2 Representaciones XOR El lenguaje de licitación XOR es estándar en la literatura de subastas combinatorias. Recuerde que una oferta XOR se caracteriza por un conjunto de paquetes B ⊆ 2m y una función de valor W: B → ê+ definida en esos paquetes, lo que induce la función de valoración: V (b) = max {b ∈B |B ⊆b} w (b) (7) Las ofertas XOR pueden representar valoraciones que satisfacen la desaceleración (y solo tales valoraciones), que nuevamente es la propiedad de que A ⊆ B ⇒ V (A) ≤ V (B). El lenguaje de licitación XOR es un poco menos expresivo que los polinomios, porque los polinomios pueden representar valoraciones que no satisfacen la eliminación gratuita. Sin embargo, Xor es tan expresivo como se requiere en la mayoría de los entornos económicos. Nisan [11] señala que las ofertas de XOR pueden representar la valoración de un solo elemento con m bids atómicas, pero se necesitan ofertas atómicas 2M-1 para representar la valoración aditiva. Dado que lo contrario se mantiene para los polinomios, estos dos idiomas son incomparables en sucindad y algo complementarios para el uso práctico. Blum et al.[5] Tenga en cuenta que las fórmulas DNF monótonas son los análogos de XOR BIDS en la literatura de la teoría del aprendizaje. Una fórmula monótona DNF es una disyunción de conjunciones en la que las variables parecen no ser negadas, por ejemplo x1x2 ∨ x3 ∨ x2x4x5. Tenga en cuenta que tales fórmulas pueden representarse como ofertas XOR donde cada oferta atómica tiene valor 1;Por lo tanto, las ofertas XOR generalizan las fórmulas DNF monótonas de las funciones booleanas a los valores reales. Estas ideas nos permiten generalizar un algoritmo de aprendizaje clásico para el DNF monótono ([3] Teorema 6 Tenga en cuenta que el Teorema 1 se aplica incluso si las valoraciones no satisfacen el desacuerdo. 185 1, [18] Teorema B) a un algoritmo de aprendizaje para las ofertas XOR.7 Lema 2. Una oferta XOR que contiene t bichas atómicas se puede aprender exactamente con consultas de equivalencia T + 1 y, como máximo, consultas de membresía TM. Prueba. El algoritmo identificará cada oferta atómica en el objetivo XOR BID a su vez. Inicialice la valoración manifiesta ˜v a la oferta que es idénticamente cero en todos los paquetes (esta es una oferta XOR que contiene 0 ofertas atómicas). Presente ˜v como una consulta de equivalencia. Si la respuesta es sí, ya terminamos. De lo contrario, obtenemos un paquete para el que v (s) = ˜v (s). Crea un paquete T de la siguiente manera. Primero inicialice t = S. Para cada elemento I en t, verifique a través de una consulta de membresía si v (t) = v (t - {i}). Si es así establecido t = t - {i}. De lo contrario, deje t como está y procede al siguiente elemento. Afirmamos que (t, v (t)) es una oferta atómica de la oferta de XOR objetivo. Para cada elemento I en t, tenemos v (t) = v (t - {i}). Para ver esto, tenga en cuenta que en algún momento al generar t, teníamos un ¯t tal que t ⊆ ¯t ⊆ sy v (¯t)> v (¯t - {i}), de modo que me mantuvieron en ¯T. Tenga en cuenta que V (S) = V (¯t) = V (t) porque el valor del paquete S se mantiene a lo largo del proceso de eliminación de elementos. Ahora asume v (t) = v (t - {i}). Entonces v (¯t) = v (t) = v (t-{i})> v (¯t-{i}) que contradice la eliminación libre, ya que t-{i} ⊆ ¯t-{i}. Por lo tanto, v (t)> v (t - {i}) para todos los elementos I en T. Esto implica que (t, v (t)) es una oferta atómica de v. Si este no fuera el caso, t tomaríaEl valor máximo de sus subconjuntos estrictos, por la definición de una oferta XOR, y tendríamos v (t) = max i∈T {max t ⊆t - {i} v (t)} = max i∈T {v(T - {i})} <v (t) que es una contradicción. Ahora mostramos que v (t) = ˜v (t), que implicará que (t, v (t)) no es una oferta atómica de nuestra hipótesis manifiesta por inducción. Suponga que cada oferta atómica (R, ˜v (R)) identificada hasta ahora es de hecho una oferta atómica de V (lo que significa que R se enumera en una oferta atómica de V como valor V (r) = ˜v (R))). Esta suposición se mantiene vacía cuando se inicializa la valoración de manifiesto. Usando la notación de (7), Sea (˜b, ˜w) nuestra hipótesis, y (b, w) sea la función objetivo. Tenemos ˜b ⊆ b, y ˜w (b) = w (b) para b ∈ ˜b por suposición. Por lo tanto, ˜v (s) = max {b∈ ˜b |B⊆s} ˜w (b) = max {b∈ ˜b |B⊆s} w (b) ≤ max {b∈B |B⊆s} w (b) = v (s) (8) Ahora suponga v (t) = ˜v (t). Entonces, ˜v (t) = v (t) = v (s) = ˜v (s) (9) La segunda igualdad se deriva del hecho de que el valor permanece constante cuando derivamos de S.S es un contraejemplo de la valoración manifiesta. De la ecuación (9) y la eliminación de libre, el algoritmo citado también se utilizó como base para el algoritmo de obtención de Zinkevich et al.S [19] para la caja de herramientas DNF. Recuerde que la caja de herramientas DNF son polinomios con coeficientes no negativos. Para estas representaciones, se puede simular una consulta de equivalencia con una consulta de valor en el paquete que contiene todos los bienes.tener ˜v (t) <˜v (s). Luego de nuevo de la ecuación (9) se deduce que v (s) <˜v (s). Esto contradice (8), por lo que de hecho tenemos v (t) = ˜v (t). Por lo tanto, (t, v (t)) no está actualmente en nuestra hipótesis como una oferta atómica, o tendríamos correctamente ˜v (t) = v (t) por la hipótesis de inducción. Agregamos (t, v (t)) a nuestra hipótesis y repetimos el proceso anterior, realizando consultas de equivalencia adicionales hasta que se hayan identificado todas las ofertas atómicas. Después de cada consulta de equivalencia, se identifica una oferta atómica con la mayoría de las consultas de membresía M. Cada contraejemplo conduce al descubrimiento de una nueva oferta atómica. Por lo tanto, hacemos en la mayoría de las consultas de membresía TM y exactamente consultas de equivalencia T + 1. El número de pasos de tiempo requeridos por este algoritmo es esencialmente el mismo que el número de consultas realizadas, por lo que el algoritmo es eficiente. Aplicando el Teorema 2, por lo tanto, obtenemos el siguiente corolario: Teorema 3. La clase de representación de las ofertas XOR se puede obtener de manera eficiente de las consultas de valor y demanda. Esto contrasta con los resultados negativos de Blum et al. ([5], el teorema 2) que indica que el DNF monótono (y, por lo tanto, XOR, las ofertas) no pueden provocarse de manera eficiente cuando las consultas de demanda están restringidas a precios lineales y anónimos sobre los bienes.6.3 Representaciones de umbral lineal Los polinomios, las ofertas de XOR y todos los idiomas basados en el lenguaje de OR (como XOR-OF o OF-XOR, y o ∗) no pueden representar sucintamente la valoración de la mayoría [11]. En esta valoración, los paquetes tienen valor 1 si contienen al menos m/2 elementos, y valor 0 de lo contrario. En términos más generales, considere la familia de valoraciones R-de-S donde los paquetes tienen valor 1 si contienen al menos R elementos de un conjunto especificado de elementos s ⊆ m, y valor 0 de lo contrario. La valoración de la mayoría es un caso especial de la valoración R-de-S con R = M/2 y S = M. Estas valoraciones son apropiadas para representar sustituabilidad: una vez que se ha obtenido un conjunto requerido de elementos, ningún otro elemento puede agregar valor. Permitir k = | s |, tales valoraciones están representadas sucintamente por funciones umbral R-de K. Estas funciones toman la forma de desigualdades lineales: xi1 +...+ xik ≥ r donde la función tiene valor 1 si la desigualdad se mantiene, y 0 de lo contrario. Aquí i1 ,..., IK son los elementos en el algoritmo de S. Littlestones Winnow 2 pueden aprender tales funciones usando consultas de equivalencia solamente, usando como máximo 8R2 + 5K + 14KR LN M + 1 Consultas [10]. Para proporcionar esta garantía, R debe ser conocida por el algoritmo, pero S (y K) son desconocidos. El algoritmo de obtención que resulta de Winnow 2 usa consultas de demanda solamente (las consultas de valor no son necesarias aquí porque los valores de los contraejemplos están implícitos cuando solo hay dos valores posibles). Tenga en cuenta que las funciones umbrales de R-de K siempre se pueden representar sucintamente en el espacio O (M). Por lo tanto, obtenemos un algoritmo que puede provocar tales funciones con un número polinomial de consultas y comunicación polinomial, en los parámetros N y M solos.186 7. Conclusiones y trabajos futuros Hemos demostrado que los algoritmos de aprendizaje exactos con consultas de membresía y equivalencia pueden usarse como base para los algoritmos de obtención de preferencias con consultas de valor y demanda. En el corazón de este resultado está el hecho de que las consultas de demanda pueden verse como consultas de equivalencia modificadas, especializadas para el problema de la obtención de preferencias. Nuestro resultado nos permite aplicar la riqueza de algoritmos de aprendizaje disponibles al problema de la obtención de preferencias. Un enfoque de aprendizaje para la obtención también motiva un enfoque diferente para diseñar algoritmos de obtención que se descompone perfectamente entre los tipos de agentes. Si el diseñador conoce de antemano qué tipos de preferencias es probable que cada agente exhiba (en su mayoría aditivo, muchos sustitutos, etc.), puede diseñar algoritmos de aprendizaje adaptados a las valoraciones de cada agente e integrarlos en un esquema de obtención. El algoritmo de obtención resultante hace un número polinomial de consultas y hace comunicación polinomial si los algoritmos de aprendizaje originales son eficientes. No requerimos que las valoraciones de los agentes se puedan aprender con consultas de valor y demanda. Las consultas de equivalencia solo pueden ser, y solo necesitan ser simuladas hasta el punto en que se ha calculado una asignación óptima. Este es el problema de obtención de preferencias. El Teorema 1 implica que la obtención de consultas de valor y demanda no es más difícil que aprender con consultas de membresía y equivalencia, pero no proporciona ninguna mejoría asintótica sobre la complejidad de los algoritmos de aprendizaje. Sería interesante encontrar ejemplos de clases de valoración para las cuales la obtención es más fácil que aprender. Blum et al.[5] Proporcione tal ejemplo al considerar solo consultas de membresía/valor (Teorema 4). En el trabajo futuro, planeamos abordar el tema de los incentivos al convertir los algoritmos de aprendizaje en algoritmos de obtención. En el entorno de aprendizaje, generalmente asumimos que los oráculos proporcionarán respuestas honestas a las consultas;En el entorno de obtención, los agentes suelen ser egoístas y proporcionarán respuestas posiblemente deshonestas para maximizar su utilidad. También planeamos implementar los algoritmos para los polinomios de aprendizaje y las ofertas de XOR como algoritmos de obtención, y probar su desempeño contra otros protocolos de subastas combinatorias establecidas [6, 15]. Una pregunta interesante aquí es: ¿Qué precios de Lindahl en el rango máximo a mínimo son los mejores para citar para minimizar la revelación de la información? Conjeturamos que la revelación de la información se reduce cuando se mueve de los precios máximos a mínimos de Lindahl, a saber, a medida que avanzamos, las consultas de demanda más lejos de las consultas de equivalencia. Finalmente, sería útil determinar si el lenguaje de licitación o ∗ [11] se puede aprender de manera eficiente (y por lo tanto provocado), dada la expresividad y la sucinción de los idiomas para una amplia variedad de clases de valoración. Agradecimientos Nos gustaría agradecer a Debasis Mishra por sus útiles discusiones. Este trabajo es apoyado en parte por NSF Grant IIS0238147.8. Referencias [1] A. Andersson, M. Tenhunen y F. Ygge. Programación entera para la determinación del ganador de la subasta combinatoria. En Actas de la Cuarta Conferencia Internacional sobre Sistemas Multiagentes (ICMAS-00), 2000. [2] D. Angluin. Aprender conjuntos regulares de consultas y contraejemplos. Información y computación, 75: 87-106, noviembre de 1987. [3] D. Angluin. Consultas y aprendizaje conceptual. Aprendizaje automático, 2: 319-342, 1987. [4] S. Bikhchandani y J. Ostroy. El modelo de asignación de paquetes. Journal of Economic Theory, 107 (2), diciembre de 2002. [5] A. Blum, J. Jackson, T. Sandholm y M. Zinkevich. PREVERSIÓN DE PREFERENCIA Y APRENDIZAJE DE CONSULTA. En Proc.16ª Conferencia Anual sobre Teoría del Aprendizaje Computacional (Colt), Washington DC, 2003. [6] W. Conen y T. Sandholm. Mecanismo VCG de revelación parcial para subastas combinatorias. En Proc.La 18ª Conferencia Nacional sobre Inteligencia Artificial (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown e Y. Shoham. Domestica la complejidad computacional de las subastas combinatorias: enfoques óptimos y aproximados. En Proc.La 16ª Conferencia Internacional Conjunta sobre Inteligencia Artificial (IJCAI), páginas 548-553, 1999. [8] B. Hudson y T. Sandholm. Uso de consultas de valor en subastas combinatorias. En Proc.4ª Conferencia ACM sobre Comercio Electrónico (ACM-EC), San Diego, CA, junio de 2003. [9] M. J. Kearns y U. V. Vazirani. Una introducción a la teoría del aprendizaje computacional. MIT Press, 1994. [10] N. Littlestone. Aprender rápidamente cuando abundan los atributos irrelevantes: un nuevo algoritmo de umbral lineal. Aprendizaje automático, 2: 285-318, 1988. [11] N. Nisan. Licitación y asignación en subastas combinatorias. En Proc.La Conferencia ACM sobre Comercio Electrónico, páginas 1-12, 2000. [12] N. Nisan e I. Segal. Los requisitos de comunicación de las asignaciones eficientes y el apoyo a los precios de Lindahl. Documento de trabajo, Universidad Hebrea, 2003. [13] D. C. Parkes. Certificados de información basados en precios para subastas combinatorias de revelación mínima. En Padget et al., Editor, Commerce Electronic mediado por agente IV, LNAi 2531, páginas 103-122. Springer-Verlag, 2002. [14] D. C. Parkes. Diseño de subasta con costosa obtención de preferencias. En temas especiales de Annals of Mathematics and AI sobre los fundamentos del comercio electrónico, de próxima publicación (2003).[15] D. C. Parkes y L. H. Ungar. Subastas combinatorias iterativas: teoría y práctica. En Proc.17ª Conferencia Nacional sobre Inteligencia Artificial (AAAI-00), páginas 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin y D. Levine. CABOB: un algoritmo óptimo rápido para subastas combinatorias. En Proc.La 17ª Conferencia Internacional Conjunta sobre Inteligencia Artificial (IJCAI), páginas 1102-1108, 2001. [17] R. Schapire y L. Sellie. Aprender polinomios multivariados dispersos en un campo con consultas y contraejemplos. En Actas del Sexto Taller Anual de ACM sobre teoría del aprendizaje computacional, páginas 17-26. ACM Press, 1993. 187 [18] L. Valiant. Una teoria de lo aprendible. Comun. ACM, 27 (11): 1134-1142, noviembre de 1984. [19] M. Zinkevich, A. Blum y T. Sandholm. Sobre la obtención de preferencias de tiempo polinómico con quitas de valor. En Proc.4ª Conferencia ACM sobre Comercio Electrónico (ACM-EC), San Diego, CA, junio de 2003. 188",
    "original_sentences": [
        "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
        "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
        "The resulting elicitation algorithms perform a polynomial number of queries.",
        "We also give conditions under which the resulting algorithms have polynomial communication.",
        "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
        "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
        "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
        "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
        "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
        "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
        "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
        "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
        "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
        "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
        "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
        "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
        "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
        "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
        "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
        "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
        "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
        "Preference elicitation schemes have not traditionally considered this last parameter.",
        "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
        "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
        "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
        "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
        "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
        "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
        "We expect this to be an important consideration in practice.",
        "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
        "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
        "Related work.",
        "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
        "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
        "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
        "Their work only makes use of value queries, which are quite limited in power.",
        "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
        "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
        "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
        "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
        "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
        "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
        "Nisan and Segal [12] study the communication complexity of preference elicitation.",
        "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
        "Their results apply to the black-box model of computational complexity.",
        "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
        "This is in fact the basic framework of learning theory.",
        "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
        "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
        "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
        "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
        "The target function is drawn from a function class C that is known to the algorithm.",
        "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
        "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
        "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
        "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
        "This function may simply be represented as a list of 2m values.",
        "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
        "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
        "Let size(f) be the size of the encoding of f with respect to the given representation class.",
        "Most representation classes have a natural measure of encoding size.",
        "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
        "We will usually only refer to representation classes; the corresponding function classes will be implied.",
        "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
        "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
        "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
        "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
        "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
        "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
        "We are interested in efficient learning algorithms.",
        "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
        "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
        "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
        "Here m is the dimension of the domain.",
        "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
        "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
        "We let n = |N| and m = |M|.",
        "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
        "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
        "Each valuation vi is drawn from a known class of valuations Vi.",
        "The valuation classes do not need to coincide.",
        "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
        "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
        "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
        "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
        "A classic example which we will refer to again later is the XOR bidding language.",
        "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
        "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
        "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
        "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
        "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
        "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
        "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
        "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
        "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
        "They may also simply be default or random values if no information has been acquired about certain bundles.",
        "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
        "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
        "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
        "Two typical queries used in preference elicitation are value and demand queries.",
        "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
        "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
        "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
        "There may be more succinct ways of communicating this vector, as we show in section 5.",
        "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
        "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
        "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
        "There are some key differences here with the query learning definition.",
        "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
        "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
        "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
        "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
        "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
        "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
        "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
        "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
        "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
        "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
        "We address this in the next section. 3.",
        "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
        "Value and membership queries are clear analogs.",
        "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
        "To see this, we need the concept of Lindahl prices.",
        "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
        "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
        "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
        "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
        "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
        "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
        "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
        "We say that the Lindahl prices support the optimal allocation.",
        "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
        "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
        "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
        "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
        "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
        "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
        "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
        "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
        "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
        "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
        "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
        "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
        "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
        "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
        "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
        "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
        "Lemma 1.",
        "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
        "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
        "Proof.",
        "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
        "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
        "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
        "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
        "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
        "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
        "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
        "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
        "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
        "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
        "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
        "Theorem 1.",
        "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
        "Proof.",
        "Consider the elicitation algorithm in Figure 1.",
        "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
        "Consider step 4.",
        "If all agents reply YES, condition (1) holds.",
        "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
        "Thus an optimal allocation has been found.",
        "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
        "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
        "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
        "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
        "Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm.",
        "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
        "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
        "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
        "The use of demand queries to simulate equivalence queries enables this early halting.",
        "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
        "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
        "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
        "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
        "Theorem 2.",
        "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
        "Proof.",
        "The size of any value query is O(m): the message consists solely of the queried bundle.",
        "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
        "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
        "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
        "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
        "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
        "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
        "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
        "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
        "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
        "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
        "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
        "We are likely to be able to do much better than this in practice.",
        "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
        "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
        "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
        "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
        "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
        "We consider these issues below. 6.",
        "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
        "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
        "Loop until there is a signal to halt: 1.",
        "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
        "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
        "Present the allocation and prices to the agents in the form of a demand query. 4.",
        "If they all reply YES, output the allocation and halt.",
        "Otherwise there is some agent i that has replied with some preferred bundle Si.",
        "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
        "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
        "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
        "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
        "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
        "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
        "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
        "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
        "The equivalence queries made by this algorithm are all proper.",
        "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
        "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
        "A polynomial over the real numbers has coefficients drawn from the real numbers.",
        "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
        "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
        "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
        "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
        "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
        "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
        "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
        "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
        "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
        "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
        "However, XOR is as expressive as required in most economic settings.",
        "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
        "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
        "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
        "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
        "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
        "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
        "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
        "Proof.",
        "The algorithm will identify each atomic bid in the target XOR bid in turn.",
        "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
        "Present ˜v as an equivalence query.",
        "If the response is YES, we are done.",
        "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
        "Create a bundle T as follows.",
        "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
        "If so set T = T − {i}.",
        "Otherwise leave T as is and proceed to the next item.",
        "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
        "For each item i in T, we have v(T) = v(T − {i}).",
        "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
        "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
        "Now assume v(T) = v(T − {i}).",
        "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
        "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
        "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
        "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
        "This assumption holds vacuously when the manifest valuation is initialized.",
        "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
        "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
        "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
        "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
        "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
        "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
        "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
        "Then again from equation (9) it follows that v(S) < ˜v(S).",
        "This contradicts (8), so we in fact have v(T) = ˜v(T).",
        "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
        "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
        "After each equivalence query, an atomic bid is identified with at most m membership queries.",
        "Each counterexample leads to the discovery of a new atomic bid.",
        "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
        "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
        "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
        "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
        "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
        "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
        "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
        "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
        "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
        "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
        "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
        "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
        "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
        "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
        "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
        "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
        "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
        "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
        "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
        "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
        "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
        "We do not require that agent valuations can be learned with value and demand queries.",
        "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
        "This is the preference elicitation problem.",
        "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
        "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
        "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
        "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
        "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
        "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
        "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
        "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
        "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
        "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
        "This work is supported in part by NSF grant IIS0238147. 8.",
        "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
        "Integer programming for combinatorial auction winner determination.",
        "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
        "Learning regular sets from queries and counterexamples.",
        "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
        "Queries and concept learning.",
        "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
        "The Package Assignment Model.",
        "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
        "Preference elicitation and query learning.",
        "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
        "Partial-revelation VCG mechanism for combinatorial auctions.",
        "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
        "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
        "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
        "Using value queries in combinatorial auctions.",
        "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
        "An Introduction to Computational Learning Theory.",
        "MIT Press, 1994. [10] N. Littlestone.",
        "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
        "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
        "Bidding and allocation in combinatorial auctions.",
        "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
        "The communication requirements of efficient allocations and supporting Lindahl prices.",
        "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
        "Price-based information certificates for minimal-revelation combinatorial auctions.",
        "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
        "Springer-Verlag, 2002. [14] D. C. Parkes.",
        "Auction design with costly preference elicitation.",
        "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
        "Iterative combinatorial auctions: Theory and practice.",
        "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
        "CABOB: A fast optimal algorithm for combinatorial auctions.",
        "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
        "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
        "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
        "ACM Press, 1993. 187 [18] L. Valiant.",
        "A theory of the learnable.",
        "Commun.",
        "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
        "On polynomial-time preference elicitation with value-queries.",
        "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
    ],
    "error_count": 0,
    "keys": {
        "parallel": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to <br>parallel</br> the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to <br>parallel</br> the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in <br>parallel</br> on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Tenga en cuenta que solo requerimos una de esas asignaciones óptimas.condición de libre disgusto (monotonicidad), pero no la necesitamos en este momento.2 Esto excluye o ∗, suponiendo P = NP, porque interpretar las ofertas de este lenguaje es NP-HARD mediante la reducción del empaque de sets ponderado, y no existe una clase de representación bien estudiada en la teoría del aprendizaje que sea claramente análoga o ∗.3 Esta visión de las subastas iterativas está destinada a \"paralela\" al entorno de aprendizaje.",
                "Hacemos las siguientes definiciones para \"paralela\" a la configuración de aprendizaje de consultas y simplificar las declaraciones de resultados posteriores: Definición 2.",
                "Ejecutar a1 ,..., Un \"paralelo\" en sus respectivos agentes hasta que cada uno requiera una respuesta a una consulta de equivalencia, o se ha detenido con la valoración exacta de los agentes.2."
            ],
            "translated_text": "",
            "candidates": [
                "paralelo",
                "paralela",
                "Paralelo",
                "paralela",
                "Paralelo",
                "paralelo"
            ],
            "error": []
        },
        "preference elicitation problem": {
            "translated_key": "Problema de obtención de preferencias",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the <br>preference elicitation problem</br> in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the <br>preference elicitation problem</br> in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the <br>preference elicitation problem</br> is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the <br>preference elicitation problem</br> for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the <br>preference elicitation problem</br> directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the <br>preference elicitation problem</br>.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Aplicación de algoritmos de aprendizaje a la obtención de preferencias Sebastien M. Lahaie División de Ingeniería y Ciencias Aplicadas Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes División de Ingeniería y Ciencias Aplicadas Harvard University Cambridge, MA 02138 Parkes@eecs.harvardResumen .edu Consideramos los paralelos entre el \"problema de obtención de preferencias\" en las subastas combinatorias y el problema de aprender una función desconocida de la teoría del aprendizaje.",
                "Ha habido un trabajo reciente explorando los vínculos entre el \"problema de obtención de preferencias\" en las subastas combinatorias y el problema de aprender una función desconocida de la teoría del aprendizaje computacional [5, 19].",
                "El objetivo en el \"problema de obtención de preferencias\" es construir un conjunto de valoraciones manifiestas de tal manera que: arg max (s1, ..., sn) ∈γ i∈N i (si) ⊆ arg max (s1, ..., Sn) ∈γ I∈N VI (Si) es decir, las valoraciones manifiestas proporcionan suficiente información para calcular una asignación que es óptima con respecto a las verdaderas valoraciones.",
                "Hemos demostrado que el \"problema de obtención de preferencias\" para las clases de valoración V1 ,..., VN puede reducirse 184 Dado: Algoritmos de aprendizaje exactos A1 ,..., An para las clases de valoraciones v1 ,..., Vn respectivamente.",
                "Esto es significativo porque ya existen algoritmos de aprendizaje para una gran cantidad de clases de funciones, y porque a menudo puede ser más simple resolver cada subproblema de aprendizaje por separado que atacar el \"problema de obtención de preferencias\" directamente.",
                "Este es el \"problema de obtención de preferencias\"."
            ],
            "translated_text": "",
            "candidates": [
                "Problema de obtención de preferencias",
                "problema de obtención de preferencias",
                "Problema de obtención de preferencias",
                "problema de obtención de preferencias",
                "Problema de obtención de preferencias",
                "problema de obtención de preferencias",
                "Problema de obtención de preferencias",
                "problema de obtención de preferencias",
                "Problema de obtención de preferencias",
                "problema de obtención de preferencias",
                "Problema de obtención de preferencias",
                "problema de obtención de preferencias"
            ],
            "error": []
        },
        "combinatorial auction": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate <br>combinatorial auction</br> protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a <br>combinatorial auction</br>, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate <br>combinatorial auction</br> protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot <br>combinatorial auction</br> where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a <br>combinatorial auction</br>, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in <br>combinatorial auction</br> terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a <br>combinatorial auction</br> protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established <br>combinatorial auction</br> protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for <br>combinatorial auction</br> winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Nuestro procedimiento de conversión nos permite generar protocolos de \"subasta combinatoria\" a partir de algoritmos de aprendizaje para polinomios, DNF monótono y funciones de umbral lineal.",
                "Introducción En una \"subasta combinatoria\", los agentes pueden ofertar por paquetes de bienes en lugar de bienes individuales solos.",
                "Finalmente, utilizamos nuestro procedimiento de conversión para generar protocolos de \"subasta combinatoria\" a partir de algoritmos de aprendizaje para polinomios, DNF monótono y funciones de umbral lineal.",
                "Por supuesto, una \"subasta combinatoria\" de una sola vez donde los agentes proporcionan todas sus funciones de valoración a la vez también tendrían comunicación polinomial en el tamaño de las valoraciones de los agentes, y solo requieren una consulta.",
                "Dado que la función objetivo debe reconstruirse, también necesariamente permitimos la dependencia polinomial del tamaño (F).2.2 Pedimiento de preferencias En una \"subasta combinatoria\", se asignará un conjunto de bienes M entre un conjunto de agentes n para maximizar la suma de las valoraciones de los agentes.",
                "La clase de representación, que en términos de \"subasta combinatoria\" define un lenguaje de licitación, debe ser lo suficientemente expresiva como para representar todas las valoraciones posibles de interés, y también debe representar sucintamente las funciones más simples y comunes de la clase.6.1 Representaciones polinómicas Schapire y Sellie [17] dan un algoritmo de aprendizaje para polinomios multivariados dispersos que pueden usarse como base para un protocolo de \"subasta combinatoria\".",
                "También planeamos implementar los algoritmos para los polinomios de aprendizaje y las ofertas de XOR como algoritmos de obtención, y probar su desempeño contra otros protocolos establecidos de \"subasta combinatorial\" [6, 15].",
                "Programación entera para la determinación del ganador de la \"subasta combinatoria\"."
            ],
            "translated_text": "",
            "candidates": [
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatoria",
                "subasta combinatorial",
                "subasta combinatoria",
                "subasta combinatoria"
            ],
            "error": []
        },
        "learning": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying <br>learning</br> Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of <br>learning</br> an unknown function from learning theory.",
                "We show that <br>learning</br> algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from <br>learning</br> algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: <br>learning</br> General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of <br>learning</br> an unknown function from computational <br>learning</br> theory [5, 19].",
                "In <br>learning</br> theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of <br>learning</br> and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact <br>learning</br> algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from <br>learning</br> algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of <br>learning</br> and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of <br>learning</br> restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in <br>learning</br> theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query <br>learning</br> and preference elicitation.",
                "They consider models with membership and equivalence queries in query <br>learning</br>, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of <br>learning</br>.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of <br>learning</br> theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query <br>learning</br> The query <br>learning</br> model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the <br>learning</br> algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct <br>learning</br> algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the <br>learning</br> algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact <br>learning</br>: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient <br>learning</br> algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the <br>learning</br> theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational <br>learning</br> theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in <br>learning</br> theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the <br>learning</br> setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query <br>learning</br> setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query <br>learning</br> definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query <br>learning</br> and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM <br>learning</br> TO PREFERENCE ELICITATION The key to converting a <br>learning</br> algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query <br>learning</br> algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a <br>learning</br> algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient <br>learning</br> algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient <br>learning</br> algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient <br>learning</br> algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient <br>learning</br> algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a <br>learning</br> algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the <br>learning</br> algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the <br>learning</br> algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact <br>learning</br> algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting <br>learning</br> algorithms to an elicitation algorithm. to the problem of finding an efficient <br>learning</br> algorithm for each of these classes separately.",
                "This is significant because there already exist <br>learning</br> algorithms for a wealth of function classes, and because it may often be simpler to solve each <br>learning</br> subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying <br>learning</br> algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing <br>learning</br> algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational <br>learning</br> theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a <br>learning</br> algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The <br>learning</br> algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the <br>learning</br> theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic <br>learning</br> algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a <br>learning</br> algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact <br>learning</br> algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available <br>learning</br> algorithms to the problem of preference elicitation.",
                "A <br>learning</br> approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design <br>learning</br> algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original <br>learning</br> algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than <br>learning</br> with membership and equivalence queries, but it does not provide any asymptotic improvements over the <br>learning</br> algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than <br>learning</br>.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting <br>learning</br> algorithms to elicitation algorithms.",
                "In the <br>learning</br> setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for <br>learning</br> polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "<br>learning</br> regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept <br>learning</br>.",
                "Machine <br>learning</br>, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query <br>learning</br>.",
                "In Proc. 16th Annual Conference on Computational <br>learning</br> Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational <br>learning</br> Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "<br>learning</br> quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine <br>learning</br>, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "<br>learning</br> sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational <br>learning</br> Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Aplicación de algoritmos de \"aprendizaje\" a la obtención de preferencias Sebastien M. Lahaie División de Ingeniería y Ciencias Aplicadas Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes División de Ingeniería y Ciencias Aplicadas Harvard University Cambidge, MA 02138 Parkes@eecs.harvard.edu Resumen Consideramos los paralelos entre el problema de obtención de preferencias en las subastas combinatorias y el problema de \"aprender\" una función desconocida de la teoría del aprendizaje.",
                "Mostramos que los algoritmos de \"aprendizaje\" pueden usarse como base para los algoritmos de obtención de preferencias.",
                "Nuestro procedimiento de conversión nos permite generar protocolos de subastas combinatorias a partir de algoritmos de \"aprendizaje\" para polinomios, monótonos DNF y funciones de umbral lineal.",
                "Categorías y descriptores de sujetos F.2.0 [Análisis de algoritmos y complejidad del problema]: general;J.4 [Ciencias sociales y conductuales]: Economía;I.2.6 [Inteligencia artificial]: \"aprendizaje\" Algoritmos de términos generales, economía, teoría 1.",
                "Ha habido un trabajo reciente explorando los vínculos entre el problema de obtención de preferencias en las subastas combinatorias y el problema de \"aprender\" una función desconocida de la teoría computacional de \"aprendizaje\" [5, 19].",
                "En la teoría de \"aprender\", el objetivo es aprender una función a través de varios tipos de consultas, como ¿cuál es el valor de las funciones en estas entradas?",
                "Aunque los objetivos de \"aprendizaje\" y la obtención de preferencias difieren un poco, está claro que estos problemas comparten una estructura similar, y no debería sorprendernos que las técnicas de un campo sean relevantes para el otro.",
                "Mostramos que cualquier algoritmo exacto de \"aprendizaje\" con consultas de membresía y equivalencia puede convertirse en un algoritmo de obtención de preferencia con consultas de valor y demanda.",
                "Finalmente, utilizamos nuestro procedimiento de conversión para generar protocolos de subastas combinatorias a partir de algoritmos de \"aprendizaje\" para polinomios, DNF monótono y funciones de umbral lineal.",
                "Nuestro enfoque está en la complejidad del tiempo y la comunicación de la obtención de preferencias, independientemente de las limitaciones de incentivos, y en la relación entre las complejidades del \"aprendizaje\" y la obtención de preferencias.",
                "Zinkevich et al.[19] Considere el problema de \"aprender\" clases restringidas de funciones de valoración que pueden representarse utilizando fórmulas de lectura y DNF de caja de herramientas.",
                "Dado que su trabajo también se basa en la teoría de \"aprendizaje\", permiten la dependencia del tamaño de la valoración objetivo como nosotros (aunque las valoraciones de lectura siempre se pueden representar sucintamente de todos modos).",
                "Blum et al.[5] Proporcionar resultados relacionados con las complejidades de la consulta \"aprendizaje\" y la obtención de preferencias.",
                "Consideran modelos con consultas de membresía y equivalencia en la consulta \"aprendizaje\", y las consultas de valor y demanda en la obtención de preferencias.",
                "En contraste, nuestro trabajo muestra que dada una versión más general (pero aún bastante estándar) de la consulta de demanda que el tipo que consideran, la complejidad de la obtención de preferencias no es mayor que la complejidad del \"aprendizaje\".",
                "De hecho, este es el marco básico de la teoría de \"aprendizaje\".",
                "El modelo de consulta de modelos 2.1 \"Aprendizaje\" de la consulta \"Aprendizaje\" que consideramos aquí se llama aprendizaje exacto de las consultas de membresía y equivalencia, introducida por Angluin [2].",
                "En este modelo, el objetivo de los algoritmos de \"aprendizaje\" es identificar exactamente una función objetivo desconocida F: X → Y a través de consultas a un Oracle.",
                "Tras la terminación, la hipótesis manifiesta de un algoritmo correcto de \"aprendizaje\" satisface ˜f (x) = f (x) para todos x ∈ X.",
                "La elección de la codificación puede tener un impacto significativo en los requisitos de tiempo y espacio del algoritmo de \"aprendizaje\".",
                "Dos tipos de consultas se usan comúnmente para el \"aprendizaje\" exacto: consultas de membresía y equivalencia.",
                "Estamos interesados en algoritmos eficientes de \"aprendizaje\".",
                "Como en el entorno de la teoría de \"aprendizaje\", generalmente solo nos referiremos a los idiomas de licitación en lugar de las clases de valoración, porque las clases de valoración correspondientes se implicarán.",
                "Para hacer una analogía con la teoría de \"aprendizaje\" computacional, suponemos que todas las clases de representación consideradas son polinomialmente interpretables [11], lo que significa que el valor de un paquete puede calcularse en tiempo polinomial dada la representación de las funciones de valoración.",
                "Tenga en cuenta que solo requerimos una de esas asignaciones óptimas.condición de libre disgusto (monotonicidad), pero no la necesitamos en este momento.2 Esto excluye o ∗, suponiendo P = NP, porque la interpretación de ofertas de este lenguaje es NP-Hard por reducción del empaque de sets ponderado, y no hay una clase de representación bien estudiada en la teoría de \"aprendizaje\" que es claramente análoga o ∗.3 Esta visión de las subastas iterativas está destinada a ser paralelo al entorno de \"aprendizaje\".",
                "Hacemos las siguientes definiciones para ser paralelos a la configuración de \"aprendizaje\" de consulta y simplificar las declaraciones de resultados posteriores: Definición 2.",
                "Hay algunas diferencias clave aquí con la definición de \"aprendizaje\" de consulta.",
                "Entre los paralelos, entre las consultas de equivalencia y demanda, hemos descrito la consulta \"aprendizaje\" y la configuración de obtención de preferencias de una manera que resalte sus similitudes.",
                "Desde el \"aprendizaje\" hasta la obtención de preferencias, la clave para convertir un algoritmo de \"aprendizaje\" hasta un algoritmo de obtención es simular consultas de equivalencia con consultas de demanda y valor hasta que se encuentre una asignación óptima.",
                "El procedimiento realiza un número polinomial de consultas, desde A1 ,..., Y son todos los algoritmos de \"aprendizaje\" de quiry polinomial.",
                "Tenga en cuenta que el procedimiento de conversión da como resultado un algoritmo de obtención de preferencia, no un algoritmo de \"aprendizaje\".",
                "La conversión de algoritmos eficientes de \"aprendizaje\" a un algoritmo de obtención produce un algoritmo cuyas consultas tienen tamaños polinomiales en los parámetros my tamaño (V1, ..., VN).",
                "Tenga en cuenta que un algoritmo eficiente de \"aprendizaje\" nunca aumenta una hipótesis manifiesta del tamaño superpolinomial, porque el tiempo de ejecución de los algoritmos también sería superpolinomio, contradiciendo la eficiencia.",
                "Por lo tanto, la comunicación de la valoración de manifiesto requiere tamaño en la mayoría de P (tamaño (VI), M), para una P polinomial que es el tiempo de ejecución del algoritmo eficiente de \"aprendizaje\".",
                "Un algoritmo eficiente de \"aprendizaje\" realiza un número polinomial de consultas, por lo que la comunicación total del algoritmo de obtención resultante es polinomio en los parámetros relevantes.",
                "A menudo habrá límites explícitos en el número de consultas de membresía y equivalencia realizadas por un algoritmo de \"aprendizaje\", con constantes que no están enmascaradas por la notación Big-O.",
                "Hicimos un límite el tamaño de la hipótesis manifiesta con el tiempo de ejecución del algoritmo de \"aprendizaje\" en el teorema 2.",
                "Si las consultas de equivalencia de algoritmos de \"aprendizaje\" son apropiadas, también puede proporcionar límites estrechos en los requisitos de comunicación del algoritmo de obtención resultante.",
                "Hemos demostrado que el problema de obtención de preferencias para las clases de valoración V1 ,..., VN puede reducirse 184 Dado: Algoritmos exactos de \"aprendizaje\" A1 ,..., An para las clases de valoraciones v1 ,..., Vn respectivamente.",
                "Figura 1: Convertir algoritmos de \"aprendizaje\" a un algoritmo de obtención.al problema de encontrar un algoritmo eficiente de \"aprendizaje\" para cada una de estas clases por separado.",
                "Esto es significativo porque ya existen algoritmos de \"aprendizaje\" para una gran cantidad de clases de funciones, y porque a menudo puede ser más simple resolver cada subproblema de \"aprendizaje\" por separado que atacar el problema de obtención de preferencias directamente.",
                "Podemos desarrollar un algoritmo de obtención que se adapte a la valoración de cada agente, con los algoritmos subyacentes de \"aprendizaje\" vinculados juntos en las etapas de consulta de demanda de una manera independiente del algoritmo.",
                "Mostramos que los algoritmos de \"aprendizaje\" existentes para polinomios, fórmulas DNF monótonas y funciones de umbral lineal se pueden convertir en algoritmos de obtención de preferencias para valoraciones generales, valoraciones con liberación libre y valoraciones con sustitutabilidades, respectivamente.",
                "Nos centramos en representaciones que son polinomialmente interpretables, porque la literatura de teoría de \"aprendizaje\" computacional pone un gran énfasis en la tractabilidad computacional [18].",
                "La clase de representación, que en términos de subasta combinatoria define un lenguaje de licitación, debe ser necesariamente lo suficientemente expresiva como para representar todas las valoraciones posibles de interés, y también debe representar sucintamente las funciones más simples y comunes de la clase.6.1 Representaciones polinómicas Schapire y Sellie [17] dan un algoritmo de \"aprendizaje\" para polinomios multivariados dispersos que pueden usarse como base para un protocolo de subasta combinatoria.",
                "El algoritmo de \"aprendizaje\" para polinomios hace que en la mayoría de las consultas de equivalencia de MTI +2 y como máximo (mti +1) (t2 i +3ti)",
                "Blum et al.[5] Tenga en cuenta que las fórmulas DNF monótonas son los análogos de XOR BIDS en la literatura de la teoría de \"aprendizaje\".",
                "Estas ideas nos permiten generalizar un algoritmo clásico de \"aprendizaje\" para monótono DNF ([3] Teorema 6 Tenga en cuenta que el Teorema 1 se aplica incluso si las valoraciones no satisfacen el desacuerdo. 185 1, [18] Teorema B) a un \"aprendizaje\"Algoritmo para XOR BIDS.7 LEMMA 2.",
                "Conclusiones y trabajos futuros Hemos demostrado que los algoritmos exactos de \"aprendizaje\" con consultas de membresía y equivalencia pueden usarse como base para los algoritmos de obtención de preferencias con consultas de valor y demanda.",
                "Nuestro resultado nos permite aplicar la riqueza de los algoritmos de \"aprendizaje\" disponibles al problema de la obtención de preferencias.",
                "Un enfoque de \"aprendizaje\" para la obtención también motiva un enfoque diferente para diseñar algoritmos de obtención que se descompone perfectamente entre los tipos de agentes.",
                "Si el diseñador conoce de antemano qué tipos de preferencias es probable que cada agente exhiba (en su mayoría aditivo, muchos sustitutos, etc.), puede diseñar algoritmos de \"aprendizaje\" adaptados a las valoraciones de cada agente e integrarlos en un esquema de obtención.",
                "El algoritmo de obtención resultante hace un número polinomial de consultas y hace comunicación polinomial si los algoritmos originales de \"aprendizaje\" son eficientes.",
                "El teorema 1 implica que la obtención de consultas de valor y demanda no es más difícil que \"aprender\" con consultas de membresía y equivalencia, pero no proporciona ninguna mejoría asintótica sobre la complejidad de los algoritmos de \"aprendizaje\".",
                "Sería interesante encontrar ejemplos de clases de valoración para las cuales la obtención es más fácil que \"aprender\".",
                "En el trabajo futuro, planeamos abordar el tema de los incentivos al convertir los algoritmos de \"aprendizaje\" en algoritmos de obtención.",
                "En el entorno de \"aprendizaje\", generalmente asumimos que los oráculos proporcionarán respuestas honestas a las consultas;En el entorno de obtención, los agentes suelen ser egoístas y proporcionarán respuestas posiblemente deshonestas para maximizar su utilidad.",
                "También planeamos implementar los algoritmos para los polinomios de \"aprendizaje\" y las ofertas XOR como algoritmos de obtención, y probar su desempeño contra otros protocolos de subastas combinatorias establecidas [6, 15].",
                "\"Aprender\" conjuntos regulares de consultas y contraejemplos.",
                "Consultas y concepto \"aprendizaje\".",
                "Machine \"Learning\", 2: 319-342, 1987. [4] S. Bikhchandani y J. Ostroy.",
                "PREVERSIÓN DE PREFERENCIA Y CONSULTA \"Aprendizaje\".",
                "En Proc.16ª Conferencia Anual sobre Teoría de \"Aprendizaje\" computacional (Colt), Washington DC, 2003. [6] W. Conen y T. Sandholm.",
                "Una introducción a la teoría computacional de \"aprendizaje\".",
                "\"Aprender\" rápidamente cuando abundan los atributos irrelevantes: un nuevo algoritmo de umbral lineal.",
                "Máquina \"Aprendizaje\", 2: 285-318, 1988. [11] N. Nisan.",
                "\"Aprender\" polinomios multivariados dispersos sobre un campo con consultas y contraejemplos.",
                "En Actas del Sexto Taller Anual de ACM sobre teoría de \"aprendizaje\" computacional, páginas 17-26."
            ],
            "translated_text": "",
            "candidates": [
                "aprendiendo",
                "aprendizaje",
                "aprender",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendizaje",
                "aprendizaje",
                "aprendiendo",
                "aprender",
                "aprendizaje",
                "aprendiendo",
                "aprender",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprender",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "Aprendizaje",
                "Aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendizaje",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendizaje",
                "Aprendizaje",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "Aprendizaje",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "/2 consultas de membresía a un agente I, donde Ti es la escasa del polinomio que representa VI [17 17]aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "Aprendizaje",
                "aprendizaje",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprender",
                "aprendizaje",
                "aprendiendo",
                "aprender",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "Aprender",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "Learning",
                "aprendiendo",
                "Aprendizaje",
                "aprendiendo",
                "Aprendizaje",
                "aprendiendo",
                "aprendizaje",
                "aprendiendo",
                "Aprender",
                "aprendiendo",
                "Aprendizaje",
                "aprendiendo",
                "Aprender",
                "aprendiendo",
                "aprendizaje"
            ],
            "error": []
        },
        "learning theory": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from <br>learning theory</br>.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational <br>learning theory</br> [5, 19].",
                "In <br>learning theory</br>, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in <br>learning theory</br>, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of <br>learning theory</br>.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the <br>learning theory</br> setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational <br>learning theory</br>, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in <br>learning theory</br> that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational <br>learning theory</br> literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the <br>learning theory</br> literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational <br>learning theory</br> (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational <br>learning theory</br>.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational <br>learning theory</br>, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Aplicación de algoritmos de aprendizaje a la obtención de preferencias Sebastien M. Lahaie División de Ingeniería y Ciencias Aplicadas Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes División de Ingeniería y Ciencias Aplicadas Harvard University Cambridge, MA 02138 Parkes@eecs.harvardResumen .edu Consideramos los paralelos entre el problema de obtención de preferencias en las subastas combinatorias y el problema de aprender una función desconocida de la \"teoría del aprendizaje\".",
                "Ha habido un trabajo reciente explorando los vínculos entre el problema de obtención de preferencias en las subastas combinatorias y el problema de aprender una función desconocida de la \"teoría del aprendizaje\" computacional [5, 19].",
                "En \"Teoría del aprendizaje\", el objetivo es aprender una función a través de varios tipos de consultas, como ¿cuál es el valor de las funciones en estas entradas?",
                "Dado que su trabajo también se basa en la \"teoría del aprendizaje\", permiten la dependencia del tamaño de la valoración objetivo como nosotros (aunque las valoraciones de lectura siempre se pueden representar sucintamente de todos modos).",
                "De hecho, este es el marco básico de la \"teoría del aprendizaje\".",
                "Como en el entorno de \"teoría de aprendizaje\", generalmente solo nos referiremos a los idiomas de licitación en lugar de las clases de valoración, porque las clases de valoración correspondientes estarán implícitas.",
                "Para hacer una analogía con la \"teoría del aprendizaje\" computacional, suponemos que todas las clases de representación consideradas son polinomialmente interpretables [11], lo que significa que el valor de un paquete puede calcularse en tiempo polinómico dada la representación de las funciones de valoración.",
                "Tenga en cuenta que solo requerimos una de esas asignaciones óptimas.condición de libre disgusto (monotonicidad), pero no la necesitamos en este momento.2 Esto excluye o ∗, suponiendo P = NP, porque interpretar las ofertas de este lenguaje es NP-HARD por reducción del paquete de conjuntos ponderado, y no existe una clase de representación bien estudiada en la \"teoría de aprendizaje\" que es claramente análoga o ∗.3 Esta visión de las subastas iterativas está destinada a ser paralelo a la configuración de aprendizaje.",
                "Nos centramos en representaciones que son polinomialmente interpretables, porque la literatura de \"teoría del aprendizaje\" computacional pone un gran énfasis en la tractabilidad computacional [18].",
                "Blum et al.[5] Tenga en cuenta que las fórmulas DNF monótonas son los análogos de XOR BIDS en la literatura de \"teoría del aprendizaje\".",
                "En Proc.16ª Conferencia Anual sobre \"Teoría del aprendizaje\" computacional (Colt), Washington DC, 2003. [6] W. Conen y T. Sandholm.",
                "Una introducción a la \"teoría del aprendizaje\" computacional.",
                "En Actas del Sexto Taller Anual de ACM sobre \"Teoría del aprendizaje\" computacional, páginas 17-26."
            ],
            "translated_text": "",
            "candidates": [
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "Teoría del aprendizaje",
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "teoría de aprendizaje",
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "teoría de aprendizaje",
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "Teoría del aprendizaje",
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "teoría del aprendizaje",
                "Teoría del aprendizaje"
            ],
            "error": []
        },
        "learning algorithm": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact <br>learning algorithm</br> with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct <br>learning algorithm</br> satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the <br>learning algorithm</br>.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a <br>learning algorithm</br> to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a <br>learning algorithm</br>.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient <br>learning algorithm</br> never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient <br>learning algorithm</br>.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient <br>learning algorithm</br> performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a <br>learning algorithm</br>, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the <br>learning algorithm</br> in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient <br>learning algorithm</br> for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a <br>learning algorithm</br> for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The <br>learning algorithm</br> for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic <br>learning algorithm</br> for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a <br>learning algorithm</br> for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Mostramos que cualquier algoritmo de aprendizaje exacto con consultas de membresía y equivalencia puede convertirse en un algoritmo de obtención de preferencias con consultas de valor y demanda.",
                "Tras la terminación, la hipótesis manifiesta de un \"algoritmo de aprendizaje\" correcto satisface ˜f (x) = f (x) para todos x ∈ X.",
                "La elección de la codificación puede tener un impacto significativo en los requisitos de tiempo y espacio del \"algoritmo de aprendizaje\".",
                "Desde el aprendizaje hasta la obtención de preferencias, la clave para convertir un \"algoritmo de aprendizaje\" hasta un algoritmo de obtención es simular consultas de equivalencia con consultas de demanda y valor hasta que se encuentre una asignación óptima.",
                "Tenga en cuenta que el procedimiento de conversión da como resultado un algoritmo de obtención de preferencias, no un \"algoritmo de aprendizaje\".",
                "Tenga en cuenta que un \"algoritmo de aprendizaje\" eficiente nunca aumenta una hipótesis manifiesta del tamaño superpolinomial, porque el tiempo de ejecución de los algoritmos también sería superpolinomio, contradiciendo la eficiencia.",
                "Por lo tanto, la comunicación de la valoración de manifiesto requiere tamaño en la mayoría de P (tamaño (VI), M), para una P polinomial que es el tiempo de ejecución del \"algoritmo de aprendizaje\" eficiente.",
                "Un \"algoritmo de aprendizaje\" eficiente realiza un número polinomial de consultas, por lo que la comunicación total del algoritmo de obtención resultante es polinomio en los parámetros relevantes.",
                "A menudo habrá límites explícitos en el número de consultas de membresía y equivalencia realizadas por un \"algoritmo de aprendizaje\", con constantes que no están enmascaradas por la notación Big-O.",
                "Hubamos el tamaño de la parte superior del tamaño de la hipótesis manifiesta con el tiempo de ejecución del \"algoritmo de aprendizaje\" en el teorema 2.",
                "Figura 1: Algoritmos de aprendizaje de conversión a un algoritmo de obtención.al problema de encontrar un \"algoritmo de aprendizaje\" eficiente para cada una de estas clases por separado.",
                "La clase de representación, que en términos de subasta combinatoria define un lenguaje de licitación, debe ser necesariamente lo suficientemente expresiva como para representar todas las valoraciones posibles de interés, y también debe representar sucintamente las funciones más simples y comunes de la clase.6.1 Representaciones polinómicas Schapire y Sellie [17] dan un \"algoritmo de aprendizaje\" para polinomios multivariados dispersos que pueden usarse como base para un protocolo de subasta combinatoria.",
                "El \"algoritmo de aprendizaje\" para polinomios hace que en la mayoría de las consultas de equivalencia de MTI +2 y como máximo (MTI +1) (T2 i +3ti)",
                "Estas ideas nos permiten generalizar un \"algoritmo de aprendizaje\" clásico para el DNF monótono ([3] Teorema 6 Tenga en cuenta que el Teorema 1 se aplica incluso si las valoraciones no satisfacen la eliminación de libre. 185 1, [18] Teorema B) a un \"algoritmo de aprendizaje\"Para Xor Bids.7 Lema 2."
            ],
            "translated_text": "",
            "candidates": [
                "Algoritmo de aprendizaje",
                "Algoritmo de aprendizaje",
                "algoritmo de aprendizaje",
                "Algoritmo de aprendizaje",
                "algoritmo de aprendizaje",
                "Algoritmo de aprendizaje",
                "algoritmo de aprendizaje",
                "Algoritmo de aprendizaje",
                "algoritmo de aprendizaje",
                "Algoritmo de aprendizaje",
                "algoritmo de aprendizaje",
                "Algoritmo de aprendizaje",
                "algoritmo de aprendizaje",
                "Algoritmo de aprendizaje",
                "algoritmo de aprendizaje",
                "Algoritmo de aprendizaje",
                "algoritmo de aprendizaje",
                "Algoritmo de aprendizaje",
                "algoritmo de aprendizaje",
                "Algoritmo de aprendizaje",
                "algoritmo de aprendizaje",
                "Algoritmo de aprendizaje",
                "algoritmo de aprendizaje",
                "/2 consultas de membresía a un agente I, donde Ti es la escasa del polinomio que representa VI [17 VI [17]Algoritmo de aprendizaje",
                "algoritmo de aprendizaje",
                "Algoritmo de aprendizaje",
                "algoritmo de aprendizaje",
                "algoritmo de aprendizaje"
            ],
            "error": []
        },
        "preference elicitation algorithm": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a <br>preference elicitation algorithm</br> with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient <br>preference elicitation algorithm</br>.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a <br>preference elicitation algorithm</br>, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Mostramos que cualquier algoritmo de aprendizaje exacto con consultas de membresía y equivalencia puede convertirse en un \"algoritmo de obtención de preferencia\" con consultas de valor y demanda.",
                "Por lo tanto, no es razonable requerir tiempo polinomial en la definición de un \"algoritmo de obtención de preferencias\" eficiente.",
                "Tenga en cuenta que el procedimiento de conversión da como resultado un \"algoritmo de obtención de preferencia\", no un algoritmo de aprendizaje."
            ],
            "translated_text": "",
            "candidates": [
                "Algoritmo de obtención de preferencias",
                "algoritmo de obtención de preferencia",
                "Algoritmo de obtención de preferencias",
                "algoritmo de obtención de preferencias",
                "Algoritmo de obtención de preferencias",
                "algoritmo de obtención de preferencia"
            ],
            "error": []
        },
        "elicitation algorithm": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference <br>elicitation algorithm</br> with value and demand queries.",
                "The resulting <br>elicitation algorithm</br> guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient <br>elicitation algorithm</br> is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference <br>elicitation algorithm</br>.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an <br>elicitation algorithm</br> is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the <br>elicitation algorithm</br> in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a preference <br>elicitation algorithm</br>, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an <br>elicitation algorithm</br> produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting <br>elicitation algorithm</br> is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting <br>elicitation algorithm</br>.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting <br>elicitation algorithm</br>.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an <br>elicitation algorithm</br>. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an <br>elicitation algorithm</br> that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] <br>elicitation algorithm</br> for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The <br>elicitation algorithm</br> that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting <br>elicitation algorithm</br> makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Mostramos que cualquier algoritmo de aprendizaje exacto con consultas de membresía y equivalencia puede convertirse en un \"algoritmo de obtitación\" de preferencia con consultas de valor y demanda.",
                "El \"algoritmo de obtención\" resultante garantiza la obtención de la obtención en un número polinomial de consultas de valor y demanda.",
                "Además, un \"algoritmo de obtención\" eficiente es la comunicación polinomial, en lugar del tiempo polinomial.",
                "Por lo tanto, no es razonable requerir tiempo polinomial en la definición de un \"algoritmo de obtitación\" de preferencia eficiente.",
                "Desde el aprendizaje hasta la obtención de preferencias, la clave para convertir un algoritmo de aprendizaje hasta un \"algoritmo de obtitación\" es simular consultas de equivalencia con consultas de demanda y valor hasta que se encuentre una asignación óptima.",
                "Considere el \"Algoritmo de obtención\" en la Figura 1.",
                "Tenga en cuenta que el procedimiento de conversión da como resultado un \"algoritmo de obtención\" de preferencia, no un algoritmo de aprendizaje.",
                "La conversión de algoritmos de aprendizaje eficientes a un \"algoritmo de obtención\" produce un algoritmo cuyas consultas tienen tamaños polinomiales en los parámetros my tamaño (V1, .., VN).",
                "Un algoritmo de aprendizaje eficiente realiza un número polinomial de consultas, por lo que la comunicación total del \"algoritmo de obtitación\" resultante es polinomio en los parámetros relevantes.",
                "Estos límites pueden traducirse a límites explícitos en el número de consultas de valor y demanda realizadas por el \"algoritmo de obtención\" resultante.",
                "Si las consultas de equivalencia de algoritmos de aprendizaje son apropiadas, también puede ser posible proporcionar límites estrechos en los requisitos de comunicación del \"algoritmo de obtención\" resultante.",
                "Figura 1: Convertir algoritmos de aprendizaje a un \"algoritmo de obtención\".al problema de encontrar un algoritmo de aprendizaje eficiente para cada una de estas clases por separado.",
                "Podemos desarrollar un \"algoritmo de obtención\" que se adapte a la valoración de cada agente, con los algoritmos de aprendizaje subyacentes vinculados juntos en las etapas de consulta de demanda de una manera independiente del algoritmo.",
                "De la ecuación (9) y la eliminación de libre, el algoritmo citado también se usó como base para Zinkevich et al.s [19] \"Algoritmo de obtención\" para la caja de herramientas DNF.",
                "El \"Algoritmo de obtención\" que resulta de Winnow 2 usa consultas de demanda solamente (las consultas de valor no son necesarias aquí porque los valores de los contraexampres están implícitos cuando solo hay dos valores posibles).",
                "El \"algoritmo de obtención\" resultante hace un número polinomial de consultas y hace comunicación polinomial si los algoritmos de aprendizaje originales son eficientes."
            ],
            "translated_text": "",
            "candidates": [
                "algoritmo de obtención",
                "algoritmo de obtitación",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtitación",
                "algoritmo de obtención",
                "algoritmo de obtitación",
                "Algoritmo de obtención",
                "Algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtitación",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtención",
                "Algoritmo de obtención",
                "algoritmo de obtención",
                "Algoritmo de obtención",
                "algoritmo de obtención",
                "algoritmo de obtención"
            ],
            "error": []
        },
        "polynomial number of queries": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a <br>polynomial number of queries</br>.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a <br>polynomial number of queries</br>, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a <br>polynomial number of queries</br>, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a <br>polynomial number of queries</br> and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a <br>polynomial number of queries</br> and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a <br>polynomial number of queries</br>, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Los algoritmos de obtención resultantes realizan un \"número polinómico de consultas\".",
                "El procedimiento realiza un \"número polinómico de consultas\", desde A1 ,..., Y son todos los algoritmos de aprendizaje de la cuarta polinomio.",
                "Un algoritmo de aprendizaje eficiente realiza un \"número polinomial de consultas\", por lo que la comunicación total del algoritmo de obtención resultante es polinomio en los parámetros relevantes.",
                "Por lo tanto, obtenemos un algoritmo que provoca valoraciones generales con un \"número polinómico de consultas\" y comunicación polinomial.6 6.2 Representaciones XOR El lenguaje de licitación XOR es estándar en la literatura de subastas combinatorias.",
                "Por lo tanto, obtenemos un algoritmo que puede provocar tales funciones con un \"número polinomial de consultas\" y comunicación polinomial, en los parámetros N y M solos.186 7.",
                "El algoritmo de obtención resultante hace un \"número polinómico de consultas\" y hace comunicación polinomial si los algoritmos de aprendizaje originales son eficientes."
            ],
            "translated_text": "",
            "candidates": [
                "Número polinómico de consultas",
                "número polinómico de consultas",
                "Número polinómico de consultas",
                "número polinómico de consultas",
                "Número polinómico de consultas",
                "número polinomial de consultas",
                "Número polinómico de consultas",
                "número polinómico de consultas",
                "Número polinómico de consultas",
                "número polinomial de consultas",
                "Número polinómico de consultas",
                "número polinómico de consultas"
            ],
            "error": []
        },
        "query polynomial number": {
            "translated_key": "Número polinomial de consulta",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "polynomial communication": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have <br>polynomial communication</br>.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with <br>polynomial communication</br>.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have <br>polynomial communication</br> in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is <br>polynomial communication</br>, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and <br>polynomial communication</br>6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and <br>polynomial communication</br>, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes <br>polynomial communication</br> if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "También damos condiciones bajo las cuales los algoritmos resultantes tienen \"comunicación polinomial\".",
                "En particular, obtenemos un algoritmo que provoca ofertas de XOR con \"comunicación polinomial\".",
                "Por supuesto, una subasta combinatoria de un solo disparo donde los agentes proporcionan sus funciones de valoración completas a la vez también tendría \"comunicación polinómica\" en el tamaño de las valoraciones de los agentes, y solo requieren una consulta.",
                "Además, un algoritmo de obtención eficiente es la \"comunicación polinómica\", en lugar del tiempo polinomial.",
                "Por lo tanto, obtenemos un algoritmo que provoca valoraciones generales con un número polinomial de consultas y \"comunicación polinómica\" 6 6.2 Representaciones XOR El lenguaje de licitación XOR es estándar en la literatura de subastas combinatorias.",
                "Por lo tanto, obtenemos un algoritmo que puede provocar tales funciones con un número polinomial de consultas y \"comunicación polinomial\", en los parámetros N y M solos.186 7.",
                "El algoritmo de obtención resultante hace un número polinomial de consultas y hace \"comunicación polinomial\" si los algoritmos de aprendizaje originales son eficientes."
            ],
            "translated_text": "",
            "candidates": [
                "comunicación polinómica",
                "comunicación polinomial",
                "comunicación polinómica",
                "comunicación polinomial",
                "comunicación polinómica",
                "comunicación polinómica",
                "comunicación polinómica",
                "comunicación polinómica",
                "comunicación polinómica",
                "comunicación polinómica",
                "Comunicación polinómica",
                "comunicación polinomial",
                "comunicación polinómica",
                "comunicación polinomial"
            ],
            "error": []
        },
        "resulting algorithm": {
            "translated_key": "algoritmo resultante",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm.",
                "That is, the <br>resulting algorithm</br> does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Es decir, el \"algoritmo resultante\" no aprende simplemente las valoraciones exactamente, luego calcula una asignación óptima."
            ],
            "translated_text": "",
            "candidates": [
                "algoritmo resultante",
                "algoritmo resultante"
            ],
            "error": []
        },
        "conversion procedure": {
            "translated_key": "procedimiento de conversión",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our <br>conversion procedure</br> allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our <br>conversion procedure</br> to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the <br>conversion procedure</br> results in a preference elicitation algorithm, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Nuestro \"procedimiento de conversión\" nos permite generar protocolos de subastas combinatorias a partir de algoritmos de aprendizaje para polinomios, DNF monótono y funciones de umbral lineal.",
                "Finalmente, utilizamos nuestro \"procedimiento de conversión\" para generar protocolos de subastas combinatorias a partir de algoritmos de aprendizaje para polinomios, DNF monótono y funciones de umbral lineal.",
                "Tenga en cuenta que el \"procedimiento de conversión\" da como resultado un algoritmo de obtención de preferencia, no un algoritmo de aprendizaje."
            ],
            "translated_text": "",
            "candidates": [
                "procedimiento de conversión",
                "procedimiento de conversión",
                "procedimiento de conversión",
                "procedimiento de conversión",
                "procedimiento de conversión",
                "procedimiento de conversión"
            ],
            "error": []
        },
        "combinatorial auction protocol": {
            "translated_key": "protocolo de subasta combinatoria",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a <br>combinatorial auction protocol</br>.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La clase de representación, que en términos de subasta combinatoria define un lenguaje de licitación, debe ser necesariamente lo suficientemente expresiva como para representar todas las valoraciones posibles de interés, y también debe representar sucintamente las funciones más simples y comunes de la clase.6.1 Representaciones polinómicas Schapire y Sellie [17] dan un algoritmo de aprendizaje para polinomios multivariados dispersos que pueden usarse como base para un \"protocolo de subasta combinatoria\"."
            ],
            "translated_text": "",
            "candidates": [
                "protocolo de subasta combinatoria",
                "protocolo de subasta combinatoria"
            ],
            "error": []
        },
        "polynomial": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a <br>polynomial</br> number of queries.",
                "We also give conditions under which the resulting algorithms have <br>polynomial</br> communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with <br>polynomial</br> communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a <br>polynomial</br> number of value and demand queries.",
                "Here we mean <br>polynomial</br> in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee <br>polynomial</br> worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have <br>polynomial</br> communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the <br>polynomial</br> 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a <br>polynomial</br> can be defined as the number of non-zero coefficients in the <br>polynomial</br>, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed <br>polynomial</br> p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed <br>polynomial</br> p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow <br>polynomial</br> dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in <br>polynomial</br> time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed <br>polynomial</br> q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be <br>polynomial</br>-query elicited from value and demand queries if there is a fixed <br>polynomial</br> p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed <br>polynomial</br> p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is <br>polynomial</br> communication, rather than <br>polynomial</br> time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require <br>polynomial</br> time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the <br>polynomial</br> dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be <br>polynomial</br>-query elicited from value and demand queries if they can each be <br>polynomial</br>-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a <br>polynomial</br> number of queries, since A1, . . . , An are all <br>polynomial</br>-query learning algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes <br>polynomial</br> in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some <br>polynomial</br> p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed <br>polynomial</br> q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of <br>polynomial</br> size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of <br>polynomial</br> size.",
                "An efficient learning algorithm performs a <br>polynomial</br> number of queries, so the total communication of the resulting elicitation algorithm is <br>polynomial</br> in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 <br>polynomial</br> Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse <br>polynomial</br> has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A <br>polynomial</br> over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a <br>polynomial</br> [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the <br>polynomial</br> representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a <br>polynomial</br> number of queries and <br>polynomial</br> communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a <br>polynomial</br> number of queries and <br>polynomial</br> communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a <br>polynomial</br> number of queries, and makes <br>polynomial</br> communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On <br>polynomial</br>-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Los algoritmos de obtención resultantes realizan un número de consultas \"polinomiales\".",
                "También damos condiciones bajo las cuales los algoritmos resultantes tienen una comunicación \"polinomial\".",
                "En particular, obtenemos un algoritmo que provoca ofertas de XOR con comunicación \"polinomial\".",
                "El algoritmo de obtención resultante garantiza la obtención de la obtención en un número \"polinomio\" de consultas de valor y demanda.",
                "Aquí nos referimos a \"polinomio\" en el número de bienes, agentes y los tamaños de las funciones de valoración de los agentes en un esquema de codificación dado.",
                "La introducción de este parámetro también nos permite garantizar la comunicación \"polinomial\" en el peor de los casos, que generalmente no se puede lograr solo en el número de bienes y agentes.",
                "Por supuesto, una subasta combinatoria de un solo disparo donde los agentes proporcionan todas sus funciones de valoración a la vez también tendrían una comunicación \"polinomial\" en el tamaño de las valoraciones de los agentes, y solo requieren una consulta.",
                "O puede codificarse como el \"polinomio\" 2x1 · · · xm, que es mucho más sucinto.",
                "El tamaño de un \"polinomio\" puede definirse como el número de coeficientes no cero en el \"polinomio\", por ejemplo.",
                "La clase C de representación es PolynomialQuery que se puede aprender exactamente de las consultas de membresía y equivalencia si hay un \"polinomio\" fijo P (·, ·) y un algoritmo l con acceso a las consultas de membresía y equivalencia de un oráculo tal que para cualquier función objetivo f ∈ C ∈ C, L salidas después de la mayoría de p (tamaño (f), m) consultan una función ˜f ∈ C tal que ˜f (x) = f (x) para todas las instancias x.",
                "Del mismo modo, la clase C de representación se puede aprender de manera eficiente de las consultas de membresía y equivalencia si el algoritmo L genera una hipótesis correcta en el tiempo P (tamaño (F), M), para algunos \"polinómicos\" fijos P (·, ·).",
                "Dado que la función objetivo debe ser reconstruida, también necesariamente permitimos la dependencia \"polinomial\" del tamaño (F).2.2 PREVENTACIÓN DE PREFERENCIA En una subasta combinatoria, se debe asignar un conjunto de bienes M entre un conjunto de agentes n para maximizar la suma de las valoraciones de los agentes.",
                "Para hacer una analogía con la teoría del aprendizaje computacional, suponemos que todas las clases de representación consideradas son interpretables polinomialmente [11], lo que significa que el valor de un paquete puede calcularse en el tiempo \"polinomial\" dada la representación de las funciones de valoración.",
                "Más formalmente, una clase de representación (lenguaje de licitación) C es polinómicamente interpretable si existe un algoritmo que dada como entrada algunas v ∈ C y una instancia x ∈ X calcula el valor v (x) en el tiempo Q (tamaño (v), M), para algunas fijadas \"polinomio\" Q (·, ·) .2 En las rondas intermedias de una subasta (iterativa), el subastador habrá obtenido información sobre las funciones de valoración de los agentes a través de varios tipos de consultas.",
                "Las clases de representación V1 ,..., VN puede ser \"polinomial\"-Querida provocada de consultas de valor y demanda si hay un \"polinomio\" fijo P (·, ·) y un algoritmo l con acceso a las consultas de valor y demanda de los agentes de tal manera que para cualquier (v1,.., Vn) ∈ V1 ×...× VN, sal de L.VI (Si).",
                "Del mismo modo, la clase C de representación se puede provocar de manera eficiente de las consultas de valor y demanda si el algoritmo l genera una asignación óptima con comunicación P (tamaño (V1, ..., VN), M), para algunos \"polinomiales\" fijos P (·, ·).",
                "Además, un algoritmo de obtención eficiente es la comunicación \"polinomial\", en lugar del tiempo \"polinomial\".",
                "Por lo tanto, no es razonable requerir tiempo \"polinomial\" en la definición de un algoritmo de obtención de preferencia eficiente.",
                "Estos van desde algoritmos de propósito especial [7, 16] hasta enfoques que utilizan solucionadores IP estándar [1].182 Dado que las valoraciones no necesitan ser provocadas exactamente, inicialmente está menos claro si la dependencia \"polinomial\" del tamaño (V1, ..., VN) está justificada en esta configuración.",
                "Las clases de representación V1 ,..., VN puede ser \"polinomial\"-Querida provocada de consultas de valor y demanda si pueden ser cada una de las cuentas \"polinomiales\" aprendidas exactamente de las consultas de membresía y equivalencia.",
                "El procedimiento realiza un número \"polinomio\" de consultas, desde A1 ,..., Y son todos algoritmos de aprendizaje de mayor \"polinomio\".",
                "La conversión de algoritmos de aprendizaje eficientes a un algoritmo de obtención produce un algoritmo cuyas consultas tienen tamaños \"polinomiales\" en los parámetros my tamaño (V1, ..., VN).",
                "Por lo tanto, la comunicación de la valoración de manifiesto requiere tamaño en la mayoría de P (tamaño (VI), M), para una P \"polinomio\" que limita el tiempo de ejecución del algoritmo de aprendizaje eficiente.",
                "Representando el excedente πi al agente No puedo requerir espacio mayor que Q (tamaño (˜Vi), m) para algún \"polinomio\" fijo Q, porque suponemos que la representación elegida es interpretable polinomialmente y, por lo tanto, cualquier valor generado será de \"tamaño polinomio \".",
                "Por lo tanto, las consultas de valor y demanda, y las respuestas a estas consultas, son siempre de tamaño \"polinomial\".",
                "Un algoritmo de aprendizaje eficiente realiza un número de consultas \"polinomiales\", por lo que la comunicación total del algoritmo de obtención resultante es \"polinomio\" en los parámetros relevantes.",
                "La clase de representación, que en términos de subasta combinatoria define un lenguaje de licitación, debe ser necesariamente lo suficientemente expresiva como para representar todas las valoraciones posibles de interés, y también debe representar sucintamente las funciones más simples y comunes de la clase.6.1 Representaciones \"polinomiales\" Schapire y Sellie [17] dan un algoritmo de aprendizaje para polinomios multivariados dispersos que pueden usarse como base para un protocolo de subasta combinatoria.",
                "Un \"polinomio\" de T-Sparse tiene en la mayoría de los términos T, donde un término es un producto de variables, p.x1x3x4.",
                "Un \"polinomio\" sobre los números reales tiene coeficientes extraídos de los números reales.",
                "Los polinomios son expresivos: cada función de valoración v: 2m → ê+ puede escribirse de manera única como un \"polinomio\" [17].",
                "El algoritmo de aprendizaje para polinomios hace que en la mayoría de las consultas de equivalencia MTI +2 y como máximo (mti +1) (T2 i +3ti)",
                "Por lo tanto, obtenemos un algoritmo que provoca valoraciones generales con un número \"polinomial\" de consultas y comunicación \"polinomial \".6 6.2 Representaciones XOR El lenguaje de licitación XOR es estándar en la literatura de subastas combinatorias.",
                "Por lo tanto, obtenemos un algoritmo que puede provocar tales funciones con un número \"polinomial\" de consultas y comunicación \"polinomial\", solo en los parámetros N y M.186 7.",
                "El algoritmo de obtención resultante realiza un número de consultas \"polinomiales\", y hace una comunicación \"polinomial\" si los algoritmos de aprendizaje originales son eficientes.",
                "En la obtención de preferencias de tiempo \"polinomio\" con quitas de valor."
            ],
            "translated_text": "",
            "candidates": [
                "polinomio",
                "polinomiales",
                "polinomio",
                "polinomial",
                "polinomio",
                "polinomial",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinomial",
                "polinomio",
                "polinomial",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinómicos",
                "polinomio",
                "polinomial",
                "polinomio",
                "polinomial",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinomial",
                "polinomio",
                "polinomio",
                "polinomiales",
                "polinomio",
                "polinomial",
                "polinomial",
                "polinomio",
                "polinomial",
                "polinomio",
                "polinomial",
                "polinomio",
                "polinomial",
                "polinomiales",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinomiales",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinomio",
                "tamaño polinomio ",
                "polinomio",
                "polinomial",
                "polinomio",
                "polinomiales",
                "polinomio",
                "polinomio",
                "polinomiales",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinomio",
                "polinomio",
                "/2 consultas de membresía a un agente I, donde Ti es la escasez del \"polinómico\" que representa VI [17 VI [17 VI [17]polinomio",
                "polinómico",
                "polinomio",
                "polinomial",
                "polinomial ",
                "polinomio",
                "polinomial",
                "polinomial",
                "polinomio",
                "polinomiales",
                "polinomial",
                "polinomio",
                "polinomio"
            ],
            "error": []
        },
        "monotone dnf": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, <br>monotone dnf</br>, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, <br>monotone dnf</br>, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of <br>monotone dnf</br> formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, <br>monotone dnf</br> formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that <br>monotone dnf</br> formulae are the analogs of XOR bids in the learning theory literature.",
                "A <br>monotone dnf</br> formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize <br>monotone dnf</br> formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for <br>monotone dnf</br> ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that <br>monotone dnf</br> (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Nuestro procedimiento de conversión nos permite generar protocolos de subastas combinatorias a partir de algoritmos de aprendizaje para polinomios, \"DNF monótono\" y funciones de umbral lineal.",
                "Finalmente, utilizamos nuestro procedimiento de conversión para generar protocolos de subastas combinatorias a partir de algoritmos de aprendizaje para polinomios, \"DNF monótono\" y funciones de umbral lineal.",
                "Por ejemplo, la clase de representación de fórmulas \"monótonas DNF\" implica la clase de función de las funciones booleanas monótonas.",
                "Mostramos que los algoritmos de aprendizaje existentes para polinomios, fórmulas de \"monótono DNF\" y funciones de umbral lineal pueden convertirse en algoritmos de obtención de preferencias para valoraciones generales, valoraciones con liberación libre y valoraciones con sustitutabilidades, respectivamente.",
                "Blum et al.[5] Tenga en cuenta que las fórmulas \"monótonas DNF\" son los análogos de XOR BIDS en la literatura de la teoría del aprendizaje.",
                "Una fórmula de \"monótono dnf\" es una disyunción de conjunciones en la que las variables parecen no ser negadas, por ejemplo x1x2 ∨ x3 ∨ x2x4x5.",
                "Tenga en cuenta que tales fórmulas pueden representarse como ofertas XOR donde cada oferta atómica tiene valor 1;Así, las ofertas de XOR generalizan las fórmulas \"monótonas DNF\" de las funciones booleanas a de valor real.",
                "Estas ideas nos permiten generalizar un algoritmo de aprendizaje clásico para \"monótono DNF\" ([3] Teorema 6 Tenga en cuenta que el Teorema 1 se aplica incluso si las valoraciones no satisfacen la eliminación de libre. 185 1, [18] Teorema B) a un algoritmo de aprendizaje para un algoritmo de aprendizajeXOR BIDS.7 LEMMA 2.",
                "Esto contrasta con los resultados negativos de Blum et al. ([5], el teorema 2) que indica que \"DNF monótono\" (y, por lo tanto, XOR, las ofertas) no pueden provocarse de manera eficiente cuando las consultas de demanda están restringidas a precios lineales y anónimos sobre los bienes.6.3 Representaciones de umbral lineal Los polinomios, las ofertas de XOR y todos los idiomas basados en el lenguaje de OR (como XOR-OF o OF-XOR, y o ∗) no pueden representar sucintamente la valoración de la mayoría [11]."
            ],
            "translated_text": "",
            "candidates": [
                "monótono DNF",
                "DNF monótono",
                "monótono DNF",
                "DNF monótono",
                "monótono DNF",
                "monótonas DNF",
                "monótono DNF",
                "monótono DNF",
                "monótono DNF",
                "monótonas DNF",
                "monótono DNF",
                "monótono dnf",
                "monótono DNF",
                "monótonas DNF",
                "MONOTONE DNF",
                "monótono DNF",
                "monótono DNF",
                "DNF monótono"
            ],
            "error": []
        },
        "linear-threshold function": {
            "translated_key": "función de umbral lineal",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and <br>linear-threshold function</br>s.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and <br>linear-threshold function</br>s.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and <br>linear-threshold function</br>s can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Nuestro procedimiento de conversión nos permite generar protocolos de subastas combinatorias a partir de algoritmos de aprendizaje para polinomios, DNF monótono y \"función de umbral lineal\" s.",
                "Finalmente, utilizamos nuestro procedimiento de conversión para generar protocolos de subastas combinatorias a partir de algoritmos de aprendizaje para polinomios, DNF monótono y \"función de umbral lineal\" s.",
                "Mostramos que los algoritmos de aprendizaje existentes para polinomios, fórmulas DNF monótonas y \"función de umbral lineal\" se pueden convertir en algoritmos de obtención de preferencias para valoraciones generales, valoraciones con eliminación libre y valoraciones con sustitutabilidades, respectivamente."
            ],
            "translated_text": "",
            "candidates": [
                "función de umbral lineal",
                "función de umbral lineal",
                "función de umbral lineal",
                "función de umbral lineal",
                "función de umbral lineal",
                "función de umbral lineal"
            ],
            "error": []
        },
        "xor bid": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an <br>xor bid</br> is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An <br>xor bid</br> containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target <br>xor bid</br> in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an <br>xor bid</br> containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target <br>xor bid</br>.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an <br>xor bid</br>, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Recuerde que una \"oferta xor\" se caracteriza por un conjunto de paquetes B ⊆ 2m y una función de valor W: B → ê+ definida en esos paquetes, lo que induce la función de valoración: V (b) = max {b ∈B |B ⊆b} w (b) (7) Las ofertas XOR pueden representar valoraciones que satisfacen la desaceleración (y solo tales valoraciones), que nuevamente es la propiedad de que A ⊆ B ⇒ V (A) ≤ V (B).",
                "Una \"oferta XOR\" que contiene T Bids atómicas se puede aprender exactamente con consultas de equivalencia T + 1 y, como máximo, consultas de membresía TM.",
                "El algoritmo identificará cada oferta atómica en la \"oferta XOR\" objetivo a su vez.",
                "Inicialice la valoración manifiesta ˜v a la oferta que es idénticamente cero en todos los paquetes (esta es una \"oferta XOR\" que contiene 0 ofertas atómicas).",
                "Afirmamos que (t, v (t)) es una oferta atómica del objetivo \"XOR BID\".",
                "Por lo tanto, v (t)> v (t - {i}) para todos los elementos I en T. Esto implica que (t, v (t)) es una oferta atómica de v. Si este no fuera el caso, t tomaríaEl valor máximo de sus subconjuntos estrictos, por la definición de una \"oferta xor\", y tendríamos v (t) = max i∈T {max t ⊆t - {i} v (t)} = max i∈T{v (t - {i})} <v (t) que es una contradicción."
            ],
            "translated_text": "",
            "candidates": [
                "Xor oferta",
                "oferta xor",
                "Xor oferta",
                "oferta XOR",
                "Xor oferta",
                "oferta XOR",
                "Xor oferta",
                "oferta XOR",
                "Xor oferta",
                "XOR BID",
                "Xor oferta",
                "oferta xor"
            ],
            "error": []
        },
        "preference elicitation": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to <br>preference elicitation</br> Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the <br>preference elicitation</br> problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for <br>preference elicitation</br> algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the <br>preference elicitation</br> problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to learn a function via various types of queries, such as What is the functions value on these inputs?",
                "In <br>preference elicitation</br>, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and <br>preference elicitation</br> differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a <br>preference elicitation</br> algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "<br>preference elicitation</br> schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of <br>preference elicitation</br> regardless of incentive constraints, and on the relationship between the complexities of learning and <br>preference elicitation</br>.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and <br>preference elicitation</br>.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in <br>preference elicitation</br>.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of <br>preference elicitation</br> is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of <br>preference elicitation</br>.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 <br>preference elicitation</br> In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the <br>preference elicitation</br> problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in <br>preference elicitation</br> are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient <br>preference elicitation</br> algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must learn valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and <br>preference elicitation</br> settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize <br>preference elicitation</br>.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any <br>preference elicitation</br> protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO <br>preference elicitation</br> The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a <br>preference elicitation</br> algorithm, not a learning algorithm.",
                "That is, the resulting algorithm does not simply learn the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the <br>preference elicitation</br> problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the <br>preference elicitation</br> problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into <br>preference elicitation</br> algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can learn such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for <br>preference elicitation</br> algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of <br>preference elicitation</br>.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of <br>preference elicitation</br>.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the <br>preference elicitation</br> problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "<br>preference elicitation</br> and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly <br>preference elicitation</br>.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time <br>preference elicitation</br> with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Aplicación de algoritmos de aprendizaje a la \"obtención de preferencias\" Sebastien M. Lahaie División de Ingeniería y Ciencias Aplicadas Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes División de Ingeniería y Ciencias Aplicadas Harvard University Cambidge, MA 02138 Parkes@eecs.Harvard.edu Resumen Consideramos los paralelos entre el problema de \"PREVERSIÓN DE PRENDIDO\" en las subastas combinatorias y el problema de aprender una función desconocida de la teoría del aprendizaje.",
                "Mostramos que los algoritmos de aprendizaje pueden usarse como base para los algoritmos de \"obtención de preferencias\".",
                "Ha habido un trabajo reciente que exploró los vínculos entre el problema de la \"obtención de preferencia\" en las subastas combinatorias y el problema de aprender una función desconocida de la teoría del aprendizaje computacional [5, 19].",
                "En la \"obtención de preferencias\", el objetivo es obtener suficiente información parcial sobre las preferencias para poder calcular una asignación óptima.",
                "Aunque los objetivos del aprendizaje y la \"obtención de preferencias\" difieren un poco, está claro que estos problemas comparten una estructura similar, y no debería sorprendernos que las técnicas de un campo sean relevantes para el otro.",
                "Mostramos que cualquier algoritmo de aprendizaje exacto con consultas de membresía y equivalencia puede convertirse en un algoritmo de \"obtención de preferencia\" con consultas de valor y demanda.",
                "Los esquemas de \"obtención de preferencias\" no han considerado tradicionalmente este último parámetro.",
                "Nuestro enfoque está en la complejidad del tiempo y la comunicación de la \"obtención de preferencias\", independientemente de las limitaciones de incentivos, y en la relación entre las complejidades del aprendizaje y la \"obtención de preferencias\".",
                "Blum et al.[5] Proporcionar resultados relacionados con las complejidades del aprendizaje de consultas y la \"obtención de preferencias\".",
                "Consideran modelos con consultas de membresía y equivalencia en el aprendizaje de consultas, y las consultas de valor y demanda en la \"obtención de preferencias\".",
                "En contraste, nuestro trabajo muestra que dada una versión más general (pero aún bastante estándar) de consulta de demanda que el tipo que consideran, la complejidad de la \"obtención de preferencias\" no es mayor que la complejidad del aprendizaje.",
                "Nisan y Segal [12] estudian la complejidad de la comunicación de la \"obtención de preferencia\".",
                "Dado que la función objetivo debe reconstruirse, también necesariamente permitimos la dependencia polinomial del tamaño (F).2.2 \"PREVISIÓN DE PREFERENCIA\" En una subasta combinatoria, se debe asignar un conjunto de bienes M entre un conjunto de agentes n para maximizar la suma de las valoraciones de los agentes.",
                "El objetivo en el problema de la \"obtención de preferencia\" es construir un conjunto de valoraciones manifiestas de tal manera que: arg max (s1, ..., sn) ∈γ i∈N ˜Vi (Si) ⊆ arg max (s1, ..., Sn) ∈γ I∈N VI (Si) es decir, las valoraciones manifiestas proporcionan suficiente información para calcular una asignación que es óptima con respecto a las verdaderas valoraciones.",
                "Dos consultas típicas utilizadas en la \"obtención de preferencias\" son las consultas de valor y demanda.",
                "Por lo tanto, no es razonable requerir tiempo polinomial en la definición de un algoritmo eficiente de \"obtención de preferencias\".",
                "Entre los paralelos, entre las consultas de equivalencia y demanda, hemos descrito el aprendizaje de consultas y la configuración de \"obtención de preferencias\" de una manera que resalte sus similitudes.",
                "Dejamos para el trabajo futuro la cuestión de los precios de Lindahl para elegir minimizar la \"obtención de preferencias\".",
                "Nisan y Segal (Proposición 1, [12]) y Parkes (Teorema 1, [13]) muestran que los precios de apoyo de Lindahl deben revelarse necesariamente en el curso de cualquier protocolo de \"obtención de preferencia\" que termine con una asignación óptima.",
                "Desde el aprendizaje hasta la \"obtención de preferencias\", la clave para convertir un algoritmo de aprendizaje hasta un algoritmo de obtención es simular consultas de equivalencia con consultas de demanda y valor hasta que se encuentre una asignación óptima.",
                "Tenga en cuenta que el procedimiento de conversión da como resultado un algoritmo de \"PREVERSIÓN\", no un algoritmo de aprendizaje.",
                "Hemos demostrado que el problema de la \"obtención de preferencia\" para las clases de valoración V1 ,..., VN puede reducirse 184 Dado: Algoritmos de aprendizaje exactos A1 ,..., An para las clases de valoraciones v1 ,..., Vn respectivamente.",
                "Esto es significativo porque ya existen algoritmos de aprendizaje para una gran cantidad de clases de funciones, y porque a menudo puede ser más simple resolver cada subproblema de aprendizaje por separado que atacar el problema de \"obtención de preferencias\" directamente.",
                "Mostramos que los algoritmos de aprendizaje existentes para polinomios, fórmulas DNF monótonas y funciones de umbral lineal pueden convertirse en algoritmos de \"obtención de preferencias\" para valoraciones generales, valoraciones con desacuerdo y valoraciones con sustitutabilidades, respectivamente.",
                "Conclusiones y trabajos futuros Hemos demostrado que los algoritmos de aprendizaje exactos con consultas de membresía y equivalencia pueden usarse como base para los algoritmos de \"obtención de preferencias\" con consultas de valor y demanda.",
                "En el corazón de este resultado está el hecho de que las consultas de demanda pueden verse como consultas de equivalencia modificadas, especializadas al problema de \"obtención de preferencias\".",
                "Nuestro resultado nos permite aplicar la riqueza de los algoritmos de aprendizaje disponibles al problema de la \"obtención de preferencias\".",
                "Este es el problema de la \"obtención de preferencias\".",
                "\"PREVISIÓN DE PREFERENCIA\" y el aprendizaje de consulta.",
                "Diseño de subasta con costosa \"PREVENTACIÓN DE PREFERENCIA\".",
                "Sobre la \"obtención de preferencias\" en tiempo polinómico con quitas de valor."
            ],
            "translated_text": "",
            "candidates": [
                "obtención de preferencias",
                "obtención de preferencias",
                "PREVERSIÓN DE PRENDIDO",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencia",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencia",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencia",
                "obtención de preferencias",
                "PREVISIÓN DE PREFERENCIA",
                "obtención de preferencias",
                "obtención de preferencia",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencia",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "PREVERSIÓN",
                "obtención de preferencias",
                "obtención de preferencia",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "obtención de preferencias",
                "PREVISIÓN DE PREFERENCIA",
                "obtención de preferencias",
                "PREVENTACIÓN DE PREFERENCIA",
                "obtención de preferencias",
                "obtención de preferencias"
            ],
            "error": []
        },
        "learn": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Applying Learning Algorithms to Preference Elicitation Sebastien M. Lahaie Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 slahaie@eecs.harvard.edu David C. Parkes Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 parkes@eecs.harvard.edu ABSTRACT We consider the parallels between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from learning theory.",
                "We show that learning algorithms can be used as a basis for preference elicitation algorithms.",
                "The resulting elicitation algorithms perform a polynomial number of queries.",
                "We also give conditions under which the resulting algorithms have polynomial communication.",
                "Our conversion procedure allows us to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "In particular, we obtain an algorithm that elicits XOR bids with polynomial communication.",
                "Categories and Subject Descriptors F.2.0 [Analysis of Algorithms and Problem Complexity]: General; J.4 [Social and Behavioral Sciences]: Economics; I.2.6 [Artificial Intelligence]: Learning General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a combinatorial auction, agents may bid on bundles of goods rather than individual goods alone.",
                "Since there are an exponential number of bundles (in the number of goods), communicating values over these bundles can be problematic.",
                "Communicating valuations in a one-shot fashion can be prohibitively expensive if the number of goods is only moderately large.",
                "Furthermore, it might even be hard for agents to determine their valuations for single bundles [14].",
                "It is in the interest of such agents to have auction protocols which require them to bid on as few bundles as possible.",
                "Even if agents can efficiently compute their valuations, they might still be reluctant to reveal them entirely in the course of an auction, because such information may be valuable to their competitors.",
                "These considerations motivate the need for auction protocols that minimize the communication and information revelation required to determine an optimal allocation of goods.",
                "There has been recent work exploring the links between the preference elicitation problem in combinatorial auctions and the problem of learning an unknown function from computational learning theory [5, 19].",
                "In learning theory, the goal is to <br>learn</br> a function via various types of queries, such as What is the functions value on these inputs?",
                "In preference elicitation, the goal is to elicit enough partial information about preferences to be able to compute an optimal allocation.",
                "Though the goals of learning and preference elicitation differ somewhat, it is clear that these problems share similar structure, and it should come as no surprise that techniques from one field should be relevant to the other.",
                "We show that any exact learning algorithm with membership and equivalence queries can be converted into a preference elicitation algorithm with value and demand queries.",
                "The resulting elicitation algorithm guarantees elicitation in a polynomial number of value and demand queries.",
                "Here we mean polynomial in the number of goods, agents, and the sizes of the agents valuation functions in a given encoding scheme.",
                "Preference elicitation schemes have not traditionally considered this last parameter.",
                "We argue that complexity guarantees for elicitation schemes should allow dependence on this parameter.",
                "Introducing this parameter also allows us to guarantee polynomial worst-case communication, which usually cannot be achieved in the number of goods and agents alone.",
                "Finally, we use our conversion procedure to generate combinatorial auction protocols from learning algorithms for polynomials, monotone DNF, and linear-threshold functions.",
                "Of course, a one-shot combinatorial auction where agents provide their entire valuation functions at once would also have polynomial communication in the size of the agents valuations, and only require one query.",
                "The advantage of our scheme is that agents can be viewed as black-boxes that provide incremental information about their valuations.",
                "There is no burden on the agents to formulate their valuations in an encoding scheme of the auctioneers choosing.",
                "We expect this to be an important consideration in practice.",
                "Also, with our scheme entire revelation only happens in the worst-case. 180 For now, we leave the issue of incentives aside when deriving elicitation algorithms.",
                "Our focus is on the time and communication complexity of preference elicitation regardless of incentive constraints, and on the relationship between the complexities of learning and preference elicitation.",
                "Related work.",
                "Zinkevich et al. [19] consider the problem of learning restricted classes of valuation functions which can be represented using read-once formulas and Toolbox DNF.",
                "Read-once formulas can represent certain substitutabilities, but no complementarities, whereas the opposite holds for Toolbox DNF.",
                "Since their work is also grounded in learning theory, they allow dependence on the size of the target valuation as we do (though read-once valuations can always be succinctly represented anyway).",
                "Their work only makes use of value queries, which are quite limited in power.",
                "Because we allow ourselves demand queries, we are able to derive an elicitation scheme for general valuation functions.",
                "Blum et al. [5] provide results relating the complexities of query learning and preference elicitation.",
                "They consider models with membership and equivalence queries in query learning, and value and demand queries in preference elicitation.",
                "They show that certain classes of functions can be efficiently learned yet not efficiently elicited, and vice-versa.",
                "In contrast, our work shows that given a more general (yet still quite standard) version of demand query than the type they consider, the complexity of preference elicitation is no greater than the complexity of learning.",
                "We will show that demand queries can simulate equivalence queries until we have enough information about valuations to imply a solution to the elicitation problem.",
                "Nisan and Segal [12] study the communication complexity of preference elicitation.",
                "They show that for many rich classes of valuations, the worst-case communication complexity of computing an optimal allocation is exponential.",
                "Their results apply to the black-box model of computational complexity.",
                "In this model algorithms are allowed to ask questions about agent valuations and receive honest responses, without any insight into how the agents internally compute their valuations.",
                "This is in fact the basic framework of learning theory.",
                "Our work also addresses the issue of communication complexity, and we are able to derive algorithms that provide significant communication guarantees despite Nisan and Segals negative results.",
                "Their work motivates the need to rely on the sizes of agents valuation functions in stating worst-case results. 2.",
                "THE MODELS 2.1 Query Learning The query learning model we consider here is called exact learning from membership and equivalence queries, introduced by Angluin [2].",
                "In this model the learning algorithms objective is to exactly identify an unknown target function f : X → Y via queries to an oracle.",
                "The target function is drawn from a function class C that is known to the algorithm.",
                "Typically the domain X is some subset of {0, 1}m , and the range Y is either {0, 1} or some subset of the real numbers Ê.",
                "As the algorithm progresses, it constructs a manifest hypothesis ˜f which is its current estimate of the target function.",
                "Upon termination, the manifest hypothesis of a correct learning algorithm satisfies ˜f(x) = f(x) for all x ∈ X.",
                "It is important to specify the representation that will be used to encode functions from C. For example, consider the following function from {0, 1}m to Ê: f(x) = 2 if x consists of m 1s, and f(x) = 0 otherwise.",
                "This function may simply be represented as a list of 2m values.",
                "Or it may be encoded as the polynomial 2x1 · · · xm, which is much more succinct.",
                "The choice of encoding may thus have a significant impact on the time and space requirements of the learning algorithm.",
                "Let size(f) be the size of the encoding of f with respect to the given representation class.",
                "Most representation classes have a natural measure of encoding size.",
                "The size of a polynomial can be defined as the number of non-zero coefficients in the polynomial, for example.",
                "We will usually only refer to representation classes; the corresponding function classes will be implied.",
                "For example, the representation class of monotone DNF formulae implies the function class of monotone Boolean functions.",
                "Two types of queries are commonly used for exact learning: membership and equivalence queries.",
                "On a membership query, the learner presents some x ∈ X and the oracle replies with f(x).",
                "On an equivalence query, the learner presents its manifest hypothesis ˜f.",
                "The oracle either replies YES if ˜f = f, or returns a counterexample x such that ˜f(x) = f(x).",
                "An equivalence query is proper if size( ˜f) ≤ size(f) at the time the manifest hypothesis is presented.",
                "We are interested in efficient learning algorithms.",
                "The following definitions are adapted from Kearns and Vazirani [9]: Definition 1.",
                "The representation class C is polynomialquery exactly learnable from membership and equivalence queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to membership and equivalence queries of an oracle such that for any target function f ∈ C, L outputs after at most p(size(f), m) queries a function ˜f ∈ C such that ˜f(x) = f(x) for all instances x.",
                "Similarly, the representation class C is efficiently exactly learnable from membership and equivalence queries if the algorithm L outputs a correct hypothesis in time p(size(f), m), for some fixed polynomial p(·, ·).",
                "Here m is the dimension of the domain.",
                "Since the target function must be reconstructed, we also necessarily allow polynomial dependence on size(f). 2.2 Preference Elicitation In a combinatorial auction, a set of goods M is to be allocated among a set of agents N so as to maximize the sum of the agents valuations.",
                "Such an allocation is called efficient in the economics literature, but we will refer to it as optimal and reserve the term efficient to refer to computational efficiency.",
                "We let n = |N| and m = |M|.",
                "An allocation is a partition of the objects into bundles (S1, . . . , Sn), such that Si ∩ Sj = ∅ for all distinct i, j ∈ N. Let Γ be the set of possible allocations.",
                "Each agent i ∈ N has a valuation function vi : 2M → Ê over the space of possible bundles.",
                "Each valuation vi is drawn from a known class of valuations Vi.",
                "The valuation classes do not need to coincide.",
                "We will assume that all the valuations considered are normalized, meaning v(∅) = 0, and that there are no externalities, meaning vi(S1, ..., Sn) = vi(Si), for all agents i ∈ N, for any allocation (S1, ..., Sn) ∈ Γ (that is, an agent cares only about the bundle allocated to her).",
                "Valuations satisfying these conditions are called general valuations.1 We 1 Often general valuations are made to satisfy the additional 181 also assume that agents have quasi-linear utility functions, meaning that agents utilities can be divided into monetary and non-monetary components.",
                "If an agent i is allocated bundle S at price p, it derives utility ui(S, p) = vi(S) − p. A valuation function may be viewed as a vector of 2m − 1 non-negative real-values.",
                "Of course there may also be more succinct representations for certain valuation classes, and there has been much research into concise bidding languages for various types of valuations [11].",
                "A classic example which we will refer to again later is the XOR bidding language.",
                "In this language, the agent provides a list of atomic bids, which consist of a bundle together with its value.",
                "To determine the value of a bundle S given these bids, one searches for the bundle S of highest value listed in the atomic bids such that S ⊆ S. It is then the case that v(S) = v(S ).",
                "As in the learning theory setting, we will usually only refer to bidding languages rather than valuation classes, because the corresponding valuation classes will then be implied.",
                "For example, the XOR bidding language implies the class of valuations satisfying free-disposal, which is the condition that A ⊆ B ⇒ v(A) ≤ v(B).",
                "We let size(v1, . . . , vn) = Èn i=1 size(vi).",
                "That is, the size of a vector of valuations is the size of the concatenation of the valuations representations in their respective encoding schemes (bidding languages).",
                "To make an analogy to computational learning theory, we assume that all representation classes considered are polynomially interpretable [11], meaning that the value of a bundle may be computed in polynomial time given the valuation functions representation.",
                "More formally, a representation class (bidding language) C is polynomially interpretable if there exists an algorithm that given as input some v ∈ C and an instance x ∈ X computes the value v(x) in time q(size(v), m), for some fixed polynomial q(·, ·).2 In the intermediate rounds of an (iterative) auction, the auctioneer will have elicited information about the agents valuation functions via various types of queries.",
                "She will thus have constructed a set of manifest valuations, denoted ˜v1, . . . , ˜vn.3 The values of these functions may correspond exactly to the true agent values, or they may for example be upper or lower bounds on the true values, depending on the types of queries made.",
                "They may also simply be default or random values if no information has been acquired about certain bundles.",
                "The goal in the preference elicitation problem is to construct a set of manifest valuations such that: arg max (S1,...,Sn)∈Γ i∈N ˜vi(Si) ⊆ arg max (S1,...,Sn)∈Γ i∈N vi(Si) That is, the manifest valuations provide enough information to compute an allocation that is optimal with respect to the true valuations.",
                "Note that we only require one such optimal allocation. condition of free-disposal (monotonicity), but we do not need it at this point. 2 This excludes OR∗ , assuming P = NP, because interpreting bids from this language is NP-hard by reduction from weighted set-packing, and there is no well-studied representation class in learning theory that is clearly analogous to OR∗ . 3 This view of iterative auctions is meant to parallel the learning setting.",
                "In many combinatorial auctions, manifest valuations are not explicitly maintained but rather simply implied by the history of bids.",
                "Two typical queries used in preference elicitation are value and demand queries.",
                "On a value query, the auctioneer presents a bundle S ⊆ M and the agent responds with her (exact) value for the bundle v(S) [8].",
                "On a demand query, the auctioneer presents a vector of non-negative prices p ∈ Ê(2m ) over the bundles together with a bundle S. The agent responds YES if it is the case that S ∈ arg max S ⊆M   v(S ) − p(S ) ¡ or otherwise presents a bundle S such that v(S ) − p(S ) > v(S) − p(S) That is, the agent either confirms that the presented bundle is most preferred at the quoted prices, or indicates a better one [15].4 Note that we include ∅ as a bundle, so the agent will only respond YES if its utility for the proposed bundle is non-negative.",
                "Note also that communicating nonlinear prices does not necessarily entail quoting a price for every possible bundle.",
                "There may be more succinct ways of communicating this vector, as we show in section 5.",
                "We make the following definitions to parallel the query learning setting and to simplify the statements of later results: Definition 2.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if there is a fixed polynomial p(·, ·) and an algorithm L with access to value and demand queries of the agents such that for any (v1, . . . , vn) ∈ V1 × . . . × Vn, L outputs after at most p(size(v1, . . . , vn), m) queries an allocation (S1, . . . , Sn) ∈ arg max(S1,...,Sn)∈Γ È vi(Si).",
                "Similarly, the representation class C can be efficiently elicited from value and demand queries if the algorithm L outputs an optimal allocation with communication p(size(v1, . . . , vn), m), for some fixed polynomial p(·, ·).",
                "There are some key differences here with the query learning definition.",
                "We have dropped the term exactly since the valuation functions need not be determined exactly in order to compute an optimal allocation.",
                "Also, an efficient elicitation algorithm is polynomial communication, rather than polynomial time.",
                "This reflects the fact that communication rather than runtime is the bottleneck in elicitation.",
                "Computing an optimal allocation of goods even when given the true valuations is NP-hard for a wide range of valuation classes.",
                "It is thus unreasonable to require polynomial time in the definition of an efficient preference elicitation algorithm.",
                "We are happy to focus on the communication complexity of elicitation because this problem is widely believed to be more significant in practice than that of winner determination [11].5 4 This differs slightly from the definition provided by Blum et al. [5] Their demand queries are restricted to linear prices over the goods, where the price of a bundle is the sum of the prices of its underlying goods.",
                "In contrast our demand queries allow for nonlinear prices, i.e. a distinct price for every possible bundle.",
                "This is why the lower bound in their Theorem 2 does not contradict our result that follows. 5 Though the winner determination problem is NP-hard for general valuations, there exist many algorithms that solve it efficiently in practice.",
                "These range from special purpose algorithms [7, 16] to approaches using off-the-shelf IP solvers [1]. 182 Since the valuations need not be elicited exactly it is initially less clear whether the polynomial dependence on size(v1, . . . , vn) is justified in this setting.",
                "Intuitively, this parameter is justified because we must <br>learn</br> valuations exactly when performing elicitation, in the worst-case.",
                "We address this in the next section. 3.",
                "PARALLELSBETWEEN EQUIVALENCE AND DEMAND QUERIES We have described the query learning and preference elicitation settings in a manner that highlights their similarities.",
                "Value and membership queries are clear analogs.",
                "Slightly less obvious is the fact that equivalence and demand queries are also analogs.",
                "To see this, we need the concept of Lindahl prices.",
                "Lindahl prices are nonlinear and non-anonymous prices over the bundles.",
                "They are nonlinear in the sense that each bundle is assigned a price, and this price is not necessarily the sum of prices over its underlying goods.",
                "They are non-anonymous in the sense that two agents may face different prices for the same bundle of goods.",
                "Thus Lindahl prices are of the form pi(S), for all S ⊆ M, for all i ∈ N. Lindahl prices are presented to the agents in demand queries.",
                "When agents have normalized quasi-linear utility functions, Bikhchandani and Ostroy [4] show that there always exist Lindahl prices such that (S1, . . . , Sn) is an optimal allocation if and only if Si ∈ arg max Si   vi(Si) − pi(Si) ¡ ∀i ∈ N (1) (S1, . . . , Sn) ∈ arg max (S1,...,Sn)∈Γ i∈N pi(Si) (2) Condition (1) states that each agent is allocated a bundle that maximizes its utility at the given prices.",
                "Condition (2) states that the allocation maximizes the auctioneers revenue at the given prices.",
                "The scenario in which these conditions hold is called a Lindahl equilibrium, or often a competitive equilibrium.",
                "We say that the Lindahl prices support the optimal allocation.",
                "It is therefore sufficient to announce supporting Lindahl prices to verify an optimal allocation.",
                "Once we have found an allocation with supporting Lindahl prices, the elicitation problem is solved.",
                "The problem of finding an optimal allocation (with respect to the manifest valuations) can be formulated as a linear program whose solutions are guaranteed to be integral [4].",
                "The dual variables to this linear program are supporting Lindahl prices for the resulting allocation.",
                "The objective function to the dual program is: min pi(S) πs + i∈N πi (3) with πi = max S⊆M (˜vi(S) − pi(S)) πs = max (S1,...,Sn)∈Γ i∈N pi(Si) The optimal values of πi and πs correspond to the maximal utility to agent i with respect to its manifest valuation and the maximal revenue to the seller.",
                "There is usually a range of possible Lindahl prices supporting a given optimal allocation.",
                "The agents manifest valuations are in fact valid Lindahl prices, and we refer to them as maximal Lindahl prices.",
                "Out of all possible vectors of Lindahl prices, maximal Lindahl prices maximize the utility of the auctioneer, in fact giving her the entire social welfare.",
                "Conversely, prices that maximize the È i∈N πi component of the objective (the sum of the agents utilities) are minimal Lindahl prices.",
                "Any Lindahl prices will do for our results, but some may have better elicitation properties than others.",
                "Note that a demand query with maximal Lindahl prices is almost identical to an equivalence query, since in both cases we communicate the manifest valuation to the agent.",
                "We leave for future work the question of which Lindahl prices to choose to minimize preference elicitation.",
                "Considering now why demand and equivalence queries are direct analogs, first note that given the πi in some Lindahl equilibrium, setting pi(S) = max{0, ˜vi(S) − πi} (4) for all i ∈ N and S ⊆ M yields valid Lindahl prices.",
                "These prices leave every agent indifferent across all bundles with positive price, and satisfy condition (1).",
                "Thus demand queries can also implicitly communicate manifest valuations, since Lindahl prices will typically be an additive constant away from these by equality (4).",
                "In the following lemma we show how to obtain counterexamples to equivalence queries through demand queries.",
                "Lemma 1.",
                "Suppose an agent replies with a preferred bundle S when proposed a bundle S and supporting Lindahl prices p(S) (supporting with respect to the the agents manifest valuation).",
                "Then either ˜v(S) = v(S) or ˜v(S ) = v(S ).",
                "Proof.",
                "We have the following inequalities: ˜v(S) − p(S) ≥ ˜v(S ) − p(S ) ⇒ ˜v(S ) − ˜v(S) ≤ p(S ) − p(S) (5) v(S ) − p(S ) > v(S) − p(S) ⇒ v(S ) − v(S) > p(S ) − p(S) (6) Inequality (5) holds because the prices support the proposed allocation with respect to the manifest valuation.",
                "Inequality (6) holds because the agent in fact prefers S to S given the prices, according to its response to the demand query.",
                "If it were the case that ˜v(S) = v(S) and ˜v(S ) = v(S ), these inequalities would represent a contradiction.",
                "Thus at least one of S and S is a counterexample to the agents manifest valuation.",
                "Finally, we justify dependence on size(v1, . . . , vn) in elicitation problems.",
                "Nisan and Segal (Proposition 1, [12]) and Parkes (Theorem 1, [13]) show that supporting Lindahl prices must necessarily be revealed in the course of any preference elicitation protocol which terminates with an optimal allocation.",
                "Furthermore, Nisan and Segal (Lemma 1, [12]) state that in the worst-case agents prices must coincide with their valuations (up to a constant), when the valuation class is rich enough to contain dual valuations (as will be the case with most interesting classes).",
                "Since revealing Lindahl prices is a necessary condition for establishing an optimal allocation, and since Lindahl prices contain the same information as valuation functions (in the worst-case), allowing for dependence on size(v1, . . . , vn) in elicitation problems is entirely natural. 183 4.",
                "FROM LEARNING TO PREFERENCE ELICITATION The key to converting a learning algorithm to an elicitation algorithm is to simulate equivalence queries with demand and value queries until an optimal allocation is found.",
                "Because of our Lindahl price construction, when all agents reply YES to a demand query, we have found an optimal allocation, analogous to the case where an agent replies YES to an equivalence query when the target function has been exactly learned.",
                "Otherwise, we can obtain a counterexample to an equivalence query given an agents response to a demand query.",
                "Theorem 1.",
                "The representation classes V1, . . . , Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.",
                "Proof.",
                "Consider the elicitation algorithm in Figure 1.",
                "Each membership query in step 1 is simulated with a value query since these are in fact identical.",
                "Consider step 4.",
                "If all agents reply YES, condition (1) holds.",
                "Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents true valuations.",
                "Thus an optimal allocation has been found.",
                "Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.",
                "We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.",
                "This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the optimal allocation and Lindahl prices will be accepted by all agents.",
                "The procedure performs a polynomial number of queries, since A1, . . . , An are all polynomial-query learning algorithms.",
                "Note that the conversion procedure results in a preference elicitation algorithm, not a learning algorithm.",
                "That is, the resulting algorithm does not simply <br>learn</br> the valuations exactly, then compute an optimal allocation.",
                "Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough information has been gathered by proposing an allocation to the agents through demand queries.",
                "It is possible to generate a Lindahl equilibrium for valuations v1, . . . , vn using an allocation and prices derived using manifest valuations ˜v1, . . . , ˜vn, and finding an optimal allocation does not imply that the agents valuations have been exactly learned.",
                "The use of demand queries to simulate equivalence queries enables this early halting.",
                "We would not obtain this property with equivalence queries based on manifest valuations. 5.",
                "COMMUNICATION COMPLEXITY In this section, we turn to the issue of the communication complexity of elicitation.",
                "Nisan and Segal [12] show that for a variety of rich valuation spaces (such as general and submodular valuations), the worst-case communication burden of determining Lindahl prices is exponential in the number of goods, m. The communication burden is measured in terms of the number of bits transmitted between agents and auctioneer in the case of discrete communication, or in terms of the number of real numbers transmitted in the case of continuous communication.",
                "Converting efficient learning algorithms to an elicitation algorithm produces an algorithm whose queries have sizes polynomial in the parameters m and size(v1, . . . , vn).",
                "Theorem 2.",
                "The representation classes V1, . . . , Vn can be efficiently elicited from value and demand queries if they can each be efficiently exactly learned from membership and equivalence queries.",
                "Proof.",
                "The size of any value query is O(m): the message consists solely of the queried bundle.",
                "To communicate Lindahl prices to agent i, it is sufficient to communicate the agents manifest valuation function and the value πi, by equality (4).",
                "Note that an efficient learning algorithm never builds up a manifest hypothesis of superpolynomial size, because the algorithms runtime would then also be superpolynomial, contradicting efficiency.",
                "Thus communicating the manifest valuation requires size at most p(size(vi), m), for some polynomial p that upper-bounds the runtime of the efficient learning algorithm.",
                "Representing the surplus πi to agent i cannot require space greater than q(size(˜vi), m) for some fixed polynomial q, because we assume that the chosen representation is polynomially interpretable, and thus any value generated will be of polynomial size.",
                "We must also communicate to i its allocated bundle, so the total message size for a demand query is at most p(size(vi), m) + q(p(size(vi), m), m)+O(m).",
                "Clearly, an agents response to a value or demand query has size at most q(size(vi), m) + O(m).",
                "Thus the value and demand queries, and the responses to these queries, are always of polynomial size.",
                "An efficient learning algorithm performs a polynomial number of queries, so the total communication of the resulting elicitation algorithm is polynomial in the relevant parameters.",
                "There will often be explicit bounds on the number of membership and equivalence queries performed by a learning algorithm, with constants that are not masked by big-O notation.",
                "These bounds can be translated to explicit bounds on the number of value and demand queries made by the resulting elicitation algorithm.",
                "We upper-bounded the size of the manifest hypothesis with the runtime of the learning algorithm in Theorem 2.",
                "We are likely to be able to do much better than this in practice.",
                "Recall that an equivalence query is proper if size( ˜f) ≤ size(f) at the time the query is made.",
                "If the learning algorithms equivalence queries are all proper, it may then also be possible to provide tight bounds on the communication requirements of the resulting elicitation algorithm.",
                "Theorem 2 show that elicitation algorithms that depend on the size(v1, . . . , vn) parameter sidestep Nisan and Segals [12] negative results on the worst-case communication complexity of efficient allocation problems.",
                "They provide guarantees with respect to the sizes of the instances of valuation functions faced at any run of the algorithm.",
                "These algorithms will fare well if the chosen representation class provides succinct representations for the simplest and most common of valuations, and thus the focus moves back to one of compact yet expressive bidding languages.",
                "We consider these issues below. 6.",
                "APPLICATIONS In this section, we demonstrate the application of our methods to particular representation classes for combinatorial valuations.",
                "We have shown that the preference elicitation problem for valuation classes V1, . . . , Vn can be reduced 184 Given: exact learning algorithms A1, . . . , An for valuations classes V1, . . . , Vn respectively.",
                "Loop until there is a signal to halt: 1.",
                "Run A1, . . . , An in parallel on their respective agents until each requires a response to an equivalence query, or has halted with the agents exact valuation. 2.",
                "Compute an optimal allocation (S1, . . . , Sn) and corresponding Lindahl prices with respect to the manifest valuations ˜v1, . . . , ˜vn determined so far. 3.",
                "Present the allocation and prices to the agents in the form of a demand query. 4.",
                "If they all reply YES, output the allocation and halt.",
                "Otherwise there is some agent i that has replied with some preferred bundle Si.",
                "Perform value queries on Si and Si to find a counterexample to ˜vi, and provide it to Ai.",
                "Figure 1: Converting learning algorithms to an elicitation algorithm. to the problem of finding an efficient learning algorithm for each of these classes separately.",
                "This is significant because there already exist learning algorithms for a wealth of function classes, and because it may often be simpler to solve each learning subproblem separately than to attack the preference elicitation problem directly.",
                "We can develop an elicitation algorithm that is tailored to each agents valuation, with the underlying learning algorithms linked together at the demand query stages in an algorithm-independent way.",
                "We show that existing learning algorithms for polynomials, monotone DNF formulae, and linear-threshold functions can be converted into preference elicitation algorithms for general valuations, valuations with free-disposal, and valuations with substitutabilities, respectively.",
                "We focus on representations that are polynomially interpretable, because the computational learning theory literature places a heavy emphasis on computational tractability [18].",
                "In interpreting the methods we emphasize the expressiveness and succinctness of each representation class.",
                "The representation class, which in combinatorial auction terms defines a bidding language, must necessarily be expressive enough to represent all possible valuations of interest, and should also succinctly represent the simplest and most common functions in the class. 6.1 Polynomial Representations Schapire and Sellie [17] give a learning algorithm for sparse multivariate polynomials that can be used as the basis for a combinatorial auction protocol.",
                "The equivalence queries made by this algorithm are all proper.",
                "Specifically, their algorithm learns the representation class of t-sparse multivariate polynomials over the real numbers, where the variables may take on values either 0 or 1.",
                "A t-sparse polynomial has at most t terms, where a term is a product of variables, e.g. x1x3x4.",
                "A polynomial over the real numbers has coefficients drawn from the real numbers.",
                "Polynomials are expressive: every valuation function v : 2M → Ê+ can be uniquely written as a polynomial [17].",
                "To get an idea of the succinctness of polynomials as a bidding language, consider the additive and single-item valuations presented by Nisan [11].",
                "In the additive valuation, the value of a bundle is the number of goods the bundle contains.",
                "In the single-item valuation, all bundles have value 1, except ∅ which has value 0 (i.e. the agent is satisfied as soon as it has acquired a single item).",
                "It is not hard to show that the single-item valuation requires polynomials of size 2m − 1, while polynomials of size m suffice for the additive valuation.",
                "Polynomials are thus appropriate for valuations that are mostly additive, with a few substitutabilities and complementarities that can be introduced by adjusting coefficients.",
                "The learning algorithm for polynomials makes at most mti +2 equivalence queries and at most (mti +1)(t2 i +3ti)/2 membership queries to an agent i, where ti is the sparcity of the polynomial representing vi [17].",
                "We therefore obtain an algorithm that elicits general valuations with a polynomial number of queries and polynomial communication.6 6.2 XOR Representations The XOR bidding language is standard in the combinatorial auctions literature.",
                "Recall that an XOR bid is characterized by a set of bundles B ⊆ 2M and a value function w : B → Ê+ defined on those bundles, which induces the valuation function: v(B) = max {B ∈B | B ⊆B} w(B ) (7) XOR bids can represent valuations that satisfy free-disposal (and only such valuations), which again is the property that A ⊆ B ⇒ v(A) ≤ v(B).",
                "The XOR bidding language is slightly less expressive than polynomials, because polynomials can represent valuations that do not satisfy free-disposal.",
                "However, XOR is as expressive as required in most economic settings.",
                "Nisan [11] notes that XOR bids can represent the single-item valuation with m atomic bids, but 2m − 1 atomic bids are needed to represent the additive valuation.",
                "Since the opposite holds for polynomials, these two languages are incomparable in succinctness, and somewhat complementary for practical use.",
                "Blum et al. [5] note that monotone DNF formulae are the analogs of XOR bids in the learning theory literature.",
                "A monotone DNF formula is a disjunction of conjunctions in which the variables appear unnegated, for example x1x2 ∨ x3 ∨ x2x4x5.",
                "Note that such formulae can be represented as XOR bids where each atomic bid has value 1; thus XOR bids generalize monotone DNF formulae from Boolean to real-valued functions.",
                "These insights allow us to generalize a classic learning algorithm for monotone DNF ([3] Theorem 6 Note that Theorem 1 applies even if valuations do not satisfy free-disposal. 185 1, [18] Theorem B) to a learning algorithm for XOR bids.7 Lemma 2.",
                "An XOR bid containing t atomic bids can be exactly learned with t + 1 equivalence queries and at most tm membership queries.",
                "Proof.",
                "The algorithm will identify each atomic bid in the target XOR bid in turn.",
                "Initialize the manifest valuation ˜v to the bid that is identically zero on all bundles (this is an XOR bid containing 0 atomic bids).",
                "Present ˜v as an equivalence query.",
                "If the response is YES, we are done.",
                "Otherwise we obtain a bundle S for which v(S) = ˜v(S).",
                "Create a bundle T as follows.",
                "First initialize T = S. For each item i in T, check via a membership query whether v(T) = v(T − {i}).",
                "If so set T = T − {i}.",
                "Otherwise leave T as is and proceed to the next item.",
                "We claim that (T, v(T)) is an atomic bid of the target XOR bid.",
                "For each item i in T, we have v(T) = v(T − {i}).",
                "To see this, note that at some point when generating T, we had a ¯T such that T ⊆ ¯T ⊆ S and v( ¯T) > v( ¯T − {i}), so that i was kept in ¯T.",
                "Note that v(S) = v( ¯T) = v(T) because the value of the bundle S is maintained throughout the process of deleting items.",
                "Now assume v(T) = v(T − {i}).",
                "Then v( ¯T) = v(T) = v(T − {i}) > v( ¯T − {i}) which contradicts free-disposal, since T − {i} ⊆ ¯T − {i}.",
                "Thus v(T) > v(T − {i}) for all items i in T. This implies that (T, v(T)) is an atomic bid of v. If this were not the case, T would take on the maximum value of its strict subsets, by the definition of an XOR bid, and we would have v(T) = max i∈T { max T ⊆T −{i} v(T )} = max i∈T {v(T − {i})} < v(T) which is a contradiction.",
                "We now show that v(T) = ˜v(T), which will imply that (T, v(T)) is not an atomic bid of our manifest hypothesis by induction.",
                "Assume that every atomic bid (R, ˜v(R)) identified so far is indeed an atomic bid of v (meaning R is indeed listed in an atomic bid of v as having value v(R) = ˜v(R)).",
                "This assumption holds vacuously when the manifest valuation is initialized.",
                "Using the notation from (7), let ( ˜B, ˜w) be our hypothesis, and (B, w) be the target function.",
                "We have ˜B ⊆ B, and ˜w(B) = w(B) for B ∈ ˜B by assumption.",
                "Thus, ˜v(S) = max {B∈ ˜B | B⊆S} ˜w(B) = max {B∈ ˜B | B⊆S} w(B) ≤ max {B∈B | B⊆S} w(B) = v(S) (8) Now assume v(T) = ˜v(T).",
                "Then, ˜v(T) = v(T) = v(S) = ˜v(S) (9) The second equality follows from the fact that the value remains constant when we derive T from S. The last inequality holds because S is a counterexample to the manifest valuation.",
                "From equation (9) and free-disposal, we 7 The cited algorithm was also used as the basis for Zinkevich et al.s [19] elicitation algorithm for Toolbox DNF.",
                "Recall that Toolbox DNF are polynomials with non-negative coefficients.",
                "For these representations, an equivalence query can be simulated with a value query on the bundle containing all goods. have ˜v(T) < ˜v(S).",
                "Then again from equation (9) it follows that v(S) < ˜v(S).",
                "This contradicts (8), so we in fact have v(T) = ˜v(T).",
                "Thus (T, v(T)) is not currently in our hypothesis as an atomic bid, or we would correctly have ˜v(T) = v(T) by the induction hypothesis.",
                "We add (T, v(T)) to our hypothesis and repeat the process above, performing additional equivalence queries until all atomic bids have been identified.",
                "After each equivalence query, an atomic bid is identified with at most m membership queries.",
                "Each counterexample leads to the discovery of a new atomic bid.",
                "Thus we make at most tm membership queries and exactly t + 1 equivalence queries.",
                "The number of time steps required by this algorithm is essentially the same as the number of queries performed, so the algorithm is efficient.",
                "Applying Theorem 2, we therefore obtain the following corollary: Theorem 3.",
                "The representation class of XOR bids can be efficiently elicited from value and demand queries.",
                "This contrasts with Blum et al.s negative results ([5], Theorem 2) stating that monotone DNF (and hence XOR bids) cannot be efficiently elicited when the demand queries are restricted to linear and anonymous prices over the goods. 6.3 Linear-Threshold Representations Polynomials, XOR bids, and all languages based on the OR bidding language (such as XOR-of-OR, OR-of-XOR, and OR∗ ) fail to succinctly represent the majority valuation [11].",
                "In this valuation, bundles have value 1 if they contain at least m/2 items, and value 0 otherwise.",
                "More generally, consider the r-of-S family of valuations where bundles have value 1 if they contain at least r items from a specified set of items S ⊆ M, and value 0 otherwise.",
                "The majority valuation is a special case of the r-of-S valuation with r = m/2 and S = M. These valuations are appropriate for representing substitutabilities: once a required set of items has been obtained, no other items can add value.",
                "Letting k = |S|, such valuations are succinctly represented by r-of-k threshold functions.",
                "These functions take the form of linear inequalities: xi1 + . . . + xik ≥ r where the function has value 1 if the inequality holds, and 0 otherwise.",
                "Here i1, . . . , ik are the items in S. Littlestones WINNOW 2 algorithm can <br>learn</br> such functions using equivalence queries only, using at most 8r2 + 5k + 14kr ln m + 1 queries [10].",
                "To provide this guarantee, r must be known to the algorithm, but S (and k) are unknown.",
                "The elicitation algorithm that results from WINNOW 2 uses demand queries only (value queries are not necessary here because the values of counterexamples are implied when there are only two possible values).",
                "Note that r-of-k threshold functions can always be succinctly represented in O(m) space.",
                "Thus we obtain an algorithm that can elicit such functions with a polynomial number of queries and polynomial communication, in the parameters n and m alone. 186 7.",
                "CONCLUSIONS AND FUTURE WORK We have shown that exact learning algorithms with membership and equivalence queries can be used as a basis for preference elicitation algorithms with value and demand queries.",
                "At the heart of this result is the fact that demand queries may be viewed as modified equivalence queries, specialized to the problem of preference elicitation.",
                "Our result allows us to apply the wealth of available learning algorithms to the problem of preference elicitation.",
                "A learning approach to elicitation also motivates a different approach to designing elicitation algorithms that decomposes neatly across agent types.",
                "If the designer knowns beforehand what types of preferences each agent is likely to exhibit (mostly additive, many substitutes, etc...), she can design learning algorithms tailored to each agents valuations and integrate them into an elicitation scheme.",
                "The resulting elicitation algorithm makes a polynomial number of queries, and makes polynomial communication if the original learning algorithms are efficient.",
                "We do not require that agent valuations can be learned with value and demand queries.",
                "Equivalence queries can only be, and need only be, simulated up to the point where an optimal allocation has been computed.",
                "This is the preference elicitation problem.",
                "Theorem 1 implies that elicitation with value and demand queries is no harder than learning with membership and equivalence queries, but it does not provide any asymptotic improvements over the learning algorithms complexity.",
                "It would be interesting to find examples of valuation classes for which elicitation is easier than learning.",
                "Blum et al. [5] provide such an example when considering membership/value queries only (Theorem 4).",
                "In future work we plan to address the issue of incentives when converting learning algorithms to elicitation algorithms.",
                "In the learning setting, we usually assume that oracles will provide honest responses to queries; in the elicitation setting, agents are usually selfish and will provide possibly dishonest responses so as to maximize their utility.",
                "We also plan to implement the algorithms for learning polynomials and XOR bids as elicitation algorithms, and test their performance against other established combinatorial auction protocols [6, 15].",
                "An interesting question here is: which Lindahl prices in the maximal to minimal range are best to quote in order to minimize information revelation?",
                "We conjecture that information revelation is reduced when moving from maximal to minimal Lindahl prices, namely as we move demand queries further away from equivalence queries.",
                "Finally, it would be useful to determine whether the OR∗ bidding language [11] can be efficiently learned (and hence elicited), given this languages expressiveness and succinctness for a wide variety of valuation classes.",
                "Acknowledgements We would like to thank Debasis Mishra for helpful discussions.",
                "This work is supported in part by NSF grant IIS0238147. 8.",
                "REFERENCES [1] A. Andersson, M. Tenhunen, and F. Ygge.",
                "Integer programming for combinatorial auction winner determination.",
                "In Proceedings of the Fourth International Conference on Multiagent Systems (ICMAS-00), 2000. [2] D. Angluin.",
                "Learning regular sets from queries and counterexamples.",
                "Information and Computation, 75:87-106, November 1987. [3] D. Angluin.",
                "Queries and concept learning.",
                "Machine Learning, 2:319-342, 1987. [4] S. Bikhchandani and J. Ostroy.",
                "The Package Assignment Model.",
                "Journal of Economic Theory, 107(2), December 2002. [5] A. Blum, J. Jackson, T. Sandholm, and M. Zinkevich.",
                "Preference elicitation and query learning.",
                "In Proc. 16th Annual Conference on Computational Learning Theory (COLT), Washington DC, 2003. [6] W. Conen and T. Sandholm.",
                "Partial-revelation VCG mechanism for combinatorial auctions.",
                "In Proc. the 18th National Conference on Artificial Intelligence (AAAI), 2002. [7] Y. Fujishima, K. Leyton-Brown, and Y. Shoham.",
                "Taming the computational complexity of combinatorial auctions: Optimal and approximate approaches.",
                "In Proc. the 16th International Joint Conference on Artificial Intelligence (IJCAI), pages 548-553, 1999. [8] B. Hudson and T. Sandholm.",
                "Using value queries in combinatorial auctions.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. [9] M. J. Kearns and U. V. Vazirani.",
                "An Introduction to Computational Learning Theory.",
                "MIT Press, 1994. [10] N. Littlestone.",
                "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm.",
                "Machine Learning, 2:285-318, 1988. [11] N. Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In Proc. the ACM Conference on Electronic Commerce, pages 1-12, 2000. [12] N. Nisan and I. Segal.",
                "The communication requirements of efficient allocations and supporting Lindahl prices.",
                "Working Paper, Hebrew University, 2003. [13] D. C. Parkes.",
                "Price-based information certificates for minimal-revelation combinatorial auctions.",
                "In Padget et al., editor, Agent-Mediated Electronic Commerce IV,LNAI 2531, pages 103-122.",
                "Springer-Verlag, 2002. [14] D. C. Parkes.",
                "Auction design with costly preference elicitation.",
                "In Special Issues of Annals of Mathematics and AI on the Foundations of Electronic Commerce, Forthcoming (2003). [15] D. C. Parkes and L. H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In Proc. 17th National Conference on Artificial Intelligence (AAAI-00), pages 74-81, 2000. [16] T. Sandholm, S. Suri, A. Gilpin, and D. Levine.",
                "CABOB: A fast optimal algorithm for combinatorial auctions.",
                "In Proc. the 17th International Joint Conference on Artificial Intelligence (IJCAI), pages 1102-1108, 2001. [17] R. Schapire and L. Sellie.",
                "Learning sparse multivariate polynomials over a field with queries and counterexamples.",
                "In Proceedings of the Sixth Annual ACM Workshop on Computational Learning Theory, pages 17-26.",
                "ACM Press, 1993. 187 [18] L. Valiant.",
                "A theory of the learnable.",
                "Commun.",
                "ACM, 27(11):1134-1142, Nov. 1984. [19] M. Zinkevich, A. Blum, and T. Sandholm.",
                "On polynomial-time preference elicitation with value-queries.",
                "In Proc. 4th ACM Conference on Electronic Commerce (ACM-EC), San Diego, CA, June 2003. 188"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En la teoría del aprendizaje, el objetivo es \"aprender\" una función a través de varios tipos de consultas, como ¿cuál es el valor de las funciones en estas entradas?",
                "Intuitivamente, este parámetro está justificado porque debemos \"aprender\" las valoraciones exactamente al realizar una obtención, en el peor de los casos.",
                "Es decir, el algoritmo resultante no simplemente \"aprende\" las valoraciones exactamente, luego calcula una asignación óptima.",
                "Aquí i1 ,..., IK son los elementos en el algoritmo de S. Littlestones Winnow 2 pueden \"aprender\" tales funciones usando consultas de equivalencia solamente, usando como máximo 8R2 + 5K + 14KR LN M + 1 Consultas [10]."
            ],
            "translated_text": "",
            "candidates": [
                "aprender",
                "aprender",
                "aprender",
                "aprender",
                "aprender",
                "aprende",
                "aprender",
                "aprender"
            ],
            "error": []
        }
    }
}